#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.ArithmeticException 277 (22,267,325) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 204 20 129 31 330 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (51,173,236) (51,173,236) 334 156 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 37 329 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 37 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 37 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 37 329 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 37 329 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 206 109 166 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 204 20 129 31 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (36,351) (36,351) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (36,351) 225 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (36,351) (36,351) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 339 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1050 | -= -> /=
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
202 2 203 1 88 1 208 1 108 2 71 1 286 2 317 1 28 1 133 1 94 1 8 9 293 1 212 2 10 2 142 4 15 1 217 6 16 3 58 9 270 1 43 1 78 2 275 1 47 5 352 1 177 1 17 2 
202 2 203 1 88 1 208 1 108 2 71 1 286 2 317 1 28 1 133 1 94 1 8 9 293 1 212 2 10 2 142 4 15 1 217 6 16 3 58 9 270 1 43 1 78 2 275 1 47 5 352 1 177 1 17 2 
202 2 203 1 88 1 208 1 108 2 71 1 286 2 317 1 28 1 133 1 94 1 8 10 293 1 212 2 10 2 142 5 15 1 217 7 16 4 58 10 270 1 43 1 78 2 275 1 47 6 352 1 177 1 17 2 
202 2 203 1 88 1 208 1 108 1 71 1 286 2 317 1 28 1 133 1 94 1 8 7 293 1 212 2 10 2 142 3 15 1 217 4 16 2 58 7 270 1 43 1 78 2 275 1 47 4 352 1 17 2 
293 1 212 1 202 1 10 1 142 2 15 1 217 3 16 1 58 4 43 1 108 2 71 1 286 1 47 3 94 1 8 4 177 1 17 1 
293 1 212 1 113 1 202 1 10 1 58 2 208 1 43 1 78 1 286 1 47 1 94 1 133 1 8 2 188 1 165 1 
293 1 212 2 10 2 142 1 217 1 88 1 16 1 58 3 43 1 78 1 47 2 94 1 8 3 
202 1 88 1 70 1 108 2 71 1 286 1 186 1 94 1 8 9 293 1 212 2 10 2 142 4 15 1 217 7 16 3 58 9 270 1 43 1 78 1 47 5 352 1 177 1 17 1 
202 1 88 1 70 1 108 2 71 1 286 1 186 1 94 1 8 9 293 1 212 2 10 2 142 4 15 1 217 7 16 3 58 9 270 1 43 1 78 1 47 5 352 1 177 1 17 1 
167 1 82 1 339 1 
82 1 248 2 231 1 
235 2 34 2 237 1 38 2 265 2 174 1 205 2 249 2 
64 1 65 1 240 1 310 1 205 3 2 1 207 2 107 1 314 1 110 1 26 1 91 1 265 2 54 1 72 1 112 1 138 1 213 2 190 2 34 3 214 1 38 2 99 2 39 1 73 1 195 2 349 1 249 2 170 1 298 1 235 2 237 1 149 1 174 1 253 1 48 1 124 1 
235 1 34 1 237 1 38 1 265 1 143 1 205 1 145 1 291 1 249 1 
173 1 236 1 
34 1 38 1 143 1 167 1 205 1 51 2 3 2 249 1 235 1 173 1 221 1 265 1 80 1 274 1 82 1 
294 1 29 1 51 1 3 1 159 1 
126 1 294 1 167 1 82 1 51 2 3 2 159 1 282 1 
51 1 3 1 159 1 
34 1 294 1 38 1 143 1 205 1 51 1 145 1 3 1 249 1 235 1 237 1 265 1 291 1 62 1 
82 1 
126 1 252 1 294 1 167 1 82 1 51 2 3 2 159 1 
260 2 322 1 126 1 152 1 294 2 234 1 167 1 51 5 101 2 3 5 159 2 313 1 350 1 42 1 332 1 305 1 82 1 258 1 137 2 
174 1 339 1 
34 2 38 2 205 2 249 1 235 1 130 1 265 1 174 2 30 1 
299 1 191 1 118 1 
65 1 213 1 190 1 138 1 34 1 214 1 205 1 2 1 195 1 170 1 283 1 107 1 110 1 174 1 54 1 112 1 
235 1 250 1 34 3 38 3 265 3 174 1 205 3 249 3 
34 1 38 1 265 1 143 1 205 1 291 1 249 1 
235 1 34 1 130 1 38 1 265 1 143 1 205 1 30 1 249 1 
65 1 240 1 128 1 205 4 2 1 51 1 3 1 207 2 107 1 314 1 315 1 130 1 110 1 26 1 91 1 265 3 54 1 72 1 112 1 138 1 213 1 190 1 34 4 214 1 38 3 99 1 39 1 143 1 73 1 195 1 349 1 249 3 170 1 298 1 235 2 250 1 173 1 221 1 237 1 80 1 174 1 253 1 274 1 306 1 
34 2 250 1 347 1 38 2 265 1 174 1 162 1 205 2 249 1 
34 3 128 1 38 3 143 1 205 3 51 1 3 1 194 1 249 3 235 1 250 2 130 1 173 1 221 1 80 1 265 3 274 1 82 1 306 1 
34 2 38 2 205 2 249 2 235 1 299 1 250 1 130 1 118 1 265 2 
65 1 213 1 190 1 138 1 34 1 214 1 205 1 2 1 195 1 170 1 107 1 110 1 174 1 54 1 112 1 
97 1 213 1 190 1 138 1 34 1 214 1 205 1 2 1 195 1 170 1 107 1 272 1 110 1 174 1 112 1 
240 1 337 1 309 1 183 1 204 1 241 1 207 2 314 1 163 1 191 2 9 1 324 1 327 1 39 1 99 4 73 1 14 1 349 2 298 1 299 2 118 2 149 2 253 1 254 1 
34 1 38 1 265 1 143 1 274 1 205 1 249 1 52 1 
65 1 138 1 213 1 190 1 34 2 214 1 128 1 38 1 205 2 2 1 195 1 249 1 170 1 107 1 299 1 250 1 110 1 265 1 54 1 112 1 
151 1 34 5 233 1 347 1 38 5 128 1 205 5 249 4 235 1 250 2 130 1 265 4 162 1 174 1 
34 2 38 2 265 2 143 1 205 2 291 1 249 2 52 1 
22 1 224 1 
22 1 224 1 
267 1 277 1 
267 1 277 1 
267 1 277 1 
22 1 344 1 224 1 
22 1 344 1 224 1 
22 1 267 1 224 1 277 1 
22 1 325 1 224 1 
22 1 344 1 224 1 
336 1 22 1 224 1 
336 1 22 1 224 1 
336 1 22 1 224 1 
98 1 180 1 224 2 86 1 311 1 51 2 3 2 169 3 22 2 219 1 79 1 131 2 303 2 175 2 200 1 82 1 176 1 335 2 123 2 
278 1 224 1 205 2 51 1 3 1 22 1 341 1 131 1 287 1 265 2 187 1 247 1 98 1 34 2 38 2 325 1 249 2 169 1 103 1 303 1 174 1 175 1 239 1 335 1 
286 1 202 1 17 1 
286 1 202 1 113 1 
76 1 209 1 202 3 113 1 141 1 17 2 
76 1 209 1 202 2 113 1 122 1 17 1 
76 2 209 1 202 2 113 1 17 1 
260 1 126 1 181 1 182 1 204 1 20 1 241 1 51 5 3 5 159 1 4 1 6 2 244 2 345 1 247 1 163 1 231 1 137 1 322 1 324 1 294 4 167 1 40 1 248 3 101 1 74 2 103 1 42 2 350 3 82 2 276 1 239 1 
260 2 126 1 152 1 49 1 181 1 182 2 204 3 20 3 226 1 241 3 51 9 3 9 159 6 244 6 29 5 134 1 163 3 231 3 137 2 322 1 324 3 294 7 116 5 167 1 40 2 248 9 101 2 74 6 42 6 350 8 251 1 238 1 255 1 82 5 239 4 
260 1 152 1 182 1 204 1 20 1 241 1 51 3 3 3 6 1 244 2 345 1 163 1 231 2 137 1 324 1 294 2 167 1 40 1 248 4 101 1 74 2 350 3 42 2 82 3 276 1 239 1 
260 1 152 1 182 1 204 2 20 2 241 2 51 4 3 4 6 2 244 4 345 1 163 2 231 3 137 1 324 2 294 3 167 1 40 1 248 7 101 1 74 4 350 5 42 4 251 1 238 1 255 1 82 4 276 1 239 2 
339 1 246 1 
214 1 104 1 
346 1 
214 1 110 1 
0 1 138 1 214 3 110 1 81 1 246 2 
138 1 214 1 110 1 
214 1 105 1 
63 1 337 2 153 2 99 7 338 1 13 1 144 1 241 1 340 1 349 3 331 1 132 1 149 4 228 1 254 3 163 1 230 1 
63 1 337 2 153 2 99 7 338 1 13 1 144 1 241 1 340 1 349 3 331 1 132 1 149 4 228 1 254 3 163 1 230 1 
63 1 337 2 295 1 153 2 13 1 99 7 338 1 144 1 241 1 340 1 349 3 331 1 132 1 149 4 228 1 254 3 163 1 230 1 
337 1 324 1 153 1 99 11 204 2 20 2 241 1 340 1 129 1 349 4 330 1 53 1 77 1 197 2 132 1 149 7 228 2 254 2 256 2 163 2 31 1 
240 1 337 3 153 2 338 1 241 3 340 1 207 2 314 1 132 1 228 1 320 1 163 3 164 1 230 2 39 1 99 14 13 1 144 2 168 1 349 6 331 2 149 8 253 1 254 4 
66 1 202 2 185 1 211 1 286 1 266 1 94 1 8 2 112 1 292 1 293 1 212 1 190 1 213 1 232 1 113 1 215 1 10 1 326 1 328 1 141 1 217 1 195 1 58 2 170 1 43 1 78 1 47 1 257 1 17 1 
66 1 202 2 211 1 24 1 286 1 318 1 266 1 8 3 112 1 292 1 293 1 212 1 190 1 213 1 232 1 113 1 215 1 10 1 326 1 141 1 328 1 217 2 195 1 58 3 170 1 43 1 78 1 47 1 84 1 17 1 
202 2 211 1 24 1 286 1 318 1 266 1 8 2 112 1 293 1 190 1 213 1 232 1 113 1 215 1 326 1 328 1 141 1 217 2 195 1 58 2 170 1 43 1 78 1 47 1 17 1 
212 1 213 1 190 1 214 1 67 1 10 1 328 2 195 1 58 1 170 1 210 1 107 1 78 2 44 1 211 2 110 1 59 1 264 1 266 2 84 1 8 1 112 1 201 1 
66 1 202 2 185 1 211 1 286 1 318 1 266 1 94 1 8 1 112 1 292 1 212 1 190 1 213 1 232 1 113 1 215 1 10 1 326 1 328 1 141 1 195 1 58 1 170 1 78 1 17 1 
192 1 
260 1 126 1 67 1 156 1 157 1 1 1 51 2 3 2 159 2 107 2 316 1 110 1 112 1 137 1 32 1 190 2 213 2 322 1 214 1 40 1 101 1 195 2 218 1 170 1 350 1 42 1 173 1 236 1 334 1 201 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 126 1 173 1 236 1 252 1 156 1 51 2 334 1 3 2 218 1 159 1 
260 1 32 1 322 1 173 1 236 1 156 1 101 1 51 1 334 1 3 1 218 1 137 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
32 1 173 1 236 1 156 1 51 1 334 1 3 1 218 1 
260 1 32 1 322 1 173 1 236 1 156 1 101 1 51 1 334 1 3 1 218 1 137 1 
298 1 314 1 240 1 13 1 338 1 39 1 253 1 73 1 183 1 339 1 207 2 
64 1 106 1 337 1 240 2 85 1 204 2 20 2 241 1 340 1 207 4 53 1 161 1 314 2 93 1 72 1 163 2 191 11 324 1 39 2 99 14 73 1 349 6 298 2 77 1 299 11 197 3 118 4 220 1 149 8 174 1 253 2 254 2 256 3 
65 1 64 1 240 1 128 1 85 1 205 2 2 1 207 2 283 1 107 1 314 1 110 1 265 1 54 1 72 1 112 1 138 1 190 1 213 1 34 2 214 1 323 1 38 1 39 1 99 2 73 1 195 1 249 1 349 1 170 1 298 1 250 1 118 1 304 1 149 1 174 1 150 1 253 1 
179 1 128 1 85 1 2 2 314 3 5 1 91 2 318 1 265 1 54 2 230 1 96 1 321 2 190 3 138 2 191 7 324 2 13 1 99 20 144 1 195 3 331 1 149 10 64 1 65 2 337 4 240 3 153 1 338 1 204 2 205 3 20 2 241 3 340 4 207 6 107 1 110 2 72 1 112 2 163 3 213 3 34 3 214 2 115 2 38 1 39 3 73 3 296 2 349 10 249 1 170 2 298 3 299 7 250 1 172 2 118 7 174 2 253 3 254 8 
125 1 64 1 127 1 240 2 67 1 310 2 183 1 68 1 205 1 207 4 312 1 107 2 314 2 110 2 318 1 111 1 265 1 72 1 112 2 190 8 213 7 34 1 214 3 140 1 38 1 39 2 99 2 73 2 195 8 249 1 349 1 170 2 298 2 147 1 250 1 149 1 253 2 257 1 201 1 
223 1 337 1 240 1 85 1 204 1 205 1 20 1 241 1 207 2 130 1 314 1 265 1 163 1 34 1 191 1 38 1 324 1 39 1 99 3 73 1 249 1 349 2 298 1 299 1 235 1 118 1 149 1 253 1 254 1 
191 1 240 1 309 1 99 2 39 1 183 1 73 1 204 1 340 1 207 2 298 1 299 1 314 1 118 1 149 2 253 1 254 1 163 1 
191 1 337 1 240 1 9 1 324 1 99 2 39 1 183 1 73 1 241 1 207 2 349 2 298 1 299 1 314 1 118 1 253 1 254 1 
240 1 337 1 204 1 183 1 20 1 241 1 340 1 207 2 314 1 163 1 191 2 324 1 39 1 99 4 73 1 349 2 298 1 299 2 118 2 149 2 253 1 254 2 
191 1 140 1 240 1 309 1 99 2 39 1 73 1 204 1 340 1 207 2 298 1 299 1 314 1 118 1 149 2 253 1 254 1 163 1 
191 1 337 1 140 1 240 1 9 1 324 1 99 2 39 1 73 1 241 1 207 2 349 2 298 1 299 1 314 1 118 1 253 1 254 1 
240 1 337 1 204 1 20 1 241 1 340 1 207 2 314 1 163 1 191 2 140 1 324 1 39 1 99 4 73 1 349 2 298 1 299 2 118 2 149 2 253 1 254 2 
191 2 337 1 240 1 324 1 39 1 99 4 73 1 204 1 20 1 241 1 340 1 349 2 207 2 298 1 299 2 314 1 118 2 149 2 253 1 254 2 163 1 
64 1 65 1 240 1 205 1 2 1 207 2 107 1 314 1 110 1 91 1 54 1 72 1 112 1 138 1 190 1 213 1 34 1 214 1 99 2 39 1 73 1 195 1 349 1 170 1 298 1 149 1 174 1 253 1 
64 1 240 1 263 1 205 1 2 1 207 2 107 1 314 1 110 1 72 1 112 1 97 1 138 1 190 1 213 1 34 1 214 1 99 2 39 1 73 1 195 1 349 1 170 1 298 1 272 1 149 1 174 1 253 1 
240 1 337 1 85 1 204 1 20 1 241 1 340 1 207 2 314 1 163 1 191 2 324 1 39 1 99 4 73 1 349 2 298 1 299 2 118 2 149 2 253 1 254 2 
65 1 337 1 240 1 204 1 205 1 20 1 241 1 2 1 340 1 207 2 314 1 110 1 91 1 54 1 163 1 112 1 138 1 190 1 213 1 34 1 191 2 214 1 115 1 324 1 99 4 39 1 73 1 195 1 349 2 170 1 298 1 299 2 118 2 149 2 253 1 254 2 257 1 
279 1 240 1 85 1 204 1 205 1 20 1 241 1 340 1 207 2 130 1 314 1 265 1 163 1 34 1 191 1 324 1 38 1 39 1 99 3 73 1 349 1 249 1 298 1 235 1 299 1 118 1 149 2 253 1 254 1 
314 1 240 1 37 1 329 1 39 1 253 1 245 1 207 2 164 1 
314 1 240 1 37 1 329 1 39 1 253 1 245 1 207 2 164 1 
314 1 240 1 37 1 329 1 39 1 253 1 245 1 207 2 164 1 
314 1 240 1 37 1 329 1 39 1 253 1 245 1 207 2 164 1 
314 1 240 1 37 1 329 1 39 1 253 1 245 1 207 2 164 1 
22 1 219 1 79 1 303 1 131 1 224 1 175 1 311 1 92 1 335 1 
278 1 325 1 
271 1 22 1 148 1 303 1 131 1 224 1 175 1 7 1 335 1 
98 1 180 1 224 1 86 1 311 1 51 1 3 1 169 2 22 1 219 1 79 1 131 1 303 1 175 1 82 1 176 1 335 1 123 1 
98 1 180 1 224 1 86 1 311 1 51 1 3 1 169 2 22 1 219 1 79 1 131 1 303 1 175 1 82 1 176 1 335 1 123 1 
98 1 180 1 224 1 86 1 311 1 51 1 3 1 169 2 22 1 219 1 79 1 131 1 303 1 175 1 82 1 176 1 335 1 123 1 
90 1 344 1 135 1 
90 1 344 1 135 1 
336 1 297 1 
336 1 297 1 135 1 
341 1 287 1 
278 1 86 1 224 1 205 2 51 1 3 1 158 1 22 1 341 1 131 1 287 1 265 2 187 1 247 1 34 2 294 1 325 1 38 2 169 1 249 2 103 1 303 1 174 1 175 1 239 1 123 1 335 1 
90 1 344 1 
336 1 297 1 135 1 
64 1 240 1 85 1 310 2 19 1 68 1 205 2 207 2 69 1 314 1 110 1 72 1 112 1 190 2 213 2 34 2 214 1 38 2 348 1 39 1 99 2 73 1 195 2 349 1 170 1 298 1 147 1 119 1 149 1 253 1 61 1 
66 1 213 2 190 2 262 1 232 1 202 2 113 1 215 1 141 1 268 1 195 2 170 1 160 1 286 1 318 1 266 1 257 1 112 1 17 1 
66 1 213 1 190 1 262 1 232 1 202 2 113 1 215 1 141 1 195 1 170 1 286 1 318 1 27 1 266 1 112 1 17 1 
213 1 190 1 214 1 67 1 195 1 170 1 160 1 107 1 110 1 264 1 266 1 95 1 112 1 201 1 
66 1 213 1 190 1 262 1 232 1 202 2 113 1 215 1 141 1 268 1 195 1 170 1 160 1 286 1 318 1 266 1 112 1 17 1 
60 1 
234 1 305 1 339 1 
260 1 42 1 350 1 322 1 33 1 11 1 101 1 137 1 
260 4 0 1 126 3 1 1 51 5 87 2 3 5 55 2 137 4 231 6 138 3 322 4 190 3 324 2 234 1 100 2 101 4 195 3 146 1 104 3 198 1 105 2 281 2 204 2 20 2 241 2 242 2 159 5 284 2 107 1 110 3 244 6 246 2 112 3 163 2 213 3 214 10 114 1 167 2 40 2 248 12 216 2 296 2 74 6 170 4 350 9 171 2 42 8 80 2 305 1 120 1 83 1 82 8 257 1 
260 2 126 1 261 1 204 1 206 1 20 1 51 1 241 1 3 1 159 1 109 1 244 4 319 1 163 1 137 2 231 3 322 2 324 1 166 1 167 1 100 1 248 6 101 2 74 4 350 5 42 3 77 1 197 1 301 1 82 4 256 1 
260 1 205 1 51 1 241 1 3 1 284 1 288 1 265 1 291 1 163 2 230 1 137 1 322 1 34 1 38 1 143 1 144 1 100 2 101 1 145 1 168 1 249 1 331 1 42 2 350 2 235 1 237 1 62 1 
260 1 322 1 234 1 167 1 101 1 42 1 350 1 305 1 82 1 137 1 
324 2 204 2 100 2 20 2 248 10 296 1 241 2 74 5 284 1 42 5 350 5 244 5 82 5 163 2 231 5 
126 1 167 1 82 1 51 1 3 1 159 1 
260 2 126 2 152 1 67 1 157 1 1 2 51 3 3 3 159 4 107 2 316 1 110 1 112 1 137 2 322 1 190 4 213 4 214 1 269 1 40 2 101 2 195 4 170 1 146 2 350 2 42 2 45 1 198 1 201 1 
65 1 240 1 205 3 2 1 207 2 107 1 314 1 26 1 110 1 91 1 265 2 54 1 72 1 112 1 190 1 213 1 138 1 34 3 214 1 38 2 99 1 39 1 73 1 195 1 349 1 249 2 170 1 298 1 235 2 237 1 174 1 253 1 
260 1 322 1 153 1 40 1 167 2 248 4 1 1 101 1 74 2 42 2 350 1 244 2 82 4 231 2 137 1 
303 1 273 1 335 1 
303 1 273 1 335 1 
341 1 303 1 311 1 289 1 335 1 
303 1 273 1 335 1 
303 1 222 1 335 1 
303 1 222 1 335 1 
303 1 222 1 335 1 
303 1 335 1 
22 1 224 1 
337 2 240 2 153 1 99 8 39 2 338 1 13 1 144 1 241 1 340 1 349 4 207 4 331 1 117 1 314 2 149 4 253 2 254 3 163 1 230 1 
13 1 338 1 339 1 
337 1 240 1 324 1 39 1 99 4 204 1 20 1 241 1 340 1 349 2 207 2 25 1 314 1 149 2 253 1 254 2 163 1 
337 1 324 1 99 7 204 1 20 1 241 1 340 1 349 4 53 1 77 1 197 1 149 3 254 2 256 2 163 1 
337 5 240 2 153 1 338 1 204 2 20 2 241 3 340 4 207 4 53 1 161 1 314 2 163 3 230 2 324 2 13 1 99 23 39 2 12 1 144 1 349 12 331 2 117 2 197 2 220 1 149 11 253 2 254 9 256 2 
99 1 256 1 349 1 
197 1 149 1 99 1 
240 1 337 2 324 1 39 1 99 6 204 1 20 1 296 1 241 1 340 1 207 2 349 3 314 1 25 1 149 3 253 1 254 3 163 1 
261 1 240 1 337 1 204 2 20 2 206 1 241 2 340 1 207 2 109 1 314 1 319 1 163 2 164 1 324 2 166 1 99 12 39 1 349 6 197 1 77 1 149 6 253 1 254 2 256 1 
337 1 99 6 144 1 241 1 340 1 349 3 331 1 149 3 254 2 163 1 230 1 
337 1 240 1 13 1 12 1 99 3 39 1 338 1 340 1 349 2 207 2 331 1 117 1 314 1 149 1 253 1 254 2 230 1 
240 1 337 3 39 1 99 10 144 1 241 2 168 1 340 2 207 2 349 5 331 2 314 1 149 5 253 1 254 5 163 2 164 1 230 2 
240 1 39 1 99 2 204 1 340 1 207 2 314 1 149 2 253 1 254 1 163 1 164 1 
337 1 240 1 324 1 39 1 99 4 204 1 20 1 241 1 340 1 349 2 207 2 314 1 149 2 253 1 254 2 163 1 164 1 
240 3 337 1 12 1 99 3 39 3 340 1 349 2 207 6 331 1 117 1 314 3 149 1 199 1 253 3 254 2 164 1 230 1 
240 3 99 5 39 3 204 1 20 1 129 1 207 6 349 1 197 2 77 1 314 3 25 1 149 4 253 3 199 1 256 1 163 1 164 1 31 1 
240 1 337 2 153 1 338 1 241 1 207 2 314 1 163 1 164 1 230 1 166 1 99 8 39 1 13 1 144 1 349 4 331 1 197 1 77 1 149 4 253 1 254 2 256 1 
337 2 240 2 153 1 338 1 204 1 20 1 241 1 340 1 207 4 53 1 314 2 25 1 163 2 230 1 164 1 166 1 13 1 99 11 39 2 144 1 349 5 331 1 77 1 197 1 149 6 253 2 254 3 256 2 
261 1 240 3 337 3 153 1 338 1 204 2 206 1 20 2 241 3 340 1 207 6 109 1 25 1 314 3 319 1 163 3 230 1 164 1 324 2 166 1 13 1 99 19 39 3 144 1 349 10 331 1 117 1 197 1 77 1 149 9 253 3 254 4 256 1 
261 1 240 3 337 3 153 1 338 1 204 2 20 2 206 1 241 2 340 2 207 6 109 1 25 1 314 3 319 1 163 3 230 1 164 1 324 1 166 1 13 1 99 17 39 3 144 1 349 7 331 1 117 1 197 1 77 1 149 10 253 3 254 5 256 1 
240 1 337 2 153 1 338 1 241 1 207 2 314 1 163 1 164 1 230 1 166 1 99 8 39 1 13 1 144 1 349 4 331 1 197 1 77 1 149 4 253 1 254 2 256 1 
261 1 240 1 337 1 204 2 20 2 206 1 241 2 340 1 207 2 109 1 314 1 319 1 163 2 164 1 324 2 166 1 99 12 39 1 349 6 197 1 77 1 149 6 253 1 254 2 256 1 
261 1 240 4 337 3 153 1 338 1 204 2 206 1 20 2 241 2 340 2 207 8 109 1 25 1 314 4 319 1 163 3 230 1 164 1 324 1 166 1 13 1 99 18 39 4 144 1 349 8 331 1 117 2 77 1 197 1 149 10 253 4 254 5 256 1 
261 1 240 4 337 3 204 3 206 1 20 3 241 2 340 3 207 8 109 1 314 4 319 1 163 3 164 1 324 2 166 1 99 16 39 4 349 7 117 2 77 1 197 1 149 9 253 4 199 1 254 6 256 1 
337 3 99 7 338 1 13 2 144 1 241 1 340 3 349 4 331 3 149 3 254 6 163 1 230 3 
261 1 240 4 337 3 153 1 338 1 204 2 206 1 20 2 241 2 340 1 207 8 109 1 314 4 319 1 163 3 230 1 164 1 324 1 166 1 13 1 99 18 39 4 144 1 349 8 331 1 117 2 77 1 197 1 149 10 253 4 199 1 254 4 256 1 
34 1 347 1 38 1 174 1 162 1 227 1 205 1 
34 1 308 1 347 1 38 1 193 1 184 1 205 1 243 1 174 1 162 1 227 1 229 1 
107 1 190 1 213 1 67 1 339 1 195 1 
65 1 138 1 213 1 190 1 34 2 214 1 38 1 205 2 2 1 195 1 249 1 170 1 107 1 250 1 110 1 265 1 174 1 112 1 
65 1 138 2 213 1 190 1 34 2 214 3 38 2 281 1 143 1 205 2 2 1 195 1 249 1 170 1 146 1 250 1 110 2 221 1 265 2 174 1 274 1 105 1 112 1 
281 1 205 2 2 1 21 1 110 2 265 2 112 1 97 1 190 2 213 2 138 2 34 2 214 3 38 2 143 1 195 2 249 1 170 1 146 1 250 1 221 1 174 1 274 1 105 1 
281 1 51 2 21 1 3 2 159 1 107 1 110 1 246 1 112 1 136 1 190 3 213 3 138 1 214 4 56 1 167 1 195 3 170 1 146 1 104 1 80 1 105 1 82 1 
138 1 213 3 190 3 214 4 281 1 167 1 51 2 216 1 21 1 3 2 195 3 159 1 170 1 146 1 107 1 104 1 110 1 80 1 105 1 82 1 246 1 112 1 
125 1 190 1 213 1 195 1 112 1 170 1 
0 1 107 1 138 1 190 1 213 1 36 1 214 1 110 1 351 1 155 1 195 1 112 1 170 2 
65 1 337 2 240 2 153 1 85 1 338 1 205 2 241 1 2 1 207 4 314 2 110 1 91 1 265 1 54 1 163 1 112 1 230 1 138 1 213 1 190 1 34 2 191 1 214 1 115 1 38 1 348 1 99 6 13 1 39 2 144 1 73 2 195 1 349 3 249 1 331 1 170 1 298 2 299 1 250 1 172 1 118 1 149 3 174 2 253 2 254 2 257 1 
260 2 126 1 51 3 3 3 87 1 242 1 159 2 107 1 246 1 137 2 55 1 213 1 322 2 190 1 214 2 294 1 234 1 167 1 101 2 216 1 195 1 350 1 42 1 104 1 80 1 305 1 198 1 82 1 
125 1 0 1 213 2 190 2 138 1 214 2 114 1 195 2 170 2 110 1 246 1 257 1 112 1 
213 4 190 4 214 1 67 1 21 1 195 4 170 1 107 1 343 1 110 1 257 1 201 1 112 1 
179 1 138 1 190 1 213 1 36 1 214 1 110 1 57 1 225 1 155 1 195 1 112 1 170 2 
107 1 190 1 213 1 286 1 202 1 113 1 215 1 195 1 112 1 170 1 
213 2 190 2 214 1 68 1 195 2 69 1 170 1 110 1 318 1 257 1 112 1 
213 4 190 5 214 3 67 1 127 1 68 1 195 5 170 2 146 1 107 1 343 1 110 2 111 1 257 1 201 1 112 2 
213 4 190 5 139 1 214 3 67 1 68 1 195 5 170 2 146 1 107 1 343 1 110 2 111 1 257 1 201 1 112 2 
97 1 138 1 213 1 190 1 34 2 214 1 38 1 205 2 2 1 195 1 249 1 170 1 107 1 250 1 110 1 265 1 174 1 112 1 
146 1 0 1 138 1 190 1 213 1 36 1 214 1 110 1 351 1 155 1 195 1 112 1 170 2 
34 1 18 1 38 1 19 1 205 1 41 1 75 1 119 1 61 1 
89 1 290 1 75 1 
18 1 174 1 50 1 41 1 75 1 
178 1 18 2 294 1 143 1 167 1 50 2 51 2 3 2 75 1 41 2 89 1 173 1 221 1 80 1 174 1 274 1 82 1 306 1 290 1 
293 1 43 1 339 1 
293 1 212 1 43 1 10 1 47 1 8 1 58 1 
78 1 328 1 8 1 
208 2 293 1 212 1 43 1 35 1 302 1 280 1 10 1 47 1 94 1 8 3 58 3 
293 1 212 1 43 1 108 1 10 1 47 1 217 1 8 2 58 2 
212 1 286 1 202 1 10 1 142 1 47 1 15 1 94 1 8 1 58 1 17 1 
293 1 212 1 10 1 47 1 94 1 8 1 58 1 
293 2 212 1 43 1 10 1 94 1 8 1 58 1 
293 1 212 2 10 2 58 2 196 1 285 1 342 1 47 1 94 1 8 2 
293 1 212 1 10 1 142 1 217 2 16 1 58 3 270 1 43 1 47 2 94 1 8 3 352 1 
293 1 212 1 113 1 202 2 10 1 141 1 217 1 58 2 43 1 286 1 333 1 47 1 94 1 8 2 17 1 
293 1 212 2 10 2 142 1 217 2 16 1 58 4 43 1 108 1 47 2 94 1 8 4 177 1 
293 1 212 1 43 1 10 1 47 1 94 1 8 1 58 1 
293 2 212 1 35 1 10 1 142 1 217 2 16 1 58 4 208 1 43 2 302 1 47 3 121 1 8 4 
259 1 293 1 212 1 10 1 217 1 58 2 23 1 43 1 186 1 47 1 94 1 8 2 
212 1 293 1 35 2 10 1 58 3 208 2 43 1 302 1 47 1 94 1 307 1 8 3 
300 2 46 1 154 1 47 2 
212 1 10 1 94 1 8 1 58 1 102 1 
293 1 212 1 43 1 10 1 47 1 94 1 217 1 352 1 8 2 58 2 
189 1 
293 1 212 1 43 1 10 1 47 1 94 1 8 1 58 1 
208 1 293 1 212 1 43 1 10 1 47 1 94 1 217 1 352 1 8 3 58 3 
142 1 47 1 121 1 16 1 
293 1 47 1 

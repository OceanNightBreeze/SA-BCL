#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (168,297,328) (168,297,328) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (168,297,328) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (168,297,328) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (56,288) (56,288) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (168,297,328) (168,297,328) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 253 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (216,317) 66 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 182 141 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (216,317) (216,317) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (216,317) 66 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (216,317) (216,317) 
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4636 | 0 -> -1
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.money.Money:isZero()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
62 2 309 1 95 6 271 9 191 4 122 5 170 1 124 2 219 2 223 2 150 2 359 1 109 2 51 1 339 1 84 1 180 1 18 1 346 1 115 1 163 1 135 1 206 1 116 1 348 2 60 1 211 9 22 3 
62 2 309 1 95 6 271 9 191 4 122 5 170 1 124 2 219 2 223 2 150 2 359 1 51 1 109 2 339 1 84 1 180 1 18 1 346 1 115 1 163 1 135 1 206 1 116 1 348 2 60 1 211 9 22 3 
62 2 309 1 95 7 271 10 191 5 122 6 170 1 124 2 219 2 223 2 150 2 359 1 51 1 109 2 339 1 84 1 180 1 18 1 346 1 115 1 163 1 135 1 206 1 116 1 348 2 60 1 211 10 22 4 
62 2 309 1 95 4 271 7 191 3 122 4 124 2 219 2 223 2 150 2 359 1 51 1 109 1 339 1 84 1 180 1 18 1 346 1 115 1 163 1 135 1 206 1 116 1 348 2 60 1 211 7 22 2 
62 1 309 1 95 3 271 4 191 2 122 3 170 1 219 1 115 1 163 1 135 1 223 1 150 1 348 1 211 4 359 1 22 1 109 2 
339 1 62 1 309 1 271 2 190 1 122 1 219 1 124 1 18 1 135 1 150 1 348 1 211 2 264 1 359 1 33 1 
62 2 309 1 95 1 271 3 180 1 191 1 122 2 124 1 135 1 348 2 211 3 359 1 22 1 
62 2 309 1 95 7 271 9 191 4 26 1 122 5 124 1 219 1 170 1 223 1 150 1 359 1 109 2 180 1 346 1 115 1 163 1 135 1 283 1 348 2 60 1 211 9 22 3 
62 2 309 1 95 7 271 9 191 4 26 1 122 5 124 1 219 1 170 1 223 1 150 1 359 1 109 2 180 1 346 1 115 1 163 1 135 1 283 1 348 2 60 1 211 9 22 3 
59 1 25 1 249 1 
186 2 59 1 354 1 
129 2 74 2 23 2 177 1 137 2 127 2 71 2 273 1 
287 1 23 3 213 1 143 1 47 1 291 1 96 1 352 1 353 1 311 1 71 2 273 1 29 1 355 1 73 1 74 2 335 1 248 1 105 1 107 1 360 2 361 1 177 1 156 1 110 2 343 1 127 2 129 3 260 1 304 1 161 1 91 2 137 2 19 1 327 2 263 1 185 2 
338 1 129 1 74 1 23 1 137 1 152 1 127 1 71 1 273 1 303 1 
338 1 23 1 362 1 119 1 64 1 178 1 255 1 298 1 340 1 74 1 129 1 259 1 59 1 249 1 
338 1 23 1 362 1 119 2 64 1 178 1 340 2 127 1 71 1 74 1 129 1 259 1 137 1 59 1 249 1 
313 1 119 1 5 1 340 1 169 1 
239 1 119 2 5 1 340 2 59 1 249 1 210 1 169 1 
119 1 340 1 169 1 
338 1 23 1 119 1 340 1 127 1 273 1 71 1 303 1 74 1 129 1 75 1 5 1 137 1 152 1 
59 1 
239 1 119 2 10 1 5 1 340 2 59 1 249 1 169 1 
199 1 239 1 119 5 340 5 254 1 214 2 169 2 100 2 232 1 315 1 5 2 222 1 196 1 59 1 284 2 249 1 153 1 174 1 61 1 
177 1 25 1 
23 2 177 2 310 1 127 1 71 1 74 2 129 2 132 1 137 1 
77 1 138 1 330 1 
360 1 23 1 361 1 177 1 110 1 268 1 47 1 343 1 73 1 129 1 304 1 161 1 335 1 248 1 105 1 185 1 
360 1 361 1 23 2 110 1 350 1 47 1 179 1 343 1 127 1 71 1 73 1 74 1 129 2 335 1 161 1 304 1 248 1 105 1 330 1 185 1 
23 5 177 1 270 1 350 1 298 1 179 2 16 1 127 4 71 4 74 5 129 5 132 1 137 1 140 1 
338 1 129 2 74 2 23 2 294 1 127 2 71 2 303 1 
129 3 74 3 23 3 177 1 179 1 137 1 127 3 71 3 
338 1 129 1 74 1 23 1 127 1 71 1 303 1 
338 1 129 1 74 1 23 1 132 1 137 1 310 1 127 1 71 1 
287 1 23 4 119 1 64 1 350 1 47 1 291 1 96 1 352 1 353 1 311 1 71 3 273 1 73 1 74 3 335 1 194 1 248 1 105 1 52 1 338 1 360 1 361 1 362 1 177 1 156 1 110 1 178 1 340 1 179 1 343 1 127 3 129 4 259 1 132 1 161 1 304 1 260 1 91 1 137 2 19 1 327 2 263 1 185 1 
129 2 74 2 23 2 177 1 298 1 179 1 16 1 127 1 71 1 
338 1 52 1 362 1 23 3 119 1 64 1 350 1 178 1 340 1 179 2 28 1 127 3 71 3 74 3 129 3 259 1 132 1 137 1 59 1 
129 2 74 2 23 2 132 1 179 1 137 1 138 1 127 2 330 1 71 2 
360 1 23 1 361 1 177 1 110 1 47 1 343 1 73 1 129 1 304 1 161 1 335 1 248 1 105 1 185 1 
360 1 23 1 361 1 177 1 110 1 36 1 47 1 343 1 73 1 129 1 335 1 248 1 105 1 185 1 32 1 
287 1 213 2 96 1 291 2 353 1 311 1 246 1 77 2 104 1 316 1 34 1 35 1 176 1 320 1 321 1 91 4 19 1 138 2 20 1 327 2 330 2 263 1 
338 1 129 1 74 1 23 1 64 1 294 1 127 1 71 1 
76 1 265 1 
76 1 265 1 
218 1 0 1 
218 1 0 1 
218 1 0 1 
7 1 76 1 265 1 
76 1 323 1 265 1 
218 1 76 2 120 1 299 1 0 1 265 2 
7 1 76 1 265 1 
7 1 76 1 265 1 
76 1 54 1 265 1 
76 1 54 1 265 1 
76 1 54 1 265 1 
45 1 23 2 332 1 119 1 144 1 71 2 312 1 74 2 76 1 125 1 171 1 177 1 9 1 340 1 366 1 127 2 39 1 181 1 112 1 128 1 258 1 129 2 323 1 265 1 
23 1 45 1 119 2 245 1 273 1 71 1 74 1 101 1 76 2 75 1 171 2 173 1 152 1 338 1 340 2 366 2 39 2 127 1 112 2 303 1 128 2 129 1 162 1 137 1 285 1 139 1 165 1 265 2 
219 1 223 1 150 1 
219 1 150 1 190 1 
219 3 53 1 223 2 190 1 48 1 87 1 
219 2 102 1 53 1 223 1 190 1 48 1 
219 2 53 1 223 1 190 1 48 2 
186 1 23 1 239 1 119 5 65 1 166 2 269 1 214 1 71 1 273 1 246 1 169 1 74 1 100 1 75 1 125 1 5 4 222 2 196 1 152 1 249 1 199 1 338 1 83 1 176 1 340 5 342 1 127 1 303 1 129 1 345 1 41 1 90 1 136 1 137 1 284 1 59 1 
186 1 239 1 23 1 119 5 65 1 269 1 214 1 243 1 273 1 71 1 246 1 169 3 100 1 74 1 313 2 75 1 125 1 5 4 222 2 196 1 152 1 249 1 199 1 83 1 338 1 176 1 201 1 340 5 127 1 303 1 129 1 282 2 41 1 90 1 136 1 137 1 284 1 59 1 
186 3 23 1 119 3 166 1 65 2 269 1 333 1 214 1 354 1 71 1 273 1 246 1 74 1 100 1 75 1 125 1 5 2 104 1 222 2 152 1 249 1 153 1 338 1 199 3 34 1 176 1 340 3 342 1 127 1 303 1 129 1 345 1 41 2 90 1 137 1 136 1 284 1 59 2 
186 6 119 4 166 2 65 4 269 1 333 2 214 1 354 2 246 2 100 1 125 2 5 3 104 2 222 4 224 1 249 1 153 1 199 5 34 2 176 2 340 4 342 1 38 1 345 1 41 4 57 1 90 2 136 1 284 1 59 3 
307 1 361 1 25 1 
361 1 182 1 
250 1 
361 1 105 1 73 1 
361 1 363 1 
361 1 105 1 
307 2 361 3 195 1 105 1 94 1 73 1 
34 1 213 4 8 1 37 1 291 3 279 1 281 1 246 1 113 1 220 1 114 1 183 3 149 2 91 7 42 1 325 2 306 1 
34 1 213 4 8 1 37 1 291 3 279 1 281 1 246 1 113 1 220 1 114 1 183 3 149 2 91 7 42 1 325 2 306 1 
34 1 213 4 8 1 37 1 291 3 279 1 281 1 246 1 113 1 220 1 114 1 183 3 149 2 91 7 42 1 325 2 198 1 306 1 
213 19 96 2 291 18 27 1 353 2 246 5 220 2 357 1 149 3 104 4 151 4 49 4 50 1 34 5 176 4 8 1 37 1 279 2 160 1 203 2 281 1 113 2 322 1 114 1 183 8 374 1 373 1 91 37 90 4 325 3 42 5 19 2 327 4 263 2 306 2 117 1 
34 1 213 5 37 1 291 4 279 1 96 2 353 2 69 1 203 1 281 1 246 1 113 1 220 1 114 1 183 4 149 2 235 1 91 9 42 1 325 3 19 2 327 4 263 2 306 1 
62 1 360 1 297 1 110 1 271 1 2 1 124 1 4 1 135 1 328 1 348 1 211 1 185 1 
62 1 360 1 297 1 110 1 95 1 271 2 292 1 72 1 124 1 4 1 348 1 175 1 211 2 185 1 
360 1 124 1 4 1 110 1 95 1 271 1 168 1 175 1 211 1 72 1 185 1 
62 1 360 1 288 1 110 1 271 1 343 1 292 1 124 2 56 1 4 2 305 1 348 1 211 1 185 1 
62 1 360 1 297 1 110 1 271 1 124 1 4 1 135 1 328 1 348 1 175 1 211 1 185 1 
158 1 
186 2 239 3 142 1 247 2 100 1 193 1 335 1 248 1 196 1 105 1 249 1 155 1 199 2 338 1 337 1 110 2 296 1 340 5 255 1 298 1 202 1 13 1 343 2 259 1 261 1 58 2 347 2 59 2 209 1 349 1 23 1 119 5 64 1 214 1 354 2 169 6 74 1 314 2 222 2 80 1 360 2 361 1 362 1 178 1 231 1 129 1 370 4 134 2 136 1 284 1 44 2 329 1 93 2 238 1 185 2 
23 1 239 1 119 3 64 1 169 2 74 1 80 1 338 1 337 1 362 1 296 1 178 1 10 1 298 1 255 1 340 3 202 1 13 1 129 1 259 1 370 2 58 1 
23 1 239 1 119 3 64 1 169 1 74 1 314 1 249 1 80 1 338 1 337 1 362 1 296 1 178 1 10 1 298 1 255 1 340 3 202 1 13 1 129 1 259 1 370 3 59 1 
239 1 23 1 119 3 64 1 169 2 74 1 314 1 249 1 80 1 338 1 337 1 362 1 296 1 10 1 178 1 298 1 255 1 340 3 202 1 13 1 129 1 259 1 370 3 58 1 59 1 44 1 
239 3 142 1 247 2 100 1 196 1 249 5 251 1 337 1 338 1 199 1 200 1 296 1 10 1 340 5 255 1 298 1 202 1 13 1 259 1 58 4 347 2 59 5 23 1 119 5 64 1 214 1 272 1 354 2 169 7 74 1 314 4 78 1 221 1 222 1 80 1 362 1 178 1 231 1 129 1 370 6 134 2 284 1 44 4 93 2 
186 2 239 2 142 1 247 2 100 1 196 1 249 1 337 1 338 1 199 1 296 1 298 1 340 4 255 1 202 1 13 1 259 1 347 2 58 2 59 2 209 1 23 1 119 4 64 1 214 1 354 2 169 4 74 1 314 2 222 1 80 1 362 1 178 1 231 1 129 1 370 4 134 2 284 1 44 2 93 2 
239 2 23 1 142 1 119 4 64 1 214 1 354 2 169 4 247 2 74 1 100 1 314 2 221 1 222 1 196 1 249 1 80 1 251 1 200 1 199 1 338 1 337 1 362 1 296 1 178 1 298 1 255 1 340 4 202 1 13 1 231 1 129 1 259 1 370 4 134 2 58 2 347 2 59 1 284 1 44 2 93 2 
239 2 23 1 142 1 119 4 64 1 214 1 354 2 169 4 247 2 74 1 100 1 314 2 221 1 222 1 196 1 249 1 80 1 251 1 200 1 199 1 338 1 337 1 362 1 296 1 178 1 298 1 255 1 340 4 202 1 13 1 231 1 129 1 259 1 370 4 134 2 58 2 347 2 59 1 284 1 44 2 93 2 
337 1 338 1 362 1 23 1 119 2 253 1 64 1 296 1 178 1 340 2 255 1 298 1 202 1 13 1 259 1 74 1 129 1 370 2 80 1 
239 2 23 1 142 1 119 4 64 1 214 1 272 1 354 2 169 5 247 2 100 1 74 1 314 3 221 1 222 1 196 1 249 1 80 1 251 1 200 1 199 1 338 1 337 1 362 1 296 1 178 1 298 1 255 1 340 4 202 1 13 1 231 1 129 1 259 1 370 5 134 2 347 2 58 3 59 1 284 1 44 3 93 2 
239 2 23 1 142 1 119 4 64 1 214 1 272 1 354 2 169 5 247 2 100 1 74 1 314 3 221 1 222 1 196 1 249 1 80 1 251 1 200 1 199 1 338 1 337 1 362 1 296 1 178 1 298 1 255 1 340 4 202 1 13 1 231 1 129 1 259 1 370 5 134 2 347 2 58 3 59 1 284 1 44 3 93 2 
186 1 239 1 23 1 119 3 64 1 214 1 169 1 247 1 100 1 74 1 222 1 196 1 80 1 199 1 338 1 337 1 362 1 296 1 178 1 255 1 340 3 298 1 202 1 257 1 13 1 365 1 231 1 129 1 259 1 370 2 372 1 134 1 284 1 209 1 
34 1 287 1 177 2 213 3 37 1 291 3 96 1 353 1 25 1 311 1 281 1 246 1 220 1 77 1 149 1 114 1 183 2 91 6 325 2 316 1 19 1 138 1 327 2 330 1 263 1 306 1 
287 1 213 10 291 7 96 2 353 2 244 1 311 2 29 1 246 3 357 1 77 13 104 1 151 3 49 4 34 1 177 1 156 1 176 3 159 1 319 1 183 1 374 2 91 17 90 3 42 1 19 2 164 1 138 4 327 4 330 13 263 2 117 1 
287 1 23 2 213 1 268 1 350 1 47 1 96 1 291 1 353 1 311 1 71 1 29 1 73 1 74 1 123 1 335 1 248 1 105 1 81 1 360 1 361 1 177 1 156 1 110 1 179 1 343 1 127 1 129 2 161 1 304 1 324 1 91 2 19 1 138 1 164 1 327 2 263 1 185 1 
286 2 287 3 47 2 291 10 96 3 246 3 146 1 335 2 248 2 149 1 104 2 105 2 336 1 197 2 156 1 295 1 110 3 343 1 304 2 161 2 114 1 19 3 164 1 263 3 306 1 23 3 213 10 350 1 352 2 353 3 311 3 71 1 29 1 73 2 74 1 220 1 77 7 175 1 34 3 360 3 361 2 177 2 176 2 37 1 179 1 127 1 281 1 129 3 183 8 40 2 91 20 90 2 325 4 42 4 138 7 327 6 375 2 330 7 185 3 
23 1 287 2 267 1 213 1 66 1 290 1 143 2 96 2 291 1 353 2 216 1 311 2 71 1 29 1 73 1 2 1 74 1 356 1 193 1 335 3 248 3 31 1 105 3 316 1 6 1 175 1 82 1 360 7 361 4 156 1 110 6 179 1 343 2 127 1 129 1 55 1 91 2 19 2 327 4 263 2 185 7 238 1 
287 1 23 1 213 1 46 1 96 1 291 2 353 1 311 1 71 1 246 1 74 1 77 1 104 1 34 1 176 1 127 1 129 1 132 1 90 1 91 3 137 1 19 1 138 1 164 1 327 2 330 1 263 1 
287 1 176 1 213 2 96 1 353 1 311 1 321 1 246 1 77 1 183 1 91 2 42 1 316 1 19 1 138 1 327 2 330 1 263 1 
35 1 34 1 287 1 96 1 291 2 353 1 311 1 77 1 104 1 91 2 316 1 19 1 138 1 327 2 330 1 263 1 
34 1 287 1 176 1 213 2 291 2 96 1 353 1 311 1 246 1 77 2 183 1 104 1 91 4 90 1 42 1 316 1 19 1 138 2 327 2 330 2 263 1 
287 1 176 1 213 2 96 1 353 1 311 1 321 1 246 1 77 1 183 1 91 2 42 1 6 1 19 1 138 1 327 2 330 1 263 1 
35 1 34 1 287 1 96 1 291 2 353 1 311 1 77 1 104 1 91 2 6 1 19 1 138 1 327 2 330 1 263 1 
34 1 287 1 176 1 213 2 291 2 96 1 353 1 311 1 246 1 77 2 104 1 91 4 90 1 6 1 19 1 138 2 327 2 330 2 263 1 
34 1 287 1 176 1 213 2 291 2 96 1 353 1 311 1 246 1 77 2 183 1 104 1 90 1 91 4 42 1 19 1 138 2 327 2 330 2 263 1 
23 1 287 1 213 1 47 1 96 1 291 1 352 1 353 1 311 1 29 1 73 1 335 1 248 1 105 1 360 1 361 1 177 1 156 1 110 1 343 1 129 1 161 1 304 1 91 2 19 1 327 2 263 1 185 1 
23 1 287 1 213 1 47 1 96 1 291 1 353 1 311 1 29 1 73 1 335 1 248 1 105 1 108 1 32 1 360 1 361 1 177 1 156 1 110 1 36 1 343 1 129 1 91 2 19 1 327 2 263 1 185 1 
34 1 287 1 176 1 213 2 291 2 96 1 353 1 311 1 246 1 77 2 183 1 104 1 91 4 90 1 42 1 19 1 138 2 164 1 327 2 330 2 263 1 
286 1 23 1 287 1 213 2 47 1 291 2 96 1 352 1 353 1 311 1 246 1 73 1 2 1 77 2 335 1 248 1 104 1 105 1 34 1 360 1 361 1 176 1 110 1 129 1 161 1 304 1 183 1 91 4 90 1 42 1 19 1 138 2 327 2 330 2 263 1 185 1 
287 1 23 1 213 2 291 1 96 1 353 1 311 1 71 1 246 1 74 1 77 1 104 1 34 1 176 1 230 1 127 1 129 1 132 1 183 1 90 1 91 3 42 1 137 1 19 1 164 1 138 1 327 2 330 1 263 1 
291 27 96 4 145 1 246 9 149 1 104 7 151 4 49 4 256 1 301 1 14 1 203 2 205 1 114 1 19 4 262 1 263 4 117 2 306 1 213 30 167 2 353 4 68 1 357 2 358 1 220 1 226 1 34 8 176 8 364 4 37 1 280 1 367 1 281 1 183 11 374 2 235 1 90 8 91 57 42 9 236 1 325 2 43 1 327 8 
213 14 167 1 291 12 96 3 353 3 68 1 246 3 358 1 357 2 104 2 151 2 49 2 226 1 34 2 176 3 364 4 301 1 280 1 14 1 203 2 367 2 205 1 183 3 235 1 91 26 90 3 42 2 43 1 325 1 236 1 19 3 327 6 262 2 263 3 
308 1 213 35 167 1 96 4 291 32 68 1 353 4 145 1 246 10 220 2 358 1 357 3 149 2 104 7 151 5 49 6 226 1 34 9 176 8 37 2 364 4 301 1 280 1 14 1 203 2 367 1 281 2 205 1 114 2 183 12 235 1 374 3 91 67 90 8 43 1 325 3 236 1 42 9 19 4 327 8 262 2 263 4 306 2 117 2 
213 28 167 1 96 4 291 25 68 1 353 4 145 1 246 8 220 1 358 1 357 2 149 1 104 6 151 4 49 4 226 1 34 7 176 7 37 1 364 4 301 1 280 1 14 1 203 2 367 1 281 1 205 1 114 1 183 9 235 1 374 2 91 53 90 7 43 1 325 2 236 1 42 7 19 4 327 8 262 1 263 4 306 1 117 2 
213 27 167 1 96 3 291 26 68 1 353 3 246 8 220 1 358 1 357 2 149 1 104 7 151 4 49 4 226 1 34 8 176 7 37 1 364 4 301 1 280 1 14 1 203 2 367 1 281 1 205 1 114 1 183 9 235 1 374 2 91 53 90 7 43 1 325 2 236 1 42 7 19 3 327 6 262 1 263 3 306 1 117 2 
76 1 120 1 171 1 111 1 207 1 366 1 39 1 112 1 293 1 265 1 
332 1 323 1 
76 1 89 1 171 1 366 1 15 1 39 1 99 1 112 1 265 1 
7 1 17 1 
299 1 54 1 368 1 
23 1 45 1 119 1 245 1 273 1 71 1 74 1 101 1 76 1 75 1 171 1 173 1 152 1 338 1 340 1 366 1 39 1 127 1 112 1 303 1 128 2 129 1 162 1 137 1 285 1 139 1 165 1 265 1 
23 1 45 1 119 1 245 1 273 1 71 1 74 1 101 1 76 1 75 1 171 1 173 1 152 1 338 1 340 1 366 1 39 1 127 1 112 1 303 1 128 2 129 1 162 1 137 1 285 1 139 1 165 1 265 1 
23 1 45 1 119 1 245 1 273 1 71 1 74 1 101 1 76 1 75 1 171 1 173 1 152 1 338 1 340 1 366 1 39 1 127 1 112 1 303 1 128 2 129 1 162 1 137 1 285 1 139 1 165 1 265 1 
7 1 299 1 17 1 
7 1 299 1 17 1 
54 1 368 1 
299 1 54 1 368 1 
144 1 258 1 
23 2 332 1 119 1 144 1 245 1 71 2 312 1 74 2 76 1 125 1 5 1 171 1 177 1 9 1 157 1 340 1 366 1 39 1 181 1 127 2 112 1 128 1 258 1 129 2 323 1 139 1 265 1 
63 1 287 1 23 2 213 1 289 1 290 1 143 2 96 1 291 1 353 1 311 1 29 1 74 2 335 1 248 1 105 1 360 2 361 1 252 1 156 1 110 2 318 1 129 2 55 1 91 2 19 1 164 1 327 2 263 1 185 2 184 1 
360 2 110 2 227 1 190 1 192 1 87 1 97 1 2 1 219 2 335 1 275 1 248 1 223 1 150 1 106 1 277 1 175 1 225 1 185 2 
360 1 110 1 227 1 190 1 87 1 97 1 219 2 275 1 335 1 248 1 223 1 172 1 150 1 106 1 277 1 175 1 185 1 
360 1 361 1 110 1 227 1 67 1 343 1 369 1 193 1 335 1 248 1 105 1 225 1 185 1 238 1 
360 1 110 1 227 1 190 1 192 1 87 1 97 1 219 2 275 1 335 1 248 1 223 1 150 1 106 1 277 1 175 1 225 1 185 1 
274 1 
199 1 315 1 222 1 59 1 25 1 249 1 61 1 
186 1 239 1 142 1 119 1 214 1 354 1 169 1 100 1 222 1 196 1 249 1 199 1 340 1 347 1 284 1 59 2 93 1 
360 1 361 1 189 1 110 1 214 1 343 1 73 1 100 1 335 1 248 2 182 1 196 1 105 1 284 1 141 1 94 1 185 1 
186 6 187 1 239 1 119 1 65 5 333 1 214 2 68 1 354 3 169 1 246 2 100 2 358 1 357 1 104 2 196 2 222 5 151 1 249 2 49 1 155 1 199 8 34 2 176 2 340 1 301 1 344 2 233 1 205 1 41 5 90 2 136 1 43 1 284 2 59 5 
23 1 119 1 333 1 214 1 273 1 71 1 246 2 100 1 74 1 220 1 75 1 221 1 196 1 222 2 152 1 338 1 34 1 199 2 340 1 127 1 303 1 344 2 129 1 131 1 114 1 137 1 284 1 306 1 
199 1 214 1 100 1 315 1 196 1 222 1 284 1 59 1 249 1 61 1 
199 2 186 4 34 1 176 1 65 2 333 1 354 2 246 1 104 1 222 2 41 2 90 1 59 2 
239 1 119 1 340 1 59 1 249 1 169 1 
349 1 239 2 119 3 241 1 214 2 351 1 169 4 100 2 334 1 193 1 335 1 248 1 196 1 222 2 105 1 153 1 155 2 360 4 199 2 361 1 110 4 340 3 343 2 371 2 136 2 284 2 329 1 185 4 238 1 
23 3 287 1 47 1 291 1 96 1 352 1 353 1 311 1 71 2 273 1 73 1 74 2 335 1 248 1 105 1 360 1 361 1 177 1 156 1 110 1 343 1 127 2 129 3 260 1 304 1 161 1 91 1 137 2 19 1 327 2 263 1 185 1 
186 2 199 1 214 1 354 1 100 1 41 1 222 1 196 1 136 1 284 1 59 2 249 1 155 1 
188 1 171 1 366 1 
121 1 171 1 144 1 366 1 293 1 
188 1 171 1 366 1 
188 1 171 1 366 1 
171 1 237 1 366 1 
171 1 237 1 366 1 
171 1 237 1 366 1 
171 1 366 1 
76 1 265 1 
34 1 213 4 37 1 291 4 96 2 353 2 203 1 281 1 246 1 220 1 149 1 114 1 183 3 91 8 42 1 325 2 19 2 327 4 263 2 306 1 
34 1 213 3 37 1 291 3 25 1 281 1 246 1 220 1 149 1 183 2 114 1 91 6 325 2 306 1 
34 1 176 1 213 2 291 2 96 1 353 1 246 1 104 1 90 1 91 4 126 1 19 1 327 2 263 1 
34 2 213 6 176 2 291 6 246 2 357 1 183 2 104 2 374 1 91 12 90 2 42 2 151 2 49 2 117 1 
213 14 291 16 96 2 353 2 244 1 246 4 220 4 149 1 104 2 151 2 49 2 34 4 176 2 37 1 203 2 281 1 131 1 114 2 183 10 374 1 373 1 90 2 91 30 325 5 42 5 19 2 327 4 263 2 306 4 117 1 
91 1 291 1 49 1 
213 1 91 1 151 1 
34 1 176 1 213 3 96 1 291 3 353 1 246 1 183 1 104 1 91 6 90 1 42 1 19 1 126 1 327 2 375 1 263 1 
213 6 291 7 96 2 353 2 68 1 246 2 358 1 357 1 104 2 151 1 49 1 34 2 176 2 301 1 203 1 205 1 183 2 235 1 91 13 90 2 42 1 325 1 43 1 19 2 327 4 263 2 
34 1 213 3 291 3 246 1 220 1 114 1 183 2 91 6 325 1 42 1 306 1 
213 1 37 1 291 2 96 1 353 1 203 1 281 1 220 1 183 2 373 1 91 3 42 1 325 1 19 1 327 2 263 1 306 1 
34 2 213 5 96 1 291 5 353 1 246 2 131 1 220 2 183 5 114 1 235 1 91 10 325 3 42 2 19 1 327 2 263 1 306 2 
176 1 213 2 96 1 353 1 246 1 183 1 235 1 91 2 42 1 19 1 327 2 263 1 
34 1 176 1 213 2 291 2 96 1 353 1 246 1 183 1 104 1 235 1 90 1 91 4 42 1 19 1 327 2 263 1 
213 1 291 2 96 3 353 3 203 1 145 1 220 1 183 2 373 1 235 1 91 3 325 1 42 1 19 3 327 6 263 3 306 1 
213 20 291 21 96 5 27 1 353 5 145 1 246 6 220 3 357 1 149 1 104 4 126 1 151 4 49 4 50 1 34 6 176 4 37 1 203 2 160 1 281 1 114 2 183 11 373 1 235 1 374 1 91 41 90 4 325 4 42 7 19 5 327 10 263 5 306 3 117 1 
213 6 291 5 96 1 353 1 246 2 357 1 220 1 149 1 151 1 49 2 34 1 176 1 37 1 301 1 281 1 114 1 183 2 235 1 374 1 91 11 90 1 325 2 19 1 327 2 263 1 306 1 
213 6 291 5 96 2 353 2 246 2 220 1 357 1 149 1 126 1 151 1 49 2 34 1 176 1 37 1 301 1 281 1 114 1 183 3 235 1 374 1 91 11 90 1 325 2 42 1 19 2 327 4 263 2 306 1 
213 9 291 10 96 3 353 3 68 1 246 3 220 1 358 1 357 1 149 1 104 2 126 1 151 1 49 1 34 3 176 2 37 1 301 1 203 1 281 1 205 1 114 1 183 4 235 1 91 19 90 2 42 1 325 3 43 1 19 3 327 6 263 3 306 1 
213 7 291 5 96 4 353 4 68 1 246 2 358 1 357 1 104 1 126 1 151 1 49 1 34 1 176 2 301 1 203 2 205 1 183 2 235 1 91 12 90 2 42 1 325 1 43 1 19 4 327 8 263 4 
213 6 291 5 96 1 353 1 246 2 357 1 220 1 149 1 151 1 49 2 34 1 176 1 37 1 301 1 281 1 114 1 183 2 235 1 374 1 91 11 90 1 325 2 19 1 327 2 263 1 306 1 
213 6 291 7 96 2 353 2 68 1 246 2 358 1 357 1 104 2 151 1 49 1 34 2 176 2 301 1 203 1 205 1 183 2 235 1 91 13 90 2 42 1 325 1 43 1 19 2 327 4 263 2 
213 10 291 8 96 4 353 4 68 1 246 3 220 1 358 1 357 1 149 1 104 1 126 1 151 1 49 1 34 2 176 2 37 1 301 1 203 2 281 1 205 1 114 1 183 5 235 1 91 18 90 2 42 2 43 1 325 3 19 4 327 8 263 4 306 1 
213 9 291 7 96 4 353 4 68 1 145 1 246 3 358 1 357 1 104 2 151 1 49 1 34 2 176 3 301 1 203 2 205 1 183 4 235 1 91 16 90 3 42 3 43 1 325 1 19 4 327 8 263 4 
34 1 213 3 37 2 291 4 281 1 246 1 220 3 183 6 114 1 91 7 325 3 42 3 306 3 
213 10 291 8 96 4 353 4 68 1 145 1 246 3 220 1 358 1 357 1 149 1 104 1 151 1 49 1 34 2 176 2 37 1 301 1 203 2 281 1 205 1 114 1 183 4 235 1 91 18 90 2 42 1 43 1 325 3 19 4 327 8 263 4 306 1 
129 1 74 1 23 1 177 1 30 1 298 1 16 1 
129 1 74 1 23 1 177 1 30 1 234 1 298 1 228 1 16 1 21 1 92 1 278 1 
360 1 361 1 193 1 335 1 248 1 110 1 105 1 25 1 343 1 238 1 185 1 
360 1 361 1 23 2 177 1 110 1 47 1 179 1 343 1 127 1 71 1 73 1 74 1 129 2 161 1 335 1 248 1 105 1 185 1 
338 1 360 1 361 3 23 2 177 1 363 1 64 1 110 1 47 1 179 1 127 2 71 1 73 2 259 1 74 2 129 2 161 1 335 1 248 1 371 1 105 2 208 1 185 1 
23 2 64 1 242 1 47 1 71 1 73 2 74 2 335 1 248 1 105 2 360 2 338 1 361 3 177 1 110 2 363 1 36 1 179 1 127 2 129 2 259 1 371 1 208 1 185 2 
307 1 118 1 119 2 242 1 169 1 73 1 147 1 335 1 248 1 105 1 249 1 360 3 361 4 362 1 110 3 363 1 340 2 343 1 371 1 182 1 59 1 208 1 185 3 
360 3 307 1 362 1 361 4 119 2 363 1 110 3 242 1 340 2 343 1 169 1 73 1 148 1 335 1 248 1 371 1 182 1 105 1 59 1 249 1 208 1 185 3 
360 1 335 1 248 1 110 1 154 1 185 1 
360 1 361 1 335 1 248 1 110 1 105 1 317 1 343 1 216 1 94 1 73 1 185 1 
286 1 287 2 47 1 96 2 291 3 246 1 2 1 335 1 248 1 149 1 105 1 110 1 161 1 304 1 114 1 19 2 164 1 263 2 306 1 63 1 23 2 213 3 352 1 353 2 311 2 71 1 73 1 74 1 220 1 77 1 360 1 34 1 361 1 177 2 37 1 179 1 127 1 281 1 129 2 183 2 40 1 91 6 325 2 138 1 327 4 330 1 185 1 
307 1 212 1 239 1 119 3 241 1 214 2 215 1 169 2 100 2 148 1 315 1 5 1 222 1 196 2 249 1 199 1 360 1 361 2 362 1 110 1 340 3 343 1 204 1 182 1 59 1 284 2 61 1 185 1 
307 1 360 1 361 1 189 1 110 1 73 1 335 1 248 2 105 1 154 1 250 1 94 1 185 1 
360 4 361 1 110 4 242 1 343 1 70 1 2 1 193 1 335 1 248 1 105 1 185 4 238 1 
356 1 360 1 361 1 335 1 248 1 110 1 66 1 105 1 216 1 336 1 73 1 185 1 
360 1 219 1 335 1 248 1 110 1 150 1 190 1 343 1 277 1 185 1 
360 2 2 1 361 1 335 1 248 1 110 2 289 1 105 1 290 1 175 1 185 2 
360 5 361 3 110 4 290 1 343 1 70 1 2 1 193 1 335 2 371 1 248 2 31 1 105 2 82 1 238 1 185 5 
360 5 361 3 110 4 290 1 343 1 98 1 70 1 2 1 193 1 335 2 371 1 248 2 105 2 82 1 238 1 185 5 
360 1 361 1 23 2 177 1 110 1 36 1 47 1 179 1 343 1 127 1 71 1 73 1 74 1 129 2 335 1 248 1 105 1 185 1 
360 1 361 1 335 1 248 1 110 1 371 1 105 1 317 1 216 1 94 1 73 1 185 1 
3 1 79 1 302 2 184 1 
331 1 23 1 119 1 273 1 71 1 74 1 75 1 103 1 5 1 152 1 249 1 338 1 11 1 340 1 302 1 127 1 303 1 129 1 137 1 59 1 
3 1 79 1 302 1 184 1 
331 1 11 1 302 1 
309 1 122 1 25 1 359 1 
62 1 309 1 271 1 122 1 348 1 211 1 359 1 
124 1 266 1 211 1 
339 2 62 1 276 1 309 1 24 1 135 1 300 1 271 3 122 1 348 1 211 3 359 1 
62 1 309 1 95 1 271 2 122 1 348 1 211 2 359 1 109 1 
62 1 271 1 191 1 122 1 219 1 163 1 135 1 223 1 150 1 348 1 211 1 
62 1 135 1 271 1 122 1 348 1 211 1 359 1 
62 1 309 1 135 1 271 1 348 1 211 1 359 2 
62 2 130 1 135 1 86 1 271 2 122 1 348 2 376 1 211 2 359 1 
62 1 309 1 95 2 271 3 191 1 122 2 346 1 135 1 348 1 60 1 211 3 359 1 22 1 
62 1 309 1 95 1 190 1 271 2 12 1 122 1 87 1 219 2 135 1 223 1 150 1 348 1 211 2 359 1 
62 2 309 1 95 2 271 4 191 1 122 2 170 1 135 1 348 2 211 4 359 1 109 1 22 1 
62 1 309 1 135 1 271 1 122 1 348 1 211 1 359 1 
339 1 62 1 24 1 309 2 95 2 300 1 271 4 191 1 122 3 88 1 348 1 211 4 359 2 22 1 
62 1 240 1 309 1 95 1 135 1 271 2 283 1 122 1 1 1 348 1 211 2 359 1 
62 1 339 2 24 1 309 1 271 3 300 2 122 1 135 1 326 1 348 1 211 3 359 1 
217 2 133 1 341 1 122 2 
62 1 135 1 271 1 229 1 348 1 211 1 
62 1 309 1 95 1 346 1 135 1 271 2 122 1 348 1 211 2 359 1 
85 1 
62 1 309 1 135 1 271 1 122 1 348 1 211 1 359 1 
62 1 339 1 309 1 95 1 271 3 122 1 346 1 135 1 348 1 211 3 359 1 
191 1 122 1 88 1 22 1 
122 1 359 1 

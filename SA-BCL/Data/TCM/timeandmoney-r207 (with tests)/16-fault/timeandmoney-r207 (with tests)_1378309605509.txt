#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 85 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (267,279) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (267,279) 224 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (267,279) 224 57 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 218 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 202 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 202 164 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 126 36 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 281 284 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 89 133 26 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 178 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 178 184 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 178 184 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 178 184 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 178 184 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 89 17 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 283 (37,177) 190 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 95 9 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 67 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (20,285) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 89 133 26 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 89 17 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 89 133 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 89 268 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 3 42 2 185 2 225 4 147 6 264 1 195 2 12 2 50 2 121 1 234 1 236 1 158 1 275 2 162 2 204 1 207 1 209 1 29 1 100 1 173 1 212 1 282 1 102 1 219 9 141 9 180 5 222 1 
1 3 42 2 185 2 225 4 147 6 264 1 195 2 12 2 50 2 121 1 234 1 236 1 158 1 275 2 162 2 204 1 207 1 209 1 29 1 100 1 173 1 212 1 282 1 102 1 219 9 141 9 180 5 222 1 
1 4 42 2 185 2 225 5 147 7 264 1 195 2 12 2 50 2 121 1 234 1 236 1 158 1 275 2 162 2 204 1 207 1 209 1 29 1 100 1 173 1 212 1 282 1 102 1 219 10 141 10 180 6 222 1 
1 2 42 2 185 2 225 3 147 4 264 1 195 2 12 2 50 2 234 1 236 1 158 1 275 1 162 2 204 1 207 1 209 1 29 1 100 1 173 1 212 1 282 1 102 1 219 7 141 7 180 4 222 1 
1 1 162 1 42 1 225 2 185 1 147 3 100 1 195 1 282 1 50 1 121 1 234 1 236 1 219 4 141 4 180 3 222 1 275 2 
19 1 162 1 42 1 23 1 209 1 115 1 195 1 12 1 50 1 234 1 236 1 158 1 219 2 180 1 141 2 222 1 
1 1 225 1 207 1 147 1 195 2 12 1 50 2 234 1 236 1 219 3 141 3 180 2 222 1 
1 3 42 1 225 4 185 1 147 7 195 2 12 1 50 2 90 1 121 1 234 1 236 1 275 2 162 1 204 1 207 1 29 1 99 1 100 1 282 1 219 9 141 9 180 5 222 1 
1 3 42 1 225 4 185 1 147 7 195 2 12 1 50 2 90 1 121 1 234 1 236 1 275 2 162 1 204 1 207 1 29 1 99 1 100 1 282 1 219 9 141 9 180 5 222 1 
125 1 
0 1 261 1 277 1 112 1 230 1 8 1 175 1 47 1 120 1 77 1 292 1 
0 1 163 1 277 1 63 1 112 1 8 1 175 1 47 1 120 1 235 1 77 1 292 2 
105 1 292 1 
105 1 292 1 
292 1 
105 1 292 1 
105 1 292 1 
62 1 123 1 43 1 105 1 131 1 292 2 
125 1 
0 1 39 1 40 2 81 1 148 2 263 2 149 1 156 1 52 1 15 1 237 1 163 1 60 1 277 2 63 1 208 1 278 1 68 1 175 2 101 1 137 1 288 1 255 1 
0 2 163 1 277 2 63 1 244 1 175 2 286 2 235 1 104 1 
81 1 245 1 78 1 
39 1 40 1 277 1 278 1 148 1 263 1 30 1 175 1 286 1 156 1 137 1 52 1 15 1 288 1 255 1 237 1 
0 3 163 3 286 1 277 3 63 3 235 1 149 1 175 3 
0 1 163 1 241 1 277 1 63 1 8 1 175 1 
0 1 163 1 277 1 63 1 244 1 235 1 104 1 8 1 175 1 
0 2 163 2 277 2 112 1 208 1 63 2 244 1 149 1 8 1 231 1 175 2 47 1 120 1 122 1 235 1 77 1 292 1 
0 2 259 1 261 1 163 1 286 1 277 2 63 1 149 1 175 2 
0 1 163 1 277 1 112 1 208 1 63 1 149 1 8 1 175 1 85 1 47 1 120 1 122 1 77 1 292 1 
0 2 163 2 277 2 63 2 244 1 81 1 149 1 245 1 175 2 235 1 
39 1 40 1 277 1 278 1 148 1 263 1 175 1 286 1 156 1 137 1 52 1 15 1 288 1 255 1 237 1 
39 1 203 1 40 1 277 1 20 1 148 1 263 1 175 1 286 1 156 1 137 1 52 1 15 1 288 1 237 1 
182 1 186 1 81 2 188 1 10 1 87 1 119 1 200 1 274 1 276 1 93 1 94 2 21 1 71 1 245 2 248 1 32 2 250 4 135 2 136 1 33 1 257 1 258 1 78 2 
47 1 0 1 163 1 277 1 63 1 91 1 8 1 175 1 
0 4 163 4 277 4 208 1 63 4 244 1 149 2 8 1 175 4 118 1 214 1 286 1 235 1 290 1 
0 2 163 2 241 1 277 2 63 2 91 1 8 1 175 2 
98 1 267 1 
98 1 267 1 
279 1 56 1 98 1 267 1 
279 1 56 1 98 1 267 1 
279 1 56 1 
98 1 267 1 
98 1 267 1 
98 1 267 1 
98 1 267 1 
98 1 267 1 
98 1 267 1 
98 1 267 1 
98 1 267 1 
224 1 98 1 267 1 153 1 
224 1 98 1 57 1 267 1 292 1 153 1 
162 1 42 1 185 1 
162 1 19 1 42 1 
11 1 19 1 42 3 185 2 140 1 114 1 
196 1 11 1 19 1 42 2 185 1 140 1 
11 1 19 1 42 2 185 1 140 2 
61 1 105 1 292 1 
198 1 205 1 218 1 105 2 292 2 
202 1 143 1 62 1 43 1 82 1 131 1 155 1 123 1 254 1 105 1 292 2 
202 1 143 1 62 1 43 1 164 1 82 1 131 1 155 1 123 1 254 1 292 1 
125 1 
13 1 15 1 
51 1 
15 1 288 1 
52 1 15 3 216 1 65 2 288 1 44 1 
52 1 15 1 288 1 
15 1 73 1 
266 1 172 1 249 1 193 1 194 1 32 3 250 6 135 3 119 1 33 1 154 1 176 1 74 1 200 2 54 1 220 1 258 1 
266 1 172 1 249 1 193 1 194 1 32 3 250 6 135 3 119 1 33 1 154 1 176 1 74 1 200 2 54 1 220 1 258 1 
266 1 172 1 249 1 194 1 193 1 32 3 250 6 135 3 119 1 33 1 154 1 176 1 74 1 200 2 54 1 220 1 256 1 258 1 
3 1 188 1 229 1 151 1 266 1 193 1 10 1 154 2 54 1 200 2 94 2 95 1 24 1 71 1 132 1 172 1 249 1 250 6 32 3 135 3 136 1 33 1 220 1 293 1 
144 1 3 1 188 2 266 1 10 2 193 1 194 1 119 1 154 1 200 3 54 1 94 4 71 2 169 1 249 1 250 8 32 4 135 4 136 2 33 2 176 1 74 1 220 1 258 1 
109 1 40 1 42 2 185 1 147 1 148 1 113 1 263 1 84 1 114 1 152 1 117 1 195 1 12 1 50 1 156 1 234 1 236 1 237 1 162 1 19 1 128 1 166 1 253 1 103 1 219 2 180 1 141 2 222 1 223 1 
109 1 40 1 111 1 42 2 185 1 148 1 147 2 113 1 263 1 114 1 152 1 117 1 195 1 12 1 50 1 156 1 234 1 236 1 237 1 162 1 19 1 59 1 128 1 166 1 35 1 103 1 219 3 180 1 141 3 223 1 
109 1 40 1 111 1 42 2 185 1 148 1 147 2 113 1 263 1 114 1 117 1 12 1 156 1 234 1 236 1 237 1 19 1 162 1 59 1 128 1 166 1 103 1 219 2 180 1 141 2 
39 1 109 2 40 1 146 1 148 1 113 2 263 1 7 1 117 2 195 1 12 2 156 1 50 1 15 1 237 1 97 1 171 1 35 1 38 1 288 1 219 1 179 1 141 1 
109 1 40 1 42 2 185 1 148 1 113 1 263 1 114 1 152 1 117 1 195 1 12 1 50 1 156 1 237 1 162 1 19 1 59 1 128 1 166 1 253 1 103 1 219 1 141 1 222 1 223 1 
160 1 
39 1 143 1 40 1 62 1 148 1 263 1 210 1 131 1 123 1 36 1 254 1 292 1 126 1 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
292 1 
0 1 261 1 277 1 62 1 112 1 210 1 211 1 230 1 131 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 123 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 112 1 211 1 230 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 77 1 292 2 
0 1 261 1 277 1 62 1 112 1 210 1 211 1 230 1 131 1 8 1 175 1 281 1 47 1 284 1 120 1 16 1 123 1 77 1 292 2 
94 2 136 1 188 1 274 1 71 1 125 1 248 1 10 1 276 1 
81 8 188 2 229 2 8 1 10 2 118 1 87 1 119 2 200 2 274 1 240 1 276 2 93 2 94 4 242 1 206 2 243 1 168 1 71 2 245 3 250 11 32 6 135 5 33 1 136 2 286 1 252 1 289 1 220 1 258 1 79 1 78 8 293 2 
39 1 0 1 40 1 148 1 263 1 188 1 149 1 116 1 10 1 88 1 52 1 156 1 15 1 157 1 274 1 237 1 238 1 276 1 94 2 163 1 277 2 278 1 63 1 208 1 245 1 71 1 30 1 175 2 250 2 32 1 135 1 136 1 286 1 137 1 252 1 288 1 289 1 255 1 
0 1 148 3 81 6 149 1 10 3 87 2 88 1 156 2 15 2 18 2 237 2 93 2 94 6 163 1 245 6 175 3 249 1 250 19 32 9 33 3 176 1 252 1 37 2 255 2 258 3 108 1 39 1 40 3 263 3 188 3 194 1 269 1 119 3 197 1 52 2 199 2 54 1 200 7 274 3 276 3 59 1 277 3 206 2 208 1 63 1 278 2 71 3 70 2 135 10 136 3 286 2 137 2 288 2 74 1 289 1 75 2 220 4 78 6 
0 1 39 2 40 4 262 1 148 4 263 4 188 2 149 1 84 1 10 2 89 1 88 1 52 1 156 3 15 3 274 2 237 2 276 2 161 1 94 4 127 1 163 1 96 1 60 1 277 1 63 1 26 1 129 1 71 2 72 1 248 1 175 1 133 1 32 1 250 2 135 1 136 2 38 1 288 3 289 1 179 1 
0 1 81 1 188 1 10 1 87 1 119 1 200 1 235 1 274 1 276 1 93 1 94 2 163 1 277 1 206 1 63 1 244 1 25 1 245 1 71 1 175 1 32 1 250 3 135 2 33 1 136 1 252 1 258 1 78 1 
93 1 94 2 186 1 81 1 188 1 245 1 71 1 248 1 10 1 250 2 32 2 119 1 136 1 200 1 274 1 220 1 78 1 276 1 
94 2 81 1 188 1 245 1 71 1 248 1 10 1 250 2 87 1 135 2 33 1 136 1 200 1 274 1 257 1 258 1 78 1 276 1 
93 1 94 2 206 1 81 2 188 1 245 2 71 1 248 1 10 1 87 1 250 4 32 2 135 2 119 1 33 1 136 1 200 2 274 1 220 1 258 1 78 2 276 1 
93 1 94 2 262 1 186 1 81 1 188 1 245 1 71 1 10 1 250 2 32 2 119 1 136 1 200 1 274 1 220 1 78 1 276 1 
94 2 262 1 81 1 188 1 245 1 71 1 10 1 250 2 87 1 135 2 33 1 136 1 200 1 274 1 257 1 258 1 78 1 276 1 
93 1 94 2 262 1 206 1 81 2 188 1 245 2 71 1 10 1 87 1 250 4 32 2 135 2 119 1 33 1 136 1 200 2 274 1 220 1 258 1 78 2 276 1 
93 1 94 2 206 1 81 2 188 1 245 2 71 1 10 1 87 1 32 2 250 4 135 2 119 1 33 1 136 1 200 2 274 1 220 1 258 1 78 2 276 1 
39 1 40 1 148 1 263 1 188 1 10 1 88 1 52 1 156 1 15 1 274 1 237 1 276 1 94 2 277 1 278 1 70 1 71 1 175 1 32 1 250 2 135 1 136 1 286 1 137 1 288 1 289 1 255 1 
39 1 40 1 148 1 263 1 188 1 6 1 10 1 88 1 52 1 156 1 15 1 274 1 237 1 276 1 203 1 94 2 20 1 277 1 71 1 175 1 32 1 250 2 135 1 136 1 286 1 137 1 288 1 289 1 
93 1 94 2 206 1 81 2 188 1 245 2 71 1 10 1 87 1 250 4 32 2 135 2 119 1 33 1 136 1 252 1 200 2 274 1 220 1 258 1 78 2 276 1 
40 1 81 2 148 1 263 1 188 1 84 1 10 1 87 1 119 1 52 1 156 1 15 1 200 2 18 1 274 1 237 1 276 1 93 1 94 2 277 1 206 1 278 1 245 2 70 1 71 1 175 1 250 4 32 2 135 2 33 1 136 1 137 1 288 1 220 1 255 1 258 1 78 2 
0 1 81 1 188 1 191 1 10 1 87 1 119 1 200 1 235 1 274 1 276 1 93 1 94 2 163 1 277 1 206 1 63 1 244 1 71 1 245 1 175 1 32 2 250 3 135 1 136 1 252 1 220 1 258 1 78 1 
94 2 136 1 183 1 184 1 188 1 178 1 71 1 169 1 10 1 
94 2 136 1 183 1 184 1 188 1 178 1 71 1 169 1 10 1 
94 2 136 1 183 1 184 1 188 1 178 1 71 1 169 1 10 1 
94 2 136 1 183 1 184 1 188 1 178 1 71 1 169 1 10 1 
94 2 136 1 183 1 184 1 188 1 178 1 71 1 169 1 10 1 
0 2 40 2 148 2 188 1 263 2 10 1 89 1 88 1 156 2 52 1 15 2 17 1 55 1 274 1 237 1 276 1 161 1 94 2 127 1 96 1 60 2 277 2 129 1 71 1 72 1 246 1 175 2 31 1 32 1 250 2 135 1 136 1 252 1 138 1 288 2 289 1 
162 1 19 1 109 1 40 2 59 1 42 2 128 1 185 1 226 1 64 1 148 2 263 2 114 1 84 1 156 1 103 1 271 1 237 1 223 1 
162 1 19 1 109 1 40 1 59 1 42 2 128 1 185 1 64 1 148 1 263 1 114 1 48 1 156 1 103 1 237 1 223 1 
39 1 109 1 40 1 41 1 226 1 148 1 263 1 171 1 156 1 15 1 38 1 288 1 179 1 237 1 
162 1 19 1 109 1 40 1 59 1 42 2 128 1 185 1 226 1 64 1 148 1 263 1 114 1 156 1 103 1 271 1 237 1 223 1 
134 1 
125 1 
215 1 62 1 123 1 4 1 254 1 210 1 131 1 106 1 
39 1 143 1 40 1 62 1 148 1 263 1 190 1 189 1 210 1 131 1 283 1 13 1 156 2 52 1 15 2 216 1 123 1 254 1 288 1 177 1 237 1 
95 1 215 1 62 1 123 1 254 1 229 1 210 1 131 1 9 1 293 1 
62 1 210 1 69 1 83 1 131 1 249 1 119 2 215 2 34 2 123 1 254 1 54 1 74 1 92 1 258 1 292 1 
215 1 62 1 123 1 67 1 210 1 131 1 
87 1 93 1 119 1 215 1 206 1 254 1 258 1 
39 1 40 1 148 1 263 1 
143 1 215 1 62 1 123 1 254 1 273 1 210 1 131 1 
227 1 53 1 130 1 
181 1 53 1 272 1 130 1 86 1 
227 1 53 1 130 1 
227 1 53 1 130 1 
53 1 217 1 130 1 
53 1 217 1 130 1 
53 1 217 1 130 1 
53 1 130 1 
98 1 267 1 
94 4 3 1 188 2 71 2 10 2 194 1 249 1 250 7 32 3 119 1 135 4 33 1 136 2 176 1 74 1 200 2 54 1 220 1 258 1 
125 1 
93 1 94 2 206 1 188 1 71 1 10 1 87 1 32 2 250 4 135 2 119 1 33 1 136 1 200 2 220 1 258 1 142 1 
32 1 250 2 135 1 95 1 229 1 293 1 
3 1 188 1 229 2 194 1 10 1 87 2 119 5 54 2 200 7 240 1 93 2 94 2 242 1 206 2 243 1 69 1 71 1 249 2 32 12 250 25 135 13 33 3 136 1 176 1 74 2 220 4 258 5 293 2 
250 1 135 1 293 1 
250 1 32 1 229 1 
93 1 94 2 206 1 188 1 71 1 10 1 250 6 32 3 87 1 135 3 119 1 136 1 33 2 199 1 200 3 220 1 258 1 142 1 
188 1 229 1 46 1 9 1 10 1 87 2 119 2 200 2 93 2 94 2 95 1 206 2 165 1 167 1 71 1 169 1 250 12 32 6 135 6 136 1 33 1 139 1 220 1 258 2 293 1 
249 1 32 3 250 6 119 1 135 3 33 1 74 1 54 1 200 2 220 1 258 1 
94 2 3 1 188 1 71 1 132 1 249 1 194 1 10 1 32 1 250 3 135 2 33 1 136 1 176 1 200 2 54 1 220 1 
3 1 188 2 229 1 46 1 9 1 194 1 10 2 87 1 119 5 54 2 200 8 93 2 94 4 95 1 206 2 165 1 167 1 69 1 71 2 169 1 249 2 250 24 32 13 135 11 136 2 33 4 176 1 139 1 74 2 220 4 258 4 293 1 
3 1 188 3 229 1 46 1 9 1 194 1 10 3 87 1 119 3 54 1 200 3 93 2 94 6 95 1 206 2 165 1 167 1 169 1 71 3 249 1 250 16 32 9 135 7 136 3 33 2 176 1 139 1 74 1 220 1 258 2 293 1 142 1 
3 1 188 3 229 1 46 1 9 1 194 1 10 3 87 2 119 3 54 1 200 3 93 2 94 6 95 1 206 2 165 1 167 1 71 3 169 1 249 1 250 18 32 8 135 10 136 3 33 2 176 1 139 1 74 1 220 1 258 3 142 1 293 1 
3 1 188 3 229 1 46 1 9 1 194 1 10 3 87 1 119 3 54 1 200 4 93 2 94 6 95 1 206 2 165 1 167 1 71 3 169 1 249 1 250 16 32 9 135 7 136 3 33 2 176 1 139 1 74 1 220 2 258 2 142 1 293 1 
3 1 188 2 229 1 46 1 9 1 194 1 10 2 87 1 119 5 54 2 200 8 93 2 94 4 95 1 206 2 165 1 167 1 69 1 71 2 169 1 249 2 250 24 32 13 135 11 136 2 33 4 176 1 139 1 74 2 220 4 258 4 293 1 
188 1 229 1 46 1 9 1 10 1 87 2 119 2 200 2 93 2 94 2 95 1 206 2 165 1 167 1 71 1 169 1 250 12 32 6 135 6 136 1 33 1 139 1 220 1 258 2 293 1 
3 2 188 4 229 1 46 1 9 1 194 1 10 4 87 1 119 3 54 1 200 4 93 2 94 8 95 1 206 2 165 1 167 1 71 4 169 1 249 1 250 17 32 9 135 8 136 4 33 2 176 1 139 1 74 1 220 2 258 2 293 1 142 1 
3 2 188 4 229 1 46 1 9 1 10 4 87 2 119 3 200 6 159 1 93 3 94 8 95 1 206 3 165 1 167 1 169 1 71 4 250 16 32 9 135 7 136 4 33 3 139 1 220 3 258 2 293 1 
69 1 193 1 194 1 249 4 250 10 32 5 135 5 119 2 33 5 176 1 54 4 200 9 74 2 220 4 258 2 
3 2 188 4 229 1 46 1 9 1 194 1 10 4 87 1 119 3 54 1 200 3 159 1 93 2 94 8 95 1 206 2 165 1 167 1 169 1 71 4 249 1 250 17 32 9 135 8 136 4 33 2 176 1 139 1 74 1 220 1 258 2 293 1 
94 2 188 1 71 1 169 1 69 1 10 1 249 2 32 5 250 10 135 5 119 2 136 1 33 3 54 2 200 5 74 1 220 2 258 2 
93 1 94 2 188 1 169 1 71 1 10 1 32 2 250 2 119 1 136 1 200 1 220 1 
93 1 94 2 206 1 188 1 169 1 71 1 10 1 87 1 32 2 250 4 135 2 119 1 33 1 136 1 200 2 220 1 258 1 
94 6 3 1 188 3 169 1 71 3 132 1 10 3 249 1 250 3 32 1 135 2 136 3 33 1 54 1 200 2 220 1 159 1 
3 1 188 4 229 1 10 4 194 1 119 2 200 6 54 2 159 1 94 8 95 1 24 1 69 1 71 4 169 1 132 1 249 2 250 15 32 7 135 8 136 4 33 3 176 1 74 1 220 3 258 2 293 1 142 1 
0 1 259 1 261 1 49 1 286 1 277 1 175 1 
0 1 259 1 261 1 145 1 277 1 170 1 45 1 175 1 49 1 286 1 221 1 107 1 
39 1 40 1 148 1 263 1 125 1 
0 1 39 1 40 1 163 1 277 2 63 1 148 1 263 1 149 1 175 2 286 1 52 1 137 1 156 1 15 1 288 1 255 1 237 1 
0 2 40 1 148 1 263 1 149 1 8 1 47 1 232 1 120 1 156 1 52 2 15 3 237 1 163 1 277 2 63 2 73 1 175 2 251 1 286 1 137 1 288 2 255 1 
0 2 40 2 228 1 148 2 263 2 149 1 8 1 47 1 232 1 120 1 156 1 52 2 15 3 237 1 163 1 20 1 277 2 63 2 73 1 175 2 251 1 286 1 137 1 288 2 
232 1 285 1 40 1 13 1 15 1 148 1 263 1 292 1 
39 1 232 1 40 3 13 1 15 1 228 1 148 3 263 3 265 1 292 1 
40 1 156 1 148 1 263 1 237 1 239 1 
161 1 39 2 40 3 110 1 127 2 96 1 148 3 26 1 263 3 84 1 72 2 133 1 89 1 52 2 156 4 216 1 15 3 288 3 237 2 
0 1 40 1 148 1 188 2 263 1 149 1 84 1 194 1 10 2 119 1 52 1 156 1 15 1 200 1 54 1 274 2 18 1 237 1 276 2 94 4 163 1 277 2 63 1 278 1 71 2 70 1 246 1 175 2 249 1 250 5 32 2 135 3 33 1 136 2 286 2 176 1 137 1 252 1 37 1 288 1 74 1 255 1 258 1 
105 1 292 1 
40 2 65 1 148 2 263 2 189 1 84 1 52 1 156 2 216 1 15 2 288 1 237 1 239 1 
39 1 40 4 228 1 148 4 263 4 84 1 156 1 15 1 38 1 288 1 179 1 237 1 124 1 
161 1 40 2 127 1 96 1 148 2 263 2 72 1 269 1 232 1 52 1 156 2 15 1 288 1 237 1 
39 1 162 1 19 1 40 1 42 1 156 1 128 1 148 1 263 1 237 1 
161 1 40 2 127 1 59 1 96 1 148 2 263 2 72 1 84 1 89 1 156 2 52 1 15 2 288 2 17 1 237 1 
39 1 161 1 40 2 127 1 96 1 148 2 263 2 72 1 84 1 133 1 89 1 156 2 52 1 15 2 288 2 237 1 
39 1 161 1 40 2 127 1 96 1 148 2 263 2 72 1 84 1 268 1 89 1 156 2 52 1 15 2 288 2 237 1 
0 1 39 1 40 1 163 1 277 2 20 1 63 1 148 1 263 1 149 1 175 2 286 1 52 1 137 1 156 1 15 1 288 1 237 1 
40 1 110 1 127 1 148 1 263 1 72 1 232 1 52 1 156 2 216 1 15 1 288 1 237 1 
286 1 270 1 80 1 66 1 27 1 
112 1 66 2 80 2 27 2 8 1 213 1 47 1 233 1 120 1 286 1 270 1 14 1 122 1 105 1 77 1 292 2 
0 1 31 1 270 1 277 1 138 1 66 1 55 1 27 1 175 1 
14 1 270 1 213 1 
125 1 
50 1 234 1 236 1 219 1 180 1 141 1 195 1 
12 1 219 1 117 1 
2 1 187 1 174 1 195 1 50 1 234 1 219 3 158 2 236 1 180 1 141 3 222 1 
50 1 234 1 147 1 236 1 219 2 180 1 141 2 275 1 195 1 
162 1 42 1 225 1 185 1 195 1 282 1 50 1 219 1 141 1 180 1 222 1 
50 1 234 1 219 1 180 1 141 1 222 1 195 1 
50 1 234 2 236 1 219 1 141 1 222 1 195 1 
58 1 150 1 280 1 195 2 50 2 234 1 219 2 180 1 141 2 222 1 
1 1 204 1 225 1 147 2 29 1 195 1 50 1 234 1 236 1 219 3 141 3 180 2 222 1 
19 1 162 1 42 2 185 1 22 1 147 1 114 1 195 1 50 1 234 1 236 1 219 2 180 1 141 2 222 1 
1 1 225 1 147 2 195 2 50 2 121 1 234 1 236 1 219 4 141 4 180 2 222 1 275 1 
50 1 234 1 236 1 219 1 180 1 141 1 222 1 195 1 
1 1 225 1 187 1 147 2 247 1 174 1 195 1 50 1 234 2 158 1 236 2 219 4 141 4 180 3 
5 1 147 1 99 1 195 1 50 1 234 1 219 2 236 1 180 1 141 2 222 1 76 1 
187 1 192 1 174 2 195 1 50 1 234 1 219 3 158 2 236 1 180 1 141 3 222 1 
287 2 28 1 180 2 291 1 
260 1 50 1 219 1 141 1 222 1 195 1 
50 1 234 1 147 1 236 1 219 2 180 1 29 1 141 2 222 1 195 1 
201 1 
50 1 234 1 236 1 219 1 180 1 141 1 222 1 195 1 
147 1 29 1 195 1 50 1 234 1 219 3 158 1 236 1 141 3 180 1 222 1 
1 1 225 1 180 1 247 1 
234 1 180 1 

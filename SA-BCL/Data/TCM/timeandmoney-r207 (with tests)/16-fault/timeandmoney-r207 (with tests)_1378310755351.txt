#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 217 17 347 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 217 17 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 258 (136,155,284) (136,155,284) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 258 (136,155,284) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (117,267) (43,242,299) (136,155,284) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (65,229) (133,205) (133,205) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 258 (136,155,284) (136,155,284) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 189 290 27 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 189 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 101 146 20 175 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 258 (43,242,299) (43,242,299) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 258 (43,242,299) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (65,229) (65,229) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 258 (43,242,299) (43,242,299) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 217 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 348 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
64 1 210 2 94 1 234 1 297 1 162 9 126 2 282 1 238 2 322 2 325 6 52 2 218 5 168 1 328 9 53 4 193 1 76 1 148 1 109 2 135 1 249 1 82 3 337 1 177 1 180 2 86 1 292 1 
64 1 210 2 94 1 234 1 297 1 162 9 126 2 282 1 238 2 322 2 325 6 52 2 218 5 168 1 328 9 53 4 193 1 76 1 148 1 135 1 109 2 249 1 82 3 337 1 177 1 180 2 86 1 292 1 
64 1 210 2 94 1 234 1 297 1 162 10 126 2 282 1 238 2 322 2 325 7 52 2 218 6 168 1 328 10 53 5 193 1 76 1 148 1 135 1 109 2 249 1 82 4 337 1 177 1 180 2 86 1 292 1 
64 1 210 2 94 1 234 1 297 1 162 7 126 2 282 1 238 2 322 2 325 4 52 2 218 4 168 1 328 7 53 3 193 1 76 1 148 1 135 1 109 1 249 1 82 2 337 1 177 1 180 2 86 1 
76 1 210 1 94 1 234 1 109 2 82 1 126 1 162 4 337 1 177 1 238 1 322 1 325 3 52 1 218 3 328 4 53 2 292 1 
105 1 76 1 345 1 94 1 135 1 297 1 126 1 162 2 177 1 180 1 238 1 322 1 353 1 52 1 218 1 328 2 
193 1 76 1 94 1 82 1 126 2 162 3 177 1 180 1 322 2 325 1 218 2 328 3 53 1 
231 1 193 1 76 1 148 1 210 1 94 1 234 1 109 2 82 3 337 1 126 2 162 9 177 1 180 1 238 1 86 1 138 1 322 2 325 7 52 1 218 5 328 9 53 4 292 1 
231 1 193 1 76 1 148 1 210 1 94 1 234 1 109 2 82 3 337 1 126 2 162 9 177 1 180 1 238 1 86 1 138 1 322 2 325 7 52 1 218 5 328 9 53 4 292 1 
71 1 141 1 149 1 
119 1 295 2 149 1 
54 2 26 1 304 2 38 1 194 2 340 2 265 2 283 2 
338 2 93 1 339 1 340 2 3 1 211 1 26 1 265 2 241 2 344 1 283 3 327 2 54 2 331 1 220 1 170 1 304 2 194 3 31 1 307 2 285 1 33 1 287 1 83 1 84 1 310 1 38 1 179 1 62 1 90 2 204 1 314 1 63 1 207 1 354 1 206 1 91 1 
54 1 26 1 304 1 294 1 194 1 340 1 265 1 67 1 283 1 92 1 
276 1 294 1 340 1 67 1 71 1 26 1 265 2 283 2 54 1 73 1 304 1 194 2 173 1 288 1 149 1 222 1 271 1 35 1 113 1 312 1 92 2 
276 1 294 1 340 2 67 1 71 1 26 1 265 2 283 2 54 2 304 2 194 2 288 1 149 1 222 2 271 1 35 1 113 1 312 2 92 2 
221 1 312 1 124 1 355 1 222 1 
71 1 221 1 312 2 149 1 355 1 262 1 222 2 219 1 
312 1 355 1 222 1 
54 1 221 1 294 1 304 1 194 1 340 1 67 1 222 1 26 1 265 1 113 1 312 1 283 1 92 1 
149 1 
71 1 221 1 312 2 95 1 149 1 355 1 262 1 222 2 
116 1 221 2 29 1 232 1 184 1 334 2 149 1 262 1 222 5 34 2 71 1 112 1 321 1 252 1 300 2 51 1 312 5 274 1 355 2 
170 1 332 1 304 1 194 2 339 1 340 1 131 1 33 1 3 1 179 1 265 1 90 1 204 1 63 1 266 1 206 1 241 1 91 1 283 2 327 1 
141 1 38 1 
54 1 304 1 194 2 340 1 318 1 38 2 265 2 283 2 275 1 
74 1 332 1 68 1 
170 1 194 1 339 1 3 1 33 1 38 1 179 1 228 1 90 1 204 1 63 1 241 1 206 1 283 1 327 1 91 1 
54 1 73 1 304 4 194 5 340 4 306 1 131 1 183 1 318 1 38 1 265 5 42 1 266 2 283 5 
70 1 304 2 194 2 340 2 265 2 67 1 283 2 92 1 
54 1 304 3 38 1 194 3 340 3 265 3 266 1 283 3 
304 1 194 1 340 1 265 1 67 1 283 1 92 1 
54 1 318 1 304 1 194 1 340 1 265 1 283 1 92 1 275 1 
276 1 93 1 3 1 318 1 241 1 327 1 283 4 54 2 331 1 194 4 285 1 288 1 251 1 203 1 204 1 63 1 206 1 207 1 338 2 340 3 339 1 211 1 26 1 265 3 266 1 170 1 220 1 304 3 131 1 31 1 33 1 307 1 222 1 271 1 35 1 83 1 84 1 179 1 38 1 139 1 90 1 312 1 354 1 91 1 92 2 
73 1 304 1 38 1 194 2 340 1 265 2 183 1 266 1 283 2 
54 1 276 1 304 3 194 3 340 3 131 1 149 1 288 1 222 1 271 1 69 1 35 1 318 1 265 3 139 1 312 1 266 2 283 3 92 1 
54 1 318 1 74 1 332 1 304 2 194 2 340 2 265 2 266 1 283 2 
170 1 194 1 339 1 3 1 33 1 38 1 179 1 90 1 204 1 63 1 241 1 206 1 283 1 327 1 91 1 
170 1 194 1 339 1 144 1 235 1 38 1 179 1 90 1 204 1 63 1 241 1 206 1 283 1 327 1 91 1 
338 2 120 1 68 2 97 1 279 1 161 1 296 1 263 1 101 1 187 1 106 1 331 1 220 1 74 2 332 2 57 1 31 1 307 4 247 1 83 1 84 1 314 2 354 1 207 2 
70 1 304 1 194 1 340 1 265 1 288 1 283 1 92 1 
24 1 21 1 
24 1 21 1 
50 1 209 1 
50 1 209 1 
50 1 209 1 
24 1 130 1 21 1 
24 1 130 1 21 1 
237 1 24 1 21 1 
24 2 16 1 50 1 209 1 311 1 21 2 
24 1 130 1 21 1 
24 1 226 1 21 1 
24 1 226 1 21 1 
24 1 226 1 21 1 
24 1 17 1 188 1 217 1 312 1 132 1 347 1 222 1 21 1 
24 1 17 1 188 1 217 1 132 1 21 1 
238 1 210 1 52 1 
238 1 353 1 52 1 
117 1 11 1 353 1 122 1 210 2 52 3 
8 1 11 1 353 1 122 1 52 1 267 1 
11 1 353 1 210 1 122 2 52 2 
22 1 119 1 120 1 295 3 232 2 278 1 262 1 71 1 101 1 300 1 321 3 128 1 329 1 221 4 146 1 29 1 195 1 57 1 243 1 30 2 334 1 149 2 247 1 34 1 222 5 36 1 60 1 85 1 87 2 18 2 312 5 355 1 
119 3 120 3 295 9 232 6 123 1 184 1 124 5 7 1 262 1 71 1 101 3 300 2 321 8 128 4 303 1 329 2 221 7 146 3 29 1 195 2 57 3 334 2 149 5 247 3 222 9 34 2 37 1 36 1 87 6 18 6 312 9 19 1 254 5 255 1 355 6 
119 2 120 1 232 2 295 4 278 1 184 1 71 1 101 1 300 1 321 3 128 1 329 1 221 2 146 1 195 1 57 1 30 1 334 1 149 3 247 1 34 1 222 3 85 1 87 2 18 2 312 3 
119 3 120 2 295 7 232 4 278 1 123 1 184 1 7 1 71 1 101 2 300 1 321 5 128 2 329 1 221 3 146 2 195 1 57 2 30 2 334 1 149 4 247 2 34 1 222 4 85 1 87 4 18 4 312 4 19 1 
141 1 339 1 81 1 
339 1 104 1 
200 1 
179 1 339 1 204 1 
178 1 339 1 
179 1 339 1 
179 1 339 3 167 1 204 1 114 1 81 2 
293 1 106 2 120 1 129 1 77 1 57 1 32 1 307 7 134 1 279 3 272 1 111 1 127 2 41 1 240 1 314 4 207 3 
293 1 106 2 120 1 129 1 77 1 57 1 32 1 307 7 134 1 279 3 272 1 111 1 127 2 41 1 240 1 314 4 207 3 
293 1 106 2 120 1 129 1 77 1 57 1 32 1 307 7 134 1 279 3 272 1 111 1 273 1 127 2 41 1 240 1 314 4 207 3 
293 5 338 2 156 1 120 4 23 1 185 1 279 10 319 1 101 3 127 3 323 1 240 1 190 3 106 5 146 3 129 1 77 2 57 4 32 2 31 1 307 31 134 2 247 3 272 1 83 1 14 4 84 1 15 1 111 1 41 2 291 1 314 16 354 1 207 15 
293 1 106 3 338 4 156 1 120 1 129 1 77 1 57 1 32 1 31 2 307 9 158 1 134 1 272 1 279 4 98 1 83 2 84 2 111 1 127 2 41 1 314 5 207 4 354 2 
258 1 94 1 199 1 186 1 126 1 162 1 136 1 180 1 88 1 322 1 90 1 155 1 181 1 241 1 328 1 327 1 
258 1 197 1 182 1 186 1 99 1 126 1 162 2 180 1 88 1 322 1 325 1 90 1 155 1 181 1 241 1 328 2 327 1 
117 1 43 1 197 1 182 1 186 1 162 1 280 1 180 1 88 1 353 1 325 1 90 1 52 1 63 1 181 1 206 1 241 1 284 1 328 1 327 1 
170 1 66 1 133 1 186 2 99 1 126 1 162 1 180 2 88 2 322 1 90 1 205 1 181 2 241 1 229 1 328 1 327 1 
258 1 94 1 182 1 186 1 126 1 162 1 136 1 180 1 88 1 322 1 90 1 155 1 181 1 241 1 328 1 327 1 
244 1 
276 1 232 2 321 2 189 1 241 2 327 2 283 1 10 2 194 1 195 1 108 1 334 1 288 1 149 3 335 1 248 1 150 1 253 1 154 1 63 1 206 1 119 2 257 1 339 1 295 2 260 2 261 2 262 3 71 2 213 1 300 1 265 1 301 2 268 1 73 1 170 2 29 1 173 1 222 5 34 1 174 4 35 1 271 1 349 2 308 1 176 1 309 1 350 1 351 2 179 1 137 2 312 5 90 2 355 6 92 1 
276 1 95 1 262 1 71 2 265 1 283 1 73 1 10 1 194 1 173 1 108 1 288 1 149 2 222 3 174 2 35 1 271 1 350 1 309 1 253 1 154 1 312 3 355 2 92 1 
73 1 276 1 194 1 108 1 173 1 261 1 149 2 288 1 174 3 222 2 271 1 35 1 71 2 309 1 350 1 253 1 265 1 154 1 312 2 283 1 92 1 
276 1 71 2 265 1 283 1 73 1 10 1 194 1 173 1 108 1 288 1 149 2 222 2 174 2 35 1 271 1 350 1 309 1 137 1 253 1 154 1 312 2 355 1 92 1 
276 1 232 1 95 1 321 1 189 1 283 2 54 1 10 4 194 2 108 1 286 1 334 1 149 3 288 1 290 1 253 1 113 1 154 1 119 2 294 1 257 1 340 1 67 1 260 2 261 2 262 3 212 1 71 3 26 1 300 1 265 2 301 2 169 1 73 1 304 1 305 1 29 1 173 1 174 4 222 5 34 1 271 1 35 1 349 2 309 1 350 1 351 2 137 4 312 5 355 7 92 2 
276 1 232 1 321 1 189 1 283 2 54 1 10 1 194 2 108 1 334 1 149 6 288 1 253 1 113 1 154 1 119 2 294 1 257 1 340 1 295 2 67 1 260 1 261 1 262 1 71 4 26 1 300 1 265 2 301 2 73 1 304 1 29 1 173 1 174 3 222 3 34 1 271 1 35 1 349 2 309 1 350 1 176 1 351 2 137 1 312 3 355 2 92 2 
276 1 232 1 321 1 189 1 283 2 54 1 10 2 194 2 286 1 108 1 334 1 149 3 288 1 290 1 253 1 113 1 154 1 119 2 294 1 257 1 340 1 67 1 260 2 261 2 262 2 71 3 26 1 300 1 265 2 301 2 73 1 304 1 305 1 29 1 173 1 174 4 222 4 34 1 271 1 35 1 349 2 309 1 350 1 351 2 137 2 312 4 355 4 92 2 
276 1 232 1 321 1 189 1 283 2 54 1 10 2 194 2 286 1 108 1 334 1 149 3 288 1 290 1 253 1 113 1 154 1 119 2 294 1 257 1 340 1 67 1 260 2 261 2 262 2 71 3 26 1 300 1 265 2 301 2 73 1 304 1 305 1 29 1 173 1 174 4 222 4 34 1 271 1 35 1 349 2 309 1 350 1 351 2 137 2 312 4 355 4 92 2 
276 1 277 1 232 1 2 1 71 2 48 1 27 1 321 1 300 1 265 1 189 1 283 1 73 1 194 1 29 1 173 1 108 1 334 1 288 1 149 2 34 1 222 2 174 2 35 1 271 1 349 1 350 1 309 1 351 1 290 1 253 1 154 1 312 2 92 1 
276 1 232 1 321 1 189 1 283 2 54 1 10 3 194 2 108 1 286 1 334 1 149 3 288 1 290 1 253 1 113 1 154 1 119 2 294 1 257 1 340 1 67 1 260 2 261 2 262 2 71 3 26 1 300 1 265 2 301 2 169 1 73 1 304 1 305 1 29 1 173 1 174 4 222 4 34 1 271 1 35 1 349 2 309 1 350 1 351 2 137 3 312 4 355 5 92 2 
276 1 232 1 321 1 189 1 283 2 54 1 10 3 194 2 108 1 286 1 334 1 149 3 288 1 290 1 253 1 113 1 154 1 119 2 294 1 257 1 340 1 67 1 260 2 261 2 262 2 71 3 26 1 300 1 265 2 301 2 169 1 73 1 304 1 305 1 29 1 173 1 174 4 222 4 34 1 271 1 35 1 349 2 309 1 350 1 351 2 137 3 312 4 355 5 92 2 
276 1 277 1 232 1 71 2 48 1 321 1 300 1 265 1 189 1 283 1 73 1 194 1 29 1 173 1 108 1 334 1 288 1 149 2 34 1 222 2 174 2 35 1 271 1 349 1 350 1 309 1 351 1 253 1 154 1 312 2 92 1 
141 1 338 2 120 1 68 1 279 2 263 1 127 1 106 2 331 1 74 1 220 1 332 1 77 1 129 1 57 1 31 1 307 6 134 1 272 1 83 1 84 1 111 1 38 2 314 3 354 1 207 3 
293 1 338 4 142 1 120 2 316 1 68 11 279 2 319 1 100 1 101 2 190 3 106 1 192 1 331 1 220 2 74 4 332 11 146 2 57 1 31 2 285 1 307 14 287 1 247 1 14 3 224 1 83 2 84 2 15 1 38 1 314 8 207 6 354 2 
338 2 142 1 340 1 265 1 166 1 324 1 266 1 283 1 331 1 74 1 220 1 304 1 194 1 31 1 131 1 285 1 307 2 287 1 289 1 83 1 84 1 203 1 38 1 314 1 354 1 207 1 92 1 
338 2 331 1 170 1 142 1 220 1 304 1 194 1 340 1 131 1 31 1 83 1 84 1 265 1 89 1 90 1 266 1 241 1 354 1 327 1 283 1 
338 4 340 1 339 3 182 1 96 1 281 1 298 1 342 1 163 1 263 1 265 1 266 1 241 7 283 1 327 8 344 2 331 2 170 2 220 2 304 1 194 1 31 2 307 2 285 1 199 1 287 1 248 1 335 1 83 2 152 1 84 2 179 2 153 1 90 8 63 2 314 1 206 2 354 2 207 1 
338 2 142 1 120 1 340 1 68 1 5 1 279 1 318 1 101 1 265 1 283 1 106 1 54 1 331 1 74 1 220 1 332 1 304 1 146 1 194 1 57 1 31 1 307 3 247 1 83 1 84 1 314 1 354 1 207 2 
293 1 331 1 338 2 74 1 220 1 332 1 120 1 31 1 307 2 68 1 279 1 83 1 84 1 263 1 101 1 187 1 314 2 354 1 
106 1 331 1 338 2 74 1 220 1 332 1 57 1 31 1 307 2 68 1 247 1 279 1 83 1 161 1 84 1 263 1 354 1 207 2 
293 1 338 2 120 1 68 2 279 2 101 1 263 1 106 1 331 1 220 1 74 2 146 1 332 2 57 1 31 1 307 4 247 1 83 1 84 1 314 2 354 1 207 2 
293 1 331 1 338 2 74 1 220 1 332 1 120 1 31 1 307 2 68 1 279 1 83 1 84 1 342 1 101 1 187 1 314 2 354 1 
106 1 331 1 338 2 74 1 220 1 332 1 57 1 31 1 307 2 68 1 247 1 279 1 83 1 161 1 84 1 342 1 354 1 207 2 
293 1 338 2 120 1 68 2 279 2 342 1 101 1 106 1 331 1 220 1 74 2 146 1 332 2 57 1 31 1 307 4 247 1 83 1 84 1 314 2 354 1 207 2 
106 1 293 1 331 1 338 2 74 2 220 1 332 2 146 1 120 1 57 1 31 1 307 4 68 2 247 1 279 2 83 1 84 1 101 1 314 2 207 2 354 1 
338 2 339 1 3 1 211 1 241 1 327 1 283 1 331 1 170 1 220 1 194 1 31 1 307 2 33 1 285 1 287 1 83 1 84 1 38 1 179 1 90 1 204 1 314 1 63 1 206 1 354 1 207 1 91 1 
338 2 339 1 144 1 235 1 241 1 327 1 283 1 331 1 170 1 220 1 194 1 31 1 307 2 285 1 287 1 80 1 83 1 84 1 38 1 179 1 90 1 204 1 314 1 63 1 206 1 354 1 207 1 91 1 
293 1 338 2 142 1 120 1 68 2 279 2 101 1 106 1 331 1 220 1 74 2 146 1 332 2 57 1 31 1 307 4 247 1 83 1 84 1 314 2 354 1 207 2 
293 1 338 2 120 1 315 1 339 1 3 1 68 2 211 1 279 2 101 1 241 1 327 1 283 1 106 1 331 1 74 2 220 1 332 2 146 1 194 1 57 1 31 1 307 4 33 1 199 1 247 1 83 1 84 1 179 1 90 1 204 1 314 2 63 1 207 2 206 1 354 1 91 1 
293 1 338 2 142 1 120 1 340 1 68 1 279 1 318 1 101 1 265 1 103 1 283 1 54 1 331 1 220 1 74 1 304 1 146 1 332 1 194 1 57 1 31 1 307 3 247 1 83 1 84 1 314 2 207 1 354 1 
293 2 118 1 338 4 120 2 4 1 98 1 279 4 319 1 101 2 190 1 106 2 9 1 146 2 57 2 31 2 307 13 247 2 175 1 14 2 83 2 336 1 250 1 84 2 15 1 61 1 314 6 20 1 354 2 207 7 
293 1 118 3 338 6 156 2 120 2 4 1 125 1 279 2 98 1 319 2 101 2 102 1 190 2 106 1 9 2 28 1 146 2 57 1 31 3 307 20 247 1 201 1 83 3 14 2 336 2 202 1 84 3 61 1 352 1 313 1 314 11 207 9 354 3 
293 1 118 1 338 4 120 1 4 1 98 1 279 2 319 1 101 1 190 1 106 1 9 1 146 1 57 1 31 2 307 9 247 1 14 2 83 2 336 1 250 1 84 2 15 1 61 1 313 1 314 4 354 2 207 5 
293 1 118 1 338 4 120 1 4 1 98 1 279 2 319 1 101 1 190 1 106 1 9 1 146 1 57 1 31 2 307 9 247 1 14 2 83 2 336 1 250 1 84 2 15 1 61 1 313 1 314 4 354 2 207 5 
293 6 118 3 338 4 156 1 120 7 4 1 125 1 98 1 279 12 319 2 101 6 127 1 102 1 190 4 106 6 192 2 9 1 28 1 146 6 129 1 77 1 57 7 31 2 307 46 134 1 247 6 272 1 201 1 14 4 83 2 336 1 202 1 84 2 15 2 111 1 61 1 352 1 313 1 314 24 354 2 207 22 
256 1 338 2 142 1 339 1 96 1 164 1 265 2 241 2 327 2 283 2 344 2 331 1 220 1 194 2 172 1 31 1 307 2 285 1 198 1 245 1 287 1 83 1 84 1 179 1 153 1 90 2 63 1 314 1 206 1 354 1 207 1 
160 1 258 1 299 1 88 1 242 1 90 2 182 1 199 1 241 2 327 2 
258 1 299 1 88 1 72 1 90 1 182 1 241 1 327 1 
160 1 65 1 170 1 88 1 90 1 241 1 229 1 327 1 
160 1 258 1 299 1 88 1 242 1 90 1 182 1 241 1 327 1 
147 1 
71 1 141 1 112 1 321 1 232 1 252 1 149 1 
119 1 257 1 232 1 295 1 260 1 262 1 71 1 321 1 300 1 301 1 29 1 334 1 149 2 34 1 222 1 312 1 355 1 
119 3 208 1 120 1 259 1 339 4 232 3 295 6 262 1 101 1 320 1 264 1 343 1 300 2 321 4 216 1 104 2 241 1 327 1 269 1 170 1 146 1 29 2 195 1 57 1 334 2 149 3 247 1 222 2 81 1 34 2 271 1 225 1 179 1 87 3 18 3 312 2 90 1 204 1 114 1 63 2 206 1 355 2 230 1 
119 3 120 2 295 6 232 5 262 1 125 1 71 2 47 1 319 1 101 2 321 8 300 2 216 2 102 1 302 1 190 1 28 1 146 2 195 1 29 2 57 2 334 2 149 5 222 1 34 2 247 2 308 1 201 1 14 1 87 5 352 1 227 1 18 5 312 1 355 1 
120 2 294 1 340 1 232 2 67 1 26 1 300 1 321 2 216 1 265 1 326 1 283 1 54 1 304 1 194 1 77 1 305 1 129 1 29 1 57 1 334 1 134 1 34 1 222 1 227 1 113 1 312 1 92 1 
29 1 232 1 334 1 149 1 34 1 71 1 112 1 300 1 252 1 321 1 
119 5 146 2 120 2 232 5 295 10 57 2 149 5 247 2 225 1 101 2 87 5 321 5 216 2 227 1 18 5 
71 1 312 1 149 1 222 1 355 1 262 1 
339 1 232 2 184 1 262 2 46 1 300 2 321 2 268 1 241 4 327 4 170 2 171 1 29 1 195 2 196 1 334 2 150 1 34 2 222 3 248 1 335 1 223 2 308 2 179 1 90 4 312 3 63 1 206 1 355 4 
338 2 93 1 340 2 339 1 3 1 211 1 26 1 265 2 241 1 327 1 283 3 54 2 331 1 170 1 220 1 304 2 194 3 31 1 307 1 285 1 33 1 83 1 84 1 38 1 179 1 90 1 204 1 63 1 207 1 354 1 206 1 91 1 
119 2 29 1 195 1 295 4 232 2 334 1 149 4 34 1 71 2 308 1 127 1 87 2 300 1 321 1 18 2 
188 1 217 1 
188 1 217 1 
188 1 217 1 
188 1 217 1 
188 1 217 1 
188 1 217 1 
188 1 217 1 
188 1 217 1 
24 1 21 1 
293 1 106 2 338 4 156 1 120 1 129 1 77 1 57 1 31 2 307 8 134 1 279 3 272 1 83 2 84 2 111 1 127 1 314 4 207 4 354 2 
141 1 106 2 120 1 77 1 129 1 57 1 307 6 134 1 272 1 279 2 111 1 127 1 314 3 207 3 
106 1 293 1 338 2 146 1 120 1 57 1 45 1 31 1 307 4 247 1 279 2 83 1 84 1 101 1 314 2 207 2 354 1 
106 1 293 1 146 1 120 1 57 1 307 7 247 1 279 2 14 2 15 1 319 1 101 1 314 3 207 4 190 1 
293 4 338 4 156 2 120 3 341 1 279 9 101 2 127 1 190 2 106 5 192 1 146 2 129 1 77 2 57 3 31 2 307 23 134 2 247 2 272 1 14 2 224 1 83 2 15 1 84 2 111 1 314 11 207 12 354 2 
14 1 307 1 207 1 
307 1 314 1 190 1 
293 1 106 2 338 2 146 1 120 1 57 1 31 1 45 1 307 6 247 1 279 3 83 1 84 1 225 1 101 1 314 3 354 1 207 3 
293 1 338 2 120 2 125 1 98 1 279 2 319 1 101 2 102 1 190 1 106 1 146 2 28 1 57 2 31 1 307 12 247 2 14 1 83 1 201 1 84 1 352 1 314 6 207 6 354 1 
106 1 293 1 120 1 129 1 77 1 57 1 307 6 134 1 279 2 314 3 207 3 
293 1 106 1 338 2 156 1 77 1 341 1 31 1 307 3 134 1 279 2 272 1 83 1 84 1 111 1 314 1 207 2 354 1 
106 1 293 1 120 2 77 1 129 1 57 2 307 8 134 1 279 2 326 1 314 4 207 4 
293 1 338 2 120 1 31 1 307 2 98 1 279 1 83 1 84 1 101 1 314 2 354 1 
106 1 293 1 338 2 146 1 120 1 57 1 31 1 307 4 247 1 279 2 98 1 83 1 84 1 101 1 314 2 207 2 354 1 
106 1 293 1 338 6 156 1 77 1 341 1 31 3 307 3 134 1 98 1 279 2 83 3 250 1 84 3 314 1 207 2 354 3 
293 5 338 10 156 2 120 5 341 1 45 1 23 1 98 1 279 12 319 1 101 3 127 1 323 1 190 3 106 7 146 3 129 2 77 3 57 5 31 5 307 34 134 3 247 3 272 1 14 4 83 5 250 1 84 5 15 1 111 1 291 1 314 16 207 18 354 5 
106 2 338 2 120 1 129 1 77 1 57 1 31 1 307 8 134 1 279 2 272 1 98 1 83 1 14 1 84 1 111 1 319 1 127 1 352 1 314 4 354 1 207 4 190 1 
293 1 338 4 120 2 45 1 98 1 279 3 319 1 101 1 127 1 190 1 106 2 146 1 129 1 77 1 57 1 31 2 307 11 134 1 272 1 14 2 83 2 84 2 15 1 111 1 352 1 314 6 207 5 354 2 
293 1 338 6 156 1 120 3 45 1 125 1 98 1 279 4 319 1 101 2 127 1 102 1 190 1 106 3 28 1 146 2 129 1 77 1 57 3 31 3 307 19 134 1 247 2 272 1 14 1 83 3 201 1 84 3 111 1 352 1 314 9 207 10 354 3 
293 2 338 6 156 1 120 3 45 1 125 1 98 1 279 5 319 1 101 2 127 1 102 1 190 1 106 3 146 2 28 1 129 1 77 1 57 2 31 3 307 17 134 1 247 1 272 1 14 1 83 3 201 1 84 3 111 1 352 1 314 10 207 7 354 3 
106 2 338 2 120 1 129 1 77 1 57 1 31 1 307 8 134 1 279 2 272 1 98 1 83 1 14 1 84 1 111 1 319 1 127 1 352 1 314 4 354 1 207 4 190 1 
293 1 338 2 120 2 125 1 98 1 279 2 319 1 101 2 102 1 190 1 106 1 146 2 28 1 57 2 31 1 307 12 247 2 14 1 83 1 201 1 84 1 352 1 314 6 207 6 354 1 
293 2 338 8 156 2 120 3 45 1 125 1 98 1 279 5 319 1 101 2 127 1 102 1 190 1 106 3 28 1 146 2 129 1 77 1 57 2 31 4 307 18 134 1 247 1 272 1 201 1 14 1 83 4 84 4 111 1 352 1 314 10 207 8 354 4 
293 3 338 8 156 2 120 3 125 1 98 1 279 6 319 1 101 3 102 1 190 1 106 3 28 1 146 3 57 2 31 4 307 16 247 2 201 1 14 1 83 4 84 4 250 1 352 1 314 9 207 7 354 4 
106 3 293 3 120 1 77 3 129 1 57 1 307 7 134 3 272 2 279 6 111 1 314 3 207 4 
293 1 338 8 156 2 120 3 125 1 98 1 279 4 319 1 101 2 127 1 102 1 190 1 106 3 28 1 146 2 129 1 77 1 57 2 31 4 307 18 134 1 247 1 272 1 201 1 14 1 83 4 84 4 250 1 111 1 352 1 314 10 207 8 354 4 
73 1 38 1 194 1 157 1 265 1 183 1 283 1 
214 1 333 1 239 1 140 1 348 1 
141 1 170 1 179 1 339 1 90 1 63 1 206 1 241 1 335 1 248 1 327 1 
170 1 304 1 194 2 339 1 340 1 33 1 38 1 179 1 265 1 90 1 204 1 63 1 266 1 241 1 206 1 91 1 283 2 327 1 
276 1 340 2 339 3 265 2 266 1 241 1 327 1 283 2 304 1 194 2 346 1 33 1 288 1 223 1 178 1 38 1 179 2 90 1 204 2 63 1 206 1 91 1 92 1 
276 1 340 2 339 3 235 1 165 1 265 2 266 1 241 2 327 2 283 2 304 1 194 2 346 1 288 1 223 1 178 1 38 1 179 2 90 2 204 2 63 1 206 1 91 1 92 1 
294 1 340 1 339 4 67 1 236 1 71 1 26 1 265 1 104 1 241 1 283 1 327 1 54 1 304 1 194 1 346 1 149 1 81 1 222 2 223 1 271 1 178 1 179 1 113 1 90 1 312 2 204 1 63 1 206 1 355 1 115 1 92 1 
294 1 340 1 339 4 67 1 71 1 26 1 265 1 104 1 241 1 283 1 327 1 54 1 304 1 194 1 346 1 149 1 81 1 222 2 223 1 271 1 178 1 179 1 113 1 90 1 312 2 204 1 63 1 206 1 355 1 230 1 92 1 
281 1 90 1 63 1 206 1 241 1 327 1 
55 1 0 1 170 2 339 3 182 1 199 1 159 1 152 1 281 1 298 1 163 1 179 2 153 1 90 7 204 1 114 1 63 3 241 6 206 2 344 1 327 7 
142 1 315 1 3 1 279 2 241 1 327 1 283 2 106 2 331 2 56 1 332 1 194 2 57 1 199 1 111 1 204 1 63 1 206 1 207 3 338 4 120 1 340 1 339 1 211 1 68 1 164 1 127 1 265 1 266 1 74 1 220 2 304 1 77 1 129 1 31 2 33 1 307 6 134 1 272 1 83 2 84 2 179 1 38 2 90 1 314 3 354 2 91 1 
232 5 320 1 321 4 326 1 104 1 241 1 283 1 327 1 54 1 194 1 57 2 196 1 334 2 149 2 112 1 252 1 113 1 208 1 120 2 294 1 339 2 259 1 340 1 67 1 262 1 71 2 26 1 300 2 216 1 265 1 221 1 170 1 304 1 77 1 129 1 29 2 134 1 81 1 222 3 34 2 271 1 227 1 90 1 312 3 355 2 230 1 92 1 
339 2 199 1 81 1 281 1 179 1 343 1 90 2 204 1 114 1 63 2 241 2 206 1 327 2 
170 1 339 1 199 1 248 1 335 1 58 1 179 1 165 1 90 4 63 1 241 4 206 1 327 4 
55 1 75 1 339 1 12 1 6 1 223 1 159 1 179 1 90 2 204 1 63 2 241 2 206 1 327 2 
280 1 170 1 238 1 353 1 90 1 52 1 63 1 206 1 241 1 327 1 
256 1 339 1 182 1 199 1 179 1 153 1 90 2 63 1 241 2 206 1 327 2 
170 1 339 3 199 1 335 1 248 1 223 1 58 1 298 1 179 2 163 1 153 1 90 5 63 2 241 4 206 2 327 5 
170 1 339 3 13 1 199 1 335 1 248 1 223 1 58 1 179 2 163 1 153 1 90 5 63 2 241 4 206 2 327 5 
170 1 304 1 194 2 339 1 340 1 235 1 38 1 179 1 265 1 90 1 204 1 63 1 266 1 241 1 206 1 91 1 283 2 327 1 
55 1 0 1 339 1 223 1 159 1 179 1 90 1 204 1 114 1 63 2 241 1 206 1 327 1 
143 2 194 1 78 1 172 1 245 1 198 1 246 1 203 1 38 1 265 1 283 1 92 1 
276 1 294 1 1 1 143 2 340 1 67 1 71 1 26 1 265 2 283 2 54 1 221 1 304 1 194 2 78 1 172 1 198 1 245 1 149 1 288 1 246 1 222 2 151 1 35 1 271 1 39 1 113 1 139 1 312 2 92 2 
78 1 246 1 
1 1 143 1 39 1 
141 1 177 1 76 1 218 1 
162 1 126 1 177 1 76 1 322 1 218 1 328 1 
180 1 181 1 328 1 
76 1 94 1 297 2 126 1 162 3 25 1 110 1 177 1 215 1 322 1 218 1 328 3 
162 2 126 1 177 1 76 1 322 1 325 1 218 1 109 1 328 2 
210 1 94 1 234 1 126 1 162 1 238 1 322 1 52 1 218 1 328 1 53 1 
162 1 126 1 177 1 322 1 94 1 218 1 328 1 
162 1 126 1 177 2 76 1 322 1 94 1 328 1 
162 2 126 2 177 1 44 1 270 1 322 2 79 1 94 1 218 1 328 2 
162 3 126 1 177 1 76 1 86 1 148 1 322 1 325 2 94 1 218 2 53 1 328 3 82 1 
117 1 76 1 210 1 94 1 126 1 162 2 59 1 177 1 238 1 353 1 322 1 325 1 52 2 218 1 328 2 
162 4 126 2 177 1 76 1 322 2 325 2 94 1 218 2 53 1 109 1 328 4 82 1 292 1 
162 1 126 1 177 1 76 1 322 1 94 1 218 1 328 1 
76 2 82 1 297 1 25 1 162 4 126 1 177 2 215 1 322 1 325 2 218 3 145 1 328 4 53 1 
162 2 126 1 177 1 76 1 49 1 138 1 322 1 40 1 325 1 94 1 218 1 328 2 
76 1 317 1 94 1 297 2 25 1 126 1 162 3 177 1 215 2 322 1 218 1 328 3 
330 1 107 1 218 2 191 2 
162 1 126 1 322 1 233 1 94 1 328 1 
162 2 126 1 177 1 76 1 148 1 322 1 325 1 94 1 218 1 328 2 
121 1 
162 1 126 1 177 1 76 1 322 1 94 1 218 1 328 1 
76 1 148 1 94 1 297 1 126 1 162 3 177 1 322 1 325 1 218 1 328 3 
218 1 145 1 53 1 82 1 
177 1 218 1 

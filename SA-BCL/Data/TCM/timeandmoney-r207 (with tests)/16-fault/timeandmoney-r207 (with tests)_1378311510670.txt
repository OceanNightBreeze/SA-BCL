#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) 77 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 100 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) 77 71 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 184 278 64 (197,276) 115 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 82 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 98 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 184 278 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 92 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 184 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 184 278 10 280 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) (186,201) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (186,201) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) (186,201) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (76,87,136,261) (76,87,136,261) (76,87,136,261) 287 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 184 255 299 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 47 190 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 47 190 231 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 47 190 164 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 47 190 164 97 279 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 47 190 164 97 279 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 47 190 164 97 308 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 47 190 187 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 47 190 187 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 47 190 164 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 100 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) (93,236) (51,105) 167 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 184 255 299 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 184 278 64 (197,276) 115 44 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) (93,236) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 103 239 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 75 (7,152,199) (7,152,199) (7,152,199) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 184 278 10 191 156 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 184 255 299 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) 77 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 82 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 184 278 64 (197,276) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 98 (197,276) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 98 (198,316) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 184 278 10 83 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 184 278 64 (198,316) 202 (93,236) (93,236) (51,105) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 98 (198,316) 140 29 (51,105) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 184 278 10 191 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 184 255 299 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 184 278 125 303 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 103 239 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 184 103 213 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 184 103 214 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 184 278 64 (197,276) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 184 278 10 83 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 287 1 76 1 
141 1 22 1 82 1 
18 1 141 1 225 2 
223 1 86 2 139 2 0 2 1 2 28 2 172 1 297 2 
77 1 0 1 198 1 1 1 285 1 202 1 86 1 119 1 216 1 57 2 297 1 93 1 177 1 220 1 223 1 64 1 262 2 263 1 184 1 227 2 139 1 28 1 278 1 
189 1 223 1 86 1 139 1 38 1 0 1 209 1 1 1 28 1 297 1 
63 1 0 1 38 1 1 1 264 1 22 1 50 1 141 1 117 1 142 1 295 1 297 1 257 1 258 1 
63 2 0 1 38 1 1 1 22 1 139 1 86 1 50 1 141 1 117 1 142 1 28 1 297 1 257 2 258 1 
222 1 63 1 15 1 256 1 257 1 
222 1 63 2 141 1 284 1 15 1 58 1 257 2 22 1 
222 1 63 1 257 1 
223 1 63 1 38 1 0 1 1 1 267 1 189 1 139 1 86 1 209 1 28 1 15 1 257 1 297 1 
141 1 
222 1 63 2 141 1 284 1 15 1 74 1 257 2 22 1 
222 2 63 5 62 1 284 1 158 1 133 1 22 1 81 1 230 1 269 2 141 1 169 1 12 1 15 2 174 1 257 5 314 2 61 1 221 2 
172 1 82 1 
38 1 0 2 1 2 45 1 139 1 86 1 28 1 147 1 172 1 297 2 16 1 
53 1 65 1 145 1 
64 1 262 1 263 1 198 1 184 1 100 1 216 1 202 1 57 1 227 1 278 1 220 1 
64 1 262 1 263 1 198 1 0 1 184 1 1 1 227 1 202 1 139 1 86 1 232 1 216 1 217 1 57 1 297 1 278 1 220 1 
0 5 1 5 301 1 5 1 248 1 139 4 86 4 28 1 232 1 295 1 147 1 217 2 172 1 297 5 
189 1 86 2 139 2 183 1 38 1 0 2 1 2 297 2 
86 3 139 3 0 3 28 1 1 3 172 1 217 1 297 3 
189 1 86 1 139 1 38 1 0 1 1 1 297 1 
0 1 38 1 1 1 139 1 86 1 28 1 147 1 297 1 16 1 
77 1 198 1 0 3 38 1 1 3 202 1 86 3 50 1 117 1 216 1 217 1 57 1 93 1 218 1 297 3 257 1 258 1 220 1 223 1 63 1 64 1 262 1 263 1 184 1 227 1 139 3 142 1 71 1 28 2 232 1 147 1 278 1 
86 1 139 1 0 2 1 2 295 1 172 1 5 1 217 1 297 2 
63 1 38 1 0 3 1 3 139 3 86 3 50 1 141 1 117 1 142 1 28 1 232 1 147 1 217 2 257 1 297 3 218 1 258 1 259 1 
0 2 65 1 1 2 139 2 86 2 53 1 28 1 147 1 217 1 297 2 
64 1 262 1 263 1 198 1 184 1 216 1 202 1 57 1 227 1 278 1 220 1 
115 1 64 1 262 1 263 1 184 1 216 1 57 1 227 1 278 1 276 1 220 1 
110 1 53 2 118 1 11 1 211 2 175 1 181 1 132 1 65 2 134 1 304 1 271 1 26 1 73 1 234 1 145 2 275 1 273 2 235 2 30 1 313 4 194 1 
86 1 139 1 183 1 38 1 0 1 1 1 297 1 258 1 
207 1 68 1 
207 1 68 1 
282 1 42 1 
282 1 42 1 
282 1 42 1 
207 1 113 1 68 1 
49 1 207 1 68 1 
282 1 207 2 270 1 42 1 315 1 68 2 
207 1 113 1 68 1 
207 1 113 1 68 1 
207 1 185 1 68 1 
207 1 185 1 68 1 
207 1 185 1 68 1 
238 1 35 1 0 2 1 2 242 1 157 1 204 1 49 1 207 1 8 1 86 2 215 1 172 1 257 1 297 2 63 1 20 1 104 1 68 1 139 2 310 1 31 1 196 1 107 1 
238 2 35 1 63 2 20 2 41 1 242 2 290 1 104 2 68 2 250 1 229 1 207 2 141 1 143 2 72 1 257 2 315 1 95 1 196 3 
101 1 75 1 126 1 
101 1 173 1 75 1 
25 1 109 1 101 3 173 1 237 1 126 2 
25 1 193 1 101 2 173 1 237 1 126 1 
25 1 101 2 173 1 237 2 126 1 
2 1 284 1 158 3 157 1 162 2 249 2 48 1 168 2 293 1 89 1 15 4 174 1 257 5 61 2 221 1 222 1 18 1 63 5 225 3 22 1 137 1 269 1 141 2 310 1 271 1 26 1 73 1 149 1 314 1 194 1 107 1 281 1 
38 1 0 1 1 1 284 1 157 1 158 1 162 1 168 1 293 1 86 1 54 1 209 1 15 4 174 1 256 2 257 5 297 1 61 2 221 1 222 3 223 1 63 5 225 1 267 1 22 1 137 1 189 1 269 1 69 2 139 1 141 1 26 1 27 1 73 1 28 1 149 1 314 1 281 1 
2 1 158 3 157 1 162 2 249 1 48 1 293 1 168 2 15 2 257 3 221 1 61 2 18 2 63 3 225 4 133 1 22 1 137 1 269 1 141 3 271 1 26 1 73 1 314 1 194 1 281 1 
79 1 2 1 158 5 157 2 162 4 249 2 48 1 168 4 293 1 15 3 123 1 257 4 221 1 61 4 18 3 63 4 225 7 266 1 133 1 22 1 137 1 269 1 141 4 271 2 26 2 73 2 314 1 194 2 281 2 
288 1 82 1 
98 1 
179 1 
184 1 278 1 
92 1 
184 1 
10 1 184 1 278 1 280 1 
17 1 108 2 129 1 128 1 21 1 85 1 138 1 106 1 9 1 251 1 73 1 233 3 273 4 235 3 313 7 194 1 33 2 
17 1 108 2 129 1 128 1 21 1 85 1 138 1 106 1 9 1 251 1 73 1 233 3 273 4 235 3 313 7 194 1 33 2 
17 1 108 2 99 1 129 1 128 1 21 1 85 1 138 1 106 1 9 1 251 1 73 1 233 3 273 4 235 3 313 7 194 1 33 2 
34 2 108 3 80 1 114 1 85 2 292 4 9 2 251 2 118 2 211 4 212 4 90 1 56 1 124 1 60 1 17 1 129 1 128 1 224 1 132 2 21 2 134 2 138 5 106 1 26 4 271 4 73 5 233 8 273 19 234 2 235 18 150 1 313 37 33 3 194 5 281 4 
34 1 108 3 85 1 251 1 9 1 118 2 211 4 178 1 128 1 129 1 132 2 21 1 134 2 138 1 106 1 73 1 233 4 234 2 273 5 235 4 313 9 32 1 194 1 33 2 
116 1 261 1 87 1 287 1 76 1 
116 1 261 1 87 1 201 1 76 1 
116 1 87 1 186 1 136 1 
116 1 261 1 87 1 201 1 76 1 
116 1 261 1 87 1 287 1 76 1 
102 1 
222 2 299 1 63 2 262 2 184 1 131 1 284 1 158 1 227 2 137 1 291 1 165 1 269 1 255 1 216 2 174 1 57 2 257 2 314 1 61 1 221 1 
127 1 63 2 38 1 0 1 155 1 111 1 1 1 283 1 226 2 264 1 47 1 50 1 117 1 142 1 295 1 257 2 297 1 258 1 94 1 
222 1 127 1 63 3 38 1 0 1 155 1 111 1 1 1 284 1 283 1 226 3 264 1 22 1 24 1 50 1 141 1 117 1 142 1 295 1 74 1 257 3 297 1 258 1 94 1 
127 1 63 2 38 1 0 1 155 1 111 1 1 1 283 1 226 2 264 1 47 1 190 1 50 1 117 1 142 1 295 1 257 2 297 1 258 1 94 1 
222 1 127 1 63 3 38 1 0 1 155 1 1 1 111 1 284 1 283 1 226 2 264 1 47 1 190 1 50 1 117 1 231 1 142 1 295 1 74 1 297 1 257 3 258 1 94 1 
0 1 38 1 111 1 1 1 155 1 284 1 283 1 158 1 203 1 47 1 164 1 50 1 117 1 252 1 295 1 174 1 122 1 257 3 297 1 258 1 61 1 94 1 221 1 222 1 127 1 18 1 63 3 225 1 264 1 226 2 190 1 306 1 269 1 142 1 148 1 314 1 
0 1 38 1 1 1 111 1 155 1 284 1 283 1 158 1 203 1 47 1 164 1 50 1 117 1 252 1 295 1 174 1 122 1 297 1 257 3 258 1 61 1 221 1 94 1 222 1 97 1 127 1 18 1 63 3 264 1 226 2 190 1 306 1 269 1 142 1 148 1 314 1 279 1 153 1 
0 1 38 1 1 1 111 1 155 1 284 1 283 1 158 1 203 1 47 1 164 1 50 1 117 1 252 1 295 1 174 1 122 1 297 1 257 3 258 1 61 1 221 1 94 1 222 1 97 1 127 1 18 1 63 3 264 1 226 2 190 1 306 1 269 1 142 1 148 1 314 1 279 1 153 1 
0 1 38 1 1 1 111 1 155 1 284 1 283 1 158 1 203 1 47 1 164 1 50 1 208 1 117 1 295 1 121 1 174 1 297 1 257 3 258 1 61 1 221 1 94 1 222 1 97 1 127 1 63 3 225 1 264 1 226 2 190 1 306 1 269 1 308 1 142 1 272 1 146 1 314 1 
127 1 63 2 38 1 0 1 155 1 111 1 1 1 283 1 226 2 264 1 187 1 47 1 190 1 50 1 117 1 142 1 295 1 257 2 297 1 258 1 94 1 
127 1 63 2 38 1 0 1 155 1 111 1 1 1 283 1 226 2 264 1 187 1 47 1 190 1 50 1 117 1 142 1 295 1 257 2 297 1 258 1 94 1 
0 1 38 1 111 1 1 1 155 1 284 1 283 1 158 1 203 1 47 1 164 1 50 1 117 1 208 1 295 1 121 1 174 1 257 3 297 1 258 1 61 1 94 1 221 1 222 1 127 1 63 3 225 1 264 1 226 2 190 1 306 1 269 1 142 1 272 1 314 1 
108 2 82 1 85 1 53 1 9 1 118 1 11 1 211 2 172 2 175 1 128 1 129 1 65 1 132 1 134 1 106 1 233 2 73 1 234 1 273 3 145 1 235 3 30 1 313 6 194 1 33 1 
154 1 80 1 292 3 53 11 118 2 11 1 212 3 211 4 56 1 172 1 175 2 130 1 132 2 300 1 65 4 134 2 138 1 26 2 271 1 233 1 144 1 73 2 274 1 234 2 145 11 273 8 235 6 150 1 313 14 317 1 194 1 281 2 
154 1 198 1 0 1 1 1 202 1 244 1 86 1 11 1 118 1 211 2 170 1 254 1 216 1 57 1 217 1 175 1 297 1 220 1 64 1 262 1 263 1 130 1 184 1 100 1 65 1 132 1 300 1 227 1 134 1 139 1 232 1 234 1 273 1 235 1 313 2 278 1 
154 1 198 1 0 1 1 1 202 1 167 1 51 1 86 1 11 1 118 1 211 2 216 1 217 1 57 1 93 1 175 1 297 1 220 1 64 1 262 1 263 1 184 1 132 1 300 1 227 1 134 1 139 1 232 1 234 1 235 1 313 1 236 1 278 1 
299 1 154 1 262 2 130 1 184 1 132 1 285 1 227 2 134 1 268 1 210 1 11 1 118 1 211 2 273 1 234 1 255 1 235 1 216 1 57 2 313 2 175 1 
0 1 1 1 86 1 53 1 118 1 11 1 211 2 175 1 297 1 59 1 65 1 132 1 300 1 134 1 139 1 26 1 271 1 28 1 73 1 145 1 234 1 273 1 147 1 235 2 313 3 194 1 281 1 
181 1 65 1 132 1 134 1 138 1 53 1 11 1 118 1 26 1 233 1 211 2 73 1 145 1 234 1 273 2 30 1 313 2 175 1 
110 1 65 1 132 1 134 1 53 1 11 1 118 1 271 1 211 2 145 1 234 1 235 2 30 1 313 2 175 1 194 1 
53 2 118 1 11 1 211 2 175 1 132 1 65 2 134 1 138 1 26 1 271 1 73 1 233 1 273 2 234 1 145 2 235 2 30 1 313 4 194 1 281 1 
181 1 65 1 132 1 134 1 138 1 53 1 210 1 11 1 118 1 26 1 233 1 211 2 73 1 145 1 234 1 273 2 313 2 175 1 
110 1 65 1 132 1 134 1 53 1 210 1 11 1 118 1 271 1 211 2 145 1 234 1 235 2 313 2 175 1 194 1 
65 2 132 1 134 1 53 2 271 1 210 1 11 1 118 1 26 1 211 2 73 1 145 2 234 1 273 2 235 2 313 4 175 1 194 1 281 1 
65 2 132 1 134 1 138 1 53 2 271 1 11 1 118 1 26 1 233 1 211 2 73 1 145 2 234 1 273 2 235 2 175 1 313 4 194 1 281 1 
64 1 262 1 263 1 198 1 184 1 216 1 202 1 57 1 227 1 93 1 278 1 220 1 
115 1 64 1 262 1 263 1 184 1 216 1 57 1 227 1 278 1 276 1 44 1 220 1 
53 2 118 1 11 1 211 2 175 1 132 1 300 1 65 2 134 1 138 1 26 1 271 1 73 1 233 1 273 2 234 1 145 2 235 2 313 4 194 1 281 1 
64 1 262 1 263 1 198 1 184 1 4 1 202 1 57 1 227 1 93 1 236 1 278 1 220 1 
0 1 1 1 86 1 53 1 118 1 11 1 211 2 175 1 297 1 132 1 300 1 65 1 134 1 188 1 138 1 139 1 271 1 26 1 233 1 28 1 73 1 234 1 273 2 145 1 235 1 147 1 313 3 194 1 281 1 
80 2 246 1 163 1 85 1 166 1 9 1 14 1 13 1 178 1 106 1 271 7 26 8 273 30 277 1 194 8 33 1 281 8 195 1 34 2 108 2 289 1 292 4 118 4 211 8 212 4 120 1 56 2 128 1 129 1 132 4 228 2 134 4 305 1 138 9 307 1 309 1 70 1 233 11 73 9 311 4 234 4 235 27 150 2 313 57 
34 2 108 1 289 1 246 2 163 1 166 1 292 2 118 3 211 6 212 2 120 1 14 1 56 2 178 1 132 3 228 1 134 3 305 1 138 2 307 1 309 2 70 1 26 3 271 2 233 3 311 4 73 3 234 3 273 14 235 12 313 26 277 1 194 2 281 3 
80 2 246 1 163 1 85 2 166 1 9 2 14 1 13 1 178 1 106 2 271 7 26 7 273 33 277 1 194 9 33 2 281 7 34 2 108 3 289 1 292 5 118 4 211 8 212 5 294 1 120 1 56 3 128 2 129 2 132 4 228 1 134 4 305 1 138 9 307 1 309 2 70 1 233 12 73 9 311 4 234 4 235 31 150 2 313 64 
34 2 108 2 80 2 289 1 246 1 163 1 85 1 166 1 292 4 9 1 118 4 212 4 211 8 120 1 13 1 14 1 56 2 178 1 129 1 128 1 132 4 228 1 134 4 305 1 138 7 106 1 307 1 70 1 309 1 26 7 271 6 311 4 73 8 233 9 234 4 273 28 235 25 150 2 313 53 277 1 33 1 194 7 281 7 
34 1 108 1 80 2 289 1 246 1 163 1 85 1 166 1 292 4 9 1 118 2 212 4 211 4 120 1 14 1 56 2 178 1 129 1 128 1 132 2 228 1 134 2 305 1 138 7 106 1 307 1 70 1 309 1 26 7 271 7 311 4 73 8 233 8 234 2 273 27 235 25 150 2 313 52 277 1 33 1 194 8 281 7 
250 1 238 1 207 1 20 1 242 1 66 1 104 1 315 1 68 1 95 1 
49 1 204 1 
238 1 207 1 20 1 265 1 242 1 296 1 67 1 104 1 68 1 
159 1 113 1 
270 1 185 1 135 1 
35 1 238 1 63 1 20 1 242 1 290 1 104 1 68 1 250 1 229 1 207 1 141 1 143 1 72 1 257 1 315 1 95 1 196 2 
35 1 238 1 63 1 20 1 242 1 290 1 104 1 68 1 250 1 229 1 207 1 141 1 143 1 72 1 257 1 315 1 95 1 196 2 
35 1 238 1 63 1 20 1 242 1 290 1 104 1 68 1 250 1 229 1 207 1 141 1 143 1 72 1 257 1 315 1 95 1 196 2 
270 1 159 1 113 1 
270 1 159 1 113 1 
185 1 135 1 
270 1 185 1 135 1 
8 1 31 1 
238 1 0 2 1 2 242 1 157 1 204 1 43 1 49 1 207 1 8 1 86 2 215 1 15 1 172 1 297 2 257 1 63 1 20 1 104 1 68 1 139 2 143 1 310 1 72 1 31 1 196 1 107 1 
239 1 154 1 37 1 0 2 1 2 285 2 243 1 161 1 11 1 118 1 211 2 57 2 175 1 297 2 96 1 262 2 130 1 300 1 132 1 227 2 103 1 134 1 268 1 234 1 273 1 235 1 313 2 
262 2 109 1 263 1 40 1 199 1 4 1 101 2 227 2 7 1 205 1 206 1 55 1 173 1 57 2 75 1 152 1 126 1 220 1 298 1 
240 1 262 1 109 1 263 1 40 1 199 1 101 2 227 1 205 1 206 1 55 1 173 1 57 1 75 1 152 1 126 1 220 1 
262 1 55 1 286 1 216 1 57 1 227 1 176 1 298 1 
262 1 109 1 263 1 40 1 199 1 101 2 227 1 7 1 205 1 206 1 55 1 173 1 57 1 75 1 152 1 126 1 220 1 298 1 
6 1 
230 1 141 1 169 1 158 1 22 1 61 1 82 1 
284 1 158 1 252 1 174 1 122 1 257 1 61 1 221 1 222 1 18 1 63 1 225 1 22 1 269 1 141 2 148 1 314 1 
269 1 191 1 262 1 10 1 184 1 156 1 216 1 57 1 227 1 174 1 314 1 278 1 221 1 
284 1 158 8 289 1 162 5 163 1 165 1 52 1 168 5 292 1 171 1 212 1 91 1 56 1 174 2 257 1 221 2 61 5 222 1 63 1 18 3 225 6 22 2 137 1 305 1 269 2 141 5 70 1 26 2 271 2 73 2 312 2 314 2 277 1 194 2 281 2 
38 1 0 1 1 1 158 1 85 1 86 1 9 1 209 1 88 1 174 1 257 1 297 1 221 1 61 1 223 1 63 1 129 1 267 1 189 1 269 1 139 1 73 1 28 1 312 1 314 1 153 1 
158 1 22 1 269 1 230 1 169 1 141 1 174 1 314 1 221 1 61 1 
18 5 225 10 158 5 162 5 46 1 168 5 141 5 26 2 271 2 73 2 91 1 194 2 281 2 61 5 
222 1 63 1 141 1 284 1 257 1 22 1 
284 1 158 1 291 1 165 1 216 2 255 1 174 1 57 2 257 1 221 1 61 1 222 2 63 1 299 1 262 2 184 1 131 1 302 1 227 2 137 1 269 1 314 1 
77 1 223 1 64 1 262 1 263 1 198 1 0 1 184 1 1 1 202 1 227 1 139 1 86 1 28 1 216 1 57 1 93 1 297 1 278 1 220 1 
18 2 225 4 158 1 162 2 22 2 137 1 269 1 165 1 168 2 141 4 174 1 314 1 33 1 61 2 221 1 
3 1 20 1 242 1 
39 1 20 1 242 1 31 1 95 1 
3 1 20 1 242 1 
3 1 20 1 242 1 
253 1 20 1 242 1 
253 1 20 1 242 1 
253 1 20 1 242 1 
20 1 242 1 
207 1 68 1 
34 1 108 2 129 1 128 1 132 2 134 2 85 1 138 1 106 1 9 1 118 2 73 1 233 3 211 4 273 4 234 2 235 4 313 8 33 1 194 1 
108 2 128 1 129 1 82 1 85 1 106 1 9 1 233 2 73 1 273 3 235 3 313 6 33 1 194 1 
19 1 132 1 134 1 118 1 26 1 271 1 211 2 73 1 234 1 273 2 235 2 313 4 194 1 281 1 
80 1 138 2 292 2 271 2 26 2 212 2 73 2 233 2 273 6 56 1 235 6 150 1 313 12 194 2 281 2 
34 2 108 6 80 1 114 1 85 4 292 2 9 4 118 2 88 1 212 2 211 4 129 2 128 1 132 2 134 2 138 6 106 1 26 2 271 2 233 12 73 5 144 1 273 16 234 2 235 17 150 1 313 33 33 1 194 5 281 2 
212 1 235 1 313 1 
292 1 273 1 313 1 
19 1 132 1 134 1 46 1 138 1 118 1 26 1 271 1 211 2 73 1 233 1 234 1 273 3 235 3 313 6 194 1 281 1 
289 1 163 1 292 1 118 1 212 1 211 2 56 1 178 1 132 1 134 1 305 1 138 1 70 1 26 2 271 2 73 2 233 1 234 1 273 6 235 6 313 12 277 1 194 2 281 2 
108 1 129 1 85 1 138 1 9 1 73 1 233 2 273 3 235 3 313 6 194 1 
34 1 108 1 128 1 132 1 134 1 114 1 85 1 138 1 106 1 9 1 118 1 233 2 211 2 273 1 234 1 235 2 313 3 
108 1 129 1 85 1 9 1 88 1 233 1 73 1 273 2 235 3 313 5 194 1 
178 1 132 1 134 1 138 1 118 1 26 1 211 2 73 1 233 1 234 1 273 2 313 2 
178 1 132 1 134 1 138 1 271 1 118 1 26 1 233 1 211 2 73 1 234 1 273 2 235 2 313 4 194 1 281 1 
34 1 178 1 108 1 132 3 134 3 114 1 85 1 138 1 9 1 118 3 211 6 233 2 13 1 234 3 273 1 235 2 313 3 
34 2 108 4 80 1 114 1 85 3 292 4 9 3 118 5 212 4 211 10 13 1 90 1 56 1 124 1 60 1 178 1 19 1 129 2 128 1 132 5 134 5 138 7 106 1 26 4 271 4 73 6 233 11 234 5 273 20 235 21 150 1 313 41 33 1 194 6 281 4 
108 2 289 1 85 1 292 1 9 1 118 1 212 1 211 2 56 1 178 1 128 1 129 1 132 1 134 1 106 1 73 1 233 2 234 1 273 4 235 4 313 8 33 1 194 1 
108 2 80 1 289 1 85 1 292 1 9 1 118 2 212 2 211 4 56 1 178 1 19 1 129 1 128 1 132 2 134 2 138 1 106 1 26 1 73 2 233 3 234 2 273 6 235 5 313 11 33 1 194 1 281 1 
34 1 108 3 289 1 163 1 85 1 292 1 9 1 118 3 212 1 211 6 56 1 178 1 19 1 129 1 128 1 132 3 134 3 305 1 138 1 106 1 70 1 26 2 271 2 73 3 233 4 234 3 273 9 235 10 313 19 277 1 33 1 194 3 281 2 
34 1 108 2 289 1 163 1 85 1 292 1 9 1 118 3 212 1 211 6 56 1 178 1 19 1 129 1 128 1 132 3 134 3 305 1 138 2 106 1 70 1 26 2 271 1 73 3 233 4 234 3 273 10 235 7 313 17 277 1 33 1 194 2 281 2 
108 2 289 1 85 1 292 1 9 1 118 1 212 1 211 2 56 1 178 1 128 1 129 1 132 1 134 1 106 1 73 1 233 2 234 1 273 4 235 4 313 8 33 1 194 1 
289 1 163 1 292 1 118 1 212 1 211 2 56 1 178 1 132 1 134 1 305 1 138 1 70 1 26 2 271 2 73 2 233 1 234 1 273 6 235 6 313 12 277 1 194 2 281 2 
34 2 108 3 289 1 163 1 85 1 292 1 9 1 118 4 212 1 211 8 56 1 178 1 19 1 129 1 128 1 132 4 134 4 305 1 138 2 106 1 70 1 26 2 271 1 73 3 233 5 234 4 273 10 235 8 313 18 277 1 33 1 194 2 281 2 
34 1 289 1 163 1 292 1 118 3 212 1 211 6 13 1 56 1 178 1 132 3 134 3 305 1 138 2 70 1 26 2 271 1 233 2 73 2 234 3 273 7 235 4 313 11 277 1 194 1 281 2 
108 3 128 2 129 1 85 3 138 3 106 1 9 3 233 6 73 1 273 3 235 4 313 7 194 1 
34 2 108 3 289 1 163 1 85 1 292 1 9 1 118 4 212 1 211 8 13 1 56 1 178 1 129 1 128 1 132 4 134 4 305 1 138 1 106 1 70 1 26 2 271 1 73 3 233 4 234 4 273 10 235 8 313 18 277 1 33 1 194 2 281 2 
241 1 0 1 1 1 295 1 172 1 5 1 297 1 
78 1 241 1 0 1 1 1 200 1 5 1 245 1 23 1 295 1 172 1 297 1 260 1 
299 1 262 1 184 1 255 1 216 1 57 1 227 1 82 1 
64 1 262 1 0 1 198 1 263 1 184 1 1 1 227 1 139 1 86 1 216 1 217 1 57 1 297 1 278 1 220 1 
36 1 64 1 262 1 0 1 198 1 263 1 184 1 1 1 227 1 139 1 86 1 217 1 57 1 297 1 278 1 220 1 
36 1 64 1 262 1 0 1 263 1 184 1 1 1 227 1 139 1 86 1 217 1 57 1 297 1 278 1 276 1 220 1 
197 1 36 1 63 1 98 1 262 1 57 1 227 1 257 1 
36 1 63 1 98 1 262 1 57 1 227 1 257 1 316 1 
262 1 263 1 57 1 227 1 160 1 220 1 
83 1 262 1 10 1 184 1 216 1 57 1 227 1 278 1 
37 1 0 1 198 1 1 1 4 1 202 1 86 1 51 1 11 1 118 1 211 2 217 1 57 1 175 1 297 1 93 1 220 1 64 1 262 1 263 1 184 1 132 1 300 1 227 1 134 1 139 1 234 1 236 1 278 1 
63 1 98 1 262 1 302 1 227 1 105 1 269 1 140 1 15 1 216 1 29 1 57 1 174 1 257 1 314 1 316 1 221 1 
191 1 262 1 10 1 184 1 57 1 227 1 160 1 278 1 
299 1 262 2 184 1 255 1 4 1 216 1 57 2 227 2 
84 1 262 1 184 1 57 1 227 1 278 1 125 1 303 1 
262 1 263 1 40 1 227 1 101 1 216 1 57 1 173 1 75 1 220 1 
239 1 206 1 262 2 4 1 57 2 227 2 103 1 
262 2 184 1 213 1 4 1 216 1 57 2 227 2 103 1 
262 2 184 1 214 1 4 1 216 1 57 2 227 2 103 1 
64 1 262 1 0 1 263 1 184 1 1 1 227 1 139 1 86 1 216 1 217 1 57 1 297 1 278 1 276 1 220 1 
83 1 36 1 262 1 10 1 184 1 57 1 227 1 278 1 
182 1 192 1 172 1 151 1 219 1 
63 2 180 1 182 1 38 1 22 1 247 1 112 1 50 1 141 1 117 1 142 1 192 2 15 1 172 1 257 2 151 2 218 1 258 1 219 2 
96 1 182 1 0 1 1 1 243 1 297 1 151 1 161 1 219 1 
180 1 182 1 247 1 

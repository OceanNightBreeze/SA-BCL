#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 33 167 43 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 33 167 43 36 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 33 167 43 (97,270) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 33 167 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 33 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 72 49 290 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 72 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 207 125 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 207 125 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 207 125 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 207 125 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 207 125 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 287 16 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 33 167 43 (97,270) (97,270) 294 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 33 167 43 36 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 132 203 177 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 132 203 177 92 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 33 94 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 33 94 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 33 94 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 33 94 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 287 16 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 33 94 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 201 6 2 1 47 3 166 4 276 5 168 2 169 1 210 1 135 2 10 1 53 1 11 9 248 1 18 1 99 2 101 1 20 2 292 1 221 2 255 1 295 9 25 2 299 2 307 1 32 1 122 1 83 1 
165 1 201 6 2 1 47 3 166 4 276 5 168 2 169 1 210 1 135 2 10 1 53 1 11 9 248 1 18 1 99 2 101 1 20 2 292 1 221 2 255 1 295 9 25 2 299 2 307 1 32 1 122 1 83 1 
165 1 201 7 2 1 47 4 166 5 276 6 168 2 169 1 210 1 135 2 10 1 53 1 11 10 248 1 18 1 99 2 101 1 20 2 292 1 221 2 255 1 295 10 25 2 299 2 307 1 32 1 122 1 83 1 
165 1 201 4 2 1 47 2 166 3 276 4 168 1 169 1 210 1 135 2 10 1 53 1 11 7 248 1 18 1 99 2 101 1 20 2 292 1 221 2 255 1 295 7 25 2 299 2 307 1 122 1 83 1 
292 1 221 1 201 3 255 1 47 1 295 4 25 1 166 2 299 1 276 3 168 2 135 1 307 1 32 1 11 4 18 1 99 1 101 1 
292 1 20 1 221 1 255 1 295 2 22 1 25 1 24 1 299 1 276 1 169 1 135 1 210 1 307 1 11 2 172 1 
292 1 20 1 201 1 255 1 295 3 47 1 166 1 299 2 276 2 135 2 53 1 307 1 11 3 
201 7 2 1 47 3 166 4 276 5 168 2 135 2 53 1 11 9 18 1 99 1 101 1 20 1 292 1 220 1 221 1 255 1 295 9 224 1 25 1 299 2 307 1 32 1 83 1 
201 7 2 1 47 3 166 4 276 5 168 2 135 2 53 1 11 9 18 1 99 1 101 1 20 1 292 1 220 1 221 1 255 1 295 9 224 1 25 1 299 2 307 1 32 1 83 1 
244 1 308 1 160 1 
244 1 120 1 109 2 
33 1 167 1 43 1 
33 1 36 1 167 1 43 1 
33 1 167 1 270 1 43 1 
73 1 87 1 132 1 186 1 208 1 114 1 243 1 244 1 171 1 308 1 215 1 314 1 40 1 42 1 
33 1 167 1 
212 1 171 1 174 1 175 1 243 1 
244 1 171 2 308 1 174 1 175 1 176 1 197 1 243 2 
171 1 174 1 243 1 
171 1 33 1 175 1 167 1 97 1 270 1 43 1 243 1 
244 1 
244 1 171 2 308 1 174 1 175 1 112 1 197 1 243 2 
66 1 254 1 298 1 205 1 243 5 244 1 171 5 308 1 174 2 157 1 175 2 310 2 139 1 245 1 123 1 17 2 286 2 197 1 250 1 
138 1 147 1 297 1 
138 1 147 1 297 1 
138 1 297 1 161 1 
138 1 297 1 161 1 
138 1 297 1 161 1 
138 1 297 1 
138 1 297 1 
63 1 162 1 
63 1 162 1 
63 1 162 1 
138 1 147 1 297 1 
198 1 138 2 192 1 297 2 63 1 162 1 
45 1 138 1 297 1 
198 1 219 2 21 1 85 2 297 2 300 1 4 1 301 1 90 1 51 3 29 2 6 2 187 1 243 2 244 1 171 2 93 1 138 2 283 2 
219 1 171 1 33 1 85 1 138 1 297 1 283 1 51 1 90 1 29 1 243 1 
221 1 25 1 99 1 
221 1 172 1 25 1 
172 1 25 3 27 1 313 1 99 2 181 1 
172 1 256 1 25 2 313 1 99 1 181 1 
172 1 25 2 313 2 99 1 181 1 
126 2 129 1 3 2 7 1 209 1 170 1 243 5 171 5 244 2 174 1 175 4 179 2 17 1 286 1 250 1 66 3 68 1 223 1 109 3 111 1 258 1 298 2 302 1 120 1 230 1 308 1 310 1 232 1 233 1 84 1 269 1 197 1 
171 1 137 1 200 1 175 1 227 1 243 1 
126 2 129 1 205 1 3 1 209 1 243 3 170 1 244 3 171 3 175 2 179 2 17 1 286 1 66 3 68 1 109 4 111 1 258 1 298 2 120 2 230 1 308 1 310 1 232 1 84 1 269 1 
126 4 205 1 129 1 3 2 209 1 243 4 170 2 244 4 171 4 175 3 179 4 17 1 286 1 66 5 108 1 68 1 109 7 111 2 258 2 298 4 118 1 120 3 230 1 308 1 310 1 232 2 235 1 84 2 269 2 
164 1 121 1 195 1 178 1 
121 3 293 1 266 1 178 1 98 2 305 1 
121 1 98 1 160 1 
163 1 121 1 
74 1 
121 1 178 1 305 1 
121 1 275 1 
111 1 258 1 110 1 272 1 273 2 260 1 150 1 28 1 77 1 5 3 241 1 136 7 155 1 57 4 82 3 60 1 38 2 
111 1 258 1 110 1 272 1 273 2 260 1 150 1 28 1 77 1 5 3 241 1 136 7 155 1 57 4 82 3 60 1 38 2 
111 1 258 1 110 1 272 1 273 2 88 1 260 1 150 1 28 1 77 1 5 3 241 1 136 7 155 1 57 4 82 3 60 1 38 2 
272 2 273 4 5 7 241 2 170 2 136 27 279 2 280 1 57 14 60 1 282 4 180 1 62 2 111 3 23 2 258 3 110 3 183 3 149 2 26 3 260 1 150 1 113 2 76 1 77 1 28 2 263 1 153 1 155 2 191 1 82 13 38 3 84 2 269 2 
0 1 272 1 273 3 240 1 5 4 241 1 136 9 279 2 57 5 282 4 60 1 62 2 111 1 258 1 23 2 110 1 149 1 150 1 260 1 113 2 28 1 155 1 82 4 38 2 
1 1 201 1 202 1 46 1 276 1 131 1 206 2 8 1 135 1 11 2 172 1 55 1 99 1 61 2 292 1 20 1 221 1 255 1 222 2 295 2 182 1 25 2 299 1 184 1 151 1 27 1 226 1 262 1 116 1 307 1 234 1 
1 1 201 2 202 1 46 1 276 1 206 1 134 1 135 1 11 3 172 1 55 1 246 1 99 1 61 1 20 1 221 1 255 1 222 1 295 3 182 1 25 2 299 1 184 1 27 1 226 1 262 1 116 1 307 1 234 1 124 1 
1 1 201 2 202 1 46 1 276 1 206 1 134 1 11 2 172 1 55 1 61 1 99 1 20 1 221 1 255 1 222 1 295 2 25 2 184 1 226 1 27 1 116 1 307 1 234 1 124 1 
20 2 1 1 271 1 46 2 222 1 295 1 299 1 50 1 206 1 226 2 115 1 116 2 135 1 121 1 11 1 231 1 281 1 55 1 140 1 178 1 37 1 246 1 61 1 
1 1 202 1 46 1 131 1 206 1 135 1 11 1 172 1 55 1 99 1 61 1 292 1 20 1 221 1 222 1 295 1 182 1 25 2 299 1 184 1 226 1 27 1 262 1 116 1 234 1 124 1 
48 1 
238 1 1 1 89 2 243 4 244 1 171 4 174 6 178 1 17 1 247 2 250 1 104 2 109 2 188 2 120 2 121 1 34 1 35 2 37 1 197 3 199 1 50 2 206 2 211 1 55 1 140 1 141 1 286 1 61 2 288 1 289 1 66 2 68 1 222 2 69 1 146 2 72 1 298 2 306 1 309 2 310 1 80 1 311 2 237 1 
238 1 112 1 243 2 171 2 309 1 174 2 80 1 141 1 197 1 288 1 289 1 
238 1 171 1 80 1 35 1 141 1 89 1 289 1 288 1 243 1 
238 1 171 1 309 1 174 1 146 1 80 1 141 1 289 1 288 1 243 1 
238 1 167 1 49 1 89 2 243 4 244 1 171 4 174 7 141 1 97 1 285 1 17 1 247 2 286 1 250 1 104 2 289 1 288 1 251 1 291 1 66 1 146 4 72 1 112 1 298 1 188 2 120 2 33 1 308 1 309 4 34 1 80 1 310 1 35 2 311 2 270 1 159 1 43 1 197 3 
199 1 238 1 167 1 89 1 243 2 244 3 171 2 174 2 141 1 97 1 17 1 286 1 247 2 250 1 104 1 289 1 288 1 66 1 146 1 109 2 72 1 298 1 188 2 120 2 33 1 308 1 309 1 34 1 80 1 310 1 35 1 311 2 270 1 43 1 197 1 
238 1 167 1 49 1 89 2 243 3 244 1 171 3 174 4 141 1 97 1 17 1 286 1 247 2 250 1 104 2 251 1 289 1 288 1 291 1 66 1 146 2 72 1 298 1 188 2 120 2 33 1 308 1 309 2 34 1 310 1 80 1 35 2 311 2 270 1 43 1 197 2 
238 1 167 1 49 1 89 2 243 3 244 1 171 3 174 4 141 1 97 1 17 1 286 1 247 2 250 1 104 2 251 1 289 1 288 1 291 1 66 1 146 2 72 1 298 1 188 2 120 2 33 1 308 1 309 2 34 1 310 1 80 1 35 2 311 2 270 1 43 1 197 2 
238 1 49 1 277 1 243 1 171 1 56 1 141 1 17 1 286 1 247 1 250 1 290 1 289 1 288 1 66 1 72 1 298 1 188 1 310 1 80 1 39 1 
238 1 167 1 49 1 89 2 243 3 244 1 171 3 174 5 141 1 97 1 285 1 17 1 247 2 286 1 250 1 104 2 289 1 288 1 251 1 291 1 66 1 146 3 72 1 298 1 188 2 120 2 33 1 308 1 309 3 34 1 80 1 310 1 35 2 311 2 270 1 43 1 197 2 
238 1 167 1 49 1 89 2 243 3 244 1 171 3 174 5 141 1 97 1 285 1 17 1 247 2 286 1 250 1 104 2 289 1 288 1 251 1 291 1 66 1 146 3 72 1 298 1 188 2 120 2 33 1 308 1 309 3 34 1 80 1 310 1 35 2 311 2 270 1 43 1 197 2 
238 1 66 1 72 1 298 1 277 1 188 1 243 1 171 1 310 1 80 1 141 1 17 1 39 1 247 1 286 1 250 1 288 1 289 1 
279 1 23 1 86 1 225 1 282 2 207 1 113 1 240 1 62 1 125 1 
279 1 23 1 86 1 225 1 282 2 207 1 113 1 240 1 62 1 125 1 
279 1 23 1 86 1 225 1 282 2 207 1 113 1 240 1 62 1 125 1 
279 1 23 1 86 1 225 1 282 2 207 1 113 1 240 1 62 1 125 1 
279 1 23 1 86 1 225 1 282 2 207 1 113 1 240 1 62 1 125 1 
127 1 206 2 52 1 136 2 279 1 57 1 282 2 15 1 16 1 61 2 62 1 287 1 67 1 222 2 145 1 23 1 71 1 73 2 185 1 151 2 113 1 186 2 189 1 229 1 158 1 82 1 314 2 
1 1 221 1 202 1 222 2 46 1 182 1 25 2 184 1 206 2 27 1 8 1 172 1 55 1 217 1 216 1 99 1 61 2 124 1 315 1 
1 1 221 1 202 1 222 1 46 1 182 1 25 2 184 1 206 1 27 1 172 1 95 1 55 1 216 1 99 1 61 1 124 1 
1 1 222 1 46 1 50 1 206 1 121 1 231 1 55 1 81 1 140 1 178 1 37 1 217 1 61 1 
1 1 221 1 202 1 222 1 46 1 182 1 25 2 184 1 206 1 27 1 172 1 55 1 217 1 216 1 99 1 61 1 124 1 315 1 
75 1 
244 1 66 1 254 1 308 1 157 1 298 1 160 1 
66 1 109 1 298 1 243 1 171 1 244 2 120 1 308 1 174 1 34 1 310 1 311 1 17 1 286 1 197 1 250 1 104 1 
163 3 1 3 87 2 8 1 243 5 170 2 171 5 244 8 174 5 12 2 96 1 178 3 179 6 17 4 98 2 250 4 103 2 254 1 109 12 258 2 111 2 119 1 120 6 121 10 266 1 268 2 269 2 197 3 126 6 204 2 274 2 275 2 50 1 130 2 206 3 133 1 211 1 55 4 286 4 61 3 144 2 66 9 68 2 222 3 70 1 298 8 303 2 304 1 305 3 308 2 79 2 157 1 310 4 84 2 
126 4 243 1 170 2 211 1 171 1 244 4 213 1 54 1 174 1 12 2 179 4 17 2 286 2 250 2 103 1 66 8 68 1 109 4 258 2 111 2 298 5 183 1 26 1 78 1 152 1 263 1 228 1 190 1 31 1 120 2 308 2 310 2 269 2 84 2 197 1 
66 2 294 1 111 1 258 1 298 1 167 1 260 1 28 1 243 1 171 1 155 1 33 1 310 1 12 2 97 1 17 1 286 1 270 1 43 1 250 1 251 1 
254 1 66 1 298 1 244 1 308 1 310 1 157 1 17 1 286 1 250 1 
66 5 126 5 109 10 258 2 111 2 298 5 170 2 120 5 244 5 12 2 179 5 268 1 269 2 84 2 103 1 
244 1 171 1 308 1 174 1 197 1 243 1 
1 1 205 1 50 2 206 4 243 3 91 1 211 2 171 3 174 4 55 1 96 2 140 1 178 1 17 2 286 2 61 4 250 1 66 2 222 4 68 2 70 1 298 2 306 1 121 1 310 2 37 1 41 1 197 2 237 1 
33 1 36 1 167 1 43 1 
66 1 126 2 68 1 109 4 298 2 211 1 120 2 244 4 308 2 310 1 179 2 38 1 17 1 286 1 250 1 
85 1 283 1 9 1 
85 1 283 1 9 1 
85 1 283 1 143 1 
85 1 283 1 143 1 
85 1 283 1 143 1 
85 1 283 1 
138 1 297 1 
85 1 283 1 9 1 
64 1 93 1 85 1 239 1 283 1 
273 2 240 1 5 2 136 8 279 1 57 4 282 2 60 1 62 1 111 1 258 1 23 1 183 1 26 1 150 1 260 1 113 1 28 1 263 1 228 1 155 1 82 4 38 1 
128 1 273 3 240 1 5 4 170 2 136 17 279 3 213 1 57 10 60 1 282 6 62 3 110 1 23 3 258 3 111 2 149 1 183 1 26 1 260 1 150 1 113 3 28 1 78 1 263 1 228 1 190 1 31 1 155 1 82 7 38 1 269 2 84 1 
128 1 273 3 240 1 5 4 170 2 136 19 279 3 213 1 57 9 60 1 282 6 62 3 110 1 23 3 258 3 111 3 183 1 149 1 26 1 260 1 150 1 113 3 28 1 78 1 263 1 228 1 190 1 31 1 155 1 82 10 38 1 269 2 84 2 
128 1 273 3 240 1 5 5 170 2 136 17 279 3 213 1 57 10 60 1 282 6 62 3 110 2 23 3 258 3 111 2 149 1 183 1 26 1 260 1 150 1 113 3 28 1 78 1 263 1 228 1 190 1 31 1 155 1 82 7 38 1 269 2 84 1 
273 2 240 1 5 2 136 8 279 1 57 4 282 2 60 1 62 1 111 1 258 1 23 1 183 1 26 1 150 1 260 1 113 1 28 1 263 1 228 1 155 1 82 4 38 1 
273 1 240 1 5 2 170 2 136 12 279 1 213 1 57 6 282 2 62 1 110 1 23 1 258 2 111 2 183 1 26 1 113 1 78 1 263 1 228 1 190 1 31 1 82 6 269 2 84 2 
128 1 273 3 240 1 5 5 170 2 136 18 279 4 213 1 57 10 60 1 282 8 62 4 110 2 23 4 258 3 111 2 183 1 149 2 26 1 260 1 150 1 113 4 28 1 78 1 263 1 228 1 190 1 31 1 155 1 82 8 38 1 269 2 84 1 
273 3 240 1 5 6 170 3 136 16 279 4 213 1 57 9 282 8 62 4 110 3 23 4 258 3 111 2 183 1 149 2 26 1 113 4 78 1 263 1 228 1 190 1 31 1 82 7 267 1 269 3 84 2 
111 1 110 3 258 1 273 3 150 2 260 1 28 3 5 6 136 7 155 3 57 3 82 4 60 1 
273 3 240 1 5 4 170 2 136 18 279 4 213 1 57 10 60 1 282 8 62 4 110 1 23 4 258 3 111 2 183 1 149 2 26 1 260 1 150 1 113 4 28 1 78 1 263 1 228 1 190 1 31 1 155 1 82 8 267 1 38 1 269 2 84 1 
111 1 258 1 110 1 23 2 273 2 149 1 260 1 150 1 113 2 28 1 5 3 136 8 279 2 155 1 57 4 82 4 282 4 60 1 38 1 62 2 
258 1 111 1 273 2 150 1 260 1 28 1 5 2 136 6 155 1 57 3 82 3 60 1 38 1 160 1 
111 1 128 1 23 1 258 1 110 1 273 1 113 1 5 2 170 1 136 4 279 1 57 2 82 2 282 2 84 1 269 1 62 1 
136 2 57 1 183 1 26 1 82 1 263 1 
273 4 5 8 170 2 136 25 279 1 57 13 282 2 60 1 62 1 218 1 107 1 294 1 111 5 258 5 110 4 23 1 183 2 149 1 26 2 260 2 150 1 261 1 113 1 28 2 155 2 82 12 38 1 84 2 269 2 
136 1 183 1 82 1 
136 1 57 1 26 1 
23 1 128 1 258 1 110 1 111 1 273 2 113 1 5 3 170 1 136 6 279 1 57 3 282 2 82 3 268 1 269 1 84 1 62 1 
273 1 240 1 5 2 170 2 136 12 279 1 213 1 57 6 282 2 62 1 110 1 23 1 258 2 111 2 183 1 26 1 113 1 78 1 263 1 228 1 190 1 31 1 82 6 269 2 84 2 
258 1 111 1 110 1 273 1 260 1 28 1 5 2 136 6 155 1 57 3 82 3 
110 1 23 1 273 1 149 1 150 1 113 1 28 1 5 2 136 3 279 1 155 1 280 1 57 1 82 2 282 2 60 1 62 1 
294 1 23 1 110 2 258 2 111 2 273 3 260 1 113 1 240 1 28 2 5 5 136 10 279 1 155 2 57 5 282 2 82 5 62 1 
23 1 258 1 110 1 240 1 113 1 5 1 170 1 136 2 279 1 57 2 282 2 62 1 
111 1 23 1 258 1 110 1 273 1 240 1 113 1 5 2 170 1 136 4 279 1 57 2 82 2 282 2 84 1 269 1 62 1 
23 3 110 1 149 1 273 1 240 1 113 3 28 1 5 2 136 3 279 3 155 1 280 1 57 1 267 1 82 2 282 6 62 3 
128 1 273 5 240 1 5 9 170 2 136 31 279 5 280 1 57 15 60 1 282 10 180 1 62 5 23 5 258 4 110 4 111 4 149 2 183 3 26 3 260 2 150 1 113 5 76 1 28 3 263 1 155 3 191 1 82 16 267 1 38 1 269 2 84 2 
203 1 177 1 132 1 
92 1 253 1 203 1 193 1 177 1 58 1 132 1 19 1 
1 1 121 1 222 1 55 1 140 1 178 1 37 1 50 1 206 1 160 1 61 1 
94 1 33 1 
94 1 33 1 
94 1 33 1 
1 1 163 1 275 1 87 1 50 1 206 3 243 2 171 2 244 1 174 1 55 1 96 1 178 1 98 1 61 3 102 1 105 1 106 1 222 3 305 1 121 4 308 1 79 1 
106 1 163 1 1 1 222 3 87 1 275 1 50 1 206 3 303 1 305 1 243 2 244 1 171 2 121 4 308 1 79 1 174 1 55 1 96 1 178 1 98 1 61 3 
1 1 222 1 55 1 296 1 206 1 61 1 
1 2 222 6 296 1 259 1 50 2 151 1 206 7 8 1 117 1 305 1 264 1 121 3 214 1 194 1 266 1 55 3 142 1 178 2 61 7 124 1 287 1 
94 1 33 1 
163 1 204 1 274 1 87 1 50 1 206 1 243 3 244 1 171 3 174 2 175 1 17 2 286 2 98 1 61 1 250 2 144 1 66 1 254 1 222 1 70 1 298 1 303 1 121 2 308 1 157 1 310 2 197 1 
1 1 222 2 296 1 206 2 133 1 8 1 305 1 121 2 266 1 55 2 178 1 98 1 61 2 
106 1 1 1 222 4 50 1 206 4 8 1 30 1 121 1 55 1 140 1 37 1 178 1 61 4 
1 1 222 2 206 2 117 1 305 1 264 1 121 1 156 1 55 2 96 1 13 1 178 1 61 2 249 1 
1 1 221 1 172 1 202 1 222 1 55 1 25 1 50 1 206 1 61 1 
222 2 206 2 16 1 61 2 124 1 8 1 287 1 
1 2 222 4 50 1 206 5 8 1 30 1 121 3 214 1 194 1 55 2 96 1 140 1 37 1 178 2 61 5 287 1 
1 2 222 4 50 1 206 5 8 1 30 1 121 3 214 1 55 2 96 1 140 1 37 1 178 2 61 5 252 1 287 1 
94 1 33 1 
1 1 222 1 206 1 117 1 305 1 264 1 121 1 266 1 55 2 96 1 142 1 178 1 61 1 
307 1 255 1 276 1 160 1 
307 1 11 1 255 1 295 1 299 1 276 1 135 1 
20 1 11 1 116 1 
292 1 65 1 255 1 295 2 299 1 276 1 169 1 135 1 154 1 11 2 307 1 196 1 100 1 
307 1 201 1 11 2 255 1 295 2 299 1 276 1 168 1 135 1 
292 1 221 1 295 1 166 1 25 1 299 1 276 1 135 1 11 1 18 1 99 1 
292 1 307 1 11 1 295 1 299 1 276 1 135 1 
292 1 307 2 11 1 255 1 295 1 299 1 135 1 
292 1 295 2 299 2 276 1 135 2 242 1 307 1 11 2 265 1 59 1 
292 1 201 2 255 1 2 1 295 3 47 1 166 1 299 1 276 2 135 1 307 1 11 3 83 1 
292 1 221 1 201 1 255 1 295 2 148 1 25 2 299 1 276 1 27 1 135 1 307 1 172 1 11 2 99 1 
292 1 201 2 255 1 295 4 47 1 166 1 299 2 276 2 168 1 135 2 307 1 11 4 32 1 
292 1 307 1 11 1 255 1 295 1 299 1 276 1 135 1 
65 1 201 2 255 2 295 4 47 1 166 1 299 1 276 3 169 1 135 1 307 2 11 4 196 1 100 1 
292 1 201 1 255 1 295 2 224 1 257 1 299 1 276 1 135 1 307 1 11 2 173 1 
292 1 65 2 255 1 295 3 299 1 276 1 169 2 135 1 11 3 307 1 14 1 100 1 
278 2 276 2 312 1 44 1 
292 1 11 1 295 1 299 1 236 1 135 1 
292 1 307 1 201 1 11 2 255 1 295 2 299 1 276 1 83 1 135 1 
284 1 
292 1 307 1 11 1 255 1 295 1 299 1 276 1 135 1 
292 1 201 1 255 1 295 3 299 1 276 1 169 1 135 1 11 3 307 1 83 1 
47 1 166 1 196 1 276 1 
307 1 276 1 

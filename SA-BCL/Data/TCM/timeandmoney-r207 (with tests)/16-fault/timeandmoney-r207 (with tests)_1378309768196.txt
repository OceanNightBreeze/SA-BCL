#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 236 (132,192) 5 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 236 232 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 236 (132,192) 5 287 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 257 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (51,82,319) (12,165,179) (12,165,179) (12,165,179) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (51,82,319) (12,165,179) (12,165,179) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (51,82,319) (12,165,179) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (264,324) (178,182) (178,182) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (51,82,319) (12,165,179) (12,165,179) (12,165,179) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 24 139 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 135 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 302 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 236 232 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 308 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 236 (132,192) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 257 208 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 236 (132,192) (132,192) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (51,82,319) (51,82,319) (51,82,319) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (51,82,319) (51,82,319) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (264,324) (264,324) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (51,82,319) (51,82,319) (51,82,319) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 236 (132,192) 5 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 24 139 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 302 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 87 4 162 1 122 1 47 1 126 1 294 7 90 9 250 1 296 1 93 2 174 1 176 1 220 1 310 1 224 1 64 3 72 1 277 1 276 1 154 1 155 2 38 2 156 9 
0 1 87 4 162 1 122 1 47 1 126 1 294 7 90 9 250 1 296 1 93 2 174 1 176 1 220 1 310 1 224 1 64 3 72 1 277 1 276 1 154 1 155 2 38 2 156 9 
93 1 19 1 176 1 90 1 155 1 156 1 
93 1 19 1 176 1 90 1 155 1 156 1 
93 1 19 1 176 1 90 1 155 1 156 1 
93 1 19 1 176 1 90 1 155 1 156 1 
0 1 122 1 87 2 162 1 64 1 47 1 126 1 294 3 90 4 93 1 277 1 276 1 174 1 176 1 154 1 155 1 38 2 156 4 
0 1 127 1 228 1 126 1 90 2 229 1 93 1 72 1 277 1 276 1 55 1 149 1 176 1 154 1 155 1 156 2 
0 1 224 1 87 1 64 1 294 1 90 3 93 2 72 1 277 1 176 1 154 1 155 2 156 3 
302 1 263 1 71 1 
101 2 11 1 71 1 
113 1 96 2 298 2 164 2 318 2 184 1 211 2 325 2 
136 1 192 1 5 1 164 1 184 1 66 2 92 1 295 1 96 1 298 1 318 1 236 1 211 1 307 1 325 1 
96 1 134 1 298 1 164 1 318 1 184 1 185 1 211 1 325 1 213 1 
265 1 86 1 21 1 185 1 71 1 202 1 96 1 189 1 172 1 211 1 102 1 325 1 263 1 219 1 
86 1 164 1 21 2 185 1 71 1 202 2 96 1 298 1 318 1 172 1 211 1 102 1 325 1 263 1 219 1 
202 1 171 1 21 1 186 1 201 1 
202 2 21 2 186 1 263 1 71 1 91 1 157 1 201 1 
202 1 21 1 201 1 
164 1 21 1 184 1 185 1 186 1 249 1 202 1 96 1 134 1 298 1 318 1 211 1 213 1 325 1 
71 1 
202 2 53 1 21 2 186 1 263 1 71 1 91 1 201 1 
119 2 161 1 225 1 268 1 21 5 141 1 186 2 68 1 71 1 91 1 315 1 201 2 202 5 146 1 30 2 234 1 263 1 116 1 222 2 
136 1 96 1 298 1 164 1 236 1 259 1 211 1 66 1 325 1 200 1 
113 1 302 1 
164 1 113 2 74 1 96 2 298 1 318 1 211 2 325 2 217 1 
105 1 20 1 209 1 
136 1 232 1 236 1 66 1 
164 4 185 1 200 2 113 1 14 1 96 4 278 1 298 4 318 1 259 1 211 4 15 1 325 4 217 1 
96 2 134 1 298 2 164 2 185 1 320 1 211 2 325 2 
113 1 96 3 298 3 164 3 318 1 211 3 325 3 200 1 
96 1 134 1 298 1 164 1 185 1 211 1 325 1 
74 1 96 1 298 1 164 1 318 1 185 1 211 1 325 1 217 1 
136 1 86 1 192 1 5 1 164 3 21 1 184 1 287 1 185 1 66 1 200 1 202 1 96 3 298 3 318 2 172 1 236 1 259 1 211 3 102 1 325 3 219 1 217 1 241 1 
113 1 265 1 96 2 298 1 164 1 211 2 58 1 325 2 200 1 
86 1 164 3 21 1 185 1 71 1 70 1 200 2 202 1 96 3 298 3 318 1 172 1 259 1 211 3 102 1 325 3 217 1 219 1 241 1 
105 1 164 2 200 1 96 2 298 2 318 1 211 2 209 1 325 2 217 1 
136 1 236 1 66 1 
136 1 257 1 66 1 
266 2 194 1 20 1 183 1 7 1 125 1 129 1 67 2 10 1 49 1 75 1 54 2 209 1 153 1 117 1 61 1 
96 1 298 1 164 1 172 1 185 1 211 1 320 1 325 1 
13 1 158 1 
13 1 158 1 
231 1 243 1 
231 1 243 1 
231 1 243 1 
13 1 214 1 158 1 
13 1 214 1 158 1 
13 1 214 1 158 1 
13 1 88 1 158 1 
13 1 131 1 158 1 
13 2 231 1 243 1 48 1 314 1 158 2 
13 1 88 1 158 1 
13 1 88 1 158 1 
1 1 159 1 193 1 41 1 164 2 286 1 289 1 199 1 131 1 94 1 13 1 202 1 96 2 298 2 211 2 180 1 21 1 312 1 109 1 143 1 113 1 36 1 325 2 158 1 
1 2 193 2 41 1 285 1 164 1 289 2 9 1 249 1 202 2 94 2 13 2 96 1 134 1 298 1 211 1 210 1 213 1 60 1 273 1 21 2 184 1 185 1 142 1 143 2 71 1 26 1 33 1 318 1 37 1 325 1 158 2 
162 1 276 1 126 1 
276 1 126 1 229 1 
162 2 121 1 276 3 305 1 280 1 229 1 
162 1 276 2 252 1 305 1 280 1 229 1 
162 1 276 2 305 2 280 1 229 1 
119 1 161 3 40 1 42 1 247 1 288 2 125 1 130 2 293 2 199 1 11 1 91 1 201 1 202 5 253 1 101 3 263 1 222 1 137 1 270 1 268 1 21 5 312 1 186 4 71 2 30 1 31 1 75 1 36 1 323 1 151 1 116 2 
119 2 161 8 42 2 288 6 125 3 128 1 130 6 11 3 91 1 201 6 202 9 171 5 206 1 253 2 57 1 304 5 101 9 263 1 104 1 222 2 270 3 268 1 21 9 312 4 110 1 186 7 68 1 71 5 30 2 31 3 75 3 323 3 151 1 116 6 240 1 
119 1 161 3 42 1 247 1 288 2 125 1 293 1 130 2 11 2 202 3 253 1 101 4 263 1 222 1 137 1 270 1 21 3 312 1 186 2 68 1 71 3 30 1 31 1 75 1 323 1 116 2 
119 1 161 5 42 1 247 1 288 4 125 2 128 1 130 4 293 2 11 3 202 4 206 1 253 1 101 7 263 1 222 1 137 1 270 2 21 4 312 2 186 3 68 1 71 4 30 1 31 2 75 2 323 2 116 4 240 1 
138 1 272 1 302 1 
138 1 191 1 
311 1 
138 1 258 1 79 1 
138 1 190 1 
138 1 79 1 
138 3 272 2 258 1 114 1 79 1 83 1 
270 1 108 2 125 1 67 7 203 1 52 1 170 3 29 1 317 1 97 4 54 3 78 1 150 1 115 1 279 2 16 1 118 1 
270 1 108 2 125 1 67 7 203 1 52 1 170 3 29 1 317 1 97 4 54 3 78 1 150 1 115 1 279 2 16 1 118 1 
270 1 108 2 125 1 65 1 67 7 203 1 52 1 170 3 29 1 317 1 97 4 54 3 78 1 150 1 115 1 279 2 16 1 118 1 
244 1 124 4 7 1 125 4 203 2 52 1 170 10 97 16 297 1 54 15 256 3 16 1 61 1 266 2 270 4 108 3 183 1 313 1 67 31 275 1 29 2 317 2 147 1 31 3 75 3 78 2 237 1 150 5 80 1 323 3 115 1 279 5 117 1 118 1 
166 1 125 1 7 2 203 1 170 4 97 5 297 1 54 4 16 1 61 2 266 4 270 1 108 2 183 2 67 9 230 1 29 1 317 1 78 1 150 1 279 3 115 1 117 2 118 1 
165 1 66 1 90 1 144 1 12 1 51 1 93 1 72 1 254 1 238 1 176 1 59 1 155 1 179 1 156 1 17 1 
3 1 165 1 294 1 66 1 90 2 144 1 51 1 93 1 72 1 254 1 299 1 34 1 59 1 155 1 179 1 156 2 17 1 
51 1 72 1 299 1 34 1 165 1 59 1 294 1 66 1 90 1 144 1 156 1 17 1 
136 1 3 1 182 1 66 1 89 1 90 1 144 2 93 1 72 2 324 1 59 2 178 1 155 1 156 1 17 2 
165 1 66 1 90 1 144 1 12 1 51 1 93 1 72 1 254 1 299 1 176 1 59 1 155 1 179 1 156 1 17 1 
233 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
119 1 265 1 85 1 86 1 268 1 21 2 140 1 185 1 202 2 30 1 96 1 189 1 172 1 211 1 102 1 135 1 325 1 219 1 222 1 
119 1 136 1 268 1 21 2 139 1 66 1 24 1 91 1 201 2 202 2 30 1 133 1 116 1 222 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
265 1 85 1 86 1 21 3 140 1 185 1 91 1 201 1 202 3 96 1 53 1 189 1 172 1 211 1 102 1 135 1 325 1 219 1 
119 1 265 1 85 1 86 1 268 1 21 2 140 1 185 1 202 2 30 1 96 1 189 1 172 1 211 1 102 1 135 1 325 1 219 1 222 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
265 1 85 1 86 1 21 2 140 1 185 1 202 2 96 1 189 1 172 1 211 1 135 1 102 1 325 1 219 1 
266 2 270 1 20 1 108 1 183 1 125 1 7 1 129 1 67 6 49 1 113 2 170 2 29 1 97 3 54 3 78 1 302 1 209 1 153 1 115 1 279 2 16 1 117 1 61 1 118 1 
245 1 43 1 124 2 7 2 129 2 49 1 14 1 97 6 54 3 256 2 56 1 209 7 61 2 266 4 105 5 270 2 20 7 183 2 185 1 274 1 313 1 67 9 113 1 32 1 31 2 323 2 152 1 117 2 
120 1 43 1 164 1 7 1 129 1 49 1 200 1 96 1 97 1 298 1 54 1 259 1 211 1 100 1 61 1 266 2 136 1 267 1 105 1 183 1 66 1 67 2 187 1 232 1 32 1 236 1 325 1 117 1 
266 2 136 1 43 1 164 1 183 1 7 1 129 1 67 1 66 1 49 1 168 1 200 1 96 1 32 1 298 1 54 1 259 1 211 1 325 1 117 1 61 1 
120 1 164 1 7 2 292 1 129 2 49 2 295 1 200 1 96 1 97 1 298 1 54 1 211 1 308 1 103 1 61 2 266 4 136 2 183 2 66 4 67 2 32 1 238 1 153 1 325 1 117 2 
43 1 164 1 7 1 125 1 129 1 49 1 170 1 96 1 97 1 298 1 207 1 54 2 209 1 211 1 217 1 61 1 266 2 105 1 270 1 20 1 183 1 67 3 31 1 75 1 318 1 323 1 279 1 325 1 117 1 
266 2 270 1 20 1 183 1 7 1 129 1 67 2 49 1 31 1 97 2 209 1 153 1 215 1 117 1 61 1 
266 2 20 1 183 1 7 1 125 1 129 1 67 2 10 1 49 1 75 1 54 2 209 1 153 1 117 1 61 1 
266 2 270 1 20 1 183 1 7 1 129 1 67 2 49 1 31 1 97 2 209 1 153 1 323 1 117 1 61 1 
266 2 270 1 20 1 183 1 7 1 129 1 67 2 49 1 31 1 97 2 209 1 215 1 103 1 117 1 61 1 
266 2 20 1 183 1 7 1 125 1 129 1 67 2 10 1 49 1 75 1 54 2 209 1 103 1 117 1 61 1 
266 2 270 1 20 1 183 1 7 1 129 1 67 2 49 1 31 1 97 2 209 1 323 1 103 1 117 1 61 1 
266 2 270 1 20 1 183 1 7 1 129 1 67 2 49 1 31 1 97 2 209 1 323 1 117 1 61 1 
136 1 192 1 236 1 66 1 
136 1 208 1 257 1 66 1 
266 2 43 1 270 1 20 1 183 1 7 1 129 1 67 2 49 1 31 1 97 2 209 1 323 1 117 1 61 1 
192 1 132 1 236 1 238 1 66 1 
84 1 43 1 164 1 7 1 129 1 49 1 170 1 96 1 97 2 298 1 211 1 209 1 217 1 61 1 266 2 105 1 270 1 20 1 183 1 67 2 31 1 318 1 150 1 323 1 325 1 117 1 
160 4 2 1 4 1 7 3 170 8 97 20 255 1 256 3 261 1 16 1 266 6 181 1 270 5 108 1 183 3 111 1 28 1 29 1 31 4 279 4 115 1 117 3 118 1 282 1 124 4 195 1 125 5 291 1 205 2 297 1 54 21 309 1 61 3 313 1 67 41 69 1 230 1 75 4 77 1 78 1 150 4 323 4 80 3 
282 1 160 4 2 1 4 1 124 4 195 1 7 4 125 4 291 1 170 7 297 2 205 2 97 20 255 1 54 18 256 3 261 1 16 1 309 1 61 4 266 8 181 1 270 5 108 1 183 4 313 1 67 38 69 1 111 1 230 1 28 1 29 1 31 4 77 1 75 3 78 1 150 3 80 3 323 4 115 1 279 4 117 4 118 1 
282 1 160 4 2 1 4 1 124 4 195 1 7 2 125 8 170 14 297 1 205 1 97 27 255 1 54 25 256 4 261 1 16 1 61 2 266 4 181 1 270 8 108 1 183 2 313 2 67 52 69 1 111 1 230 1 28 1 29 1 31 7 77 1 75 7 78 1 150 7 152 2 80 2 323 7 115 1 279 7 117 2 118 1 
39 1 160 2 2 1 124 2 195 1 7 2 125 3 170 6 205 1 97 9 255 1 54 10 256 1 309 1 61 2 266 4 270 3 183 2 313 1 67 19 69 1 230 1 28 2 31 3 75 3 150 3 80 1 323 3 279 3 117 2 
282 1 160 4 2 1 4 1 124 2 195 1 125 2 7 3 170 4 297 2 205 2 97 14 255 1 54 12 256 2 261 1 61 3 266 6 181 1 270 3 183 3 67 26 69 2 111 1 230 1 28 1 31 3 77 1 75 2 150 2 80 2 323 3 279 2 117 3 
1 1 273 1 285 1 289 1 143 1 9 1 13 1 94 1 27 1 60 1 158 1 
180 1 131 1 
94 1 13 1 1 1 289 1 290 1 143 1 8 1 198 1 158 1 
214 1 326 1 
88 1 314 1 251 1 
1 1 193 2 41 1 285 1 164 1 289 1 9 1 249 1 94 1 13 1 202 1 96 1 134 1 298 1 211 1 210 1 213 1 60 1 273 1 21 1 184 1 185 1 142 1 143 1 71 1 26 1 33 1 318 1 37 1 325 1 158 1 
1 1 193 2 41 1 285 1 164 1 289 1 9 1 249 1 94 1 13 1 202 1 96 1 134 1 298 1 211 1 210 1 213 1 60 1 273 1 21 1 184 1 185 1 142 1 143 1 71 1 26 1 33 1 318 1 37 1 325 1 158 1 
1 1 193 2 41 1 285 1 164 1 289 1 9 1 249 1 94 1 13 1 202 1 96 1 134 1 298 1 211 1 210 1 213 1 60 1 273 1 21 1 184 1 185 1 142 1 143 1 71 1 26 1 33 1 318 1 37 1 325 1 158 1 
314 1 214 1 326 1 
314 1 214 1 326 1 
88 1 251 1 
88 1 314 1 251 1 
159 1 286 1 
1 1 159 1 193 1 286 1 164 2 289 1 199 1 131 1 202 1 94 1 13 1 96 2 298 2 211 2 210 1 180 1 63 1 21 1 312 1 109 1 143 1 186 1 26 1 113 1 36 1 325 2 158 1 
266 2 120 1 43 1 107 1 183 1 7 1 292 1 129 1 66 2 67 2 49 1 295 2 145 1 95 1 96 2 32 1 97 1 54 1 98 1 211 2 325 2 117 1 61 1 
51 1 204 1 254 1 299 1 319 1 238 1 66 2 82 1 144 1 
51 1 62 1 254 1 299 1 66 1 82 1 144 1 
136 1 204 1 324 1 66 1 264 1 144 1 
51 1 204 1 254 1 299 1 319 1 66 1 82 1 144 1 
269 1 
136 1 192 1 5 1 96 1 298 1 164 1 318 1 184 1 236 1 211 1 66 1 325 1 
119 1 161 1 268 1 108 1 288 2 130 2 11 2 71 4 30 1 133 1 253 1 101 4 116 2 263 2 222 1 
161 1 225 1 302 1 234 1 263 1 116 1 71 1 
119 1 161 1 11 1 91 1 201 1 202 1 301 1 101 1 262 1 221 1 263 1 222 1 268 1 21 1 71 2 30 1 116 1 
119 1 136 1 30 1 268 1 167 1 66 1 222 1 
282 1 119 2 161 8 4 1 124 1 288 5 125 2 130 5 11 3 91 1 201 1 202 1 133 1 253 1 303 1 256 1 260 2 101 6 177 1 263 2 222 2 181 1 268 2 270 2 226 1 21 1 71 5 111 1 30 2 31 2 77 1 75 2 80 1 323 2 116 5 
119 1 161 2 164 1 125 1 249 1 169 1 202 1 96 1 134 1 298 1 211 1 260 2 177 1 213 1 222 1 268 1 270 2 21 1 184 1 185 1 29 1 30 1 78 1 318 1 115 1 325 1 116 2 242 1 
119 1 161 1 225 1 268 1 71 1 30 1 234 1 116 1 263 1 222 1 
161 5 270 2 288 5 46 1 125 2 130 5 11 5 71 5 31 2 75 2 260 2 323 2 101 10 177 1 116 5 
202 1 21 1 263 1 71 1 91 1 201 1 
119 1 136 1 6 1 268 1 21 1 139 1 66 1 24 1 91 1 201 2 202 1 30 1 133 1 116 1 222 1 
94 1 143 1 239 1 
94 1 143 1 239 1 
94 1 143 1 239 1 
94 1 143 1 23 1 
159 1 94 1 196 1 143 1 50 1 
94 1 143 1 23 1 
94 1 143 1 23 1 
94 1 143 1 
13 1 158 1 
124 1 125 1 7 1 170 2 97 4 54 4 256 1 16 1 61 1 266 2 181 1 270 1 108 1 183 1 67 8 230 1 29 1 78 1 80 1 279 2 115 1 117 1 118 1 
124 2 125 1 7 2 170 3 97 6 54 5 256 1 16 1 61 2 266 4 181 1 270 2 106 1 108 1 183 2 313 1 67 11 230 1 29 1 31 1 78 1 150 1 80 1 323 1 115 1 279 2 117 2 118 1 
282 1 4 1 124 1 7 3 125 3 170 4 97 9 297 1 54 10 256 1 16 1 61 3 266 6 181 1 270 3 106 1 108 1 183 3 67 19 111 1 230 1 29 1 31 2 77 1 75 2 78 1 150 1 80 1 323 2 115 1 279 3 117 3 118 1 
282 1 4 1 124 1 7 3 125 2 170 5 297 1 97 10 54 7 256 1 16 1 61 3 266 6 181 1 270 3 106 1 108 1 183 3 67 17 111 1 230 1 29 1 31 2 75 1 77 1 78 1 150 2 80 1 323 2 115 1 279 3 117 3 118 1 
124 1 125 1 7 1 170 2 97 4 54 4 256 1 16 1 61 1 266 2 181 1 270 1 108 1 183 1 67 8 230 1 29 1 78 1 80 1 279 2 115 1 117 1 118 1 
282 1 4 1 124 1 7 1 125 2 170 2 97 6 54 6 256 1 61 1 266 2 181 1 270 2 183 1 67 12 111 1 230 1 31 2 75 2 77 1 150 1 80 1 323 2 279 1 117 1 
282 1 4 1 124 1 7 4 125 2 170 5 97 10 297 2 54 8 256 1 16 1 61 4 266 8 181 1 270 3 106 1 108 1 183 4 67 18 111 1 230 1 29 1 31 2 77 1 75 1 78 1 150 2 80 1 323 2 115 1 279 3 117 4 118 1 
282 1 4 1 124 1 7 4 125 2 170 6 97 9 297 2 54 7 256 1 309 1 61 4 266 8 181 1 270 3 183 4 67 16 111 1 230 1 31 3 77 1 75 2 150 3 80 1 323 3 279 3 117 4 
270 1 125 1 67 7 29 3 170 6 97 3 54 4 78 3 150 3 279 3 115 1 16 2 118 1 
282 1 4 1 124 1 7 4 125 2 170 4 97 10 297 2 54 8 256 1 16 1 309 1 61 4 266 8 181 1 270 3 108 1 183 4 67 18 111 1 230 1 29 1 31 2 77 1 75 1 78 1 150 1 80 1 323 2 115 1 279 3 117 4 118 1 
266 4 270 1 108 1 183 2 125 1 7 2 67 8 170 3 29 1 97 4 297 1 54 4 78 1 150 1 115 1 279 2 16 1 117 2 61 2 118 1 
270 1 108 1 125 1 67 6 29 1 170 2 97 3 54 3 302 1 78 1 279 2 115 1 16 1 118 1 
266 2 270 1 106 1 183 1 125 1 7 1 67 4 170 2 31 1 97 2 75 1 54 2 150 1 323 1 279 1 117 1 61 1 
170 2 270 1 31 1 97 3 75 1 54 4 124 2 256 1 125 1 150 1 323 1 313 1 80 1 279 1 67 7 
245 1 123 1 124 2 125 3 7 2 170 9 97 11 297 2 54 12 256 2 16 1 61 2 266 4 270 3 108 1 183 2 313 1 67 23 29 2 31 2 75 2 78 2 150 4 323 2 152 1 115 1 279 5 117 2 118 1 
54 1 124 1 67 1 
97 1 256 1 67 1 
266 2 270 1 106 1 183 1 7 1 46 1 125 1 67 6 170 2 31 1 97 3 75 1 54 3 150 1 323 1 279 1 117 1 61 1 
282 1 4 1 124 1 7 1 125 2 170 2 97 6 54 6 256 1 61 1 266 2 181 1 270 2 183 1 67 12 111 1 230 1 31 2 75 2 77 1 150 1 80 1 323 2 279 1 117 1 
270 1 125 1 67 6 29 1 170 2 97 3 54 3 78 1 150 1 115 1 279 1 
266 2 123 1 183 1 7 1 67 3 170 2 29 1 97 1 297 1 78 1 54 2 150 1 279 1 16 1 117 1 61 1 118 1 
266 2 270 2 183 1 7 1 125 2 67 10 230 1 169 1 29 2 170 5 97 5 78 2 54 5 150 2 279 3 115 1 117 1 61 1 
266 2 270 1 183 1 7 1 67 2 230 1 170 1 31 1 97 2 150 1 117 1 61 1 
266 2 270 1 183 1 125 1 7 1 67 4 230 1 170 2 31 1 97 2 75 1 54 2 150 1 323 1 279 1 117 1 61 1 
266 6 123 1 183 3 7 3 67 3 230 1 29 1 170 2 297 1 97 1 54 2 78 1 150 1 279 1 309 1 117 3 61 3 
123 1 244 1 124 4 7 5 125 5 170 12 297 2 97 16 54 18 256 3 16 1 309 1 61 5 266 10 270 5 106 1 108 1 183 5 313 1 67 34 230 1 29 3 147 1 31 3 75 3 78 3 237 1 150 5 80 1 323 3 115 2 279 7 117 5 118 1 
113 1 265 1 96 1 148 1 211 1 58 1 325 1 
265 1 113 1 316 1 96 1 148 1 173 1 175 1 211 1 322 1 58 1 325 1 81 1 
136 1 302 1 66 1 
136 1 96 1 298 1 164 1 211 1 66 1 325 1 200 1 
96 1 298 1 164 1 235 1 211 1 66 1 325 1 200 1 
96 1 298 1 164 1 235 1 211 1 66 1 325 1 200 1 
202 1 21 1 235 1 66 1 
202 1 21 1 235 1 66 1 
66 1 218 1 
136 1 66 1 
266 2 43 1 164 1 183 1 7 1 129 1 66 1 49 1 200 1 96 1 298 1 98 1 211 1 238 1 325 1 117 1 61 1 
119 1 202 1 136 1 30 1 268 1 6 1 21 1 186 1 66 1 222 1 
66 1 218 1 
18 1 136 1 73 1 238 1 66 4 
45 1 66 1 
136 1 66 1 
299 1 238 1 66 2 
136 1 238 1 66 2 
136 1 238 1 66 2 
136 1 96 1 298 1 164 1 211 1 66 1 325 1 200 1 
235 1 66 1 
113 1 188 1 163 1 44 1 25 1 
86 1 44 1 246 1 163 2 21 2 185 1 186 1 71 1 25 2 113 1 202 2 188 2 172 1 102 1 216 1 263 1 219 1 241 1 223 1 
163 1 44 1 107 1 25 1 145 1 95 1 96 1 211 1 325 1 
44 1 216 1 223 1 
0 1 127 1 294 1 90 3 296 1 93 1 277 1 176 1 154 1 155 1 156 3 
87 1 64 1 294 1 90 1 156 1 
277 1 154 1 
0 1 277 1 302 1 154 1 
0 1 93 1 277 1 154 1 90 1 155 1 156 1 
72 1 90 1 17 1 
0 1 271 1 127 2 90 3 112 1 93 1 277 1 321 1 176 1 154 1 155 1 156 3 
0 1 93 1 277 1 294 1 154 1 38 1 90 2 155 1 156 2 
93 1 162 1 87 1 276 1 47 1 126 1 176 1 90 1 155 1 156 1 
93 1 277 1 176 1 154 1 90 1 155 1 156 1 
0 1 93 1 277 2 176 1 90 1 155 1 156 1 
284 1 90 2 93 2 277 1 99 1 306 1 176 1 154 1 155 2 156 2 
0 1 87 1 64 1 294 2 90 3 250 1 296 1 93 1 277 1 176 1 154 1 155 1 156 3 
0 1 121 1 162 1 126 1 294 1 229 1 90 2 93 1 277 1 276 2 176 1 212 1 154 1 155 1 156 2 
0 1 122 1 87 1 64 1 294 2 90 4 93 2 277 1 176 1 154 1 155 2 38 1 156 4 
0 1 93 1 277 1 176 1 154 1 90 1 155 1 156 1 
0 2 87 1 271 1 64 1 227 1 127 1 294 2 90 4 93 1 277 2 321 1 154 2 155 1 156 4 
0 1 93 1 277 1 300 1 22 1 294 1 176 1 154 1 90 2 155 1 310 1 156 2 
0 1 93 1 277 1 271 1 127 2 35 1 321 2 176 1 154 1 90 3 155 1 156 3 
281 1 283 2 248 1 154 2 
93 1 197 1 176 1 90 1 155 1 156 1 
0 1 93 1 277 1 294 1 176 1 154 1 90 2 155 1 156 2 296 1 
76 1 
0 1 93 1 277 1 176 1 154 1 90 1 155 1 156 1 

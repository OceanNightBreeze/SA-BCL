#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (180,241) (228,275) (228,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (180,241) (228,275) (228,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (180,241) (228,275) (228,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (180,241) (228,275) (228,275) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (55,123,140,278) (55,123,140,278) 253 366 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (180,241) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (180,241) 75 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (180,241) 75 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 173 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (55,123,140,278) (55,123,140,278) 253 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (55,123,140,278) (55,123,140,278) 253 3 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> <<
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
23 1 180 1 241 1 263 1 79 1 123 1 55 1 275 1 228 1 277 1 10 1 311 1 278 2 248 1 6 1 363 2 
23 1 180 1 241 1 263 1 79 1 123 1 55 1 275 1 228 1 277 1 10 1 278 2 311 1 248 1 6 1 363 2 
23 1 180 1 241 1 263 1 79 1 123 1 55 1 275 1 228 1 277 1 10 1 278 2 311 1 248 1 6 1 363 2 
23 1 180 1 241 1 263 1 79 1 123 1 55 1 275 1 228 1 277 1 10 1 278 2 311 1 248 1 6 1 363 2 
366 1 278 2 123 1 55 1 253 1 140 1 6 1 363 1 
23 1 263 1 123 1 79 1 55 1 338 1 135 1 277 1 10 1 368 1 278 2 6 1 109 1 363 2 64 1 257 1 
278 1 241 1 123 1 55 1 6 1 363 1 
278 2 241 1 123 1 55 1 75 1 140 1 6 1 363 2 378 1 
278 2 241 1 123 1 55 1 75 1 140 1 6 1 363 2 378 1 
137 1 315 1 59 1 
235 2 59 1 272 1 
148 1 323 2 236 2 356 2 9 1 245 2 141 2 72 2 
0 1 240 1 120 1 297 2 317 1 18 1 242 1 356 3 245 2 319 1 198 2 359 2 148 1 247 1 323 2 177 1 129 1 282 2 254 2 130 1 92 1 183 1 332 1 157 1 9 1 27 1 341 1 72 2 207 1 188 1 230 1 233 1 236 3 100 1 193 1 141 2 294 1 
323 1 302 1 236 1 5 1 356 1 9 1 245 1 141 1 72 1 
315 1 295 1 132 1 288 1 197 1 336 1 125 1 9 1 59 1 356 2 161 1 245 2 72 1 320 1 176 1 323 1 302 1 347 1 236 2 5 1 141 1 
315 1 295 1 132 1 197 2 336 1 125 1 9 1 59 1 356 2 161 1 245 2 72 2 176 1 302 1 323 2 347 2 236 2 5 1 141 2 
290 1 249 1 347 1 197 1 375 1 
28 1 290 1 315 1 249 1 347 2 98 1 197 2 59 1 
290 1 347 1 197 1 
197 1 336 1 9 1 356 1 245 1 72 1 302 1 323 1 249 1 347 1 236 1 5 1 141 1 
59 1 
290 1 315 1 249 1 227 1 347 2 98 1 197 2 59 1 
24 1 121 1 315 1 41 1 197 5 59 1 126 1 2 1 343 1 290 2 37 1 346 1 249 2 190 2 150 2 167 2 347 5 98 1 192 1 
137 1 148 1 
274 1 145 1 42 1 161 1 356 2 245 2 72 1 148 1 323 1 236 2 141 1 
114 1 33 1 266 1 
120 1 297 1 332 1 317 1 243 1 157 1 242 1 356 1 27 1 198 1 188 1 359 1 148 1 247 1 236 1 100 1 
120 1 297 1 332 1 33 1 317 1 242 1 157 1 27 1 356 2 245 1 72 1 198 1 188 1 359 1 300 1 247 1 279 1 236 2 100 1 141 1 
184 1 288 1 42 1 356 5 245 5 72 4 45 1 300 1 148 1 279 2 323 1 236 5 141 4 365 1 
236 1 5 1 356 1 245 1 141 1 72 1 
148 1 279 1 323 1 236 3 356 3 245 3 141 3 72 3 
236 1 5 1 356 1 245 1 141 1 72 1 
274 1 42 1 356 1 161 1 245 1 72 1 323 1 236 1 141 1 
120 1 317 1 125 1 319 1 176 1 279 1 323 2 282 1 130 1 92 1 183 1 132 1 332 1 42 1 9 1 188 1 341 1 233 1 347 1 236 4 100 1 292 1 294 1 141 3 193 1 240 1 295 1 297 1 145 1 197 1 18 1 242 1 356 4 245 3 198 1 359 1 300 1 247 1 148 1 254 2 157 1 26 1 161 2 27 1 72 3 
288 1 145 1 161 1 356 2 245 2 72 1 45 1 148 1 279 1 236 2 141 1 
295 1 132 1 54 1 197 1 125 1 26 1 42 1 59 1 161 1 356 3 245 3 72 3 176 1 300 1 279 2 323 1 347 1 236 3 141 3 
33 1 42 1 356 2 245 2 72 2 114 1 279 1 323 1 236 2 141 2 
120 1 297 1 332 1 317 1 157 1 242 1 356 1 27 1 198 1 188 1 359 1 148 1 247 1 236 1 100 1 
120 1 286 1 297 1 332 1 333 1 317 1 145 1 242 1 161 1 356 1 27 1 198 1 359 1 148 1 247 1 236 1 100 1 
240 2 170 1 133 1 33 2 316 1 185 1 56 1 18 1 159 1 266 2 341 1 289 1 269 1 114 2 147 1 233 1 129 2 282 4 283 1 254 2 130 1 193 1 194 1 92 1 
295 1 53 1 356 1 161 1 245 1 72 1 236 1 141 1 
104 1 267 1 
104 1 267 1 
7 1 43 1 
7 1 43 1 
7 1 43 1 
104 1 105 1 267 1 
104 1 105 1 267 1 
104 1 105 1 267 1 
104 1 373 1 267 1 
78 1 7 1 234 1 104 2 43 1 267 2 
36 1 104 1 267 1 
36 1 104 1 267 1 
36 1 104 1 267 1 
353 1 298 1 197 1 104 1 356 2 245 2 35 1 148 1 106 1 200 1 329 1 285 1 203 1 93 1 265 1 340 1 72 2 342 1 267 1 231 1 347 1 236 2 373 1 141 2 
285 1 52 1 298 2 265 2 197 2 104 2 58 1 59 1 340 2 267 2 342 3 322 1 234 1 347 2 63 1 362 2 211 1 329 2 239 1 
311 1 79 1 10 1 
79 1 109 1 10 1 
331 1 311 2 13 1 144 1 79 3 109 1 
331 1 311 1 13 1 79 2 109 1 374 1 
331 2 311 1 13 1 79 2 109 1 
170 1 315 1 197 5 57 1 59 2 175 1 150 1 249 4 200 1 91 1 203 1 185 1 133 1 93 1 156 2 309 2 159 1 162 1 343 2 290 1 344 1 235 3 190 1 346 3 167 1 347 5 98 1 169 1 210 1 272 1 192 1 102 2 
213 1 170 3 315 1 197 9 57 1 59 5 175 2 249 7 150 2 200 4 24 1 65 1 185 3 133 3 226 5 156 6 134 1 206 1 187 1 159 3 160 1 162 2 343 6 290 6 344 3 235 9 190 2 346 8 167 2 347 9 98 1 272 3 375 5 192 1 102 6 
315 1 170 1 197 3 59 3 175 1 249 2 150 1 200 1 91 1 24 1 185 1 133 1 309 1 156 2 159 1 162 1 343 2 344 1 235 4 190 1 346 3 167 1 347 3 169 1 272 2 102 2 
213 1 315 1 170 2 197 4 59 4 175 1 150 1 249 3 200 2 91 1 24 1 185 2 133 2 156 4 309 2 187 1 159 2 160 1 162 1 343 4 344 2 235 7 190 1 346 5 167 1 347 4 169 1 272 3 102 4 
137 1 371 1 100 1 
100 1 110 1 
115 1 
247 1 332 1 100 1 
335 1 100 1 
332 1 100 1 
247 1 332 1 371 2 151 1 100 3 85 1 
22 1 15 1 143 1 240 3 350 1 260 1 51 2 204 1 185 1 81 1 159 1 269 2 60 1 129 4 282 7 283 3 118 1 
22 1 15 1 143 1 240 3 350 1 260 1 51 2 204 1 185 1 81 1 159 1 269 2 60 1 129 4 282 7 283 3 118 1 
22 1 15 1 143 1 240 3 350 1 260 1 308 1 51 2 204 1 185 1 81 1 159 1 269 2 60 1 129 4 282 7 283 3 118 1 
143 1 15 2 51 1 173 1 129 1 282 1 
22 1 15 1 143 1 350 1 240 4 49 1 260 1 51 2 204 1 40 1 185 1 18 2 81 1 159 1 269 3 60 1 233 2 128 1 129 5 282 9 283 4 254 4 130 2 193 2 
297 1 317 1 123 1 79 2 144 1 55 1 276 1 217 1 198 1 359 1 278 2 149 1 324 1 89 1 252 1 6 1 109 1 363 2 201 1 257 1 330 1 259 1 263 1 338 1 27 1 10 1 368 1 311 1 140 1 376 1 
297 1 317 1 144 1 123 1 79 2 55 1 276 1 217 1 198 1 359 1 278 3 149 1 324 1 252 1 220 1 109 1 363 3 201 1 257 1 259 1 263 1 338 1 27 1 10 1 368 1 311 1 291 1 140 2 376 1 119 1 
297 1 317 1 79 2 144 1 276 1 217 1 198 1 359 1 278 2 149 1 252 1 220 1 109 1 363 2 257 1 259 1 263 1 338 1 27 1 10 1 368 1 311 1 140 2 376 1 119 1 
314 1 120 1 297 1 263 2 123 1 55 1 276 2 198 1 359 1 278 1 219 1 178 1 252 2 291 1 363 1 14 1 376 2 
297 1 317 1 123 1 79 2 144 1 55 1 276 1 217 1 198 1 359 1 278 1 149 1 324 1 89 1 252 1 6 1 109 1 363 1 201 1 259 1 263 1 27 1 10 1 311 1 376 1 119 1 
74 1 
120 2 315 2 32 2 273 2 317 1 34 4 125 1 175 1 320 1 176 1 328 1 332 1 132 1 288 1 8 1 136 1 96 1 44 2 343 2 290 6 235 2 346 2 190 1 347 5 98 3 236 1 100 1 192 1 295 1 16 1 297 2 355 2 197 5 356 1 59 3 357 1 245 1 198 2 359 2 150 1 303 1 62 1 107 1 307 2 202 1 261 2 112 1 155 2 25 1 27 1 161 1 29 1 167 1 272 2 77 1 
202 1 315 2 295 1 273 1 132 1 227 1 34 2 288 1 197 3 125 1 25 1 59 2 161 1 356 1 245 1 320 1 290 2 176 1 303 1 62 1 347 3 98 1 328 1 236 1 
202 1 315 2 295 1 132 1 34 3 288 1 197 2 125 1 25 1 59 2 161 1 356 1 245 1 320 1 44 1 176 1 303 1 62 1 347 2 328 1 236 1 
295 1 315 2 273 1 34 3 197 3 125 1 356 1 59 2 245 1 320 1 176 1 62 1 303 1 328 1 307 1 202 1 132 1 227 1 288 1 25 1 161 1 44 1 290 2 347 3 98 1 236 1 
315 4 32 2 273 4 34 5 125 1 320 1 176 1 323 1 281 1 328 1 5 1 132 1 227 1 288 1 336 1 337 1 186 1 9 1 136 1 44 3 343 1 290 7 345 1 190 1 346 1 347 5 98 3 236 2 141 1 192 1 295 1 355 2 197 5 59 4 356 2 245 2 302 1 303 1 62 1 150 1 305 1 307 4 202 1 261 2 155 2 25 1 161 1 72 1 167 1 77 1 272 2 
295 1 315 3 32 2 273 2 355 2 34 4 197 4 125 1 356 1 59 4 357 1 245 1 320 1 176 1 62 1 303 1 150 1 328 1 307 2 202 1 261 2 132 1 155 2 288 1 25 1 136 1 161 1 44 2 343 1 290 4 235 2 346 1 190 1 167 1 347 4 98 2 236 1 272 2 77 1 192 1 
295 1 315 3 32 2 273 2 355 2 34 4 197 4 125 1 356 1 59 3 245 1 320 1 176 1 150 1 62 1 303 1 328 1 307 2 202 1 261 2 132 1 155 2 288 1 25 1 337 1 186 1 136 1 161 1 44 2 343 1 290 4 345 1 346 1 190 1 167 1 347 4 98 2 236 1 272 2 77 1 192 1 
295 1 315 3 32 2 273 2 355 2 34 4 197 4 125 1 356 1 59 3 245 1 320 1 176 1 150 1 62 1 303 1 328 1 307 2 202 1 261 2 132 1 155 2 288 1 25 1 337 1 186 1 136 1 161 1 44 2 343 1 290 4 345 1 346 1 190 1 167 1 347 4 98 2 236 1 272 2 77 1 192 1 
295 1 315 3 32 2 273 2 355 2 34 4 197 4 125 1 356 1 59 3 245 1 320 1 176 1 360 2 150 1 62 1 303 1 328 1 361 1 307 2 202 1 132 1 288 1 25 1 136 1 161 1 44 2 343 1 290 4 345 1 235 2 346 1 190 1 167 1 347 4 98 2 168 1 236 1 76 2 238 1 192 1 
295 1 315 3 32 2 273 3 355 2 34 5 197 4 125 1 356 1 59 3 245 1 320 1 176 1 150 1 62 1 303 1 281 1 328 1 307 3 202 1 261 2 132 1 155 2 288 1 186 1 337 1 25 1 136 1 161 1 343 1 44 3 290 5 345 1 346 1 190 1 167 1 347 4 98 2 236 1 272 2 77 1 192 1 
295 1 315 3 32 2 273 3 355 2 34 5 197 4 125 1 356 1 59 3 245 1 320 1 176 1 150 1 62 1 303 1 281 1 328 1 307 3 202 1 261 2 132 1 155 2 288 1 186 1 337 1 25 1 136 1 161 1 343 1 44 3 290 5 345 1 346 1 190 1 167 1 347 4 98 2 236 1 272 2 77 1 192 1 
295 1 315 3 32 2 273 2 355 2 34 4 197 4 125 1 356 1 59 3 357 1 245 1 320 1 176 1 360 2 62 1 303 1 150 1 328 1 307 2 202 1 132 1 288 1 25 1 136 1 161 1 44 2 343 1 290 4 235 2 346 1 190 1 167 1 347 4 98 2 168 1 236 1 76 2 192 1 
350 1 240 3 51 1 33 1 18 1 56 1 81 1 148 2 60 1 129 3 282 6 283 2 254 2 130 1 92 1 22 1 260 1 185 1 159 1 266 1 341 1 137 1 269 2 114 1 233 1 193 1 
0 1 240 5 170 1 33 8 145 1 18 2 83 1 82 2 358 1 148 1 251 2 129 7 282 12 283 1 254 4 130 2 92 1 183 1 182 1 133 2 185 1 67 1 159 2 161 1 266 8 341 2 269 1 114 2 344 2 233 2 117 1 193 2 349 1 
120 1 240 1 0 1 297 1 317 1 18 1 242 1 243 1 356 2 245 1 198 1 358 1 359 1 300 1 148 1 247 1 279 1 61 1 129 1 282 2 254 2 130 1 92 1 183 1 332 1 157 1 27 1 188 1 341 1 72 1 114 1 233 1 191 1 209 1 236 2 100 1 141 1 193 1 
0 1 120 1 170 2 122 1 317 2 33 7 81 1 174 1 319 2 279 1 218 2 38 1 129 10 282 20 283 8 130 3 92 3 222 2 183 1 332 2 185 3 133 2 341 3 229 2 188 2 344 2 233 3 236 3 100 2 193 3 141 1 350 1 240 10 51 1 297 3 18 3 242 2 356 3 245 1 198 3 358 1 359 3 300 1 148 2 247 2 60 1 254 6 21 2 22 1 260 1 204 4 157 2 159 3 27 2 266 7 72 1 269 4 114 7 119 1 
313 1 120 2 0 1 240 1 296 1 171 1 297 8 317 2 56 1 18 2 356 1 245 1 198 8 359 7 127 1 279 1 129 1 282 2 254 4 130 2 92 2 330 1 223 1 183 1 332 2 205 1 27 2 96 1 72 1 341 2 310 1 230 2 29 1 233 2 236 1 100 3 141 1 193 2 119 1 
240 2 170 1 33 1 18 1 356 1 245 1 358 1 323 1 129 1 282 3 283 1 254 2 130 1 221 1 92 1 133 1 185 1 42 1 159 1 266 1 341 1 72 1 269 1 114 1 344 1 233 1 236 1 141 1 193 1 
204 1 33 1 133 1 56 1 18 1 159 1 266 1 341 1 289 1 114 1 233 1 129 2 282 2 283 1 254 2 130 1 193 1 92 1 
240 2 170 1 33 1 316 1 185 1 56 1 18 1 266 1 341 1 269 1 114 1 233 1 282 2 283 1 254 2 130 1 193 1 92 1 
240 2 170 1 33 2 18 1 56 1 129 2 282 4 283 2 254 2 130 1 92 1 204 1 133 1 185 1 159 1 266 2 341 1 269 1 114 2 344 1 233 1 193 1 
171 1 204 1 33 1 133 1 18 1 159 1 266 1 341 1 289 1 114 1 233 1 129 2 282 2 283 1 254 2 130 1 193 1 92 1 
240 2 170 1 171 1 33 1 316 1 185 1 18 1 266 1 341 1 269 1 114 1 233 1 282 2 283 1 254 2 130 1 193 1 92 1 
240 2 170 1 171 1 33 2 18 1 129 2 282 4 283 2 254 2 130 1 92 1 204 1 133 1 185 1 159 1 266 2 341 1 269 1 114 2 344 1 233 1 193 1 
240 2 170 1 204 1 185 1 33 2 133 1 18 1 159 1 266 2 341 1 269 1 114 2 344 1 233 1 129 2 282 4 283 2 254 2 130 1 193 1 92 1 
0 1 120 1 240 1 297 1 317 1 18 1 242 1 356 1 319 1 198 1 359 1 148 1 247 1 129 1 282 2 254 2 130 1 92 1 183 1 332 1 157 1 27 1 188 1 341 1 233 1 236 1 100 1 193 1 
120 1 240 1 297 1 317 1 145 1 18 1 242 1 356 1 198 1 359 1 148 1 247 1 282 1 254 2 130 1 92 1 286 1 183 1 332 1 333 1 161 1 27 1 341 1 233 1 236 1 271 1 100 1 193 1 
240 2 170 1 33 2 18 1 358 1 129 2 282 4 283 2 254 2 130 1 92 1 204 1 133 1 185 1 159 1 266 2 341 1 269 1 114 2 344 1 233 1 193 1 
240 2 170 1 297 1 33 2 317 1 18 1 242 1 356 1 319 1 198 1 359 1 247 1 129 2 282 4 283 2 254 2 130 1 92 1 330 1 204 1 332 1 185 1 133 1 157 1 159 1 27 1 266 2 188 1 229 1 341 1 269 1 114 2 344 1 233 1 236 1 100 1 193 1 
240 1 170 1 33 1 18 1 356 1 245 1 358 1 323 1 129 2 282 3 283 1 254 2 130 1 92 1 204 1 262 1 185 1 133 1 42 1 159 1 266 1 341 1 72 1 114 1 344 1 233 1 236 1 141 1 193 1 
212 1 350 1 240 18 31 3 170 3 51 1 18 4 81 1 82 3 299 1 146 2 60 1 128 2 251 3 327 1 129 19 282 37 20 1 283 8 254 8 130 4 22 1 131 1 260 1 204 4 40 1 185 4 133 3 95 1 69 1 158 1 113 1 159 4 189 1 163 1 269 4 344 3 233 4 97 1 99 4 293 1 193 4 
212 1 350 1 240 17 31 2 170 3 51 1 18 4 81 1 82 2 146 1 60 1 128 2 251 2 327 1 129 18 282 35 20 1 283 5 254 8 130 4 22 1 131 1 260 1 204 3 40 1 185 4 133 3 95 1 69 1 158 1 113 1 159 4 189 1 163 1 269 2 344 3 233 4 97 1 99 4 293 1 193 4 
212 1 240 14 31 2 170 3 18 3 82 2 146 1 128 2 251 2 327 1 129 14 282 28 20 1 283 6 254 6 130 3 131 1 204 3 40 1 185 3 133 3 95 1 69 1 158 1 113 1 159 3 189 1 163 1 269 3 344 3 233 3 97 1 99 4 193 3 
212 1 350 1 240 16 31 2 170 3 51 1 18 4 81 1 82 2 146 1 60 1 128 2 251 2 327 1 129 17 282 33 283 6 254 8 130 4 22 1 131 1 260 1 204 3 40 1 287 1 185 4 133 3 95 1 69 1 158 1 113 1 159 4 189 1 163 1 269 3 344 3 233 4 97 1 99 3 293 1 193 4 
212 1 240 12 31 2 170 2 18 3 82 2 146 2 128 2 251 2 327 2 129 14 282 26 20 1 283 4 254 6 130 3 131 1 204 2 40 1 185 2 133 3 95 1 69 1 158 1 113 1 159 3 189 1 163 1 269 2 344 3 233 3 97 1 99 4 193 3 
52 1 322 1 234 1 250 1 265 1 298 1 104 1 329 1 340 1 267 1 
353 1 373 1 
154 1 280 1 47 1 265 1 298 1 104 1 329 1 340 1 267 1 
105 1 11 1 
78 1 36 1 166 1 
285 1 52 1 197 1 298 1 265 1 104 1 58 1 59 1 340 1 267 1 342 2 322 1 234 1 347 1 63 1 362 1 329 1 239 1 
285 1 52 1 197 1 298 1 265 1 104 1 58 1 59 1 340 1 267 1 342 2 322 1 234 1 347 1 63 1 362 1 329 1 239 1 
285 1 52 1 197 1 298 1 265 1 104 1 58 1 59 1 340 1 267 1 342 2 322 1 234 1 347 1 63 1 362 1 329 1 239 1 
78 1 105 1 11 1 
78 1 105 1 11 1 
36 1 166 1 
78 1 36 1 166 1 
231 1 35 1 
353 1 197 1 298 1 104 1 356 2 35 1 245 2 148 1 249 1 106 1 200 1 362 1 329 1 203 1 93 1 264 1 265 1 340 1 267 1 342 1 72 2 231 1 347 1 236 2 373 1 239 1 141 2 
0 1 240 1 297 2 317 1 18 1 356 2 245 2 198 2 358 1 359 2 199 1 304 1 129 1 282 2 254 2 306 1 130 1 92 1 223 1 183 1 332 1 205 1 27 1 339 1 341 1 230 2 232 1 233 1 236 2 100 1 193 1 
330 1 111 1 297 2 103 1 317 1 144 1 79 2 27 1 217 1 10 1 198 2 359 2 86 1 311 1 149 1 324 1 109 1 376 1 119 1 
225 1 297 1 103 1 317 1 144 1 79 2 217 1 27 1 10 1 198 1 359 1 311 1 149 1 324 1 109 1 376 1 119 1 
359 1 120 1 111 1 297 1 178 1 94 1 376 1 198 1 
111 1 297 1 103 1 317 1 144 1 79 2 27 1 217 1 10 1 198 1 359 1 86 1 311 1 149 1 324 1 109 1 376 1 119 1 
369 1 
343 1 137 1 315 1 41 1 346 1 59 1 2 1 
315 1 197 1 59 2 150 1 261 1 155 1 343 1 290 1 235 1 346 1 190 1 167 1 347 1 98 1 272 1 77 1 192 1 
120 1 170 1 317 1 216 1 85 1 175 1 176 1 218 1 90 1 224 1 181 1 332 1 133 1 185 1 334 1 343 3 290 2 344 1 235 6 346 4 190 2 347 2 98 1 100 4 139 1 192 2 102 3 297 1 197 2 59 3 198 1 359 1 247 1 150 2 110 2 258 1 156 3 159 1 27 2 164 1 167 2 371 1 272 3 
212 1 1 1 31 1 170 2 315 2 197 1 82 1 59 5 175 1 87 1 150 2 251 1 131 1 181 2 133 2 185 2 156 5 8 1 95 1 113 1 159 2 343 5 290 1 344 2 235 6 346 8 190 2 167 2 347 1 97 1 312 1 98 1 272 3 192 2 102 5 
350 1 197 1 84 1 356 1 245 1 302 1 323 1 150 1 5 1 22 1 181 2 260 1 185 1 186 1 336 1 159 2 9 1 72 1 343 2 190 1 346 2 167 1 347 1 312 1 236 1 192 1 141 1 
315 1 41 1 59 1 2 1 343 1 190 1 150 1 346 1 167 1 192 1 
170 2 181 2 133 2 185 2 156 5 159 2 59 5 343 5 344 2 218 1 235 10 346 5 312 1 272 5 102 5 
290 1 315 1 347 1 197 1 98 1 59 1 
120 2 351 1 16 1 297 4 317 2 124 1 197 3 198 4 175 2 359 4 321 1 247 1 150 2 107 1 39 1 256 1 24 1 332 2 8 2 70 2 27 3 96 1 343 2 290 4 29 1 190 2 346 2 73 1 167 2 347 3 98 2 100 2 192 1 377 1 
240 1 120 1 297 1 317 1 18 1 242 1 356 3 245 2 319 1 198 1 359 1 148 1 247 1 323 2 282 1 254 2 130 1 92 1 183 1 332 1 157 1 9 1 27 1 72 2 188 1 341 1 233 1 236 3 100 1 193 1 141 2 294 1 
315 2 51 1 156 2 8 1 59 4 175 1 343 2 235 4 190 1 150 1 346 1 167 1 272 2 192 1 102 2 
46 1 265 1 298 1 
46 1 265 1 298 1 
46 1 265 1 298 1 
52 1 270 1 265 1 298 1 35 1 
265 1 298 1 244 1 
265 1 298 1 244 1 
265 1 298 1 244 1 
265 1 298 1 
104 1 267 1 
212 1 350 2 240 10 31 1 170 1 51 1 18 2 81 1 82 1 84 1 60 1 128 1 251 1 129 14 282 24 283 9 254 4 130 2 22 2 131 1 260 2 204 4 40 1 133 2 185 4 95 1 113 1 159 5 269 5 344 2 233 2 97 1 193 2 
212 1 350 1 240 7 31 1 170 1 51 1 18 3 81 1 82 1 60 1 128 1 251 1 129 10 282 17 283 4 254 6 130 3 22 1 131 1 260 1 204 1 40 1 133 2 185 2 95 1 113 1 159 3 12 1 269 3 344 2 233 3 97 1 193 3 
212 1 350 1 240 10 31 1 170 2 51 1 18 3 81 1 82 1 60 1 128 1 251 1 129 9 282 19 283 4 254 6 130 3 22 1 131 1 260 1 204 1 40 1 133 2 185 3 95 1 113 1 159 3 12 1 269 3 344 2 233 3 97 1 193 3 
212 1 350 1 240 7 31 1 170 1 51 1 18 3 81 1 82 1 60 1 128 1 251 1 129 10 282 17 283 5 254 6 130 3 22 1 131 1 260 1 204 2 40 1 133 2 185 2 95 1 113 1 159 3 12 1 269 3 344 2 233 3 97 1 193 3 
212 1 350 2 240 10 31 1 170 1 51 1 18 2 81 1 82 1 84 1 60 1 128 1 251 1 129 14 282 24 283 9 254 4 130 2 22 2 131 1 260 2 204 4 40 1 133 2 185 4 95 1 113 1 159 5 269 5 344 2 233 2 97 1 193 2 
212 1 240 6 31 1 170 2 18 1 82 1 251 1 129 6 282 12 283 2 254 2 130 1 131 1 204 1 40 1 133 2 185 2 95 1 113 1 159 2 269 1 344 2 233 1 97 1 193 1 
212 1 350 1 240 8 31 1 170 1 51 1 18 4 81 1 82 1 60 1 128 2 251 1 129 10 282 18 283 5 254 8 130 4 22 1 131 1 260 1 204 2 40 1 133 2 185 2 95 1 113 1 159 3 12 1 269 3 344 2 233 4 97 1 193 4 
212 1 240 7 31 1 170 2 18 4 82 1 128 2 251 1 129 9 282 16 283 6 254 8 130 4 131 1 204 3 40 1 133 3 185 2 95 1 113 1 159 3 269 3 344 3 233 4 97 1 293 1 193 4 
22 3 240 4 350 3 260 1 204 3 185 1 81 2 159 1 269 3 60 1 129 3 282 7 283 6 
212 1 350 1 240 8 31 1 170 1 51 1 18 4 81 1 82 1 60 1 128 2 251 1 129 10 282 18 283 4 254 8 130 4 22 1 131 1 260 1 204 1 40 1 133 2 185 2 95 1 113 1 159 3 269 3 344 2 233 4 97 1 293 1 193 4 
22 1 240 4 350 1 51 1 260 1 204 1 185 1 18 2 81 1 159 1 269 2 60 1 233 2 128 1 129 4 282 8 283 3 254 4 130 2 193 2 
22 1 240 3 350 1 51 1 260 1 185 1 81 1 159 1 137 1 269 2 60 1 129 3 282 6 283 2 
240 2 170 1 204 1 185 1 133 1 18 1 159 1 269 1 12 1 344 1 233 1 129 2 282 4 283 2 254 2 130 1 193 1 
240 1 31 1 251 1 129 1 282 2 82 1 
350 2 240 13 170 2 51 1 18 1 81 1 82 2 83 1 84 1 60 1 128 1 251 2 129 13 282 26 283 7 254 2 130 1 22 2 260 2 204 2 185 5 133 2 159 5 269 5 344 2 233 1 117 1 193 1 349 1 
240 1 282 1 82 1 
251 1 129 1 282 1 
240 3 170 1 204 1 133 1 185 1 18 1 159 1 12 1 269 2 344 1 233 1 218 1 129 3 282 6 283 3 254 2 193 1 130 1 
212 1 240 6 31 1 170 2 18 1 82 1 251 1 129 6 282 12 283 2 254 2 130 1 131 1 204 1 40 1 133 2 185 2 95 1 113 1 159 2 269 1 344 2 233 1 97 1 193 1 
22 1 240 3 350 1 260 1 204 1 185 1 159 1 269 1 129 3 282 6 283 2 
22 1 350 1 240 2 204 1 18 1 81 1 269 1 60 1 233 1 128 1 129 1 282 3 283 2 254 2 364 1 130 1 193 1 
22 2 350 2 240 5 260 1 40 1 204 2 185 2 18 1 84 1 159 2 269 3 233 1 129 5 282 10 283 5 254 2 193 1 130 1 
40 1 204 1 133 1 18 1 159 1 233 1 129 2 282 2 283 1 254 2 130 1 193 1 
240 2 170 1 40 1 204 1 185 1 133 1 18 1 159 1 269 1 344 1 233 1 129 2 282 4 283 2 254 2 130 1 193 1 
22 1 240 2 350 1 40 1 204 1 18 3 269 1 233 3 128 1 129 1 282 3 283 2 293 1 254 6 364 1 130 3 193 3 
240 8 350 2 31 1 18 4 82 1 81 1 84 1 60 1 128 1 251 1 129 7 282 15 283 6 254 8 130 4 364 1 22 2 260 1 204 3 40 1 185 2 159 2 367 1 12 1 269 3 233 4 293 1 193 4 
45 1 148 1 288 1 66 1 236 1 356 1 245 1 
48 1 354 1 196 1 66 1 288 1 215 1 356 1 245 1 30 1 45 1 148 1 236 1 
359 1 29 1 137 1 120 1 297 1 332 1 317 1 100 1 27 1 96 1 198 1 
120 1 297 1 332 1 317 1 242 1 157 1 27 1 356 2 245 1 72 1 198 1 359 1 148 1 247 1 279 1 236 2 100 1 141 1 
295 1 297 1 317 1 145 1 242 1 125 1 356 2 245 2 198 1 359 1 148 1 247 2 279 1 332 2 335 1 157 1 70 1 27 1 161 2 71 1 72 2 236 2 100 3 141 1 
295 1 297 1 317 1 145 1 242 1 125 1 356 2 245 2 198 1 359 1 148 1 247 2 279 1 286 1 332 2 335 1 70 1 27 1 161 2 71 1 72 2 236 2 100 3 141 1 
315 1 297 1 197 1 59 1 356 1 245 1 198 1 359 1 302 1 323 1 152 1 5 1 110 1 336 1 70 1 9 1 72 1 347 1 236 1 100 1 141 1 
315 1 297 1 317 1 197 2 356 1 59 1 245 1 198 1 359 1 176 1 247 1 323 1 302 1 5 1 110 1 224 1 332 1 335 1 336 1 9 1 70 1 27 1 71 1 72 1 290 1 371 1 347 2 236 1 100 4 141 1 
359 1 296 1 297 1 317 1 27 1 198 1 
313 1 330 1 120 2 296 1 351 1 297 7 332 2 205 1 317 2 27 3 85 1 198 7 230 1 310 1 359 6 247 1 127 1 73 1 108 1 100 3 119 1 
317 1 33 1 81 1 319 1 279 1 129 3 282 6 283 2 130 2 92 2 330 1 332 1 185 1 339 1 188 1 229 1 341 2 233 2 236 2 100 1 193 2 141 1 350 1 240 3 51 1 297 1 18 2 242 1 356 2 245 1 198 1 358 1 359 1 247 1 148 2 60 1 21 1 254 4 22 1 260 1 157 1 159 1 27 1 266 1 72 1 269 2 114 1 
120 1 315 2 84 1 2 1 176 1 323 1 5 1 90 1 224 1 181 2 41 1 185 2 334 1 336 1 9 1 343 5 290 2 190 2 346 4 347 3 98 1 236 1 100 2 192 2 141 1 350 1 297 1 197 3 356 1 59 2 245 1 198 1 359 1 302 1 249 1 150 2 110 1 22 1 260 1 159 2 72 1 164 1 167 2 371 1 312 1 377 1 
330 1 296 1 297 2 332 1 317 1 27 2 85 1 198 2 359 2 247 1 371 1 139 1 100 2 
330 1 120 1 297 4 332 1 172 1 317 1 27 1 96 1 198 4 359 4 268 1 29 1 100 1 
351 1 297 2 332 1 317 1 124 1 174 1 70 1 27 2 198 2 359 2 247 1 73 1 100 1 256 1 
359 1 120 1 297 1 317 1 79 1 109 1 27 1 217 1 10 1 198 1 
359 2 330 1 297 2 332 1 317 1 205 1 100 1 27 1 306 1 119 1 198 2 
330 1 313 1 120 1 297 5 332 2 205 1 317 2 70 1 96 1 27 2 198 5 359 4 310 1 268 1 29 1 100 3 
330 1 120 1 297 5 332 2 205 1 317 2 70 1 96 1 27 2 198 5 359 4 310 1 268 1 29 1 208 1 100 3 
120 1 297 1 317 1 145 1 242 1 356 2 245 1 198 1 359 1 247 1 148 1 279 1 286 1 332 1 27 1 161 1 72 1 236 2 100 1 141 1 
351 1 297 1 332 1 317 1 70 1 27 2 85 1 198 1 359 1 247 1 73 1 108 1 100 1 
246 1 148 1 214 1 179 1 348 1 
295 1 315 1 214 1 197 2 125 1 356 1 59 1 245 1 246 1 176 1 323 1 302 1 249 1 5 1 179 1 132 1 336 1 26 1 9 1 161 1 72 1 165 1 347 2 116 1 236 1 237 1 141 1 348 1 
199 1 232 1 214 1 304 1 236 1 179 1 356 1 245 1 348 1 
165 1 237 1 179 1 
137 1 368 1 338 1 257 1 
368 1 278 1 123 1 55 1 363 1 338 1 257 1 
263 1 252 1 363 1 
23 2 352 1 17 1 123 1 55 1 68 1 338 1 368 1 278 3 6 1 363 3 257 1 
278 2 123 1 55 1 253 1 140 1 363 1 
123 1 79 1 55 1 10 1 368 1 278 1 311 1 326 1 6 1 363 1 142 1 
368 1 278 1 123 1 55 1 6 1 363 1 257 1 
278 1 123 1 55 1 6 1 363 1 338 1 257 2 
301 1 368 1 278 2 325 1 123 2 80 1 55 2 6 1 363 2 257 1 
123 1 55 1 338 1 368 2 278 3 370 1 372 1 6 1 140 2 363 3 255 1 257 1 142 1 
79 2 123 1 144 1 55 1 338 1 318 1 10 1 368 1 278 2 311 1 109 1 6 1 140 1 363 2 257 1 
278 2 3 1 123 1 55 1 253 1 140 1 6 1 363 1 
368 1 278 1 123 1 55 1 6 1 363 1 338 1 257 1 
23 1 352 1 123 1 55 1 68 1 338 2 368 3 278 4 138 1 140 2 363 4 255 1 257 2 142 1 
123 1 55 1 338 1 368 1 278 2 4 1 6 1 140 1 363 2 153 1 257 1 378 1 
23 2 352 2 123 1 55 1 68 1 338 1 368 1 278 3 88 1 6 1 363 3 257 1 
195 1 368 2 50 2 284 1 
278 1 123 1 55 1 6 1 363 1 101 1 
368 1 278 2 123 1 55 1 372 1 140 1 6 1 363 2 338 1 257 1 
19 1 
368 1 278 1 123 1 55 1 6 1 363 1 338 1 257 1 
23 1 123 1 55 1 338 1 368 1 278 3 372 1 140 1 6 1 363 3 257 1 
368 1 138 1 255 1 142 1 
368 1 257 1 

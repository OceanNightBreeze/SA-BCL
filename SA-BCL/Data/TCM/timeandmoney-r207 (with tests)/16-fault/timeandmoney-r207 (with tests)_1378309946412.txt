#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) (182,284) (182,284) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) (182,284) (182,284) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) (182,284) (182,284) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) (182,284) (182,284) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 300 (121,236,309,349) 85 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) 272 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 300 97 (223,322) 272 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 163 248 19 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 163 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 80 34 174 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 80 34 174 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 80 34 174 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 80 34 174 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 80 34 174 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 300 (121,236,309,349) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 300 97 143 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (173,187,227,271) (173,187,227,271) 280 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 300 97 307 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 300 97 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> 1
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
227 2 271 3 133 1 233 1 300 1 14 1 46 1 322 1 182 1 358 1 284 1 97 1 169 1 187 2 67 3 52 1 127 1 41 2 223 1 209 1 
227 2 271 3 133 1 233 1 300 1 14 1 46 1 322 1 182 1 358 1 284 1 97 1 169 1 187 2 67 3 52 1 41 2 127 1 223 1 209 1 
227 2 271 3 133 1 233 1 300 1 14 1 46 1 322 1 182 1 358 1 284 1 97 1 169 1 187 2 67 3 52 1 41 2 127 1 223 1 209 1 
227 2 271 3 133 1 233 1 300 1 14 1 46 1 322 1 182 1 358 1 284 1 97 1 169 1 187 2 67 3 52 1 41 2 127 1 223 1 209 1 
67 2 271 2 227 1 173 1 308 1 300 1 85 1 358 1 121 1 209 1 169 1 187 1 
227 1 271 2 95 1 181 1 133 1 233 1 14 1 46 1 358 1 169 1 187 1 113 1 67 2 51 1 136 1 41 1 
67 2 271 2 227 2 300 1 41 1 358 1 97 1 223 1 209 1 169 1 187 2 
272 1 67 3 271 3 227 2 173 1 300 1 349 1 41 1 358 1 97 1 223 1 209 1 169 1 187 2 
272 1 67 3 271 3 227 2 173 1 300 1 349 1 41 1 358 1 97 1 223 1 209 1 169 1 187 2 
190 1 116 1 318 1 
115 1 116 1 137 2 
290 2 75 2 61 2 22 1 129 2 194 2 56 1 225 2 
197 2 177 2 74 1 75 2 274 1 200 1 147 1 30 1 149 1 102 2 325 1 253 1 205 1 106 1 350 1 327 1 129 2 7 2 158 1 56 1 130 1 35 1 225 2 159 1 61 2 235 1 283 1 286 2 315 1 303 1 288 1 191 1 290 3 333 1 265 1 22 1 194 3 
89 1 290 1 75 1 61 1 206 1 129 1 203 1 194 1 56 1 225 1 
356 1 164 1 359 1 1 1 250 1 290 1 116 1 326 1 193 1 206 1 107 1 318 1 194 1 225 1 
75 1 356 1 61 1 359 1 1 1 290 1 116 1 193 2 326 1 206 1 107 2 318 1 129 1 194 1 225 1 
361 1 193 1 63 1 107 1 110 1 
198 1 116 1 193 2 63 1 108 1 107 2 318 1 110 1 
193 1 107 1 110 1 
75 1 61 1 63 1 203 1 89 1 290 1 193 1 206 1 107 1 155 1 129 1 56 1 194 1 225 1 
116 1 
116 1 193 2 63 1 108 1 107 2 318 1 110 1 160 1 
71 2 26 2 63 2 357 2 98 1 112 1 3 1 152 1 251 1 116 1 193 5 266 1 328 1 108 1 107 5 318 1 363 1 122 1 110 2 
190 1 22 1 
75 1 61 1 290 2 38 1 118 1 22 2 129 1 194 2 225 2 
188 1 81 1 270 1 
197 1 74 1 274 1 147 1 283 1 30 1 331 1 191 1 290 1 102 1 106 1 22 1 7 1 158 1 194 1 159 1 
197 1 74 1 75 1 274 1 81 1 29 1 64 1 283 1 147 1 30 1 191 1 290 2 102 1 106 1 158 1 129 1 7 1 194 2 225 1 159 1 
75 4 61 1 29 2 64 1 260 1 312 1 250 1 103 1 290 5 38 1 22 1 129 4 194 5 225 5 
89 1 290 2 75 2 21 1 206 1 129 2 194 2 225 2 
290 3 75 3 61 1 29 1 22 1 129 3 194 3 225 3 
89 1 290 1 75 1 206 1 129 1 194 1 225 1 
290 1 75 1 38 1 61 1 118 1 206 1 129 1 194 1 225 1 
197 1 177 2 74 1 75 3 274 1 200 1 29 1 147 1 30 1 1 1 149 1 102 1 325 1 253 1 205 1 106 1 326 1 206 1 107 1 158 1 129 3 7 1 56 1 130 1 35 1 159 1 225 3 132 1 12 1 356 1 61 2 64 1 283 1 359 1 286 1 315 1 303 1 288 1 191 1 38 1 290 4 193 1 22 1 194 4 
250 1 103 1 290 2 75 1 29 1 22 1 129 1 194 2 225 2 
132 1 75 3 356 1 61 1 29 2 64 1 359 1 1 1 38 1 290 3 116 1 193 1 326 1 206 1 107 1 93 1 129 3 194 3 225 3 
188 1 290 2 75 2 38 1 81 1 61 1 29 1 129 2 194 2 225 2 
197 1 74 1 274 1 147 1 283 1 30 1 191 1 290 1 102 1 106 1 22 1 7 1 158 1 194 1 159 1 
197 1 74 1 274 1 16 1 82 1 147 1 283 1 30 1 290 1 102 1 106 1 22 1 7 1 158 1 194 1 
177 2 200 1 275 1 150 1 324 1 325 1 253 1 205 1 350 2 208 1 210 1 130 2 229 1 281 1 81 2 302 1 315 1 286 4 111 1 188 2 332 1 288 1 92 1 270 2 
290 1 75 1 21 1 356 1 206 1 129 1 194 1 225 1 
335 1 330 1 
335 1 330 1 
104 1 304 1 
104 1 304 1 
104 1 304 1 
335 1 330 1 131 1 
335 1 330 1 131 1 
335 1 5 1 330 1 
104 1 335 2 342 1 330 2 23 1 304 1 
335 1 330 1 131 1 
335 1 330 1 50 1 
335 1 330 1 50 1 
335 1 330 1 50 1 
290 1 75 1 314 1 129 1 194 1 225 1 
75 1 311 1 295 1 202 1 203 1 348 1 76 1 206 1 107 1 155 1 109 1 129 1 56 1 225 1 256 1 11 1 228 1 61 1 83 1 314 1 330 1 305 1 89 1 290 1 335 1 193 1 194 1 
133 1 233 1 127 1 
95 1 133 1 233 1 
320 1 95 1 233 3 294 1 127 2 94 1 
95 1 233 2 144 1 294 1 127 1 94 1 
95 1 233 2 127 1 294 2 94 1 
98 2 203 1 48 1 150 1 206 1 155 1 107 5 108 1 328 3 56 1 110 1 61 1 62 1 258 2 63 4 114 1 172 1 332 1 115 2 116 1 122 1 24 1 71 1 75 1 26 1 179 1 129 1 225 1 229 1 281 1 357 1 285 1 88 2 189 2 89 1 290 1 193 5 137 4 318 1 140 1 364 1 194 1 
75 1 204 1 203 1 206 1 107 2 155 1 77 1 129 1 56 1 110 1 225 1 61 1 63 2 168 1 89 1 290 1 116 1 361 1 193 2 318 1 194 1 
24 1 71 1 75 1 26 1 98 2 203 1 179 1 150 1 3 1 206 1 155 1 107 3 328 1 129 1 56 1 225 1 229 1 61 1 62 1 258 1 63 2 357 1 88 1 172 1 189 1 89 1 290 1 116 1 193 3 137 1 318 1 140 1 364 1 194 1 
71 1 26 1 62 1 357 1 172 1 3 1 37 1 193 1 107 1 
190 1 74 1 18 1 
74 1 220 1 
192 1 
74 1 106 1 283 1 
74 1 199 1 
74 1 106 1 
0 1 74 3 106 1 18 2 283 1 292 1 
299 1 355 2 275 3 17 1 237 1 286 7 296 1 150 1 287 1 153 1 332 1 135 1 92 2 350 4 279 1 156 1 130 3 
299 1 355 2 275 3 17 1 237 1 286 7 296 1 150 1 287 1 153 1 332 1 135 1 92 2 350 4 279 1 156 1 130 3 
299 1 355 2 275 3 17 1 237 1 286 7 296 1 150 1 287 1 346 1 153 1 332 1 135 1 92 2 350 4 279 1 156 1 130 3 
177 2 43 4 123 1 200 1 275 10 296 1 179 3 150 4 249 1 153 2 325 1 253 1 350 16 279 2 156 1 130 15 299 2 229 3 231 1 355 3 281 3 17 1 315 1 286 31 237 2 287 5 332 4 135 1 289 1 214 1 92 5 291 1 336 3 141 1 
78 1 299 1 177 4 355 2 275 4 200 2 17 1 47 1 296 1 237 1 286 9 315 2 150 1 287 1 153 1 332 1 135 1 325 2 291 1 92 3 253 2 350 5 279 1 130 4 
176 1 197 1 271 2 320 1 95 1 274 1 245 1 323 1 102 1 127 1 7 1 158 1 227 1 133 1 233 2 183 1 358 1 186 1 169 1 261 1 187 1 113 1 67 2 173 1 334 1 136 1 239 1 41 1 120 1 70 1 
320 1 176 1 197 1 271 3 95 1 274 1 245 1 247 1 49 1 102 1 127 1 7 1 158 1 9 1 227 1 133 1 233 2 183 1 186 1 169 1 261 1 187 1 113 1 67 3 173 2 136 1 239 1 41 1 120 1 70 1 
176 1 197 1 271 2 320 1 95 1 274 1 49 1 102 1 127 1 7 1 158 1 9 1 133 1 233 2 186 1 169 1 261 1 113 1 67 2 173 2 136 1 239 1 41 1 120 1 70 1 
176 2 197 1 271 1 74 1 274 1 146 1 30 1 247 1 102 1 32 1 106 1 255 1 158 1 7 1 227 1 167 1 187 1 67 1 360 1 41 2 319 1 120 2 70 2 
176 1 197 1 271 1 320 1 95 1 274 1 245 1 323 1 49 1 102 1 127 1 7 1 158 1 227 1 133 1 233 2 183 1 358 1 186 1 261 1 187 1 67 1 239 1 41 1 120 1 70 1 
273 1 
197 2 145 2 98 2 1 1 250 1 102 2 106 1 326 1 206 1 255 1 108 3 328 2 107 5 7 2 158 1 57 2 110 6 161 1 257 1 163 1 164 1 66 2 115 2 116 2 69 2 122 1 175 1 339 1 71 1 74 1 274 1 26 1 28 1 219 1 30 2 277 2 125 1 278 1 126 4 224 2 225 1 79 1 232 1 356 1 357 1 359 1 360 1 290 1 91 1 193 5 137 2 318 1 242 2 140 1 194 1 
219 1 277 1 1 1 250 1 278 1 126 2 326 1 206 1 107 3 108 1 225 1 110 2 160 1 79 1 257 1 356 1 164 1 359 1 290 1 193 3 175 1 194 1 
219 1 1 1 250 1 278 1 126 3 326 1 206 1 107 3 108 1 110 1 225 1 160 1 79 1 257 1 356 1 164 1 359 1 66 1 290 1 116 1 193 3 318 1 175 1 194 1 
145 1 219 1 277 1 1 1 250 1 278 1 126 3 326 1 206 1 108 1 107 3 160 1 225 1 110 2 79 1 257 1 356 1 164 1 359 1 66 1 290 1 116 1 193 3 318 1 175 1 194 1 
75 1 145 1 219 1 277 1 203 1 1 1 250 1 278 1 126 2 326 1 206 2 155 1 108 1 107 3 129 1 56 1 225 2 110 2 160 1 79 1 257 1 356 1 329 1 61 1 164 1 359 1 89 1 290 2 116 1 193 3 318 1 175 1 194 2 
145 2 98 1 203 1 1 1 250 1 326 1 206 2 155 1 107 4 328 1 108 2 56 1 57 2 110 4 161 1 257 1 163 1 61 1 164 1 66 2 115 2 116 1 69 2 122 1 175 1 339 1 71 1 75 1 26 1 219 1 277 2 278 1 126 4 129 1 224 2 225 2 79 1 356 1 357 1 359 1 89 1 290 2 193 4 137 2 242 2 318 1 194 2 
145 2 98 1 203 1 1 1 248 1 250 1 326 1 206 2 155 1 107 4 328 1 108 2 56 1 57 2 10 1 110 4 257 1 163 1 61 1 164 1 66 2 115 2 116 1 69 2 122 1 175 1 339 1 71 1 72 1 75 1 26 1 219 1 277 2 278 1 126 4 129 1 224 2 225 2 79 1 356 1 357 1 359 1 89 1 290 2 193 4 242 2 318 1 194 2 
145 2 98 1 203 1 1 1 248 1 250 1 326 1 206 2 155 1 107 4 328 1 108 2 56 1 57 2 10 1 110 4 257 1 163 1 61 1 164 1 66 2 115 2 116 1 69 2 122 1 175 1 339 1 71 1 72 1 75 1 26 1 219 1 277 2 278 1 126 4 129 1 224 2 225 2 79 1 356 1 357 1 359 1 89 1 290 2 193 4 242 2 318 1 194 2 
71 1 26 1 219 1 98 1 1 1 248 1 250 1 278 1 126 2 326 1 298 1 206 1 328 1 107 2 157 1 224 1 225 1 79 1 257 1 163 1 356 1 357 1 164 1 359 1 19 1 290 1 193 2 242 1 175 1 122 1 194 1 
145 3 98 1 203 1 1 1 248 1 250 1 326 1 206 2 155 1 107 4 328 1 108 2 56 1 57 2 10 1 110 5 257 1 163 1 61 1 164 1 66 3 115 2 262 1 116 1 69 2 175 1 122 1 339 1 72 1 71 1 75 1 26 1 219 1 277 3 278 1 126 5 129 1 224 2 225 2 79 1 356 1 357 1 359 1 89 1 290 2 193 4 242 2 318 1 194 2 
145 3 98 1 203 1 1 1 248 1 250 1 326 1 206 2 155 1 107 4 328 1 108 2 56 1 57 2 10 1 110 5 257 1 163 1 61 1 164 1 66 3 115 2 262 1 116 1 69 2 175 1 122 1 339 1 72 1 71 1 75 1 26 1 219 1 277 3 278 1 126 5 129 1 224 2 225 2 79 1 356 1 357 1 359 1 89 1 290 2 193 4 242 2 318 1 194 2 
71 1 26 1 219 1 98 1 1 1 250 1 278 1 126 2 326 1 206 1 328 1 107 2 157 1 224 1 225 1 79 1 257 1 163 1 356 1 164 1 357 1 359 1 290 1 193 2 242 1 175 1 122 1 194 1 
177 2 200 1 275 2 296 1 150 1 324 1 325 1 253 1 205 1 350 3 279 1 130 3 299 1 355 1 81 1 17 1 315 1 286 6 188 1 190 1 288 1 332 1 135 1 92 2 22 2 270 1 
43 1 177 4 200 2 148 1 325 2 253 2 205 2 350 1 206 1 6 1 130 3 35 1 60 1 81 3 86 1 315 2 286 4 288 1 215 1 240 1 22 1 336 1 270 3 
197 1 177 2 74 1 75 1 274 1 200 1 29 1 147 1 30 1 102 1 325 1 106 1 253 1 205 1 350 1 158 1 7 1 129 1 159 1 225 1 35 1 130 1 234 1 64 1 283 1 315 1 286 2 331 1 188 1 191 1 288 1 290 2 333 1 68 1 240 1 22 1 269 1 194 2 
197 3 200 3 147 2 296 1 49 1 150 3 100 2 102 3 325 3 205 3 253 3 106 2 7 3 158 2 159 2 299 1 59 1 15 2 17 1 64 1 303 2 332 3 333 1 213 2 264 1 22 2 270 7 177 6 75 1 74 2 274 2 275 8 29 1 30 1 179 2 347 1 350 10 279 1 129 1 130 10 35 1 225 1 229 2 355 1 281 2 81 7 283 2 315 3 286 20 188 7 287 4 288 3 90 2 191 2 135 1 290 3 92 4 240 1 194 3 
142 1 197 8 177 4 75 1 74 3 341 1 274 2 200 2 29 1 30 2 49 1 2 1 324 1 102 7 325 2 253 2 205 2 54 1 106 2 350 1 255 1 129 1 158 2 7 8 225 1 35 1 130 1 235 2 84 1 315 2 286 2 171 1 360 1 288 2 290 1 334 1 333 1 217 1 194 1 
177 2 75 1 275 1 200 1 179 1 150 1 325 1 253 1 205 1 105 1 350 1 129 1 225 1 130 2 229 1 281 1 81 1 61 1 315 1 286 3 188 1 288 1 332 1 38 1 290 1 92 1 240 1 194 1 270 1 
229 1 177 2 275 1 81 1 200 1 286 2 315 1 111 1 150 1 287 1 188 1 288 1 324 1 325 1 205 1 253 1 350 2 270 1 
177 2 281 1 275 1 81 1 200 1 302 1 286 2 315 1 188 1 288 1 332 1 324 1 325 1 92 1 205 1 253 1 270 1 130 2 
177 2 200 1 275 2 179 1 150 1 324 1 325 1 253 1 205 1 350 2 130 2 229 1 281 1 81 2 315 1 286 4 188 2 287 1 288 1 332 1 92 1 270 2 
229 1 177 2 275 1 81 1 200 1 286 2 315 1 111 1 150 1 287 1 188 1 288 1 325 1 54 1 205 1 253 1 350 2 270 1 
177 2 281 1 275 1 81 1 200 1 302 1 286 2 315 1 188 1 288 1 332 1 325 1 92 1 54 1 205 1 253 1 270 1 130 2 
177 2 200 1 275 2 179 1 150 1 325 1 253 1 205 1 54 1 350 2 130 2 229 1 281 1 81 2 315 1 286 4 188 2 287 1 288 1 332 1 92 1 270 2 
177 2 200 1 275 2 179 1 150 1 325 1 253 1 205 1 350 2 130 2 229 1 281 1 81 2 286 4 315 1 188 2 287 1 288 1 332 1 92 1 270 2 
197 1 177 2 74 1 274 1 200 1 147 1 30 1 102 1 325 1 106 1 205 1 253 1 350 1 158 1 7 1 159 1 35 1 130 1 283 1 286 2 315 1 303 1 191 1 288 1 290 1 333 1 22 1 194 1 
197 1 177 2 74 1 274 1 200 1 147 1 30 1 102 1 325 1 106 1 205 1 253 1 350 1 158 1 7 1 211 1 35 1 130 1 16 1 82 1 283 1 286 2 315 1 288 1 290 1 333 1 22 1 194 1 
177 2 200 1 275 2 179 1 150 1 325 1 253 1 205 1 350 2 130 2 229 1 281 1 81 2 315 1 286 4 188 2 287 1 288 1 332 1 92 1 240 1 270 2 
197 1 177 2 74 1 274 1 275 2 200 1 147 1 179 1 150 1 102 1 325 1 106 1 205 1 253 1 350 2 158 1 7 1 130 2 159 1 229 1 281 1 81 2 283 1 286 4 315 1 303 1 287 1 188 2 332 1 191 1 90 1 288 1 290 1 334 1 92 1 194 1 270 2 
177 2 75 1 275 1 200 1 179 1 150 1 53 1 325 1 253 1 205 1 350 2 129 1 130 1 225 1 229 1 281 1 61 1 81 1 315 1 286 3 287 1 188 1 332 1 288 1 38 1 290 1 240 1 194 1 270 1 
177 2 325 1 80 1 200 1 253 1 34 1 47 1 352 1 174 1 315 1 
177 2 325 1 80 1 200 1 253 1 34 1 47 1 352 1 174 1 315 1 
177 2 325 1 80 1 200 1 253 1 34 1 47 1 352 1 174 1 315 1 
177 2 325 1 80 1 200 1 253 1 34 1 47 1 352 1 174 1 315 1 
177 2 325 1 80 1 200 1 253 1 34 1 47 1 352 1 174 1 315 1 
151 1 11 1 228 1 230 1 335 1 342 1 295 1 330 1 202 1 195 1 
196 1 5 1 
11 1 228 1 13 1 335 1 27 1 295 1 330 1 337 1 202 1 
33 1 131 1 
23 1 243 1 50 1 
75 1 311 1 203 1 348 1 76 1 206 1 155 1 109 1 129 1 56 1 225 1 256 1 61 1 314 1 83 1 305 1 89 1 290 1 194 1 
75 1 311 1 203 1 348 1 76 1 206 1 155 1 109 1 129 1 56 1 225 1 256 1 61 1 314 1 83 1 305 1 89 1 290 1 194 1 
75 1 311 1 203 1 348 1 76 1 206 1 155 1 109 1 129 1 56 1 225 1 256 1 61 1 314 1 83 1 305 1 89 1 290 1 194 1 
33 1 23 1 131 1 
33 1 23 1 131 1 
243 1 50 1 
23 1 243 1 50 1 
40 1 99 1 
196 1 75 2 311 1 295 1 202 1 99 1 180 1 76 1 5 1 254 1 206 1 107 1 129 2 225 2 11 1 228 1 256 1 63 1 330 1 86 1 290 2 238 1 335 1 193 1 40 1 241 1 22 1 364 1 194 2 
142 1 197 2 177 2 74 1 274 1 218 1 200 1 4 1 102 2 325 1 106 1 253 1 205 1 350 1 158 1 7 2 226 1 225 2 35 1 130 1 235 2 184 1 315 1 286 2 288 1 290 2 263 1 333 1 240 1 217 1 194 2 
320 1 197 2 95 1 133 1 233 2 274 1 183 1 49 1 261 1 102 2 212 1 334 1 313 1 239 1 127 1 158 1 7 2 70 1 42 1 
320 1 197 1 95 1 133 1 233 2 44 1 274 1 183 1 49 1 261 1 102 1 313 1 239 1 127 1 7 1 158 1 70 1 
197 1 74 1 274 1 30 1 167 1 360 1 306 1 102 1 106 1 255 1 158 1 7 1 70 1 42 1 
320 1 197 1 95 1 133 1 233 2 274 1 183 1 49 1 261 1 102 1 212 1 313 1 239 1 127 1 158 1 7 1 70 1 42 1 
8 1 
190 1 251 1 116 1 266 1 328 1 318 1 98 1 
71 1 26 1 98 1 328 1 108 1 107 1 57 1 110 1 357 1 115 1 116 2 193 1 137 1 318 1 69 1 122 1 339 1 
197 1 71 2 25 1 74 4 45 1 274 1 26 2 30 1 220 2 98 3 179 1 150 1 102 1 326 1 106 1 108 1 107 2 328 2 7 1 158 2 110 2 229 1 15 1 258 2 18 1 65 1 357 2 283 1 88 2 193 2 117 1 137 2 267 1 216 1 138 1 140 1 292 1 122 2 
321 1 43 1 71 1 26 1 276 1 344 1 201 1 98 4 179 2 150 2 249 1 328 6 229 2 281 2 258 5 357 1 166 1 88 5 332 2 137 3 336 1 122 1 
71 1 72 1 75 1 26 1 98 2 48 1 203 1 150 2 206 1 279 1 107 1 328 2 155 1 129 1 56 1 225 1 299 1 162 1 61 1 357 1 114 2 89 1 332 1 290 1 135 1 193 1 122 1 194 1 
71 1 26 1 357 1 98 1 251 1 116 1 266 1 328 1 318 1 122 1 
229 1 258 1 137 1 98 2 179 1 88 1 150 1 
116 1 193 1 107 1 108 1 318 1 110 1 
197 3 71 2 74 2 340 1 274 2 26 2 28 1 30 2 98 1 3 1 101 1 125 1 102 3 106 2 55 1 328 1 108 1 107 2 255 1 353 1 158 3 7 3 110 2 282 1 232 1 301 1 357 2 283 1 360 1 193 2 140 1 244 1 122 1 
197 1 177 2 75 2 74 1 274 1 200 1 147 1 30 1 149 1 102 1 325 1 106 1 205 1 253 1 7 1 129 2 158 1 56 1 130 1 35 1 225 2 159 1 61 2 283 1 286 1 315 1 303 1 191 1 288 1 290 3 22 1 194 3 
71 1 26 1 258 1 28 1 357 1 98 1 116 1 137 1 328 1 318 1 140 1 122 1 
11 1 228 1 154 1 
11 1 228 1 154 1 
11 1 228 1 40 1 
11 1 228 1 154 1 
11 1 228 1 310 1 
11 1 228 1 310 1 
11 1 228 1 310 1 
11 1 228 1 
335 1 330 1 
299 1 177 4 355 1 275 3 200 2 17 1 286 8 315 2 296 1 150 1 287 1 332 1 135 1 325 2 92 2 253 2 291 1 350 4 279 1 130 4 
299 1 355 1 275 2 17 1 296 1 286 6 150 1 190 1 332 1 135 1 92 2 350 3 279 1 130 3 
229 1 177 2 281 1 275 2 200 1 315 1 286 4 179 1 150 1 287 1 332 1 325 1 92 1 253 1 350 2 338 1 130 2 
229 1 43 2 231 1 281 1 275 2 286 7 179 1 150 1 287 1 249 1 332 1 92 1 350 3 336 1 130 4 
177 2 43 1 200 1 275 6 296 1 150 2 325 1 253 1 350 7 279 2 6 1 130 8 299 2 162 1 17 1 315 1 286 15 287 3 332 2 135 1 291 1 92 3 215 1 336 1 
43 1 286 1 130 1 
350 1 336 1 286 1 
229 1 177 2 281 1 200 1 15 1 275 3 315 1 286 6 179 1 150 1 287 1 332 1 325 1 253 1 92 2 350 3 338 1 130 3 
321 1 43 1 177 2 200 1 275 2 47 1 276 1 344 1 201 1 179 2 150 2 249 1 325 1 253 1 350 6 130 6 229 2 281 2 286 12 166 1 315 1 287 1 332 2 92 1 336 1 
299 1 275 2 286 6 150 1 287 1 332 1 135 1 92 1 350 3 279 1 130 3 
299 1 177 2 275 2 200 1 17 1 286 3 315 1 296 1 287 1 325 1 92 1 291 1 253 1 350 1 215 1 279 1 130 2 
299 2 177 2 162 1 200 1 275 5 47 1 315 1 286 10 150 2 287 2 332 2 135 1 325 1 253 1 92 3 350 5 279 2 130 5 
229 1 177 2 200 1 275 1 47 1 315 1 286 2 150 1 287 1 325 1 253 1 350 2 
229 1 177 2 281 1 275 2 200 1 47 1 315 1 286 4 179 1 150 1 287 1 332 1 325 1 92 1 253 1 350 2 130 2 
299 1 177 6 200 3 275 2 47 1 286 3 315 3 20 1 287 1 325 3 291 1 253 3 92 1 215 1 350 1 279 1 130 2 
43 4 177 10 123 1 200 5 275 12 47 1 296 1 179 3 150 5 249 1 325 5 253 5 350 16 279 3 130 18 299 3 229 3 231 1 355 1 281 3 17 1 315 5 286 34 20 1 287 5 332 5 135 2 289 1 214 1 291 2 92 7 215 1 336 3 338 1 
299 1 177 2 43 1 355 1 275 2 200 1 17 1 47 1 296 1 315 1 166 1 286 8 150 1 249 1 332 1 135 1 325 1 92 2 253 1 350 4 279 1 336 1 130 4 
43 2 177 4 200 2 275 3 47 1 296 1 179 1 150 2 249 1 325 2 253 2 350 6 279 1 130 5 299 1 229 1 231 1 355 1 17 1 286 11 166 1 315 2 287 1 332 1 135 1 92 2 336 1 338 1 
321 1 43 1 177 6 200 3 275 4 47 1 344 1 276 1 201 1 296 1 179 2 150 3 249 1 325 3 253 3 350 9 279 1 130 10 299 1 229 2 355 1 281 2 17 1 286 19 166 1 315 3 287 1 332 3 135 1 92 3 291 1 336 1 338 1 
321 1 43 1 177 6 200 3 275 5 47 1 276 1 344 1 201 1 296 1 179 2 150 3 249 1 325 3 253 3 350 10 279 1 130 7 299 1 229 2 355 1 281 1 17 1 286 17 166 1 315 3 287 2 332 2 135 1 291 1 92 3 336 1 338 1 
299 1 177 2 43 1 355 1 275 2 200 1 17 1 47 1 296 1 315 1 166 1 286 8 150 1 249 1 332 1 135 1 325 1 92 2 253 1 350 4 279 1 336 1 130 4 
321 1 43 1 177 2 200 1 275 2 47 1 276 1 344 1 201 1 179 2 150 2 249 1 325 1 253 1 350 6 130 6 229 2 281 2 286 12 166 1 315 1 287 1 332 2 92 1 336 1 
321 1 43 1 177 8 200 4 275 5 47 1 344 1 276 1 201 1 296 1 179 2 150 3 249 1 325 4 253 4 350 10 279 1 130 8 299 1 229 2 355 1 281 1 17 1 286 18 166 1 315 4 287 2 332 2 135 1 92 3 291 2 336 1 338 1 
321 1 43 1 177 8 200 4 275 6 47 1 344 1 276 1 201 1 179 3 150 3 249 1 325 4 253 4 350 9 130 7 229 3 281 2 286 16 166 1 315 4 20 1 287 3 332 2 92 3 291 2 336 1 
299 3 275 6 17 2 286 7 296 1 150 1 287 3 332 1 135 1 92 3 350 3 279 3 130 4 
321 1 43 1 177 8 200 4 275 4 47 1 344 1 276 1 201 1 296 1 179 2 150 3 249 1 325 4 253 4 350 10 279 1 130 8 299 1 229 2 355 1 281 1 17 1 286 18 166 1 315 4 20 1 287 1 332 2 135 1 92 3 291 2 336 1 
250 1 290 1 103 1 178 1 22 1 194 1 225 1 
178 1 134 1 170 1 87 1 250 1 103 1 290 1 119 1 22 1 354 1 194 1 225 1 
360 1 190 1 197 1 74 1 102 1 274 1 106 1 255 1 30 1 158 1 7 1 
197 1 74 1 75 1 274 1 29 1 283 1 147 1 30 1 191 1 290 2 102 1 106 1 22 1 158 1 129 1 7 1 194 2 225 1 
197 1 293 1 74 3 75 1 199 1 356 1 274 1 29 1 283 2 147 1 1 1 191 1 290 2 102 1 106 2 206 1 22 1 244 1 158 1 129 2 7 1 194 2 225 2 
197 2 293 1 75 1 74 3 199 1 274 1 29 1 147 1 1 1 102 2 106 2 206 1 7 2 129 2 158 1 225 2 356 1 16 1 283 2 290 2 139 1 22 1 244 1 194 2 
197 3 293 1 74 4 199 1 274 1 220 1 30 1 102 3 297 1 106 1 326 1 107 2 222 1 7 3 158 1 110 1 18 1 283 1 116 1 193 2 139 1 318 1 244 1 
197 3 293 1 74 4 199 1 45 1 274 1 18 1 283 1 30 1 220 1 102 3 116 1 326 1 106 1 193 2 107 2 139 1 318 1 244 1 158 1 7 3 110 1 
197 1 102 1 274 1 158 1 7 1 2 1 
142 1 197 7 74 3 341 1 340 1 274 2 235 1 84 1 283 1 30 2 345 1 49 1 2 1 171 1 102 6 334 1 106 2 292 1 353 1 7 7 158 3 
197 1 177 4 74 1 75 1 274 1 275 2 200 2 29 1 147 1 296 1 150 1 102 1 325 2 106 1 253 2 205 2 350 3 279 1 158 1 129 1 7 1 130 3 225 1 159 1 299 1 355 1 81 1 17 1 283 1 184 1 286 6 315 2 303 1 188 1 332 1 288 2 90 1 191 1 135 1 290 2 334 1 213 1 92 2 240 1 22 2 194 2 270 1 
197 1 71 2 25 1 74 2 45 1 26 2 30 1 220 1 98 1 251 1 102 1 326 1 328 1 107 3 108 1 7 1 110 2 301 1 357 2 63 1 18 1 116 1 193 3 117 1 266 1 267 1 318 1 122 2 
197 2 74 2 274 1 18 1 283 1 2 1 102 2 334 1 106 1 138 1 292 1 7 2 158 2 
197 4 74 1 274 1 30 1 360 1 102 4 334 1 106 1 207 1 255 1 139 1 158 1 7 4 
197 2 74 1 340 1 59 1 282 1 274 1 283 1 101 1 102 2 106 1 244 1 353 1 7 2 158 2 
197 1 95 1 133 1 102 1 233 1 274 1 239 1 30 1 158 1 7 1 
197 2 142 1 74 1 274 1 49 1 102 2 334 1 263 1 106 1 7 2 158 1 
197 5 142 1 74 3 274 2 84 1 30 1 360 1 171 1 102 4 334 1 106 2 207 1 255 1 244 1 7 5 158 2 
197 5 142 1 74 3 274 2 30 1 360 1 171 1 102 4 334 1 106 2 207 1 317 1 255 1 244 1 7 5 158 2 
197 1 74 1 75 1 274 1 16 1 29 1 283 1 147 1 30 1 290 2 102 1 106 1 22 1 158 1 129 1 7 1 194 2 225 1 
197 1 74 1 340 1 274 1 283 1 345 1 102 1 106 1 244 1 292 1 353 1 7 1 158 2 
221 1 351 1 22 1 128 1 58 1 
132 1 356 1 63 1 359 1 1 1 116 1 326 1 193 2 39 1 362 1 221 2 206 1 351 2 107 2 22 1 318 1 268 1 128 2 58 1 
218 1 4 1 290 1 221 1 128 1 58 1 194 1 226 1 225 1 
39 1 268 1 58 1 
190 1 136 1 169 1 113 1 
67 1 271 1 227 1 136 1 169 1 187 1 113 1 
67 1 41 1 120 1 
227 1 271 3 73 1 96 1 46 2 358 1 259 1 169 1 187 1 113 1 67 3 136 1 
67 2 271 2 227 1 173 1 308 1 136 1 169 1 187 1 113 1 
67 1 271 1 227 1 300 1 358 1 121 1 209 1 169 1 187 1 
67 1 271 1 227 1 136 1 358 1 169 1 187 1 
67 1 271 1 227 1 136 2 358 1 187 1 113 1 
227 1 271 1 358 1 187 1 316 1 67 1 252 1 
67 2 271 2 227 1 173 1 143 1 300 1 165 1 358 1 97 1 209 1 169 1 187 1 
67 1 271 2 227 1 173 1 95 1 233 1 358 1 280 1 187 1 
67 2 271 2 227 1 173 1 308 1 307 1 300 1 358 1 97 1 209 1 169 1 187 1 
67 1 271 1 227 1 136 1 358 1 169 1 187 1 113 1 
227 1 67 2 271 2 173 1 300 1 97 1 209 2 169 1 187 1 
67 2 271 2 227 1 173 1 136 1 349 1 236 1 358 1 309 1 169 1 187 1 113 1 
67 3 271 3 227 1 96 1 136 1 46 2 343 1 259 2 358 1 169 1 187 1 113 1 
36 2 124 1 185 1 169 2 
67 1 271 1 227 1 246 1 358 1 187 1 
67 2 271 2 227 1 173 1 136 1 165 1 358 1 169 1 187 1 113 1 
31 1 
67 1 271 1 227 1 136 1 358 1 169 1 187 1 113 1 
67 3 271 3 227 1 173 1 136 1 46 1 165 1 358 1 169 1 187 1 113 1 
67 1 271 1 173 1 300 1 97 1 169 1 
136 1 169 1 

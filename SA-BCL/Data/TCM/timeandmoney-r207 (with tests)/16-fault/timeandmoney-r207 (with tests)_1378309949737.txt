#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (241,278) (9,221) (9,221) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (241,278) (9,221) (9,221) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (241,278) (9,221) (9,221) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (241,278) (9,221) (9,221) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (241,278) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (241,278) 207 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (241,278) 207 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 211 (25,263) 349 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 211 328 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 211 (25,263) 349 297 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (107,152,178) (11,234,324) (11,234,324) (11,234,324) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (107,152,178) (11,234,324) (11,234,324) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (107,152,178) (11,234,324) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (177,307) (84,150) (84,150) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (107,152,178) (11,234,324) (11,234,324) (11,234,324) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 343 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 211 328 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 242 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 180 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 211 (25,263) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 23 53 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 211 (25,263) (25,263) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (107,152,178) (107,152,178) (107,152,178) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (107,152,178) (107,152,178) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (177,307) (177,307) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (107,152,178) (107,152,178) (107,152,178) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 38 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 269 196 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 211 (25,263) 349 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 343 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 343 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 284 1 9 1 275 1 22 2 322 1 158 1 278 1 241 1 136 1 138 1 289 1 154 1 221 1 46 1 253 2 
168 1 9 1 275 1 284 1 22 2 322 1 158 1 278 1 241 1 136 1 138 1 289 1 154 1 221 1 46 1 253 2 
168 1 9 1 275 1 284 1 22 2 322 1 158 1 278 1 241 1 136 1 138 1 289 1 154 1 221 1 46 1 253 2 
168 1 9 1 275 1 284 1 22 2 322 1 158 1 278 1 241 1 136 1 138 1 289 1 154 1 221 1 46 1 253 2 
284 1 216 1 73 2 22 4 322 1 158 1 199 1 133 1 29 1 104 3 106 3 138 1 115 2 289 1 108 1 154 1 253 4 183 1 
168 1 22 2 1 1 158 1 322 1 199 1 104 1 133 1 136 1 42 1 138 1 289 1 141 1 154 1 46 1 253 2 
22 1 289 1 158 1 154 1 241 1 253 1 
22 2 289 1 158 1 154 1 207 1 241 1 106 1 61 1 253 2 
22 2 289 1 158 1 154 1 207 1 241 1 106 1 61 1 253 2 
184 1 343 1 90 1 
184 1 6 1 240 2 
185 1 21 2 224 2 16 2 246 2 54 2 129 1 160 2 
185 1 224 1 21 1 226 1 132 1 54 1 105 1 160 1 211 1 263 1 81 1 246 1 16 1 283 2 349 1 
223 1 261 1 185 1 31 1 21 1 224 1 16 1 246 1 54 1 160 1 
184 1 327 1 21 1 204 1 169 1 257 1 171 1 90 1 160 1 66 1 288 1 31 1 16 1 334 1 
184 1 224 1 21 1 204 1 169 1 257 2 54 1 171 1 90 1 160 1 66 1 31 1 246 1 16 1 334 2 
212 1 123 1 257 1 334 1 134 1 
184 1 212 1 347 1 257 2 258 1 334 2 134 1 90 1 
257 1 334 1 134 1 
223 1 185 1 224 1 21 1 257 1 54 1 160 1 261 1 31 1 212 1 246 1 16 1 155 1 334 1 
184 1 
184 1 212 1 206 1 257 2 258 1 334 2 134 1 90 1 
184 1 19 2 237 2 62 1 276 1 52 1 257 5 258 1 134 2 90 1 173 1 212 2 75 1 230 1 191 1 334 5 110 2 333 1 232 1 
343 1 129 1 
21 2 224 1 118 1 40 1 54 1 160 2 16 2 246 1 129 2 
43 1 26 1 311 1 
211 1 328 1 81 1 283 1 
211 1 21 1 224 1 157 1 81 1 16 1 283 1 54 1 160 1 79 1 
157 1 21 3 224 3 246 1 16 3 54 3 129 1 160 3 
223 1 31 1 21 1 224 1 16 1 54 1 160 1 
31 1 21 1 224 1 118 1 16 1 246 1 40 1 54 1 160 1 
185 1 204 1 157 1 224 3 21 3 169 1 257 1 297 1 40 1 171 1 54 3 79 1 160 3 66 1 211 1 263 1 31 1 81 1 15 1 16 3 246 2 283 1 349 1 334 1 
288 1 21 2 224 1 157 1 16 2 197 1 54 1 129 1 160 2 
184 1 157 2 224 3 21 3 204 1 169 1 257 1 40 1 171 1 54 3 79 1 160 3 66 1 31 1 15 1 246 1 16 3 334 1 37 1 
157 1 224 2 21 2 40 1 54 2 160 2 43 1 246 1 16 2 311 1 
211 1 81 1 283 1 
23 1 81 1 283 1 
113 2 296 1 26 2 114 2 188 1 89 1 135 1 30 1 36 1 238 1 64 1 176 4 43 2 151 1 245 1 272 1 292 2 182 1 47 1 311 2 72 1 273 1 
31 1 21 1 224 1 169 1 16 1 54 1 160 1 130 1 
157 2 224 4 21 4 40 1 41 1 54 4 79 1 160 4 342 1 341 1 31 1 16 4 246 1 129 1 
223 1 31 1 21 2 224 2 16 2 54 2 160 2 130 1 
140 1 252 1 
140 1 252 1 
201 1 148 1 
201 1 148 1 
201 1 148 1 
145 1 140 1 252 1 
145 1 140 1 252 1 
236 1 140 1 252 1 
125 1 140 2 201 1 8 1 148 1 252 2 
145 1 140 1 252 1 
140 1 60 1 252 1 
140 1 60 1 252 1 
140 1 60 1 252 1 
184 1 101 2 257 2 268 2 339 2 27 1 4 1 59 2 125 1 140 2 304 1 68 1 95 1 69 2 334 2 192 1 71 1 252 2 18 3 
224 2 21 2 257 1 54 2 298 1 260 1 160 2 161 1 59 1 91 1 140 1 334 1 192 1 336 1 236 1 339 1 268 1 16 2 291 1 69 1 109 1 129 1 252 1 18 1 
138 1 284 1 322 1 
138 1 322 1 141 1 
284 2 190 1 7 1 322 3 141 1 222 1 
243 1 284 1 190 1 7 1 322 2 141 1 
284 1 7 1 190 2 322 2 141 1 
184 2 19 1 314 1 112 1 205 2 52 2 87 1 257 5 258 1 134 1 90 1 298 1 260 1 58 1 30 1 161 1 6 1 212 4 230 3 334 5 237 1 238 1 120 1 240 3 173 1 245 1 344 2 346 2 110 1 182 1 326 1 313 1 
223 1 184 1 185 1 21 1 224 1 225 1 257 2 54 1 134 1 90 1 3 1 160 1 261 1 31 1 212 2 334 2 235 1 246 1 16 1 123 1 155 1 
184 3 19 1 314 1 112 1 276 1 205 2 52 2 257 3 87 1 90 1 298 1 30 1 6 2 212 2 230 3 334 3 237 1 238 1 120 1 240 4 245 1 344 2 346 1 110 1 182 1 313 1 
184 4 19 1 314 1 112 1 205 4 276 1 52 4 257 4 87 2 90 1 298 2 30 2 6 3 212 3 230 5 334 4 237 1 238 2 120 1 103 1 240 7 121 1 245 2 344 4 346 2 110 1 182 2 251 1 313 1 
343 1 94 1 338 1 
94 1 306 1 
97 1 
337 1 94 1 
32 1 165 1 337 1 338 2 94 3 65 1 
32 1 337 1 94 1 
94 1 126 1 
274 1 114 5 30 2 317 1 139 1 193 1 96 3 215 1 196 1 12 1 269 1 176 11 271 4 17 1 292 6 182 2 156 1 312 1 
274 1 114 6 30 2 317 2 139 1 193 1 96 3 215 1 196 1 12 1 269 1 176 12 271 5 17 1 292 6 182 2 156 1 312 1 
274 1 114 5 74 1 30 2 317 1 139 1 193 1 96 3 215 1 196 1 12 1 269 1 176 11 271 4 17 1 292 6 182 2 156 1 312 1 
274 2 113 2 87 3 114 18 188 1 89 1 55 1 30 5 317 4 299 1 280 4 33 1 139 2 193 1 96 5 215 2 196 1 238 3 267 1 172 1 12 1 219 1 269 2 176 35 271 9 245 3 17 1 67 1 292 17 47 1 182 5 156 2 312 1 293 3 273 1 
274 1 113 4 114 7 89 2 188 2 30 2 317 2 299 1 139 1 193 1 96 4 214 1 215 1 196 1 269 1 323 1 176 14 271 6 17 1 292 7 182 2 47 2 156 1 312 1 273 2 
85 1 22 1 158 1 217 1 11 1 107 1 228 1 324 1 289 1 116 1 154 1 283 1 46 1 194 1 253 1 234 1 
22 2 217 1 11 1 107 1 106 1 210 1 228 1 324 1 289 1 116 1 247 1 154 1 283 1 46 1 194 1 253 2 82 1 
22 1 116 1 247 1 217 1 283 1 46 1 11 1 194 1 107 1 253 1 106 1 210 1 
84 1 22 1 217 2 150 1 81 1 307 1 289 1 116 2 249 1 154 1 283 1 46 2 194 2 253 1 82 1 
22 1 158 1 217 1 11 1 107 1 210 1 228 1 324 1 289 1 116 1 154 1 283 1 46 1 194 1 253 1 234 1 
325 1 
184 2 315 1 131 1 52 2 187 4 2 1 134 6 90 1 316 1 6 2 230 2 282 1 283 2 237 1 100 2 63 2 147 1 240 2 66 1 288 1 16 1 110 1 327 1 254 2 19 1 294 1 21 1 204 1 257 5 258 3 28 1 160 1 31 1 34 1 332 2 334 5 76 1 169 1 120 1 171 1 173 1 81 2 124 2 181 1 127 2 128 2 350 1 
327 1 21 1 294 1 204 1 206 1 257 3 187 2 258 1 134 2 316 1 160 1 31 1 34 1 282 1 334 3 76 1 169 1 171 1 66 1 288 1 16 1 128 1 
184 1 327 1 254 1 204 1 294 1 21 1 169 1 206 1 257 3 258 1 187 3 171 1 134 1 90 1 316 1 160 1 66 1 288 1 31 1 34 1 16 1 76 1 334 3 282 1 
327 1 184 1 254 1 21 1 294 1 204 1 206 1 257 3 258 1 187 3 134 2 90 1 316 1 160 1 31 1 34 1 282 1 334 3 76 1 169 1 100 1 171 1 66 1 288 1 16 1 128 1 
184 5 315 1 131 1 52 1 187 6 134 7 90 5 316 1 318 1 6 2 92 1 230 1 282 1 237 1 100 4 63 2 200 1 66 1 288 1 16 1 110 1 327 1 254 4 19 1 204 1 21 1 294 1 295 1 206 1 257 5 258 3 160 1 31 1 34 1 213 1 332 2 76 1 334 5 169 1 171 1 173 1 124 2 127 2 128 4 
184 2 315 1 131 1 52 1 187 4 134 4 90 1 316 1 6 2 230 1 282 1 237 1 100 2 63 2 147 1 240 2 66 1 288 1 16 1 110 1 327 1 19 1 254 2 204 1 21 1 294 1 257 4 258 2 160 1 31 1 34 1 332 2 76 1 334 4 169 1 171 1 173 1 124 2 127 2 128 2 
184 1 327 1 254 2 19 1 21 1 294 1 204 1 131 1 315 1 52 1 257 4 258 2 187 4 134 4 90 1 316 1 160 1 318 1 31 1 6 2 34 1 213 1 92 1 230 1 332 2 282 1 334 4 76 1 237 1 169 1 100 2 63 2 171 1 173 1 66 1 288 1 16 1 124 2 110 1 127 2 128 2 
184 1 327 1 254 2 19 1 21 1 294 1 204 1 131 1 315 1 52 1 257 4 258 2 187 4 134 4 90 1 316 1 160 1 318 1 31 1 6 2 34 1 213 1 92 1 230 1 332 2 282 1 334 4 76 1 237 1 169 1 100 2 63 2 171 1 173 1 66 1 288 1 16 1 124 2 110 1 127 2 128 2 
184 1 327 1 254 2 19 1 21 1 294 1 204 1 131 1 52 1 257 4 258 2 187 4 134 4 159 1 90 1 208 1 316 1 160 1 318 1 31 1 34 1 230 1 332 2 282 1 334 4 76 1 305 2 233 1 237 1 169 1 100 2 171 1 240 2 173 1 220 2 66 1 288 1 16 1 124 2 110 1 128 2 
184 1 327 1 19 1 254 3 21 1 294 1 204 1 131 1 315 1 295 1 52 1 257 4 258 2 187 5 134 5 90 1 316 1 160 1 318 1 31 1 6 2 34 1 213 1 92 1 230 1 332 2 282 1 334 4 76 1 237 1 169 1 100 3 63 2 171 1 173 1 66 1 288 1 16 1 124 2 110 1 127 2 128 3 
184 1 327 1 19 1 254 3 21 1 294 1 204 1 131 1 315 1 295 1 52 1 257 4 258 2 187 5 134 5 90 1 316 1 160 1 318 1 31 1 6 2 34 1 213 1 92 1 230 1 332 2 282 1 334 4 76 1 237 1 169 1 100 3 63 2 171 1 173 1 66 1 288 1 16 1 124 2 110 1 127 2 128 3 
184 1 131 1 52 1 187 4 134 4 90 1 316 1 230 1 282 1 237 1 100 2 147 1 240 2 66 1 288 1 16 1 110 1 327 1 19 1 254 2 204 1 21 1 294 1 257 4 258 2 159 1 160 1 31 1 34 1 332 2 76 1 334 4 305 2 169 1 171 1 173 1 220 2 124 2 128 2 
343 1 151 1 113 2 272 1 17 1 193 1 188 1 89 1 47 1 72 1 273 1 
20 1 113 4 51 1 26 13 87 3 88 1 114 7 188 2 89 2 30 3 317 1 280 4 321 1 238 1 172 2 340 1 176 17 43 4 151 2 271 1 245 3 272 1 67 1 45 1 250 1 292 10 47 2 182 1 311 13 129 1 273 2 293 3 
328 1 21 1 224 1 157 1 49 1 113 2 114 1 54 1 89 1 188 1 160 1 211 1 283 1 321 1 79 1 340 1 43 1 176 2 151 1 81 1 272 1 16 1 203 1 179 1 45 1 292 1 47 1 273 1 
157 1 224 1 21 1 113 2 321 1 114 1 188 1 89 1 54 1 79 1 160 1 242 1 176 1 151 1 81 1 16 1 272 1 45 1 283 1 47 1 273 1 
85 1 21 1 157 1 224 1 113 4 226 1 114 1 188 2 89 2 54 1 160 1 142 1 283 4 170 1 340 1 176 2 151 2 81 2 272 2 16 1 180 1 292 1 45 1 47 2 72 1 273 2 
224 1 21 1 113 2 26 1 87 1 114 2 188 1 89 1 54 1 160 1 30 1 164 1 321 1 238 1 40 1 43 1 176 3 151 1 245 1 246 1 272 1 16 1 292 1 47 1 182 1 311 1 273 1 
113 2 26 1 89 1 188 1 30 1 317 1 43 1 176 2 151 1 271 1 245 1 272 1 36 1 292 2 47 1 311 1 72 1 273 1 
113 2 238 1 296 1 26 1 114 2 89 1 188 1 43 1 176 2 151 1 272 1 47 1 182 1 311 1 72 1 273 1 
113 2 87 1 26 2 114 2 188 1 89 1 30 1 238 1 176 4 43 2 151 1 245 1 272 1 292 2 47 1 182 1 311 2 72 1 273 1 
113 2 26 1 89 1 188 1 30 1 317 1 43 1 176 2 151 1 271 1 245 1 272 1 142 1 36 1 292 2 47 1 311 1 273 1 
113 2 238 1 296 1 26 1 114 2 89 1 188 1 43 1 176 2 151 1 272 1 142 1 47 1 182 1 311 1 273 1 
113 2 87 1 26 2 114 2 188 1 89 1 30 1 317 1 142 1 238 1 176 4 43 2 151 1 245 1 271 1 272 1 292 2 47 1 182 1 311 2 273 1 
113 2 238 1 26 2 87 1 114 2 89 1 188 1 30 1 43 2 176 4 151 1 245 1 272 1 292 2 182 1 47 1 311 2 273 1 
211 1 263 1 81 1 283 1 
23 1 81 1 53 1 283 1 
113 2 87 1 26 2 114 2 188 1 89 1 30 1 321 1 238 1 176 4 43 2 151 1 245 1 272 1 292 2 47 1 182 1 311 2 273 1 
211 1 263 1 85 1 25 1 283 1 
224 1 21 1 113 2 87 1 26 1 114 1 188 1 89 1 54 1 57 1 160 1 30 1 317 1 321 1 238 1 40 1 176 3 43 1 151 1 271 1 245 1 246 1 272 1 16 1 292 2 182 1 47 1 311 1 273 1 
113 4 256 1 87 2 114 7 188 2 89 2 56 1 209 1 30 2 317 1 162 1 280 2 166 1 98 1 238 2 172 1 14 1 323 1 176 13 245 2 271 1 122 1 67 1 292 6 47 2 182 2 273 2 293 1 
186 1 113 6 87 3 114 12 188 3 89 3 56 2 209 4 30 3 317 2 299 2 162 1 5 1 280 2 330 1 96 1 98 1 320 1 285 1 99 1 238 2 14 1 323 1 176 26 270 1 271 3 245 3 122 2 67 2 292 14 182 2 47 3 273 3 293 2 
186 1 113 6 329 1 87 5 114 19 188 3 89 3 56 2 209 4 30 5 299 1 317 3 162 1 5 1 280 5 166 1 330 1 193 1 96 1 98 1 320 1 285 1 99 1 238 4 172 2 14 1 323 1 176 37 270 1 245 5 271 4 122 1 17 1 67 3 292 18 47 3 182 4 273 3 293 3 
186 1 113 8 329 1 87 5 114 19 188 4 89 4 56 2 209 4 30 5 299 2 317 3 162 1 5 1 280 5 166 1 330 1 193 1 96 1 98 1 320 1 285 1 99 1 238 4 172 2 14 1 323 1 176 38 270 1 245 5 271 4 122 1 17 1 67 3 292 19 47 4 182 4 273 4 293 3 
186 1 113 4 87 4 114 17 188 2 89 2 56 1 209 4 30 4 317 2 299 1 162 1 5 1 280 3 330 1 193 1 96 1 98 1 320 1 285 1 99 1 238 4 172 1 14 1 323 1 176 32 270 1 271 3 245 4 122 1 17 1 67 2 292 15 47 2 182 4 273 2 293 2 
146 1 268 1 339 1 189 1 59 1 140 1 331 1 93 1 69 1 252 1 
236 1 109 1 
59 1 102 1 140 1 290 1 339 1 268 1 69 1 259 1 252 1 
184 1 101 1 257 1 268 1 339 1 27 1 4 1 59 1 125 1 140 1 304 1 68 1 95 1 69 1 192 1 334 1 252 1 18 2 
184 1 101 1 257 1 268 1 339 1 27 1 4 1 59 1 125 1 140 1 304 1 68 1 95 1 69 1 192 1 334 1 252 1 18 2 
184 1 101 1 257 1 268 1 339 1 27 1 4 1 59 1 125 1 140 1 304 1 68 1 95 1 69 1 192 1 334 1 252 1 18 2 
145 1 348 1 8 1 
145 1 348 1 8 1 
175 1 60 1 
175 1 60 1 8 1 
91 1 336 1 
21 2 224 2 257 1 27 1 54 2 298 1 260 1 160 2 161 1 59 1 212 1 91 1 140 1 334 1 336 1 236 1 101 1 339 1 268 1 78 1 16 2 291 1 69 1 109 1 129 1 252 1 18 1 
145 1 348 1 
175 1 60 1 8 1 
48 1 21 2 113 2 321 1 226 2 86 1 170 1 114 1 188 1 89 1 340 1 160 2 176 2 80 1 151 1 16 2 309 1 272 1 283 2 45 1 292 1 47 1 273 1 
85 1 228 1 152 1 345 1 178 1 217 1 283 2 107 1 210 1 
228 1 152 1 217 1 231 1 283 1 107 1 210 1 
177 1 81 1 307 1 345 1 217 1 283 1 
228 1 152 1 345 1 178 1 217 1 283 1 107 1 210 1 
229 1 
184 1 343 1 52 1 75 1 230 1 232 1 90 1 
184 2 19 1 315 1 52 1 257 1 258 1 134 1 90 1 6 1 230 1 334 1 237 1 63 1 240 1 173 1 110 1 127 1 
19 1 38 1 81 1 237 1 283 1 110 1 173 1 
184 5 19 2 205 5 52 5 257 1 87 2 258 1 134 1 90 2 30 2 300 2 262 1 5 1 280 1 6 3 330 1 230 8 334 1 320 1 237 2 99 1 238 2 120 1 198 1 239 1 240 6 173 2 270 1 245 2 344 5 67 1 181 1 110 2 182 2 293 1 
269 1 300 1 274 1 19 1 237 1 196 1 213 1 52 1 230 1 257 1 110 1 334 1 173 1 
184 1 19 1 237 1 52 1 173 1 90 1 75 1 230 1 110 1 232 1 
184 2 238 1 205 2 52 2 87 1 240 4 30 1 245 1 6 2 344 2 230 2 182 1 
184 1 257 1 258 1 334 1 134 1 90 1 
19 2 266 2 237 2 276 1 52 2 120 2 257 3 258 2 2 1 134 4 173 1 202 1 81 2 153 1 230 2 35 1 334 3 181 2 283 4 110 2 350 1 
211 1 185 1 263 1 21 1 224 1 81 1 16 1 246 1 283 1 54 1 349 1 160 1 
184 4 215 1 19 1 237 1 205 2 52 2 120 1 240 4 173 1 90 2 300 1 6 2 344 2 230 2 110 1 181 1 
59 1 277 1 339 1 
59 1 277 1 339 1 
4 1 244 1 59 1 91 1 339 1 
59 1 277 1 339 1 
59 1 339 1 117 1 
59 1 339 1 117 1 
59 1 339 1 117 1 
59 1 339 1 
140 1 252 1 
274 1 113 4 196 1 89 2 188 2 317 1 299 1 269 1 271 2 17 1 193 1 96 1 47 2 273 2 
343 1 17 1 193 1 
113 2 238 1 87 1 114 2 89 1 188 1 30 1 317 1 176 4 271 1 245 1 292 2 182 1 47 1 319 1 273 1 
238 1 87 1 114 4 172 1 30 1 317 1 176 7 280 2 245 1 271 1 67 1 292 3 182 1 293 1 
274 1 20 1 113 2 87 2 114 11 89 1 188 1 30 4 317 3 299 1 280 2 193 1 96 2 196 1 238 2 172 1 269 1 176 22 245 2 271 5 17 1 292 11 250 1 182 4 47 1 312 1 293 2 273 1 
176 1 280 1 114 1 
176 1 292 1 293 1 
83 1 238 1 87 1 114 3 30 1 317 1 176 6 245 1 271 2 292 3 182 1 96 1 
113 4 87 2 114 7 188 2 89 2 30 2 317 1 299 1 5 1 280 1 330 1 96 1 320 1 99 1 238 2 176 13 323 1 270 1 245 2 271 2 67 1 292 6 47 2 182 2 293 1 273 2 
274 1 114 3 30 1 317 1 269 1 176 6 271 2 292 3 182 1 96 1 312 1 
274 1 113 2 196 1 114 1 89 1 188 1 317 1 299 1 269 1 176 1 271 2 17 1 248 1 193 1 96 1 47 1 273 1 
274 1 113 2 196 1 114 5 188 1 89 1 30 2 317 2 269 1 323 1 176 10 271 4 292 5 47 1 96 2 182 2 273 1 312 1 
113 2 89 1 188 1 30 1 317 1 323 1 176 2 245 1 271 1 292 2 47 1 273 1 
113 2 238 1 87 1 114 2 89 1 188 1 30 1 323 1 176 4 245 1 292 2 182 1 47 1 273 1 
274 1 113 2 114 1 89 1 188 1 269 1 323 1 176 2 271 1 292 1 47 1 96 1 273 1 
274 1 113 8 87 3 114 13 188 4 89 4 55 1 30 5 299 1 317 3 280 4 33 1 166 1 193 1 96 2 319 1 196 1 238 2 172 1 219 1 269 1 323 1 176 27 245 3 271 5 17 1 67 1 292 14 47 4 182 4 312 1 273 4 293 3 
274 1 113 2 87 1 114 7 188 1 89 1 30 3 317 1 280 2 330 1 193 1 96 2 196 1 172 1 269 1 176 15 323 1 271 3 245 1 17 1 67 1 292 8 182 2 47 1 312 1 293 1 273 1 
274 1 113 4 87 1 114 7 188 2 89 2 30 3 317 2 280 2 330 1 193 1 96 2 319 1 196 1 172 1 269 1 176 15 323 1 245 1 271 4 17 1 67 1 292 8 182 2 47 2 312 1 273 2 293 1 
274 1 113 6 87 2 114 12 188 3 89 3 30 4 317 2 299 1 5 1 280 1 330 1 193 1 96 3 319 1 320 1 196 1 99 1 238 2 269 1 176 23 323 1 270 1 245 2 271 5 17 1 67 1 292 11 47 3 182 4 312 1 293 1 273 3 
113 8 87 2 114 5 188 4 89 4 30 2 317 1 299 2 5 1 280 1 330 1 96 1 319 1 320 1 99 1 238 1 176 12 323 1 270 1 245 2 271 2 67 1 292 7 47 4 182 1 293 1 273 4 
274 1 113 2 87 1 114 7 188 1 89 1 30 3 317 1 280 2 330 1 193 1 96 2 196 1 172 1 269 1 176 15 323 1 271 3 245 1 17 1 67 1 292 8 182 2 47 1 312 1 293 1 273 1 
113 4 87 2 114 7 188 2 89 2 30 2 317 1 299 1 5 1 280 1 330 1 96 1 320 1 99 1 238 2 176 13 323 1 270 1 245 2 271 2 67 1 292 6 47 2 182 2 293 1 273 2 
274 1 113 8 87 2 114 10 188 4 89 4 30 4 317 2 299 2 5 1 280 1 330 1 193 1 96 3 319 1 320 1 196 1 99 1 238 1 269 1 176 22 323 1 270 1 245 2 271 5 17 1 67 1 292 12 47 4 182 3 312 1 273 4 293 1 
113 8 87 3 114 7 188 4 89 4 30 3 317 3 299 2 5 1 280 1 166 1 330 1 96 1 320 1 99 1 238 2 176 16 323 1 270 1 245 3 271 4 67 1 292 9 47 4 182 2 273 4 293 1 
274 1 196 1 114 1 317 1 269 1 176 2 271 2 17 1 292 1 193 1 96 1 
274 1 113 8 87 2 114 10 188 4 89 4 30 4 317 2 299 2 5 1 280 1 166 1 330 1 193 1 96 3 320 1 196 1 99 1 238 1 269 1 176 22 323 1 270 1 245 2 271 5 17 1 67 1 292 12 47 4 182 3 312 1 273 4 293 1 
288 1 302 1 21 1 16 1 197 1 129 1 160 1 
21 1 197 1 13 1 160 1 288 1 302 1 44 1 16 1 335 1 265 1 129 1 167 1 
343 1 81 1 283 1 
21 1 224 1 157 1 81 1 16 1 283 1 54 1 160 1 
266 1 21 1 224 1 157 1 16 1 283 1 54 1 160 1 
266 1 21 1 224 1 157 1 16 1 283 1 54 1 160 1 
266 1 257 1 283 1 334 1 
266 1 257 1 283 1 334 1 
149 1 
81 1 283 1 
48 1 85 1 157 1 224 1 21 1 113 2 321 1 188 1 89 1 54 1 160 1 151 1 16 1 272 1 283 1 47 1 273 1 
202 1 19 1 81 1 237 1 212 1 257 1 283 1 110 1 334 1 173 1 
149 1 
85 1 81 1 119 1 283 4 286 1 
50 1 283 1 
81 1 283 1 
85 1 283 2 210 1 
85 1 81 1 283 2 
85 1 81 1 283 2 
21 1 224 1 157 1 81 1 16 1 283 1 54 1 160 1 
266 1 283 1 
308 1 310 1 264 1 70 1 129 1 
184 1 204 1 195 1 169 1 257 2 171 1 218 1 90 1 66 1 31 1 212 1 308 1 15 1 310 2 264 2 334 2 70 2 129 1 77 1 
21 1 86 1 160 1 80 1 308 1 309 1 16 1 310 1 70 1 
195 1 308 1 77 1 
343 1 199 1 104 1 133 1 
22 1 289 1 199 1 154 1 104 1 133 1 253 1 
116 1 46 1 253 1 
22 1 158 1 10 1 199 1 227 1 133 1 289 1 154 1 253 1 143 1 
73 1 22 2 289 1 199 1 154 1 104 1 133 1 106 1 253 2 
284 1 22 1 158 1 322 1 104 1 115 1 138 1 289 1 154 1 253 1 183 1 
22 1 289 1 158 1 154 1 104 1 133 1 253 1 
22 1 289 1 158 1 199 1 154 1 133 2 253 1 
22 2 158 1 104 1 133 1 279 1 163 1 289 2 154 2 253 2 144 1 
22 3 158 1 199 1 133 1 29 1 104 2 106 2 137 1 287 1 115 1 289 1 154 1 253 3 
284 1 22 2 322 2 158 1 199 1 104 1 133 1 106 1 138 1 281 1 289 1 141 1 154 1 253 2 222 1 
73 1 22 4 158 1 199 1 133 1 29 1 104 2 106 2 115 1 289 2 108 1 154 2 253 4 
22 1 289 1 158 1 199 1 154 1 104 1 133 1 253 1 
22 3 10 1 199 2 133 2 227 2 29 1 104 2 106 2 115 1 289 1 154 1 143 1 253 3 
22 2 255 1 158 1 199 1 104 1 133 1 106 1 301 1 289 1 154 1 253 2 61 1 
22 1 0 1 158 1 199 1 227 1 133 1 289 1 154 1 253 1 143 1 
303 1 24 2 104 2 174 1 
22 1 289 1 158 1 39 1 154 1 253 1 
287 1 22 2 289 1 158 1 199 1 154 1 104 1 133 1 106 1 253 2 
111 1 
22 1 289 1 158 1 199 1 154 1 104 1 133 1 253 1 
168 1 22 3 158 1 199 1 133 1 104 1 106 1 287 1 289 1 154 1 253 3 
115 1 22 1 104 1 29 1 253 1 106 1 
104 1 133 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (103,218,246) (103,218,246) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 13 12 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 19 56 85 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 19 56 85 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) (236,307) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) (236,307) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 226 190 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 258 168 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 95 235 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 95 235 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 95 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 95 235 185 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 95 235 185 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 19 56 172 315 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 13 12 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 226 190 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 13 12 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (55,214,290,329) (55,214,290,329) (55,214,290,329) 30 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
284 1 34 1 9 1 
34 1 220 1 261 2 
198 2 229 1 164 2 50 2 280 2 182 2 232 1 171 2 
123 1 0 1 219 1 164 3 167 1 50 2 221 1 171 2 259 2 224 1 229 1 175 1 147 1 231 1 23 2 182 2 232 1 266 1 64 1 187 2 69 1 274 1 239 2 280 3 191 1 243 1 74 1 198 2 77 1 78 1 158 1 81 1 161 2 209 1 122 1 212 1 162 1 
198 1 164 1 256 1 60 1 50 1 280 1 182 1 232 1 73 1 171 1 
218 1 103 1 
46 1 218 1 34 1 164 1 50 1 280 1 240 1 171 1 73 1 284 1 198 1 246 2 263 2 22 1 182 1 
245 1 246 1 263 1 208 1 37 1 
189 1 164 1 34 1 256 1 50 1 280 1 73 1 171 1 37 1 284 1 198 1 245 1 157 1 246 1 60 1 263 1 182 1 232 1 318 1 
246 1 263 1 37 1 
164 1 256 1 50 1 280 1 73 1 171 1 245 1 198 1 246 1 60 1 263 1 182 1 318 1 232 1 
34 1 
164 1 34 1 256 1 50 1 280 1 73 1 171 1 37 1 284 1 198 1 245 1 157 1 246 1 60 1 263 1 182 1 292 1 232 1 318 1 
296 4 125 1 164 1 256 1 301 1 50 1 132 2 171 1 13 1 12 1 260 1 98 4 144 2 60 1 230 1 178 1 263 4 62 2 182 1 265 1 232 1 318 1 319 2 27 1 322 2 34 1 280 1 154 1 73 1 37 2 284 1 198 1 245 2 157 1 246 4 288 1 42 1 337 2 
229 1 9 1 
217 1 164 2 50 1 280 2 171 1 198 2 229 2 82 1 182 1 
31 1 272 1 242 1 
123 1 187 1 164 1 239 1 167 1 280 1 191 1 282 1 224 1 229 1 175 1 161 1 147 1 81 1 209 1 162 1 
123 1 272 1 187 1 164 2 239 1 167 1 50 1 191 1 280 2 224 1 198 1 57 1 175 1 81 1 147 1 161 1 209 1 210 1 182 1 162 1 
198 3 57 1 229 1 164 3 50 3 280 3 182 3 171 1 
198 1 164 1 60 1 50 1 280 1 182 1 73 1 
198 1 217 1 164 1 82 1 50 1 280 1 182 1 73 1 171 1 
123 1 46 1 0 1 217 1 218 1 166 1 164 4 167 1 50 3 171 2 259 1 224 1 57 1 229 1 175 1 147 1 263 1 231 1 23 2 22 1 182 3 232 1 266 1 187 1 323 1 274 1 239 1 191 1 280 4 240 1 243 1 73 1 74 1 198 3 77 1 158 1 246 1 81 1 161 1 209 1 210 1 122 1 212 1 162 1 
198 2 57 1 229 1 201 1 164 2 35 1 50 1 280 2 182 1 
46 1 217 1 48 1 218 1 34 1 164 3 166 1 50 3 280 3 240 1 171 1 73 1 198 3 57 2 246 1 263 1 22 1 210 1 182 3 
217 1 272 1 164 2 50 2 280 2 242 1 171 1 198 2 57 1 182 2 
123 1 187 1 164 1 239 1 167 1 280 1 191 1 224 1 229 1 175 1 161 1 147 1 81 1 209 1 162 1 
163 1 270 1 187 1 164 1 239 1 167 1 280 1 191 1 229 1 175 1 161 1 147 1 81 1 209 1 162 1 
0 1 89 1 2 1 257 1 259 3 19 1 23 2 62 1 266 1 322 1 31 1 272 1 69 1 242 1 243 1 74 1 77 2 285 1 158 1 40 1 79 1 212 1 
198 1 164 1 275 1 50 1 240 1 280 1 182 1 73 1 
217 1 164 5 35 1 50 4 280 5 223 1 171 1 198 5 57 2 201 1 311 1 229 1 210 1 182 4 
198 2 164 2 275 1 60 1 50 2 280 2 182 2 73 1 
127 1 143 1 
127 1 143 1 
331 1 146 1 
331 1 146 1 
331 1 146 1 
127 1 143 1 200 1 
127 1 143 1 324 1 
331 1 127 2 143 2 90 1 146 1 58 1 
127 1 143 1 200 1 
127 1 143 1 200 1 
127 1 143 1 206 1 
127 1 143 1 206 1 
127 1 143 1 206 1 
28 1 213 2 29 3 151 2 127 2 90 1 1 1 34 1 255 2 3 2 71 2 116 1 143 2 246 2 100 1 176 1 83 1 263 2 25 1 
213 1 127 1 3 1 255 1 164 2 50 2 302 1 8 1 54 1 170 1 143 1 310 1 229 1 100 1 263 1 182 2 24 1 29 1 151 1 324 1 280 2 198 2 246 1 87 1 
299 1 18 1 105 1 
299 1 18 1 204 1 
273 1 18 3 276 1 204 1 86 1 105 2 
309 1 18 2 276 1 204 1 86 1 105 1 
18 2 276 2 204 1 86 1 105 1 
296 2 126 2 51 1 132 1 56 1 142 1 144 1 98 1 19 1 263 4 62 1 265 1 65 1 269 1 34 1 37 1 284 1 245 4 157 1 246 4 337 1 85 1 87 1 
296 2 132 1 56 1 144 1 98 1 19 1 59 1 263 4 21 2 62 1 265 1 65 1 267 1 269 1 34 1 37 3 284 1 245 4 157 1 246 4 208 2 337 1 85 1 87 1 
295 1 296 1 126 1 220 1 301 1 257 1 51 1 132 1 56 1 142 1 144 1 98 3 19 1 261 2 263 3 62 1 181 1 269 1 322 1 34 2 284 1 245 2 246 3 337 1 85 1 87 1 
295 2 296 2 126 2 254 1 220 1 257 2 301 1 51 1 132 1 56 2 142 1 144 1 98 5 99 1 19 2 261 3 263 4 181 2 62 2 269 1 322 2 34 2 284 1 196 1 245 3 246 4 337 1 85 1 87 2 
271 1 162 1 9 1 
237 1 162 1 
308 1 
81 1 162 1 
271 2 167 1 81 1 111 1 162 3 137 1 
167 1 81 1 162 1 
130 1 162 1 
251 1 109 3 110 2 69 3 326 1 259 4 13 1 77 1 76 1 145 1 202 1 230 1 178 1 62 1 249 1 88 2 
251 1 109 3 110 2 69 3 326 1 259 4 13 1 77 1 76 1 145 1 202 1 230 1 178 1 62 1 249 1 88 2 
251 1 109 3 110 2 69 3 326 1 259 4 13 1 97 1 77 1 76 1 145 1 202 1 230 1 178 1 62 1 249 1 88 2 
0 1 251 2 92 1 165 1 257 3 259 25 13 1 56 3 227 1 145 1 19 3 230 2 178 2 148 3 62 4 23 2 266 1 152 1 322 3 109 5 110 3 69 12 326 2 243 1 118 4 76 2 77 13 158 1 202 1 160 1 84 1 249 1 291 1 88 3 
0 2 251 1 259 6 13 1 145 1 178 1 230 1 62 1 23 4 266 2 109 4 110 2 69 4 326 1 243 2 75 1 77 2 76 1 158 2 41 1 84 1 249 1 88 3 
214 1 30 1 290 1 329 1 
214 1 307 1 290 1 329 1 
250 1 49 1 253 1 299 1 93 2 55 2 18 2 147 1 262 1 104 1 105 1 187 1 236 1 273 1 239 1 279 1 191 1 113 1 117 1 332 1 161 1 119 1 204 1 335 1 290 2 
214 1 307 1 290 1 329 1 
214 1 30 1 290 1 329 1 
216 1 
269 1 296 1 215 1 187 1 239 1 190 1 132 1 37 2 157 1 226 1 98 1 246 1 144 1 175 1 161 1 263 1 337 1 265 1 
306 1 139 1 157 1 246 1 263 1 292 1 37 2 258 1 10 1 
306 1 139 1 246 1 287 1 94 1 263 1 10 1 
306 1 139 1 157 1 246 1 287 1 168 1 94 1 263 1 292 1 37 2 258 1 10 1 
157 1 246 1 263 1 292 1 37 1 
296 1 220 1 168 1 94 1 132 1 258 1 10 1 306 1 139 1 98 1 144 1 313 2 261 1 263 1 264 1 265 1 33 2 188 1 327 2 38 1 37 2 157 1 246 1 287 1 337 1 294 1 
296 1 220 1 168 1 94 1 132 1 95 1 258 1 10 1 306 1 139 1 144 1 98 1 313 2 263 1 264 1 265 1 234 1 235 1 188 1 33 2 327 2 37 2 157 1 246 1 287 1 337 1 294 1 
296 1 220 1 168 1 132 1 95 1 258 1 10 1 306 1 139 1 144 1 98 1 313 1 263 1 264 1 265 1 234 1 235 1 188 1 33 1 327 1 37 2 157 1 246 1 337 1 294 1 
296 1 168 1 132 1 95 1 258 1 10 1 306 1 139 1 144 1 98 1 313 1 261 1 263 1 20 1 265 1 317 1 320 1 107 1 33 1 37 2 244 1 157 1 246 1 337 1 294 1 
296 1 220 1 168 2 94 2 132 1 95 1 258 2 10 1 306 1 139 1 144 1 98 1 313 2 263 1 264 1 265 1 185 1 234 1 235 1 188 1 33 2 327 2 37 3 157 1 246 1 287 2 337 1 294 1 
296 1 220 1 168 2 94 2 132 1 95 1 258 2 10 1 306 1 139 1 144 1 98 1 313 2 263 1 264 1 265 1 185 1 234 1 235 1 188 1 33 2 327 2 37 3 157 1 246 1 287 2 337 1 294 1 
296 1 168 1 94 1 132 1 258 1 10 1 306 1 139 1 144 1 98 1 313 2 261 1 20 1 263 1 265 1 317 2 107 1 33 2 38 1 37 2 157 1 246 1 287 1 337 1 294 1 
0 1 31 1 272 1 109 2 110 1 69 2 2 1 242 1 243 1 9 1 259 3 74 1 13 1 77 1 158 1 145 1 229 1 230 1 178 1 62 1 23 2 249 1 212 1 88 2 266 1 
0 2 257 3 221 1 222 1 7 1 259 18 56 3 227 2 229 1 19 3 148 3 23 4 62 3 266 2 152 1 186 1 31 12 322 3 272 12 69 7 242 3 195 1 243 2 74 2 118 4 77 11 158 2 122 1 212 1 293 1 
123 1 0 1 164 2 167 1 50 1 221 1 222 1 136 1 259 2 140 1 224 1 57 1 229 1 175 1 147 1 23 2 182 1 266 1 187 1 69 1 239 1 191 1 280 2 36 1 282 1 242 1 243 1 74 1 198 1 77 1 158 1 81 1 161 1 209 1 210 1 122 1 162 1 212 1 
123 1 0 2 164 2 257 1 167 1 50 1 222 1 133 1 134 1 259 6 56 1 224 1 57 1 19 1 175 1 147 1 314 1 231 1 180 1 149 1 62 1 23 4 182 1 266 2 322 1 31 2 272 2 187 1 69 2 239 1 191 1 280 2 242 2 243 2 74 2 198 1 77 4 158 2 81 1 161 1 209 1 210 1 122 1 162 1 212 2 
0 2 49 1 2 1 164 1 219 2 50 1 221 1 53 1 138 1 259 2 173 1 57 1 312 1 175 2 147 2 23 4 182 1 150 1 266 2 233 1 187 7 69 1 239 8 280 1 191 2 112 1 243 2 194 1 74 2 198 1 77 1 158 2 161 8 81 2 205 1 43 1 122 1 162 3 212 2 
198 1 217 1 174 1 164 1 50 1 280 1 182 1 171 1 
0 1 2 1 69 1 243 1 259 1 74 1 285 1 158 1 19 1 23 2 62 1 212 1 266 1 
0 1 31 1 322 1 272 1 2 1 257 1 242 1 243 1 259 2 74 1 77 2 158 1 40 1 23 2 212 1 266 1 
0 1 2 1 257 1 259 3 56 1 19 1 62 1 23 2 266 1 322 1 31 1 272 1 69 1 242 1 243 1 74 1 77 2 158 1 212 1 
0 1 69 1 243 1 138 1 259 1 74 1 285 1 158 1 19 1 23 2 62 1 212 1 266 1 
0 1 31 1 322 1 272 1 257 1 242 1 243 1 138 1 259 2 74 1 77 2 158 1 40 1 23 2 212 1 266 1 
0 1 31 1 322 1 272 1 69 1 257 1 242 1 243 1 138 1 259 3 74 1 56 1 77 2 158 1 19 1 23 2 62 1 212 1 266 1 
0 1 31 1 322 1 272 1 69 1 257 1 242 1 243 1 74 1 259 3 56 1 77 2 158 1 19 1 23 2 62 1 212 1 266 1 
123 1 0 1 164 1 167 1 221 1 259 2 224 1 229 1 175 1 147 1 231 1 23 2 266 1 187 1 69 1 239 1 191 1 280 1 243 1 74 1 77 1 158 1 81 1 161 1 209 1 122 1 162 1 212 1 
163 1 0 1 164 1 167 1 221 1 259 2 229 1 175 1 147 1 23 2 266 1 270 1 187 1 69 1 70 1 239 1 191 1 280 1 243 1 74 1 77 1 158 1 81 1 161 1 209 1 122 1 162 1 212 1 
0 1 257 1 222 1 259 3 56 1 19 1 62 1 23 2 266 1 322 1 31 1 272 1 69 1 242 1 243 1 74 1 77 2 158 1 212 1 
123 1 0 1 164 1 257 1 167 1 259 3 56 1 224 1 19 1 147 1 231 1 180 1 62 1 23 2 266 1 233 1 31 1 322 1 272 1 187 1 69 1 239 1 191 1 280 1 242 1 243 1 74 1 77 2 158 1 161 1 81 1 209 1 162 1 212 1 
0 1 217 1 164 1 257 1 50 1 222 1 171 1 259 2 56 1 19 1 23 2 62 1 182 1 266 1 322 1 69 1 280 1 243 1 74 1 197 1 198 1 77 1 158 1 212 1 
0 2 298 1 257 2 6 1 259 11 56 2 15 1 227 1 19 2 148 1 179 1 23 4 62 2 266 2 152 1 322 2 69 4 328 1 193 1 243 2 118 2 75 1 77 7 158 2 247 1 286 1 
0 2 298 1 257 3 6 4 135 1 259 24 172 1 56 3 19 3 148 2 63 1 23 4 62 3 315 1 266 2 322 3 152 2 109 1 69 10 328 1 193 2 155 1 243 2 39 1 75 1 118 2 77 14 158 2 247 1 286 2 84 1 211 1 88 1 
0 2 298 1 257 2 6 2 259 13 56 2 15 1 227 1 19 2 148 1 23 4 62 2 266 2 152 1 322 2 69 5 328 1 193 1 243 2 118 2 75 1 77 8 158 2 247 1 286 1 211 1 
0 2 298 1 257 2 6 2 259 13 56 2 15 1 227 1 19 2 148 1 23 4 62 2 266 2 152 1 322 2 69 5 328 1 193 1 243 2 118 2 75 1 77 8 158 2 247 1 286 1 211 1 
0 2 298 1 257 4 6 4 135 1 259 30 13 1 172 1 56 4 227 1 145 1 19 4 230 1 178 1 148 2 63 1 23 4 62 5 315 1 266 2 152 2 322 4 109 2 110 1 69 13 328 1 193 1 155 1 243 2 39 1 118 3 75 1 77 17 158 2 247 1 286 1 84 1 249 1 211 1 88 2 
116 1 213 1 67 1 151 1 127 1 143 1 90 1 1 1 3 1 255 1 
324 1 24 1 
213 1 151 1 127 1 143 1 159 1 3 1 255 1 334 1 102 1 
213 1 29 2 151 1 127 1 90 1 1 1 34 1 255 1 3 1 71 1 116 1 246 1 143 1 100 1 176 1 83 1 263 1 25 1 
213 1 29 2 151 1 127 1 90 1 1 1 34 1 255 1 3 1 71 1 116 1 246 1 143 1 100 1 176 1 83 1 263 1 25 1 
213 1 29 2 151 1 127 1 90 1 1 1 34 1 255 1 3 1 71 1 116 1 246 1 143 1 100 1 176 1 83 1 263 1 25 1 
17 1 200 1 58 1 
17 1 200 1 58 1 
206 1 66 1 
58 1 206 1 66 1 
310 1 54 1 
213 1 127 1 164 2 3 1 255 1 50 2 302 1 8 1 54 1 170 1 143 1 310 1 229 1 263 1 25 1 24 1 182 2 29 1 151 1 324 1 71 1 280 2 245 1 198 2 246 1 80 1 87 1 
17 1 200 1 
58 1 206 1 66 1 
0 1 4 1 164 2 219 2 221 1 222 1 53 1 259 2 177 1 147 1 23 2 150 1 266 1 187 2 69 1 239 2 278 1 191 1 280 2 243 1 74 1 156 1 198 2 77 1 158 1 81 1 161 2 336 1 122 1 162 1 212 1 
233 1 124 1 187 2 273 1 49 1 299 1 239 2 191 1 131 1 117 1 332 1 18 2 147 1 161 2 248 1 204 1 335 1 121 1 105 1 
124 1 187 1 273 1 49 1 299 1 239 1 191 1 117 1 332 1 18 2 228 1 161 1 147 1 204 1 335 1 121 1 105 1 
187 1 239 1 277 1 191 1 112 1 169 1 194 1 175 1 147 1 81 1 161 1 248 1 335 1 162 1 
124 1 187 1 273 1 49 1 299 1 239 1 191 1 131 1 117 1 332 1 18 2 161 1 248 1 147 1 204 1 335 1 121 1 105 1 
108 1 
284 1 296 1 98 1 34 1 154 1 9 1 27 1 
296 1 188 1 34 1 220 1 132 1 327 1 37 1 284 1 157 1 144 1 98 1 261 1 264 1 337 1 265 1 
296 2 295 2 257 1 220 2 167 1 129 1 52 1 132 2 134 1 137 1 11 1 56 1 14 1 225 1 144 2 98 4 19 1 175 1 101 1 261 4 147 1 263 1 62 1 181 2 22 1 265 2 269 1 322 1 271 1 187 1 237 2 34 2 239 1 191 2 114 1 37 2 157 1 246 1 161 1 81 1 337 2 162 4 
296 3 295 3 152 1 34 2 220 2 132 1 135 1 56 1 172 1 118 1 144 1 98 2 19 1 261 4 148 1 62 1 337 1 181 3 315 1 265 1 
296 2 234 1 322 1 132 1 13 1 12 1 98 2 246 1 144 1 263 1 178 1 230 1 62 1 337 1 265 1 319 1 
296 1 34 1 132 1 154 1 284 1 144 1 98 1 337 1 265 1 27 1 
296 1 295 1 322 1 34 1 257 1 220 1 56 1 98 2 19 1 261 2 62 1 181 1 
164 1 34 1 256 1 50 1 280 1 73 1 37 1 171 1 284 1 198 1 157 1 60 1 182 1 318 1 232 1 
269 1 296 1 215 1 187 1 239 1 190 1 132 1 37 2 157 1 226 1 98 1 144 1 175 1 161 1 337 1 183 1 265 1 
123 1 0 1 164 3 167 1 50 2 171 2 259 1 224 1 229 1 175 1 147 1 231 1 23 2 182 2 232 1 266 1 187 1 239 1 274 1 280 3 191 1 243 1 74 1 198 2 77 1 158 1 161 1 81 1 209 1 122 1 162 1 212 1 
269 1 295 2 296 2 215 1 110 1 34 4 220 2 132 1 284 2 144 1 98 1 261 4 181 2 337 1 265 1 
151 1 91 1 3 1 
116 1 151 1 310 1 3 1 203 1 
151 1 91 1 3 1 
151 1 91 1 3 1 
151 1 16 1 3 1 
151 1 16 1 3 1 
151 1 16 1 3 1 
151 1 3 1 
127 1 143 1 
0 2 109 3 110 1 69 3 243 2 259 5 13 1 77 2 76 1 158 2 145 1 178 1 230 1 84 1 62 1 23 4 249 1 88 2 266 2 
109 2 110 1 69 2 9 1 259 3 13 1 77 1 145 1 178 1 230 1 249 1 62 1 88 2 
0 1 322 1 69 1 257 1 243 1 96 1 259 3 56 1 77 2 158 1 19 1 23 2 62 1 266 1 
152 1 322 1 69 2 257 1 259 6 56 1 118 2 77 4 227 1 19 1 148 1 62 1 
0 1 257 2 259 16 12 1 13 2 56 2 227 1 145 1 19 2 230 2 148 2 178 2 62 5 23 2 266 1 322 3 109 7 110 1 69 8 195 1 243 1 118 2 76 3 77 8 158 1 84 1 249 1 88 4 293 1 
259 1 118 1 77 1 
259 1 69 1 148 1 
259 5 56 1 322 1 77 3 69 2 19 1 257 1 62 1 134 1 
0 2 257 2 135 1 259 11 172 1 56 2 19 2 148 1 23 4 62 2 63 1 315 1 266 2 152 1 322 2 109 1 69 4 155 1 243 2 118 1 75 1 77 7 158 2 84 1 88 1 
259 1 13 1 69 1 62 1 
47 1 0 1 109 2 69 1 243 1 259 3 76 1 77 2 158 1 145 1 230 1 178 1 84 1 249 1 23 2 88 1 266 1 
322 1 109 3 69 2 259 4 12 1 13 1 77 2 76 1 178 1 230 1 62 2 88 2 
0 1 69 1 243 1 259 1 75 1 158 1 19 1 23 2 62 1 266 1 
0 1 322 1 69 1 257 1 243 1 259 3 56 1 75 1 77 2 158 1 19 1 23 2 62 1 266 1 
47 1 0 3 109 2 69 1 243 3 259 3 75 1 15 1 77 2 76 1 158 3 178 1 230 1 84 1 23 6 266 3 88 1 
47 1 0 5 92 1 257 3 96 1 259 25 13 2 56 3 15 1 227 1 145 1 19 3 230 2 178 2 148 3 23 10 62 5 266 5 152 1 322 3 109 5 110 1 69 11 243 5 118 4 75 1 76 2 77 14 158 5 160 1 84 2 249 1 291 1 88 3 
0 1 257 1 259 9 13 1 56 1 227 1 145 1 19 1 230 1 178 1 148 1 23 2 62 2 315 1 266 1 152 1 322 1 109 2 110 1 69 4 243 1 118 2 75 1 77 5 158 1 249 1 88 2 
0 2 257 1 96 1 259 9 13 1 56 1 227 1 145 1 19 1 230 1 178 1 148 1 23 4 62 2 315 1 266 2 152 1 322 1 109 2 110 1 69 4 243 2 118 2 75 1 77 5 158 2 249 1 88 2 
0 3 257 2 135 1 96 1 259 14 13 1 172 1 56 2 145 1 19 2 230 1 178 1 148 1 23 6 62 3 63 1 315 1 266 3 152 1 322 2 109 3 110 1 69 6 155 1 243 3 118 1 75 1 77 8 158 3 84 1 249 1 88 3 
0 3 257 2 135 1 96 1 259 17 12 1 13 2 172 1 56 2 145 1 19 2 230 2 178 2 148 1 23 6 62 5 63 1 315 1 266 3 152 1 322 3 109 7 110 1 69 8 155 1 243 3 118 1 75 1 76 3 77 9 158 3 84 1 249 1 88 4 
0 1 257 1 259 9 13 1 56 1 227 1 145 1 19 1 230 1 178 1 148 1 23 2 62 2 315 1 266 1 152 1 322 1 109 2 110 1 69 4 243 1 118 2 75 1 77 5 158 1 249 1 88 2 
0 2 257 2 135 1 259 11 172 1 56 2 19 2 148 1 23 4 62 2 63 1 315 1 266 2 152 1 322 2 109 1 69 4 155 1 243 2 118 1 75 1 77 7 158 2 84 1 88 1 
0 3 257 2 135 1 96 1 259 11 172 1 56 2 19 2 148 1 63 1 23 6 62 2 315 1 266 3 152 1 322 2 109 1 69 4 155 1 243 3 118 1 75 1 77 7 158 3 84 1 88 1 
0 3 257 2 135 1 259 11 172 1 56 2 15 1 19 2 148 1 63 1 23 6 62 2 315 1 266 3 152 1 322 2 109 1 69 4 155 1 243 3 118 1 75 1 77 7 158 3 84 1 88 1 
322 1 109 7 110 1 69 4 259 6 12 1 13 2 77 2 76 3 145 1 178 2 230 2 249 1 62 3 88 4 
0 3 257 2 135 1 259 11 172 1 56 2 15 1 19 2 148 1 63 1 23 6 62 2 315 1 266 3 152 1 322 2 109 1 69 4 155 1 243 3 118 1 75 1 77 7 158 3 84 1 88 1 
106 1 164 1 35 1 280 1 73 1 198 1 201 1 229 1 45 1 
106 1 321 1 164 1 5 1 35 1 325 1 280 1 281 1 73 1 198 1 229 1 201 1 45 1 184 1 
187 1 239 1 175 1 147 1 81 1 161 1 191 1 112 1 162 1 194 1 9 1 
187 1 164 2 239 1 167 1 50 1 191 1 280 2 198 1 224 1 57 1 229 1 175 1 81 1 161 1 147 1 209 1 182 1 162 1 
46 1 297 1 187 1 164 2 239 1 167 2 50 2 130 1 240 1 191 1 280 2 72 1 73 1 198 2 224 1 57 1 229 1 81 2 161 1 147 1 209 1 182 1 162 3 
46 1 297 1 270 1 187 2 164 2 239 2 167 2 50 2 130 1 240 1 191 1 280 2 283 1 72 1 73 1 198 2 57 1 229 1 81 2 161 2 147 1 209 1 182 1 162 3 
297 1 271 1 187 3 237 1 34 1 239 3 167 1 130 1 191 1 283 1 72 1 37 1 284 1 246 2 175 1 81 1 161 3 147 1 263 2 22 1 44 1 316 1 162 4 
297 1 271 1 187 3 237 1 34 1 239 3 167 1 130 1 191 1 283 1 72 1 37 1 284 1 11 1 246 2 175 1 81 1 161 3 147 1 263 2 22 1 162 4 
187 1 239 1 312 1 147 1 161 1 191 1 
233 1 187 6 49 1 219 1 239 7 167 1 191 3 303 1 137 1 305 1 173 1 312 1 175 2 161 7 81 2 147 2 205 1 43 1 289 1 150 1 162 3 
123 1 0 2 164 2 167 1 50 1 222 1 133 1 259 3 13 1 224 1 57 1 145 1 229 1 177 1 147 1 230 1 178 1 180 1 231 1 62 1 23 4 182 1 266 2 233 1 31 1 272 1 109 2 187 1 110 1 69 2 239 1 191 1 280 2 242 1 243 2 74 2 198 1 77 1 158 2 81 1 161 1 249 1 209 1 162 1 212 2 88 2 
164 1 256 1 171 1 11 1 14 1 12 1 13 1 98 4 175 1 263 2 178 1 22 1 183 1 182 1 265 2 27 1 271 1 187 1 34 1 280 1 37 2 284 1 198 1 288 1 296 4 129 1 50 1 132 2 225 1 144 2 60 1 230 1 62 2 318 1 232 1 319 2 322 2 237 1 239 1 154 1 73 1 245 1 157 1 246 2 161 1 337 2 162 2 
233 1 271 1 187 2 239 2 312 1 167 1 147 1 81 1 161 2 191 2 114 1 162 2 137 1 
233 1 187 4 239 4 300 1 191 1 112 1 283 1 194 1 175 1 161 4 81 1 147 1 162 1 
297 1 187 2 32 1 239 2 167 1 191 2 303 1 305 1 161 2 81 1 147 1 61 1 26 1 162 1 
332 1 187 1 299 1 18 1 239 1 175 1 147 1 161 1 204 1 191 1 
233 1 187 2 49 1 239 2 278 1 191 1 161 2 81 1 147 1 150 1 162 1 
233 1 297 1 187 4 239 5 300 1 191 2 112 1 194 1 173 1 175 1 161 5 81 2 147 2 43 1 150 1 162 3 
233 1 297 1 187 4 252 1 239 5 300 1 191 2 112 1 194 1 175 1 161 5 81 2 147 2 43 1 150 1 162 3 
270 1 187 1 164 2 239 1 167 1 50 1 191 1 280 2 198 1 57 1 229 1 175 1 81 1 161 1 147 1 209 1 182 1 162 1 
297 1 187 1 239 1 167 1 191 2 303 1 137 1 305 1 161 1 81 1 147 1 289 1 162 1 
68 1 229 1 333 1 120 1 241 1 
46 1 218 1 68 1 238 1 34 1 153 1 166 1 240 1 241 2 73 1 115 1 284 1 245 1 246 2 229 1 333 2 263 2 120 2 22 1 
68 1 4 1 164 1 280 1 156 1 198 1 333 1 120 1 336 1 
238 1 68 1 153 1 
250 1 262 1 119 1 9 1 
214 1 290 1 329 1 
93 1 113 1 104 1 
214 1 30 1 290 1 329 1 
214 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 199 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 18 1 204 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
214 1 128 1 93 1 290 2 329 1 55 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
268 1 250 2 330 2 141 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
304 1 
214 1 30 1 290 1 329 1 
214 1 30 1 290 1 329 1 
250 1 93 1 290 1 207 1 192 1 55 1 
250 1 262 1 

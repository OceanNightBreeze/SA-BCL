#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 236 (331,363) (331,363) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 236 (331,363) (331,363) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 236 (331,363) (331,363) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 236 (331,363) (331,363) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 133 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 236 (31,314) (31,314) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 83 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 333 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 257 247 365 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 257 247 365 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 257 247 365 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 257 247 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 101 222 232 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
331 1 236 1 363 1 339 1 
331 1 236 1 363 1 339 1 
331 1 236 1 363 1 339 1 
331 1 236 1 363 1 339 1 
133 1 339 1 
180 1 314 1 236 1 31 1 279 1 339 1 
297 1 339 1 
83 1 339 1 
83 1 339 1 
292 1 123 1 120 1 
225 1 285 2 292 1 
56 2 283 2 127 2 150 1 267 2 293 2 169 1 223 2 
346 1 69 2 150 1 3 1 169 1 252 1 203 1 103 1 223 2 88 1 253 1 275 2 305 2 224 2 353 1 107 1 127 3 74 1 332 1 154 1 308 1 175 1 129 1 111 1 156 1 56 3 179 1 283 2 235 1 364 1 143 1 142 1 288 1 114 2 267 2 293 2 248 1 
56 1 8 1 283 1 127 1 356 1 267 1 293 1 169 1 223 1 310 1 
101 1 56 2 271 1 283 2 169 1 134 1 223 1 51 1 123 1 8 1 127 2 21 1 267 1 356 2 292 1 98 1 293 1 280 1 99 1 357 1 310 1 
56 2 283 2 169 1 134 1 223 2 51 1 123 1 8 1 127 2 21 1 267 2 356 2 292 1 98 2 293 2 99 2 280 1 357 1 310 1 
312 1 23 1 98 1 99 1 171 1 
312 1 48 1 292 1 117 1 98 2 99 2 171 1 123 1 
312 1 98 1 99 1 
56 1 283 1 169 1 223 1 171 1 51 1 8 1 127 1 356 1 267 1 98 1 293 1 99 1 310 1 
292 1 
312 1 48 1 292 1 98 2 99 2 119 1 171 1 123 1 
27 2 312 2 158 1 167 1 48 1 160 1 171 2 161 1 123 1 7 1 53 1 255 1 256 1 292 1 98 5 11 2 164 1 99 5 110 2 
56 2 348 1 283 1 88 1 182 1 223 1 253 1 305 1 224 1 353 1 288 1 127 2 114 1 10 1 308 1 293 1 129 1 175 1 248 1 111 1 
150 1 120 1 
56 2 283 2 150 2 223 1 18 1 127 2 267 1 293 1 309 1 
10 1 286 1 148 1 
56 1 150 1 88 1 253 1 305 1 224 1 353 1 288 1 9 1 127 1 114 1 308 1 175 1 129 1 248 1 111 1 
56 3 283 3 127 3 267 1 150 1 293 3 182 1 223 3 
56 1 283 1 127 1 356 1 293 1 223 1 310 1 
18 1 56 1 283 1 127 1 356 1 267 1 293 1 223 1 309 1 
169 1 223 3 88 1 275 1 224 1 127 4 332 1 280 1 175 1 129 1 56 4 179 1 283 3 134 1 182 1 288 1 142 1 143 1 21 1 98 1 293 3 99 1 248 1 249 1 348 1 69 2 150 1 203 1 253 1 305 1 107 1 353 1 74 1 356 2 154 1 308 1 309 1 357 1 111 1 156 1 364 1 114 1 267 2 118 1 325 1 
101 1 56 2 283 2 127 2 150 1 222 1 293 1 223 1 182 1 
56 3 337 1 348 1 283 3 134 1 182 2 223 3 127 3 21 1 267 1 356 1 292 1 98 1 293 3 309 1 99 1 280 1 357 1 249 1 
56 2 283 2 182 1 286 1 223 2 127 2 267 1 10 1 293 2 309 1 
56 1 150 1 88 1 253 1 305 1 224 1 353 1 288 1 127 1 114 1 308 1 175 1 129 1 248 1 111 1 
56 1 159 1 150 1 88 1 253 1 305 1 224 1 353 1 288 1 153 1 127 1 114 1 129 1 248 1 111 1 
217 1 272 1 69 2 170 1 275 4 226 1 332 1 154 1 10 2 34 1 156 1 131 1 132 1 179 1 235 2 364 1 286 2 317 1 188 1 142 1 143 2 345 1 148 2 45 1 
56 1 283 1 218 1 127 1 356 1 134 1 293 1 223 1 
101 1 56 5 348 1 283 5 150 1 222 1 182 2 223 4 185 1 152 1 127 5 267 1 293 4 309 1 
56 2 218 1 283 2 127 2 356 1 293 2 223 2 310 1 
216 1 173 1 
216 1 173 1 
35 1 54 1 
35 1 54 1 
35 1 216 1 173 1 54 1 
216 1 173 1 207 1 
216 1 173 1 207 1 
216 1 173 1 207 1 
216 1 173 1 130 1 
35 1 259 1 216 2 173 2 86 1 54 1 
216 1 173 1 122 1 
216 1 173 1 122 1 
216 1 173 1 122 1 
259 1 216 2 220 1 121 2 209 2 362 2 300 3 181 2 301 1 202 1 173 2 329 1 292 1 98 2 227 2 99 2 215 1 177 1 358 1 
46 1 216 1 121 1 150 1 300 1 223 2 202 1 72 1 173 1 91 1 127 2 227 1 130 1 334 1 56 2 283 2 209 1 362 1 241 1 243 1 98 1 293 2 99 1 84 1 
180 1 212 1 151 1 
180 1 279 1 151 1 
231 1 32 1 180 3 212 2 279 1 258 1 
231 1 32 1 180 2 212 1 33 1 279 1 
231 1 32 2 180 2 212 1 279 1 
46 1 48 1 167 1 169 1 223 1 171 4 51 1 123 1 8 1 225 2 126 1 127 1 11 1 335 1 56 1 132 1 283 1 285 2 183 2 188 1 140 1 292 1 98 5 293 1 99 5 345 1 27 1 28 1 250 1 304 2 73 1 307 2 356 1 110 1 310 1 157 1 312 1 160 2 161 3 317 1 267 1 116 1 
46 1 48 1 167 1 169 1 223 1 171 4 51 1 123 1 8 1 225 2 126 1 127 1 11 1 230 2 56 1 132 1 283 1 285 2 140 1 188 1 146 1 23 2 292 1 98 5 293 1 99 5 345 1 27 1 28 1 250 1 304 2 73 1 307 2 356 1 310 1 110 1 312 3 160 2 161 3 317 1 40 1 267 1 116 1 
27 1 46 1 250 1 169 1 223 1 171 2 51 1 123 1 8 1 304 2 73 1 225 2 126 1 127 1 256 1 307 2 356 1 11 1 310 1 335 1 110 1 56 1 157 1 132 1 283 1 285 2 160 2 183 1 161 3 317 1 140 1 188 1 267 1 116 1 292 1 98 3 293 1 99 3 345 1 
27 1 46 1 1 1 250 1 171 1 304 2 73 1 225 2 126 1 307 2 256 1 11 1 110 1 335 1 157 1 132 1 285 2 160 2 183 1 161 3 317 1 140 1 188 1 116 1 98 2 99 2 345 1 
288 1 55 1 120 1 
288 1 2 1 
14 1 
288 1 111 1 
353 1 288 3 22 1 115 1 55 2 111 1 
353 1 288 1 111 1 
288 1 5 1 
131 3 132 1 0 1 47 1 233 2 235 4 113 1 77 1 317 1 275 7 264 1 265 1 143 3 266 1 320 1 343 1 34 2 
131 3 132 1 0 1 47 1 233 2 235 4 113 1 77 1 317 1 275 7 264 1 265 1 143 3 266 1 320 1 343 1 34 2 
131 3 66 1 132 1 0 1 47 1 233 2 235 4 113 1 77 1 317 1 275 7 264 1 265 1 143 3 266 1 320 1 343 1 34 2 
47 1 0 5 69 2 198 1 250 3 275 31 254 1 174 1 34 5 13 1 281 1 156 1 131 10 132 4 179 1 76 4 233 3 234 1 235 16 113 2 77 2 364 1 317 4 264 2 188 3 265 1 266 1 142 1 143 15 320 2 343 1 213 1 345 3 85 3 
0 1 47 1 69 2 275 14 34 3 156 1 131 4 132 3 179 1 233 2 235 8 113 2 364 1 77 2 317 3 264 1 142 1 266 1 143 6 320 1 343 2 214 1 163 1 269 1 
124 1 224 1 305 1 206 1 114 1 339 1 
165 1 349 1 87 1 199 1 88 1 253 1 205 1 151 1 52 1 124 1 224 1 305 1 279 1 258 1 282 1 361 1 180 2 260 1 238 3 237 1 17 1 262 1 242 3 319 1 114 1 212 1 291 1 194 2 62 1 65 1 
165 1 349 1 87 1 88 1 253 1 205 1 52 1 151 1 124 1 224 1 305 1 279 1 258 1 282 1 180 2 260 1 238 2 237 1 262 1 242 2 114 1 212 1 194 2 62 1 65 1 
88 1 253 1 204 1 52 2 124 2 224 1 305 1 228 1 111 1 93 1 361 1 260 2 238 1 184 1 78 1 288 1 242 1 319 1 114 1 290 1 291 1 248 1 65 2 
124 1 224 1 305 1 165 1 114 1 339 1 
43 1 
271 1 48 3 167 1 221 1 88 1 123 3 224 2 225 2 90 1 127 1 278 2 11 1 280 1 56 1 93 1 283 1 94 4 285 2 134 1 16 2 96 1 341 1 288 1 20 2 21 1 98 5 292 4 147 1 99 5 25 1 248 2 63 1 101 1 298 2 27 1 102 1 302 2 105 2 204 1 253 1 305 2 356 1 357 1 111 1 110 1 155 1 312 6 160 2 316 2 210 1 161 2 114 2 116 1 42 1 44 1 
101 1 271 1 48 1 123 2 90 1 127 1 356 1 278 1 280 1 357 1 155 1 56 1 312 2 283 1 94 2 134 1 21 1 42 1 98 3 292 2 147 1 99 3 119 1 44 1 
101 1 56 1 298 1 271 1 283 1 94 3 134 1 123 2 90 1 127 1 21 1 356 1 292 2 98 2 42 1 147 1 99 2 280 1 357 1 44 1 155 1 
101 1 298 1 271 1 48 1 105 1 123 3 90 1 127 1 356 1 278 1 280 1 357 1 155 1 56 1 312 2 283 1 94 3 134 1 21 1 42 1 98 3 292 3 147 1 99 3 119 1 44 1 
101 1 271 1 48 1 169 1 223 1 105 2 51 1 123 3 8 1 90 1 127 2 356 2 278 2 280 1 357 1 310 1 155 1 56 2 312 3 283 2 94 2 134 1 186 1 21 1 267 1 42 1 98 3 292 3 293 1 147 1 99 3 246 1 44 1 119 1 
101 1 298 2 27 1 271 1 48 2 102 1 167 1 302 2 105 2 123 3 225 2 90 1 127 1 356 1 278 2 11 1 280 1 357 1 155 1 110 1 56 1 312 4 283 1 94 4 285 2 160 1 316 2 134 1 16 2 96 1 161 1 20 2 21 1 42 1 98 4 292 4 147 1 25 1 99 4 44 1 
101 1 298 2 27 1 271 1 48 2 102 1 167 1 302 2 351 1 105 2 123 3 225 2 90 1 330 1 127 1 356 1 278 2 11 1 280 1 357 1 110 1 155 1 56 1 312 4 283 1 94 4 160 1 316 2 134 1 16 2 161 1 20 2 21 1 42 1 98 4 292 3 147 1 25 1 99 4 294 1 44 1 
101 1 298 2 27 1 271 1 48 2 102 1 167 1 302 2 351 1 105 2 123 3 225 2 90 1 330 1 127 1 356 1 278 2 11 1 280 1 357 1 110 1 155 1 56 1 312 4 283 1 94 4 160 1 316 2 134 1 16 2 161 1 20 2 21 1 42 1 98 4 292 3 147 1 25 1 99 4 294 1 44 1 
101 1 56 1 271 1 283 1 94 2 134 1 123 2 90 1 127 1 21 1 356 1 292 2 98 2 42 1 147 1 99 2 280 1 357 1 333 1 44 1 155 1 
101 1 27 1 298 3 271 1 48 2 102 1 167 1 302 2 351 1 105 3 123 3 225 2 90 1 330 1 127 1 356 1 11 1 278 3 280 1 357 1 110 1 155 1 56 1 312 5 283 1 94 5 160 1 316 2 134 1 16 2 161 1 186 1 20 2 21 1 42 1 98 4 292 3 147 1 25 1 294 1 99 4 44 1 
101 1 27 1 298 3 271 1 48 2 102 1 167 1 302 2 351 1 105 3 123 3 225 2 90 1 330 1 127 1 356 1 11 1 278 3 280 1 357 1 110 1 155 1 56 1 312 5 283 1 94 5 160 1 316 2 134 1 16 2 161 1 186 1 20 2 21 1 42 1 98 4 292 3 147 1 25 1 294 1 99 4 44 1 
101 1 298 2 27 1 271 1 48 2 102 1 167 1 302 2 105 2 123 3 90 1 127 1 356 1 278 2 11 1 280 1 357 1 155 1 110 1 56 1 312 4 283 1 95 2 94 4 285 2 160 1 316 2 134 1 96 1 161 1 79 1 189 2 21 1 42 1 98 4 292 3 147 1 99 4 44 1 
47 1 217 1 69 2 150 2 275 6 10 1 332 1 154 1 34 2 156 1 131 2 132 1 179 1 233 1 235 3 113 1 286 1 77 1 364 1 317 1 266 1 142 1 143 3 343 1 148 1 120 1 
346 1 0 1 197 1 69 4 150 1 250 2 203 1 275 14 254 1 332 2 154 1 10 11 34 1 281 1 156 2 131 2 132 1 179 2 38 1 76 3 57 1 235 8 364 2 286 4 317 2 188 2 143 6 142 2 82 1 148 11 345 1 61 1 85 3 
346 1 348 1 69 2 150 1 88 1 223 1 203 1 253 1 275 2 224 1 305 1 353 1 172 1 9 1 127 2 332 1 154 1 308 1 129 1 175 1 111 1 156 1 56 2 37 1 179 1 38 1 283 1 235 1 286 1 182 1 364 1 261 1 288 1 142 1 143 1 114 1 293 1 248 1 
165 1 47 1 0 4 223 1 88 2 275 20 224 3 127 3 332 3 10 7 175 2 129 2 229 1 56 3 131 8 132 3 179 3 283 1 233 1 235 10 182 1 286 7 141 2 188 2 190 2 143 10 142 3 288 2 343 1 293 1 148 7 345 2 248 1 346 1 348 1 68 2 69 6 150 2 250 2 203 1 253 2 305 3 353 2 74 2 154 3 308 2 34 4 111 2 156 3 36 1 313 2 38 1 113 1 77 1 364 3 317 3 266 1 114 3 323 1 
346 1 165 1 217 1 69 4 273 1 104 1 223 1 88 2 203 1 103 2 253 2 204 1 106 1 275 2 224 8 305 7 206 1 127 1 332 2 154 2 111 2 156 2 56 1 93 1 179 2 283 1 235 1 182 1 364 2 288 3 142 2 143 1 145 1 322 1 114 8 244 1 293 1 248 2 295 1 
69 2 250 1 223 1 275 3 127 1 10 1 332 1 154 1 34 1 309 1 75 1 156 1 131 1 56 1 132 1 179 1 38 1 283 1 235 1 286 1 364 1 317 1 188 1 142 1 143 2 267 1 293 1 148 1 345 1 
131 1 179 1 0 1 217 1 69 2 235 2 286 1 364 1 170 1 317 1 275 2 188 1 142 1 10 1 154 1 332 1 148 1 156 1 
131 1 132 1 179 1 217 1 69 2 286 1 364 1 275 2 142 1 143 2 10 1 154 1 332 1 34 1 148 1 345 1 156 1 45 1 
217 1 0 1 69 2 250 1 275 4 332 1 154 1 10 2 34 1 156 1 131 2 132 1 179 1 235 2 364 1 286 2 317 1 188 1 142 1 143 2 148 2 345 1 
131 1 179 1 0 1 69 2 235 2 273 1 286 1 364 1 170 1 317 1 275 2 188 1 142 1 10 1 154 1 332 1 148 1 156 1 
131 1 132 1 179 1 69 2 273 1 286 1 364 1 275 2 142 1 143 2 10 1 154 1 332 1 34 1 148 1 345 1 156 1 45 1 
0 1 69 2 250 1 273 1 275 4 332 1 154 1 10 2 34 1 156 1 131 2 132 1 179 1 235 2 364 1 286 2 317 1 188 1 142 1 143 2 148 2 345 1 
131 2 132 1 179 1 0 1 69 2 250 1 235 2 286 2 364 1 317 1 275 4 188 1 143 2 142 1 10 2 154 1 332 1 34 1 345 1 148 2 156 1 
346 1 69 2 150 1 88 1 203 1 253 1 275 2 224 1 305 1 353 1 74 1 127 1 154 1 332 1 308 1 129 1 175 1 111 1 156 1 56 1 179 1 235 1 364 1 288 1 142 1 143 1 114 1 248 1 
346 1 69 2 150 1 88 1 203 1 253 1 275 2 224 1 305 1 353 1 153 1 127 1 154 1 332 1 129 1 111 1 156 1 56 1 179 1 159 1 235 1 136 1 364 1 288 1 142 1 143 1 114 1 248 1 
0 1 69 2 250 1 275 4 332 1 154 1 10 2 34 1 156 1 131 2 132 1 179 1 38 1 235 2 364 1 286 2 317 1 188 1 142 1 143 2 148 2 345 1 
0 1 69 2 250 1 88 1 253 1 275 4 224 1 305 1 353 1 206 1 74 1 127 1 10 2 154 1 332 1 308 1 34 1 129 1 175 1 111 1 156 1 131 2 56 1 132 1 179 1 235 2 286 2 364 1 317 1 188 1 190 1 143 2 288 1 142 1 114 1 345 1 148 2 
0 1 69 2 250 1 223 1 275 3 127 1 332 1 154 1 10 1 309 1 156 1 131 1 56 1 132 1 179 1 38 1 283 1 235 2 364 1 286 1 317 1 188 1 143 1 142 1 267 1 162 1 293 1 345 1 148 1 
0 2 166 1 69 4 250 2 327 1 275 19 254 1 34 1 257 1 281 2 359 2 156 2 131 3 132 2 179 2 76 3 235 9 364 2 138 1 317 2 59 3 188 2 60 1 142 2 143 10 324 1 365 1 163 1 247 1 345 2 85 2 
0 2 166 1 69 4 250 2 327 1 275 19 254 1 34 2 257 1 281 2 359 2 156 2 131 4 132 2 179 2 76 3 235 9 364 2 138 1 317 2 59 3 188 2 60 1 142 2 143 10 324 1 365 1 163 1 247 1 345 2 85 2 
47 1 69 2 275 11 34 1 257 1 281 1 359 1 156 1 131 1 132 1 179 1 76 1 233 1 235 6 113 1 364 1 77 1 317 1 138 1 59 2 142 1 143 5 266 1 343 1 365 1 163 1 247 1 85 1 
0 3 166 2 69 4 250 3 327 1 275 19 254 1 34 3 281 1 359 1 156 2 131 6 132 3 179 2 76 2 338 1 235 9 364 2 138 1 317 3 59 2 188 3 60 1 142 2 143 10 365 1 163 1 247 1 345 3 85 1 
179 1 76 1 69 2 235 3 364 1 138 1 59 2 275 6 142 1 143 3 163 1 365 1 257 1 247 2 85 1 281 1 359 2 156 1 
259 1 67 1 216 1 173 1 220 1 209 1 121 1 362 1 301 1 227 1 
130 1 72 1 
216 1 173 1 80 1 209 1 121 1 362 1 70 1 352 1 227 1 
259 1 216 1 220 1 121 1 209 1 362 1 300 2 181 1 301 1 202 1 173 1 292 1 98 1 99 1 227 1 215 1 177 1 358 1 
259 1 216 1 220 1 121 1 209 1 362 1 300 2 181 1 301 1 202 1 173 1 292 1 98 1 99 1 227 1 215 1 177 1 358 1 
259 1 216 1 220 1 121 1 209 1 362 1 300 2 181 1 301 1 202 1 173 1 292 1 98 1 99 1 227 1 215 1 177 1 358 1 
207 1 86 1 219 1 
207 1 86 1 219 1 
347 1 122 1 
347 1 86 1 122 1 
91 1 243 1 
46 1 216 1 121 1 29 1 150 1 300 1 223 2 171 1 72 1 173 1 91 1 127 2 227 1 130 1 177 1 334 1 56 2 283 2 209 1 362 1 181 1 241 1 243 1 98 1 293 2 99 1 84 1 
207 1 219 1 
347 1 86 1 122 1 
346 1 69 2 88 1 203 1 103 2 253 1 303 1 275 2 224 2 305 2 354 1 127 2 332 1 154 1 355 1 111 1 156 1 56 2 179 1 38 1 283 2 208 1 235 1 364 1 15 1 288 1 142 1 143 1 145 1 114 2 244 1 
282 1 165 1 349 1 112 1 180 2 168 1 199 1 88 1 253 1 151 1 52 1 274 1 305 2 224 2 206 1 114 2 212 1 279 1 258 1 
282 1 165 1 349 1 180 2 199 1 88 1 253 1 151 1 52 1 274 1 305 1 224 1 114 1 212 1 279 1 258 1 360 1 
93 1 112 1 88 1 4 1 253 1 204 1 52 1 184 1 305 1 224 1 288 1 114 1 248 1 111 1 
282 1 165 1 349 1 112 1 180 2 168 1 199 1 88 1 253 1 151 1 52 1 274 1 305 1 224 1 114 1 212 1 279 1 258 1 
30 1 
158 1 160 1 292 1 164 1 161 1 123 1 120 1 
27 1 167 1 48 1 123 1 225 1 11 1 110 1 312 1 285 1 160 1 16 1 161 1 20 1 292 2 98 1 25 1 99 1 
27 2 68 1 48 1 167 2 2 2 250 1 88 1 253 2 89 1 304 2 224 1 305 1 353 1 306 1 307 2 55 1 11 2 357 1 311 1 110 2 111 1 178 1 312 2 160 3 317 1 161 2 188 1 288 4 342 1 22 1 114 1 193 1 116 1 98 2 99 2 26 1 248 1 
27 1 167 1 250 4 50 1 6 1 304 8 225 3 254 1 73 2 307 8 11 1 281 1 110 1 132 4 76 2 285 3 160 7 137 1 161 11 317 4 188 4 192 1 81 1 345 4 61 1 85 2 
27 1 167 1 169 1 351 1 223 1 51 1 8 1 73 2 127 1 356 1 11 1 310 1 110 1 56 1 132 1 283 1 160 2 113 1 77 1 317 2 161 2 140 1 267 1 343 1 98 1 293 1 214 1 99 1 
27 1 167 1 158 1 160 1 123 1 161 1 11 1 292 1 164 1 110 1 
304 1 188 1 307 1 160 2 250 1 317 1 
312 1 48 1 292 1 98 1 99 1 123 1 
27 2 167 1 48 2 49 2 88 1 253 1 204 1 224 4 305 4 256 1 11 2 176 1 111 1 110 2 93 1 312 4 160 2 58 1 210 1 161 2 288 1 341 2 114 4 116 2 98 3 99 3 268 1 248 2 63 1 
69 2 150 1 169 1 203 1 223 2 88 1 253 1 275 1 224 1 305 1 107 1 353 1 127 3 74 1 154 1 332 1 308 1 175 1 129 1 111 1 156 1 56 3 179 1 283 2 364 1 143 1 142 1 288 1 114 1 267 2 293 2 248 1 
27 1 167 1 160 1 161 1 123 1 304 1 341 1 116 1 11 1 292 1 110 1 
209 1 128 1 227 1 
209 1 128 1 227 1 
209 1 128 1 227 1 
299 1 91 1 220 1 209 1 227 1 
209 1 326 1 227 1 
209 1 326 1 227 1 
209 1 326 1 227 1 
209 1 227 1 
216 1 173 1 
131 2 132 1 179 1 47 1 76 1 69 2 233 1 235 4 113 1 77 1 364 1 317 1 275 8 266 1 142 1 143 4 192 1 343 1 34 2 163 1 281 1 85 1 156 1 
47 1 0 1 69 4 250 1 71 1 275 11 254 1 34 2 281 1 156 2 131 3 132 1 179 2 76 2 233 1 235 6 113 1 77 1 364 2 317 2 188 1 266 1 143 5 142 2 192 1 343 1 163 1 85 1 
47 1 0 1 69 6 250 2 71 1 50 1 6 1 275 19 34 3 13 1 281 1 156 3 131 4 132 3 179 3 76 1 233 1 235 9 113 1 77 1 364 3 137 1 317 3 188 2 266 1 143 10 142 3 192 1 81 1 343 1 163 1 345 2 85 1 
47 1 0 2 69 6 250 2 71 1 50 1 6 1 275 17 34 3 13 1 281 1 156 3 131 5 132 2 179 3 76 1 233 1 235 10 113 1 77 1 364 3 137 1 317 3 188 2 266 1 143 7 142 3 192 1 81 1 343 1 163 1 345 1 85 1 
131 2 132 1 179 1 47 1 76 1 69 2 233 1 235 4 113 1 77 1 364 1 317 1 275 8 266 1 142 1 143 4 192 1 343 1 34 2 163 1 281 1 85 1 156 1 
0 1 69 2 250 2 50 1 6 1 275 12 34 1 281 1 156 1 131 2 132 2 179 1 76 1 235 6 364 1 137 1 317 2 188 2 143 6 142 1 192 1 81 1 163 1 345 2 85 1 
47 1 0 2 69 8 250 2 71 1 50 1 6 1 275 18 34 3 13 2 281 1 156 4 131 5 132 2 179 4 76 1 233 1 235 10 113 1 77 1 364 4 137 1 317 3 188 2 266 1 143 8 142 4 192 1 81 1 343 1 163 1 345 1 85 1 
0 3 69 8 250 3 327 1 50 1 6 1 275 16 34 3 13 2 281 1 156 4 131 6 132 2 179 4 76 1 235 9 364 4 137 1 317 3 188 3 143 7 142 4 192 1 81 1 163 1 345 2 85 1 
131 6 132 1 47 2 0 3 235 3 113 3 77 3 317 1 275 7 143 4 266 1 343 1 34 3 
47 1 0 1 69 8 250 2 327 1 50 1 6 1 275 18 34 3 13 2 281 1 156 4 131 4 132 2 179 4 76 1 233 1 235 10 113 1 77 1 364 4 137 1 317 3 188 2 266 1 143 8 142 4 192 1 81 1 343 1 163 1 345 1 85 1 
131 3 132 1 179 2 0 1 47 1 69 4 233 1 235 4 113 1 364 2 77 1 317 1 275 8 143 4 142 2 266 1 343 1 34 2 13 1 156 2 
131 2 132 1 47 1 233 1 235 3 113 1 77 1 317 1 275 6 143 3 266 1 343 1 34 2 120 1 
131 2 132 1 179 1 0 1 69 2 250 1 235 2 71 1 364 1 317 1 275 4 188 1 143 2 142 1 34 1 345 1 156 1 
275 2 143 1 76 1 235 1 85 1 281 1 
47 1 0 4 69 2 250 2 275 25 254 1 34 4 13 1 156 1 131 8 132 5 179 1 76 2 233 1 235 13 113 2 77 2 364 1 317 5 188 2 143 12 142 1 266 1 82 1 343 2 214 1 345 2 61 1 85 2 
275 1 143 1 76 1 
275 1 235 1 85 1 
131 3 132 1 179 1 68 1 0 1 69 2 250 1 235 3 71 1 364 1 317 1 275 6 188 1 142 1 143 3 34 2 345 1 156 1 
0 1 69 2 250 2 50 1 6 1 275 12 34 1 281 1 156 1 131 2 132 2 179 1 76 1 235 6 364 1 137 1 317 2 188 2 143 6 142 1 192 1 81 1 163 1 345 2 85 1 
131 2 132 1 0 1 235 3 113 1 77 1 317 1 275 6 143 3 343 1 34 1 
131 2 179 1 0 1 47 1 69 2 235 1 113 1 77 1 364 1 275 3 276 1 143 2 142 1 266 1 34 1 13 1 156 1 
131 5 132 2 179 1 0 2 69 2 235 5 113 2 364 1 77 2 317 2 275 10 142 1 143 5 343 1 163 1 214 1 34 3 156 1 
131 1 179 1 0 1 69 2 235 2 364 1 317 1 275 2 188 1 142 1 163 1 156 1 
131 2 132 1 179 1 0 1 69 2 250 1 235 2 364 1 317 1 275 4 188 1 143 2 142 1 34 1 163 1 345 1 156 1 
131 2 179 3 0 1 69 6 235 1 113 1 327 1 364 3 77 1 275 3 276 1 143 2 142 3 163 1 34 1 13 1 156 3 
47 1 0 5 69 10 198 1 250 3 71 1 327 1 275 34 276 1 254 1 174 1 34 7 13 2 281 1 156 5 131 12 132 5 179 5 76 4 233 1 235 16 113 3 77 3 364 5 317 5 188 3 266 1 143 18 142 5 343 2 213 1 163 1 345 3 85 3 
101 1 232 1 222 1 
289 1 321 1 41 1 328 1 270 1 
93 1 224 1 305 1 288 1 114 1 88 1 253 1 204 1 248 1 111 1 120 1 
56 2 283 1 150 1 182 1 223 1 88 1 253 1 305 1 224 1 353 1 288 1 127 2 114 1 293 1 129 1 175 1 248 1 111 1 
56 2 283 2 150 1 134 1 49 1 182 1 223 1 88 1 253 1 5 1 305 1 224 1 353 2 288 3 127 2 108 1 21 1 114 1 356 1 293 2 129 1 175 1 111 2 
150 1 49 1 88 1 223 1 253 1 5 1 224 2 305 2 353 2 127 2 108 1 356 1 129 1 111 2 56 2 283 2 159 1 134 1 182 1 97 1 288 3 114 2 21 1 293 2 
2 1 169 1 49 1 223 1 88 1 253 1 51 1 123 1 5 1 8 1 224 1 305 1 353 1 127 1 108 1 356 1 55 1 357 1 310 1 111 1 56 1 312 1 283 1 239 1 240 1 288 4 114 1 267 1 98 2 292 1 293 1 99 2 
2 1 169 1 49 1 223 1 88 1 253 1 51 1 123 1 5 1 8 1 224 1 305 1 353 1 127 1 108 1 356 1 55 1 357 1 310 1 311 1 111 1 56 1 312 1 283 1 288 4 114 1 267 1 98 2 292 1 293 1 99 2 
224 1 305 1 114 1 88 1 104 1 253 1 
135 1 88 1 253 2 187 1 305 1 224 1 353 1 288 1 114 1 22 1 248 1 111 1 92 1 
47 1 223 1 88 1 275 6 224 1 127 2 332 2 10 1 175 1 129 1 56 2 131 2 132 1 179 2 283 1 233 1 235 3 286 1 182 1 141 1 190 1 142 2 288 1 143 3 343 1 293 1 148 1 69 4 150 2 253 1 303 1 305 1 353 1 206 1 74 1 154 2 308 1 34 2 111 1 156 2 38 1 113 1 364 2 77 1 317 1 266 1 114 1 
48 1 2 1 167 2 169 1 223 1 171 1 123 2 51 1 89 1 224 1 8 1 127 1 55 1 11 2 178 1 56 1 132 2 283 1 58 1 140 1 288 2 343 1 98 3 292 2 293 1 99 3 248 1 27 2 305 1 306 1 73 2 356 1 357 1 310 1 311 1 110 2 312 2 158 1 160 5 113 1 77 1 317 2 161 4 114 1 267 1 164 1 214 1 
104 1 88 1 253 2 305 2 224 2 353 1 206 1 288 2 114 2 22 1 193 1 55 1 111 1 
93 1 315 1 88 1 253 1 204 1 97 1 305 4 224 4 206 1 288 1 114 4 248 1 111 1 
36 1 350 1 135 1 88 1 253 2 305 1 224 1 353 1 288 1 114 1 24 1 111 1 92 1 
224 1 305 1 349 1 180 1 114 1 279 1 88 1 253 1 248 1 151 1 
224 2 305 2 288 1 165 1 206 1 114 2 244 1 88 1 253 1 15 1 111 1 
93 1 315 1 49 1 88 2 204 1 253 2 106 1 305 4 224 5 206 1 288 3 114 5 244 1 248 1 111 2 295 1 
93 1 315 1 49 1 88 2 204 1 253 2 305 4 224 5 206 1 340 1 288 3 114 5 244 1 248 1 111 2 295 1 
56 2 283 1 159 1 150 1 182 1 223 1 88 1 253 1 305 1 224 1 353 1 288 1 127 2 114 1 293 1 129 1 248 1 111 1 
49 1 135 1 88 1 253 2 187 1 305 1 224 1 353 1 288 1 114 1 22 1 111 1 92 1 
191 1 150 1 200 1 211 1 139 1 
201 1 200 1 169 1 223 1 171 1 123 1 51 1 8 1 127 1 356 2 280 1 357 1 310 1 56 1 283 1 284 1 39 1 134 1 211 1 139 1 191 1 21 1 267 1 98 2 292 1 293 1 99 2 249 1 
56 1 283 1 208 1 200 1 211 1 139 1 354 1 127 1 355 1 
284 1 201 1 200 1 
262 1 87 1 205 1 120 1 
262 1 242 1 319 1 361 1 87 1 238 1 205 1 
260 1 238 1 65 1 
149 1 238 1 339 1 287 1 242 1 245 1 12 1 
262 1 242 2 319 1 361 1 87 1 194 1 238 2 205 1 64 1 
339 1 
339 1 
339 1 
251 1 339 1 
238 2 339 1 205 1 125 1 242 2 245 1 194 2 109 1 100 1 296 1 
180 1 279 1 339 1 
238 2 339 1 205 1 125 1 242 2 277 1 245 1 194 2 64 1 296 1 
245 1 339 1 
149 1 361 1 87 2 238 4 287 1 205 3 262 2 125 1 242 4 319 1 245 1 194 2 12 1 296 1 
238 1 339 1 263 1 144 1 242 1 194 1 245 1 196 1 
149 1 238 1 339 1 287 1 318 1 242 1 245 1 
336 1 19 2 344 1 205 2 
339 1 
242 1 245 1 194 1 238 1 100 1 339 1 
195 1 
339 1 
149 1 242 1 245 1 238 1 339 1 
125 1 245 1 205 1 296 1 
87 1 205 1 

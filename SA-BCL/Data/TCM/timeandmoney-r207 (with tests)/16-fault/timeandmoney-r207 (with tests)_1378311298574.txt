#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) (47,301) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (47,301) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) (47,301) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (31,112,164,168) (31,112,164,168) (31,112,164,168) 272 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (137,243) 193 212 (101,268) 75 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 136 (137,243) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (137,243) 193 212 (101,268) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
14 1 188 1 198 1 
129 1 63 2 198 1 
151 2 267 1 232 2 320 2 104 1 311 2 28 2 201 2 
0 1 151 2 232 2 2 1 279 2 281 1 34 1 160 1 197 1 6 2 201 3 36 2 74 1 288 1 78 1 15 1 16 1 297 1 18 1 46 1 306 1 308 1 311 2 137 1 263 1 265 1 94 2 96 1 139 2 141 1 267 1 319 1 143 1 320 2 144 1 104 1 28 3 
151 1 232 1 132 1 45 1 311 1 201 1 267 1 142 1 320 1 28 1 
151 1 132 1 237 1 106 1 172 1 198 1 315 1 201 1 224 1 102 1 62 1 188 1 28 1 149 1 
151 1 232 1 132 1 311 1 172 1 198 1 315 1 201 1 224 2 320 1 102 1 62 1 188 1 149 2 28 1 
80 1 9 1 224 1 296 1 149 1 
80 1 224 2 145 1 4 1 188 1 198 1 296 1 149 2 
80 1 224 1 149 1 
151 1 302 1 232 1 132 1 45 1 311 1 201 1 267 1 142 1 224 1 320 1 296 1 149 1 28 1 
198 1 
80 1 224 2 145 1 312 1 188 1 198 1 296 1 149 2 
257 2 152 1 33 1 35 1 198 1 216 1 73 1 115 2 7 2 99 1 80 2 224 5 145 1 248 1 188 1 42 1 296 2 189 1 149 5 
14 1 104 1 
151 2 130 1 232 1 132 1 311 1 201 2 320 1 104 1 205 1 148 1 28 2 
169 1 88 1 44 1 
18 1 279 1 46 1 308 1 137 1 263 1 94 1 197 1 201 1 36 1 119 1 143 1 144 1 15 1 104 1 28 1 
169 1 18 1 151 1 87 1 46 1 279 1 308 1 311 1 137 1 263 1 197 1 94 1 241 1 201 2 36 1 143 1 320 1 144 1 15 1 28 2 
151 3 87 1 232 1 130 1 132 1 311 3 201 3 320 3 104 1 28 3 
151 1 142 1 132 1 320 1 311 1 28 1 201 1 
151 1 232 1 132 1 311 1 201 1 320 1 205 1 148 1 28 1 
0 1 151 3 232 2 2 1 279 1 281 1 160 1 197 1 6 1 241 1 201 4 36 1 74 1 288 1 78 1 15 1 166 1 205 1 124 1 297 1 18 1 87 1 132 1 46 1 308 1 172 1 311 3 137 1 263 1 315 1 94 1 96 1 139 2 267 1 319 1 143 1 224 1 320 3 144 1 102 1 104 1 62 1 28 4 149 1 
151 2 87 1 320 1 106 1 104 1 311 1 50 1 28 2 201 2 
151 3 87 2 232 1 132 1 211 1 311 3 172 1 198 1 315 1 241 1 201 3 224 1 320 3 102 1 62 1 205 1 124 1 149 1 28 3 
151 2 169 1 87 1 88 1 232 1 311 2 201 2 320 2 205 1 28 2 
18 1 279 1 46 1 308 1 137 1 263 1 94 1 197 1 201 1 36 1 143 1 144 1 15 1 104 1 28 1 
18 1 278 1 279 1 303 1 46 1 308 1 94 1 197 1 201 1 36 1 143 1 144 1 15 1 104 1 28 1 
0 1 230 1 2 1 281 1 32 1 34 2 284 1 6 4 74 1 288 1 290 1 81 1 169 2 44 2 88 2 305 1 309 1 264 1 96 1 139 2 221 1 319 2 
151 1 132 1 320 1 102 1 83 1 311 1 28 1 201 1 
151 2 87 1 130 1 232 1 132 1 311 2 201 2 320 2 104 1 205 1 28 2 
151 2 142 1 132 1 320 2 83 1 311 2 28 2 201 2 
233 1 57 1 
233 1 57 1 
30 1 65 1 
30 1 65 1 
30 1 65 1 
233 1 57 1 100 1 
233 1 57 1 100 1 
233 1 57 1 138 1 
29 1 30 1 233 2 57 2 280 1 65 1 
233 1 57 1 100 1 
233 1 57 1 291 1 
233 1 57 1 291 1 
233 1 57 1 291 1 
233 2 280 1 170 1 238 1 194 2 262 1 173 1 215 1 72 1 198 1 111 2 217 3 57 2 39 2 82 2 224 2 12 1 13 2 149 2 
151 2 191 1 66 1 233 1 154 1 194 1 111 1 201 2 37 1 82 1 13 1 131 1 170 1 311 2 138 1 217 1 57 1 224 1 181 1 320 2 146 1 104 1 149 1 28 2 
242 1 41 1 53 1 
242 1 206 1 53 1 
58 1 134 1 41 2 227 1 206 1 53 3 
116 1 134 1 41 1 227 1 206 1 53 2 
134 1 41 1 227 2 206 1 53 2 
66 1 151 1 232 1 234 1 35 1 198 1 201 1 115 1 290 1 7 1 80 1 248 1 204 1 42 2 125 1 296 4 257 1 302 1 132 1 45 1 310 1 309 1 311 1 313 1 140 2 267 1 142 1 220 1 224 5 320 1 145 1 186 1 105 1 188 1 28 1 149 5 
151 1 232 1 198 1 201 1 80 1 9 1 296 2 302 1 132 1 45 1 311 1 318 1 316 1 267 1 142 1 224 2 320 1 188 1 28 1 149 2 190 1 
151 1 66 1 232 1 234 1 35 1 198 1 201 1 115 1 7 1 290 1 204 1 125 1 42 2 296 2 302 1 257 1 132 1 45 1 309 1 310 1 311 1 313 1 140 1 267 1 142 1 224 3 320 1 186 1 188 1 105 1 189 1 28 1 149 3 
66 1 234 1 35 1 115 1 7 1 290 1 204 1 125 1 42 2 296 1 257 1 310 1 171 1 309 1 313 1 140 1 224 2 186 1 105 1 189 1 149 2 
14 1 308 1 317 1 
98 1 308 1 
292 1 
18 1 308 1 
18 1 143 1 308 3 92 1 317 2 251 1 
18 1 143 1 308 1 
293 1 308 1 
157 1 309 1 34 2 314 1 6 5 176 1 97 1 95 1 244 1 8 1 319 3 81 1 60 3 184 2 27 4 276 1 127 1 
157 1 309 1 34 2 314 1 176 1 97 1 95 1 6 6 244 1 8 1 319 4 81 1 60 3 184 2 27 4 127 1 276 1 
157 1 309 1 34 2 314 1 6 5 176 1 97 1 95 1 244 1 8 1 319 3 81 1 60 3 274 1 184 2 27 4 127 1 276 1 
314 1 95 1 6 1 319 1 60 1 271 1 184 1 27 1 276 2 
2 2 68 1 157 1 309 1 34 3 176 1 97 1 95 1 6 8 139 4 96 2 74 2 288 2 244 1 8 1 56 1 319 5 81 1 60 4 250 1 184 2 27 5 127 1 276 1 
31 1 269 1 272 1 112 1 168 1 
301 1 31 1 269 1 112 1 168 1 
164 1 31 1 269 1 47 1 
301 1 31 1 269 1 112 1 168 1 
31 1 269 1 272 1 112 1 168 1 
307 1 
151 1 237 1 159 1 163 2 7 1 77 1 80 6 79 1 11 4 248 1 84 2 167 1 18 1 257 1 259 2 24 2 172 1 93 1 94 2 175 1 102 1 273 1 188 1 105 1 28 1 192 2 279 2 106 1 35 2 198 2 197 1 113 1 114 2 36 2 200 1 201 1 115 1 202 1 294 2 42 2 128 1 129 2 132 1 46 1 308 1 52 1 315 1 218 1 219 1 224 5 144 2 145 3 62 1 63 2 149 5 
151 1 237 1 106 1 113 1 201 1 79 1 80 2 11 2 128 1 132 1 172 1 24 1 312 1 52 1 315 1 218 1 224 3 102 1 145 1 62 1 28 1 149 3 
151 1 192 1 237 1 106 1 198 1 113 1 201 1 80 1 79 1 11 3 128 1 132 1 172 1 312 1 52 1 315 1 218 1 224 3 102 1 145 1 62 1 188 1 28 1 149 3 
151 1 192 1 237 1 106 1 198 1 113 1 201 1 114 1 79 1 80 2 11 3 128 1 132 1 172 1 24 1 312 1 52 1 315 1 218 1 224 3 145 1 102 1 62 1 188 1 28 1 149 3 
151 2 232 1 237 1 163 1 7 1 77 1 80 5 79 1 246 1 11 3 248 1 84 1 257 1 259 1 24 3 172 1 267 1 102 1 188 1 28 2 192 1 106 1 35 1 198 1 113 1 114 3 201 2 115 1 40 1 202 1 294 1 42 1 128 1 129 1 302 1 132 2 45 1 311 1 312 1 315 1 52 1 218 1 142 1 222 1 224 4 320 1 145 2 62 1 322 1 324 1 149 4 
151 1 237 1 159 1 163 2 7 1 77 1 79 1 80 4 11 4 248 1 84 2 257 1 259 2 172 1 24 2 102 1 188 1 28 1 192 2 106 1 35 1 198 2 113 1 201 1 114 2 115 1 202 1 294 2 42 1 128 1 129 2 132 1 315 1 52 1 218 1 224 4 145 2 62 1 63 2 149 4 
151 2 232 1 237 1 163 1 7 1 77 1 79 1 80 2 11 3 248 1 84 1 257 1 259 1 172 1 24 1 267 1 102 1 188 1 28 2 192 1 106 1 35 1 198 1 113 1 201 2 114 1 115 1 40 1 202 1 294 1 42 1 128 1 129 1 302 1 132 2 45 1 311 1 315 1 52 1 218 1 142 1 222 1 224 3 320 1 145 1 62 1 322 1 149 3 
151 2 232 1 237 1 163 1 7 1 77 1 79 1 80 2 11 3 248 1 84 1 257 1 259 1 172 1 24 1 267 1 102 1 188 1 28 2 192 1 106 1 35 1 198 1 113 1 201 2 114 1 115 1 40 1 202 1 294 1 42 1 128 1 129 1 302 1 132 2 45 1 311 1 315 1 52 1 218 1 142 1 222 1 224 3 320 1 145 1 62 1 322 1 149 3 
151 2 232 1 237 1 236 1 70 1 7 1 79 1 80 2 11 3 248 1 84 1 257 1 259 1 22 1 172 1 24 1 266 1 267 1 102 1 188 1 28 2 192 1 106 1 35 1 198 1 113 1 201 2 114 1 115 1 202 1 42 1 128 1 302 1 132 2 45 1 304 1 311 1 315 1 52 1 218 1 142 1 224 3 320 1 145 1 62 1 322 1 63 1 149 3 
151 2 232 1 237 1 163 1 7 1 77 1 80 3 246 1 79 1 11 4 248 1 84 1 257 1 259 1 24 2 172 1 267 1 102 1 188 1 28 2 192 2 106 1 35 1 198 1 113 1 114 2 201 2 115 1 40 1 202 1 294 1 42 1 128 1 129 1 302 1 132 2 45 1 311 1 315 1 52 1 218 1 142 1 222 1 224 3 320 1 145 1 62 1 322 1 149 3 
151 2 232 1 237 1 163 1 7 1 77 1 80 3 246 1 79 1 11 4 248 1 84 1 257 1 259 1 24 2 172 1 267 1 102 1 188 1 28 2 192 2 106 1 35 1 198 1 113 1 114 2 201 2 115 1 40 1 202 1 294 1 42 1 128 1 129 1 302 1 132 2 45 1 311 1 315 1 52 1 218 1 142 1 222 1 224 3 320 1 145 1 62 1 322 1 149 3 
151 1 237 1 236 2 70 2 159 1 7 1 79 1 80 4 11 4 248 1 84 2 257 1 259 2 172 1 24 2 102 1 188 1 28 1 192 2 106 1 35 1 198 1 113 1 201 1 114 2 115 1 202 1 42 1 128 1 132 1 304 1 315 1 52 1 218 1 224 4 145 2 62 1 63 2 149 4 
0 1 2 1 281 1 157 1 34 2 6 5 74 1 288 1 244 1 81 1 14 1 127 1 169 1 88 1 44 1 309 1 97 1 96 1 139 2 176 1 221 1 319 3 60 2 104 1 184 1 27 2 
0 2 1 1 153 1 2 2 281 1 34 8 6 14 74 2 288 2 290 2 8 1 78 1 10 1 120 1 81 1 208 3 169 11 86 1 44 11 88 4 305 1 309 2 265 1 96 2 139 4 55 1 319 6 270 1 103 3 104 1 186 2 27 1 
0 1 151 1 279 1 2 1 281 1 34 1 197 1 241 1 6 2 36 1 201 2 117 1 288 1 74 1 119 1 78 1 15 1 18 1 87 1 88 1 46 1 308 1 261 1 311 1 213 1 137 1 263 1 94 1 265 1 139 2 96 1 319 1 143 1 144 1 270 1 320 1 104 1 28 2 
151 1 0 3 2 3 235 2 157 1 241 1 6 19 74 3 244 1 8 4 78 1 81 3 15 2 85 2 18 2 169 7 87 1 20 1 88 7 263 2 265 1 94 3 176 1 97 1 96 3 182 1 268 2 270 1 104 1 184 1 186 2 27 6 28 3 279 3 281 3 34 9 197 2 36 3 201 3 288 3 290 2 123 2 297 2 127 1 300 1 44 7 46 2 305 2 308 2 309 3 311 1 137 2 139 6 319 10 143 2 60 2 144 1 320 1 321 1 
151 1 0 2 279 7 2 2 281 2 69 1 239 1 34 1 197 2 5 1 6 2 201 1 36 8 74 2 288 2 78 1 256 1 18 2 87 1 133 1 46 2 306 2 308 3 311 1 49 1 94 8 265 1 96 2 139 4 219 1 221 1 319 1 182 1 320 1 144 2 147 1 273 1 150 1 28 1 
0 1 151 1 232 1 2 1 281 1 34 1 6 3 201 1 74 1 288 1 290 1 118 1 81 1 205 1 169 1 88 1 44 1 305 1 309 1 311 1 96 1 139 2 319 2 320 1 270 1 186 1 28 1 
169 1 0 1 88 1 44 1 2 1 281 1 32 1 309 1 34 2 6 2 139 2 96 1 288 1 74 1 290 1 8 1 221 1 27 1 
169 1 0 1 88 1 44 1 2 1 305 1 281 1 264 1 6 2 139 2 96 1 288 1 74 1 221 1 319 2 81 1 
169 2 0 1 88 2 44 2 2 1 305 1 281 1 309 1 34 2 6 4 139 2 96 1 288 1 74 1 290 1 8 1 319 2 221 1 81 1 186 1 27 1 
169 1 0 1 88 1 44 1 2 1 281 1 32 1 309 1 34 2 5 1 6 2 139 2 96 1 288 1 74 1 290 1 8 1 27 1 
169 1 0 1 88 1 44 1 2 1 305 1 281 1 5 1 264 1 6 2 139 2 96 1 288 1 74 1 319 2 81 1 
169 2 0 1 88 2 44 2 2 1 305 1 281 1 309 1 34 2 5 1 6 4 139 2 96 1 288 1 74 1 290 1 319 2 81 1 186 1 
169 2 0 1 88 2 44 2 2 1 305 1 281 1 309 1 34 2 139 2 96 1 6 4 288 1 74 1 290 1 8 1 319 2 81 1 186 1 27 1 
0 1 279 1 2 1 281 1 34 1 197 1 6 2 36 1 201 1 288 1 74 1 78 1 15 1 297 1 18 1 46 1 308 1 137 1 263 1 265 1 94 1 139 2 96 1 319 1 143 1 144 1 104 1 28 1 
0 1 278 1 279 1 2 1 281 1 107 1 34 1 197 1 6 2 36 1 201 1 288 1 74 1 78 1 15 1 18 1 46 1 303 1 308 1 265 1 94 1 139 2 96 1 319 1 143 1 144 1 104 1 28 1 
169 2 0 1 88 2 44 2 2 1 305 1 281 1 309 1 34 2 6 4 139 2 96 1 288 1 74 1 290 1 8 1 319 2 81 1 270 1 186 1 27 1 
0 1 279 1 2 1 235 1 281 1 34 2 197 1 6 4 36 1 201 1 288 1 74 1 290 1 8 1 81 1 15 1 297 1 169 2 18 1 88 2 44 2 46 1 133 1 305 1 309 1 308 1 137 1 263 1 94 1 139 2 96 1 319 2 143 1 186 1 27 1 28 1 
0 1 151 1 232 1 2 1 281 1 34 2 6 3 201 1 74 1 288 1 290 1 8 1 81 1 205 1 169 1 44 1 88 1 305 1 309 1 311 1 96 1 139 2 319 1 320 1 270 1 323 1 186 1 27 1 28 1 
2 3 68 1 195 1 157 1 196 1 282 1 34 26 285 1 287 1 6 49 74 3 288 3 290 7 244 1 38 1 8 8 10 2 81 7 247 1 127 1 253 1 208 4 255 1 86 2 210 1 305 6 135 3 309 8 91 1 51 1 176 1 97 1 96 3 139 6 55 2 56 1 319 23 60 2 103 4 184 1 186 7 27 10 275 1 
2 2 68 1 196 1 34 13 285 1 287 1 6 23 74 2 288 2 290 3 38 1 8 1 81 2 247 1 253 1 208 2 255 2 86 2 210 1 305 2 135 3 309 3 91 1 48 1 51 2 96 2 139 4 56 1 319 10 103 2 186 3 27 1 275 1 
2 3 68 1 157 1 6 55 74 3 8 8 244 1 81 8 10 2 247 1 253 1 255 2 86 3 91 1 96 3 97 1 176 1 103 5 186 7 184 1 27 10 275 1 196 1 282 1 34 28 285 1 287 1 288 3 290 7 38 1 207 1 127 1 208 5 210 1 305 7 135 4 309 8 48 1 51 1 139 6 55 2 319 27 56 1 60 2 
2 3 68 1 157 1 196 1 282 1 34 26 285 1 287 1 6 49 74 3 288 3 290 7 244 1 38 1 8 7 10 2 81 7 247 1 127 1 253 1 208 4 255 1 86 2 210 1 305 6 135 3 309 8 91 1 48 1 51 1 176 1 97 1 96 3 139 6 55 2 56 1 319 23 60 2 103 4 184 1 186 7 27 9 275 1 
2 2 68 1 157 1 196 1 34 26 285 1 287 1 6 52 74 2 288 2 290 7 244 1 38 1 8 8 10 2 81 8 247 1 127 1 253 1 208 4 255 1 86 2 210 1 305 7 135 4 309 8 91 1 48 1 51 1 176 1 97 1 96 2 139 4 55 2 56 1 319 26 60 2 103 4 184 1 186 7 27 10 275 1 
254 1 233 1 57 1 82 1 280 1 194 1 13 1 215 1 72 1 111 1 
181 1 138 1 
180 1 233 1 57 1 82 1 194 1 13 1 249 1 225 1 111 1 
233 1 280 1 170 1 194 1 262 1 173 1 215 1 72 1 198 1 111 1 217 2 57 1 39 1 224 1 82 1 12 1 13 1 149 1 
233 1 280 1 170 1 194 1 262 1 173 1 215 1 72 1 198 1 111 1 217 2 57 1 39 1 224 1 82 1 12 1 13 1 149 1 
233 1 280 1 170 1 194 1 262 1 173 1 215 1 72 1 198 1 111 1 217 2 57 1 39 1 224 1 82 1 12 1 13 1 149 1 
29 1 100 1 61 1 
29 1 100 1 61 1 
291 1 299 1 
29 1 291 1 299 1 
154 1 146 1 
191 1 66 1 151 2 233 1 154 1 67 1 194 1 111 1 201 2 37 1 39 1 82 1 13 1 296 1 131 1 311 2 173 1 138 1 217 1 57 1 224 1 181 1 320 2 146 1 104 1 28 2 149 1 
100 1 61 1 
29 1 291 1 299 1 
0 1 277 1 151 2 2 1 279 2 281 1 239 1 110 1 34 1 197 1 161 1 6 2 36 2 201 2 288 1 74 1 78 1 18 1 19 1 46 1 306 2 308 1 94 2 265 1 139 2 96 1 319 1 270 1 147 1 26 1 28 2 
46 1 279 2 133 1 155 1 258 1 158 1 286 1 197 1 94 2 53 2 36 2 242 1 58 1 182 1 59 1 223 1 165 1 41 1 206 1 
279 1 46 1 155 1 158 1 109 1 286 1 94 1 197 1 53 2 36 1 242 1 58 1 182 1 59 1 165 1 41 1 206 1 
59 1 279 1 144 1 258 1 174 1 240 1 94 1 36 1 
279 1 46 1 155 1 258 1 158 1 286 1 197 1 94 1 53 2 36 1 242 1 58 1 182 1 59 1 223 1 165 1 41 1 206 1 
226 1 
14 1 33 1 188 1 42 1 35 1 198 1 73 1 
35 1 198 2 163 1 115 1 7 1 77 1 80 1 248 1 294 1 42 1 129 1 257 1 224 1 145 1 63 1 188 1 149 1 
279 1 193 1 35 1 197 2 162 1 36 1 243 1 115 1 75 1 7 1 248 1 18 1 257 1 212 1 46 1 308 4 92 1 317 1 94 1 98 2 143 1 144 1 101 1 105 1 
196 1 285 1 35 11 287 1 115 1 7 1 290 4 81 4 10 1 247 1 248 1 42 7 208 2 129 3 86 1 257 1 305 4 310 8 309 4 313 8 55 1 103 2 186 4 63 3 275 1 
151 1 232 1 3 1 35 2 201 1 115 1 7 1 244 1 81 1 248 1 42 2 298 2 252 1 257 1 302 1 132 1 45 1 309 2 311 1 176 1 97 1 267 1 142 1 222 1 224 1 320 1 28 1 149 1 
257 1 33 1 35 1 198 1 73 1 115 1 7 1 248 1 42 1 188 1 
290 1 310 1 309 1 186 1 313 1 42 2 
80 1 224 1 145 1 188 1 198 1 149 1 
231 2 279 4 35 2 197 1 200 1 36 4 115 2 7 2 80 4 248 1 167 1 42 2 18 1 257 2 89 1 46 1 308 1 93 2 94 4 219 1 25 1 224 3 144 2 145 2 273 1 183 1 105 2 189 1 149 3 
151 2 0 1 232 2 279 1 2 1 281 1 160 1 197 1 6 1 36 1 201 3 74 1 288 1 78 1 15 1 297 1 18 1 46 1 308 1 311 2 137 1 263 1 94 1 96 1 139 2 267 1 319 1 143 1 144 1 320 2 104 1 28 3 
257 1 313 1 93 1 35 1 198 1 115 1 7 1 248 1 42 1 105 1 188 1 
156 1 194 1 111 1 
156 1 194 1 111 1 
209 1 194 1 146 1 215 1 111 1 
156 1 194 1 111 1 
194 1 108 1 111 1 
194 1 108 1 111 1 
194 1 108 1 111 1 
194 1 111 1 
233 1 57 1 
2 2 157 1 309 1 34 3 6 7 139 4 96 2 97 1 176 1 288 2 74 2 244 1 8 1 319 4 56 1 81 1 60 2 184 1 27 3 127 1 
244 1 319 3 81 1 60 2 14 1 157 1 309 1 184 1 34 2 27 2 6 5 176 1 97 1 127 1 
2 1 305 1 309 1 34 2 139 2 96 1 6 4 288 1 74 1 54 1 290 1 319 2 81 1 186 1 
86 1 305 2 309 2 34 6 6 12 290 2 55 1 8 2 319 6 10 1 81 2 103 2 186 2 27 2 208 2 
2 2 157 1 34 13 6 29 288 2 74 2 290 2 244 2 8 5 120 1 81 4 10 1 203 1 252 1 127 1 208 2 305 2 309 4 176 4 97 4 139 4 96 2 55 1 319 16 56 2 60 5 103 2 184 1 186 2 27 10 
319 1 6 1 208 1 
103 1 34 1 6 1 
2 1 305 1 309 1 34 3 96 1 139 2 6 6 74 1 288 1 54 1 290 1 8 1 319 3 81 1 186 1 27 1 85 1 
2 1 68 1 196 1 34 6 285 1 287 1 6 12 74 1 288 1 290 2 8 1 81 2 247 1 208 1 86 1 305 2 309 2 96 1 139 2 319 6 103 1 186 2 27 1 275 1 
309 1 34 3 6 6 97 1 176 1 244 1 8 1 319 3 81 1 60 1 27 2 
2 1 157 1 34 1 176 1 97 1 6 3 139 2 96 1 288 1 74 1 8 1 319 2 56 1 60 1 203 1 27 2 127 1 
2 1 68 1 309 2 34 5 96 1 139 2 97 2 176 2 6 10 74 1 288 1 8 2 244 1 319 5 81 2 60 3 27 5 252 1 
2 1 68 1 309 1 34 2 139 2 96 1 6 2 288 1 74 1 290 1 8 1 27 1 
2 1 305 1 68 1 309 1 34 2 139 2 96 1 6 4 288 1 74 1 290 1 8 1 319 2 81 1 186 1 27 1 
2 3 68 1 282 1 34 1 6 3 139 6 96 3 97 1 176 1 288 3 74 3 8 1 56 1 319 2 60 1 203 1 27 2 
2 5 68 1 157 1 282 1 34 19 6 40 74 5 288 5 290 4 244 2 8 7 81 6 10 1 121 1 203 1 295 1 127 1 208 4 43 1 86 1 305 4 309 6 176 3 97 3 96 5 139 10 54 1 55 1 56 2 319 21 60 4 103 4 184 1 186 4 27 11 
2 1 68 1 196 1 157 1 34 3 6 7 74 1 288 1 244 1 81 1 127 1 208 1 86 1 309 1 96 1 139 2 97 1 176 1 319 4 60 2 103 1 184 1 27 2 
2 2 68 1 157 1 196 1 34 5 6 10 74 2 288 2 290 1 244 1 8 1 81 1 127 1 208 2 86 1 309 2 176 1 97 1 96 2 139 4 54 1 55 1 319 5 60 2 103 1 184 1 186 1 27 3 
2 2 68 1 196 1 34 6 285 1 287 1 6 12 74 2 288 2 290 2 8 1 81 2 247 1 208 1 86 1 305 2 309 2 96 2 139 4 54 1 319 6 103 1 186 2 27 1 275 1 
2 3 68 1 157 1 196 1 34 9 285 1 287 1 6 16 74 3 288 3 290 2 244 1 8 2 81 2 247 1 127 1 208 1 86 1 305 1 309 3 176 1 97 1 96 3 139 6 54 1 56 1 319 7 60 2 103 1 184 1 186 2 27 4 275 1 
2 1 68 1 196 1 157 1 34 3 6 7 74 1 288 1 244 1 81 1 127 1 208 1 86 1 309 1 96 1 139 2 97 1 176 1 319 4 60 2 103 1 184 1 27 2 
2 1 68 1 196 1 34 6 285 1 287 1 6 12 74 1 288 1 290 2 8 1 81 2 247 1 208 1 86 1 305 2 309 2 96 1 139 2 319 6 103 1 186 2 27 1 275 1 
2 3 68 1 196 1 34 7 285 1 287 1 6 11 74 3 288 3 290 2 8 1 81 1 247 1 208 1 86 1 305 1 309 2 96 3 139 6 54 1 56 1 319 4 103 1 186 2 27 1 275 1 
2 3 68 1 196 1 282 1 34 7 285 1 287 1 6 11 74 3 288 3 290 2 8 2 81 1 247 1 208 1 86 1 305 1 309 2 96 3 139 6 56 1 319 4 103 1 186 2 27 2 275 1 
157 1 309 1 34 3 6 7 97 3 176 3 8 3 244 1 319 4 81 1 60 3 27 6 127 2 
2 3 68 1 196 1 282 1 34 7 285 1 287 1 6 11 74 3 288 3 290 2 8 1 81 1 247 1 208 1 86 1 305 1 309 2 96 3 139 6 56 1 319 4 103 1 186 2 27 1 275 1 
151 1 106 1 104 1 50 1 28 1 201 1 325 1 
151 1 289 1 245 1 106 1 104 1 23 1 283 1 50 1 17 1 28 1 201 1 325 1 
18 1 219 1 46 1 279 1 144 1 14 1 308 1 273 1 197 1 94 1 36 1 
18 1 151 1 87 1 279 1 46 1 308 1 311 1 137 1 197 1 94 1 201 2 36 1 143 1 320 1 144 1 15 1 104 1 28 2 
18 2 151 2 87 1 231 1 132 1 279 1 46 1 308 3 136 1 311 2 137 1 315 1 197 1 94 1 201 2 36 1 143 2 293 1 320 1 102 1 15 1 104 1 28 2 
18 2 151 2 87 1 231 1 132 1 278 1 279 2 46 1 308 3 136 1 311 2 315 1 197 1 94 2 177 1 201 2 36 2 143 2 293 1 320 1 102 1 15 1 104 1 28 2 
151 1 232 1 231 1 279 2 197 1 198 1 201 1 36 2 76 1 80 1 293 1 18 1 302 1 132 1 21 1 45 1 46 1 308 4 311 1 136 1 317 1 94 2 267 1 98 1 142 1 224 2 143 1 144 1 320 1 62 1 188 1 28 1 149 2 
18 1 231 1 279 1 46 1 308 4 136 1 94 1 317 1 197 1 36 1 243 1 98 1 143 1 224 1 293 1 149 1 
46 1 279 1 69 1 197 1 94 1 36 1 
256 1 18 2 133 1 279 6 46 2 306 1 69 1 308 3 71 1 214 1 92 1 49 1 94 7 197 3 36 7 182 1 143 1 144 2 147 1 126 1 150 1 
151 1 0 2 2 2 235 1 157 1 6 5 74 2 244 1 81 1 15 1 18 1 169 1 87 1 88 1 263 1 94 1 96 2 97 1 176 1 268 1 270 1 26 1 104 1 184 1 27 2 28 2 279 1 281 2 34 2 197 1 36 1 201 2 288 2 297 1 127 1 44 1 133 1 46 1 308 1 309 1 311 1 137 1 139 4 319 3 143 1 320 1 60 2 
257 1 212 1 89 1 279 1 193 1 308 2 317 1 94 1 36 1 98 1 243 1 115 1 7 1 224 1 101 1 144 1 248 1 296 1 149 1 
18 1 133 1 279 2 46 1 69 1 308 2 92 1 317 1 94 2 197 2 162 1 36 2 143 1 
18 1 279 4 133 1 46 1 308 1 197 1 94 4 177 1 36 4 219 1 144 1 273 1 229 1 
18 1 231 1 20 1 279 2 46 1 308 1 71 1 214 1 94 2 197 2 199 1 36 2 143 1 185 1 
242 1 46 1 279 1 144 1 286 1 206 1 197 1 94 1 53 1 36 1 
18 1 19 1 46 1 182 1 279 2 133 1 147 1 308 1 197 1 94 2 36 2 
256 1 18 2 231 1 279 4 133 1 46 2 308 3 49 1 94 5 197 2 36 5 219 1 144 1 147 1 273 1 229 1 
18 2 231 1 279 4 133 1 46 2 308 3 49 1 94 5 197 2 36 5 219 1 179 1 144 1 147 1 273 1 229 1 
18 1 151 1 87 1 278 1 279 1 46 1 308 1 311 1 197 1 94 1 201 2 36 1 143 1 320 1 144 1 15 1 104 1 28 2 
18 1 231 1 279 1 46 1 308 1 71 1 214 1 92 1 94 1 197 2 36 1 143 1 126 1 
104 1 90 1 187 1 228 1 64 1 
132 1 260 1 90 2 172 1 198 1 315 1 178 1 224 2 102 1 122 1 104 1 62 1 187 1 188 1 124 1 228 2 296 1 64 2 149 2 
151 1 277 1 90 1 110 1 187 1 161 1 64 1 28 1 201 1 
178 1 122 1 187 1 

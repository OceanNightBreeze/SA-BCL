#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (46,252) (46,252) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (8,77) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (8,77) 116 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (8,77) 116 235 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 12 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (69,183,339) (1,7,39) (1,7,39) (1,7,39) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (69,183,339) (1,7,39) (1,7,39) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (69,183,339) (1,7,39) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (69,183,339) (1,7,39) (1,7,39) (1,7,39) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (69,183,339) (69,183,339) (69,183,339) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (69,183,339) (69,183,339) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (69,183,339) (69,183,339) (69,183,339) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 156 269 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 164 230 (245,330) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 164 230 (158,170) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 5571 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 568 | = null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 71 1 118 1 206 1 76 1 6 1 165 2 40 1 125 1 81 1 313 2 314 4 126 1 171 2 14 1 87 1 320 3 18 5 274 2 133 6 90 9 278 1 53 2 192 2 144 1 200 9 300 2 303 1 
152 1 71 1 118 1 206 1 76 1 6 1 165 2 40 1 125 1 81 1 314 4 126 1 313 2 171 2 14 1 87 1 320 3 18 5 274 2 133 6 90 9 278 1 53 2 192 2 144 1 200 9 300 2 303 1 
152 1 71 1 118 1 206 1 76 1 6 1 165 2 40 1 125 1 81 1 314 5 126 1 313 2 171 2 14 1 87 1 320 4 18 6 274 2 133 7 90 10 278 1 53 2 192 2 144 1 200 10 300 2 303 1 
152 1 71 1 118 1 206 1 76 1 165 2 40 1 125 1 81 1 314 3 126 1 313 1 171 2 14 1 87 1 320 2 18 4 274 2 133 4 90 7 278 1 53 2 192 2 144 1 200 7 300 2 303 1 
152 1 18 3 133 3 71 1 90 4 278 1 53 1 118 1 6 1 165 1 40 1 192 1 313 2 314 2 171 1 320 1 200 4 300 1 
152 1 274 1 90 1 192 1 127 1 53 1 252 1 206 1 46 1 200 1 
152 1 18 2 274 1 133 1 90 3 278 1 53 2 118 1 125 1 192 2 314 1 320 1 200 3 
152 1 0 1 71 1 118 1 40 1 165 1 6 1 125 1 81 1 314 4 126 1 313 2 171 1 320 3 18 5 274 1 133 7 90 9 278 1 53 2 334 1 192 2 200 9 300 1 
152 1 0 1 71 1 118 1 40 1 165 1 6 1 125 1 81 1 314 4 126 1 313 2 171 1 320 3 18 5 274 1 133 7 90 9 278 1 53 2 334 1 192 2 200 9 300 1 
336 1 123 1 139 1 
89 1 336 1 238 2 
262 2 65 2 227 1 74 2 45 2 57 2 67 1 271 2 
249 1 72 2 120 1 74 2 160 1 159 2 308 1 312 2 169 1 262 3 316 1 85 1 86 1 45 3 44 1 174 1 48 1 270 2 271 2 276 1 227 1 21 1 57 2 230 1 330 1 140 1 27 1 236 1 63 1 291 1 237 1 65 2 146 2 67 1 295 1 244 1 151 1 
223 1 227 1 74 1 57 1 93 1 4 1 262 1 65 1 45 1 271 1 
326 1 57 1 93 1 136 1 100 1 139 1 336 1 62 1 262 1 264 1 130 1 45 1 220 1 323 1 
74 1 57 1 93 1 136 1 100 1 139 1 336 1 262 1 65 1 264 1 130 2 45 1 220 1 271 1 323 2 
305 1 130 1 5 1 323 1 272 1 
336 1 305 1 307 1 130 2 97 1 5 1 139 1 323 2 
305 1 130 1 323 1 
223 1 227 1 74 1 93 1 57 1 4 1 5 1 60 1 262 1 65 1 130 1 45 1 323 1 271 1 
336 1 
336 1 305 1 155 1 130 2 97 1 5 1 139 1 323 2 
305 2 20 1 250 1 328 1 207 1 97 1 184 1 161 2 79 2 5 2 139 1 336 1 130 5 112 1 113 1 147 1 149 2 323 5 302 1 
123 1 67 1 
224 1 74 1 93 1 57 2 262 2 65 1 45 2 317 1 67 1 243 1 271 1 
114 1 198 1 261 1 
276 1 21 1 120 1 230 1 159 1 330 1 82 1 262 1 291 1 316 1 45 1 146 1 86 1 67 1 174 1 270 1 
276 1 21 1 120 1 74 1 57 1 230 1 159 1 330 1 64 1 262 2 291 1 316 1 86 1 45 2 146 1 198 1 174 1 270 1 17 1 271 1 
74 3 93 1 57 3 262 3 65 1 45 3 67 1 243 1 271 3 17 1 
262 1 74 1 93 1 45 1 57 1 4 1 271 1 
224 1 74 1 57 1 93 1 262 1 65 1 45 1 317 1 271 1 
72 1 120 1 74 3 160 1 159 1 308 1 312 2 169 1 262 4 316 1 13 1 128 1 264 1 85 1 130 1 86 1 44 1 45 4 317 1 174 1 220 1 270 1 271 3 17 1 323 1 276 1 21 1 227 1 57 3 93 1 230 1 136 1 100 1 330 1 236 1 291 1 64 1 63 1 65 2 146 1 67 1 295 1 244 1 151 1 
189 1 62 1 262 2 74 1 45 2 57 2 67 1 271 1 17 1 
74 3 93 1 57 3 136 1 100 1 336 1 64 1 262 3 65 1 13 1 264 1 130 1 239 1 45 3 317 1 220 1 323 1 17 2 271 3 
74 2 57 2 262 2 65 1 45 2 114 1 317 1 198 1 17 1 271 2 
276 1 21 1 120 1 230 1 159 1 330 1 262 1 291 1 316 1 45 1 146 1 86 1 67 1 174 1 270 1 
51 1 276 1 21 1 120 1 230 1 159 1 262 1 170 1 316 1 45 1 146 1 86 1 67 1 174 1 270 1 
247 1 248 1 249 2 72 4 205 1 261 2 308 1 312 2 11 1 169 1 85 2 318 1 280 1 185 1 106 1 193 1 236 1 198 2 114 2 295 1 244 1 151 1 
141 1 262 1 74 1 93 1 45 1 57 1 220 1 271 1 
74 2 93 1 57 2 262 2 65 1 45 2 317 1 67 1 243 1 17 1 271 2 
141 1 262 2 74 2 93 1 45 2 57 2 4 1 271 2 
286 1 77 1 
286 1 77 1 
8 1 315 1 
8 1 315 1 
8 1 315 1 
286 1 77 1 
286 1 77 1 
286 1 77 1 
286 1 77 1 
286 1 77 1 
286 1 77 1 
286 1 77 1 
286 1 77 1 
286 1 116 1 77 1 322 1 
286 1 235 1 116 1 130 1 77 1 322 1 323 1 
171 1 165 1 300 1 
127 1 
127 1 
127 1 
127 1 
304 1 305 1 251 1 74 1 4 1 207 1 79 1 161 1 5 4 262 1 130 5 45 1 271 1 323 5 223 1 20 2 275 1 227 1 328 1 93 1 57 1 182 2 97 1 232 1 332 1 60 1 139 1 336 1 106 1 193 1 145 1 65 1 238 1 292 1 197 1 149 1 35 1 
304 1 305 3 255 2 74 1 4 1 207 1 79 1 161 1 5 4 262 1 130 5 45 1 173 1 323 5 271 1 272 2 223 1 20 2 225 1 227 1 328 1 93 1 57 1 97 1 232 1 332 1 60 1 139 1 336 1 106 1 193 1 145 1 65 1 238 1 292 1 197 1 149 1 35 1 
304 1 248 1 251 1 74 1 4 1 207 3 79 1 161 1 5 2 262 1 130 3 45 1 271 1 323 3 223 1 89 1 275 1 20 2 227 1 93 1 57 1 182 1 280 1 184 1 232 1 60 1 332 2 139 1 336 2 106 1 193 1 65 1 145 1 238 3 197 2 149 1 35 1 
304 1 248 2 251 1 207 5 79 1 161 1 5 3 309 1 9 1 130 4 323 4 89 2 275 1 20 4 182 2 280 2 184 1 232 1 332 4 139 1 336 3 106 2 193 2 145 2 238 6 240 1 197 4 149 1 35 2 
316 1 123 1 137 1 
316 1 34 1 
163 1 
316 1 174 1 
231 1 137 2 163 1 316 2 340 1 86 1 174 1 
316 1 86 1 174 1 
316 1 196 1 
248 1 249 5 72 9 156 1 138 2 42 1 191 1 193 1 213 1 168 1 290 1 85 4 267 1 266 2 115 1 342 1 301 3 
248 1 249 5 72 9 156 1 138 2 42 1 191 1 193 1 213 1 168 1 290 1 85 4 267 1 266 2 115 1 342 1 301 3 
248 1 249 5 72 9 156 1 138 2 42 1 191 1 193 1 213 1 168 1 290 1 85 4 294 1 267 1 266 2 115 1 342 1 301 3 
248 1 249 4 72 8 134 1 280 1 106 1 191 2 193 1 12 1 265 1 85 4 267 1 266 1 115 1 15 1 16 1 301 1 176 2 35 1 
248 1 249 6 72 11 203 1 156 1 312 4 169 2 168 1 213 1 85 5 266 2 267 1 321 1 138 3 191 1 193 1 290 1 236 2 109 1 115 1 295 2 342 1 244 2 301 4 
152 1 324 1 274 1 90 1 276 1 53 1 21 1 1 1 257 1 183 1 39 1 159 1 284 1 7 1 192 1 127 1 29 1 241 1 146 1 47 1 200 1 270 1 
324 1 133 1 274 1 90 2 276 1 37 1 53 1 21 1 1 1 179 1 257 1 183 1 39 1 159 1 284 1 192 1 127 1 29 1 146 1 268 1 47 1 200 2 270 1 
133 1 274 1 90 1 276 1 37 1 21 1 257 1 183 1 39 1 159 1 284 1 127 1 29 1 146 1 268 1 47 1 200 1 270 1 
274 2 90 1 276 1 53 1 21 1 54 1 179 1 120 1 257 2 159 1 124 1 192 1 316 1 111 1 29 2 146 1 131 1 47 2 174 1 299 1 221 1 200 1 270 1 
152 1 324 1 274 1 90 1 276 1 53 1 21 1 1 1 257 1 183 1 39 1 159 1 284 1 7 1 192 1 127 1 29 1 146 1 268 1 47 1 200 1 270 1 
33 1 
254 2 159 2 161 1 79 1 172 1 174 1 270 2 89 2 20 2 276 1 21 1 23 1 97 3 99 1 285 1 26 1 111 1 296 2 31 2 305 6 117 1 306 2 120 2 202 2 207 2 43 2 316 1 130 4 221 1 222 1 323 4 325 2 327 1 328 1 232 1 61 2 336 1 238 2 146 2 149 1 148 1 343 1 
305 2 117 1 155 1 254 1 23 1 130 2 97 1 323 2 285 1 
43 1 117 1 202 1 23 1 130 1 323 1 285 1 
305 2 117 1 325 1 202 1 155 1 23 1 254 1 97 1 285 1 43 1 130 2 323 2 
155 1 254 4 74 1 157 1 4 1 79 1 161 1 166 1 262 1 172 1 271 1 89 2 20 1 277 1 23 1 93 1 97 3 285 1 30 1 296 2 31 2 305 7 117 1 306 2 202 3 207 1 310 1 43 3 130 4 45 1 323 4 223 1 325 4 227 1 328 1 57 1 60 1 139 2 61 2 336 2 65 1 149 1 343 1 
305 4 117 1 306 2 202 2 254 2 207 1 79 1 161 1 43 2 172 1 130 3 323 3 89 2 20 1 325 2 328 1 23 1 97 2 139 1 285 1 336 2 61 2 238 2 148 1 149 1 296 2 343 1 31 2 
305 4 117 1 306 2 202 2 254 2 157 1 207 1 79 1 161 1 166 1 43 2 172 1 130 3 323 3 89 2 20 1 325 2 328 1 23 1 97 2 139 1 285 1 336 1 61 2 30 1 149 1 296 2 343 1 31 2 
305 4 117 1 306 2 202 2 254 2 157 1 207 1 79 1 161 1 166 1 43 2 172 1 130 3 323 3 89 2 20 1 325 2 328 1 23 1 97 2 139 1 285 1 336 1 61 2 30 1 149 1 296 2 343 1 31 2 
70 1 117 1 23 1 130 1 323 1 285 1 
305 5 117 1 306 2 202 3 254 3 157 1 207 1 161 1 79 1 166 1 43 3 172 1 130 3 323 3 89 2 20 1 325 3 277 1 328 1 23 1 97 2 139 1 285 1 336 1 61 2 30 1 149 1 296 2 31 2 343 1 
305 5 117 1 306 2 202 3 254 3 157 1 207 1 161 1 79 1 166 1 43 3 172 1 130 3 323 3 89 2 20 1 325 3 277 1 328 1 23 1 97 2 139 1 285 1 336 1 61 2 30 1 149 1 296 2 31 2 343 1 
305 4 117 1 202 2 254 2 207 1 79 1 161 1 43 2 130 3 323 3 20 1 325 2 328 1 228 2 23 1 97 2 139 1 285 1 336 1 105 1 238 2 148 1 149 1 296 2 343 1 31 2 298 2 
249 4 248 1 72 8 156 1 123 1 261 1 308 1 312 2 169 1 168 1 213 1 85 4 266 1 318 1 138 2 290 1 193 1 236 1 114 1 198 1 67 3 295 1 342 1 244 1 151 1 301 2 
249 8 248 1 72 14 160 1 261 11 308 1 311 1 312 4 169 2 265 1 85 6 15 3 16 1 176 3 226 1 279 1 280 1 101 1 106 2 289 1 193 2 236 2 237 1 67 1 115 1 198 11 114 4 295 2 244 2 301 1 151 2 35 2 
249 1 72 2 120 1 74 1 159 1 160 1 308 1 82 1 312 2 169 1 262 2 316 1 85 1 86 1 45 2 174 1 270 1 271 1 17 1 276 1 21 1 57 1 181 1 230 1 330 1 59 1 101 1 288 1 291 1 236 1 64 1 237 1 146 1 67 1 114 1 295 1 244 1 151 1 
249 3 248 1 72 7 74 1 259 1 160 1 159 1 261 3 169 2 262 2 85 4 86 1 174 1 270 1 17 1 271 1 276 1 21 1 91 1 94 1 280 1 101 1 106 1 193 1 291 1 198 3 114 3 295 2 301 1 35 1 120 1 308 2 312 4 316 1 45 2 44 1 57 1 230 1 58 1 138 1 330 1 333 1 64 1 236 2 146 1 244 2 151 2 
249 1 72 2 120 2 74 1 208 1 159 8 160 1 162 1 80 1 308 2 312 4 169 2 262 1 316 3 84 1 85 1 45 1 268 1 318 1 174 2 270 8 221 1 271 1 17 1 177 1 276 2 21 2 57 1 25 1 233 1 27 2 236 2 237 1 111 1 241 1 146 7 295 2 244 2 151 2 
249 1 248 1 72 3 74 1 261 1 308 1 312 2 169 1 262 1 85 2 45 1 317 1 271 1 57 1 280 1 331 1 101 1 106 1 193 1 236 1 65 1 114 1 198 1 295 1 244 1 151 1 35 1 
249 2 72 2 261 1 308 1 312 2 11 1 106 1 169 1 193 1 236 1 115 1 114 1 198 1 318 1 295 1 244 1 301 1 151 1 
248 1 72 2 205 1 280 1 261 1 308 1 312 2 169 1 236 1 85 2 114 1 198 1 318 1 295 1 244 1 151 1 
248 1 249 2 72 4 280 1 261 2 308 1 312 2 106 1 169 1 193 1 236 1 85 2 114 2 198 2 318 1 295 1 244 1 151 1 35 1 
249 2 72 2 261 1 162 1 308 1 312 2 11 1 106 1 169 1 193 1 236 1 115 1 114 1 198 1 295 1 244 1 301 1 151 1 
248 1 72 2 205 1 280 1 261 1 162 1 308 1 312 2 169 1 236 1 85 2 114 1 198 1 295 1 244 1 151 1 
249 2 248 1 72 4 162 1 261 2 308 1 312 2 169 1 85 2 280 1 106 1 193 1 236 1 198 2 114 2 115 1 295 1 244 1 151 1 301 1 35 1 
248 1 249 2 72 4 280 1 261 2 308 1 312 2 106 1 169 1 193 1 236 1 85 2 114 2 198 2 295 1 244 1 151 1 35 1 
249 1 72 2 120 1 159 1 160 1 308 1 312 2 169 1 262 1 316 1 85 1 86 1 44 1 45 1 174 1 270 1 276 1 21 1 230 1 330 1 291 1 236 1 237 1 146 1 67 1 295 1 244 1 151 1 
249 1 72 2 120 1 159 1 160 1 308 1 312 2 169 1 170 1 262 1 316 1 85 1 86 1 45 1 174 1 270 1 51 1 276 1 21 1 230 1 236 1 237 1 194 1 146 1 67 1 295 1 244 1 151 1 
248 1 249 2 72 4 280 1 261 2 101 1 308 1 312 2 106 1 169 1 193 1 236 1 85 2 114 2 198 2 295 1 244 1 151 1 35 1 
248 1 249 2 72 4 159 1 261 2 308 1 312 2 169 1 262 1 316 1 85 2 86 1 44 1 45 1 174 1 270 1 276 1 21 1 91 1 280 1 230 1 330 1 106 1 193 1 291 1 236 1 146 1 241 1 114 2 198 2 295 1 244 1 151 1 35 1 
248 1 249 2 72 3 204 1 74 1 261 1 308 1 312 2 169 1 262 1 85 1 45 1 317 1 271 1 57 1 280 1 101 1 106 1 193 1 236 1 65 1 115 1 198 1 114 1 295 1 244 1 301 1 151 1 35 1 
249 6 248 2 38 1 36 1 72 13 203 1 258 1 75 1 10 1 312 4 169 2 265 1 85 7 15 1 16 1 176 2 280 2 281 1 106 2 143 1 193 2 236 2 115 1 295 2 32 1 244 2 301 1 35 2 
248 2 249 14 36 4 72 26 203 1 258 1 2 1 75 1 312 6 169 3 85 12 265 2 216 1 15 2 176 2 50 1 22 1 280 2 98 1 281 2 138 1 104 1 106 3 143 1 142 1 193 3 236 3 109 2 115 2 295 3 32 2 244 3 301 3 35 3 
248 4 249 17 72 36 258 1 156 1 2 1 75 1 10 1 169 3 168 1 85 19 265 3 16 1 15 3 176 4 22 1 280 4 281 1 98 1 104 1 106 4 193 4 290 1 109 1 115 4 295 3 32 2 301 6 35 4 36 4 203 1 209 1 312 6 216 1 50 1 138 2 142 1 143 1 236 3 342 1 244 3 
248 4 249 21 72 40 258 1 156 1 2 1 75 1 10 1 169 4 168 1 85 19 265 3 266 1 16 1 15 3 176 4 22 1 280 3 281 1 98 1 104 1 106 4 193 5 290 1 109 2 115 3 295 4 32 2 301 5 35 4 36 4 203 1 209 1 312 8 213 1 216 1 50 1 138 2 142 1 143 1 236 4 342 1 244 4 
249 19 248 5 72 39 36 4 203 1 156 1 258 1 2 1 75 1 312 4 213 1 168 1 169 2 265 2 85 20 266 1 216 1 15 2 16 1 176 3 50 1 22 1 280 4 98 1 281 1 138 2 104 1 106 4 143 1 290 1 142 1 193 5 236 2 109 1 115 2 295 2 342 1 32 1 244 2 301 4 35 4 
249 1 72 2 159 2 160 1 308 1 212 1 312 2 169 1 262 2 316 1 84 1 85 1 45 2 174 1 270 2 276 1 21 1 180 1 57 2 96 1 282 1 101 1 233 1 27 2 236 1 237 1 146 2 295 1 244 1 151 1 246 1 
324 1 276 1 127 1 21 1 339 1 257 1 241 1 146 2 268 1 183 1 159 2 68 1 270 2 284 1 69 1 
324 1 276 1 127 1 21 1 257 1 146 1 268 1 183 1 159 1 270 1 284 1 69 1 102 1 
276 1 21 1 120 1 257 1 159 1 124 1 316 1 111 1 146 1 174 1 270 1 68 1 221 1 201 1 
324 1 276 1 127 1 21 1 339 1 257 1 146 1 268 1 183 1 159 1 68 1 270 1 284 1 69 1 
341 1 
336 1 20 1 250 1 123 1 207 1 147 1 139 1 
305 1 306 1 207 1 79 1 161 1 172 1 130 1 323 1 89 1 20 1 328 1 97 1 139 1 336 2 61 1 238 1 149 1 
305 2 248 1 253 1 120 1 207 4 159 1 79 2 161 2 167 1 316 4 130 2 86 1 174 1 49 1 270 1 323 2 89 3 20 3 276 2 21 1 328 2 280 1 97 1 58 1 136 1 137 1 232 1 332 3 336 3 188 1 106 1 337 1 193 1 108 1 238 6 195 1 197 3 340 1 146 1 149 2 245 1 35 1 34 2 
305 1 248 2 2 1 207 8 79 2 161 2 130 1 265 1 216 1 15 1 323 1 176 1 273 1 89 3 50 1 20 5 327 1 328 2 280 2 97 1 232 1 283 1 332 5 139 2 104 1 336 5 190 1 106 2 142 1 193 2 108 2 238 6 197 5 149 2 35 2 
20 1 328 1 156 1 157 1 207 1 161 1 79 1 168 1 108 1 130 1 149 1 269 1 323 1 
20 1 250 1 328 1 207 1 161 1 79 1 139 1 336 1 147 1 149 1 
89 2 20 2 248 1 280 1 207 2 332 2 336 2 106 1 193 1 238 4 197 2 35 1 
336 1 305 1 130 1 97 1 139 1 323 1 
305 4 119 1 73 1 120 2 207 2 159 4 79 2 161 2 263 2 316 1 130 3 174 1 270 4 221 1 222 1 323 3 20 2 276 1 327 2 21 1 328 1 97 2 184 1 232 2 26 1 111 1 146 4 66 1 149 2 
72 1 120 1 74 2 160 1 159 1 308 1 312 2 169 1 262 3 316 1 85 1 45 3 44 1 86 1 174 1 270 1 271 2 276 1 227 1 21 1 57 2 230 1 330 1 63 1 291 1 236 1 65 2 146 1 67 1 295 1 244 1 151 1 
89 2 20 2 327 1 328 1 207 1 161 1 79 1 232 1 332 2 139 2 336 4 238 4 266 1 197 2 149 1 
287 1 229 1 199 1 
234 1 103 1 3 1 229 1 199 1 
287 1 229 1 199 1 
287 1 229 1 199 1 
56 1 229 1 199 1 
56 1 229 1 199 1 
56 1 229 1 199 1 
229 1 199 1 
286 1 77 1 
156 1 138 1 312 4 169 2 290 1 168 1 236 2 109 1 115 1 295 2 342 1 244 2 301 2 
248 1 249 4 72 8 123 1 156 1 138 2 290 1 168 1 213 1 193 1 85 4 266 1 342 1 301 2 
248 1 249 2 52 1 72 4 280 1 312 2 106 1 169 1 193 1 236 1 85 2 115 1 295 1 244 1 301 1 35 1 
248 1 249 3 72 7 280 1 106 1 193 1 265 1 85 4 115 1 15 1 16 1 176 2 301 1 35 1 
248 3 249 11 72 21 156 2 312 2 213 1 168 2 169 1 85 10 266 1 16 1 15 2 269 1 176 2 226 1 279 1 280 2 138 3 106 2 290 1 193 3 236 1 109 1 115 3 295 1 342 1 244 1 301 6 35 2 
72 1 85 1 176 1 
249 1 72 1 15 1 
249 3 248 1 72 6 280 1 58 1 138 1 106 1 193 1 85 3 115 1 301 2 35 1 
249 6 248 2 72 13 203 1 2 1 312 4 169 2 85 7 265 1 216 1 15 1 176 1 50 1 280 2 138 1 104 1 106 2 193 2 142 1 236 2 109 1 115 1 295 2 244 2 301 2 35 2 
168 1 248 1 249 3 193 1 213 1 72 6 156 1 85 3 115 1 138 1 301 2 
72 1 156 1 138 1 187 1 312 2 168 1 290 1 169 1 236 1 109 1 85 1 115 1 295 1 342 1 244 1 301 2 
249 1 168 1 72 2 85 1 156 1 138 1 269 1 301 1 
249 2 72 2 203 1 312 2 106 1 169 1 193 1 236 1 115 1 295 1 244 1 301 1 
248 1 249 2 72 4 203 1 280 1 312 2 106 1 169 1 193 1 236 1 85 2 295 1 244 1 35 1 
249 1 72 2 203 1 156 1 138 1 312 2 169 1 168 1 236 1 85 1 295 1 244 1 301 1 
248 2 249 5 72 10 203 1 156 1 10 1 312 6 213 1 169 3 168 1 85 5 265 1 15 1 269 1 176 1 52 1 134 1 138 2 193 2 290 1 236 3 115 2 295 3 342 1 244 3 301 4 
248 1 249 5 72 10 203 1 156 1 312 2 169 1 168 1 213 1 85 5 265 1 266 1 15 1 176 1 138 2 104 1 193 1 290 1 236 1 295 1 342 1 244 1 301 2 
248 1 249 7 72 13 203 1 156 1 312 4 213 1 168 1 169 2 85 6 265 1 266 1 15 1 16 1 176 2 52 1 138 2 104 1 106 1 290 1 193 2 236 2 115 1 295 2 342 1 244 2 301 3 35 1 
249 10 248 3 72 21 203 1 156 1 2 1 312 6 213 1 168 1 169 3 85 11 265 1 266 1 216 1 15 1 176 1 50 1 52 1 280 2 138 3 104 1 106 2 290 1 193 3 142 1 236 3 109 1 115 1 295 3 342 1 244 3 301 4 35 2 
249 7 248 1 72 12 203 1 2 1 312 8 169 4 85 5 265 1 216 1 15 1 176 1 50 1 52 1 280 1 138 1 104 1 106 2 193 2 142 1 236 4 109 2 115 1 295 4 244 4 301 2 35 2 
248 1 249 5 72 10 203 1 156 1 312 2 169 1 168 1 213 1 85 5 265 1 266 1 15 1 176 1 138 2 104 1 193 1 290 1 236 1 295 1 342 1 244 1 301 2 
249 6 248 2 72 13 203 1 2 1 312 4 169 2 85 7 265 1 216 1 15 1 176 1 50 1 280 2 138 1 104 1 106 2 193 2 142 1 236 2 109 1 115 1 295 2 244 2 301 2 35 2 
249 11 248 2 72 20 203 1 156 1 2 1 312 8 213 1 168 1 169 4 85 9 265 1 266 1 216 1 15 1 176 1 50 1 52 1 280 1 138 3 104 1 106 2 290 1 142 1 193 3 236 4 109 2 115 2 295 4 342 1 244 4 301 5 35 2 
249 9 248 2 72 16 203 1 2 1 312 8 10 1 169 4 85 7 265 1 216 1 15 1 176 1 50 1 280 2 138 1 104 1 106 3 142 1 193 3 236 4 109 2 115 3 295 4 244 4 301 4 35 3 
249 2 72 4 156 2 138 2 290 2 168 2 85 2 115 2 342 1 301 4 
249 11 248 2 72 20 203 1 156 1 2 1 312 8 10 1 213 1 168 1 169 4 85 9 265 1 266 1 216 1 15 1 176 1 50 1 280 1 138 3 104 1 106 2 290 1 142 1 193 3 236 4 109 2 115 1 295 4 342 1 244 4 301 4 35 2 
189 1 62 1 107 1 262 1 45 1 57 1 67 1 
88 1 57 1 135 1 24 1 210 1 189 1 107 1 62 1 262 1 45 1 67 1 297 1 
276 1 21 1 316 1 111 1 120 1 123 1 146 1 174 1 159 1 221 1 270 1 
276 1 21 1 120 1 74 1 57 1 230 1 159 1 330 1 262 2 316 1 86 1 45 2 146 1 67 1 174 1 270 1 17 1 271 1 
276 1 21 1 74 1 57 1 230 1 159 1 164 1 330 1 262 1 316 3 263 1 196 1 86 2 45 1 146 1 174 2 270 1 17 1 271 1 
276 1 21 1 74 1 57 1 230 1 159 1 164 1 262 1 170 1 316 3 263 1 196 1 86 2 45 1 146 1 174 2 270 1 17 1 271 1 
305 1 120 1 158 1 159 3 164 1 316 4 263 1 129 1 130 2 86 1 174 1 270 3 323 2 276 1 21 1 137 1 136 1 139 1 336 1 338 1 196 1 146 3 34 1 
305 1 276 1 21 1 120 1 136 1 159 3 137 1 164 1 139 1 336 1 338 1 263 1 316 4 196 1 130 2 86 1 146 3 174 1 270 3 245 1 323 2 34 1 
276 1 21 1 146 1 159 1 270 1 177 1 
276 3 21 2 120 2 208 1 159 7 80 1 186 1 25 1 27 1 233 1 316 3 241 1 146 6 340 1 86 1 268 1 242 1 174 2 150 1 270 7 177 1 
249 4 248 1 72 8 74 1 156 1 259 1 159 1 261 1 169 2 168 1 262 2 85 4 86 1 266 1 174 1 270 1 17 1 271 1 276 1 21 1 91 1 101 1 290 1 193 1 291 1 114 1 198 1 295 2 301 2 308 2 312 4 212 1 213 1 316 1 44 1 45 2 57 1 230 1 138 2 330 1 236 2 146 1 241 1 67 3 342 1 244 2 151 2 
305 2 250 1 253 1 120 1 73 1 207 1 159 1 79 2 161 2 5 1 316 2 130 3 270 1 323 3 20 1 328 2 97 1 137 1 136 1 139 1 336 1 188 1 337 1 146 1 147 1 149 2 245 1 34 1 
276 2 21 1 137 1 159 2 167 1 316 2 241 1 146 2 340 1 86 1 174 1 270 2 177 1 
276 1 21 1 120 1 159 4 338 1 111 1 316 1 146 4 241 1 174 1 270 4 221 1 132 1 
276 2 21 1 159 2 263 1 110 1 316 1 146 2 86 1 242 1 219 1 175 1 174 1 150 1 270 2 
276 1 127 1 21 1 120 1 146 1 159 1 270 1 284 1 
276 1 21 1 180 1 159 2 233 1 316 1 241 1 146 2 268 1 174 1 270 2 
276 2 21 2 120 1 208 1 159 5 25 1 233 1 263 1 111 1 316 3 146 4 241 1 174 2 221 1 270 5 132 1 
276 2 21 2 120 1 208 1 159 5 335 1 233 1 263 1 111 1 316 3 146 4 241 1 174 2 221 1 270 5 132 1 
276 1 21 1 120 1 74 1 57 1 230 1 159 1 262 2 170 1 316 1 86 1 45 2 146 1 67 1 174 1 270 1 17 1 271 1 
276 2 21 1 159 1 186 1 263 1 316 1 146 1 340 1 86 1 242 1 174 1 150 1 270 1 
153 1 121 1 55 1 57 1 96 1 282 1 262 1 45 1 246 1 
256 1 55 1 92 1 
153 1 293 1 121 1 55 1 67 1 
153 2 121 2 55 1 256 1 93 1 92 1 329 1 136 1 100 1 5 1 139 1 336 1 13 1 264 1 293 2 130 2 67 1 220 1 323 2 
18 1 278 1 118 1 123 1 
18 1 90 1 192 1 278 1 53 1 118 1 200 1 
274 1 90 1 29 1 
18 1 152 1 90 3 53 1 278 1 118 1 260 1 41 1 192 1 83 1 87 2 200 3 
18 1 133 1 313 1 90 2 192 1 278 1 53 1 118 1 200 2 
18 1 152 1 71 1 314 1 90 1 192 1 171 1 53 1 200 1 165 1 300 1 
18 1 152 1 90 1 192 1 53 1 118 1 200 1 
152 1 90 1 192 1 278 1 53 1 118 2 200 1 
18 1 152 1 90 2 53 2 118 1 154 1 95 1 192 2 218 1 200 2 
152 1 18 2 133 2 90 3 278 1 53 1 118 1 81 1 192 1 126 1 314 1 320 1 200 3 
152 1 90 1 192 1 53 1 127 1 122 1 200 1 
152 1 18 2 133 2 90 4 278 1 53 2 118 1 6 1 192 2 313 1 314 1 320 1 200 4 
18 1 152 1 90 1 192 1 278 1 53 1 118 1 200 1 
18 3 133 2 90 4 278 2 53 1 118 2 78 1 41 1 192 1 314 1 83 1 87 1 320 1 200 4 
18 1 152 1 0 1 133 1 90 2 53 1 278 1 118 1 192 1 217 1 319 1 200 2 
18 1 152 1 90 3 53 1 278 1 118 1 41 2 192 1 83 1 214 1 87 2 200 3 
19 1 18 2 211 1 178 2 
152 1 90 1 192 1 53 1 215 1 200 1 
18 1 81 1 152 1 133 1 90 2 192 1 278 1 53 1 118 1 200 2 
28 1 
18 1 152 1 90 1 192 1 278 1 53 1 118 1 200 1 
81 1 18 1 152 1 133 1 90 3 192 1 278 1 53 1 118 1 87 1 200 3 
18 1 314 1 78 1 320 1 
18 1 118 1 

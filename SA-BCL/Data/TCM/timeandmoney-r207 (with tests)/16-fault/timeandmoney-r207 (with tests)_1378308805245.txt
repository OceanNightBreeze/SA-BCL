#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 250 (37,97) (37,97) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 250 (37,97) (37,97) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 250 (37,97) (37,97) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 250 (37,97) (37,97) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 178 62 146 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 178 62 146 104 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 178 62 146 (117,153) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 178 62 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 178 62 146 (117,153) (117,153) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 178 62 146 (117,153) (117,153) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 178 62 146 (117,153) (117,153) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 178 62 146 (117,153) (117,153) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 184 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 16 48 222 68 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 291 79 6 5 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 291 79 6 5 225 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 291 79 6 5 225 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 291 79 6 5 225 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 178 84 42 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 178 62 146 (117,153) (117,153) 94 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 178 62 146 104 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 122 247 141 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 122 247 141 252 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 178 201 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 178 201 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 178 201 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 178 201 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 237 199 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 178 201 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
249 1 97 1 204 1 250 1 51 1 187 1 189 1 238 1 227 1 37 1 306 1 
249 1 97 1 204 1 250 1 51 1 187 1 189 1 238 1 227 1 37 1 306 1 
249 1 97 1 204 1 250 1 51 1 187 1 189 1 238 1 227 1 37 1 306 1 
249 1 97 1 204 1 250 1 51 1 187 1 189 1 238 1 227 1 37 1 306 1 
67 3 2 1 51 1 114 1 116 1 134 1 36 2 38 1 306 4 267 2 249 1 204 1 100 3 189 4 41 1 11 1 292 1 105 1 
0 1 51 1 114 1 169 1 134 1 264 1 306 2 38 1 249 1 204 1 100 1 275 1 189 2 187 1 227 1 105 1 
164 1 67 1 51 2 114 1 116 1 306 3 267 1 249 2 204 1 100 2 189 3 187 1 105 1 
108 1 67 7 164 1 2 1 51 2 114 1 134 1 116 3 36 2 38 1 306 9 267 4 249 2 204 1 99 1 100 5 189 9 187 1 41 1 11 1 292 1 255 1 105 1 12 1 
108 1 67 7 164 1 2 1 51 2 114 1 134 1 116 3 36 2 38 1 306 9 267 4 249 2 204 1 99 1 100 5 189 9 187 1 41 1 11 1 292 1 255 1 105 1 12 1 
77 1 251 1 289 1 
310 2 77 1 233 1 
178 1 146 1 62 1 
178 1 146 1 62 1 104 1 
178 1 146 1 62 1 117 1 
125 1 126 1 87 1 3 1 90 1 21 1 285 1 77 1 270 1 289 1 157 1 60 1 318 1 122 1 
178 1 62 1 
15 1 87 1 73 1 21 1 103 1 
77 1 15 1 87 2 289 1 73 1 21 2 219 1 121 1 
87 1 73 1 21 1 
178 1 15 1 146 1 153 1 87 1 62 1 21 1 117 1 
77 1 
77 1 15 1 87 2 289 1 73 1 21 2 219 1 43 1 
15 2 145 2 87 5 130 1 166 2 132 1 73 2 21 5 115 1 219 1 263 1 4 1 77 1 119 1 179 1 203 1 312 2 289 1 8 1 
18 1 266 1 
18 1 266 1 
131 1 9 1 
131 1 9 1 
131 1 9 1 
200 1 18 1 266 1 
18 1 243 1 266 1 
18 2 131 1 300 1 61 1 9 1 266 2 
200 1 18 1 266 1 
200 1 18 1 266 1 
18 1 35 1 266 1 
18 1 35 1 266 1 
18 1 35 1 266 1 
162 2 128 1 87 2 18 2 49 2 217 3 21 2 283 1 148 1 266 2 305 1 246 1 77 1 26 2 27 2 30 1 7 1 101 2 61 1 
162 1 178 1 26 1 87 1 18 1 49 1 217 1 101 1 21 1 283 1 266 1 
2 1 134 1 38 1 
169 1 134 1 38 1 
2 2 169 1 137 1 38 3 294 1 245 1 
28 1 2 1 169 1 137 1 38 2 294 1 
2 1 169 1 137 1 38 2 294 2 
145 1 146 1 73 1 281 1 117 1 77 1 119 1 153 1 8 2 289 1 161 1 16 1 46 1 15 4 48 1 87 5 130 1 166 1 21 5 219 1 135 1 55 1 178 1 98 1 311 2 181 1 312 1 183 1 102 1 62 1 
15 2 146 1 87 2 73 1 21 2 242 1 117 1 77 1 178 1 153 1 58 1 289 1 62 1 103 1 259 1 
145 1 146 1 281 1 117 1 77 1 153 1 289 1 8 2 161 1 15 2 46 1 16 1 48 1 87 3 166 1 130 1 21 3 263 1 55 1 178 1 311 1 98 1 312 1 181 1 183 1 102 1 62 1 
145 1 281 1 8 2 161 1 46 1 15 1 16 1 48 1 87 2 166 1 130 1 21 2 263 1 55 1 311 1 98 1 312 1 181 1 183 1 184 1 102 1 
124 1 314 1 215 1 251 1 196 1 
295 1 314 1 
253 1 
314 1 182 1 
215 2 314 3 182 1 317 1 23 1 144 1 
314 1 182 1 317 1 
314 1 91 1 
69 1 71 2 88 1 52 3 279 4 173 1 308 1 96 7 98 1 287 1 80 3 226 1 158 1 229 2 191 1 293 1 123 1 
69 1 71 2 88 1 52 3 279 4 173 1 308 1 96 7 98 1 287 1 80 3 226 1 158 1 229 2 191 1 293 1 123 1 
69 1 71 2 88 1 52 3 279 4 173 1 308 1 96 7 98 1 287 1 80 3 226 1 208 1 158 1 229 2 191 1 293 1 123 1 
69 4 71 5 113 1 279 16 34 1 78 1 79 1 287 5 80 15 158 2 291 4 85 1 293 2 123 1 45 2 212 1 16 3 129 3 48 3 88 1 298 1 52 10 168 1 170 3 173 1 308 2 96 31 29 1 98 4 269 1 226 1 272 1 229 3 191 2 
69 1 71 3 279 5 34 2 240 1 287 1 80 4 158 1 293 1 45 4 123 1 212 1 47 1 298 2 52 4 173 1 308 1 96 9 98 1 29 2 269 2 226 1 229 2 191 1 
232 1 67 1 2 1 109 1 114 1 38 2 245 1 149 2 249 1 204 1 154 2 206 1 257 1 44 1 261 1 165 1 17 1 299 1 301 2 51 1 302 1 169 1 134 1 306 2 25 1 100 1 189 2 187 1 142 1 105 1 106 1 
67 1 2 1 109 1 38 2 149 1 245 1 249 1 154 1 210 1 257 1 44 1 165 1 17 1 299 1 301 1 51 1 302 1 169 1 134 1 306 2 175 1 25 1 189 2 187 1 142 1 194 1 107 1 106 1 
165 1 154 1 301 1 149 1 175 1 107 1 
109 2 149 1 249 1 39 1 154 1 207 1 163 1 260 1 17 1 165 2 167 1 301 1 51 1 218 1 306 1 307 1 25 1 314 1 182 1 189 1 187 2 142 2 194 1 
2 1 109 1 38 2 149 1 245 1 249 1 204 1 154 1 257 1 44 1 261 1 165 1 17 1 299 1 301 1 51 1 302 1 169 1 134 1 306 1 175 1 25 1 189 1 187 1 142 1 106 1 
13 1 
233 2 145 1 3 1 73 6 239 2 244 1 150 1 149 2 77 2 154 2 155 2 8 2 157 1 81 1 254 2 83 1 87 5 17 1 166 1 19 1 21 5 90 1 22 1 174 2 25 1 270 1 182 1 188 1 192 2 111 4 285 1 118 2 119 1 207 1 289 1 122 1 125 1 46 1 126 1 130 2 301 2 218 1 219 3 304 1 307 2 224 2 309 1 310 2 56 1 312 1 314 1 60 1 64 1 318 1 65 1 
3 1 111 2 73 2 244 1 285 1 157 1 81 1 83 1 43 1 122 1 125 1 126 1 87 3 21 3 90 1 22 1 219 1 224 1 56 1 270 1 60 1 318 1 
3 1 111 3 73 1 239 1 244 1 285 1 77 1 157 1 289 1 81 1 83 1 43 1 122 1 125 1 126 1 87 3 21 3 90 1 22 1 219 1 56 1 270 1 60 1 318 1 
3 1 111 3 73 2 239 1 244 1 285 1 118 1 77 1 157 1 289 1 81 1 83 1 43 1 122 1 125 1 126 1 87 3 21 3 90 1 22 1 219 1 224 1 56 1 270 1 60 1 318 1 
233 2 145 1 3 1 111 6 73 7 239 4 241 1 244 1 285 1 118 4 77 5 119 1 155 2 8 1 289 5 157 1 81 1 254 2 10 1 83 1 43 1 122 1 125 1 126 1 87 5 130 1 166 1 21 5 90 1 22 1 219 3 172 1 174 2 224 4 56 1 312 1 270 1 59 1 140 1 60 1 64 1 192 2 318 1 65 1 
233 2 145 1 3 1 73 4 239 2 244 1 77 2 155 2 157 1 8 1 81 1 83 1 254 2 87 4 166 1 19 1 90 1 21 4 22 1 174 2 270 1 192 2 111 4 285 1 118 2 119 1 289 1 122 1 125 1 126 1 130 1 219 2 224 2 310 2 56 1 312 1 60 1 64 1 318 1 65 1 
233 2 145 1 3 1 111 4 73 4 239 2 244 1 285 1 118 2 77 1 119 1 155 2 289 1 8 1 157 1 81 1 254 2 83 1 122 1 125 1 126 1 87 4 130 1 166 1 21 4 90 1 22 1 219 2 172 1 174 2 224 2 56 1 270 1 312 1 59 1 60 1 140 1 64 1 192 2 318 1 65 1 
233 2 145 1 3 1 111 4 73 4 239 2 244 1 285 1 118 2 77 1 119 1 155 2 289 1 8 1 157 1 81 1 254 2 83 1 122 1 125 1 126 1 87 4 130 1 166 1 21 4 90 1 22 1 219 2 172 1 174 2 224 2 56 1 270 1 312 1 59 1 60 1 140 1 64 1 192 2 318 1 65 1 
145 1 3 1 111 4 73 4 239 2 244 1 285 1 118 2 77 1 119 1 155 2 289 1 8 1 157 1 81 1 254 2 83 1 122 1 125 1 126 1 87 4 130 1 166 1 21 4 90 1 22 1 262 1 219 2 172 1 224 2 92 2 310 2 268 1 56 1 270 1 312 1 185 2 60 1 143 1 318 1 65 1 
233 2 145 1 3 1 111 5 73 5 239 3 244 1 285 1 118 3 77 1 119 1 155 2 289 1 8 1 157 1 81 1 254 2 83 1 10 1 122 1 125 1 126 1 87 4 130 1 166 1 21 4 90 1 22 1 219 2 172 1 174 2 224 3 56 1 312 1 270 1 59 1 140 1 60 1 64 1 192 2 318 1 65 1 
233 2 145 1 3 1 111 5 73 5 239 3 244 1 285 1 118 3 77 1 119 1 155 2 289 1 8 1 157 1 81 1 254 2 83 1 10 1 122 1 125 1 126 1 87 4 130 1 166 1 21 4 90 1 22 1 219 2 172 1 174 2 224 3 56 1 312 1 270 1 59 1 140 1 60 1 64 1 192 2 318 1 65 1 
145 1 3 1 73 4 239 2 244 1 77 1 155 2 157 1 8 1 81 1 83 1 254 2 87 4 166 1 19 1 90 1 21 4 22 1 92 2 270 1 185 2 111 4 285 1 118 2 119 1 289 1 122 1 125 1 126 1 130 1 219 2 224 2 310 2 56 1 312 1 60 1 143 1 318 1 65 1 
68 1 69 2 71 2 279 6 34 2 240 1 5 1 78 1 79 1 287 2 80 7 291 2 45 4 16 2 127 1 129 1 48 2 298 2 52 4 265 1 170 2 222 1 95 1 96 13 29 2 98 2 225 1 269 2 31 1 
129 1 127 2 298 1 279 2 240 1 34 1 265 1 5 2 6 1 96 5 79 2 29 1 269 1 225 1 80 3 31 1 291 2 45 2 
69 2 71 1 279 8 34 2 240 1 5 1 151 1 6 1 78 1 79 3 287 2 80 10 291 4 45 4 16 2 127 2 129 2 48 2 298 2 52 3 136 1 265 2 170 2 222 1 95 1 96 18 29 2 98 2 225 1 269 2 31 1 
69 2 71 2 279 8 34 2 240 1 5 1 151 1 6 1 78 1 79 3 287 2 80 10 291 4 45 4 16 2 127 2 129 2 48 2 298 2 52 4 136 1 265 2 170 2 222 1 95 1 96 18 29 2 98 2 225 1 269 2 31 1 
69 3 71 3 279 10 34 1 240 1 5 1 6 1 78 1 79 2 287 2 120 1 80 10 158 1 291 3 123 1 45 2 16 2 127 1 129 2 48 2 298 1 52 5 265 1 170 2 173 1 308 1 96 20 29 1 98 3 225 1 269 1 226 1 31 1 229 1 
162 1 246 1 26 1 180 1 18 1 49 1 101 1 61 1 266 1 305 1 
243 1 54 1 
162 1 26 1 297 1 271 1 18 1 49 1 101 1 276 1 266 1 
162 1 87 1 18 1 49 1 217 2 283 1 21 1 148 1 266 1 305 1 246 1 77 1 26 1 27 1 30 1 7 1 101 1 61 1 
162 1 87 1 18 1 49 1 217 2 283 1 21 1 148 1 266 1 305 1 246 1 77 1 26 1 27 1 30 1 7 1 101 1 61 1 
162 1 87 1 18 1 49 1 217 2 283 1 21 1 148 1 266 1 305 1 246 1 77 1 26 1 27 1 30 1 7 1 101 1 61 1 
200 1 300 1 53 1 
200 1 300 1 53 1 
214 1 35 1 
214 1 300 1 35 1 
220 1 93 1 
162 1 15 1 87 1 18 1 49 1 217 1 21 1 147 1 220 1 243 1 54 1 266 1 93 1 178 1 26 1 27 1 57 1 181 1 7 1 101 1 84 1 42 1 
200 1 53 1 
214 1 300 1 35 1 
66 1 235 1 112 1 279 1 237 1 34 1 76 1 149 2 248 1 80 1 206 2 154 2 157 2 45 2 125 2 14 1 17 1 298 1 301 2 24 1 25 1 96 2 29 1 314 1 269 1 313 1 182 1 273 1 186 1 63 1 318 2 
232 1 234 1 17 1 2 1 301 2 197 1 169 1 134 1 38 2 245 1 25 1 175 1 149 2 154 2 142 1 257 1 277 1 44 1 106 1 
234 1 17 1 2 1 301 1 33 1 169 1 134 1 38 2 245 1 175 1 149 1 25 1 154 1 142 1 257 1 44 1 106 1 
213 1 260 1 17 1 301 1 197 1 218 1 307 1 25 1 149 1 314 1 182 1 154 1 207 1 142 1 
234 1 17 1 2 1 301 1 197 1 169 1 134 1 38 2 245 1 175 1 149 1 25 1 154 1 142 1 257 1 277 1 44 1 106 1 
205 1 
77 1 203 1 130 1 251 1 289 1 8 1 4 1 
233 1 145 1 73 1 77 2 119 1 8 1 289 1 87 1 130 1 166 1 21 1 219 1 174 1 310 1 312 1 64 1 192 1 
295 1 46 1 145 1 17 2 130 1 166 1 301 1 307 1 25 1 149 1 119 1 314 2 312 1 182 1 154 1 317 1 319 1 160 1 144 1 
233 3 145 1 69 4 286 2 6 1 78 1 79 1 119 1 120 1 156 1 8 7 291 2 256 1 16 4 129 2 48 4 130 11 166 1 170 4 223 1 55 8 310 3 98 4 312 1 183 8 278 1 
69 1 145 1 146 1 87 1 130 2 166 1 21 1 117 1 286 2 94 1 308 1 178 1 98 1 119 1 153 1 312 1 226 1 8 1 140 1 62 1 158 1 
145 1 166 1 130 1 4 1 77 1 119 1 312 1 203 1 8 1 289 1 
55 1 16 1 98 1 48 1 183 1 8 2 
77 1 87 1 289 1 73 1 21 1 219 1 
145 2 110 1 236 1 73 4 198 1 149 2 150 2 119 1 154 2 207 1 8 2 46 2 17 1 87 3 166 2 130 2 301 2 21 3 263 1 219 2 218 1 304 1 307 2 25 1 314 1 312 2 182 1 315 2 188 1 
178 1 146 1 62 1 104 1 
46 1 145 1 166 1 130 1 150 1 77 1 119 1 312 1 183 1 8 1 289 1 
162 1 26 1 284 1 
162 1 26 1 202 1 305 1 93 1 
162 1 26 1 284 1 
162 1 26 1 284 1 
162 1 26 1 70 1 
162 1 26 1 70 1 
162 1 26 1 70 1 
162 1 26 1 
18 1 266 1 
212 1 69 1 71 2 298 2 279 4 52 3 34 2 173 1 308 1 96 8 98 1 29 2 287 1 269 2 226 1 80 4 158 1 229 1 45 4 123 1 
69 1 71 2 52 2 279 3 173 1 308 1 96 6 98 1 80 3 226 1 251 1 158 1 229 1 123 1 
16 1 69 1 48 1 71 1 216 1 298 1 52 2 279 2 34 1 170 1 96 4 29 1 98 1 269 1 287 1 80 2 45 2 
16 1 69 1 129 1 48 1 71 1 279 3 52 2 170 1 96 7 78 1 79 1 98 1 287 1 80 4 291 2 
69 3 71 5 279 11 282 1 34 2 78 1 287 4 80 12 120 1 158 2 291 2 123 1 45 4 212 2 16 2 48 2 129 2 86 1 298 2 52 9 170 2 173 1 308 2 96 23 98 3 29 2 269 2 226 1 229 1 
96 1 80 1 291 1 
96 1 129 1 279 1 
16 1 48 1 69 1 71 2 298 1 216 1 279 3 52 3 34 1 170 1 96 6 29 1 98 1 269 1 287 1 80 3 159 1 45 2 
69 2 71 1 279 6 34 1 240 1 6 1 79 1 287 1 80 6 156 1 291 1 256 1 45 2 16 2 129 1 48 2 298 1 52 2 170 2 223 1 96 12 29 1 98 2 269 1 278 1 
69 1 71 1 279 3 52 2 308 1 96 6 98 1 287 1 226 1 80 3 158 1 
212 1 86 1 71 1 298 1 279 1 52 2 34 1 173 1 308 1 96 3 29 1 287 1 269 1 80 2 158 1 123 1 45 2 
69 2 71 3 298 1 52 5 279 5 34 1 240 1 94 1 308 2 96 10 29 1 98 2 269 1 287 2 80 5 226 1 158 2 45 2 
16 1 298 1 279 2 52 1 240 1 34 1 96 2 29 1 98 1 269 1 287 1 45 2 
16 1 69 1 48 1 71 1 298 1 52 2 279 2 240 1 34 1 170 1 96 4 29 1 98 1 269 1 287 1 80 2 45 2 
212 1 86 1 71 1 298 3 52 2 279 1 240 1 34 3 95 1 308 1 96 3 29 3 269 3 287 1 80 2 158 1 45 6 
69 5 71 7 279 16 34 5 240 1 78 1 79 1 287 5 80 18 158 3 291 4 85 1 123 1 45 10 212 2 16 3 86 1 129 3 48 3 216 1 298 5 52 12 168 1 170 3 173 1 308 3 95 1 96 34 29 5 98 5 269 5 226 2 272 1 229 1 
69 1 71 2 279 4 34 1 240 1 6 1 79 1 80 4 291 1 158 1 45 2 123 1 129 1 298 1 52 2 173 1 308 1 96 8 98 1 29 1 269 1 226 1 229 1 
69 1 71 2 279 6 240 1 34 2 6 1 78 1 79 1 287 1 80 5 158 1 291 2 123 1 45 4 16 1 129 1 48 1 298 2 216 1 52 3 173 1 308 1 96 11 29 2 98 2 269 2 226 1 229 1 
69 3 71 3 279 9 34 3 240 1 6 1 79 1 287 1 80 10 156 1 158 1 291 1 256 1 123 1 45 6 212 1 16 2 129 1 48 2 216 1 298 3 52 4 170 2 173 1 223 1 308 1 96 19 29 3 98 3 269 3 226 1 229 1 278 1 
69 2 71 3 279 10 34 3 240 1 6 1 79 1 287 2 80 7 156 1 158 1 291 1 256 1 123 1 45 6 212 1 16 2 129 1 48 2 216 1 298 3 52 5 170 1 173 1 223 1 308 1 96 17 29 3 98 3 269 3 226 1 229 1 278 1 
69 1 71 2 279 4 34 1 240 1 6 1 79 1 80 4 291 1 158 1 45 2 123 1 129 1 298 1 52 2 173 1 308 1 96 8 98 1 29 1 269 1 226 1 229 1 
69 2 71 1 279 6 34 1 240 1 6 1 79 1 287 1 80 6 156 1 291 1 256 1 45 2 16 2 129 1 48 2 298 1 52 2 170 2 223 1 96 12 29 1 98 2 269 1 278 1 
69 2 71 3 279 10 34 4 240 1 6 1 79 1 287 2 80 8 156 1 158 1 291 1 256 1 123 1 45 8 212 2 16 2 129 1 48 2 216 1 298 4 52 5 170 1 173 1 223 1 308 1 96 18 29 4 98 3 269 4 226 1 229 1 278 1 
69 2 71 3 279 9 240 1 34 4 6 1 79 1 287 3 80 7 156 1 291 1 256 1 45 8 212 2 16 3 129 1 48 3 298 4 52 6 170 2 223 1 95 1 96 16 29 4 98 3 269 4 278 1 
69 1 71 3 52 6 279 3 173 1 308 3 96 7 98 1 287 3 80 4 226 1 158 3 123 2 
69 2 71 3 279 10 240 1 34 4 6 1 79 1 287 1 80 8 156 1 158 1 291 1 256 1 123 1 45 8 212 2 16 2 129 1 48 2 298 4 52 4 170 1 173 1 223 1 308 1 95 1 96 18 29 4 98 3 269 4 226 1 229 1 278 1 
247 1 141 1 122 1 
138 1 247 1 252 1 190 1 133 1 82 1 141 1 122 1 
17 1 314 1 182 1 154 1 251 1 207 1 301 1 218 1 307 1 25 1 149 1 
201 1 178 1 
201 1 178 1 
201 1 178 1 
87 1 315 1 21 1 
87 1 315 1 21 1 
17 1 154 1 301 1 280 1 25 1 149 1 
1 1 17 2 72 1 301 1 75 1 307 1 149 1 25 1 314 1 154 1 182 1 317 1 144 1 
201 1 178 1 
145 2 236 1 73 2 4 1 149 1 77 1 119 2 203 1 154 1 289 1 8 1 209 1 295 1 15 1 296 1 87 3 215 1 130 1 166 2 89 1 301 1 21 3 219 1 307 1 312 2 314 2 60 1 231 1 
232 1 215 1 17 2 301 2 280 1 149 2 25 1 314 2 154 2 182 1 317 1 160 1 144 1 
232 1 17 1 301 4 20 1 218 1 307 1 149 4 25 1 139 1 314 1 154 4 182 1 207 1 
1 1 17 2 72 1 301 1 171 1 149 1 25 1 314 1 154 1 182 1 274 1 317 1 193 1 
17 1 154 1 301 1 169 1 134 1 257 1 38 1 307 1 25 1 149 1 
232 1 17 1 301 2 112 1 237 1 149 2 175 1 25 1 314 1 154 2 182 1 
232 1 17 2 50 1 301 4 20 1 237 1 218 1 307 1 149 4 25 2 314 3 154 3 182 2 315 1 207 1 290 1 
232 1 17 2 50 1 301 4 20 1 199 1 237 1 218 1 307 1 149 4 25 2 314 3 154 3 182 2 315 1 207 1 
201 1 178 1 
315 1 
100 1 251 1 114 1 105 1 
249 1 100 1 51 1 189 1 114 1 105 1 306 1 
109 1 187 1 189 1 
195 1 51 1 114 1 264 2 306 3 249 1 204 1 100 1 32 1 316 1 189 3 105 1 
67 1 249 1 100 1 51 1 189 2 114 1 36 1 105 1 306 2 
2 1 51 1 134 1 306 1 38 1 267 1 249 1 204 1 100 1 189 1 41 1 
249 1 204 1 100 1 51 1 189 1 105 1 306 1 
249 1 204 1 51 1 189 1 114 1 105 2 306 1 
51 2 74 1 221 1 306 2 249 2 152 1 204 1 100 1 189 2 105 1 
67 2 51 1 114 1 116 1 306 3 267 1 249 1 204 1 100 2 189 3 255 1 105 1 12 1 
67 1 2 1 51 1 114 1 169 1 134 1 38 2 306 2 245 1 249 1 204 1 100 1 189 2 105 1 258 1 
67 2 51 2 114 1 116 1 36 1 306 4 267 1 249 2 204 1 100 2 189 4 11 1 105 1 
249 1 204 1 100 1 51 1 189 1 114 1 105 1 306 1 
195 1 67 2 51 1 114 2 116 1 264 1 306 4 267 1 249 1 32 1 100 3 189 4 210 1 105 2 
108 1 67 1 51 1 114 1 306 2 249 1 177 1 204 1 100 1 189 2 211 1 105 1 
195 2 51 1 114 1 264 2 306 3 249 1 204 1 32 1 100 1 288 1 189 3 105 1 
176 2 40 1 100 2 230 1 
249 1 204 1 51 1 189 1 303 1 306 1 
67 1 249 1 204 1 100 1 51 1 189 2 114 1 105 1 306 2 12 1 
228 1 
249 1 204 1 100 1 51 1 189 1 114 1 105 1 306 1 
67 1 51 1 114 1 264 1 306 3 249 1 204 1 100 1 189 3 105 1 12 1 
267 1 100 1 210 1 116 1 
100 1 105 1 

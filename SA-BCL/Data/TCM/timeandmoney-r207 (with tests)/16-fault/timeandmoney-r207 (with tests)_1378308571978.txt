#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (156,331) (156,331) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (156,331) (156,331) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (156,331) (156,331) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (156,331) (156,331) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 236 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 236 232 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 236 232 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 81 212 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 260 121 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 81 212 91 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 81 24 75 317 (79,158) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 297 253 323 (35,339) (35,339) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 297 253 323 (35,339) (35,339) 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 297 253 323 (35,339) (35,339) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 81 67 278 23 246 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 81 194 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (142,188,282) (14,154,164) (14,154,164) (14,154,164) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (142,188,282) (14,154,164) (14,154,164) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (142,188,282) (14,154,164) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (142,188,282) (14,154,164) (14,154,164) (14,154,164) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 165 160 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 337 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 81 67 130 217 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 81 212 192 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 81 212 104 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 81 212 224 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 81 24 75 317 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 81 24 75 317 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 81 212 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 81 10 53 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 81 10 53 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 81 10 53 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 81 10 53 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 81 10 53 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 81 212 224 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (142,188,282) (142,188,282) (142,188,282) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (142,188,282) (142,188,282) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (142,188,282) (142,188,282) (142,188,282) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 81 212 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 297 253 323 (35,339) (35,339) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 337 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 81 67 278 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 81 67 130 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 81 67 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 81 235 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 81 24 149 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 81 301 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 297 253 323 70 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 81 24 75 60 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 297 253 323 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 81 67 278 23 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 297 253 323 (35,339) (35,339) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 81 67 278 302 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (157,247) (157,247) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 297 253 323 (35,339) (35,339) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (157,247) 57 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (157,247) (157,247) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 6922 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 1 39 1 272 1 156 1 299 1 99 1 331 1 335 1 259 1 49 1 90 1 143 1 
313 1 39 1 335 1 49 1 259 1 272 1 90 1 156 1 143 1 299 1 331 1 99 1 
313 1 39 1 335 1 49 1 259 1 272 1 90 1 156 1 143 1 299 1 331 1 99 1 
313 1 39 1 335 1 49 1 259 1 272 1 90 1 156 1 143 1 299 1 331 1 99 1 
138 1 236 1 335 2 237 1 259 1 270 1 172 1 272 1 90 1 2 1 143 2 99 1 
2 1 43 1 44 1 299 1 99 1 163 1 335 2 259 1 49 1 90 1 72 1 143 2 179 1 220 1 145 1 201 1 
335 3 237 1 259 2 270 1 245 1 51 1 90 1 2 2 143 3 44 1 299 1 99 2 163 1 
37 1 245 2 270 3 272 1 2 3 232 1 299 1 99 2 138 1 236 1 258 1 335 7 305 1 259 2 237 5 172 1 51 1 90 1 143 7 
37 1 245 2 270 3 272 1 2 3 232 1 299 1 99 2 138 1 236 1 258 1 335 7 305 1 259 2 237 5 172 1 51 1 90 1 143 7 
337 1 125 1 197 1 
103 2 125 1 25 1 
166 2 102 2 186 1 170 2 196 2 94 2 241 1 159 2 
81 1 42 1 248 1 45 1 159 3 212 1 46 1 166 2 255 1 170 3 171 2 94 2 268 1 184 1 186 1 64 2 189 1 133 2 276 1 229 1 65 1 191 1 102 2 140 2 238 1 108 1 338 1 196 2 77 1 340 1 202 1 150 1 344 1 
204 1 167 1 166 1 102 1 186 1 170 1 286 1 196 1 94 1 159 1 
204 1 327 1 159 1 83 1 29 1 170 1 125 1 31 1 196 1 197 1 198 1 180 1 20 1 343 1 
204 2 186 1 327 1 159 2 332 1 83 1 167 1 166 2 102 2 29 2 286 1 170 2 125 1 31 1 94 2 196 2 197 1 20 2 343 1 
29 1 92 1 319 1 76 1 20 1 
153 1 29 2 125 1 298 1 319 1 76 1 197 1 20 2 
29 1 76 1 20 1 
204 1 186 1 319 1 159 1 332 1 167 1 166 1 102 1 29 1 286 1 170 1 94 1 196 1 20 1 
125 1 
266 1 29 2 125 1 298 1 319 1 76 1 197 1 20 2 
121 1 120 1 315 1 29 2 260 1 155 1 319 1 109 1 20 2 
337 1 241 1 
204 1 269 1 159 2 166 1 102 1 170 2 196 2 94 1 32 1 241 1 342 1 
187 1 96 1 79 1 
64 1 189 1 133 1 276 1 42 1 229 1 159 1 46 1 191 1 170 1 171 1 108 1 77 1 241 1 78 1 344 1 
189 1 64 1 133 1 276 1 42 1 208 1 116 1 229 1 159 2 191 1 46 1 166 1 102 1 170 2 171 1 108 1 196 1 77 1 79 1 344 1 
204 1 269 1 208 2 116 1 209 1 159 5 66 1 166 4 102 4 169 1 170 5 196 5 94 1 180 1 241 1 342 1 
204 1 167 1 166 1 102 1 170 1 196 1 159 1 
204 1 269 1 208 1 159 2 166 2 102 2 170 2 196 2 241 1 
204 1 167 1 166 1 102 1 170 1 196 1 159 1 
204 1 159 1 166 1 102 1 170 1 94 1 196 1 32 1 342 1 
204 1 81 1 42 1 208 1 116 1 248 1 45 1 159 4 212 1 46 1 83 1 166 3 215 1 255 1 170 4 171 1 91 1 94 2 20 1 184 1 186 1 189 1 64 1 133 1 276 1 229 1 327 1 65 1 191 1 102 3 140 2 29 1 238 1 108 1 31 1 77 1 196 3 340 1 342 1 343 1 202 1 344 1 
204 1 269 1 208 1 209 1 159 2 166 1 102 1 170 2 196 2 180 1 241 1 
204 1 208 2 116 1 327 1 159 3 83 1 166 3 102 3 215 1 29 1 170 3 125 1 31 1 94 1 196 3 20 1 342 1 343 1 222 1 
208 1 96 1 159 2 166 2 102 2 170 2 94 1 196 2 342 1 79 1 
64 1 189 1 133 1 42 1 276 1 229 1 159 1 46 1 191 1 170 1 171 1 108 1 77 1 241 1 344 1 
64 1 189 1 133 1 134 1 42 1 276 1 159 1 46 1 191 1 101 1 170 1 171 1 108 1 241 1 344 1 
255 1 24 1 140 2 184 1 81 1 238 1 317 1 75 1 158 1 65 1 45 1 8 1 202 1 
204 1 327 1 159 1 166 1 102 1 170 1 196 1 203 1 
285 1 118 1 
285 1 118 1 
7 1 294 1 
7 1 294 1 
7 1 294 1 
285 1 318 1 118 1 
285 1 318 1 118 1 
114 1 285 1 118 1 
285 2 325 1 127 1 7 1 118 2 294 1 
285 1 318 1 118 1 
285 1 107 1 118 1 
285 1 107 1 118 1 
285 1 107 1 118 1 
166 1 102 1 11 1 170 1 196 1 159 1 
204 1 151 1 82 1 159 1 211 1 118 1 251 1 167 1 166 1 11 1 170 1 307 1 173 1 94 1 262 1 20 1 182 1 186 1 326 1 234 1 100 1 332 1 102 1 285 1 29 1 286 1 196 1 
272 1 
72 1 220 1 179 1 
272 2 230 1 220 1 179 1 
63 1 272 1 227 1 30 1 179 1 220 1 178 1 
272 1 227 1 30 2 179 1 220 1 178 1 
36 2 155 1 298 1 3 1 6 2 213 1 9 3 254 1 88 1 13 1 125 2 175 1 20 5 315 1 24 1 60 1 25 1 95 2 319 4 283 1 103 3 193 1 29 5 240 2 195 1 75 1 109 1 76 1 197 1 110 1 34 1 243 1 
36 6 298 1 155 2 3 4 6 6 213 1 9 8 254 2 120 1 86 1 13 3 125 5 92 5 175 3 20 9 315 2 24 3 185 1 60 3 26 1 25 3 95 6 321 1 319 7 98 5 28 1 233 1 103 9 29 9 195 2 75 3 76 6 109 2 197 1 243 1 
204 1 36 2 155 1 3 1 6 2 159 1 9 3 167 1 166 1 254 1 120 1 170 1 13 1 125 3 175 1 94 1 20 3 315 1 186 1 24 1 60 1 25 2 95 2 319 2 332 1 102 1 103 4 29 3 286 1 195 1 240 1 75 1 109 1 196 1 197 1 110 1 34 1 
155 1 3 2 6 3 159 1 9 3 167 1 254 1 166 1 86 1 170 1 13 2 175 2 94 1 20 4 24 1 186 1 25 2 26 1 95 3 103 5 102 1 29 4 286 1 195 1 109 1 196 1 197 1 110 1 34 1 204 1 36 4 120 1 125 3 315 1 60 2 319 3 321 1 332 1 240 2 75 1 
337 1 54 1 276 1 
276 1 135 1 
324 1 
276 1 191 1 46 1 
276 1 33 1 
276 1 191 1 
312 1 0 1 54 2 276 3 191 1 46 1 
244 1 35 1 297 1 323 1 136 1 281 1 253 1 174 1 16 1 339 1 19 1 
244 1 35 1 297 1 323 1 136 1 281 1 253 1 174 1 16 1 339 1 19 1 
35 1 244 1 297 1 323 1 136 1 281 1 253 1 141 1 174 1 16 1 339 1 19 1 
67 1 244 2 23 1 81 1 246 1 278 1 174 1 16 1 19 1 281 1 
244 1 255 1 140 2 184 1 81 1 238 1 55 1 194 1 174 1 16 1 19 1 202 1 281 1 
40 1 154 1 42 1 299 1 164 1 122 1 259 1 171 1 90 1 14 1 311 1 179 1 220 1 183 1 272 1 64 1 133 1 279 1 230 1 99 1 284 1 335 1 142 1 108 1 143 1 
40 1 154 1 207 1 42 1 299 1 164 1 304 1 122 1 216 1 259 1 171 1 311 1 179 1 220 1 272 1 64 1 133 1 279 1 230 1 99 1 284 1 335 2 237 1 142 1 108 1 143 2 
40 1 272 1 154 1 64 1 207 1 133 1 42 1 230 1 299 1 284 1 216 1 335 1 122 1 237 1 142 1 171 1 108 1 311 1 143 1 220 1 179 1 
206 1 40 2 226 1 64 1 133 1 42 1 276 1 299 2 191 1 99 1 250 1 47 1 119 1 304 1 335 1 122 2 50 1 259 1 171 1 108 1 311 2 143 1 344 1 
40 1 154 1 207 1 42 1 299 1 164 1 122 1 259 1 171 1 90 1 14 1 311 1 179 1 220 1 272 1 64 1 133 1 279 1 230 1 99 1 284 1 335 1 142 1 108 1 143 1 
221 1 
204 1 36 1 80 1 155 1 298 1 42 1 159 1 160 1 83 1 252 1 9 1 250 1 165 1 119 1 170 1 171 2 180 1 20 3 315 1 64 2 133 2 277 1 276 1 327 1 191 1 29 3 108 1 31 1 195 1 109 1 76 2 196 1 198 1 341 1 343 1 243 1 295 1 344 2 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 266 1 298 1 277 1 327 1 159 1 160 1 83 1 165 1 29 3 170 1 31 1 76 1 196 1 198 1 20 3 341 1 180 1 343 1 
204 1 315 1 155 1 277 1 327 1 159 1 160 1 83 1 165 1 29 2 170 1 31 1 109 1 196 1 198 1 180 1 20 2 341 1 343 1 243 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 277 1 327 1 160 1 159 1 83 1 165 1 29 2 170 1 31 1 196 1 198 1 20 2 341 1 180 1 343 1 
204 1 315 1 155 1 277 1 327 1 159 1 160 1 83 1 165 1 29 2 170 1 31 1 109 1 196 1 198 1 180 1 20 2 341 1 343 1 243 1 
35 1 184 1 297 1 323 1 8 1 45 1 65 1 253 1 255 1 140 2 337 1 238 1 339 1 202 1 
67 1 130 1 255 1 140 2 184 1 81 1 217 1 238 1 73 1 65 1 45 1 202 1 
184 1 81 1 208 1 116 1 159 1 45 1 65 1 212 1 166 1 192 1 102 1 255 1 140 2 170 1 238 1 73 1 196 1 202 1 
184 1 81 1 64 1 133 1 208 1 116 1 159 1 45 1 65 1 212 1 166 1 102 1 255 1 140 2 104 1 170 1 171 1 238 1 73 1 196 1 344 1 202 1 
265 1 224 1 184 1 81 1 64 1 133 1 45 1 65 1 212 1 255 1 140 2 171 1 238 1 261 1 16 1 19 1 202 1 344 1 
1 1 24 1 184 1 81 1 60 1 159 1 45 1 65 1 166 1 102 1 255 1 140 2 13 1 170 1 238 1 73 1 75 1 175 1 16 1 196 1 94 1 19 1 342 1 202 1 
184 1 187 1 228 1 96 1 8 1 45 1 65 1 255 1 140 2 13 1 238 1 308 1 175 1 16 2 93 1 19 2 79 1 202 1 
255 1 24 1 140 2 184 1 81 1 238 1 317 1 75 1 65 1 45 1 8 1 202 1 
24 1 184 1 81 1 60 1 187 1 96 1 8 1 45 1 65 1 255 1 140 2 13 1 238 1 75 1 175 1 16 2 19 2 79 1 202 1 
265 1 184 1 187 1 228 1 96 1 45 1 65 1 255 1 140 2 13 1 238 1 308 1 175 1 16 2 93 1 19 2 79 1 202 1 
265 1 255 1 24 1 140 2 184 1 81 1 238 1 317 1 75 1 65 1 45 1 202 1 
265 1 24 1 184 1 81 1 60 1 187 1 96 1 45 1 65 1 255 1 140 2 13 1 238 1 75 1 175 1 16 2 19 2 79 1 202 1 
24 1 184 1 81 1 60 1 187 1 96 1 45 1 65 1 255 1 140 2 13 1 238 1 75 1 175 1 16 2 19 2 79 1 202 1 
184 1 81 1 64 1 189 1 133 1 276 1 42 1 248 1 229 1 65 1 45 1 159 1 212 1 46 1 191 1 255 1 140 2 170 1 171 1 238 1 108 1 77 1 202 1 344 1 
64 1 189 1 133 1 276 1 134 1 42 1 159 1 46 1 191 1 101 1 170 1 171 1 108 1 18 1 344 1 
24 1 184 1 81 1 60 1 187 1 96 1 45 1 65 1 255 1 140 2 13 1 238 1 73 1 75 1 175 1 16 2 19 2 79 1 202 1 
81 1 42 1 248 1 159 1 45 1 46 1 255 1 13 1 170 1 171 1 218 1 175 1 16 2 19 2 183 1 24 1 184 1 60 1 187 1 189 1 64 1 133 1 276 1 96 1 229 1 65 1 191 1 140 2 238 1 108 1 75 1 77 1 79 1 202 1 
81 1 45 1 159 1 166 1 255 1 170 1 13 1 175 1 94 1 16 2 19 2 24 1 184 1 60 1 187 1 96 1 65 1 102 1 140 2 238 1 73 1 75 1 196 1 199 1 342 1 79 1 202 1 
10 1 255 1 69 1 140 2 184 1 81 1 52 1 53 1 238 1 55 1 249 1 202 1 
10 1 255 1 69 1 140 2 184 1 81 1 52 1 53 1 238 1 55 1 249 1 202 1 
10 1 255 1 69 1 140 2 184 1 81 1 52 1 53 1 238 1 55 1 249 1 202 1 
10 1 255 1 69 1 140 2 184 1 81 1 52 1 53 1 238 1 55 1 249 1 202 1 
10 1 255 1 69 1 140 2 184 1 81 1 52 1 53 1 238 1 55 1 249 1 202 1 
182 1 151 1 82 1 211 1 118 1 234 1 251 1 285 1 12 1 173 1 
114 1 105 1 
113 1 182 1 151 1 285 1 89 1 82 1 177 1 211 1 118 1 
239 1 318 1 
107 1 5 1 127 1 
204 1 186 1 326 1 159 1 234 1 100 1 251 1 332 1 167 1 166 1 102 1 11 1 170 1 286 1 307 1 173 1 196 1 94 1 262 1 
204 1 186 1 326 1 159 1 234 1 100 1 251 1 332 1 167 1 166 1 102 1 11 1 170 1 286 1 307 1 173 1 196 1 94 1 262 1 
204 1 186 1 326 1 159 1 234 1 100 1 251 1 332 1 167 1 166 1 102 1 11 1 170 1 286 1 307 1 173 1 196 1 94 1 262 1 
239 1 318 1 127 1 
239 1 318 1 127 1 
107 1 5 1 
107 1 5 1 127 1 
124 1 74 1 
151 1 114 1 82 1 3 1 210 1 159 2 211 1 118 1 166 2 170 2 124 1 307 1 20 1 262 1 182 1 225 1 319 1 100 1 283 1 102 2 285 1 193 1 29 1 105 1 74 1 196 2 241 1 
224 1 115 1 184 1 81 1 316 1 159 2 45 1 65 1 212 1 255 1 140 2 334 1 170 2 238 1 73 1 261 1 16 1 196 2 19 1 264 1 202 1 
183 1 188 1 272 1 64 2 207 1 133 2 42 1 279 1 230 1 282 1 284 1 171 2 142 1 108 1 311 1 220 1 179 1 129 1 
188 1 272 1 64 1 207 1 133 1 42 1 279 1 230 1 300 1 284 1 171 1 142 1 108 1 311 1 220 1 179 1 
267 1 64 1 133 1 42 1 276 1 191 1 250 1 119 1 50 1 171 1 108 1 311 1 129 1 344 1 
188 1 272 1 64 1 207 1 133 1 42 1 279 1 230 1 282 1 284 1 171 1 142 1 108 1 311 1 220 1 179 1 129 1 
4 1 
36 1 337 1 125 1 197 1 291 1 146 1 9 1 
36 1 155 1 298 1 84 1 9 1 125 2 309 1 20 1 315 1 25 1 103 1 139 1 29 1 109 1 76 1 197 1 243 1 
155 4 6 6 9 9 85 2 256 1 13 2 171 3 176 2 175 2 20 5 183 1 22 1 24 2 271 1 190 2 25 6 95 6 276 10 191 3 103 12 29 5 106 2 108 4 195 2 31 2 109 4 197 2 291 1 33 2 295 1 36 8 298 3 42 3 46 3 48 2 125 8 54 2 310 1 126 2 312 1 315 4 60 2 132 2 64 3 133 3 135 3 329 1 235 2 336 2 76 5 75 2 146 1 243 4 344 1 
36 4 155 1 6 4 9 6 302 1 303 1 257 1 13 2 125 1 175 2 181 1 315 1 24 2 60 2 25 1 61 1 62 1 95 4 278 1 67 1 103 2 109 1 75 2 243 1 
204 1 38 1 36 2 155 1 159 1 9 2 48 1 167 1 253 1 166 1 170 1 176 2 175 2 94 1 20 1 315 1 24 1 186 1 323 1 332 1 102 1 70 1 29 1 286 1 109 1 196 1 243 1 149 1 
36 1 315 1 155 1 9 1 125 1 109 1 197 1 291 1 146 1 243 1 
36 5 24 2 60 2 25 5 95 5 6 5 235 1 9 5 48 1 103 10 13 2 125 5 176 2 175 2 75 2 
29 1 125 1 298 1 76 1 197 1 20 1 
36 2 80 1 155 2 298 2 42 1 252 1 9 2 250 1 119 1 120 1 171 4 310 2 20 3 58 1 315 2 22 1 64 4 133 4 27 1 276 1 191 1 29 3 108 1 195 2 109 2 76 4 243 1 295 2 344 2 
81 1 42 1 248 1 159 3 45 1 212 1 46 1 166 2 255 1 170 3 171 1 94 2 184 1 186 1 64 1 189 1 133 1 276 1 229 1 65 1 191 1 102 2 140 2 238 1 108 1 196 2 77 1 340 1 344 1 202 1 
36 2 315 1 25 2 95 2 155 1 6 2 9 1 281 1 103 4 125 4 195 1 109 1 197 2 243 1 295 1 
151 1 82 1 112 1 
151 1 82 1 112 1 
168 1 151 1 82 1 124 1 214 1 
151 1 82 1 112 1 
151 1 82 1 320 1 
151 1 82 1 320 1 
151 1 82 1 320 1 
151 1 82 1 
285 1 118 1 
253 1 35 1 255 2 140 4 184 2 238 2 297 1 323 1 339 1 117 1 202 2 
253 1 35 1 337 1 297 1 323 1 339 1 
24 1 184 1 81 1 60 1 333 1 255 1 140 2 13 1 238 1 175 1 75 1 16 2 19 2 202 1 
67 1 81 1 278 1 
67 1 130 1 81 1 
67 1 81 1 
61 1 16 1 19 1 
81 1 235 1 
67 1 255 1 140 2 184 1 81 1 238 1 55 1 278 1 302 1 202 1 
24 1 81 1 175 1 16 1 19 1 149 1 
81 1 301 1 
253 1 70 1 297 1 323 1 
184 1 228 1 255 1 140 2 13 1 238 1 55 1 308 1 175 1 16 2 19 2 202 1 
24 1 184 1 81 1 60 1 255 1 140 2 13 1 238 1 55 1 175 1 75 1 16 2 19 2 202 1 
253 1 255 1 140 2 184 1 238 1 297 1 55 1 323 1 202 1 
67 1 333 1 255 3 23 1 140 6 184 3 81 1 238 3 55 1 278 1 328 1 202 3 
67 1 255 1 140 2 184 1 81 1 238 1 55 1 278 1 302 1 202 1 
67 1 255 2 333 1 140 4 184 2 81 1 238 2 55 1 278 1 302 1 202 2 
67 1 255 1 140 2 184 1 81 1 238 1 55 1 278 1 302 1 202 1 
67 1 255 1 140 2 184 1 81 1 238 1 55 1 278 1 302 1 202 1 
67 1 255 1 140 2 184 1 81 1 238 1 55 1 278 1 302 1 202 1 
67 1 255 1 140 2 184 1 81 1 238 1 55 1 278 1 302 1 202 1 
67 1 333 1 255 2 140 4 184 2 81 1 238 2 55 1 278 1 302 1 202 2 
67 1 255 2 140 4 184 2 81 1 238 2 55 1 278 1 328 1 302 1 202 2 
253 1 35 1 297 1 323 1 339 1 
67 1 255 2 140 4 184 2 81 1 238 2 55 1 278 1 328 1 302 1 202 2 
170 1 196 1 209 1 241 1 159 1 180 1 148 1 
205 1 59 1 209 1 231 1 159 1 162 1 170 1 144 1 196 1 241 1 180 1 148 1 
119 1 337 1 171 1 64 1 108 1 133 1 42 1 276 1 191 1 250 1 344 1 
189 1 64 1 133 1 276 1 208 1 42 1 229 1 159 2 191 1 46 1 166 1 102 1 170 2 171 1 108 1 196 1 241 1 344 1 
204 2 42 1 208 1 159 2 46 2 83 1 166 2 170 2 171 1 310 1 269 1 64 1 189 1 133 1 276 3 229 1 327 1 191 2 102 1 336 1 108 1 196 2 241 1 33 1 
204 2 42 1 208 1 159 2 46 2 83 1 166 2 170 2 171 1 310 1 269 1 64 1 189 1 133 1 276 3 327 1 191 2 101 1 102 1 336 1 108 1 196 2 241 1 33 1 
296 1 42 1 46 1 171 3 125 1 54 1 310 1 20 2 263 1 64 3 133 3 276 4 135 1 191 1 29 2 336 1 108 1 31 1 76 1 197 1 33 1 292 1 344 1 
64 3 133 3 276 4 42 1 135 1 191 1 46 1 29 2 336 1 171 3 125 1 108 1 54 1 31 1 310 1 76 1 197 1 126 1 33 1 20 2 263 1 344 1 
131 1 171 1 64 1 108 1 133 1 42 1 
312 1 171 1 64 1 108 1 133 1 42 1 276 1 247 1 157 1 191 1 46 1 344 1 
35 1 297 1 42 1 208 1 248 1 45 2 159 2 46 1 253 1 166 1 255 2 170 2 171 1 218 1 183 1 184 2 189 1 316 1 64 1 133 1 276 1 323 1 229 1 65 2 191 1 102 1 140 4 238 2 108 1 73 1 339 1 196 1 77 1 289 1 202 2 
36 1 155 2 298 1 9 1 85 1 171 1 125 1 54 1 126 1 20 3 315 2 22 1 132 1 64 1 190 1 133 1 319 1 276 2 135 1 29 3 31 1 109 2 76 2 197 1 291 1 146 1 243 2 344 1 
312 1 183 1 131 1 64 2 133 2 276 2 42 1 46 1 191 1 256 1 171 2 54 1 108 2 
183 1 273 1 64 4 133 4 276 1 42 1 191 1 250 1 119 1 171 4 108 1 263 1 344 1 
314 1 171 1 64 1 108 1 133 1 42 1 276 1 247 1 15 1 191 1 46 1 57 1 
284 1 171 1 72 1 64 1 108 1 133 1 42 1 220 1 179 1 344 1 
183 1 64 2 133 2 207 1 276 1 42 1 191 1 137 1 171 2 108 1 223 1 
183 1 273 1 64 4 133 5 322 1 276 3 42 2 97 1 191 2 250 1 119 1 137 1 171 5 108 2 310 1 344 1 
183 1 152 1 273 1 64 4 133 5 276 3 42 2 97 1 191 2 250 1 119 1 137 1 171 5 108 2 310 1 344 1 
189 1 64 1 133 1 276 1 208 1 42 1 159 2 191 1 46 1 101 1 166 1 102 1 170 2 171 1 108 1 196 1 241 1 344 1 
312 1 171 1 64 1 108 1 133 1 42 1 276 1 310 1 247 1 157 1 191 1 46 1 
115 1 334 1 170 1 274 1 196 1 159 1 290 1 161 1 264 1 
330 1 242 1 161 1 
274 1 241 1 290 1 111 1 161 1 
204 2 159 1 161 1 83 1 167 1 166 1 215 1 170 1 125 1 94 1 20 2 186 1 274 1 319 1 327 1 330 1 332 1 102 1 29 2 286 1 31 1 196 1 197 1 290 1 111 1 242 1 147 1 343 1 
337 1 2 1 44 1 163 1 
335 1 259 1 2 1 143 1 44 1 99 1 163 1 
40 1 143 1 299 1 
41 1 2 1 44 1 99 1 163 1 335 3 259 1 287 1 90 1 143 3 201 2 21 1 
138 1 335 2 237 1 259 1 2 1 143 2 44 1 99 1 163 1 
335 1 259 1 270 1 172 1 272 1 90 1 2 1 143 1 99 1 
335 1 259 1 90 1 2 1 143 1 44 1 99 1 
335 1 259 1 90 1 143 1 44 2 99 1 163 1 
335 2 259 2 90 1 2 1 143 2 44 1 128 1 293 1 99 2 200 1 
37 1 335 3 237 2 305 1 259 1 270 1 245 1 90 1 2 2 143 3 44 1 99 1 163 1 
335 1 259 1 272 1 90 1 275 1 143 1 230 1 220 1 179 1 99 1 
138 1 335 4 237 2 259 2 270 1 245 1 90 1 2 2 143 4 44 1 280 1 99 2 163 1 
335 1 259 1 90 1 2 1 143 1 44 1 99 1 163 1 
245 1 270 1 2 3 44 2 99 1 163 2 335 4 237 2 259 1 287 1 143 4 17 1 201 1 21 1 
2 1 44 1 99 1 163 1 258 1 335 2 259 1 237 1 90 1 306 1 143 2 56 1 
2 1 44 1 99 1 163 1 335 3 123 1 259 1 287 2 90 1 143 3 201 2 21 1 
68 1 87 2 2 2 219 1 
335 1 259 1 71 1 90 1 143 1 99 1 
37 1 335 2 237 1 259 1 90 1 2 1 143 2 44 1 99 1 163 1 
288 1 
335 1 259 1 90 1 2 1 143 1 44 1 99 1 163 1 
37 1 2 1 44 1 99 1 163 1 335 3 237 1 259 1 90 1 143 3 201 1 
270 1 245 1 2 1 17 1 
2 1 44 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 137 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (71,100,268,293,333) (23,196) (23,196) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 325 (141,289,298) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 325 58 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 325 58 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 325 (141,289,298) 165 313 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 38 113 330 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 88 41 232 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 88 246 232 182 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 88 41 227 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 88 41 232 182 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 38 308 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 295 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 88 246 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 88 246 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 325 58 56 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 325 58 56 136 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 38 113 330 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 38 308 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 38 113 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 38 27 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
53 1 329 1 137 1 338 1 284 1 179 1 
53 1 329 1 137 1 338 1 284 1 179 1 
53 1 329 1 137 1 338 1 284 1 179 1 
53 1 329 1 137 1 338 1 284 1 179 1 
329 4 338 1 243 3 303 1 292 3 26 2 86 1 179 1 284 4 28 1 65 1 207 1 53 1 287 1 36 2 272 1 156 1 261 1 
60 1 118 1 53 1 329 1 240 1 338 1 86 1 293 1 284 1 179 1 23 1 196 1 
60 1 329 3 338 2 243 2 292 1 179 1 284 3 65 1 53 2 287 1 344 1 36 1 272 1 
329 9 243 5 310 1 292 7 26 2 179 1 28 1 207 1 53 2 36 4 272 1 123 1 60 1 277 1 338 2 303 1 86 1 284 9 65 3 287 1 344 1 156 1 261 1 75 1 
329 9 243 5 310 1 292 7 26 2 179 1 28 1 207 1 53 2 36 4 272 1 123 1 60 1 277 1 338 2 303 1 86 1 284 9 65 3 287 1 344 1 156 1 261 1 75 1 
197 1 276 1 76 1 
274 1 276 1 317 2 
42 2 216 2 209 1 62 2 33 2 256 2 275 2 48 1 
0 1 1 1 2 1 242 1 199 1 4 1 134 1 244 2 8 1 139 1 209 1 99 2 164 1 33 2 275 2 252 1 299 1 300 1 216 2 104 1 16 1 62 3 256 2 107 1 64 2 149 1 126 1 192 2 66 1 306 1 285 1 286 1 42 3 109 1 46 2 225 1 48 1 
42 1 216 1 209 1 62 1 33 1 256 1 234 1 150 1 275 1 245 1 
298 1 325 1 
197 1 289 2 254 1 216 1 62 1 256 1 150 1 258 1 42 1 211 2 33 1 141 1 92 1 276 1 275 1 
9 1 289 1 59 1 198 1 211 1 
197 1 289 2 198 1 245 1 209 1 211 2 33 1 234 1 276 1 275 1 13 1 59 1 61 1 216 1 62 1 256 1 150 1 42 1 110 1 
289 1 198 1 211 1 
59 1 289 1 216 1 62 1 256 1 150 1 245 1 42 1 209 1 211 1 33 1 110 1 234 1 275 1 
276 1 
197 1 289 2 59 1 198 1 211 2 201 1 276 1 13 1 
197 1 59 2 289 5 327 1 198 2 183 2 51 1 282 1 52 1 128 2 322 1 233 1 315 1 211 5 271 1 276 1 348 2 13 1 226 1 
48 1 76 1 
216 1 62 2 256 1 172 1 42 2 33 1 83 1 275 2 48 2 
323 1 3 1 248 1 
0 1 242 1 299 1 62 1 16 1 4 1 192 1 66 1 244 1 286 1 42 1 138 1 109 1 46 1 225 1 48 1 
0 1 242 1 299 1 216 1 16 1 62 2 4 1 66 1 7 1 192 1 244 1 286 1 42 2 109 1 33 1 37 1 46 1 225 1 248 1 275 1 
42 3 216 3 62 3 33 3 256 1 275 3 48 1 7 1 
42 1 216 1 62 1 33 1 150 1 275 1 245 1 
42 1 216 1 62 1 33 1 256 1 150 1 83 1 275 1 172 1 
0 1 289 1 1 1 2 1 242 1 199 1 4 1 134 1 97 1 7 1 244 1 8 1 139 1 209 1 99 2 164 1 33 3 211 1 37 1 141 1 275 3 84 1 252 1 299 1 254 1 300 1 216 3 16 1 62 4 256 2 64 1 149 1 150 1 66 1 192 1 172 1 286 1 258 1 42 4 109 1 46 1 225 1 92 1 48 1 
42 1 216 1 62 1 33 1 275 1 325 1 7 1 58 1 
289 1 254 1 216 3 62 3 256 1 150 1 97 1 7 2 172 1 258 1 42 3 81 1 211 1 33 3 37 1 141 1 92 1 276 1 275 3 
42 2 323 1 216 2 62 2 33 2 256 1 248 1 275 2 7 1 172 1 
0 1 242 1 299 1 62 1 16 1 4 1 192 1 66 1 244 1 286 1 42 1 109 1 46 1 225 1 48 1 
340 1 150 1 192 1 244 1 98 1 46 1 225 1 48 1 
158 1 1 1 2 1 3 2 312 1 139 1 99 2 164 1 270 1 248 2 249 1 250 1 335 1 336 1 39 1 252 2 300 1 301 1 302 1 107 2 64 4 149 1 130 1 323 2 
42 1 216 1 62 1 33 1 11 1 92 1 150 1 275 1 
216 4 62 4 256 1 7 2 172 1 42 4 54 1 33 4 37 1 241 1 275 4 325 1 48 1 58 1 
42 2 216 2 62 2 33 2 11 1 150 1 275 2 245 1 
20 1 294 1 
20 1 294 1 
238 1 114 1 
238 1 114 1 
238 1 114 1 
20 1 173 1 294 1 
238 1 20 2 80 1 114 1 47 1 294 2 
20 1 319 1 294 1 
20 1 173 1 294 1 
20 1 173 1 294 1 
20 1 70 1 294 1 
20 1 70 1 294 1 
20 1 70 1 294 1 
144 2 289 2 228 3 320 2 170 2 180 1 304 1 96 1 294 2 265 1 20 2 220 2 221 1 80 1 43 2 211 2 194 1 276 1 251 1 
289 1 228 1 294 1 208 1 33 2 211 1 275 2 213 1 144 1 103 1 216 2 339 1 319 1 62 2 185 1 170 1 304 1 67 1 20 1 42 2 220 1 43 1 44 1 48 1 
86 1 28 1 261 1 
118 1 86 1 261 1 
118 1 63 1 86 3 186 1 28 2 297 1 
118 1 279 1 63 1 86 2 28 1 297 1 
118 1 63 1 86 2 28 1 297 2 
51 3 5 2 267 1 140 1 271 1 274 1 234 1 276 2 275 1 13 1 317 3 59 4 183 1 62 1 185 1 282 2 283 2 150 1 154 1 110 1 197 1 289 5 198 1 290 1 245 1 209 1 211 5 33 1 250 1 336 1 39 1 216 1 256 1 341 2 128 1 130 1 42 1 224 1 89 1 348 1 
51 3 5 2 135 2 9 2 267 1 140 1 271 1 274 1 234 1 275 1 276 2 13 1 317 3 59 4 183 1 62 1 185 1 282 2 283 2 150 1 154 1 110 1 197 1 289 5 198 3 245 1 209 1 33 1 211 5 34 1 250 1 336 1 39 1 40 1 216 1 256 1 128 1 130 1 42 1 224 1 348 1 
197 1 289 3 327 1 290 1 51 3 5 2 245 1 267 1 209 1 140 1 33 1 211 3 274 1 234 1 275 1 276 2 250 1 317 3 336 1 39 1 59 2 183 1 216 1 62 1 256 1 185 1 282 2 341 1 283 2 150 1 128 1 42 1 130 1 154 1 110 1 89 1 348 1 
51 5 5 4 267 2 140 1 274 3 234 1 276 4 275 1 317 7 59 3 183 1 62 1 282 4 185 2 283 4 150 1 154 1 110 1 327 1 289 4 197 1 200 1 290 1 245 1 30 1 209 1 211 4 33 1 250 2 336 2 39 2 216 1 256 1 341 2 218 1 128 1 42 1 130 2 89 1 348 1 
299 1 124 1 76 1 
299 1 121 1 
311 1 
299 1 109 1 
299 3 109 1 16 1 116 1 347 1 124 2 
299 1 109 1 16 1 
299 1 331 1 
252 3 158 2 167 1 107 4 64 7 190 1 127 1 342 1 130 1 259 1 260 1 119 1 270 3 162 1 131 1 73 2 336 1 
252 3 158 2 167 1 107 4 64 7 190 1 127 1 342 1 130 1 259 1 260 1 119 1 270 3 162 1 131 1 73 2 336 1 
252 3 158 2 101 1 167 1 107 4 64 7 190 1 127 1 342 1 130 1 259 1 260 1 119 1 270 3 162 1 131 1 73 2 336 1 
288 1 158 5 1 1 25 4 95 1 6 1 267 3 119 2 162 1 99 2 164 1 270 10 250 3 336 4 39 3 252 15 300 1 167 1 107 16 64 31 188 1 149 1 190 2 127 1 342 5 259 2 130 4 260 1 153 1 345 3 88 1 131 2 21 1 73 3 
158 3 24 1 1 2 119 1 99 4 164 2 270 4 162 1 336 1 252 4 300 2 217 1 107 5 64 9 149 2 190 1 127 1 342 1 130 1 259 1 260 1 131 1 21 1 73 2 
329 2 242 1 243 1 292 1 4 1 28 1 179 1 78 1 244 1 53 1 118 1 314 1 272 1 60 1 253 1 338 1 102 1 86 2 186 1 284 2 189 1 192 1 287 1 324 1 174 1 46 1 45 1 261 1 22 1 326 1 
329 3 242 1 243 1 292 2 4 1 28 1 78 1 244 1 53 1 118 1 266 1 314 1 272 1 122 1 60 1 253 1 338 1 102 1 86 2 186 1 284 3 189 1 192 1 305 1 287 1 324 1 46 1 45 1 261 1 22 1 
329 2 242 1 243 1 292 2 4 1 28 1 78 1 244 1 118 1 266 1 314 1 272 1 122 1 60 1 253 1 86 2 186 1 284 2 189 1 192 1 287 1 46 1 45 1 261 1 22 1 
157 1 60 2 329 1 242 1 299 1 338 1 4 1 284 1 264 1 257 1 189 2 305 1 192 1 244 1 78 2 53 1 109 1 46 1 91 1 225 1 262 1 142 1 22 2 
329 1 242 1 4 1 28 1 179 1 78 1 244 1 53 1 118 1 314 1 122 1 60 1 253 1 338 1 102 1 86 2 186 1 284 1 189 1 192 1 324 1 174 1 46 1 45 1 261 1 22 1 
169 1 
289 2 157 1 198 2 242 1 4 1 51 1 94 1 77 1 244 2 313 1 210 1 140 1 165 1 211 2 271 1 10 1 13 1 298 1 299 1 183 1 85 1 282 1 257 1 192 2 128 1 109 1 46 2 225 2 348 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 2 198 1 298 1 313 1 165 1 211 2 85 1 201 1 10 1 325 1 13 1 
289 1 298 1 313 1 183 1 165 1 211 1 85 1 271 1 10 1 348 1 325 1 128 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 165 1 211 1 85 1 10 1 325 1 
289 1 298 1 313 1 183 1 165 1 211 1 85 1 271 1 10 1 348 1 325 1 128 1 
252 3 158 2 1 1 2 1 301 1 300 1 3 1 107 3 64 6 149 1 127 1 130 1 259 1 323 1 139 1 260 1 270 2 164 1 99 2 162 1 131 1 248 1 73 1 48 2 336 1 76 1 
158 1 1 2 2 2 25 3 178 1 3 11 95 1 8 1 267 2 139 1 270 2 99 4 164 2 120 1 12 1 295 1 248 11 250 2 336 2 39 1 252 6 300 2 107 8 64 14 149 2 306 1 342 1 130 1 323 4 345 3 88 1 72 1 48 1 
0 1 1 1 242 1 2 1 4 1 204 1 7 1 244 1 8 1 138 1 139 1 164 1 33 1 99 2 269 1 37 1 275 1 143 1 252 1 299 1 300 1 216 1 16 1 62 2 107 1 64 2 149 1 66 1 192 1 306 1 286 1 42 2 323 1 109 1 46 1 225 1 72 1 48 1 
0 2 1 3 309 2 2 3 3 7 4 2 134 2 7 1 8 1 267 2 139 3 99 6 270 8 275 1 62 3 16 2 281 2 107 10 64 20 149 3 192 3 66 2 286 2 239 1 323 7 109 2 72 1 73 1 158 4 242 2 115 2 244 3 162 1 33 1 164 3 37 1 122 1 248 7 250 2 336 3 39 2 252 10 299 2 300 3 216 1 127 1 306 1 219 2 129 1 342 4 259 1 130 3 42 3 260 1 131 1 46 3 225 1 176 1 48 2 
113 1 157 1 1 2 330 1 242 3 2 2 4 2 7 1 244 4 8 1 139 2 33 1 99 4 164 2 275 1 38 1 252 1 166 1 278 1 299 3 301 1 300 2 216 1 16 1 17 1 62 1 18 1 107 1 64 2 149 2 257 1 192 4 306 1 285 1 42 1 222 1 109 3 46 4 225 2 349 1 326 1 
158 1 1 1 2 1 3 1 267 1 139 1 270 1 99 2 164 1 33 1 248 1 275 1 250 1 336 1 39 1 252 2 300 1 216 1 62 1 256 1 107 1 64 3 149 1 172 1 42 1 130 1 323 1 72 1 133 1 
1 1 2 1 301 1 300 1 3 1 107 2 64 2 149 1 312 1 342 1 323 1 139 1 270 1 164 1 99 2 248 1 250 1 336 1 
158 1 252 2 1 1 2 1 301 1 300 1 3 1 302 1 64 2 149 1 130 1 323 1 139 1 270 1 164 1 99 2 248 1 39 1 
158 1 1 1 2 1 3 2 267 1 139 1 99 2 164 1 270 2 248 2 250 1 336 1 39 1 252 2 300 1 301 1 107 2 64 4 149 1 342 1 130 1 323 2 
166 1 1 1 2 1 300 1 3 1 107 2 64 2 149 1 312 1 342 1 323 1 139 1 270 1 164 1 99 2 248 1 250 1 336 1 
158 1 252 2 166 1 1 1 2 1 300 1 3 1 302 1 64 2 149 1 130 1 323 1 139 1 270 1 164 1 99 2 248 1 39 1 
158 1 1 1 2 1 3 2 267 1 139 1 99 2 164 1 270 2 248 2 250 1 336 1 39 1 252 2 166 1 300 1 107 2 64 4 149 1 342 1 130 1 323 2 
158 1 252 2 1 1 2 1 300 1 3 2 107 2 64 4 149 1 342 1 130 1 323 2 267 1 139 1 270 2 164 1 99 2 248 2 250 1 336 1 39 1 
0 1 1 1 242 1 2 1 4 1 134 1 244 1 8 1 139 1 164 1 99 2 252 1 299 1 300 1 16 1 62 1 107 1 64 2 149 1 66 1 192 1 306 1 286 1 42 1 109 1 46 1 225 1 48 1 
252 1 1 1 2 1 300 1 340 1 168 1 64 1 150 1 149 1 192 1 244 1 98 1 8 1 139 1 164 1 99 2 46 1 225 1 48 1 
158 1 1 1 2 1 3 2 267 1 139 1 99 2 164 1 270 2 248 2 250 1 336 1 39 1 252 2 300 1 107 2 64 4 149 1 342 1 130 1 323 2 72 1 
158 1 0 1 1 1 242 1 2 1 3 2 4 1 134 1 244 1 267 1 139 1 270 2 164 1 99 2 248 2 250 1 336 1 39 1 252 2 299 1 300 1 16 1 62 1 107 2 281 1 64 4 149 1 66 1 192 1 342 1 286 1 130 1 42 1 323 2 109 1 46 1 326 1 
1 1 2 1 3 1 267 1 139 1 270 1 99 2 164 1 33 1 273 1 248 1 275 1 250 1 336 1 39 1 252 1 300 1 216 1 62 1 256 1 107 2 64 3 149 1 172 1 342 1 130 1 42 1 323 1 72 1 
158 3 1 2 263 2 25 2 159 1 205 1 95 1 29 1 267 3 232 1 99 4 164 2 270 6 334 1 250 3 182 1 336 3 39 3 252 10 318 2 300 2 217 1 41 1 107 9 64 19 149 2 342 3 130 3 345 1 88 1 
252 2 1 1 318 1 25 1 300 1 217 1 107 2 41 2 205 1 64 4 149 1 232 2 345 1 164 1 99 2 88 1 182 1 
158 1 1 2 227 1 263 1 25 4 159 1 205 1 95 1 29 1 267 2 232 1 246 1 99 4 164 2 270 3 250 2 182 1 336 2 39 2 252 11 318 3 300 2 217 1 41 2 107 10 64 21 149 2 342 2 130 2 345 3 88 3 
158 2 1 2 227 1 263 1 25 3 159 1 205 1 95 1 29 1 267 2 232 1 99 4 164 2 270 4 250 2 182 1 336 2 39 2 252 9 318 2 300 2 217 1 41 2 107 8 64 17 149 2 342 2 130 2 345 2 88 2 
158 1 1 1 25 1 205 1 232 1 99 2 164 1 162 1 270 1 336 1 182 1 252 4 318 1 300 1 217 1 41 1 107 5 64 9 149 1 127 1 130 1 259 1 260 1 345 1 88 1 131 1 73 1 
308 1 1 1 242 2 2 1 4 1 332 1 244 2 8 1 139 1 164 1 99 2 212 1 275 2 38 1 252 1 278 1 299 2 300 1 16 1 17 1 62 2 18 1 107 1 64 2 149 1 192 2 306 1 285 2 42 2 222 1 109 2 223 1 155 1 46 2 72 1 349 1 
253 1 242 1 145 1 4 1 86 2 186 1 28 1 189 1 192 2 244 2 118 1 151 1 314 1 324 1 46 2 90 1 122 1 261 1 326 1 
253 1 242 1 145 1 93 1 4 1 86 2 186 1 28 1 189 1 192 1 244 1 118 1 314 1 324 1 46 1 122 1 261 1 
157 1 242 1 299 1 50 1 4 1 189 1 257 1 192 1 244 1 109 1 46 1 90 1 225 1 262 1 
253 1 242 1 145 1 4 1 86 2 186 1 28 1 189 1 192 1 244 1 118 1 151 1 314 1 324 1 46 1 90 1 122 1 261 1 
230 1 
197 1 315 1 51 1 282 1 276 1 52 1 76 1 
289 1 197 1 198 1 51 1 211 1 271 1 35 1 274 1 276 2 317 1 13 1 183 1 282 1 171 1 321 1 128 1 348 1 
51 9 4 3 229 1 5 6 52 1 267 2 140 2 315 1 271 4 274 6 276 8 181 2 13 3 317 12 15 1 183 4 146 1 16 3 282 8 283 6 237 1 192 3 109 3 111 2 326 1 197 2 112 2 289 5 198 5 242 4 115 2 202 1 331 2 77 1 244 3 211 5 121 3 82 2 296 2 250 2 336 2 124 2 39 2 299 10 128 4 258 2 130 2 46 3 225 1 347 1 132 2 348 4 49 2 307 2 
289 1 197 2 198 1 25 2 51 13 5 8 77 1 95 1 267 4 140 1 211 1 246 1 271 2 247 1 12 1 274 5 276 7 250 4 13 1 317 10 57 1 336 4 39 4 183 2 147 1 282 8 283 8 191 1 128 2 130 4 108 1 152 1 345 2 88 1 132 1 348 2 49 5 
289 1 51 2 245 1 209 1 211 1 33 1 271 1 234 1 275 1 336 2 14 1 214 1 183 1 216 1 62 1 256 1 282 2 150 1 127 1 128 1 42 1 259 1 130 1 110 1 131 1 132 1 348 1 49 2 
197 1 183 1 51 1 282 1 128 1 52 1 315 1 271 1 348 1 276 1 
115 1 51 5 282 5 5 5 283 5 130 2 267 2 132 1 274 5 250 2 276 5 317 10 49 2 336 2 39 2 
197 1 289 1 198 1 211 1 276 1 13 1 
327 1 289 3 157 1 198 4 242 1 4 1 51 2 94 1 77 2 244 4 210 1 140 2 211 3 271 1 13 2 299 1 183 2 15 1 146 2 105 1 282 2 257 1 192 4 128 2 109 1 346 1 46 4 225 2 348 2 
0 1 1 1 242 1 2 1 199 1 4 1 134 1 244 1 8 1 139 1 209 1 99 2 164 1 33 2 275 2 252 1 299 1 300 1 216 2 62 3 16 1 256 2 64 1 149 1 192 1 66 1 286 1 42 3 109 1 46 1 225 1 48 1 
197 2 183 1 51 1 5 2 282 2 77 1 283 2 128 1 140 1 271 1 274 2 348 1 276 4 73 1 317 4 
144 1 161 1 43 1 
67 1 144 1 43 1 55 1 180 1 
144 1 161 1 43 1 
144 1 161 1 43 1 
144 1 43 1 255 1 
144 1 43 1 255 1 
144 1 43 1 255 1 
144 1 43 1 
20 1 294 1 
252 4 158 2 1 2 300 2 107 4 64 8 149 2 127 1 342 1 130 1 259 1 260 1 270 3 164 2 99 4 162 1 131 1 21 1 73 1 336 1 
252 3 158 2 107 3 64 6 127 1 259 1 130 1 260 1 162 1 270 2 131 1 73 1 336 1 76 1 
158 1 252 2 1 1 300 1 203 1 107 2 64 4 149 1 342 1 130 1 267 1 270 2 164 1 99 2 250 1 336 1 39 1 
252 1 25 1 345 1 88 1 107 1 64 2 
158 3 1 1 25 2 95 1 267 2 162 1 270 4 164 1 99 2 12 1 295 1 250 2 336 3 39 2 252 9 300 1 107 9 64 18 149 1 127 1 342 1 259 1 130 3 260 1 345 2 131 1 21 1 73 1 
252 1 25 1 64 1 
345 1 107 1 64 1 
252 3 158 2 1 1 300 1 115 1 203 1 107 3 64 6 149 1 342 1 130 1 267 1 99 2 164 1 270 3 250 1 336 1 39 1 
158 1 1 1 25 1 267 2 246 1 99 2 164 1 270 2 247 1 250 2 57 1 336 2 39 2 252 6 300 1 217 1 107 6 64 12 149 1 342 1 130 2 152 1 108 1 345 1 88 1 
252 3 158 1 107 3 64 6 127 1 342 1 130 1 259 1 270 2 131 1 336 1 
158 1 252 2 1 1 300 1 107 1 64 3 149 1 342 1 259 1 260 1 270 2 162 1 32 1 164 1 99 2 131 1 21 1 
158 3 252 5 1 1 214 1 300 1 217 1 107 5 64 10 149 1 127 1 342 2 259 2 130 2 99 2 164 1 270 5 131 2 336 2 
1 1 300 1 217 1 107 2 64 2 149 1 342 1 164 1 99 2 270 1 250 1 336 1 
158 1 252 2 1 1 300 1 217 1 107 2 64 4 149 1 342 1 130 1 267 1 270 2 164 1 99 2 250 1 336 1 39 1 
252 2 158 1 1 3 300 3 217 1 107 1 29 1 64 3 149 3 342 1 259 1 32 1 164 3 99 6 270 2 131 1 21 1 
158 7 1 5 25 4 203 1 95 1 6 1 29 1 267 3 162 1 32 1 99 10 164 5 270 12 250 3 336 5 39 3 252 18 300 5 217 1 107 16 188 1 64 34 149 5 127 2 342 5 259 3 130 5 260 1 153 1 345 3 88 1 131 3 21 2 73 1 
158 2 1 1 25 1 246 1 99 2 164 1 162 1 270 2 336 1 252 4 300 1 217 1 107 4 64 8 149 1 127 1 130 1 259 1 260 1 345 1 88 1 131 1 73 1 
158 2 1 2 25 2 203 1 95 1 267 1 162 1 246 1 99 4 164 2 270 3 250 1 336 2 252 5 300 2 217 1 107 6 64 11 149 2 127 1 342 1 130 1 259 1 260 1 345 1 88 1 131 1 73 1 
252 1 1 1 25 1 300 1 217 1 345 1 246 1 99 2 164 1 88 1 107 1 64 2 149 1 
158 3 1 3 25 1 203 1 267 2 162 1 246 1 99 6 164 3 270 5 247 1 250 2 57 1 336 3 39 1 252 7 300 3 217 1 107 10 64 17 149 3 127 1 342 2 259 1 130 2 152 1 108 1 260 1 345 1 88 1 131 1 21 1 73 1 
158 2 1 1 25 1 246 1 99 2 164 1 162 1 270 2 336 1 252 4 300 1 217 1 107 4 64 8 149 1 127 1 130 1 259 1 260 1 345 1 88 1 131 1 73 1 
252 1 1 1 25 1 300 1 217 1 345 1 246 1 99 2 164 1 88 1 107 1 64 2 149 1 
158 3 1 4 25 1 203 1 267 2 162 1 246 1 99 8 164 4 270 5 247 1 250 2 57 1 336 3 39 1 252 8 300 4 217 1 107 10 64 18 149 4 127 1 342 2 259 1 130 2 108 1 152 1 260 1 345 1 88 1 131 1 21 2 73 1 
158 3 1 4 25 1 29 1 267 3 246 1 99 8 164 4 270 6 247 1 250 3 57 1 336 3 39 2 252 7 300 4 217 1 107 9 64 16 149 4 342 3 130 2 108 1 152 1 345 1 88 1 21 2 
252 4 158 3 107 3 64 7 127 1 342 3 130 1 259 3 260 1 162 2 270 6 131 3 336 1 
158 3 1 4 25 1 29 1 267 2 162 1 246 1 99 8 164 4 270 4 247 1 250 2 57 1 336 3 39 1 252 8 300 4 217 1 107 10 64 18 149 4 127 1 342 1 259 1 130 2 108 1 152 1 260 1 345 1 88 1 131 1 21 2 73 1 
56 1 325 1 58 1 
177 1 31 1 148 1 106 1 56 1 325 1 58 1 136 1 
157 1 242 1 299 1 109 1 4 1 46 1 225 1 257 1 192 1 244 1 76 1 
242 1 299 1 216 1 16 1 62 2 4 1 7 1 192 1 66 1 244 1 286 1 42 2 109 1 33 1 46 1 225 1 275 1 48 1 
242 1 4 1 331 1 7 1 244 1 33 2 275 2 181 1 299 3 254 1 146 1 216 1 62 2 16 2 150 1 66 1 192 1 286 1 42 2 109 2 46 1 92 1 48 1 
242 1 4 1 331 1 7 1 244 2 231 1 33 2 275 2 181 1 299 3 254 1 146 1 216 1 62 2 16 2 150 1 192 2 286 1 42 2 109 2 46 2 175 1 92 1 48 1 
197 1 289 2 235 1 198 1 242 1 299 4 146 1 16 1 4 1 331 1 192 3 244 3 258 1 231 1 109 1 211 2 69 1 46 3 121 1 225 1 276 1 181 1 124 1 
197 1 289 2 198 1 242 1 299 4 146 1 16 1 4 1 331 1 192 3 244 3 258 1 231 1 109 1 211 2 46 3 82 1 121 1 225 1 276 1 181 1 124 1 
242 1 4 1 46 1 187 1 192 1 244 1 
113 1 330 1 242 4 278 1 299 3 17 1 16 2 280 1 4 2 192 3 244 3 222 2 109 3 46 3 225 2 347 1 38 1 326 1 349 2 
158 2 0 1 1 2 242 1 2 2 3 1 4 1 134 1 7 1 244 1 139 2 270 2 162 1 164 2 33 1 99 4 212 1 248 1 275 1 336 1 252 3 299 1 300 2 216 1 16 1 62 2 107 3 281 1 64 6 149 2 127 1 192 1 66 1 219 1 286 1 130 1 259 1 42 2 323 1 260 1 109 1 131 1 46 1 72 1 73 1 48 2 326 1 
197 1 289 3 112 1 198 2 51 1 52 1 244 1 315 1 211 3 271 2 82 1 121 1 276 1 13 1 124 1 59 1 183 2 15 1 299 2 282 1 192 1 128 2 258 1 46 1 225 1 111 1 348 2 307 1 
242 2 299 2 16 1 4 1 187 1 237 1 192 2 244 2 109 1 46 2 347 1 326 1 124 1 
157 1 337 1 242 1 299 1 4 1 257 1 192 4 244 4 231 1 109 1 46 4 225 1 326 1 
242 2 278 1 299 1 146 1 17 1 16 1 4 1 192 2 244 2 222 1 109 1 46 2 176 1 349 1 
118 1 253 1 242 1 4 1 86 1 46 1 225 1 261 1 192 1 244 1 
308 1 242 2 299 2 278 1 17 1 16 1 4 1 192 2 244 2 222 1 109 2 46 2 122 1 38 1 349 1 326 1 
113 1 242 2 299 2 278 1 17 1 16 1 4 1 192 2 244 2 222 1 109 2 46 2 225 1 38 1 349 1 326 1 
242 2 299 2 278 1 17 1 16 1 4 1 27 1 192 2 244 2 222 1 109 2 46 2 225 1 38 1 349 1 326 1 
242 1 299 1 216 1 16 1 62 2 4 1 7 1 192 1 244 1 286 1 42 2 109 1 33 1 46 1 225 1 175 1 275 1 48 1 
242 2 299 1 146 1 16 1 280 1 4 1 192 1 244 1 222 1 109 1 46 1 347 1 349 1 
42 1 343 1 62 1 223 1 155 1 332 1 275 1 160 1 206 1 
343 1 184 1 74 1 
343 1 163 1 160 1 48 1 206 1 
197 1 59 1 289 2 328 1 254 1 184 1 150 1 160 2 97 1 206 2 258 1 343 1 211 2 163 2 92 1 141 1 276 1 48 1 74 1 
287 1 243 1 272 1 76 1 
53 1 329 1 287 1 338 1 243 1 272 1 284 1 
60 1 329 1 78 1 
329 3 338 1 243 1 179 1 284 3 293 2 53 1 287 1 268 1 272 1 100 1 71 1 
53 1 329 2 287 1 338 1 243 1 292 1 26 1 272 1 284 2 
53 1 329 1 338 1 243 1 86 1 36 1 28 1 284 1 179 1 261 1 207 1 
53 1 329 1 338 1 243 1 272 1 284 1 179 1 
53 1 329 1 287 1 338 1 272 2 284 1 179 1 
53 2 329 2 338 2 243 1 19 1 272 1 284 2 179 1 236 1 195 1 
329 3 338 1 243 2 310 1 292 2 179 1 284 3 65 1 53 1 287 1 36 1 272 1 75 1 
329 2 338 1 243 1 292 1 86 2 186 1 179 1 284 2 28 1 118 1 53 1 287 1 272 1 316 1 261 1 
329 4 338 2 243 2 292 2 26 1 179 1 284 4 65 1 53 2 287 1 36 1 272 1 156 1 
53 1 329 1 287 1 338 1 243 1 272 1 284 1 179 1 
329 4 338 1 243 3 292 2 293 1 284 4 65 1 193 1 53 1 287 2 268 1 36 1 272 2 71 1 
329 2 338 1 243 1 292 1 179 1 284 2 117 1 53 1 287 1 68 1 272 1 123 1 
53 1 329 3 287 1 338 1 243 1 268 2 272 1 293 2 284 3 179 1 71 1 333 1 
79 1 243 2 125 1 291 2 
53 1 329 1 215 1 338 1 284 1 179 1 
53 1 329 2 287 1 338 1 243 1 310 1 292 1 272 1 284 2 179 1 
87 1 
53 1 329 1 287 1 338 1 243 1 272 1 284 1 179 1 
53 1 329 3 287 1 338 1 243 1 310 1 292 1 272 1 293 1 284 3 179 1 
193 1 243 1 36 1 65 1 
243 1 272 1 

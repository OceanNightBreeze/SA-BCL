#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 116 (78,244) (78,244) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 116 (78,244) (78,244) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 116 (78,244) (78,244) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 116 (78,244) (78,244) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 116 282 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 116 282 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 246 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (27,81) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (7,133,137) (7,133,137) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (127,201) (127,201) 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 155 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 155 160 
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 226 321 43 207 20 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 237 258 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 54 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 54 149 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 151 66 303 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 151 66 303 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 151 66 110 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 54 149 323 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 54 149 323 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (127,201) (127,201) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (127,201) (127,201) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (127,201) (127,201) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 36 239 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (145,182) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 129 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 62 (101,281) 199 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 9 164 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 226 321 43 207 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (183,336) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (142,329) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 3 60 1 148 3 240 2 176 1 222 2 150 2 152 1 71 1 318 1 156 1 114 1 269 1 
119 4 60 1 325 1 277 1 124 1 147 1 148 4 176 1 240 1 222 2 150 2 131 1 152 1 90 1 71 1 244 1 203 1 156 1 269 2 78 1 116 1 141 1 
119 4 60 1 325 1 277 1 124 1 147 1 148 4 176 1 240 1 222 2 150 2 131 1 152 1 90 1 71 1 244 1 203 1 156 1 269 2 78 1 116 1 141 1 
119 4 60 1 325 1 277 1 124 1 147 1 148 4 176 1 240 1 222 2 150 2 131 1 152 1 90 1 71 1 244 1 203 1 156 1 269 2 78 1 116 1 141 1 
119 4 60 1 325 1 277 1 124 1 147 1 148 4 176 1 240 1 222 2 150 2 131 1 152 1 90 1 71 1 244 1 203 1 156 1 269 2 78 1 116 1 141 1 
119 4 60 2 325 1 147 1 87 2 148 4 176 3 240 3 222 1 150 1 71 1 318 1 156 1 114 1 141 1 116 1 248 1 59 1 
119 2 277 1 169 1 147 1 148 2 240 1 222 1 48 1 241 1 150 1 71 1 318 1 203 1 114 1 269 1 141 1 
119 4 143 1 60 1 148 4 282 1 240 1 176 2 222 2 150 2 131 1 152 1 71 1 156 1 269 1 116 1 
119 4 143 1 60 1 148 4 282 1 240 1 176 2 222 2 150 2 131 1 152 1 71 1 156 1 269 1 116 1 
245 1 181 1 218 1 
245 1 181 1 218 1 
200 1 53 1 245 2 134 1 181 2 218 1 220 1 
129 1 
215 1 236 1 146 1 65 1 128 1 223 1 130 1 245 1 181 1 210 1 18 1 271 1 
215 1 236 1 144 1 65 1 223 1 130 1 245 2 14 1 181 2 158 1 210 1 18 1 271 1 
245 1 181 1 218 1 
245 1 181 1 218 1 
245 1 181 1 
236 2 163 1 144 1 14 1 158 1 210 2 47 1 223 2 225 2 
334 1 27 1 58 1 
214 1 236 1 165 1 167 1 64 2 278 1 329 1 172 1 46 2 308 1 309 1 6 1 8 1 225 1 289 1 52 1 263 2 138 1 210 1 
129 1 225 1 
214 1 236 2 165 1 144 1 167 1 64 1 27 1 278 1 329 1 46 1 309 1 8 1 223 1 289 1 52 1 263 1 14 1 15 1 210 2 213 1 
236 5 144 4 146 1 223 5 47 1 225 1 132 1 315 1 14 4 15 1 158 1 270 1 210 5 213 2 
236 2 144 2 14 2 189 1 210 2 271 1 223 2 311 1 
236 3 144 3 14 3 158 1 210 3 223 3 225 1 213 1 
236 1 144 1 14 1 189 1 210 1 271 1 223 1 
163 1 236 1 144 1 14 1 158 1 210 1 271 1 223 1 47 1 
215 1 236 2 144 2 123 1 26 1 65 1 223 2 47 1 130 1 245 1 14 2 181 1 15 1 158 1 210 2 18 1 271 1 213 1 
236 2 144 1 14 1 146 1 270 1 210 2 223 2 225 1 213 1 
215 1 236 1 144 1 26 1 65 1 223 1 130 1 245 1 14 1 181 1 15 1 210 1 18 1 271 1 246 1 213 1 
236 2 144 2 27 1 47 1 223 2 334 1 14 2 158 1 210 2 213 1 
214 1 236 1 165 1 64 1 167 1 46 1 329 1 278 1 309 1 8 1 225 1 52 1 289 1 263 1 210 1 
214 1 236 1 165 1 64 1 167 1 46 1 278 1 8 1 225 1 106 1 52 1 289 1 263 1 210 1 183 1 
81 1 305 1 
215 1 236 1 144 1 14 1 210 1 271 1 223 1 311 1 
44 2 317 1 137 2 7 1 
133 1 44 1 137 1 
44 1 137 1 
44 1 137 1 
317 1 7 1 
317 1 7 1 
317 1 7 1 
44 1 45 1 137 1 
44 1 45 1 137 1 
44 1 45 1 137 1 
324 1 44 1 137 1 
324 1 44 1 137 1 
324 1 44 1 137 1 
236 1 44 1 2 1 144 1 25 1 193 1 223 1 178 1 286 1 93 1 245 1 14 1 181 1 137 1 210 1 36 1 
44 2 2 2 25 2 127 1 193 2 178 2 286 2 201 1 93 1 245 2 181 2 137 2 335 1 295 1 
325 1 292 1 173 2 147 2 48 1 
325 1 147 1 141 1 
147 1 141 1 48 1 
325 2 292 1 173 1 76 1 147 3 48 1 
332 1 325 1 292 1 173 1 147 2 48 1 
245 1 181 1 218 1 208 1 
290 1 245 2 4 1 181 2 218 2 224 1 
218 1 220 1 280 1 198 1 53 1 200 1 92 1 245 2 155 1 134 1 181 2 37 1 
280 1 220 1 198 1 53 1 200 1 92 1 245 1 155 1 134 1 181 1 37 1 160 1 
284 1 
289 1 102 1 129 1 
289 1 205 1 
289 1 278 1 8 1 
289 1 29 1 
289 1 278 1 
289 3 61 1 102 2 278 1 68 1 8 1 
82 2 187 2 253 3 100 2 192 6 174 3 67 1 33 1 264 1 111 2 265 1 227 1 266 1 73 1 96 1 75 1 294 1 322 4 
43 1 187 1 253 10 100 2 192 17 174 7 226 3 9 1 197 1 260 3 265 1 94 3 266 1 73 2 96 2 294 3 207 1 321 3 20 1 38 2 322 3 118 1 
120 1 82 2 253 4 217 2 174 4 314 1 264 1 265 1 266 1 227 1 96 1 230 2 322 4 185 2 187 3 100 1 328 1 192 8 33 1 291 2 111 2 73 1 294 1 249 4 
82 2 187 2 253 3 100 2 192 6 174 3 67 1 33 1 264 1 111 2 265 1 227 1 266 1 73 1 96 1 294 1 322 4 
82 2 187 2 253 3 100 2 192 6 174 3 67 1 33 1 264 1 111 2 265 1 227 1 266 1 73 1 96 1 294 1 322 4 
119 1 214 1 326 1 165 1 166 1 64 1 171 1 278 1 279 1 46 1 148 1 256 2 103 1 222 1 150 1 31 1 52 1 289 1 263 1 55 1 269 2 21 2 98 2 
119 1 304 1 165 1 125 1 46 1 256 1 222 1 48 1 313 1 312 1 52 1 263 1 13 1 56 1 269 1 141 1 21 1 98 1 325 1 64 1 147 2 148 1 150 1 71 1 76 1 298 1 
119 2 165 1 125 1 46 1 256 1 176 1 222 1 48 1 313 1 312 1 52 1 263 1 318 1 13 1 56 1 269 1 139 1 141 1 21 1 98 1 325 1 64 1 147 2 148 2 240 1 150 1 71 1 76 1 114 1 298 1 
119 3 304 1 165 1 125 1 46 1 256 1 176 2 222 1 48 1 313 1 312 1 50 1 52 1 263 1 318 1 13 1 269 1 141 1 21 1 98 1 325 1 64 1 147 2 148 3 240 1 103 1 150 1 76 1 114 1 298 1 
119 2 304 1 165 1 125 1 46 1 256 1 176 2 48 1 312 1 50 1 52 1 263 1 318 1 269 1 141 1 21 1 98 1 325 1 64 1 147 2 148 2 240 1 76 1 114 1 298 1 
202 1 
214 1 237 1 306 1 64 1 46 1 220 1 258 1 198 1 200 1 92 1 263 1 245 1 134 1 181 1 
215 1 122 1 236 1 85 1 65 1 146 1 128 1 223 1 130 1 32 1 91 1 245 2 54 1 181 2 210 1 18 1 271 1 299 1 
215 1 122 1 236 1 85 1 65 1 146 1 128 1 257 1 223 1 130 1 32 1 91 1 245 2 181 2 210 1 18 1 271 1 299 1 
215 1 122 1 236 1 85 1 65 1 146 1 128 1 149 1 223 1 130 1 32 1 91 1 245 2 54 1 181 2 210 1 18 1 271 1 299 1 
245 1 181 1 
42 1 215 1 122 1 306 1 85 1 220 1 128 1 223 1 130 1 91 1 134 1 228 1 135 1 319 1 181 2 18 1 271 1 236 1 188 1 146 1 65 1 151 1 198 1 32 1 200 1 245 2 210 1 299 1 
42 1 215 1 303 1 122 1 306 1 85 1 220 1 128 1 223 1 130 1 91 1 261 1 228 1 134 1 135 1 319 1 181 2 18 1 271 1 236 1 188 1 146 1 65 1 66 1 151 1 198 1 32 1 200 1 245 2 210 1 299 1 
42 1 215 1 303 1 122 1 306 1 85 1 220 1 128 1 223 1 130 1 91 1 261 1 228 1 134 1 135 1 319 1 181 2 18 1 271 1 236 1 188 1 146 1 65 1 66 1 151 1 198 1 32 1 200 1 245 2 210 1 299 1 
215 1 122 1 306 1 85 1 5 1 220 1 128 1 223 1 130 1 91 1 134 1 135 1 319 1 181 2 136 1 18 1 271 1 236 1 188 1 146 1 65 1 66 1 151 1 198 1 32 1 243 1 200 1 110 1 245 2 210 1 299 1 
323 1 215 1 122 1 236 1 85 1 65 1 146 1 128 1 149 1 223 1 130 1 32 1 91 1 245 2 54 1 181 2 210 1 18 1 271 1 299 1 
323 1 215 1 122 1 236 1 85 1 65 1 146 1 128 1 149 1 223 1 130 1 32 1 91 1 245 2 54 1 181 2 210 1 18 1 271 1 299 1 
215 1 122 1 306 1 85 1 220 1 5 1 128 1 223 1 130 1 91 1 134 1 135 1 181 2 319 1 18 1 271 1 236 1 188 1 146 1 65 1 151 1 198 1 32 1 243 1 200 1 245 2 210 1 299 1 
214 2 304 1 165 2 305 1 253 1 166 1 217 1 46 8 174 1 6 2 223 1 51 1 52 2 180 1 263 8 12 1 316 1 14 1 230 1 139 1 97 1 273 1 236 1 185 1 144 1 64 7 279 1 278 2 192 2 194 1 289 3 291 1 210 1 80 1 159 1 212 1 161 1 213 1 249 2 
253 1 217 1 174 2 47 1 223 1 226 1 51 1 179 1 14 1 230 1 321 1 58 1 322 1 273 1 185 1 236 1 187 1 144 1 27 1 191 1 192 3 291 1 334 1 73 1 294 1 158 1 210 1 38 1 249 2 
305 1 129 1 
253 8 217 2 221 1 174 6 225 1 9 1 226 2 51 1 260 3 179 1 94 3 230 2 321 2 97 1 58 11 322 2 273 2 185 2 187 1 100 1 27 11 192 14 196 1 197 1 291 2 334 4 73 1 294 2 113 1 206 1 161 1 38 1 249 4 
214 1 165 1 167 1 253 1 217 1 46 1 309 1 308 1 174 1 8 1 223 1 225 1 51 1 52 1 263 1 179 1 14 1 230 1 15 1 97 1 273 1 22 1 236 2 185 1 144 1 64 1 278 1 329 1 192 2 289 1 291 1 334 1 210 2 247 1 161 1 300 1 213 1 249 2 
82 2 165 2 168 2 167 2 253 9 174 10 8 2 264 1 263 1 179 1 95 2 14 1 15 1 97 1 273 3 272 2 185 3 187 4 100 1 27 6 278 2 192 19 281 2 33 1 289 2 111 2 291 3 294 3 210 3 38 2 213 1 214 1 121 2 216 1 217 3 46 1 309 2 223 1 225 2 226 2 51 3 52 2 227 1 230 3 321 2 58 6 322 5 236 3 144 1 64 1 329 2 242 1 334 6 73 3 161 1 249 6 
305 1 
305 1 
305 1 
185 1 253 2 100 1 27 1 217 1 192 2 194 1 89 1 226 1 51 1 291 1 334 1 230 1 294 1 58 1 322 1 273 1 249 2 
185 1 276 1 187 1 27 1 217 1 192 2 174 2 194 1 51 1 291 1 334 1 73 1 230 1 58 1 322 1 38 1 273 1 249 2 
253 2 217 1 174 2 226 1 51 1 230 1 321 1 58 2 322 2 273 1 185 1 187 1 27 2 100 1 192 4 194 1 291 1 334 2 73 1 294 1 38 1 249 2 
253 2 217 1 174 2 226 1 51 1 230 1 321 1 58 2 322 2 273 1 185 1 187 1 27 2 100 1 192 4 291 1 334 2 73 1 294 1 38 1 249 2 
214 1 165 1 253 1 167 1 168 1 217 1 46 1 309 1 174 1 8 1 225 1 51 1 52 1 263 1 230 1 97 1 273 1 236 1 185 1 64 1 278 1 329 1 192 2 289 1 291 1 210 1 161 1 249 2 
214 1 165 1 253 1 167 1 170 1 217 1 46 1 174 1 8 1 225 1 51 1 52 1 263 1 230 1 97 1 183 1 273 1 236 1 185 1 64 1 278 1 192 2 106 1 289 1 291 1 210 1 161 1 249 2 
253 2 217 1 174 2 226 1 51 1 179 1 230 1 321 1 58 2 322 2 273 1 185 1 187 1 27 2 100 1 192 4 291 1 334 2 73 1 294 1 38 1 249 2 
121 1 165 1 253 2 167 1 168 1 217 1 46 1 309 1 174 2 8 1 226 1 51 1 52 1 263 1 230 1 321 1 139 1 58 2 322 2 273 1 236 1 185 1 187 1 64 1 100 1 27 2 329 1 278 1 192 4 289 1 291 1 334 2 73 1 294 1 210 1 38 1 249 2 
253 2 217 1 174 1 47 1 223 1 226 1 51 1 179 1 14 1 230 1 321 1 58 1 322 1 273 1 185 1 236 1 144 1 100 1 27 1 192 3 291 1 334 1 73 1 294 1 158 1 210 1 117 1 38 1 249 2 
251 1 253 9 217 2 126 2 174 10 9 1 226 3 260 1 94 2 230 2 321 3 322 6 185 2 187 3 100 3 328 1 192 19 238 1 104 1 197 1 107 1 331 2 291 2 73 3 294 3 34 1 77 1 38 3 40 1 249 4 
120 2 41 1 251 2 164 1 253 14 217 3 3 1 126 1 310 1 174 12 9 2 226 3 260 2 94 2 230 3 233 1 321 3 322 4 185 3 187 2 100 2 328 1 192 26 104 2 107 1 331 4 291 3 74 1 73 2 294 3 34 1 77 1 38 2 249 6 
120 1 41 1 251 2 82 2 164 1 253 20 3 1 217 3 219 1 126 1 310 1 174 23 9 3 226 4 260 3 264 1 94 4 227 1 230 3 233 1 321 4 322 10 185 3 187 5 100 5 328 1 192 43 104 1 197 1 107 1 331 4 33 1 111 2 291 3 74 1 73 5 294 5 34 1 77 1 38 4 40 1 249 6 
120 2 41 1 251 2 82 2 164 1 253 19 3 1 217 4 219 1 126 1 310 1 174 19 9 3 226 4 260 3 264 1 94 4 227 1 230 4 233 1 321 4 322 8 185 4 187 5 100 3 328 1 192 38 104 1 197 1 107 1 331 4 33 1 111 2 291 4 74 1 73 4 294 5 34 1 77 1 38 3 40 1 249 8 
120 1 41 1 251 1 82 2 164 1 253 26 3 1 217 2 126 1 310 1 174 26 9 2 226 7 260 4 264 1 94 4 227 1 230 2 233 1 321 7 322 15 185 2 187 8 100 7 328 1 192 52 104 1 197 2 107 1 331 4 33 1 111 2 291 2 74 1 73 8 294 8 113 2 34 1 77 1 38 7 249 4 
108 1 274 1 44 1 333 1 25 1 112 1 137 1 193 1 286 1 178 1 
133 1 327 1 
44 1 25 1 190 1 137 1 17 1 193 1 286 1 178 1 301 1 
307 1 45 1 
184 1 324 1 30 1 
44 1 2 2 25 1 127 1 193 1 178 1 286 1 201 1 93 1 245 1 181 1 137 1 335 1 295 1 
44 1 2 2 25 1 127 1 193 1 178 1 286 1 201 1 93 1 245 1 181 1 137 1 335 1 295 1 
44 1 2 2 25 1 127 1 193 1 178 1 286 1 201 1 93 1 245 1 181 1 137 1 335 1 295 1 
184 1 307 1 45 1 
184 1 307 1 45 1 
324 1 30 1 
184 1 324 1 30 1 
283 1 19 1 
2 1 44 1 25 1 218 1 193 1 239 1 178 1 286 1 245 1 181 1 137 1 335 1 295 1 36 1 
165 1 83 1 253 1 217 1 46 2 174 1 6 2 177 1 223 2 51 1 52 1 263 2 179 1 316 1 230 1 97 1 273 1 236 2 185 1 64 2 278 1 192 2 105 1 70 1 289 1 72 1 291 1 210 2 159 1 161 1 249 2 
214 1 165 1 64 1 166 1 278 1 46 1 279 1 175 1 285 1 31 1 52 1 289 1 263 1 21 1 
325 1 304 1 165 1 63 1 64 1 147 2 46 1 48 1 69 1 285 1 313 1 312 1 52 1 263 1 76 1 141 1 298 1 21 1 
325 1 304 1 165 1 63 1 64 2 147 2 46 2 48 1 69 1 285 1 313 1 312 1 52 1 263 2 76 1 139 1 141 1 298 1 21 1 
325 1 304 1 63 1 165 1 64 1 147 2 46 1 48 1 313 1 312 1 287 1 52 1 263 1 76 1 141 1 298 1 21 1 
302 1 
200 1 306 1 134 1 319 1 220 1 182 1 
73 1 319 1 294 1 321 1 226 1 198 1 38 1 
214 1 263 1 64 1 46 1 
145 1 319 1 182 1 129 1 
42 1 200 1 306 1 228 1 134 1 319 1 220 1 198 1 
214 1 62 1 61 1 165 2 306 1 64 1 101 1 278 1 46 1 28 1 220 1 8 1 198 1 199 1 52 1 289 2 200 1 92 1 263 1 134 1 205 1 
260 1 200 1 94 1 164 1 306 1 134 1 319 1 220 1 9 1 198 1 
82 1 306 1 84 1 86 1 220 1 261 1 200 1 111 1 245 1 134 1 181 1 
200 1 92 1 306 1 134 1 319 1 220 1 140 1 198 1 
108 1 25 1 19 1 211 1 286 1 
25 1 286 1 259 1 
25 1 286 1 259 1 
25 1 286 1 259 1 
25 1 330 1 286 1 
25 1 330 1 286 1 
25 1 330 1 286 1 
25 1 286 1 
44 1 137 1 
82 1 187 1 111 1 86 1 322 1 
185 1 253 2 217 1 100 1 328 1 192 2 226 1 291 1 230 1 294 1 322 1 249 2 
185 1 187 1 253 2 217 1 100 1 328 1 192 4 174 2 226 1 291 1 73 1 230 1 294 1 321 1 38 1 322 2 249 2 
120 1 185 3 82 1 187 1 253 1 217 3 100 1 328 1 192 3 174 2 291 3 111 1 230 3 297 1 322 2 40 1 249 6 
43 1 162 1 185 3 253 7 100 1 217 3 328 1 192 11 174 4 226 2 9 1 260 3 291 3 94 2 73 1 294 2 230 3 207 1 321 2 38 1 322 1 118 1 249 6 40 1 
82 2 164 1 253 3 217 1 174 4 9 1 260 1 264 1 94 1 227 1 230 1 322 2 185 1 187 2 328 1 192 7 33 1 291 1 111 2 73 1 294 1 249 2 
162 1 82 2 164 1 253 5 217 2 174 5 9 1 226 1 260 1 264 1 94 2 227 1 230 2 321 1 322 3 185 2 187 2 100 1 328 1 192 10 197 1 33 1 111 2 291 2 73 1 294 2 249 4 
162 1 41 1 120 1 82 2 164 1 253 8 217 3 3 1 310 1 174 10 9 1 226 2 260 1 264 1 94 1 227 1 230 3 233 1 321 2 322 4 185 3 187 3 100 1 328 1 192 18 33 1 111 2 291 3 73 3 294 3 38 2 249 6 
162 1 120 1 41 1 82 2 164 1 253 9 217 3 3 1 310 1 174 7 9 1 226 2 260 1 264 1 94 1 227 1 230 3 233 1 321 2 322 6 185 3 187 3 100 3 328 1 192 16 33 1 111 2 291 3 73 2 294 3 38 1 249 6 
82 2 164 1 253 3 217 1 174 4 9 1 260 1 264 1 94 1 227 1 230 1 322 2 185 1 187 2 328 1 192 7 33 1 291 1 111 2 73 1 294 1 249 2 
41 1 164 1 253 6 217 1 3 1 310 1 174 6 9 1 226 2 260 1 94 1 230 1 233 1 321 2 322 2 185 1 187 1 100 1 328 1 192 12 291 1 73 2 294 2 38 2 249 2 
162 1 41 1 120 2 82 2 164 1 253 9 217 4 3 1 310 1 174 8 9 1 226 2 260 1 264 1 94 1 227 1 230 4 233 1 321 2 322 6 185 4 187 3 100 3 328 1 192 17 33 1 111 2 291 4 73 2 294 3 38 1 249 8 
41 1 120 2 164 1 253 9 217 4 3 1 310 1 174 7 9 1 226 3 260 1 94 1 230 4 233 1 321 3 322 6 185 4 187 3 100 3 328 1 192 16 291 4 73 2 294 3 38 2 249 8 40 1 
82 2 187 2 253 3 100 2 192 7 174 4 33 2 264 1 111 2 227 1 73 1 294 1 322 4 
41 1 120 2 82 2 164 1 253 9 217 4 3 1 310 1 174 8 9 1 226 2 260 1 264 1 94 1 227 1 230 4 233 1 321 2 322 4 185 4 187 3 100 1 328 1 192 17 33 1 111 2 291 4 73 2 294 3 38 1 249 8 40 1 
120 1 185 2 82 2 187 2 253 4 100 2 217 2 192 9 174 5 33 1 264 1 291 2 111 2 227 1 73 1 294 1 230 2 322 4 249 4 
33 1 82 2 264 1 187 2 111 2 253 2 227 1 73 1 294 1 192 5 174 3 129 1 322 2 
162 1 185 1 187 1 253 2 217 1 100 1 192 4 174 2 226 1 291 1 73 1 230 1 294 1 321 1 38 1 322 2 249 2 
187 1 253 3 100 1 192 7 174 4 9 1 197 1 226 1 260 1 94 2 73 1 294 1 321 1 38 1 322 2 
120 2 82 3 253 10 217 2 174 12 226 2 260 2 264 1 94 2 227 1 230 2 321 2 322 9 185 2 187 5 100 4 192 22 197 1 33 1 111 3 291 2 73 3 294 3 206 1 113 1 297 1 38 2 249 4 
94 1 192 1 174 1 
260 1 253 1 192 1 
162 1 185 1 187 2 253 3 217 1 100 2 192 6 174 3 226 1 291 1 95 1 73 1 230 1 294 1 321 1 322 4 38 1 249 2 
41 1 164 1 253 6 217 1 3 1 310 1 174 6 9 1 226 2 260 1 94 1 230 1 233 1 321 2 322 2 185 1 187 1 100 1 328 1 192 12 291 1 73 2 294 2 38 2 249 2 
82 1 187 1 253 2 192 4 174 2 111 1 227 1 73 1 294 1 322 1 
120 1 82 1 185 1 187 1 253 1 100 1 217 1 192 3 174 2 33 1 264 1 111 1 291 1 230 1 297 1 322 2 249 2 
236 1 146 1 210 1 270 1 223 1 57 1 225 1 
0 1 275 1 236 1 252 1 146 1 255 1 223 1 225 1 262 1 270 1 210 1 57 1 
214 1 52 1 289 1 263 4 165 1 166 1 64 4 278 1 279 1 46 4 139 1 234 1 39 1 
165 2 64 2 99 1 46 2 278 1 8 1 49 1 153 1 289 1 52 1 154 1 263 2 157 1 231 1 
214 1 52 1 263 1 165 1 64 1 147 1 46 1 141 1 48 1 298 1 
70 1 52 1 289 1 304 1 263 2 165 1 64 2 278 1 46 2 139 1 159 1 
214 1 165 2 166 1 64 4 279 1 46 5 278 2 289 3 52 2 154 1 263 5 12 1 139 1 159 1 212 1 39 1 
214 1 165 2 166 1 64 4 279 1 46 5 278 2 11 1 289 3 52 2 154 1 263 5 12 1 139 1 159 1 39 1 
214 1 52 1 289 1 263 1 165 1 166 1 64 1 278 1 279 1 46 1 129 1 
214 1 236 2 165 1 144 1 167 1 64 1 278 1 46 1 329 1 8 1 223 1 225 1 289 1 52 1 263 1 14 1 210 2 213 1 
215 1 236 2 165 1 144 1 167 1 64 1 65 1 278 2 46 1 329 1 29 1 8 2 223 2 225 1 289 3 52 1 154 1 263 1 14 2 210 2 296 1 271 1 213 1 
215 1 236 2 165 1 144 1 167 1 64 2 65 1 278 2 46 2 29 1 8 2 223 2 225 1 289 3 52 1 154 1 263 2 14 2 210 2 296 1 271 1 234 1 183 1 213 1 
289 1 263 1 154 1 64 1 245 1 205 1 181 1 46 1 336 1 
289 1 263 1 154 1 64 1 245 1 205 1 181 1 46 1 142 1 
52 1 263 1 165 1 64 1 46 1 80 1 
214 2 304 1 61 1 165 3 64 6 99 1 46 7 278 2 6 1 8 1 153 1 109 1 289 3 52 2 180 1 263 7 12 1 80 1 139 1 159 1 212 1 
121 1 82 2 165 1 253 2 167 1 168 1 217 2 46 1 309 1 174 3 8 1 177 1 223 1 225 2 51 2 52 1 264 1 179 1 263 1 227 1 14 1 230 2 139 1 322 2 273 2 236 2 185 2 187 2 144 1 64 1 278 1 329 1 192 5 281 1 33 1 289 1 111 2 291 2 73 1 294 1 210 2 213 1 249 4 
245 1 181 1 218 1 
61 1 165 2 64 2 102 1 46 2 28 1 278 1 8 1 289 2 52 1 263 2 139 1 80 1 
214 1 236 2 165 1 144 1 167 1 64 1 278 1 46 1 8 1 223 1 225 1 289 1 52 1 263 1 14 1 210 2 183 1 213 1 
61 1 165 2 64 1 99 1 46 1 278 1 8 1 153 1 109 1 289 1 52 1 154 1 263 1 
268 1 115 1 79 1 225 1 10 1 
250 1 215 1 26 1 65 1 218 1 225 1 10 1 130 1 288 1 245 2 181 2 268 2 320 1 79 2 115 2 18 1 271 1 
236 1 72 1 83 1 210 1 115 1 79 1 223 1 105 1 10 1 
288 1 320 1 10 1 
119 1 71 1 318 1 148 1 114 1 240 1 222 1 150 1 
23 1 119 4 60 1 277 1 148 4 176 2 240 3 222 1 195 1 150 1 318 2 229 1 156 1 114 2 
119 2 143 1 148 2 240 1 176 1 222 1 150 1 71 1 318 1 204 1 114 1 209 1 
23 1 119 3 277 2 148 3 240 1 222 1 195 2 150 1 71 1 318 1 35 1 114 1 
267 1 232 1 240 2 337 2 
119 1 71 1 235 1 148 1 222 1 150 1 
119 2 71 1 318 1 148 2 114 1 240 1 176 1 88 1 222 1 150 1 
254 1 
119 1 71 1 318 1 148 1 114 1 240 1 222 1 150 1 
318 1 114 1 240 1 129 1 
119 1 318 1 148 1 114 1 240 1 222 1 150 1 
119 1 269 1 98 1 
119 3 23 1 277 2 148 3 240 1 222 1 195 1 150 1 71 1 318 1 16 1 114 1 
119 2 318 1 87 1 148 2 114 1 240 1 176 1 222 1 150 1 
119 1 71 1 325 1 60 1 147 1 148 1 240 1 222 1 141 1 59 1 150 1 
119 1 71 1 148 1 114 1 240 1 222 1 150 1 
119 1 71 1 318 1 148 1 114 2 222 1 150 1 
119 2 1 1 186 1 148 2 240 1 222 2 150 2 71 1 293 1 114 1 
119 1 148 1 222 1 150 1 131 1 71 1 318 1 229 1 114 1 
119 2 24 1 325 1 147 2 148 2 240 1 176 1 222 1 48 1 150 1 71 1 318 1 76 1 114 1 141 1 
119 4 60 1 87 1 148 4 176 2 240 2 222 2 150 2 71 1 318 1 156 1 114 1 248 1 
119 3 277 1 148 3 176 1 240 1 222 1 88 1 150 1 71 1 318 1 114 1 
60 1 229 1 156 1 240 1 
114 1 240 1 

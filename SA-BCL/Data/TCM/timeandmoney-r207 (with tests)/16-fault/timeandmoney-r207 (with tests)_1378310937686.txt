#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 52 (11,225) (11,225) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 52 (11,225) (11,225) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 52 (11,225) (11,225) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 52 (11,225) (11,225) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 181 206 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 181 206 237 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 181 78 89 38 (36,157) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 192 122 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 192 122 141 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 261 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 300 301 325 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 300 301 325 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 300 301 325 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 300 301 325 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 300 301 325 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 274 223 68 24 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 274 223 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 274 223 147 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 274 223 68 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 274 223 68 91 87 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 274 223 68 91 87 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 274 223 68 91 19 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 274 223 56 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 274 223 56 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 181 320 313 288 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 181 206 287 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 181 206 210 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 300 81 18 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 300 20 151 115 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 181 78 89 38 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 300 20 151 115 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 181 78 89 38 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 181 206 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 181 206 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 181 240 316 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 181 240 316 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 181 240 316 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 181 240 316 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 181 240 316 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 300 81 18 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 181 206 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 192 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 177 72 40 (279,283) (279,283) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 177 72 40 (279,283) (279,283) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 181 320 200 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 181 320 313 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 181 320 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 300 146 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 181 221 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 181 320 200 173 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 300 20 156 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 181 70 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 177 72 40 219 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 300 20 151 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 300 20 151 118 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 177 72 40 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 181 320 200 230 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 177 72 40 (279,283) (279,283) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 63 1 225 1 106 1 203 1 11 1 164 1 12 1 52 1 321 1 304 1 
160 1 63 1 225 1 106 1 203 1 11 1 164 1 12 1 52 1 321 1 304 1 
160 1 63 1 225 1 106 1 203 1 11 1 164 1 12 1 52 1 321 1 304 1 
160 1 63 1 225 1 106 1 203 1 11 1 164 1 12 1 52 1 321 1 304 1 
299 1 106 1 203 1 57 3 76 1 44 1 204 2 260 1 164 4 139 1 303 1 25 2 114 1 304 4 169 3 246 1 12 1 215 1 
160 1 161 1 299 1 106 1 203 1 44 1 108 1 164 2 303 1 321 1 169 1 304 2 114 1 116 1 12 1 179 1 
106 2 203 1 57 1 44 1 164 3 260 1 303 1 321 1 25 1 304 3 169 2 12 2 13 1 
299 1 76 1 44 1 137 1 260 3 139 1 303 1 304 9 195 1 12 2 271 1 13 1 106 2 57 7 203 1 204 2 164 9 25 4 321 1 169 5 114 1 246 1 215 1 33 1 
299 1 76 1 44 1 137 1 260 3 139 1 303 1 304 9 195 1 12 2 271 1 13 1 106 2 57 7 203 1 204 2 164 9 25 4 321 1 169 5 114 1 246 1 215 1 33 1 
125 1 166 1 188 1 
10 1 
48 2 64 2 222 2 85 2 107 2 289 1 39 2 100 1 
181 1 0 1 222 2 75 1 231 1 48 2 191 1 85 2 7 1 196 1 97 1 100 1 53 1 107 2 317 1 318 1 282 2 206 1 208 2 61 1 322 1 64 3 324 1 247 1 69 1 253 2 39 3 128 1 130 1 
48 1 64 1 222 1 85 1 17 1 194 1 86 1 107 1 39 1 100 1 
256 1 226 1 258 1 166 1 188 1 144 1 48 1 64 1 145 1 86 1 172 1 236 1 66 1 39 1 
222 1 107 1 226 1 258 1 166 1 188 1 144 2 48 1 64 1 145 2 85 1 86 1 236 1 66 1 39 1 
47 1 30 1 145 1 285 1 144 1 
47 1 30 1 145 2 307 1 205 1 166 1 188 1 144 2 
47 1 145 1 144 1 
222 1 201 1 17 1 107 1 144 1 48 1 30 1 64 1 145 1 85 1 194 1 86 1 100 1 39 1 
166 1 
47 1 30 1 145 2 205 1 250 1 166 1 188 1 144 2 
132 1 314 1 1 2 136 1 205 1 23 1 166 1 188 1 144 5 47 2 30 2 145 5 8 1 126 1 217 1 154 1 153 2 95 2 101 1 
289 1 125 1 
222 1 107 1 190 1 48 2 64 2 85 1 289 2 174 1 39 2 
251 1 157 1 
75 1 317 1 282 1 208 1 322 1 191 1 64 1 289 1 247 1 149 1 7 1 196 1 97 1 253 1 39 1 53 1 
131 1 48 3 64 3 222 3 85 1 107 3 289 1 39 3 
48 1 64 1 222 1 17 1 86 1 107 1 39 1 
48 1 64 1 222 1 85 1 86 1 107 1 174 1 39 1 190 1 
131 1 181 1 0 1 222 3 75 1 226 1 258 1 144 1 48 3 191 1 85 2 145 1 86 1 7 1 196 1 236 1 237 1 97 1 100 1 53 1 102 1 107 3 317 1 318 1 282 1 206 1 207 1 208 1 322 1 64 4 247 1 66 1 174 1 69 1 253 1 128 1 39 4 130 1 
48 2 131 1 64 2 222 1 107 1 289 1 120 1 172 1 39 2 
102 1 131 2 222 3 226 1 107 3 258 1 166 1 207 1 144 1 48 3 64 3 85 1 145 1 86 1 148 1 236 1 66 1 174 1 39 3 
131 1 180 1 222 2 107 2 48 2 64 2 85 1 174 1 157 1 39 2 
75 1 317 1 282 1 208 1 322 1 191 1 64 1 289 1 247 1 7 1 196 1 97 1 253 1 39 1 53 1 
75 1 317 1 282 1 208 1 322 1 64 1 289 1 247 1 7 1 292 1 97 1 253 1 176 1 39 1 53 1 
181 1 0 1 89 1 78 1 69 1 36 1 218 1 38 1 130 1 
48 1 73 1 64 1 222 1 86 1 107 1 236 1 39 1 
102 1 131 1 222 1 75 1 107 1 317 1 282 1 208 1 322 1 48 1 191 1 64 2 247 1 7 1 196 1 97 1 157 1 253 1 39 2 53 1 
131 2 102 1 222 4 107 4 276 1 280 1 48 5 64 5 85 1 120 1 289 1 172 1 174 1 39 5 
73 1 48 2 64 2 222 2 17 1 86 1 107 2 39 2 
3 1 55 1 
3 1 55 1 
235 1 290 1 
235 1 290 1 
235 1 290 1 
3 1 55 1 284 1 
3 1 55 1 155 1 
3 2 184 1 55 2 315 1 235 1 290 1 
3 1 55 1 284 1 
3 1 55 1 284 1 
3 1 55 1 294 1 
3 1 55 1 294 1 
3 1 55 1 294 1 
273 1 192 1 3 1 55 1 122 1 238 1 
273 1 192 1 3 1 145 1 55 1 122 1 141 1 238 1 144 1 
299 1 76 1 114 1 
161 1 299 1 114 1 
265 1 161 1 299 3 76 2 142 1 168 1 
265 1 161 1 299 2 76 1 142 1 264 1 
265 1 161 1 299 2 76 1 142 2 
1 1 302 1 78 1 188 1 144 5 189 1 47 1 50 2 145 5 89 1 269 2 10 2 151 1 95 1 153 1 54 1 314 3 162 2 20 1 205 1 281 1 166 1 112 1 27 1 170 1 245 1 323 1 30 4 118 1 126 2 217 1 
1 2 259 1 78 1 188 1 193 3 85 1 194 1 86 1 89 1 10 3 95 2 100 1 199 1 201 1 17 1 107 1 205 1 20 1 281 1 285 3 112 1 27 2 30 5 118 1 121 1 126 2 217 1 293 1 39 1 222 1 302 1 144 7 48 1 47 4 50 2 145 7 151 1 154 1 153 2 314 3 162 2 166 3 64 1 
222 1 1 1 302 1 188 1 189 1 144 3 48 1 50 1 85 1 145 3 194 1 86 1 269 1 10 2 151 1 95 1 153 1 154 1 100 1 199 1 201 1 17 1 314 1 107 1 162 1 20 1 166 2 112 1 27 1 64 1 30 2 323 1 118 1 126 2 39 1 
314 1 1 1 162 1 20 1 302 1 261 1 166 1 112 1 27 1 189 1 144 2 50 1 30 1 323 1 145 2 118 1 269 1 10 2 126 2 151 1 154 1 153 1 95 1 199 1 
247 1 77 1 125 1 
42 1 247 1 
214 1 
247 1 53 1 
247 3 317 1 77 2 65 1 37 1 53 1 
247 1 317 1 53 1 
247 1 158 1 
300 1 59 1 301 1 325 1 
300 1 59 1 301 1 325 1 
300 1 59 1 301 1 325 1 67 1 
300 1 59 1 301 1 325 1 
300 1 59 1 301 1 325 1 
299 2 135 1 76 1 44 1 2 1 303 1 80 1 304 2 93 1 12 1 97 1 161 1 106 1 57 1 203 1 163 1 22 1 282 1 241 1 164 2 208 1 109 1 321 1 168 1 169 1 114 1 322 1 119 1 175 1 253 1 
299 2 135 1 76 1 44 1 303 1 80 1 304 3 234 1 93 1 12 1 97 1 161 1 106 1 57 2 163 1 22 1 282 1 241 1 164 3 208 1 60 1 109 1 168 1 321 1 169 1 114 1 322 1 119 1 249 1 253 1 
299 2 135 1 76 1 44 1 303 1 80 1 304 2 93 1 97 1 161 1 57 2 22 1 282 1 164 2 208 1 60 1 109 1 321 1 168 1 169 1 114 1 322 1 119 1 249 1 253 1 
135 2 227 1 187 1 140 1 304 1 82 1 234 1 7 1 12 1 97 1 53 1 104 1 106 1 22 2 282 1 164 1 208 1 321 2 322 1 244 1 119 2 247 1 253 1 
299 2 135 1 76 1 2 1 80 1 304 1 93 1 12 1 97 1 161 1 106 1 203 1 163 1 22 1 282 1 241 1 164 1 208 1 60 1 109 1 321 1 168 1 114 1 322 1 119 1 253 1 
14 1 
255 1 256 1 74 1 1 1 258 1 263 1 86 1 7 2 9 1 270 2 10 1 95 1 97 1 99 1 199 1 274 1 104 1 205 2 21 1 282 2 208 2 286 1 24 1 211 1 28 1 117 1 124 1 126 2 217 1 39 1 220 1 223 1 226 1 302 1 144 4 47 3 48 1 145 4 308 1 236 1 153 1 53 1 314 2 322 1 244 1 64 1 247 1 172 1 66 1 68 1 253 2 
274 1 256 1 226 1 258 1 263 1 286 1 144 2 48 1 64 1 145 2 86 1 308 1 172 1 270 2 236 1 124 1 66 1 39 1 220 1 
256 1 226 1 258 1 263 1 188 1 144 3 47 1 48 1 145 3 86 1 308 1 236 1 270 3 205 1 165 1 166 1 286 1 64 1 172 1 124 1 250 1 66 1 39 1 220 1 
274 1 223 1 256 1 226 1 258 1 263 1 286 1 144 2 48 1 64 1 145 2 86 1 308 1 172 1 270 2 236 1 124 1 66 1 39 1 220 1 
274 1 223 1 256 1 226 1 258 1 205 1 263 1 286 1 144 3 47 1 48 1 64 1 145 3 86 1 147 1 308 1 172 1 270 2 236 1 250 1 124 1 66 1 39 1 220 1 
223 1 255 1 256 1 1 1 226 1 258 1 263 1 144 3 47 1 48 1 145 3 86 1 308 1 9 1 236 1 270 2 10 1 95 1 153 1 199 1 274 1 314 1 205 1 286 1 211 1 28 1 64 1 117 1 172 1 124 1 66 1 126 1 68 1 217 1 39 1 220 1 
223 1 255 1 256 1 1 1 226 1 258 1 263 1 144 3 47 1 48 1 266 1 145 3 86 1 87 1 91 1 308 1 9 1 236 1 270 2 153 1 95 1 199 1 274 1 314 1 205 1 286 1 211 1 28 1 64 1 117 1 172 1 124 1 66 1 126 1 68 1 217 1 39 1 220 1 
223 1 255 1 256 1 1 1 226 1 258 1 263 1 144 3 47 1 48 1 266 1 145 3 86 1 87 1 91 1 308 1 9 1 236 1 270 2 153 1 95 1 199 1 274 1 314 1 205 1 286 1 211 1 28 1 64 1 117 1 172 1 124 1 66 1 126 1 68 1 217 1 39 1 220 1 
223 1 256 1 1 1 226 1 258 1 263 1 144 3 47 1 48 1 145 3 86 1 5 1 91 1 308 1 9 1 236 1 270 2 10 1 153 1 95 1 274 1 310 1 314 1 19 1 205 1 286 1 64 1 117 1 172 1 124 1 66 1 126 1 216 1 68 1 217 1 71 1 39 1 220 1 
274 1 223 1 256 1 56 1 226 1 258 1 263 1 286 1 144 2 48 1 64 1 145 2 86 1 308 1 172 1 270 2 236 1 124 1 66 1 39 1 220 1 
274 1 223 1 256 1 56 1 226 1 258 1 263 1 286 1 144 2 48 1 64 1 145 2 86 1 308 1 172 1 270 2 236 1 124 1 66 1 39 1 220 1 
256 1 1 1 226 1 258 1 263 1 144 2 48 1 145 2 86 1 308 1 309 1 9 1 236 1 270 2 10 1 95 1 153 1 314 1 286 1 64 1 117 1 172 1 124 1 66 1 126 1 216 1 68 1 217 1 71 1 39 1 220 1 
72 1 40 1 0 1 279 1 283 1 125 1 69 1 218 1 177 1 130 1 
181 1 0 1 313 1 288 1 69 1 232 1 320 1 130 1 
102 1 131 1 181 1 222 1 0 1 107 1 206 1 232 1 287 1 48 1 64 1 69 1 39 1 130 1 
102 1 131 1 181 1 222 1 0 1 107 1 282 1 206 1 208 1 232 1 210 1 48 1 64 1 7 1 69 1 253 1 39 1 130 1 
0 1 300 1 312 1 18 1 7 1 282 1 69 1 208 1 253 1 81 1 130 1 
0 1 222 1 300 1 107 1 20 1 232 1 48 1 64 1 85 1 118 1 151 1 174 1 69 1 98 1 39 1 130 1 
0 1 300 1 115 1 20 1 151 1 69 1 218 1 130 1 
181 1 0 1 89 1 78 1 69 1 218 1 38 1 130 1 
0 1 300 1 118 1 20 1 151 1 69 1 218 1 130 1 
0 1 300 1 115 1 312 1 20 1 151 1 69 1 130 1 
181 1 0 1 312 1 89 1 78 1 69 1 38 1 130 1 
0 1 300 1 312 1 118 1 20 1 151 1 69 1 130 1 
0 1 300 1 118 1 20 1 151 1 69 1 130 1 
181 1 0 1 75 1 317 1 282 1 206 1 208 1 322 1 191 1 64 1 247 1 7 1 196 1 69 1 97 1 253 1 39 1 128 1 130 1 53 1 
181 1 0 1 75 1 317 1 282 1 206 1 208 1 322 1 64 1 247 1 7 1 92 1 69 1 292 1 97 1 253 1 176 1 39 1 130 1 53 1 
0 1 300 1 118 1 20 1 151 1 69 1 232 1 130 1 
0 1 300 1 75 1 317 1 20 1 282 1 208 1 322 1 191 1 64 1 118 1 247 1 196 1 151 1 69 1 175 1 97 1 253 1 39 1 128 1 130 1 53 1 178 1 
0 1 222 1 300 1 107 1 278 1 20 1 232 1 48 1 64 1 85 1 118 1 151 1 174 1 69 1 39 1 130 1 
181 1 182 1 298 1 84 1 316 1 240 1 291 1 69 1 
181 1 182 1 298 1 84 1 316 1 240 1 291 1 69 1 
181 1 182 1 298 1 84 1 316 1 240 1 291 1 69 1 
181 1 182 1 298 1 84 1 316 1 240 1 291 1 69 1 
181 1 182 1 298 1 84 1 316 1 240 1 291 1 69 1 
0 1 300 1 18 1 228 1 232 1 81 1 48 2 64 2 305 1 306 1 326 1 69 1 39 2 130 1 
161 1 299 2 183 1 135 1 76 1 282 2 241 1 60 1 208 2 109 1 168 1 80 1 114 1 322 1 83 1 4 1 175 1 97 1 253 2 
161 1 299 2 135 1 185 1 76 1 282 1 241 1 60 1 208 1 109 1 168 1 80 1 114 1 322 1 4 1 97 1 253 1 
104 1 183 1 135 1 227 1 282 1 208 1 322 1 244 1 247 1 7 1 97 1 198 1 253 1 53 1 
161 1 299 2 183 1 135 1 76 1 282 1 241 1 60 1 208 1 109 1 168 1 80 1 114 1 322 1 83 1 4 1 97 1 253 1 
29 1 
314 1 23 1 125 1 126 1 166 1 188 1 101 1 
255 1 1 1 188 1 144 1 47 1 145 1 10 1 95 1 153 1 199 1 314 1 205 1 166 1 28 1 211 1 126 1 217 1 
1 3 77 2 78 2 188 1 89 2 7 1 10 6 95 3 97 1 96 2 205 3 20 2 21 1 282 1 208 1 111 1 118 2 126 7 217 3 35 2 37 1 221 2 42 3 226 2 302 2 46 2 144 5 47 5 50 6 145 5 151 2 153 3 53 1 311 2 314 8 317 1 162 6 166 1 243 1 322 2 247 6 248 2 252 1 253 1 
222 1 41 1 1 1 302 1 45 1 188 1 48 1 50 2 85 1 146 1 194 1 86 1 10 1 197 1 95 1 153 1 100 1 200 1 201 1 17 1 314 2 107 1 162 2 21 1 166 1 320 1 64 1 173 1 126 2 217 1 39 1 
72 1 41 1 40 1 222 1 1 1 78 1 45 2 144 1 48 1 266 1 145 1 85 1 194 1 86 1 95 1 153 1 156 1 100 1 201 1 17 1 314 2 107 1 20 2 64 1 126 2 217 1 39 1 219 1 
314 1 1 1 23 1 166 1 188 1 126 1 217 1 153 1 95 1 101 1 
314 2 162 2 20 1 78 1 50 2 118 1 89 1 10 2 151 1 126 2 
47 1 145 1 205 1 166 1 188 1 144 1 
74 1 1 2 302 2 143 1 144 3 47 4 267 1 145 3 7 2 154 1 95 2 153 2 97 1 99 1 53 1 104 1 314 2 275 2 277 1 21 2 205 2 282 4 208 4 322 1 244 1 247 1 126 2 217 1 253 4 
181 1 0 1 222 2 75 1 107 2 317 1 318 1 282 1 206 1 208 1 322 1 48 2 191 1 64 3 85 2 247 1 7 1 196 1 69 1 97 1 253 1 128 1 100 1 39 3 130 1 53 1 
314 1 1 1 21 1 302 1 166 1 188 1 50 1 10 1 126 1 217 1 153 1 95 1 
192 1 238 1 
192 1 238 1 
192 1 238 1 
192 1 238 1 
192 1 238 1 
192 1 238 1 
192 1 238 1 
192 1 238 1 
3 1 55 1 
181 1 200 1 84 1 173 1 69 1 320 1 
181 1 200 1 84 1 268 1 173 1 69 2 320 1 
181 1 200 1 84 1 173 1 69 1 320 1 
181 1 200 1 84 1 173 1 69 1 320 1 
181 1 200 1 84 1 173 1 69 1 320 1 
181 1 200 1 84 1 173 1 69 1 320 1 
181 1 200 1 84 1 268 1 173 1 69 2 320 1 
181 1 200 1 84 1 6 1 173 1 69 2 320 1 
72 1 40 1 279 1 283 1 177 1 
181 1 200 1 84 1 6 1 173 1 69 2 320 1 
72 1 40 1 212 1 279 1 283 1 69 2 177 1 
72 1 40 1 279 1 283 1 125 1 177 1 
300 1 118 1 268 1 20 1 151 1 69 1 
181 1 200 1 320 1 
181 1 313 1 320 1 
181 1 320 1 
300 1 146 1 
181 1 221 1 
181 1 200 1 84 1 173 1 69 1 320 1 
300 1 20 1 156 1 
181 1 70 1 
72 1 40 1 177 1 219 1 
300 1 84 1 20 1 151 1 69 1 
300 1 84 1 118 1 20 1 151 1 69 1 
72 1 40 1 84 1 69 1 177 1 
181 1 200 1 84 1 268 1 6 1 230 1 69 3 320 1 
48 1 15 1 64 1 289 1 120 1 172 1 39 1 
133 1 15 1 16 1 58 1 209 1 48 1 62 1 64 1 289 1 120 1 172 1 39 1 
322 1 244 1 104 1 247 1 7 1 125 1 282 1 97 1 208 1 253 1 53 1 
131 1 222 1 75 1 107 1 317 1 282 1 208 1 322 1 48 1 191 1 64 2 289 1 247 1 7 1 97 1 253 1 39 2 53 1 
131 1 222 1 75 1 258 1 233 1 48 2 191 1 86 1 236 1 97 1 158 1 53 2 275 1 107 2 317 2 282 1 208 1 322 1 64 2 289 1 247 3 253 1 39 2 
131 1 222 1 75 1 258 1 233 1 48 2 86 1 236 1 97 1 159 1 158 1 53 2 275 1 107 2 317 2 282 2 208 2 322 1 64 2 289 1 247 3 176 1 253 2 39 2 
42 1 226 1 77 1 233 1 188 1 144 2 47 1 145 2 7 1 97 1 159 1 158 1 53 1 239 1 275 1 202 1 317 1 282 3 166 1 208 3 322 1 247 4 253 3 
42 1 226 1 275 1 317 1 77 1 282 3 166 1 208 3 233 1 188 1 46 1 144 2 322 1 47 1 145 2 247 4 7 1 97 1 253 3 159 1 158 1 53 1 
322 1 224 1 282 1 97 1 208 1 253 1 
103 1 257 1 105 1 224 1 317 1 229 1 282 6 110 1 60 1 208 6 61 1 322 3 31 1 247 3 7 2 51 1 97 2 253 5 37 1 53 2 
72 1 131 1 40 1 0 2 222 1 75 1 79 1 232 1 48 1 191 1 196 1 97 1 53 1 107 1 317 1 279 1 283 1 282 1 208 1 322 1 64 2 247 1 326 1 175 1 69 2 253 1 177 1 39 2 128 1 130 2 178 1 
42 1 1 2 226 1 77 1 188 1 46 1 144 3 47 2 145 3 7 1 95 2 153 2 96 1 101 1 311 1 314 1 277 1 205 1 23 1 282 1 166 1 208 1 30 1 247 2 248 1 126 1 217 2 253 1 
322 2 224 1 247 2 317 1 77 1 282 2 252 1 175 1 97 1 208 2 37 1 253 2 53 1 
104 1 282 4 208 4 322 1 244 1 90 1 247 1 7 1 175 1 97 1 253 4 159 1 53 1 
297 1 103 1 275 1 43 1 317 1 229 1 282 2 186 1 208 2 322 2 247 1 97 1 253 2 53 1 
322 1 161 1 299 1 7 1 282 1 97 1 109 1 208 1 253 1 114 1 
257 1 282 2 208 2 60 1 322 1 247 1 175 1 97 1 253 2 295 1 53 1 
104 1 105 1 257 1 275 1 282 5 208 5 110 1 322 2 244 1 90 1 247 3 7 1 175 1 97 2 253 4 53 2 
104 1 257 1 275 1 282 5 208 5 110 1 322 2 244 1 90 1 247 3 7 1 175 1 127 1 97 2 253 4 53 2 
131 1 222 1 75 1 107 1 317 1 282 1 208 1 322 1 48 1 64 2 289 1 247 1 7 1 97 1 253 1 176 1 39 2 53 1 
103 1 275 1 317 1 229 1 282 1 208 1 322 2 247 1 51 1 97 1 253 1 37 1 53 1 
228 1 262 1 48 1 49 1 64 1 305 1 306 1 94 1 39 1 
88 1 262 1 167 1 
49 1 289 1 138 1 94 1 262 1 
226 1 258 1 166 1 138 2 207 1 262 1 167 1 188 1 144 2 49 2 30 1 145 2 86 1 289 1 88 1 236 1 66 1 152 1 94 2 
44 1 125 1 303 1 169 1 
106 1 44 1 164 1 12 1 303 1 169 1 304 1 
22 1 321 1 304 1 
106 1 203 1 44 1 319 1 164 3 303 1 169 1 304 3 171 1 12 1 129 1 179 2 
106 1 57 1 44 1 204 1 164 2 12 1 303 1 169 1 304 2 
299 1 106 1 203 1 76 1 164 1 25 1 304 1 169 1 114 1 12 1 215 1 
106 1 203 1 164 1 12 1 303 1 169 1 304 1 
106 1 203 1 44 1 164 1 12 1 303 2 304 1 
106 2 203 1 164 2 303 1 169 1 304 2 150 1 32 1 12 2 34 1 
106 1 203 1 57 2 44 1 137 1 164 3 260 1 303 1 25 1 304 3 169 2 195 1 12 1 
161 1 299 2 106 1 203 1 57 1 76 1 44 1 164 2 303 1 113 1 168 1 169 1 304 2 114 1 12 1 
106 2 203 1 57 2 44 1 204 1 164 4 260 1 139 1 303 1 25 1 304 4 169 2 12 2 
106 1 203 1 44 1 164 1 12 1 303 1 169 1 304 1 
106 1 57 2 44 2 319 1 242 1 164 4 260 1 303 2 25 1 304 4 169 3 171 1 12 1 179 1 
106 1 203 1 57 1 44 1 164 2 303 1 169 1 304 2 213 1 12 1 33 1 254 1 
106 1 203 1 44 1 319 1 164 3 303 1 169 1 304 3 171 2 12 1 327 1 179 2 
296 2 134 1 272 1 169 2 
106 1 203 1 123 1 164 1 12 1 304 1 
106 1 57 1 203 1 44 1 137 1 164 2 12 1 303 1 169 1 304 2 
26 1 
106 1 203 1 44 1 164 1 12 1 303 1 169 1 304 1 
106 1 57 1 203 1 44 1 137 1 164 3 303 1 304 3 169 1 12 1 179 1 
242 1 260 1 25 1 169 1 
303 1 169 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (153,274) 240 (38,349) (38,349) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (153,274) 240 (38,349) (38,349) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (153,274) 240 (38,349) (38,349) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (153,274) 240 (38,349) (38,349) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 57 362 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 74 242 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 74 87 61 136 345 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 74 87 61 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 74 87 61 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 74 87 61 136 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 74 87 61 136 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (203,241) 246 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 287 8 256 78 98 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 287 8 256 78 98 257 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 287 8 256 78 98 257 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 351 278 78 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (203,241) 246 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 287 8 256 78 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 287 8 256 78 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 287 8 256 78 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 57 (23,342) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 57 (75,208) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (203,241) (203,241) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 57 (75,208) 41 131 (42,319) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (203,241) 246 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (203,241) (203,241) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 1
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
240 1 38 1 22 1 349 1 51 1 214 1 281 1 274 1 70 1 43 1 227 1 
240 1 38 1 22 1 349 1 51 1 214 1 281 1 274 1 70 1 43 1 227 1 
240 1 38 1 22 1 349 1 51 1 214 1 281 1 274 1 70 1 43 1 227 1 
240 1 38 1 22 1 349 1 51 1 214 1 281 1 274 1 70 1 43 1 227 1 
16 3 51 1 322 1 321 1 214 4 261 1 216 2 100 1 366 1 36 1 88 1 155 1 69 1 70 1 43 1 270 2 269 3 227 4 
51 1 322 1 214 1 261 1 273 1 122 1 88 1 22 1 56 1 281 1 69 1 184 1 70 1 43 1 227 1 
16 1 51 2 322 1 214 3 321 1 261 1 216 1 153 1 281 1 70 1 43 2 269 2 227 3 
51 2 322 1 321 3 53 1 36 1 88 1 6 1 153 1 155 1 281 1 43 2 16 7 335 1 214 9 261 1 216 4 100 1 366 1 69 1 70 1 317 1 269 5 270 2 227 9 
51 2 322 1 321 3 53 1 36 1 88 1 6 1 153 1 155 1 281 1 43 2 16 7 335 1 214 9 261 1 216 4 100 1 366 1 69 1 70 1 317 1 269 5 270 2 227 9 
148 1 247 1 275 1 
247 1 364 2 85 1 
55 1 347 2 27 2 28 2 231 2 222 2 35 1 177 2 
27 3 28 2 231 2 72 1 356 1 173 2 358 1 32 1 324 1 35 1 252 2 177 2 202 1 55 1 154 1 75 1 238 1 334 1 17 1 289 1 163 1 215 2 101 1 312 2 311 1 368 1 245 1 314 1 347 2 67 1 222 3 316 1 169 1 297 2 107 1 373 1 248 1 
347 1 0 1 27 1 28 1 231 1 222 1 296 1 35 1 65 1 177 1 
117 1 210 1 27 1 71 1 291 1 177 1 148 1 9 1 247 1 222 1 182 1 296 1 265 1 143 1 
117 2 210 1 27 1 231 1 28 1 71 1 177 1 347 1 148 1 9 2 247 1 222 1 182 1 296 1 265 1 
117 1 9 1 73 1 135 1 207 1 
117 2 148 1 9 2 247 1 73 1 168 1 135 1 323 1 
117 1 9 1 135 1 
117 1 0 1 27 1 231 1 28 1 73 1 35 1 89 1 65 1 177 1 347 1 9 1 222 1 296 1 
247 1 
117 2 148 1 9 2 247 1 73 1 168 1 135 1 165 1 
117 5 73 2 145 2 20 1 337 1 135 2 302 1 34 1 192 2 194 1 370 1 7 1 148 1 9 5 247 1 126 1 168 1 129 2 13 1 
55 1 275 1 
27 2 231 1 28 1 310 1 177 2 361 1 347 1 55 2 222 2 
112 1 272 1 264 1 
17 1 27 1 259 1 72 1 289 1 215 1 173 1 163 1 101 1 202 1 55 1 222 1 75 1 297 1 373 1 248 1 
276 1 55 1 347 1 277 2 18 1 27 5 28 4 231 4 222 5 291 1 86 1 15 1 361 1 177 5 
27 2 28 2 231 2 222 2 94 1 296 1 65 1 177 2 
17 1 18 1 27 2 289 1 72 1 231 1 28 1 163 1 215 1 173 1 101 1 177 1 202 1 277 1 112 1 75 1 222 2 297 1 373 1 248 1 
347 1 55 1 277 1 27 3 28 3 231 3 222 3 177 3 
27 1 28 1 231 1 222 1 296 1 65 1 177 1 
347 1 27 1 28 1 231 1 222 1 296 1 310 1 177 1 361 1 
27 4 72 1 28 3 231 3 71 1 173 1 324 1 35 1 252 2 361 1 177 3 202 1 55 1 154 1 277 1 9 1 75 1 182 1 238 1 334 1 117 1 17 1 18 1 210 1 289 1 163 1 215 1 101 1 99 1 312 1 311 1 244 1 368 1 314 1 347 2 222 4 316 1 296 1 265 1 169 1 297 1 107 1 373 1 248 1 
276 1 55 1 277 1 27 2 28 1 231 1 222 2 291 1 177 2 
117 1 18 1 210 1 27 3 71 1 231 3 28 3 99 1 361 1 177 3 347 1 277 2 9 1 247 1 222 3 296 1 182 1 265 1 97 1 
27 2 231 2 28 2 272 1 361 1 177 2 277 1 347 1 112 1 222 2 
17 1 27 1 72 1 289 1 215 1 173 1 163 1 101 1 202 1 55 1 222 1 75 1 297 1 373 1 248 1 
17 1 27 1 72 1 289 1 215 1 173 1 163 1 101 1 202 1 55 1 23 1 293 1 222 1 297 1 373 1 
197 1 2 1 272 2 252 2 279 1 112 2 280 1 114 1 238 1 334 2 287 1 218 1 290 1 340 1 311 1 312 4 262 1 264 2 314 1 67 2 316 1 169 1 226 1 107 1 
27 1 28 1 231 1 222 1 94 1 296 1 265 1 177 1 
26 1 157 1 
26 1 157 1 
271 1 328 1 
271 1 328 1 
271 1 328 1 
26 1 236 1 157 1 
26 1 236 1 157 1 
26 1 236 1 157 1 
26 1 213 1 157 1 
271 1 328 1 26 2 332 1 48 1 157 2 
26 1 372 1 157 1 
26 1 372 1 157 1 
26 1 372 1 157 1 
151 1 26 1 171 1 27 2 28 2 231 2 54 1 177 2 55 1 9 1 113 1 140 1 157 1 115 1 141 1 333 1 117 1 213 1 217 1 166 1 346 1 103 1 222 2 267 1 
160 1 333 3 151 2 117 2 26 2 171 2 211 1 83 1 217 2 54 1 330 1 9 2 294 1 247 1 331 2 332 1 282 1 267 2 157 2 
69 1 100 1 88 1 
69 1 184 1 88 1 
162 1 69 3 100 2 184 1 343 1 303 1 
162 1 127 1 69 2 100 1 184 1 343 1 
162 1 69 2 100 1 184 1 343 2 
2 1 299 1 73 4 135 1 85 1 360 2 7 1 279 1 8 1 9 5 140 1 284 1 117 5 287 1 119 2 145 1 364 3 20 2 338 1 218 1 192 1 369 1 166 1 194 3 346 1 148 1 224 1 247 2 168 1 128 2 129 1 24 1 
50 1 200 1 2 3 73 7 135 6 85 3 360 6 7 1 279 3 8 3 9 9 181 1 305 1 207 5 13 1 189 1 58 1 117 9 287 3 145 2 364 9 20 6 338 1 218 3 192 2 369 2 194 8 346 4 148 1 247 5 168 1 128 6 129 2 24 2 170 5 
299 1 2 1 73 2 85 2 360 2 279 1 9 3 8 1 284 1 13 1 117 3 119 1 287 1 145 1 20 2 364 4 218 1 192 1 369 1 194 3 346 1 148 1 247 3 128 2 129 1 24 1 
200 1 299 1 2 2 73 3 85 3 360 4 279 2 9 4 8 2 284 1 13 1 189 1 58 1 117 4 119 2 287 2 145 1 364 7 20 4 218 2 192 1 369 1 194 5 346 2 148 1 247 4 128 4 129 1 24 1 
57 1 275 1 
17 1 205 1 
90 1 
17 1 289 1 163 1 
17 1 363 1 
17 1 289 1 
362 1 17 1 289 1 163 1 57 1 191 1 
334 3 250 1 2 1 218 1 340 2 233 1 312 7 325 1 67 4 253 1 280 3 223 1 350 1 206 1 237 1 159 2 187 1 
334 3 250 1 2 1 218 1 340 2 233 1 312 7 325 1 67 4 253 1 280 3 223 1 350 1 206 1 237 1 159 2 187 1 
334 3 250 1 2 1 144 1 218 1 340 2 233 1 312 7 325 1 67 4 253 1 280 3 223 1 350 1 206 1 237 1 159 2 187 1 
250 1 84 1 233 1 252 2 325 1 235 1 39 1 278 1 138 1 253 2 280 2 159 1 238 1 187 1 334 3 340 1 219 1 312 6 67 3 223 1 351 1 316 1 169 1 107 1 
334 4 250 1 2 1 218 1 340 3 233 1 312 9 252 4 124 1 235 1 67 5 253 1 280 4 350 1 223 1 316 2 283 1 169 2 206 1 237 1 159 2 107 2 238 2 187 1 
72 1 51 1 322 1 320 1 173 1 110 1 88 1 303 1 179 1 281 1 184 1 12 1 158 1 43 1 186 1 16 1 121 1 215 1 214 2 261 1 100 1 146 1 193 1 353 1 69 2 297 1 70 1 269 1 373 1 227 2 
72 1 51 1 322 1 320 1 173 1 110 1 88 1 303 1 91 1 179 1 281 1 184 1 12 1 158 1 43 1 186 1 16 2 44 1 288 1 121 1 215 1 214 3 261 1 100 1 353 1 69 2 297 1 269 1 373 1 227 3 
72 1 322 1 320 1 173 1 88 1 303 1 281 1 184 1 12 1 158 1 186 1 16 2 44 1 288 1 121 1 215 1 214 2 261 1 100 1 353 1 69 2 297 1 269 1 373 1 227 2 
228 1 72 1 51 1 172 1 320 2 173 1 202 1 91 1 281 2 95 1 12 2 43 1 96 1 17 1 121 2 289 1 215 1 214 1 45 1 167 1 297 1 373 1 227 1 
44 1 72 1 121 1 51 1 214 1 215 1 173 1 320 1 100 1 146 1 110 1 88 1 303 1 179 1 281 1 69 2 353 1 184 1 158 1 297 1 12 1 70 1 373 1 43 1 186 1 227 1 
365 1 
172 1 173 2 175 1 135 2 177 1 7 1 9 3 10 1 182 1 96 1 143 1 17 1 289 1 145 1 242 1 20 2 21 1 291 1 341 1 192 1 194 2 292 1 296 1 24 1 297 2 196 2 27 1 72 1 71 1 29 1 202 2 74 1 304 1 204 1 117 3 210 1 215 2 164 1 313 1 263 1 222 1 168 1 265 1 129 1 373 1 
198 1 27 1 71 1 29 1 135 2 177 1 9 3 182 1 10 1 204 1 143 1 117 3 210 1 165 1 291 1 341 1 263 1 222 1 168 1 296 1 265 1 196 2 
27 1 71 1 29 1 135 1 177 1 9 3 182 1 10 1 204 1 143 1 286 1 117 3 210 1 165 1 291 1 341 1 263 1 148 1 222 1 247 1 168 1 296 1 265 1 196 3 
198 1 27 1 71 1 29 1 135 2 177 1 9 3 182 1 10 1 204 1 143 1 286 1 117 3 210 1 120 1 165 1 291 1 341 1 263 1 148 1 222 1 247 1 168 1 296 1 265 1 196 3 
198 2 27 1 71 1 29 1 135 3 136 1 87 1 177 1 74 1 304 1 7 1 9 3 10 1 204 1 182 1 143 1 117 3 210 1 120 2 145 1 164 1 20 1 61 1 165 1 21 1 291 1 341 1 192 1 345 1 194 1 263 1 66 1 222 1 168 1 296 1 265 1 129 1 196 2 
27 1 71 1 29 1 177 1 74 1 304 1 7 1 9 2 10 1 204 1 182 1 143 1 117 2 210 1 145 1 164 1 20 1 21 1 291 1 341 1 192 1 194 1 263 1 222 1 296 1 265 1 129 1 196 2 
27 1 71 1 29 1 87 1 177 1 74 1 304 1 7 1 9 2 182 1 10 1 204 1 143 1 117 2 210 1 145 1 164 1 20 1 61 1 21 1 291 1 341 1 192 1 194 1 263 1 66 1 222 1 296 1 265 1 129 1 196 2 
27 1 71 1 29 1 87 1 177 1 74 1 304 1 7 1 9 2 182 1 10 1 204 1 143 1 117 2 210 1 145 1 164 1 20 1 61 1 21 1 291 1 341 1 192 1 194 1 263 1 66 1 222 1 296 1 265 1 129 1 196 2 
198 2 27 1 71 1 29 1 135 4 87 1 177 1 180 2 74 1 304 2 7 1 9 4 182 1 10 1 204 1 286 2 143 1 117 4 210 1 120 2 19 1 145 1 364 2 164 2 20 1 291 1 341 1 192 1 123 2 194 1 263 1 148 1 247 1 222 1 168 2 296 1 265 1 149 1 129 1 196 4 318 1 
198 1 27 1 71 1 29 1 135 1 136 1 87 1 177 1 74 1 304 1 7 1 9 2 182 1 10 1 204 1 143 1 286 1 117 2 210 1 120 1 145 1 164 1 20 1 61 1 21 1 291 1 341 1 192 1 194 1 263 1 66 1 222 1 296 1 265 1 129 1 196 3 
198 1 27 1 71 1 29 1 135 1 136 1 87 1 177 1 74 1 304 1 7 1 9 2 182 1 10 1 204 1 143 1 286 1 117 2 210 1 120 1 145 1 164 1 20 1 61 1 21 1 291 1 341 1 192 1 194 1 263 1 66 1 222 1 296 1 265 1 129 1 196 3 
135 4 177 1 180 2 7 1 9 4 182 1 10 1 183 1 143 1 286 2 145 1 20 1 341 1 291 1 192 1 194 1 148 1 247 1 296 1 149 1 196 4 198 2 27 1 71 1 29 1 74 1 304 2 204 1 117 4 210 1 120 2 164 2 364 2 263 1 123 2 222 1 168 2 265 1 129 1 
250 1 2 1 272 1 233 1 252 2 275 1 55 2 112 1 280 2 206 1 237 1 238 1 159 1 334 3 290 1 218 1 340 2 311 1 312 6 264 1 314 1 67 3 350 1 316 1 169 1 107 1 
82 1 134 1 2 2 272 2 32 1 252 4 37 1 55 1 154 1 234 1 39 2 280 1 112 6 8 2 279 1 238 2 334 5 209 1 287 2 218 1 340 1 311 2 312 12 62 1 264 6 314 1 67 7 351 2 296 1 316 2 68 1 169 2 107 2 
27 2 72 1 28 1 231 1 173 1 272 1 32 1 252 2 202 1 177 1 178 1 55 1 277 1 154 1 75 1 238 1 209 1 334 1 17 1 18 1 118 1 289 1 259 1 163 1 215 1 101 1 311 1 312 2 344 1 314 1 67 1 222 2 316 1 169 1 297 1 373 1 107 1 248 1 
2 3 231 1 319 2 173 3 272 7 324 2 233 1 4 1 177 1 137 2 55 2 277 1 8 2 280 8 279 2 237 1 238 3 142 2 334 10 17 2 18 1 287 2 289 2 340 4 101 2 67 10 350 1 297 3 107 3 248 2 250 1 27 3 28 1 72 2 32 1 252 6 202 1 154 1 112 7 75 2 206 1 159 1 308 1 209 1 44 1 215 3 163 2 218 3 311 3 312 20 264 7 221 1 314 3 222 3 223 4 316 3 169 3 49 2 373 2 
25 1 229 1 27 1 28 1 231 1 72 3 172 1 173 7 32 1 252 4 176 1 177 1 326 1 202 2 111 1 277 1 203 1 154 1 254 1 238 2 96 1 334 1 17 4 44 1 289 3 163 1 215 7 290 1 311 2 312 2 193 1 245 1 314 2 348 1 47 1 67 1 246 1 222 1 316 2 352 1 169 2 297 6 373 4 107 2 
27 1 2 1 231 1 28 1 272 1 252 2 361 1 177 1 280 1 112 1 8 1 279 1 238 1 209 1 334 2 287 1 79 1 218 1 340 1 311 1 312 3 264 1 314 1 347 1 67 1 222 1 316 1 169 1 107 1 
287 1 2 1 272 1 290 1 312 2 311 1 252 2 264 1 314 1 67 2 280 1 112 1 223 1 316 1 169 1 226 1 107 1 238 1 
197 1 334 2 272 1 290 1 218 1 340 1 312 2 311 1 252 2 264 1 314 1 280 1 112 1 279 1 316 1 169 1 107 1 238 1 
334 2 287 1 2 1 218 1 272 2 290 1 340 1 312 4 311 1 252 2 264 2 314 1 67 2 279 1 280 2 112 2 8 1 223 1 316 1 169 1 107 1 238 1 
287 1 2 1 272 1 312 2 311 1 252 2 264 1 314 1 67 2 280 1 112 1 223 1 352 1 316 1 169 1 226 1 107 1 238 1 
197 1 334 2 272 1 218 1 340 1 312 2 311 1 252 2 264 1 314 1 280 1 112 1 279 1 352 1 316 1 169 1 107 1 238 1 
334 2 287 1 2 1 218 1 272 2 340 1 312 4 311 1 252 2 264 2 314 1 67 2 279 1 280 2 112 2 8 1 223 1 352 1 316 1 169 1 107 1 238 1 
334 2 287 1 2 1 218 1 272 2 340 1 311 1 312 4 252 2 264 2 314 1 67 2 279 1 280 2 112 2 8 1 223 1 316 1 169 1 107 1 238 1 
27 1 72 1 173 1 32 1 324 1 252 2 202 1 55 1 154 1 75 1 238 1 334 1 17 1 289 1 163 1 215 1 101 1 312 2 311 1 314 1 67 1 222 1 316 1 169 1 297 1 373 1 107 1 248 1 
27 1 72 1 173 1 32 1 252 2 202 1 55 1 154 1 238 1 334 1 17 1 289 1 163 1 215 1 101 1 312 2 311 1 314 1 23 1 67 1 293 1 222 1 316 1 81 1 169 1 297 1 373 1 107 1 
334 2 209 1 287 1 2 1 218 1 272 2 340 1 312 4 311 1 252 2 264 2 314 1 67 2 279 1 280 2 112 2 8 1 223 1 316 1 169 1 107 1 238 1 
2 1 27 1 72 1 173 1 272 2 324 1 252 2 279 1 280 2 112 2 8 1 75 1 238 1 334 2 17 1 287 1 289 1 163 1 215 1 218 1 340 1 101 1 312 4 311 1 193 1 264 2 314 1 67 2 223 1 222 1 316 1 169 1 297 1 373 1 49 1 107 1 248 1 
27 1 2 1 231 1 28 1 272 1 252 2 361 1 177 1 279 1 280 1 8 1 112 1 238 1 334 1 209 1 287 1 218 1 243 1 311 1 312 3 264 1 314 1 347 1 67 2 223 1 222 1 316 1 169 1 107 1 
249 2 2 3 357 4 201 1 252 4 152 1 39 3 278 2 40 1 280 5 8 3 279 3 283 1 238 2 98 1 257 1 77 1 334 13 287 3 78 1 218 3 340 3 312 25 62 1 67 12 223 2 295 1 351 2 316 2 105 1 169 2 107 2 
77 1 257 1 98 2 334 5 287 1 2 1 78 1 357 2 312 11 252 2 64 1 152 2 39 2 278 2 67 6 8 1 351 2 316 1 256 1 283 1 169 1 107 1 238 1 
249 1 2 3 357 4 201 1 252 4 152 2 39 4 278 3 280 2 8 3 279 2 256 1 283 1 238 2 98 1 257 1 77 1 334 13 287 3 78 1 218 2 340 1 312 26 62 1 64 1 67 13 223 1 295 1 351 3 316 2 225 1 105 1 169 2 107 2 
249 1 2 3 357 4 201 1 252 4 152 2 39 4 278 3 280 3 8 3 279 2 256 1 283 1 238 2 98 1 257 1 77 1 334 13 287 3 78 1 218 2 340 2 312 26 62 1 64 1 67 13 223 1 295 1 351 3 316 2 225 1 105 1 169 2 107 2 
249 1 82 1 250 3 2 8 357 4 33 1 233 3 201 1 252 4 152 1 235 1 39 3 278 2 8 5 280 12 279 5 256 1 283 1 206 3 237 3 159 3 238 2 98 1 257 1 77 1 334 24 287 5 78 1 218 8 339 1 340 7 312 52 62 1 64 1 67 28 350 3 223 5 351 3 316 2 105 1 169 2 107 2 
151 1 26 1 171 1 83 1 294 1 139 1 217 1 332 1 157 1 267 1 
213 1 115 1 
151 1 26 1 171 1 230 1 217 1 106 1 157 1 267 1 5 1 
355 1 236 1 
371 1 372 1 48 1 
333 2 117 1 151 1 26 1 171 1 211 1 83 1 217 1 54 1 330 1 9 1 294 1 247 1 331 1 332 1 282 1 267 1 157 1 
333 2 117 1 151 1 26 1 171 1 211 1 83 1 217 1 54 1 330 1 9 1 294 1 247 1 331 1 332 1 282 1 267 1 157 1 
333 2 117 1 151 1 26 1 171 1 211 1 83 1 217 1 54 1 330 1 9 1 294 1 247 1 331 1 332 1 282 1 267 1 157 1 
355 1 236 1 48 1 
355 1 236 1 48 1 
371 1 372 1 
371 1 372 1 48 1 
113 1 141 1 
151 1 26 1 27 2 171 1 231 2 28 2 73 1 177 2 55 1 9 1 113 1 331 1 140 1 157 1 115 1 141 1 333 1 117 1 211 1 213 1 217 1 220 1 166 1 346 1 103 1 222 2 267 1 
229 1 251 1 27 2 72 1 173 2 32 1 3 1 252 2 177 2 154 1 329 1 306 1 14 1 238 1 209 1 334 1 17 1 289 1 215 2 311 1 312 2 245 2 314 1 348 1 67 1 222 2 316 1 169 1 297 2 373 1 107 1 
44 1 72 1 121 1 215 2 173 2 100 1 110 1 88 1 193 1 359 1 303 1 92 1 69 2 353 1 184 1 266 1 297 2 158 1 373 1 
44 1 121 1 72 1 215 1 173 1 100 1 110 1 88 1 359 1 303 1 69 2 353 1 184 1 297 1 158 1 373 1 188 1 
17 1 72 1 289 1 121 1 172 1 215 1 173 1 202 1 147 1 266 1 95 1 297 1 373 1 96 1 
44 1 121 1 72 1 215 1 173 1 100 1 110 1 88 1 359 1 303 1 92 1 69 2 353 1 184 1 266 1 297 1 158 1 373 1 
52 1 
148 1 247 1 20 1 337 1 34 1 275 1 194 1 
7 1 145 1 20 1 21 1 129 1 192 1 194 1 
17 2 72 1 289 1 163 1 145 1 215 1 173 1 260 1 190 1 191 1 192 1 202 1 7 1 205 1 129 1 297 1 373 2 
78 1 145 1 20 1 364 2 85 1 192 1 360 1 194 1 278 1 39 1 7 1 247 1 351 1 128 1 129 1 
108 1 0 1 250 1 27 1 2 2 231 1 28 1 174 1 233 1 35 1 89 1 177 1 7 1 9 1 206 1 117 1 145 1 20 2 218 1 192 1 65 1 194 2 66 1 347 1 222 1 296 1 129 1 132 2 
145 1 337 1 20 1 34 1 192 1 194 1 7 1 148 1 247 1 129 1 
287 2 2 2 174 1 20 5 364 10 218 2 85 5 360 5 194 5 8 2 279 2 247 5 128 5 132 2 142 1 
117 1 148 1 9 1 247 1 168 1 135 1 
199 1 72 2 172 1 173 4 135 4 175 2 326 1 202 2 203 1 327 1 7 1 9 3 254 1 307 2 13 1 96 1 117 3 17 2 289 2 163 1 145 2 215 4 20 2 367 1 192 2 313 1 194 2 292 1 246 1 168 2 129 2 297 4 24 2 373 3 
27 3 28 2 231 2 72 1 173 1 324 1 35 1 252 2 202 1 177 2 55 1 154 1 75 1 238 1 334 1 17 1 289 1 215 1 163 1 101 1 312 1 311 1 368 1 314 1 347 2 222 3 316 1 169 1 297 1 373 1 107 1 248 1 
145 1 364 4 20 2 175 1 85 2 360 2 192 1 194 1 7 1 148 2 247 4 128 2 129 1 24 1 159 1 
161 1 151 1 171 1 
161 1 151 1 171 1 
161 1 151 1 171 1 
151 1 171 1 83 1 195 1 141 1 
151 1 171 1 80 1 
151 1 171 1 80 1 
151 1 171 1 80 1 
151 1 171 1 
26 1 157 1 
334 4 250 1 2 1 218 1 340 2 312 8 233 1 252 4 235 1 67 4 280 3 223 1 350 1 316 2 169 2 206 1 237 1 159 1 107 2 238 2 
334 3 250 1 2 1 218 1 340 2 233 1 312 6 275 1 67 3 280 2 350 1 206 1 237 1 159 1 
334 2 287 1 2 1 218 1 340 1 312 4 252 2 67 2 279 1 280 2 8 1 223 1 316 1 169 1 285 1 107 1 238 1 
334 1 39 1 278 1 67 1 351 1 312 2 
82 1 108 1 134 1 250 2 2 5 233 2 252 2 235 1 39 2 279 2 8 2 280 7 206 2 237 1 159 1 238 1 334 13 287 2 218 5 340 5 62 1 312 26 67 13 350 1 223 2 351 2 316 1 169 1 107 1 
334 1 39 1 312 1 
67 1 351 1 312 1 
334 3 287 1 2 1 218 1 340 2 312 6 252 2 67 3 8 1 280 3 279 1 223 1 316 1 169 1 285 1 238 1 107 1 142 1 
2 2 33 1 252 2 39 1 278 1 8 2 279 2 280 2 283 1 256 1 238 1 334 6 287 2 78 1 218 2 340 1 339 1 312 12 64 1 67 6 223 1 351 1 316 1 169 1 107 1 
334 3 250 1 2 1 218 1 340 1 312 6 233 1 67 3 280 2 223 1 206 1 
334 2 250 1 340 1 233 1 219 1 312 3 252 2 235 1 67 1 280 2 223 1 350 1 316 1 169 1 237 1 107 1 238 1 
108 1 334 5 250 2 2 2 218 2 340 3 233 2 312 10 252 2 67 5 280 5 223 2 316 1 169 1 283 1 206 1 238 1 107 1 
287 1 2 1 312 2 252 2 67 2 280 1 223 1 316 1 283 1 169 1 107 1 238 1 
334 2 287 1 2 1 218 1 340 1 312 4 252 2 67 2 279 1 280 2 8 1 223 1 316 1 283 1 169 1 107 1 238 1 
334 2 250 1 340 1 219 1 312 3 233 1 252 6 235 1 67 1 280 2 223 1 295 1 316 3 283 1 169 3 107 3 238 3 
108 1 250 2 2 2 233 2 252 8 235 1 39 1 278 1 138 1 280 6 283 1 206 1 285 1 237 1 238 4 334 8 218 2 340 3 312 15 219 1 67 7 223 3 350 1 295 1 351 1 316 4 169 4 107 4 
108 1 250 2 2 5 33 1 233 2 252 4 235 1 39 1 278 1 8 2 279 1 280 9 283 1 256 1 206 2 237 1 159 1 238 2 334 10 287 2 78 1 218 4 340 5 339 1 312 24 64 1 67 14 350 1 223 4 351 1 316 2 169 2 107 2 
250 1 2 3 33 1 233 1 252 6 235 1 39 1 278 1 8 2 279 1 280 4 283 1 256 1 206 1 237 1 285 1 159 1 238 3 334 7 287 2 78 1 218 2 339 1 340 3 312 17 64 1 67 10 350 1 223 1 351 1 316 3 169 3 107 3 
334 2 287 1 2 1 78 1 312 5 252 2 64 1 278 1 39 1 67 3 8 1 351 1 316 1 256 1 283 1 169 1 107 1 238 1 
250 1 2 3 33 1 233 1 252 6 235 1 39 1 278 1 8 2 279 1 280 5 283 1 256 1 206 1 237 1 285 1 159 1 238 3 334 7 287 2 78 1 218 2 340 3 339 1 312 17 64 1 67 10 350 1 223 2 351 1 316 3 169 3 107 3 
108 1 250 2 2 5 33 1 233 2 252 4 235 1 39 1 278 1 8 2 279 1 280 9 283 1 256 1 206 2 237 1 159 1 238 2 334 10 287 2 78 1 218 4 340 5 339 1 312 24 64 1 67 14 350 1 223 4 351 1 316 2 169 2 107 2 
2 2 33 1 252 2 39 1 278 1 8 2 279 2 280 2 283 1 256 1 238 1 334 6 287 2 78 1 218 2 340 1 339 1 312 12 64 1 67 6 223 1 351 1 316 1 169 1 107 1 
334 2 287 1 2 1 78 1 312 5 252 4 64 1 278 1 39 1 67 3 8 1 351 1 316 2 256 1 283 1 169 2 285 1 107 2 238 2 
2 3 33 1 252 8 235 2 39 1 278 1 8 3 279 2 280 6 283 1 256 1 238 4 334 7 287 3 78 1 218 2 339 1 340 3 312 16 64 1 67 9 223 3 295 1 351 1 316 4 169 4 107 4 
334 4 250 3 2 1 218 1 340 3 312 7 233 3 67 3 280 6 350 1 223 3 206 1 237 2 
334 2 287 1 2 1 78 1 312 5 252 4 64 1 278 1 39 1 67 3 8 1 351 1 295 1 316 2 256 1 169 2 283 1 107 2 238 2 
276 1 55 1 27 1 222 1 291 1 185 1 177 1 
258 1 27 1 60 1 291 1 177 1 276 1 55 1 222 1 185 1 268 1 133 1 59 1 
17 1 72 1 289 1 172 1 173 1 215 1 297 1 373 1 96 1 275 1 202 1 
17 1 27 2 289 1 231 1 28 1 72 1 163 1 215 1 173 1 101 1 177 1 202 1 55 1 277 1 222 2 75 1 297 1 373 1 
27 2 72 1 28 2 231 1 300 1 173 1 177 2 55 1 277 1 75 1 307 1 363 1 17 3 210 1 289 2 215 1 163 2 101 1 222 2 296 2 68 1 265 1 297 1 373 1 
27 2 72 1 28 2 231 1 300 1 173 1 177 2 55 1 277 1 307 1 363 1 17 3 210 1 289 2 215 1 163 2 101 1 23 1 222 2 296 2 68 1 265 1 297 1 373 1 
117 1 17 1 9 1 173 1 215 1 135 1 57 1 205 1 307 1 342 1 297 1 
117 1 17 1 9 1 173 1 215 1 135 1 57 1 205 1 307 1 297 1 208 1 
72 1 173 1 215 1 297 1 373 1 176 1 
203 1 17 1 241 1 72 1 289 1 163 1 173 1 215 1 254 1 191 1 297 1 373 2 202 1 
250 1 2 1 27 2 72 1 28 1 231 1 319 1 173 1 272 1 324 1 3 1 233 1 252 4 177 1 55 2 277 1 112 1 280 2 75 1 206 1 237 1 159 1 238 2 334 3 209 1 17 1 289 1 163 1 215 1 218 1 340 2 101 1 312 6 311 2 193 1 264 1 314 2 67 3 350 1 222 2 316 2 169 2 297 1 373 1 107 2 49 1 248 1 
117 1 17 1 73 1 173 1 145 1 215 1 135 1 367 1 192 1 202 1 7 1 9 1 41 1 42 1 57 1 205 1 129 1 297 1 131 1 208 1 
17 1 72 1 289 1 163 1 260 1 173 1 215 1 57 1 191 1 297 1 373 2 176 1 
17 1 289 1 72 1 172 1 215 4 173 4 46 1 193 1 202 1 297 4 373 1 96 1 116 1 
221 1 203 1 17 1 72 1 289 1 246 1 163 1 173 1 215 1 254 1 297 1 373 2 326 1 
72 1 173 1 215 1 69 1 184 1 158 1 297 1 88 1 373 1 202 1 
17 1 348 1 329 1 44 1 72 1 289 1 173 2 215 2 297 2 373 1 193 1 
17 3 25 1 289 2 72 2 172 1 215 5 173 5 193 1 202 1 348 1 47 1 307 1 297 4 96 1 373 2 116 1 
17 3 25 1 289 2 72 2 172 1 215 5 173 5 193 1 202 1 348 1 307 1 255 1 297 4 96 1 373 2 116 1 
17 1 27 2 289 1 231 1 28 1 72 1 163 1 215 1 173 1 101 1 177 1 202 1 55 1 277 1 23 1 222 2 297 1 373 1 
17 1 241 1 289 1 72 1 215 1 173 1 163 1 191 1 203 1 254 1 307 1 297 1 373 2 
55 1 301 1 156 1 30 1 150 1 
117 2 210 1 212 1 71 1 73 1 301 2 31 1 30 2 99 1 55 1 148 1 9 2 247 1 76 1 296 1 156 2 182 1 265 1 150 1 
27 1 251 1 222 1 301 1 156 1 306 1 14 1 150 1 177 1 
212 1 76 1 150 1 
322 1 261 1 269 1 275 1 
51 1 322 1 214 1 261 1 269 1 43 1 227 1 
214 1 281 1 12 1 
51 1 232 1 214 3 322 1 261 1 63 2 125 1 70 1 269 1 43 1 354 1 227 3 
16 1 51 1 322 1 214 2 261 1 269 1 270 1 43 1 227 2 
51 1 214 1 216 1 100 1 36 1 88 1 69 1 70 1 43 1 269 1 227 1 
51 1 322 1 214 1 70 1 269 1 43 1 227 1 
51 1 322 2 214 1 261 1 70 1 43 1 227 1 
51 2 322 1 214 2 109 1 315 1 104 1 70 1 269 1 43 2 227 2 
16 2 51 1 322 1 214 3 321 1 261 1 216 1 6 1 70 1 317 1 43 1 269 2 227 3 
16 1 51 1 322 1 214 2 261 1 100 1 88 1 303 1 69 2 11 1 184 1 70 1 269 1 43 1 227 2 
16 2 51 2 322 1 214 4 321 1 261 1 216 1 366 1 70 1 43 2 270 1 269 2 227 4 
51 1 322 1 214 1 261 1 70 1 269 1 43 1 227 1 
16 2 232 1 51 1 322 2 214 4 321 1 261 2 216 1 122 1 63 1 125 1 43 1 269 3 227 4 
16 1 51 1 322 1 214 2 336 1 261 1 53 1 70 1 269 1 43 1 298 1 227 2 
232 1 51 1 214 3 322 1 309 1 261 1 63 2 125 2 70 1 269 1 43 1 227 3 
1 1 93 2 130 1 269 2 
239 1 51 1 214 1 70 1 43 1 227 1 
16 1 6 1 51 1 322 1 214 2 261 1 70 1 269 1 43 1 227 2 
102 1 
51 1 322 1 214 1 261 1 70 1 269 1 43 1 227 1 
16 1 51 1 214 3 322 1 261 1 63 1 6 1 70 1 43 1 269 1 227 3 
321 1 216 1 122 1 269 1 
322 1 269 1 

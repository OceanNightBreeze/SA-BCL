#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 (194,291) (194,291) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 (194,291) (194,291) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 (194,291) (194,291) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 (194,291) (194,291) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 245 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 201 245 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 47 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 298 153 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 327 104 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 232 206 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 14 232 206 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 14 232 203 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 232 206 229 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 232 206 229 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 298 153 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (57,213,330,363) (57,213,330,363) 174 362 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 2 190 1 42 1 144 2 168 1 336 1 213 7 30 2 10 1 290 1 174 1 291 1 342 1 194 1 363 2 217 2 57 2 134 1 266 1 219 6 36 1 201 1 115 1 330 4 
65 2 190 1 217 2 363 2 134 1 57 2 42 1 144 2 266 1 168 1 336 1 219 6 36 1 201 1 213 7 30 2 10 1 290 1 174 1 115 1 291 1 342 1 194 1 330 4 
65 2 190 1 217 2 363 2 134 1 57 2 42 1 144 2 266 1 168 1 336 1 219 6 36 1 201 1 213 7 30 2 10 1 290 1 174 1 115 1 291 1 342 1 194 1 330 4 
65 2 190 1 217 2 363 2 134 1 57 2 42 1 144 2 266 1 168 1 336 1 219 6 36 1 201 1 213 7 30 2 10 1 290 1 174 1 115 1 291 1 342 1 194 1 330 4 
363 1 57 1 134 1 174 1 219 1 330 1 201 1 213 2 
363 1 134 1 57 1 121 1 144 1 48 1 336 1 219 2 170 1 36 1 181 1 213 2 30 1 10 1 115 1 186 1 
65 1 363 2 217 1 134 1 57 2 42 1 144 2 48 1 219 3 181 1 213 3 30 1 330 1 
65 2 363 2 217 2 134 1 57 2 42 1 144 2 266 1 168 1 219 6 201 1 213 7 326 1 30 1 245 1 174 1 330 5 
65 2 363 2 217 2 134 1 57 2 42 1 144 2 266 1 168 1 219 6 201 1 213 7 326 1 30 1 245 1 174 1 330 5 
23 1 341 1 51 1 
23 1 343 2 38 1 
17 2 226 2 319 1 159 2 282 2 71 1 112 2 235 2 
226 2 3 1 43 2 282 3 335 1 211 1 71 1 6 2 285 1 124 1 340 1 289 1 102 2 314 1 78 1 175 1 79 2 32 1 235 2 319 1 56 1 135 1 107 1 198 1 238 1 220 2 112 3 17 2 159 2 349 1 84 1 61 1 275 1 277 1 365 1 367 1 88 1 
319 1 226 1 353 1 282 1 347 1 112 1 17 1 159 1 114 1 235 1 
23 1 142 1 226 1 254 1 353 1 282 2 311 1 230 1 11 1 51 1 195 1 235 1 319 1 236 1 347 2 112 2 17 1 159 2 87 1 114 1 350 1 
23 1 226 2 254 1 353 1 282 2 311 1 230 1 11 1 51 1 235 2 195 2 319 1 236 2 347 2 112 2 17 2 159 2 87 1 114 1 
364 1 231 1 236 1 310 1 195 1 
23 1 226 1 254 1 353 1 282 1 310 1 51 1 195 1 235 1 319 1 236 1 347 1 112 1 364 1 17 1 159 1 114 1 366 1 63 1 
364 1 236 1 195 1 
319 1 226 1 254 1 236 1 353 1 282 1 347 1 310 1 112 1 17 1 159 1 114 1 195 1 235 1 
23 1 
23 1 226 1 254 1 353 1 282 1 310 1 51 1 195 1 235 1 319 1 236 1 347 1 112 1 364 1 17 1 159 1 114 1 366 1 280 1 
23 2 226 1 352 2 254 1 24 1 353 1 333 2 282 1 93 2 44 1 95 1 212 1 310 2 313 1 51 2 77 1 234 1 235 1 195 4 319 1 55 1 133 1 236 4 294 4 347 1 199 2 112 1 364 2 17 1 159 1 273 2 272 1 161 5 114 1 139 1 366 1 249 2 225 1 
341 1 71 1 
226 1 282 2 25 1 71 2 112 2 17 1 159 2 274 1 235 1 
286 1 160 1 150 1 
41 1 3 1 43 1 135 1 282 1 211 1 198 1 71 1 6 1 112 1 61 1 102 1 314 1 78 1 367 1 365 1 
17 3 226 1 159 3 282 3 71 1 250 1 112 3 235 3 
17 1 159 1 282 1 347 1 114 1 112 1 235 1 
226 1 282 1 25 1 347 1 112 1 17 1 159 1 274 1 235 1 
226 2 3 1 120 1 43 1 282 4 211 1 146 1 71 1 6 1 285 1 311 1 124 1 230 1 289 1 11 1 102 1 314 1 78 1 175 1 79 1 32 1 235 3 195 1 319 1 56 1 135 1 236 1 347 1 107 1 198 1 220 2 112 4 137 1 17 3 349 1 159 3 61 1 274 1 275 1 87 1 277 1 365 1 367 1 250 1 
17 1 142 1 159 2 282 2 71 1 7 1 250 1 112 2 235 1 
23 1 226 1 120 1 236 1 282 3 347 1 146 1 112 3 17 3 311 1 159 3 230 1 274 1 11 1 233 1 87 1 250 2 195 1 235 3 
17 1 226 1 159 1 160 1 282 1 274 1 112 1 235 1 
3 1 43 1 135 1 282 1 211 1 198 1 71 1 6 1 112 1 61 1 102 1 314 1 367 1 365 1 78 1 
3 1 43 1 282 1 198 1 71 1 6 1 112 1 60 1 99 1 61 1 102 1 314 1 367 1 365 1 78 1 
355 1 93 1 324 1 107 1 192 1 220 2 285 1 286 1 269 1 124 1 288 1 160 1 150 1 289 1 275 1 277 2 79 2 32 1 252 1 
282 1 347 1 214 1 112 1 17 1 159 1 11 1 235 1 
3 1 135 1 43 1 282 2 198 1 146 1 211 1 6 1 112 2 17 1 159 1 160 1 61 1 102 1 314 1 78 1 365 1 367 1 250 1 235 1 
142 1 226 1 282 5 123 1 146 1 71 1 7 1 112 5 17 4 271 1 159 5 274 1 250 2 235 4 
17 1 159 1 282 1 347 1 114 1 112 1 235 1 
165 1 109 1 
165 1 109 1 
358 1 182 1 
358 1 182 1 
358 1 182 1 
165 1 109 1 369 1 
165 1 109 1 369 1 
165 1 109 1 369 1 
92 1 165 1 109 1 
358 1 165 2 100 1 182 1 58 1 109 2 
165 1 169 1 109 1 
165 1 169 1 109 1 
165 1 169 1 109 1 
143 1 226 1 91 1 165 2 254 1 67 1 353 1 282 1 127 1 315 1 260 2 53 1 261 1 195 2 235 1 319 1 132 2 263 2 236 2 347 1 109 2 112 1 82 1 113 2 17 1 221 2 159 1 114 1 
165 1 91 1 92 1 282 2 167 1 71 1 29 1 260 1 235 2 195 1 132 1 263 1 236 1 296 1 109 1 111 1 112 2 17 2 113 1 221 1 159 2 116 1 89 1 187 1 
10 1 290 1 36 1 
10 1 186 1 36 1 
351 1 290 2 46 1 186 1 239 1 36 3 
351 1 50 1 290 1 46 1 186 1 36 2 
351 1 290 1 46 2 186 1 36 2 
23 1 333 1 167 1 93 1 191 1 49 1 310 4 171 1 29 1 125 2 51 1 195 4 55 1 236 4 294 3 323 1 324 1 80 1 325 1 199 1 240 1 242 1 364 1 205 1 19 1 161 1 273 1 116 1 366 1 249 1 
140 1 281 3 226 1 333 1 282 1 93 1 191 1 49 1 231 3 152 1 51 1 235 1 195 6 55 1 236 6 294 3 347 1 199 2 240 2 242 1 112 1 17 1 159 1 19 2 161 2 114 1 116 2 249 2 21 1 23 2 254 1 353 1 310 5 171 1 319 1 323 1 324 1 364 4 273 2 366 1 225 1 
23 1 226 1 254 1 353 1 333 1 282 1 191 1 49 1 310 2 125 1 51 1 235 1 195 3 319 1 236 3 294 1 323 1 80 1 347 1 325 1 199 1 240 1 242 1 112 1 17 1 159 1 19 1 273 1 161 2 114 1 116 1 249 1 225 1 
333 1 191 1 49 1 310 1 125 1 195 2 236 2 294 1 323 1 80 1 325 1 199 1 240 1 242 1 19 1 273 1 161 2 116 1 329 1 249 1 225 1 
341 1 78 1 27 1 
12 1 78 1 
276 1 
78 1 365 1 
15 1 78 3 365 1 367 1 368 1 27 2 
78 1 365 1 367 1 
78 1 96 1 
344 1 24 1 333 1 93 1 179 1 26 1 192 2 238 4 72 2 212 1 172 1 288 3 151 1 313 1 277 3 129 1 79 7 
344 1 24 1 333 1 93 1 179 1 26 1 192 2 238 4 72 2 212 1 172 1 288 3 151 1 313 1 277 3 129 1 79 7 
344 1 24 1 333 1 93 1 179 1 26 1 192 2 238 4 72 2 212 1 172 1 288 3 151 1 299 1 313 1 277 3 129 1 79 7 
344 2 151 1 47 1 238 1 79 1 72 1 
22 1 344 1 24 1 333 1 93 1 26 1 107 2 192 3 238 5 72 2 212 1 220 4 172 1 124 2 215 1 288 4 151 1 313 1 20 1 275 2 277 4 129 1 79 9 32 2 
3 1 43 1 144 1 48 1 98 1 6 1 73 1 147 1 213 2 337 1 287 1 30 1 10 1 290 1 102 1 363 1 57 1 134 1 105 1 198 1 219 2 239 1 36 2 181 1 158 1 268 1 18 1 204 1 186 1 330 1 
307 1 3 1 43 1 144 1 48 1 98 1 6 1 73 1 213 3 337 1 287 1 30 1 10 1 290 1 102 1 317 1 363 1 57 1 218 1 198 1 239 1 219 3 36 2 181 1 158 1 268 1 18 1 204 1 186 1 330 2 
307 1 3 1 43 1 144 1 48 1 98 1 6 1 73 1 213 2 30 1 287 1 10 1 102 1 290 1 317 1 198 1 219 2 239 1 36 2 181 1 158 1 268 1 18 1 186 1 330 2 
3 1 43 1 122 1 6 1 357 1 73 2 213 1 287 2 30 2 102 1 314 1 78 1 361 1 363 1 57 1 34 1 155 1 218 1 198 1 219 1 158 2 83 1 365 1 
307 1 3 1 43 1 98 1 6 1 73 1 213 1 337 1 287 1 30 1 10 1 290 1 102 1 363 1 57 1 134 1 105 1 198 1 219 1 239 1 36 2 158 1 268 1 18 1 204 1 186 1 
136 1 
55 1 236 1 43 1 294 1 199 1 6 1 242 1 364 2 298 1 338 1 161 1 273 1 102 1 314 1 366 1 249 1 153 1 195 1 
23 1 142 1 332 1 255 1 282 1 311 1 230 1 11 1 51 1 52 1 195 2 236 2 347 1 112 1 364 2 159 1 327 1 85 1 87 1 350 1 366 1 64 1 251 2 280 1 
23 1 332 1 142 1 255 1 236 2 282 1 347 1 112 1 311 1 159 1 230 1 11 1 85 1 51 1 87 1 52 1 350 1 37 1 251 3 64 1 195 2 
23 1 142 1 332 1 255 1 282 1 311 1 230 1 11 1 51 1 52 1 104 1 195 2 236 2 347 1 112 1 364 2 159 1 327 1 85 1 87 1 350 1 366 1 64 1 251 3 37 1 280 1 
364 1 236 1 366 1 280 1 195 1 
39 1 23 1 189 2 332 1 142 1 255 1 282 1 356 1 9 2 311 1 230 1 11 1 51 1 104 1 52 1 360 1 195 2 343 1 14 1 55 1 236 2 294 1 347 1 199 1 112 1 364 2 159 1 161 1 273 1 327 1 85 1 62 2 87 1 350 1 366 1 249 1 37 1 64 1 251 3 38 1 
23 1 189 2 142 1 332 1 255 1 282 1 356 1 9 2 311 1 230 1 232 1 11 1 51 1 104 1 52 1 360 1 195 2 14 1 55 1 321 1 236 2 294 1 347 1 199 1 112 1 364 2 159 1 161 1 273 1 206 1 327 1 85 1 62 2 87 1 350 1 366 1 249 1 37 1 64 1 251 3 38 1 
23 1 189 1 142 1 332 1 255 1 282 1 356 1 9 1 311 1 230 1 232 1 11 1 51 1 104 1 52 1 360 1 195 2 14 1 55 1 321 1 236 2 294 1 347 1 199 1 112 1 364 2 159 1 161 1 273 1 206 1 327 1 85 1 62 1 87 1 350 1 366 1 249 1 64 1 251 2 38 1 
23 1 142 1 332 1 255 1 282 1 9 1 311 1 230 1 31 1 232 1 11 1 51 1 104 1 52 1 216 1 195 2 343 1 14 1 131 1 55 1 236 2 294 1 347 1 199 1 112 1 364 2 203 1 159 1 161 1 273 1 327 1 85 1 62 1 87 1 350 1 366 1 163 1 249 1 64 1 251 2 
23 1 189 2 142 1 332 1 255 1 282 1 356 1 9 2 311 1 229 1 230 1 232 1 11 1 51 1 52 1 104 2 360 1 195 2 14 1 55 1 321 1 236 2 294 1 347 1 199 1 112 1 364 3 159 1 161 1 273 1 206 1 327 2 85 1 62 2 87 1 350 1 366 1 249 1 37 2 64 1 251 4 38 1 
23 1 189 2 142 1 332 1 255 1 282 1 356 1 9 2 311 1 229 1 230 1 232 1 11 1 51 1 52 1 104 2 360 1 195 2 14 1 55 1 321 1 236 2 294 1 347 1 199 1 112 1 364 3 159 1 161 1 273 1 206 1 327 2 85 1 62 2 87 1 350 1 366 1 249 1 37 2 64 1 251 4 38 1 
39 1 23 1 332 1 142 1 255 1 282 1 9 2 311 1 230 1 31 1 11 1 51 1 104 1 52 1 216 1 195 2 343 1 14 1 55 1 236 2 294 1 347 1 199 1 112 1 364 2 159 1 161 1 273 1 327 1 85 1 62 2 87 1 350 1 366 1 163 2 249 1 37 1 64 1 251 3 
24 2 333 1 93 1 107 1 71 2 238 2 192 2 212 2 220 2 285 1 269 1 172 1 124 1 288 2 341 1 289 1 313 1 275 1 277 3 129 1 79 5 32 1 
90 1 334 2 333 3 191 3 335 1 49 3 26 3 71 1 285 1 286 12 124 2 288 3 150 12 289 2 79 15 32 2 292 1 56 1 154 1 346 1 107 2 238 10 220 4 297 4 160 12 328 1 275 2 184 3 277 5 302 1 
354 1 282 1 335 1 146 1 285 1 286 1 124 1 289 1 76 1 79 2 32 1 235 1 56 1 107 1 238 1 220 2 112 1 17 1 159 1 275 1 277 1 302 1 250 1 
3 1 43 1 333 1 282 2 191 1 146 1 49 1 192 1 6 1 285 2 286 2 148 1 288 3 150 2 102 1 289 2 13 1 235 1 56 1 107 2 198 1 238 3 112 2 17 1 159 1 349 1 160 2 61 1 302 1 250 1 66 1 211 1 26 2 124 2 314 1 78 1 79 5 32 2 135 1 265 1 322 1 220 4 275 2 277 2 367 1 365 1 
208 1 3 3 43 2 335 1 193 1 6 2 28 1 357 1 8 1 285 1 124 1 102 2 289 1 314 1 78 2 79 2 32 1 361 1 56 1 264 1 198 2 107 1 238 1 220 2 202 1 84 1 275 1 277 1 367 1 365 2 
226 1 4 1 333 1 282 1 93 1 191 1 49 1 192 1 285 1 286 1 124 1 288 1 150 1 289 1 79 3 32 1 235 1 324 1 107 1 238 1 220 2 112 1 17 1 159 1 160 1 274 1 275 1 277 2 302 1 
118 1 333 1 191 1 26 1 107 1 238 2 220 2 285 1 286 1 269 1 124 1 288 1 160 1 150 1 289 1 275 1 79 2 32 1 
355 1 93 1 324 1 107 1 192 1 220 2 285 1 286 1 269 1 124 1 288 1 160 1 150 1 289 1 275 1 277 2 79 2 32 1 
333 1 93 1 191 1 49 1 26 1 192 1 285 1 286 2 124 1 288 2 150 2 289 1 79 4 32 1 324 1 107 1 238 2 220 2 269 1 160 2 275 1 277 2 
208 1 118 1 333 1 191 1 26 1 107 1 238 2 220 2 285 1 286 1 124 1 288 1 160 1 150 1 289 1 275 1 79 2 32 1 
208 1 355 1 93 1 324 1 107 1 192 1 220 2 285 1 286 1 124 1 288 1 160 1 150 1 289 1 275 1 277 2 79 2 32 1 
208 1 333 1 191 1 26 1 107 1 49 1 238 2 220 2 285 1 286 1 124 1 288 1 160 1 150 1 289 1 275 1 79 2 32 1 
333 1 191 1 26 1 107 1 49 1 238 2 220 2 285 1 286 1 124 1 288 1 160 1 150 1 289 1 275 1 79 2 32 1 
3 1 43 1 282 1 335 1 211 1 71 1 6 1 285 1 124 1 102 1 289 1 314 1 78 1 79 2 32 1 56 1 135 1 198 1 107 1 238 1 220 2 112 1 349 1 61 1 275 1 277 1 365 1 367 1 
3 1 43 1 282 1 335 1 71 1 6 1 285 1 99 1 124 1 102 1 289 1 314 1 78 1 79 2 32 1 56 1 295 1 198 1 107 1 238 1 220 2 112 1 60 1 61 1 275 1 277 1 365 1 367 1 
333 1 191 1 26 1 107 1 49 1 238 2 220 2 285 1 286 1 124 1 288 1 160 1 150 1 289 1 275 1 302 1 79 2 32 1 
3 1 333 1 43 1 282 1 191 1 26 1 211 1 49 1 6 1 147 1 285 1 286 1 148 1 124 1 288 1 150 1 102 1 289 1 78 1 79 2 32 1 135 1 198 1 107 1 238 2 220 2 112 1 349 1 160 1 61 1 275 1 367 1 365 1 
226 1 333 1 282 1 191 1 26 1 49 1 285 1 286 1 124 1 288 1 150 1 289 1 79 2 32 1 235 1 107 1 238 2 220 2 112 1 17 1 159 1 160 1 274 1 162 1 275 1 302 1 
22 1 308 1 141 1 334 2 333 4 93 4 191 4 49 4 26 2 192 4 124 2 288 6 259 1 316 1 79 30 130 1 32 2 292 2 324 4 197 1 267 1 180 2 107 2 238 14 220 4 270 4 297 4 275 2 184 2 278 1 277 16 370 1 
22 1 141 1 333 1 93 1 191 1 49 1 124 1 316 2 79 10 130 2 32 1 292 1 324 1 107 1 180 1 238 5 220 2 270 2 297 1 275 1 184 1 277 5 278 1 370 1 
22 1 141 1 334 3 333 4 93 3 191 4 49 4 26 2 192 2 124 2 288 4 259 1 316 2 79 31 130 1 32 2 292 3 324 3 197 1 267 1 180 1 107 2 238 15 220 4 270 4 297 6 275 2 184 3 248 1 278 1 277 16 370 1 
22 1 141 1 334 2 333 3 93 3 191 3 49 3 26 1 192 2 124 2 288 3 259 1 316 1 79 26 130 1 32 2 292 2 324 3 197 1 267 1 180 1 107 2 238 12 220 4 270 4 297 4 275 2 184 2 278 1 277 14 370 1 
22 1 141 1 24 3 334 2 333 7 93 7 191 4 49 4 26 3 192 6 72 3 212 3 172 3 124 1 288 9 313 3 316 1 129 3 79 46 130 1 32 1 292 2 346 1 324 4 197 1 267 1 180 1 107 1 238 24 220 2 270 4 297 4 275 1 184 3 278 1 277 22 370 1 
113 1 221 1 132 1 165 1 100 1 263 1 345 1 126 1 348 1 109 1 
92 1 296 1 
318 1 113 1 262 1 221 1 320 1 132 1 165 1 263 1 109 1 
143 1 226 1 165 1 91 1 254 1 67 1 353 1 282 1 127 1 315 1 260 2 53 1 261 1 195 1 235 1 319 1 132 1 263 1 236 1 347 1 109 1 112 1 82 1 113 1 17 1 221 1 159 1 114 1 
143 1 226 1 165 1 91 1 254 1 67 1 353 1 282 1 127 1 315 1 260 2 53 1 261 1 195 1 235 1 319 1 132 1 263 1 236 1 347 1 109 1 112 1 82 1 113 1 17 1 221 1 159 1 114 1 
143 1 226 1 165 1 91 1 254 1 67 1 353 1 282 1 127 1 315 1 260 2 53 1 261 1 195 1 235 1 319 1 132 1 263 1 236 1 347 1 109 1 112 1 82 1 113 1 17 1 221 1 159 1 114 1 
58 1 101 1 369 1 
58 1 101 1 369 1 
145 1 169 1 
58 1 145 1 169 1 
187 1 89 1 
165 1 92 1 282 2 167 1 71 1 310 1 29 1 260 1 53 1 261 1 195 1 235 2 132 1 263 1 236 1 296 1 237 1 109 1 111 1 112 2 113 1 17 2 221 1 159 2 116 1 89 1 187 1 
101 1 369 1 
58 1 145 1 169 1 
40 1 3 1 166 1 43 2 282 2 335 1 97 1 6 2 28 1 285 1 124 1 289 1 102 2 78 1 79 2 32 1 176 1 177 1 56 1 198 1 107 1 238 1 16 1 220 2 112 2 159 2 84 2 275 1 277 1 365 1 302 1 
307 1 3 1 43 2 198 1 239 1 98 1 36 2 6 2 110 1 147 1 158 1 337 1 18 1 10 1 290 1 102 2 128 1 186 1 304 1 
307 1 227 1 3 1 43 1 198 1 239 1 98 1 36 2 6 1 110 1 158 1 337 1 18 1 10 1 290 1 102 1 186 1 
361 1 3 1 43 1 122 1 198 1 6 1 357 1 158 1 102 1 314 1 78 1 365 1 304 1 279 1 
307 1 3 1 43 1 198 1 239 1 98 1 36 2 6 1 110 1 158 1 337 1 18 1 10 1 290 1 102 1 128 1 186 1 304 1 
0 1 
23 1 161 1 272 1 341 1 294 1 51 1 95 1 
23 1 343 1 189 1 55 1 294 1 356 1 199 1 364 1 273 1 161 1 51 1 366 1 360 1 249 1 38 1 
3 2 43 1 333 1 93 1 191 1 49 1 6 1 102 1 12 2 195 1 343 3 55 2 15 1 59 1 236 1 294 4 106 1 198 1 199 2 240 3 242 1 19 3 161 3 301 1 249 2 305 1 352 1 27 1 311 1 314 1 78 4 322 1 324 1 81 1 364 2 273 2 183 1 222 1 365 1 367 1 366 1 139 1 38 3 
352 2 334 1 333 4 93 4 283 1 191 4 5 1 49 4 292 1 343 3 55 1 294 11 346 1 324 4 267 1 108 1 199 1 240 8 297 2 19 8 273 1 161 7 184 2 249 1 188 1 38 3 
352 2 226 1 254 1 24 1 333 2 353 1 282 1 44 1 93 1 212 1 313 1 195 1 235 1 319 1 55 1 321 1 236 1 294 2 347 1 199 1 112 1 17 1 159 1 273 1 161 2 114 1 139 1 249 1 
23 1 55 1 294 1 95 1 199 1 272 1 273 1 161 1 51 1 249 1 
19 1 161 2 333 1 191 1 49 1 240 1 
23 1 319 1 226 1 254 1 353 1 282 1 347 1 112 1 364 1 17 1 159 1 51 1 114 1 366 1 235 1 
55 1 43 1 294 1 199 1 6 1 242 1 364 2 298 1 338 1 161 1 273 1 102 1 314 1 366 1 185 1 249 1 153 1 
226 2 3 1 43 1 282 3 211 1 71 1 6 1 285 1 124 1 102 1 289 1 314 1 175 1 78 1 79 1 32 1 235 2 319 1 56 1 135 1 107 1 198 1 220 2 112 3 17 2 159 2 349 1 61 1 275 1 277 1 367 1 365 1 
23 1 55 1 294 1 199 1 240 1 242 1 338 1 161 1 273 1 51 1 249 1 
113 1 132 1 200 1 
113 1 132 1 200 1 
113 1 132 1 200 1 
113 1 132 1 207 1 126 1 187 1 
113 1 132 1 138 1 
113 1 132 1 138 1 
113 1 132 1 138 1 
113 1 132 1 
165 1 109 1 
24 1 333 1 93 1 26 1 107 2 238 4 192 2 72 1 220 4 212 1 172 1 124 2 288 3 313 1 275 2 20 1 277 4 129 1 79 8 32 2 
24 1 333 1 93 1 192 2 238 3 72 1 212 1 172 1 341 1 288 2 313 1 277 3 129 1 79 6 
333 1 93 1 324 1 191 1 107 1 49 1 26 1 192 1 238 2 220 2 124 1 288 2 275 1 277 2 79 4 32 1 306 1 
292 1 334 1 333 1 93 1 324 1 191 1 49 1 26 1 192 1 238 3 297 2 288 2 184 1 277 4 79 7 
90 1 24 2 333 3 334 1 93 3 191 2 26 4 49 2 192 5 72 1 212 2 172 1 124 2 288 9 313 1 129 1 79 23 32 2 346 1 324 2 107 2 238 11 220 4 297 2 184 2 20 2 275 2 246 1 277 12 
297 1 277 1 79 1 
184 1 238 1 79 1 
333 1 322 1 93 1 191 1 324 1 107 1 49 1 26 1 238 3 192 2 220 2 124 1 288 3 275 1 277 3 79 6 32 1 306 1 
22 1 333 2 93 2 283 1 191 2 26 1 49 2 5 1 192 1 124 1 288 2 79 12 32 1 292 1 324 2 267 1 107 1 108 1 238 6 220 2 297 1 184 1 275 1 277 6 188 1 
24 1 333 1 93 1 26 1 238 3 192 1 212 1 288 2 313 1 277 3 79 6 
24 1 26 1 107 1 238 1 192 1 212 1 220 2 172 1 124 1 288 2 246 1 20 1 275 1 277 2 129 1 79 3 32 1 
22 1 24 2 333 2 44 1 93 2 107 1 26 2 192 3 238 5 220 2 212 2 124 1 288 5 275 1 313 1 277 5 79 10 32 1 
22 1 333 1 191 1 107 1 26 1 238 2 220 2 124 1 288 1 275 1 79 2 32 1 
22 1 333 1 93 1 324 1 191 1 107 1 49 1 26 1 192 1 238 2 220 2 124 1 288 2 275 1 277 2 79 4 32 1 
22 1 24 1 107 3 26 1 192 1 238 1 220 6 212 1 124 3 288 2 259 1 20 1 246 1 275 3 277 2 79 3 32 3 
117 1 22 1 24 3 334 1 333 5 93 5 191 3 49 3 26 5 192 7 72 1 212 3 172 1 124 5 288 12 258 1 259 1 313 2 173 1 129 1 79 34 32 5 292 1 324 3 107 5 238 16 220 10 297 4 246 1 20 2 275 5 184 3 277 18 306 1 
22 1 24 1 334 1 333 2 93 1 191 1 49 1 192 2 72 1 212 1 172 1 124 1 288 2 313 1 129 1 79 11 32 1 292 1 267 1 107 1 238 6 220 2 297 2 184 1 275 1 277 5 
22 1 24 1 334 1 333 2 93 1 191 1 49 1 26 1 192 2 72 1 212 1 172 1 124 2 288 3 313 1 129 1 79 11 32 2 292 1 267 1 107 2 238 6 220 4 297 2 275 2 184 1 277 5 306 1 
22 1 24 1 333 3 93 3 283 1 191 2 26 1 49 2 5 1 192 3 72 1 212 1 172 1 124 3 288 4 313 1 129 1 79 19 32 3 292 1 324 2 267 1 108 1 107 3 238 9 220 6 297 1 184 1 275 3 20 1 277 10 188 1 306 1 
22 1 24 1 333 3 93 2 283 1 191 2 26 2 49 2 5 1 192 3 72 1 212 1 172 1 124 3 288 5 313 1 129 1 79 17 32 3 292 1 324 1 267 1 107 3 108 1 238 10 220 6 297 1 20 1 184 1 275 3 277 7 188 1 306 1 
22 1 24 1 334 1 333 2 93 1 191 1 49 1 192 2 72 1 212 1 172 1 124 1 288 2 313 1 129 1 79 11 32 1 292 1 267 1 107 1 238 6 220 2 297 2 184 1 275 1 277 5 
22 1 333 2 93 2 283 1 191 2 26 1 49 2 5 1 192 1 124 1 288 2 79 12 32 1 292 1 324 2 267 1 107 1 108 1 238 6 220 2 297 1 184 1 275 1 277 6 188 1 
22 1 24 1 333 3 93 2 283 1 191 2 26 2 5 1 49 2 192 3 72 1 212 1 172 1 124 4 288 5 313 1 129 1 79 18 32 4 292 1 324 1 267 1 108 1 107 4 238 10 220 8 297 1 275 4 184 1 20 2 277 8 188 1 306 1 
22 1 333 3 93 2 283 1 191 3 26 3 5 1 49 3 192 3 124 4 288 6 259 1 79 16 32 4 292 1 324 2 267 1 108 1 107 4 238 9 220 8 297 1 275 4 184 1 20 2 277 7 188 1 
24 3 333 1 93 1 26 3 192 3 238 3 212 3 172 1 288 6 313 1 277 4 129 2 79 7 
22 1 24 1 333 3 93 2 283 1 191 2 26 1 5 1 49 2 192 3 72 1 212 1 172 1 124 4 288 4 259 1 313 1 129 1 79 18 32 4 292 1 324 1 267 1 108 1 107 4 238 10 220 8 297 1 275 4 184 1 20 2 277 8 188 1 
142 1 159 1 69 1 282 1 71 1 7 1 112 1 
1 1 142 1 69 1 178 1 282 1 71 1 7 1 112 1 149 1 159 1 312 1 247 1 
361 1 3 1 341 1 43 1 102 1 314 1 198 1 78 1 365 1 6 1 357 1 
3 1 43 1 135 1 282 2 198 1 71 1 6 1 112 2 17 1 159 1 61 1 102 1 314 1 78 1 365 1 367 1 250 1 235 1 
3 1 209 1 43 1 282 2 71 1 96 1 6 1 228 1 230 1 102 1 11 1 78 3 235 2 135 1 347 1 198 1 112 2 17 1 159 2 61 1 367 2 365 2 250 1 
3 1 209 1 43 2 282 2 71 1 96 1 6 2 228 1 230 1 102 2 11 1 78 3 235 2 347 1 198 1 112 2 60 1 17 1 159 2 61 1 223 1 367 2 365 2 250 1 
23 1 226 1 254 1 43 1 353 1 282 1 6 1 228 1 102 1 51 1 12 1 78 1 195 1 235 1 293 1 319 1 236 1 347 1 112 1 17 1 159 1 114 1 
23 1 226 1 254 1 3 1 209 1 353 1 43 1 282 1 96 1 27 1 6 1 228 1 311 1 102 1 51 1 12 1 78 4 235 1 195 2 319 1 59 1 236 2 347 1 198 1 112 1 364 1 17 1 159 1 114 1 367 1 365 1 
3 1 43 1 102 1 94 1 198 1 6 1 
307 1 253 1 3 3 15 1 33 1 166 1 43 7 94 1 309 1 198 2 6 7 147 1 8 1 202 1 359 1 84 1 102 6 314 2 367 1 365 2 78 3 
40 1 3 1 24 2 333 1 43 1 93 1 282 2 211 1 71 2 192 2 6 1 212 2 285 2 147 1 148 1 172 1 124 2 288 2 289 2 102 1 313 1 78 1 129 1 79 5 32 2 235 1 135 1 265 1 198 1 107 2 238 2 220 4 112 2 17 1 159 1 349 1 61 1 275 2 277 3 365 1 367 1 302 1 250 1 
226 1 43 1 333 2 44 1 93 2 282 1 95 1 6 1 102 1 51 2 12 1 195 2 235 1 55 2 59 1 236 2 294 4 347 1 199 2 112 1 17 1 159 1 161 5 114 1 249 2 23 2 352 2 254 1 24 1 353 1 27 1 310 1 212 1 311 1 313 1 314 1 78 2 319 1 81 1 364 2 273 2 272 1 183 1 222 1 139 1 366 1 185 1 
3 2 15 1 43 2 94 1 198 1 27 1 6 2 147 1 102 2 301 1 367 1 365 1 78 2 
361 1 2 1 3 1 43 4 198 1 6 4 357 1 147 1 102 4 314 1 223 1 365 1 78 1 
3 2 43 2 264 1 198 1 6 2 193 1 8 1 228 1 202 1 102 2 300 1 367 1 365 1 78 1 
3 1 10 1 43 1 102 1 314 1 186 1 198 1 98 1 36 1 6 1 
176 1 307 1 3 1 166 1 43 2 102 2 198 1 78 1 365 1 6 2 147 1 
361 1 2 1 3 2 43 5 166 1 33 1 309 1 198 2 6 5 357 1 147 1 228 1 102 4 314 1 365 2 78 3 
361 1 2 1 3 2 43 5 166 1 33 1 196 1 198 2 6 5 357 1 147 1 228 1 102 4 314 1 365 2 78 3 
3 1 43 1 282 2 198 1 71 1 6 1 112 2 60 1 17 1 159 1 61 1 102 1 314 1 78 1 365 1 367 1 250 1 235 1 
253 1 3 2 15 1 43 1 198 1 6 1 8 1 202 1 228 1 102 1 367 1 365 1 78 1 
164 1 119 1 210 1 224 1 71 1 
23 1 164 1 226 1 119 1 254 1 120 1 210 1 353 1 282 1 310 1 311 1 230 1 74 1 11 1 51 1 235 1 195 2 319 1 236 2 347 2 157 1 112 1 17 1 159 1 87 1 114 1 224 1 303 1 
164 1 119 1 177 1 282 1 97 1 16 1 112 1 159 1 224 1 
224 1 157 1 303 1 
341 1 144 1 48 1 181 1 
363 1 57 1 144 1 48 1 219 1 181 1 213 1 
30 1 219 1 73 1 
331 1 54 1 363 1 57 1 134 1 144 1 48 1 115 2 219 3 284 1 181 1 213 3 
363 1 57 1 174 1 219 1 330 1 213 2 
363 1 217 1 134 1 57 1 144 1 219 1 36 1 213 1 10 1 290 1 86 1 
363 1 57 1 134 1 144 1 219 1 181 1 213 1 
363 1 57 1 134 1 48 1 219 1 181 2 213 1 
363 2 134 1 57 2 144 1 257 1 35 1 219 2 181 1 213 2 339 1 
65 1 363 1 217 1 134 1 57 1 144 2 266 1 48 1 168 1 219 3 181 1 213 3 330 2 
363 1 134 1 57 1 144 1 48 1 219 2 239 1 36 2 181 1 213 2 10 1 290 1 103 1 186 1 330 1 
362 1 363 1 57 1 134 1 174 1 219 1 330 1 213 2 
363 1 57 1 134 1 144 1 48 1 219 1 181 1 213 1 
65 1 331 1 54 1 363 1 217 1 57 1 144 3 48 2 219 4 181 2 213 4 243 1 115 1 330 2 
363 1 134 1 57 1 68 1 144 1 48 1 219 2 156 1 181 1 213 2 326 1 330 1 
331 1 54 2 363 1 57 1 134 1 144 1 45 1 48 1 115 2 219 3 181 1 213 3 
256 1 244 2 144 2 70 1 
363 1 57 1 134 1 75 1 219 1 213 1 
363 1 57 1 134 1 144 1 48 1 168 1 219 2 330 1 181 1 213 2 
241 1 
363 1 57 1 134 1 144 1 48 1 219 1 181 1 213 1 
363 1 57 1 134 1 144 1 168 1 48 1 115 1 219 3 330 1 181 1 213 3 
65 1 243 1 217 1 144 1 
144 1 181 1 

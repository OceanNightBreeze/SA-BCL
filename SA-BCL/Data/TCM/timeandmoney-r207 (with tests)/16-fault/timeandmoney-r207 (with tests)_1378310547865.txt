#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) (143,163) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (143,163) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) (143,163) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (2,65,129,235) (2,65,129,235) (2,65,129,235) 264 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 42 256 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 42 256 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 42 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 285 205 0 80 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 285 205 0 80 60 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 285 205 0 80 60 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 285 205 0 80 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 298 (48,128) (48,128) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 298 (48,128) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (226,260) (226,260) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 298 (48,128) (48,128) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1182 | return null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
130 1 228 1 26 1 
130 1 199 2 85 1 
40 2 76 1 121 2 245 2 27 2 220 2 116 1 86 2 
283 1 133 1 258 1 287 1 92 1 220 2 93 2 135 1 94 1 96 1 63 1 19 1 107 2 21 1 308 1 268 1 27 2 28 1 200 1 153 2 240 2 116 1 315 1 40 2 76 1 41 1 43 1 121 2 318 1 245 3 167 1 125 1 126 1 168 1 169 1 87 2 86 3 
40 1 76 1 121 1 245 1 27 1 265 1 147 1 220 1 86 1 88 1 
173 1 130 1 286 1 241 1 40 1 228 1 245 1 207 1 230 1 325 1 279 1 299 1 147 1 86 1 
130 1 27 1 286 2 220 1 241 1 40 1 228 1 121 1 245 1 207 1 325 2 279 1 299 1 147 1 86 1 
250 1 257 1 286 1 325 1 105 1 
250 1 130 1 228 1 122 1 257 1 286 2 325 2 51 1 
257 1 286 1 325 1 
250 1 27 1 286 1 220 1 117 1 76 1 40 1 121 1 245 1 325 1 265 1 147 1 86 1 88 1 
130 1 
250 1 130 1 228 1 257 1 286 2 325 2 51 1 248 1 
250 2 23 1 130 1 270 1 257 2 286 5 312 2 290 2 261 2 77 1 228 1 325 5 49 1 278 1 51 1 194 1 302 1 280 1 106 1 
26 1 116 1 
27 1 6 1 220 1 116 1 40 2 121 1 245 2 61 1 210 1 147 1 86 2 
233 1 165 1 134 1 
28 1 133 1 92 1 240 1 93 1 135 1 116 1 41 1 315 1 245 1 47 1 167 1 125 1 19 1 86 1 107 1 
233 1 28 1 133 1 92 1 154 1 240 1 220 1 93 1 135 1 315 1 41 1 40 1 121 1 245 2 167 1 125 1 19 1 86 2 108 1 107 1 
173 1 27 1 8 1 154 1 220 4 116 1 40 5 121 4 245 5 61 1 144 1 86 5 266 1 108 2 
40 1 121 1 245 1 147 1 220 1 86 1 88 1 
40 3 121 3 245 3 27 1 220 3 116 1 86 3 108 1 
40 1 121 1 245 1 147 1 220 1 86 1 88 1 
27 1 6 1 220 1 40 1 121 1 245 1 61 1 147 1 86 1 
258 1 92 1 93 1 100 1 19 1 107 1 108 1 268 1 27 2 28 1 200 1 116 1 40 3 41 1 121 3 43 1 207 1 125 1 210 1 279 1 283 1 133 1 286 1 287 1 220 3 135 1 61 1 63 1 299 1 147 2 153 1 240 1 154 1 241 1 76 1 315 1 78 1 245 4 318 1 325 1 167 1 169 1 168 1 86 4 87 2 
173 1 8 1 220 1 116 1 40 2 121 1 245 2 210 1 147 1 86 2 108 1 
130 1 27 1 236 1 286 1 154 1 220 3 241 1 40 3 78 1 121 3 245 3 61 1 207 1 325 1 279 1 299 1 147 1 86 3 108 2 
233 1 40 2 121 2 245 2 27 1 61 1 165 1 220 2 86 2 108 1 
28 1 133 1 92 1 240 1 93 1 135 1 116 1 41 1 315 1 245 1 125 1 167 1 19 1 86 1 107 1 
28 1 133 1 240 1 93 1 116 1 41 1 315 1 245 1 188 1 14 1 125 1 167 1 19 1 86 1 107 1 
215 1 54 1 258 1 287 1 134 2 12 1 182 1 189 1 192 1 63 2 66 1 21 2 110 1 233 2 153 4 314 1 43 1 318 1 321 1 165 2 247 1 168 1 169 1 87 2 
220 1 241 1 40 1 121 1 245 1 147 1 86 1 67 1 
251 1 227 1 
251 1 227 1 
82 1 157 1 
82 1 157 1 
82 1 157 1 
262 1 251 1 227 1 
262 1 251 1 227 1 
251 2 227 2 131 1 311 1 82 1 157 1 
251 1 227 1 69 1 
262 1 251 1 227 1 
267 1 251 1 227 1 
267 1 251 1 227 1 
267 1 251 1 227 1 
304 1 251 1 69 1 71 1 177 1 286 1 259 1 33 1 220 2 116 1 39 1 243 1 40 2 227 1 121 2 245 2 191 1 62 1 324 1 325 1 231 1 50 1 211 1 86 2 
198 1 304 2 251 2 130 1 254 2 70 1 71 1 286 2 311 1 10 1 34 1 243 2 227 2 98 1 62 3 246 1 325 2 231 2 211 2 
294 1 288 1 313 1 
288 1 313 1 158 1 
97 1 217 1 294 2 320 1 313 3 158 1 
97 1 217 1 294 1 317 1 313 2 158 1 
97 1 217 2 294 1 313 2 158 1 
215 1 1 1 282 1 250 4 130 2 132 1 91 2 257 1 286 5 259 1 289 1 261 1 290 1 228 1 191 1 64 2 101 1 66 1 301 2 112 1 199 3 270 2 33 1 312 1 314 1 321 1 325 5 209 1 278 3 85 1 51 1 280 1 
215 3 1 3 282 1 250 7 130 5 257 6 286 9 259 4 290 2 261 2 228 1 187 1 296 1 64 6 66 3 301 6 105 5 106 1 109 1 112 2 199 9 270 6 31 1 74 1 312 2 314 3 162 1 321 3 164 5 325 9 209 2 278 8 85 3 51 1 280 1 
215 1 1 1 250 2 130 3 91 1 286 3 259 1 289 1 261 1 290 1 228 1 64 2 101 1 66 1 301 2 106 1 112 1 270 2 199 4 312 1 314 1 321 1 325 3 209 1 278 3 85 2 
215 2 1 2 250 3 130 4 91 2 286 4 259 2 261 1 290 1 289 1 228 1 296 1 64 4 101 1 66 2 301 4 106 1 109 1 112 1 199 7 270 4 74 1 312 1 314 2 321 2 325 4 209 1 278 5 85 3 
26 1 167 1 203 1 
319 1 167 1 
37 1 
315 1 167 1 19 1 
167 1 146 1 
167 1 19 1 
315 1 160 1 141 1 203 2 167 3 19 1 
215 1 197 1 110 2 21 4 25 1 307 1 151 1 153 7 272 1 75 1 314 1 182 3 120 2 63 3 277 1 195 1 249 1 
215 1 197 1 110 2 21 4 25 1 307 1 151 1 153 7 272 1 75 1 314 1 182 3 120 2 63 3 277 1 195 1 249 1 
215 1 197 1 110 2 21 4 25 1 307 1 151 1 271 1 153 7 272 1 75 1 314 1 182 3 120 2 63 3 277 1 195 1 249 1 
215 4 1 3 252 1 285 4 258 1 287 1 182 10 263 1 99 1 63 15 66 3 195 2 21 16 197 5 110 5 305 1 25 1 307 2 30 3 151 2 201 1 153 31 205 1 272 1 75 1 273 1 120 3 314 4 43 1 318 1 321 3 277 2 249 1 87 2 
215 2 255 1 258 1 287 1 180 1 182 3 63 4 300 1 195 1 197 1 21 5 110 2 307 1 25 1 151 1 153 9 272 1 314 2 120 1 43 1 318 1 277 1 87 2 249 1 
235 1 2 1 264 1 113 1 65 1 
235 1 2 1 143 1 113 1 65 1 
129 1 2 1 163 1 113 1 
235 1 2 1 143 1 113 1 65 1 
235 1 2 1 264 1 113 1 65 1 
190 1 
150 3 173 1 256 1 257 1 286 2 241 1 221 1 222 1 119 1 292 1 293 1 40 1 42 1 44 1 245 1 207 1 325 2 230 1 299 1 279 1 147 1 148 1 20 1 86 1 
150 3 173 1 256 1 257 1 286 2 241 1 221 1 222 1 119 1 292 1 293 1 40 1 42 1 44 1 245 1 207 1 325 2 230 1 299 1 279 1 147 1 148 1 20 1 86 1 
173 1 257 4 261 1 95 2 186 2 20 2 22 2 270 1 199 2 36 2 119 2 40 1 44 1 207 1 279 1 278 1 51 2 280 1 212 1 130 1 286 4 290 1 221 1 58 1 59 1 222 1 292 1 293 2 228 1 230 1 299 1 147 1 148 1 150 4 312 1 241 1 245 1 325 4 86 1 
173 1 4 2 176 1 257 6 93 2 261 1 95 2 16 1 17 1 19 1 104 1 20 2 107 2 199 2 270 2 28 1 36 2 119 2 41 1 40 1 44 1 207 1 45 1 209 1 125 2 278 2 279 1 127 1 51 3 280 1 212 1 130 2 286 5 290 1 58 1 221 1 222 1 292 1 293 2 228 1 142 2 230 1 299 1 147 1 148 1 234 1 150 4 312 1 240 2 241 1 245 1 325 5 167 1 85 2 86 1 
173 1 257 2 286 3 221 1 222 1 292 1 293 1 230 1 299 1 147 1 148 1 150 2 241 1 40 1 245 1 44 1 207 1 325 3 279 1 51 1 248 1 86 1 
173 1 130 1 257 1 286 3 221 1 222 1 292 1 228 1 230 1 299 1 147 1 148 1 150 3 241 1 119 1 40 1 245 1 44 1 207 1 325 3 279 1 51 1 248 1 86 1 
173 1 130 1 257 2 286 3 221 1 222 1 292 1 293 1 228 1 230 1 299 1 147 1 148 1 20 1 150 3 241 1 119 1 40 1 245 1 44 1 207 1 325 3 279 1 51 1 248 1 86 1 
173 1 130 1 257 2 286 3 220 1 221 1 222 1 292 1 293 1 228 1 230 1 265 1 299 1 147 2 148 1 20 1 150 2 27 1 241 1 117 1 76 1 40 2 121 1 44 1 245 2 207 1 325 3 279 1 51 1 248 1 86 2 326 1 88 1 
173 1 4 2 257 4 261 1 95 2 104 1 20 2 270 1 199 2 36 2 119 2 40 1 44 1 207 1 279 1 278 1 51 2 280 1 212 1 130 2 286 4 290 1 221 1 58 1 222 1 292 1 293 2 142 2 228 1 230 1 299 1 147 1 148 1 150 4 312 1 241 1 245 1 325 4 85 2 86 1 
150 2 173 1 286 2 241 1 221 1 222 1 292 1 40 1 42 1 44 1 245 1 207 1 325 2 230 1 299 1 279 1 147 1 148 1 86 1 
150 2 173 1 286 2 241 1 221 1 222 1 292 1 40 1 42 1 44 1 245 1 207 1 325 2 230 1 299 1 279 1 147 1 148 1 86 1 
173 1 130 1 257 4 286 4 261 1 290 1 221 1 137 1 59 1 222 1 95 2 292 1 293 2 228 1 186 2 230 1 299 1 147 1 148 1 20 2 22 2 150 4 199 2 270 1 310 1 312 1 241 1 36 2 119 2 40 1 245 1 44 1 124 1 207 1 325 4 278 1 279 1 51 2 280 1 212 1 86 1 
215 1 258 1 287 1 134 1 182 2 189 1 63 3 110 2 21 3 233 1 307 1 26 1 25 1 153 6 272 1 116 2 314 1 120 1 43 1 318 1 165 1 277 1 168 1 169 1 249 1 87 2 
215 2 1 2 285 3 258 2 9 1 287 2 134 11 182 2 185 1 63 6 102 1 66 1 196 1 197 1 110 1 21 8 233 11 305 1 308 1 30 3 200 1 153 14 205 1 116 1 314 1 316 1 43 2 318 2 321 2 165 4 168 2 169 1 87 4 
133 1 258 1 287 1 92 1 135 1 93 1 220 1 224 1 185 1 63 1 19 1 107 1 108 1 21 1 308 1 28 1 200 1 153 2 240 1 154 1 204 1 116 1 118 1 315 1 41 1 40 1 43 1 121 1 318 1 245 2 47 1 165 1 167 1 125 1 168 1 169 1 86 2 87 2 
1 2 3 2 175 2 258 3 92 2 179 1 93 3 182 8 185 1 19 2 107 3 108 1 110 4 21 10 197 4 25 1 268 2 28 2 200 1 272 1 116 2 38 2 120 1 40 1 41 2 121 1 43 3 125 1 277 1 53 1 215 3 133 2 287 3 134 7 220 1 135 2 225 1 140 1 63 10 297 2 66 2 233 7 307 1 308 1 153 20 240 3 154 1 314 3 315 2 245 3 318 3 321 2 165 7 167 2 169 3 168 3 249 1 87 6 86 3 
53 1 89 1 218 1 219 1 258 2 287 2 220 1 93 8 96 2 189 1 63 1 103 1 19 2 108 1 107 8 232 1 21 1 234 1 24 1 308 1 28 2 200 1 153 2 114 1 240 7 40 1 41 2 121 1 43 2 245 1 318 2 167 3 125 2 168 2 169 2 127 1 281 1 86 1 87 4 
40 1 121 1 245 1 27 1 61 1 220 1 170 1 86 1 
197 1 215 1 21 2 233 1 258 1 287 1 134 1 153 2 12 1 182 1 43 1 318 1 189 1 321 1 165 1 169 1 168 1 87 2 
110 1 233 1 258 1 287 1 134 1 153 2 182 1 314 1 43 1 318 1 189 1 165 1 63 2 169 1 168 1 247 1 66 1 87 2 
215 1 1 1 258 1 287 1 134 2 182 2 189 1 63 2 66 1 21 2 197 1 110 1 233 2 153 4 314 1 43 1 318 1 321 1 165 2 168 1 169 1 87 2 
197 1 215 1 21 2 233 1 258 1 287 1 134 1 153 2 12 1 182 1 43 1 318 1 321 1 165 1 169 1 168 1 87 2 232 1 
110 1 233 1 258 1 287 1 134 1 153 2 182 1 314 1 43 1 318 1 165 1 63 2 169 1 168 1 247 1 66 1 87 2 232 1 
215 1 1 1 258 1 287 1 134 2 182 2 63 2 66 1 232 1 21 2 197 1 110 1 233 2 153 4 314 1 43 1 318 1 321 1 165 2 168 1 169 1 87 2 
110 1 197 1 215 1 21 2 233 2 1 1 258 1 287 1 134 2 153 4 314 1 182 2 43 1 318 1 321 1 63 2 165 2 66 1 169 1 168 1 87 2 
133 1 258 1 287 1 92 1 135 1 93 1 63 1 19 1 107 1 21 1 308 1 268 1 28 1 200 1 153 2 240 1 116 1 315 1 41 1 43 1 245 1 318 1 125 1 167 1 169 1 168 1 86 1 87 2 
200 1 258 1 287 1 153 1 240 1 93 1 116 1 43 1 318 1 63 1 81 1 125 1 210 1 147 1 169 1 168 1 87 2 107 1 
215 1 1 1 258 1 287 1 134 2 182 2 185 1 63 2 66 1 21 2 197 1 110 1 233 2 153 4 314 1 43 1 318 1 321 1 165 2 168 1 169 1 87 2 
215 1 1 1 133 1 258 1 287 1 134 2 92 1 135 1 93 1 182 2 63 2 66 1 19 1 107 1 110 1 197 1 21 2 233 2 268 1 28 1 153 4 240 1 114 1 38 1 314 1 315 1 41 1 43 1 245 1 318 1 321 1 165 2 167 1 169 1 168 1 86 1 87 2 
215 1 1 1 258 1 287 1 134 1 220 1 182 1 185 1 61 1 63 1 66 1 197 1 21 2 233 1 27 1 153 3 32 1 314 1 40 1 43 1 121 1 318 1 245 1 321 1 165 1 168 1 169 1 87 2 86 1 
0 1 215 2 1 2 174 1 285 4 258 2 287 2 136 1 182 3 60 1 295 2 63 10 300 1 66 2 110 1 21 8 197 2 303 1 305 1 30 2 238 1 153 18 205 3 274 1 314 2 43 2 80 1 318 2 123 2 321 2 87 4 
0 1 215 2 1 2 174 1 285 4 258 2 287 2 136 1 182 4 60 1 295 2 63 10 300 1 66 2 110 2 21 8 197 2 303 1 305 1 30 2 238 1 153 18 205 3 274 1 314 2 43 2 80 1 318 2 123 2 321 2 87 4 
0 1 215 3 1 2 285 3 258 1 9 1 287 1 182 5 60 1 295 1 63 10 300 1 66 2 110 3 21 10 197 2 305 1 25 1 307 1 30 2 153 20 205 2 272 1 120 1 274 1 314 3 43 1 80 1 318 1 123 1 321 2 277 1 249 1 87 2 
215 3 1 3 174 2 7 1 285 2 258 2 287 2 136 1 182 6 60 1 295 2 63 10 300 1 66 3 110 3 21 9 197 3 303 1 305 1 30 1 153 19 205 1 274 1 314 3 43 2 80 1 318 2 123 1 321 3 87 4 
0 1 21 2 30 1 285 2 258 1 287 1 153 5 205 2 274 1 60 1 43 1 318 1 80 2 123 2 295 1 63 3 300 1 87 2 
218 1 258 1 287 1 93 2 96 2 185 1 63 1 193 1 103 1 19 1 107 2 21 1 308 1 28 1 200 1 153 2 240 2 41 1 40 2 79 1 43 1 318 1 245 2 275 1 276 1 166 1 167 1 168 1 169 1 86 2 87 2 
128 1 53 1 306 1 178 1 48 1 298 1 114 1 240 2 93 2 107 2 
214 1 53 1 178 1 48 1 298 1 240 1 93 1 107 1 
226 1 306 1 178 1 125 1 260 1 240 1 93 1 107 1 
128 1 53 1 306 1 178 1 48 1 298 1 240 1 93 1 107 1 
156 1 
283 1 133 1 258 1 287 1 92 1 93 1 220 2 135 1 63 1 19 1 107 1 268 1 27 2 28 1 200 1 153 1 240 1 116 1 40 2 76 1 41 1 315 1 43 1 121 2 245 3 318 1 125 1 167 1 169 1 168 1 87 2 86 3 
130 4 199 4 270 2 312 1 290 1 261 1 120 1 228 2 64 2 209 1 17 1 278 1 85 2 301 2 280 1 
77 1 130 1 228 1 26 1 270 1 278 1 302 1 
130 2 4 1 257 1 286 1 261 1 290 1 142 1 228 1 104 1 270 1 199 1 312 1 325 1 278 1 85 1 51 1 280 1 
1 2 3 2 257 5 93 2 261 4 183 1 17 1 18 2 19 1 107 2 28 1 199 12 270 8 203 2 114 1 41 2 207 2 209 2 125 1 278 9 51 3 280 4 213 2 215 2 130 8 286 5 290 4 57 2 138 1 139 1 228 2 64 6 145 2 301 6 66 2 302 1 72 2 312 4 240 2 242 2 314 2 315 1 160 1 77 1 319 3 321 2 325 5 167 6 83 1 85 6 171 2 
0 1 215 2 1 2 130 5 253 1 5 1 257 1 285 1 286 1 261 2 290 2 228 2 64 5 17 1 145 2 301 5 66 2 269 1 199 6 270 5 237 1 30 1 312 2 205 1 242 1 314 2 321 2 208 1 209 1 325 1 278 8 51 1 52 1 85 3 280 2 
215 2 255 1 286 1 220 1 261 1 290 1 145 2 265 1 147 1 307 1 25 1 270 2 27 1 73 1 312 1 242 1 117 1 314 1 76 1 40 1 121 1 245 1 325 1 277 1 278 2 280 1 86 1 88 1 
130 1 270 1 312 1 290 1 261 1 77 1 228 1 278 1 302 1 280 1 
215 2 1 2 3 1 130 5 270 5 199 10 242 1 314 2 321 2 64 5 145 2 278 5 301 5 85 5 66 2 
130 1 228 1 257 1 286 1 325 1 51 1 
176 1 257 4 286 3 93 4 261 2 290 2 181 2 183 1 15 1 16 1 17 2 19 1 106 1 107 4 234 1 28 1 270 2 29 1 312 2 240 4 41 1 209 2 325 3 167 1 125 2 278 2 51 2 127 1 280 1 
243 1 211 1 172 1 
243 1 211 1 172 1 
39 1 243 1 34 1 84 1 211 1 
243 1 211 1 172 1 
243 1 11 1 211 1 
243 1 11 1 211 1 
243 1 11 1 211 1 
243 1 211 1 
251 1 227 1 
215 1 0 1 285 1 258 1 287 1 182 2 63 4 300 1 21 4 110 2 307 1 25 1 30 1 153 8 205 1 272 1 120 1 314 1 43 1 318 1 277 1 87 2 249 1 
0 1 215 2 1 1 285 2 258 2 287 2 182 3 63 5 300 1 110 2 21 6 197 1 305 1 25 1 307 1 30 1 153 11 205 1 272 1 120 1 314 1 159 1 43 2 318 2 321 1 277 1 249 1 87 4 
0 1 215 3 1 2 253 1 285 1 258 3 287 3 182 4 63 10 300 1 66 2 197 1 21 9 110 3 25 1 307 1 269 1 237 1 30 1 201 1 153 19 205 1 272 1 120 1 159 1 314 3 43 3 318 3 321 2 208 1 277 1 249 1 87 6 
0 1 215 3 1 2 253 1 285 1 258 3 287 3 182 5 63 7 300 1 66 1 197 2 21 10 110 3 25 1 307 1 269 1 237 1 30 1 201 1 153 17 205 1 272 1 120 1 159 1 314 2 43 3 318 3 321 2 208 1 277 1 249 1 87 6 
215 1 0 1 285 1 258 1 287 1 182 2 63 4 300 1 21 4 110 2 307 1 25 1 30 1 153 8 205 1 272 1 120 1 314 1 43 1 318 1 277 1 87 2 249 1 
0 1 215 2 1 2 253 1 285 1 258 1 287 1 182 2 63 6 300 1 66 2 197 1 21 6 110 1 269 1 237 1 30 1 153 12 205 1 314 2 43 1 318 1 321 2 208 1 87 2 
0 1 215 3 1 2 253 1 285 1 258 4 287 4 182 5 63 8 300 1 66 1 197 2 21 10 110 3 25 1 307 1 269 1 237 1 30 1 201 2 153 18 205 1 272 1 120 1 159 1 314 2 43 4 318 4 321 2 208 1 277 1 249 1 87 8 
0 1 215 3 1 3 253 1 285 1 258 4 287 4 182 6 63 7 300 1 66 2 197 3 21 9 110 3 303 1 269 1 237 1 30 1 201 2 153 16 205 1 314 2 43 4 318 4 321 3 208 1 87 8 
110 3 197 3 215 1 21 3 307 3 25 1 153 7 272 1 314 1 182 6 63 4 277 3 249 2 
0 1 215 3 1 2 253 1 285 1 258 4 287 4 182 4 63 8 300 1 66 1 197 1 21 10 110 3 303 1 25 1 307 1 269 1 237 1 30 1 201 2 153 18 205 1 272 1 120 1 314 2 43 4 318 4 321 2 208 1 277 1 249 1 87 8 
215 1 21 4 197 1 110 2 25 1 307 1 258 2 201 1 287 2 153 8 272 1 120 1 314 1 182 3 43 2 318 2 63 4 277 1 87 4 249 1 
110 2 215 1 21 3 26 1 307 1 25 1 153 6 272 1 120 1 182 2 314 1 63 3 277 1 249 1 
110 1 215 1 21 2 197 1 1 1 258 1 287 1 153 4 314 1 182 2 159 1 43 1 318 1 321 1 63 2 66 1 87 2 
110 1 21 3 215 1 197 1 1 1 305 1 285 2 30 1 153 7 205 1 314 1 182 2 321 1 63 4 66 1 
215 3 1 2 285 2 258 2 9 1 287 2 182 9 63 12 66 2 197 4 21 11 110 5 111 1 305 1 25 1 307 2 30 2 201 2 153 23 272 1 120 1 314 3 316 1 43 2 318 2 321 2 277 2 249 1 87 4 
285 1 63 1 153 1 
21 1 30 1 153 1 
215 1 21 3 197 1 110 2 1 1 3 1 258 1 287 1 153 6 159 1 182 3 314 1 43 1 318 1 321 1 63 3 66 1 87 2 
0 1 215 2 1 2 253 1 285 1 258 1 287 1 182 2 63 6 300 1 66 2 197 1 21 6 110 1 269 1 237 1 30 1 153 12 205 1 314 2 43 1 318 1 321 2 208 1 87 2 
215 1 21 3 110 1 197 1 25 1 307 1 153 6 314 1 182 2 63 3 277 1 
21 1 197 1 110 1 111 1 307 1 201 1 258 1 287 1 153 3 272 1 182 2 43 1 318 1 63 2 277 1 249 1 87 2 
110 3 197 2 21 5 215 2 255 1 307 2 25 1 258 1 287 1 153 10 182 5 314 2 43 1 318 1 63 5 300 1 277 2 87 2 
215 1 21 2 197 1 258 1 287 1 153 2 182 1 43 1 318 1 321 1 300 1 87 2 
110 1 215 1 21 2 197 1 1 1 258 1 287 1 153 4 314 1 182 2 43 1 318 1 321 1 63 2 300 1 66 1 87 2 
111 1 110 1 197 1 21 1 303 1 307 1 201 1 258 3 287 3 153 3 182 2 43 3 318 3 63 2 300 1 277 1 87 6 
215 5 1 3 252 1 285 4 258 5 287 5 182 12 99 1 63 18 300 1 66 3 111 1 21 16 197 5 110 7 303 1 305 1 25 2 307 3 30 3 201 2 153 34 205 1 272 1 273 1 120 1 159 1 314 5 43 5 318 5 321 3 277 3 249 1 87 10 
40 1 173 1 161 1 245 1 8 1 116 1 86 1 
149 1 173 1 284 1 202 1 8 1 239 1 56 1 116 1 40 1 161 1 245 1 86 1 
41 1 234 1 26 1 28 1 167 1 125 1 240 1 127 1 93 1 19 1 107 1 
28 1 133 1 92 1 240 1 220 1 93 1 116 1 315 1 41 1 40 1 121 1 245 2 167 1 125 1 19 1 86 2 108 1 107 1 
133 1 92 1 93 1 220 1 181 1 184 1 299 1 147 2 146 1 19 2 107 1 108 1 28 1 240 1 241 1 116 1 40 2 41 1 315 2 121 2 245 2 167 3 210 1 86 2 
133 1 93 1 220 1 181 1 184 1 14 1 299 1 147 2 146 1 19 2 107 1 108 1 28 1 240 1 241 1 116 1 40 2 41 1 315 2 121 2 245 2 167 3 210 1 86 2 
130 1 257 1 286 2 220 1 93 1 181 1 184 1 228 1 265 1 147 1 146 1 19 1 107 1 27 1 28 1 203 1 240 1 115 1 117 1 40 1 76 1 41 1 315 1 121 1 245 1 319 1 207 1 46 1 325 2 167 4 86 1 88 1 
130 1 257 1 286 2 220 1 93 1 181 1 184 1 228 1 265 1 147 1 146 1 19 1 107 1 27 1 28 1 203 1 240 1 117 1 40 1 76 1 41 1 315 1 121 1 245 1 319 1 207 1 325 2 167 4 171 1 86 1 88 1 
41 1 28 1 219 1 240 1 93 1 107 1 
53 1 89 1 90 1 24 1 218 1 28 2 219 1 114 1 240 6 93 7 96 1 160 1 315 1 41 3 244 1 322 1 125 2 167 3 19 2 281 1 107 7 
215 1 175 1 133 1 258 2 287 2 134 1 92 1 220 1 93 1 135 1 182 2 185 1 63 3 19 1 108 1 107 1 21 3 110 2 233 1 25 1 307 1 268 1 28 1 153 6 114 1 240 1 272 1 116 2 38 1 120 1 314 1 315 1 41 1 40 1 79 1 43 2 121 1 318 2 245 2 165 1 167 1 277 1 168 2 169 2 249 1 86 2 87 4 
250 1 130 1 257 2 286 3 93 1 261 2 290 2 57 1 183 1 228 1 302 1 107 1 270 1 72 1 203 1 240 1 312 2 77 1 319 1 207 1 325 3 125 1 167 2 278 1 51 1 280 2 171 1 213 1 
28 1 219 1 203 1 240 1 93 1 37 1 138 1 160 1 315 1 41 2 167 2 19 1 107 1 
234 1 28 1 152 1 240 4 114 1 93 4 13 1 41 1 125 1 167 1 127 1 19 1 107 4 
90 1 28 1 240 2 179 1 93 2 223 1 181 1 315 1 41 2 244 1 323 1 167 1 19 1 107 2 
216 1 28 1 240 1 93 1 288 1 313 1 158 1 41 1 125 1 107 1 
53 1 41 1 28 1 218 1 275 1 167 1 240 2 114 1 93 2 19 1 107 2 
234 1 89 1 24 1 218 1 28 2 152 1 240 4 114 1 93 5 181 1 41 2 125 1 167 3 127 1 19 2 107 5 
234 1 24 1 218 1 28 2 152 1 240 4 114 1 93 5 181 1 41 2 229 1 125 1 167 3 127 1 19 2 107 5 
28 1 133 1 240 1 220 1 93 1 116 1 315 1 41 1 40 1 121 1 245 2 14 1 167 1 125 1 19 1 86 2 108 1 107 1 
90 1 28 1 240 1 93 1 181 1 160 1 315 1 41 2 244 1 322 1 167 1 19 1 107 1 
68 1 309 1 55 1 35 1 116 1 
250 1 130 1 286 2 55 1 220 1 291 1 228 1 299 1 265 1 147 2 68 1 27 1 309 1 35 1 241 1 206 1 155 1 117 1 40 1 76 1 78 1 121 1 245 1 207 1 325 2 279 1 86 1 88 1 
68 1 55 1 35 1 40 1 245 1 276 1 193 1 166 1 86 1 
35 1 206 1 155 1 

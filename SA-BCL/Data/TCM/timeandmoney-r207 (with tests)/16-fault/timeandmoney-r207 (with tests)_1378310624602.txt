#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 (179,300) 35 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 (179,300) 35 88 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 186 279 199 232 244 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 82 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 186 279 52 99 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 193 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 186 279 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 260 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) (109,191) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) (109,191) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 186 200 157 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 86 189 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 (179,300) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 186 279 199 232 244 177 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 (179,300) (179,300) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 82 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 307 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 186 200 157 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 186 203 1 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 186 200 157 (95,160) (95,160) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 (179,300) 35 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 186 279 52 19 5 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 224 261 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 186 200 157 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 241 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 186 279 52 215 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 186 279 199 (274,310) 152 (179,300) (179,300) (154,325) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 193 (274,310) 84 40 (154,325) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 186 279 52 19 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 186 200 157 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 186 279 159 93 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 186 203 1 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 186 203 316 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 186 203 308 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 186 279 199 232 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 78 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 78 234 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (16,65,98,128) (16,65,98,128) (16,65,98,128) 96 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
169 1 29 1 241 1 
169 1 147 2 168 1 
314 1 161 2 318 2 233 2 255 2 269 2 289 1 89 2 
211 1 105 1 72 2 303 2 161 1 163 1 255 1 111 1 269 1 135 1 289 1 43 1 89 1 274 1 199 1 318 1 186 1 279 1 233 1 152 1 300 1 35 1 326 2 
315 1 161 1 318 1 233 1 268 1 255 1 248 1 269 1 289 1 89 1 
161 1 165 1 169 1 29 1 226 1 142 1 315 1 92 1 318 1 233 1 32 1 280 1 37 1 155 1 
161 1 255 1 269 1 165 1 89 1 169 1 29 1 226 1 92 2 142 1 315 1 318 1 233 1 37 1 155 2 
275 1 92 1 139 1 114 1 155 1 
169 1 29 1 190 1 275 1 92 2 94 1 139 1 155 2 
275 1 92 1 155 1 
161 1 268 1 255 1 269 1 289 1 139 1 89 1 315 1 92 1 318 1 233 1 248 1 153 1 155 1 
169 1 
169 1 29 1 275 1 92 2 94 1 129 1 139 1 155 2 
166 2 139 2 26 1 169 1 29 1 275 2 185 1 92 5 94 1 229 1 296 1 150 2 49 1 51 1 68 1 69 1 70 1 175 2 155 5 
211 1 105 1 214 1 72 1 161 1 303 1 163 1 269 1 197 1 89 1 274 1 199 1 318 1 186 1 279 1 233 1 152 1 326 1 
314 1 161 3 318 3 233 3 255 1 269 3 197 1 89 3 
315 1 161 1 318 1 233 1 268 1 269 1 89 1 
39 1 315 1 161 1 318 1 233 1 255 1 181 1 269 1 89 1 
211 1 214 1 72 1 255 2 181 1 289 1 88 1 89 3 226 1 142 1 92 1 186 1 233 3 152 1 300 1 155 1 105 1 161 3 303 1 163 1 269 3 165 1 197 1 274 1 27 1 315 1 199 1 318 3 279 1 35 1 37 1 326 1 
213 1 314 1 161 2 318 2 233 2 269 1 280 1 197 1 89 1 
214 1 161 3 255 1 181 1 269 3 165 1 197 2 89 3 91 1 27 1 169 1 226 1 92 1 315 1 142 1 318 3 233 3 37 1 155 1 
161 2 284 1 181 1 255 1 269 2 197 1 89 2 318 2 233 2 120 1 
211 1 105 1 72 1 199 1 303 1 186 1 163 1 279 1 152 1 326 1 274 1 
211 1 105 1 72 1 199 1 303 1 186 1 163 1 279 1 232 1 244 1 326 1 
212 1 284 2 132 2 75 1 42 1 81 1 290 1 87 2 9 1 141 1 143 1 48 1 231 2 188 1 53 2 102 1 240 1 239 4 55 1 311 1 277 1 118 1 120 2 322 1 
56 1 161 1 269 1 89 1 142 1 315 1 318 1 233 1 
314 1 241 1 
39 1 161 2 181 1 255 1 269 1 89 1 314 2 318 2 233 2 
284 1 120 1 87 1 
211 1 105 1 72 1 199 1 303 1 186 1 163 1 279 1 152 1 82 1 326 1 274 1 
213 1 214 1 161 5 181 1 255 1 269 4 83 1 197 2 89 4 314 1 318 5 233 5 34 1 280 1 
56 1 315 1 161 2 318 2 233 2 268 1 269 2 89 2 
117 1 278 1 46 1 
278 1 164 1 46 1 
278 1 164 1 46 1 
278 1 164 1 46 1 
278 1 46 1 
278 1 46 1 
134 1 125 1 
134 1 125 1 
134 1 125 1 
117 1 278 1 46 1 
117 1 278 1 46 1 
278 1 80 1 46 1 
170 1 278 2 205 1 134 1 125 1 46 2 
127 2 73 1 254 2 271 1 273 1 221 2 46 2 47 2 169 1 170 1 92 2 11 2 278 2 263 3 171 1 15 1 208 1 251 1 155 2 
127 1 254 1 256 1 80 1 182 1 89 2 138 1 47 1 46 1 92 1 11 1 263 1 233 2 155 1 161 2 194 1 269 2 115 1 314 1 318 2 278 1 319 1 251 1 174 1 
18 1 77 1 167 1 
18 1 77 1 62 1 
18 3 146 1 4 1 167 2 36 1 62 1 
18 2 4 1 167 1 36 1 312 1 62 1 
18 2 4 2 167 1 36 1 62 1 
2 2 180 1 81 1 290 1 44 2 138 1 139 4 141 1 92 5 147 3 94 1 296 2 150 1 51 3 155 5 57 1 270 1 166 1 61 1 245 1 313 1 168 1 115 1 29 1 169 2 275 1 198 2 118 1 69 1 175 1 174 1 126 1 
180 2 255 1 81 2 89 1 92 8 94 1 268 1 269 1 270 2 26 1 114 4 29 1 275 5 198 4 118 2 209 1 288 1 289 1 290 2 44 4 139 6 141 2 292 1 293 4 147 6 297 1 296 4 150 2 233 1 51 6 153 1 155 8 161 1 57 2 61 1 166 2 246 1 168 2 169 4 315 1 318 1 247 1 248 1 69 1 175 2 174 4 
2 1 180 1 81 1 290 1 44 2 139 2 141 1 92 3 147 4 296 2 150 1 51 3 155 3 57 1 270 1 166 1 245 1 26 1 168 2 29 1 169 3 198 2 118 1 175 1 174 1 126 1 
2 1 180 1 255 1 81 1 89 1 92 3 268 1 270 1 269 1 26 1 29 1 198 2 118 1 209 1 126 1 288 1 290 1 289 1 44 2 139 2 141 1 147 4 296 2 297 1 150 1 233 1 51 3 153 1 155 3 161 1 57 1 166 1 245 1 168 2 169 3 315 1 318 1 248 1 174 2 175 1 
186 1 
186 1 279 1 52 1 99 1 
241 1 38 1 
193 1 
97 1 
186 1 279 1 
260 1 
285 1 132 4 75 3 76 1 81 1 137 1 224 1 184 1 118 1 48 2 298 1 231 5 173 1 249 2 320 1 123 1 239 9 
285 1 132 4 75 3 76 1 81 1 137 1 224 1 184 1 118 1 48 2 298 1 231 5 173 1 249 2 320 1 123 1 239 9 
285 1 132 4 75 3 76 1 81 1 137 1 224 1 184 1 118 1 48 2 149 1 298 1 231 5 173 1 249 2 320 1 123 1 239 9 
253 1 285 1 132 2 219 1 130 1 75 2 42 1 137 1 9 1 224 1 184 1 48 1 231 2 298 1 53 2 54 1 239 4 102 1 158 1 23 1 311 1 173 2 33 1 249 1 
59 1 76 1 130 1 75 4 132 5 42 2 81 1 137 1 9 2 311 2 224 1 64 1 184 1 118 1 48 3 298 1 231 6 173 1 249 2 320 1 53 4 123 1 239 11 102 2 
65 1 128 1 96 1 98 1 
65 1 128 1 98 1 109 1 
282 1 211 1 0 1 72 1 128 2 77 1 140 1 262 1 146 1 187 1 50 2 16 2 238 1 103 1 191 1 18 2 303 1 163 1 192 1 242 1 167 1 62 1 201 1 121 1 326 1 
65 1 128 1 98 1 109 1 
65 1 128 1 96 1 98 1 
178 1 
255 1 89 1 90 1 92 2 10 3 12 1 264 1 266 1 108 1 267 1 268 1 269 1 196 1 29 1 275 1 276 1 30 1 32 1 280 1 37 1 289 1 226 1 142 1 148 1 296 1 150 1 233 2 51 1 153 1 155 2 161 2 165 1 166 1 63 1 169 1 315 2 318 2 248 1 321 1 69 1 175 1 
255 1 89 1 90 1 92 2 10 3 12 1 264 1 266 1 108 1 267 1 268 1 269 1 196 1 29 1 275 1 276 1 30 1 32 1 280 1 37 1 289 1 226 1 142 1 148 1 296 1 150 1 233 2 51 1 153 1 155 2 161 2 165 1 166 1 63 1 169 1 315 2 318 2 248 1 321 1 69 1 175 1 
259 1 226 1 92 2 142 1 10 2 148 1 296 1 12 1 150 1 233 1 51 1 264 1 155 2 161 1 267 1 165 1 166 1 276 1 315 1 318 1 172 1 32 1 69 1 280 1 175 1 37 1 
105 2 72 2 303 2 283 1 57 1 166 1 275 2 92 2 94 1 186 1 200 1 296 1 150 1 206 1 51 1 69 1 250 1 175 1 326 2 157 1 155 2 
129 1 90 1 226 1 92 3 142 1 10 2 94 1 148 1 12 1 233 1 264 1 155 3 161 1 267 1 165 1 275 2 276 1 315 1 318 1 32 1 280 1 37 1 
129 1 226 1 92 3 142 1 10 3 94 1 148 1 12 1 233 1 264 1 155 3 161 1 267 1 165 1 196 1 29 1 169 1 275 1 276 1 315 1 318 1 32 1 280 1 37 1 
129 1 90 1 226 1 92 3 142 1 94 1 10 3 148 1 12 1 233 1 264 1 155 3 161 1 267 1 165 1 196 1 63 1 29 1 169 1 275 2 276 1 315 1 318 1 32 1 280 1 37 1 
255 1 89 1 90 2 92 3 10 2 94 1 12 1 264 1 266 1 108 1 267 1 268 1 269 1 29 1 275 3 276 1 30 1 32 1 280 1 37 1 129 1 133 1 289 1 226 1 142 1 148 1 296 1 150 1 233 2 51 1 153 1 155 3 161 2 165 1 166 1 63 2 169 1 315 2 318 2 248 1 321 1 69 1 175 1 
259 1 226 1 92 2 142 1 10 2 148 1 296 1 12 1 150 1 233 1 51 1 264 1 155 2 161 1 108 1 267 1 165 1 166 1 276 1 315 1 318 1 32 1 69 1 280 1 175 1 37 1 
255 1 289 1 89 1 226 1 92 2 142 1 10 2 148 1 296 1 12 1 150 1 233 2 51 1 153 1 264 1 155 2 161 2 108 1 266 1 267 1 268 1 269 1 165 1 166 1 169 1 29 1 276 1 315 2 318 2 248 1 32 1 321 1 69 1 280 1 175 1 37 1 
255 1 289 1 89 1 226 1 92 2 142 1 10 2 148 1 296 1 12 1 150 1 233 2 51 1 153 1 264 1 155 2 161 2 108 1 266 1 267 1 268 1 269 1 165 1 166 1 169 1 29 1 276 1 315 2 318 2 248 1 32 1 321 1 69 1 280 1 175 1 37 1 
86 1 259 1 226 1 92 2 142 1 10 2 148 1 296 1 12 1 150 1 233 1 51 1 264 1 189 1 235 1 155 2 161 1 267 1 165 1 166 1 276 1 315 1 318 1 172 1 32 1 69 1 280 1 175 1 37 1 
284 1 75 1 42 1 290 1 137 1 87 1 9 1 311 1 143 1 277 1 118 1 231 2 120 1 53 2 322 1 239 2 240 1 102 1 
55 1 284 1 75 1 132 2 42 1 81 1 87 1 9 1 311 1 141 1 143 1 277 1 48 1 120 1 53 2 239 2 240 1 102 1 
284 2 180 1 75 2 132 2 42 1 290 1 81 1 87 2 137 1 9 1 141 1 143 1 48 1 231 2 53 2 102 1 240 1 239 4 311 1 277 1 118 1 120 2 
284 1 75 1 42 1 290 1 137 1 87 1 45 1 9 1 311 1 277 1 118 1 231 2 120 1 53 2 322 1 239 2 240 1 102 1 
55 1 284 1 75 1 132 2 42 1 81 1 87 1 45 1 9 1 311 1 141 1 277 1 48 1 120 1 53 2 239 2 240 1 102 1 
284 2 180 1 75 2 132 2 42 1 290 1 81 1 87 2 137 1 9 1 45 1 141 1 48 1 231 2 53 2 102 1 240 1 239 4 311 1 277 1 118 1 120 2 
284 2 180 1 75 2 132 2 42 1 290 1 81 1 87 2 137 1 9 1 141 1 48 1 231 2 53 2 239 4 102 1 240 1 311 1 277 1 118 1 120 2 
211 1 105 1 72 1 199 1 303 1 186 1 163 1 279 1 152 1 300 1 326 1 274 1 
211 1 105 1 72 1 199 1 303 1 186 1 177 1 163 1 279 1 232 1 244 1 326 1 
284 2 180 1 75 2 132 2 42 1 290 1 81 1 87 2 137 1 9 1 141 1 48 1 231 2 53 2 102 1 240 1 239 4 311 1 277 1 118 1 202 1 120 2 
211 1 72 1 199 1 303 1 186 1 163 1 279 1 179 1 243 1 152 1 300 1 326 1 274 1 
284 1 132 1 75 1 180 1 255 1 181 1 42 1 81 1 290 1 137 1 87 1 89 1 9 1 141 1 231 2 233 1 53 2 301 1 102 1 240 1 239 3 161 1 269 1 311 1 277 1 318 1 118 1 202 1 120 1 
284 1 76 1 75 2 132 4 42 1 81 1 87 1 9 1 224 1 143 1 184 1 48 2 231 4 53 2 102 1 240 1 239 8 241 1 311 1 314 3 277 1 118 1 249 1 120 1 320 1 123 1 
253 4 284 16 219 1 131 1 75 4 132 9 180 4 42 2 6 1 290 4 81 2 137 2 87 16 136 2 9 2 141 2 48 2 231 13 53 4 102 2 240 2 239 22 106 1 195 1 22 2 112 1 311 2 314 1 277 1 118 4 202 1 33 4 120 6 
211 1 72 1 214 1 132 1 131 1 42 1 220 1 82 1 7 1 89 1 9 1 186 1 231 1 233 1 152 1 53 2 240 1 102 1 239 2 105 1 303 1 161 1 163 1 195 1 269 1 25 1 197 1 274 1 311 1 277 1 199 1 318 1 202 1 279 1 120 1 326 1 
214 1 72 1 132 1 42 1 89 1 9 1 233 1 53 2 239 1 240 1 102 1 105 1 161 1 303 1 307 1 195 1 269 1 197 1 311 1 277 1 318 1 202 1 326 1 
105 1 72 2 303 2 132 1 131 1 42 1 195 1 309 1 43 1 45 1 9 1 311 1 277 1 186 1 200 1 231 1 53 2 326 2 157 1 239 2 240 1 102 1 
284 1 75 1 180 1 132 2 255 1 181 1 42 1 290 1 81 1 87 1 89 1 9 1 141 1 48 1 231 1 233 1 53 2 102 1 240 1 239 3 161 1 269 1 311 1 277 1 318 1 118 1 202 1 120 1 124 1 
253 2 3 1 217 1 218 1 76 1 130 2 75 6 219 2 132 14 180 3 42 4 81 3 290 3 137 3 85 1 8 1 9 4 224 1 141 3 184 1 295 1 48 3 231 14 53 8 236 1 237 1 102 4 239 28 156 1 107 1 304 3 59 1 60 1 113 1 311 4 118 3 31 1 33 2 123 1 
253 4 3 2 217 1 218 1 130 2 75 8 132 22 219 2 180 7 42 3 290 7 81 6 85 1 137 4 136 2 8 1 9 3 141 6 295 1 48 4 231 24 53 6 236 2 156 1 102 3 239 46 107 1 304 4 59 1 22 2 60 1 113 1 311 3 66 1 118 7 33 4 
253 5 3 2 75 13 180 7 76 2 81 5 85 1 8 1 9 4 184 2 102 4 107 1 22 2 113 1 118 7 119 1 33 5 123 2 217 1 218 1 132 23 219 3 130 2 42 4 290 7 136 2 137 7 224 2 141 5 295 1 48 6 231 27 53 8 236 1 237 1 239 50 156 1 304 4 59 1 60 1 311 4 66 1 
253 2 3 1 217 1 218 1 76 1 130 2 75 5 219 2 132 15 180 3 42 4 81 3 290 3 137 3 85 1 8 1 9 4 224 1 141 3 184 1 295 1 48 2 231 15 53 8 236 1 237 1 102 4 239 30 156 1 107 1 304 4 59 1 60 1 113 1 311 4 66 1 118 3 33 2 123 1 
253 3 3 1 217 1 218 1 76 1 130 2 219 2 132 21 180 5 75 8 42 3 290 5 81 5 85 1 137 3 136 1 8 1 9 3 224 1 141 4 184 1 295 1 48 5 231 23 53 6 236 1 156 1 102 3 239 44 107 1 304 4 59 1 22 1 60 1 113 1 311 3 66 1 118 6 249 1 33 3 320 1 123 1 
127 1 73 1 254 1 273 1 221 1 46 1 47 1 169 1 170 1 92 1 11 1 278 1 263 2 171 1 15 1 208 1 251 1 155 1 
127 1 73 1 254 1 273 1 221 1 46 1 47 1 169 1 170 1 92 1 11 1 278 1 263 2 171 1 15 1 208 1 251 1 155 1 
127 1 73 1 254 1 273 1 221 1 46 1 47 1 169 1 170 1 92 1 11 1 278 1 263 2 171 1 15 1 208 1 251 1 155 1 
117 1 205 1 20 1 
117 1 205 1 20 1 
164 1 100 1 
205 1 164 1 100 1 
194 1 182 1 
127 1 254 1 256 1 80 1 182 1 221 1 139 1 138 1 89 2 47 1 46 1 92 1 11 1 263 1 233 2 155 1 161 2 194 1 269 2 115 1 314 1 318 2 278 1 204 1 319 1 171 1 174 1 
170 1 127 1 11 1 73 1 278 1 287 1 254 1 273 1 47 1 46 1 
256 1 80 1 
127 1 11 1 306 1 278 1 110 1 254 1 324 1 47 1 46 1 
117 1 20 1 
205 1 164 1 100 1 
72 2 1 1 286 1 131 1 132 1 42 1 43 2 9 1 294 1 186 1 231 1 233 2 53 2 240 1 102 1 239 2 303 2 161 2 195 1 309 1 28 1 311 1 277 1 318 2 202 1 203 1 67 1 326 2 
211 1 103 1 104 1 18 2 72 2 303 2 163 1 192 1 41 1 77 1 243 1 167 1 140 1 62 1 227 1 146 1 230 1 187 1 326 2 
103 1 17 1 211 1 18 2 72 1 303 1 163 1 192 1 41 1 77 1 167 1 140 1 62 1 146 1 230 1 187 1 326 1 
104 1 105 1 72 1 160 1 303 1 192 1 186 1 95 1 200 1 326 1 157 1 
103 1 104 1 211 1 18 2 72 1 303 1 163 1 192 1 41 1 77 1 167 1 140 1 62 1 227 1 146 1 230 1 187 1 326 1 
252 1 
211 1 105 1 72 1 161 1 303 1 163 1 255 1 269 1 289 1 89 1 274 1 199 1 318 1 186 1 279 1 233 1 152 1 300 1 35 1 326 1 
57 1 166 1 44 2 168 2 29 2 169 4 198 2 147 4 296 2 150 1 206 1 249 1 51 1 69 1 175 1 
169 1 29 1 185 1 296 1 241 1 49 1 51 1 
92 1 147 1 94 1 296 1 150 1 51 1 155 1 108 1 21 1 166 1 168 1 169 2 29 1 275 1 69 1 281 1 175 1 
105 1 72 1 303 1 19 1 166 1 5 1 186 1 279 1 150 1 52 1 69 1 175 1 326 1 
253 1 218 1 219 1 180 2 290 2 81 2 44 5 85 1 8 1 141 2 92 1 228 1 94 1 147 6 13 3 296 5 150 2 51 8 155 1 156 1 265 1 305 1 57 1 166 2 113 1 168 3 169 5 29 2 275 1 198 5 118 2 206 1 33 1 69 2 175 2 
266 1 166 1 224 1 92 1 184 1 261 1 296 1 13 1 150 1 51 1 69 1 175 1 155 1 
166 1 29 1 169 1 185 1 296 1 150 1 49 1 51 1 69 1 175 1 
180 2 290 2 81 2 44 5 168 5 169 5 141 2 198 5 228 1 118 2 147 10 13 2 296 5 51 5 299 1 
169 1 29 1 275 1 92 1 94 1 155 1 
72 2 283 1 222 1 92 1 94 1 186 1 296 1 150 1 51 1 155 1 157 1 105 2 303 2 57 1 166 1 275 2 200 1 206 1 69 1 250 1 175 1 326 2 
11 1 272 1 47 1 
11 1 210 1 47 1 
11 1 210 1 47 1 
11 1 210 1 47 1 
11 1 47 1 
278 1 46 1 
11 1 272 1 47 1 
11 1 272 1 47 1 
11 1 73 1 194 1 207 1 47 1 
75 2 130 1 76 1 42 2 137 1 9 2 311 2 224 1 184 1 48 1 53 4 123 1 102 2 
224 1 184 1 118 1 48 2 231 4 241 1 132 4 75 2 76 1 249 1 320 1 81 1 123 1 239 8 
132 2 75 2 180 1 42 1 81 1 290 1 137 1 9 1 311 1 141 1 225 1 118 1 48 1 231 2 53 2 102 1 239 4 
253 2 75 2 219 1 132 6 180 2 22 1 290 2 81 2 137 1 136 1 141 2 118 2 48 1 231 6 33 2 239 12 
253 2 76 1 75 9 180 2 132 11 130 2 42 2 290 2 81 3 137 4 136 1 9 2 224 2 141 2 184 2 48 5 231 10 53 4 54 1 239 21 102 2 106 1 22 1 311 2 118 3 249 1 33 2 320 1 123 1 
132 1 33 1 239 1 
253 1 231 1 239 1 
132 3 180 1 75 3 42 1 290 1 81 1 137 1 311 1 9 1 225 1 141 1 118 1 48 2 231 3 53 2 299 1 102 1 239 6 
253 2 218 1 132 11 219 1 180 4 75 4 42 1 290 4 81 4 136 1 137 2 85 1 8 1 9 1 141 4 48 2 231 11 53 2 239 22 156 1 102 1 59 1 22 1 113 1 311 1 118 4 33 2 
132 3 75 2 81 1 137 1 224 1 184 1 118 1 48 1 231 3 320 1 239 6 
75 2 132 1 130 1 76 1 42 1 137 1 9 1 311 1 224 1 184 1 48 1 53 2 54 1 123 1 239 1 102 1 
59 1 75 4 132 5 42 1 81 2 137 2 311 1 9 1 224 1 184 1 261 1 118 2 48 2 231 5 320 1 53 2 102 1 239 10 
59 1 75 1 42 1 290 1 137 1 9 1 311 1 118 1 231 2 53 2 102 1 239 2 
59 1 132 2 75 2 180 1 42 1 81 1 290 1 137 1 9 1 311 1 141 1 118 1 48 1 231 2 53 2 102 1 239 4 
59 1 132 1 75 1 42 1 9 1 311 1 224 1 184 1 48 1 231 1 53 2 102 1 239 2 
253 4 74 1 76 1 130 2 132 15 219 1 180 4 75 9 42 5 290 4 81 5 137 5 136 1 9 5 224 3 225 1 141 4 184 3 144 1 48 4 231 14 53 10 54 1 237 1 102 5 239 29 158 1 59 1 22 1 311 5 118 5 33 4 320 1 123 1 
253 1 218 1 76 1 130 1 132 12 219 1 180 2 75 9 42 2 290 2 81 4 137 4 85 1 8 1 9 2 224 2 141 1 184 2 261 1 48 5 231 16 53 4 239 28 156 1 102 2 59 1 113 1 311 2 118 5 249 1 33 1 320 2 123 1 
253 1 218 1 76 1 130 1 132 8 219 1 180 2 75 4 42 3 290 2 81 2 137 1 85 1 8 1 9 3 224 1 225 1 141 1 184 1 48 3 231 11 53 6 239 19 156 1 102 3 59 1 113 1 311 3 118 3 249 1 33 1 320 1 123 1 
253 2 218 1 76 1 130 1 132 16 219 1 180 4 75 6 42 3 290 4 81 5 136 1 137 2 85 1 8 1 9 3 224 1 225 1 141 4 184 1 48 4 231 15 53 6 239 31 156 1 102 3 59 1 22 1 113 1 311 3 118 5 249 1 33 2 320 1 123 1 
253 2 218 1 76 1 130 1 132 13 219 1 180 4 75 7 42 3 290 4 81 4 136 1 137 3 85 1 8 1 9 3 224 1 225 1 141 3 184 1 48 4 231 16 53 6 239 29 156 1 102 3 59 1 22 1 113 1 311 3 118 5 249 1 33 2 320 1 123 1 
253 1 218 1 76 1 130 1 132 12 219 1 180 2 75 9 42 2 290 2 81 4 137 4 85 1 8 1 9 2 224 2 141 1 184 2 261 1 48 5 231 16 53 4 239 28 156 1 102 2 59 1 113 1 311 2 118 5 249 1 33 1 320 2 123 1 
253 2 218 1 132 11 219 1 180 4 75 4 42 1 290 4 81 4 136 1 137 2 85 1 8 1 9 1 141 4 48 2 231 11 53 2 239 22 156 1 102 1 59 1 22 1 113 1 311 1 118 4 33 2 
253 2 218 1 76 1 130 2 132 14 219 1 180 4 75 7 42 4 290 4 81 4 85 1 136 1 137 3 8 1 9 4 224 1 225 1 141 3 184 1 48 4 231 16 53 8 239 30 156 1 102 4 59 1 22 1 113 1 311 4 118 5 249 1 33 2 320 1 123 1 
253 1 132 4 219 1 180 1 75 1 42 2 290 1 81 1 136 1 9 2 141 1 48 1 231 3 53 4 237 1 239 7 156 1 102 2 59 1 311 2 118 1 33 2 
76 1 75 4 132 2 137 2 224 2 184 2 48 2 231 2 123 2 239 4 
253 1 132 4 219 1 180 1 75 1 42 2 290 1 81 1 136 1 9 2 141 1 48 1 231 3 53 4 237 1 239 7 156 1 102 2 59 1 311 2 118 1 33 2 
213 1 314 1 302 1 161 1 318 1 233 1 280 1 
213 1 302 1 176 1 161 1 58 1 183 1 314 1 145 1 318 1 233 1 14 1 280 1 
105 1 72 1 303 1 186 1 200 1 241 1 326 1 157 1 
211 1 105 1 72 1 161 1 303 1 163 1 269 1 197 1 89 1 274 1 199 1 318 1 186 1 279 1 233 1 326 1 
161 1 318 1 151 1 233 1 269 1 197 1 89 1 
161 1 318 1 151 1 233 1 269 1 197 1 89 1 
92 1 151 1 155 1 
92 1 151 1 155 1 
211 1 72 1 303 1 163 1 326 1 223 1 
105 1 72 1 215 1 303 1 186 1 279 1 52 1 326 1 
211 1 72 1 179 1 42 1 89 1 9 1 294 1 186 1 233 1 152 1 53 2 300 1 154 1 240 1 102 1 161 1 303 1 163 1 243 1 269 1 197 1 311 1 274 1 277 1 199 1 318 1 202 1 279 1 326 1 
40 1 105 1 72 1 303 1 193 1 166 1 84 1 222 1 310 1 139 1 92 1 150 1 69 1 325 1 326 1 175 1 155 1 
72 1 19 1 303 1 186 1 279 1 52 1 326 1 223 1 
105 1 72 2 303 2 186 1 200 1 243 1 326 2 157 1 
159 1 258 1 93 1 72 1 303 1 186 1 279 1 326 1 
211 1 105 1 18 1 72 1 303 1 163 1 187 1 77 1 326 1 62 1 
103 1 72 2 1 1 303 2 186 1 203 1 243 1 326 2 
105 1 316 1 72 2 303 2 186 1 203 1 243 1 326 2 
105 1 72 2 303 2 186 1 203 1 308 1 243 1 326 2 
211 1 105 1 72 1 161 1 303 1 163 1 269 1 197 1 89 1 199 1 318 1 186 1 279 1 233 1 232 1 326 1 
151 1 
216 1 78 1 323 1 28 1 
216 1 24 1 234 1 
216 2 78 1 323 1 28 1 
116 1 92 1 216 2 78 1 323 1 24 1 234 1 139 1 28 1 155 1 
65 1 128 1 96 1 98 1 
162 1 121 1 71 1 122 1 
0 1 121 1 
0 1 201 1 241 1 121 1 
65 1 128 1 98 1 
242 1 50 1 238 1 
65 1 128 1 96 1 98 1 
65 1 128 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 1 317 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 18 1 128 1 96 1 98 1 62 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
65 1 128 2 98 1 50 1 16 1 122 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
121 2 79 2 257 1 101 1 
65 1 128 1 96 1 98 1 
65 1 128 1 96 1 98 1 
291 1 
65 1 128 1 96 1 98 1 

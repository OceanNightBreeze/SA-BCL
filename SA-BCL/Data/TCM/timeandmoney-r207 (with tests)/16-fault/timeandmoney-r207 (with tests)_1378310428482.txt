#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 99 (42,135,146) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (203,237) 58 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 99 83 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (203,237) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (38,263) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (38,263) 122 117 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (38,263) 122 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 14 (88,184,308) (88,184,308) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 14 (88,184,308) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (226,268) (130,239,295) (88,184,308) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (217,248) (129,281) (129,281) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 14 (88,184,308) (88,184,308) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 99 (42,135,146) 160 202 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 17 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (203,237) 58 292 133 90 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 7 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (203,237) 58 98 70 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (203,237) 58 233 33 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (203,237) 58 98 185 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (203,237) 58 233 70 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (203,237) 58 233 70 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (203,237) 58 233 70 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (203,237) 58 233 70 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (203,237) 58 233 70 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 233 70 196 23 320 143 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 233 70 196 23 320 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 233 70 196 23 320 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 233 70 196 23 320 143 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 233 70 140 23 320 143 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 14 (130,239,295) (130,239,295) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 14 (130,239,295) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (217,248) (217,248) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 14 (130,239,295) (130,239,295) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 257 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 13 140 23 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 233 70 140 23 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 233 70 196 23 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 233 70 140 23 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 233 70 140 23 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 233 70 196 23 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 233 70 140 23 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 233 70 196 23 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 99 83 92 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 99 83 92 235 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (203,237) 58 139 (68,256) (68,256) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
282 1 198 1 168 1 246 1 287 5 43 2 93 1 5 2 171 2 249 1 205 1 252 1 48 1 213 2 144 9 62 1 147 1 266 2 69 9 112 2 153 2 312 4 191 1 192 6 194 3 158 1 78 1 275 1 
282 1 198 1 168 1 246 1 287 5 43 2 93 1 5 2 171 2 249 1 205 1 252 1 48 1 213 2 144 9 62 1 147 1 266 2 69 9 112 2 153 2 312 4 191 1 192 6 194 3 158 1 78 1 275 1 
282 1 198 1 168 1 246 1 287 6 43 2 93 1 5 2 171 2 249 1 205 1 252 1 48 1 213 2 144 10 62 1 147 1 266 2 69 10 112 2 153 2 312 5 191 1 192 7 194 4 158 1 78 1 275 1 
282 1 168 1 246 1 287 4 43 2 93 1 5 1 171 2 249 1 205 1 252 1 48 1 213 2 144 7 62 1 147 1 266 2 69 7 112 2 153 2 312 3 191 1 192 4 194 2 158 1 78 1 275 1 
144 4 198 1 147 1 266 1 287 3 43 1 69 4 112 1 5 2 153 1 249 1 312 2 252 1 191 1 192 3 194 1 213 1 275 1 
144 2 261 1 266 1 287 1 69 2 43 1 112 1 205 1 249 1 171 1 48 1 191 1 296 1 213 1 212 1 275 1 
144 3 266 2 287 2 69 3 249 1 171 1 312 1 191 1 192 1 213 2 194 1 78 1 275 1 
198 1 41 1 287 5 43 1 5 2 171 1 249 1 252 1 213 2 144 9 62 1 147 1 266 2 69 9 112 1 153 1 312 4 191 1 192 7 194 3 158 1 78 1 275 1 278 1 
198 1 41 1 287 5 43 1 5 2 171 1 249 1 252 1 213 2 144 9 62 1 147 1 266 2 69 9 112 1 153 1 312 4 191 1 192 7 194 3 158 1 78 1 275 1 278 1 
17 1 271 1 290 1 
50 1 
178 1 114 2 138 2 32 1 149 2 325 2 132 2 73 2 
1 1 285 2 131 2 288 1 170 1 132 2 209 1 54 1 298 1 215 1 214 1 138 2 173 2 176 1 300 1 60 2 177 1 260 1 178 1 306 1 145 1 265 1 224 1 225 1 149 3 155 1 73 2 190 1 114 2 28 1 157 1 234 2 161 1 32 1 124 1 80 1 325 3 
114 1 64 1 162 1 138 1 32 1 218 1 149 1 325 1 132 1 73 1 
99 1 42 1 
146 1 128 1 149 1 271 1 290 1 132 1 73 1 114 1 294 1 135 2 102 1 138 1 218 1 327 2 325 1 
293 1 87 1 135 1 310 1 327 1 
293 1 135 2 245 1 150 1 310 1 327 2 271 1 290 1 
293 1 135 1 327 1 
197 1 64 1 310 1 149 1 132 1 73 1 114 1 135 1 162 1 32 1 138 1 218 1 327 1 325 1 
271 1 
293 1 135 2 89 1 150 1 310 1 327 2 271 1 290 1 
37 1 108 1 150 1 310 2 311 2 228 1 271 1 290 1 96 2 293 2 26 1 135 5 76 2 29 1 10 1 219 1 276 1 327 5 328 1 
178 1 17 1 
309 1 224 1 131 1 203 1 149 2 132 1 73 1 190 1 28 1 54 1 157 1 215 1 138 1 173 1 80 1 124 1 60 1 177 1 325 2 84 1 
178 2 149 2 132 1 73 2 114 1 274 1 9 1 138 1 325 2 
58 1 203 1 
178 1 224 1 131 1 149 1 154 1 190 1 28 1 54 1 157 1 215 1 173 1 60 1 124 1 80 1 177 1 325 1 
178 1 179 1 309 2 149 4 132 4 73 4 114 1 210 1 9 1 138 4 299 1 218 1 325 4 84 1 
66 1 162 1 138 2 218 1 149 2 325 2 132 2 73 2 
114 1 178 1 309 1 138 3 149 3 325 3 132 3 73 3 
162 1 138 1 218 1 149 1 325 1 132 1 73 1 
114 1 274 1 9 1 138 1 218 1 149 1 325 1 132 1 73 1 
1 1 285 2 128 1 131 1 288 1 132 3 294 1 135 1 209 1 54 1 298 1 102 1 215 1 9 1 138 3 173 1 176 1 60 1 177 1 218 1 260 1 178 1 145 1 146 1 182 1 265 1 309 1 222 1 224 1 149 4 155 1 73 3 190 1 114 2 28 1 157 1 234 1 161 1 32 1 80 1 124 1 325 4 327 1 84 1 
99 1 309 1 138 1 149 1 325 1 83 1 132 1 73 1 
146 1 182 1 128 1 309 2 149 3 271 1 132 3 73 3 114 1 135 1 294 1 102 1 9 1 159 1 138 3 218 1 327 1 325 3 84 1 
305 1 309 1 203 1 149 2 132 2 73 2 114 1 9 1 138 2 325 2 
178 1 224 1 131 1 149 1 190 1 28 1 54 1 157 1 215 1 173 1 60 1 124 1 80 1 177 1 325 1 
178 1 0 1 224 1 131 1 149 1 190 1 28 1 54 1 215 1 173 1 163 1 60 1 124 1 80 1 325 1 
148 1 237 1 
66 1 102 1 138 1 218 1 149 1 325 1 132 1 73 1 
38 1 221 1 
38 1 221 1 
263 1 57 1 
263 1 57 1 
263 1 57 1 
38 1 221 1 
38 1 221 1 
38 1 221 1 
38 1 221 1 
38 1 221 1 
38 1 221 1 
38 1 221 1 
38 1 221 1 
38 1 135 1 221 1 117 1 122 1 164 1 327 1 
38 1 221 1 122 1 164 1 
43 1 112 1 153 1 
212 1 43 1 112 1 
107 1 212 1 226 1 112 3 153 2 270 1 
107 1 212 1 268 1 112 2 153 1 270 1 
107 1 212 1 112 2 153 1 270 2 
37 1 91 1 45 1 290 1 250 1 96 1 293 1 50 3 98 1 135 5 219 2 258 2 267 2 186 1 223 1 20 1 70 1 227 1 311 1 150 1 310 4 271 2 24 1 76 1 115 1 315 2 233 1 195 1 34 1 35 1 327 5 328 3 
37 1 87 5 91 2 290 1 206 1 250 3 96 2 134 1 293 6 46 1 50 9 98 3 135 9 10 1 219 6 258 6 267 6 223 2 70 3 227 3 310 7 150 1 311 2 189 1 271 5 24 3 115 1 76 2 31 5 233 3 195 4 81 1 322 1 327 9 328 8 
91 1 290 1 250 1 96 1 50 4 98 1 135 3 10 1 219 2 258 2 267 2 186 1 223 1 70 1 310 2 311 1 227 1 271 3 24 2 76 1 315 1 195 1 233 1 34 1 327 3 328 3 
91 1 290 1 206 1 250 2 96 1 134 1 50 7 98 2 135 4 10 1 219 4 258 4 267 4 186 1 223 1 70 2 311 1 310 3 227 2 189 1 271 4 24 3 76 1 315 2 195 2 233 2 34 1 327 4 328 5 
54 1 17 1 301 1 
54 1 77 1 
85 1 
190 1 54 1 215 1 
54 1 123 1 
190 1 54 1 
190 1 75 1 54 3 307 1 215 1 301 2 
63 3 68 1 288 3 21 1 227 1 225 4 250 1 52 1 317 1 116 1 254 2 234 7 101 1 256 1 139 2 302 1 277 1 
63 3 68 1 288 3 21 1 227 1 225 4 250 1 52 1 317 1 116 1 254 2 234 7 101 1 256 1 139 2 302 1 277 1 
63 3 68 1 288 3 21 1 227 1 225 4 250 1 52 1 317 1 116 1 254 2 273 1 234 7 101 1 256 1 139 2 302 1 277 1 
241 4 39 1 285 4 288 18 289 1 292 4 250 5 52 1 98 4 254 3 100 2 298 2 101 1 256 1 139 3 59 1 302 2 260 2 181 1 63 8 68 1 21 2 70 4 225 19 227 5 155 2 113 1 156 1 116 2 317 5 234 37 233 4 161 2 326 1 36 1 277 2 
166 1 285 4 288 4 250 1 52 1 298 2 254 3 100 1 256 1 139 2 302 1 260 2 63 4 68 1 21 1 227 1 225 5 155 2 317 1 116 1 119 1 234 9 161 2 277 1 
14 1 144 1 88 1 264 1 184 1 266 1 69 1 131 1 171 1 249 1 6 1 97 1 213 1 173 1 175 1 60 1 
14 1 144 2 88 1 264 1 266 1 69 2 131 1 171 1 97 1 192 1 213 1 120 1 216 1 174 1 173 1 175 1 60 1 
144 1 308 1 264 1 69 1 131 1 226 1 112 1 171 1 97 1 295 1 192 1 212 1 216 1 174 1 173 1 175 1 80 1 124 1 60 1 220 1 
144 1 105 1 264 2 129 1 266 1 69 1 224 1 131 1 248 1 171 2 97 2 213 1 120 1 173 1 175 2 60 1 281 1 
14 1 144 1 88 1 264 1 184 1 266 1 69 1 131 1 171 1 249 1 97 1 213 1 174 1 173 1 175 1 60 1 
201 1 
37 1 42 1 202 1 131 2 91 1 95 1 96 1 293 2 99 1 135 2 54 1 8 1 173 2 60 2 219 1 224 2 311 1 150 1 152 1 229 1 190 1 316 1 76 1 272 1 160 1 80 1 124 1 125 1 327 2 328 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 293 1 99 1 316 1 135 2 89 1 42 1 160 1 202 1 150 1 327 2 
37 1 42 1 202 1 311 1 96 1 229 1 99 1 135 1 76 1 316 1 160 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
229 1 99 1 316 1 135 1 42 1 160 1 202 1 327 1 
37 1 42 1 202 1 311 1 96 1 229 1 99 1 135 1 76 1 316 1 160 1 327 1 
17 1 148 1 
1 1 90 1 265 1 285 2 203 1 288 1 155 1 133 1 292 1 298 1 234 1 58 1 121 1 161 1 260 1 
1 1 169 1 285 2 131 1 288 1 132 1 54 1 298 1 215 1 173 1 138 1 60 1 177 1 260 1 178 1 305 1 145 1 306 1 265 1 309 1 224 1 149 2 225 1 154 1 73 1 155 1 190 1 28 1 157 1 118 1 232 1 234 2 121 1 161 1 80 1 124 1 325 2 84 1 
145 1 1 1 285 2 265 1 309 1 131 1 224 1 288 1 149 1 132 1 155 1 73 1 7 1 298 1 234 1 173 1 161 1 138 1 121 1 60 1 325 1 84 1 260 1 
1 1 285 2 243 1 131 8 288 1 132 1 6 1 251 1 54 3 298 1 174 1 138 1 173 8 60 7 300 2 259 1 142 1 303 1 260 1 306 1 145 1 265 1 309 1 224 2 148 1 149 1 225 1 152 1 73 1 155 1 190 2 272 1 234 2 161 1 79 1 321 1 80 2 124 2 325 1 
1 1 285 2 203 1 288 2 132 1 250 1 98 1 298 1 9 1 58 1 138 1 260 1 265 1 67 1 70 1 149 1 227 1 225 1 155 1 73 1 114 1 233 1 234 3 161 1 121 1 325 1 
148 1 
148 1 
148 1 
1 1 265 1 285 2 203 1 227 1 225 2 155 1 298 1 234 2 233 1 58 1 161 1 33 1 259 1 260 1 
1 1 265 1 285 2 185 1 203 1 288 2 155 1 250 1 98 1 298 1 234 2 58 1 161 1 259 1 260 1 
1 1 265 1 285 2 203 1 70 1 227 1 225 2 155 1 298 1 234 2 233 1 58 1 161 1 259 1 260 1 
1 1 265 1 285 2 203 1 70 1 227 1 225 2 155 1 298 1 233 1 234 2 58 1 161 1 260 1 
1 1 285 2 131 1 288 1 54 1 298 1 215 1 173 1 176 1 60 1 177 1 260 1 178 1 306 1 145 1 265 1 224 1 225 1 149 1 155 1 190 1 28 1 157 1 234 2 161 1 80 1 124 1 325 1 
0 1 1 1 200 1 285 2 131 1 288 1 54 1 298 1 215 1 173 1 60 1 260 1 178 1 306 1 145 1 265 1 224 1 225 1 149 1 155 1 190 1 28 1 234 2 161 1 163 1 80 1 124 1 325 1 
1 1 265 1 285 2 203 1 70 1 227 1 225 2 155 1 298 1 234 2 233 1 58 1 121 1 161 1 260 1 
1 1 285 2 131 1 203 1 6 1 54 1 55 1 298 1 215 1 58 1 173 1 176 1 60 1 177 1 260 1 265 1 70 1 225 2 227 1 149 1 155 1 190 1 28 1 157 1 234 2 233 1 161 1 80 1 124 1 325 1 
1 1 265 1 285 2 203 1 70 1 225 2 227 1 149 1 132 1 73 1 155 1 114 1 49 1 298 1 234 2 233 1 9 1 58 1 138 1 121 1 161 1 325 1 260 1 
241 3 285 4 288 10 289 1 292 3 250 2 51 1 98 2 297 1 298 2 59 1 260 2 143 1 15 1 63 2 70 3 225 11 227 3 23 1 155 2 230 2 156 2 317 2 193 1 196 1 119 1 234 21 233 3 161 2 320 1 
143 1 241 2 285 2 70 1 288 5 227 1 225 6 23 1 292 2 155 1 230 2 51 2 156 2 297 1 193 1 298 1 233 1 196 1 234 11 119 1 161 1 320 2 260 1 
241 3 285 4 288 10 289 1 292 3 250 2 51 1 98 2 297 1 298 2 59 1 260 2 143 1 15 1 63 2 70 3 225 11 227 3 23 1 155 2 230 2 156 2 317 2 193 1 196 1 119 1 234 21 233 3 161 2 320 1 
241 3 285 4 288 10 289 1 292 3 250 2 51 1 98 2 297 1 298 2 59 1 260 2 143 1 15 1 63 2 70 3 225 11 227 3 23 1 155 2 230 2 156 2 317 2 193 1 196 1 119 1 234 21 233 3 161 2 320 1 
241 3 285 2 288 14 289 1 250 4 292 3 52 1 51 1 98 3 297 1 254 1 298 1 256 1 139 1 59 1 140 1 13 1 260 1 143 1 63 3 68 1 21 1 70 4 225 17 227 5 23 1 155 1 230 2 156 2 116 1 317 2 193 1 196 1 119 1 234 31 233 4 161 1 320 1 
1 1 242 1 285 2 243 1 131 2 288 1 54 1 136 1 298 1 173 2 300 2 60 2 303 1 260 1 304 1 306 1 145 1 265 1 19 1 149 2 225 1 73 2 155 1 190 1 25 1 234 2 121 1 161 1 80 1 124 1 325 2 
14 1 239 1 97 1 65 1 130 1 173 2 174 1 131 2 60 2 6 1 
14 1 239 1 97 1 318 1 173 1 174 1 131 1 60 1 
97 1 65 1 173 1 217 1 131 1 224 1 60 1 248 1 
14 1 239 1 97 1 65 1 130 1 173 1 174 1 131 1 60 1 
280 1 
26 1 17 1 219 1 276 1 328 1 271 1 290 1 
37 1 269 1 150 1 311 1 290 1 271 2 96 1 293 1 24 1 50 1 135 1 76 1 253 1 137 1 219 1 327 1 328 1 
37 1 224 1 131 1 311 1 247 1 44 1 291 1 96 1 190 1 75 1 76 1 54 2 77 1 215 1 173 1 80 2 124 1 60 1 257 1 328 1 
37 1 241 1 267 4 70 1 227 1 311 1 271 2 23 1 250 1 96 1 292 1 24 2 50 4 98 1 76 1 156 1 297 1 233 1 196 1 219 3 258 4 140 1 328 4 13 1 
37 1 197 1 4 1 132 1 96 1 250 1 52 1 135 1 138 1 218 1 219 2 11 1 64 1 21 1 149 1 311 1 227 2 73 1 114 1 74 2 76 1 116 1 162 1 32 1 325 1 323 1 327 1 328 2 
37 1 311 1 290 1 271 1 96 1 26 1 76 1 219 1 276 1 328 1 
4 1 267 5 70 2 227 2 271 5 250 2 24 5 50 10 98 2 233 2 257 1 219 5 258 5 328 5 
293 1 135 1 150 1 327 1 271 1 290 1 
37 1 240 1 131 4 91 2 95 1 96 2 293 4 135 3 54 1 8 1 173 4 10 1 60 4 219 2 180 2 187 1 224 2 311 2 150 2 152 1 190 1 76 2 272 1 236 1 80 1 124 1 125 2 327 3 328 2 
1 1 285 2 131 1 288 1 132 2 209 1 54 1 298 1 215 1 173 1 138 2 176 1 60 1 177 1 260 1 178 1 145 1 265 1 224 1 149 3 155 1 73 2 114 2 190 1 28 1 157 1 234 1 161 1 32 1 124 1 80 1 325 3 
37 1 267 2 91 1 311 1 290 2 271 4 96 1 24 2 50 4 76 1 139 1 125 1 219 2 258 2 328 1 
16 1 319 1 141 1 
167 1 3 1 319 1 188 1 141 1 
16 1 319 1 141 1 
16 1 319 1 141 1 
183 1 319 1 141 1 
183 1 319 1 141 1 
183 1 319 1 141 1 
319 1 141 1 
38 1 221 1 
63 3 285 4 68 1 288 4 21 1 227 1 225 4 250 1 155 2 52 1 317 1 116 1 254 2 298 2 100 1 234 8 161 2 256 1 139 1 260 2 
63 2 17 1 68 1 288 3 21 1 227 1 225 3 250 1 52 1 116 1 254 2 234 6 256 1 139 1 
285 2 288 2 70 1 227 1 225 2 250 1 155 1 98 1 298 1 56 1 233 1 234 4 161 1 260 1 
156 1 241 1 234 2 288 1 225 1 292 1 
241 2 285 2 288 12 289 1 250 5 292 2 133 1 52 2 98 2 254 4 100 1 298 1 256 1 139 1 59 1 260 1 63 8 68 1 21 2 70 2 227 5 225 13 155 1 116 2 317 4 233 2 234 25 161 1 323 1 
234 1 288 1 292 1 
241 1 234 1 225 1 
63 1 285 2 288 3 70 1 227 1 225 3 155 1 250 1 98 1 317 1 298 1 56 1 234 6 233 1 161 1 257 1 260 1 
241 1 285 2 70 2 288 4 227 2 225 6 23 1 250 1 155 1 292 1 98 1 156 1 297 1 298 1 233 2 196 1 119 1 234 10 161 1 140 1 13 1 260 1 
52 1 63 2 317 1 116 1 254 1 234 6 21 1 288 3 225 3 227 1 250 1 
63 2 39 1 285 2 68 1 21 1 288 2 225 1 155 1 317 1 116 1 254 1 100 1 298 1 234 3 256 1 161 1 260 1 
63 5 285 2 21 2 288 5 225 5 227 2 155 1 250 2 52 1 116 2 317 2 298 1 254 3 119 1 234 10 161 1 323 1 260 1 
63 1 285 2 227 1 225 2 155 1 317 1 298 1 119 1 233 1 234 2 161 1 260 1 
63 1 285 2 288 2 70 1 227 1 225 2 250 1 155 1 98 1 317 1 298 1 119 1 233 1 234 4 161 1 260 1 
15 1 63 2 39 1 285 6 288 2 21 1 225 1 155 3 116 1 317 1 100 1 298 3 254 1 234 3 119 1 161 3 260 3 
39 1 241 4 285 10 288 21 289 1 292 4 250 6 52 2 98 4 254 4 100 2 298 5 56 1 256 1 139 1 59 1 260 5 15 1 63 11 68 1 21 3 70 4 225 20 227 6 113 1 155 5 156 1 116 3 317 7 119 1 234 41 233 4 161 5 326 1 36 1 
241 1 285 2 288 4 250 1 292 1 52 1 298 1 254 2 256 1 139 1 260 1 63 2 68 1 21 1 227 1 225 4 23 1 155 1 156 1 116 1 234 8 119 1 161 1 
241 1 285 4 288 5 289 1 250 1 292 2 52 1 254 2 298 2 56 1 256 1 139 1 260 2 63 3 68 1 21 1 70 1 225 6 227 2 23 1 155 2 156 1 116 1 317 1 234 11 119 1 233 1 161 2 
241 1 285 2 70 1 288 2 227 1 225 3 23 1 155 1 292 1 156 1 297 1 298 1 233 1 196 1 119 1 234 5 161 1 260 1 
241 1 285 2 70 2 288 4 227 2 225 6 23 1 250 1 155 1 292 1 98 1 156 1 297 1 298 1 233 2 196 1 119 1 234 10 161 1 140 1 13 1 260 1 
241 1 285 2 288 4 250 1 292 1 52 1 298 1 254 2 256 1 139 1 260 1 63 2 68 1 21 1 227 1 225 4 23 1 155 1 156 1 116 1 234 8 119 1 161 1 
241 1 285 2 70 2 288 4 227 2 225 6 23 1 250 1 155 1 292 1 98 1 156 1 297 1 298 1 233 2 196 1 119 1 234 10 161 1 140 1 13 1 260 1 
241 1 285 4 70 1 288 2 227 1 225 3 23 1 155 2 292 1 156 1 297 1 298 2 233 1 196 1 119 1 56 1 234 5 161 2 260 2 
15 1 241 1 285 4 70 2 288 4 227 2 225 6 23 1 250 1 155 2 292 1 98 1 156 1 297 1 298 2 233 2 196 1 119 1 234 10 161 2 140 1 13 1 260 2 
63 6 68 1 288 4 21 3 227 1 225 3 250 1 52 1 116 3 317 3 254 3 234 7 256 2 
15 1 241 1 285 4 70 1 288 2 227 1 225 3 23 1 155 2 292 1 156 1 297 1 298 2 233 1 196 1 119 1 234 5 161 2 260 2 
99 1 92 1 83 1 
47 1 99 1 103 1 92 1 235 1 111 1 83 1 238 1 
190 1 54 1 272 1 17 1 173 1 131 1 224 1 80 1 124 1 60 1 152 1 
178 1 309 1 224 1 131 1 149 2 132 1 73 1 190 1 28 1 54 1 215 1 138 1 173 1 80 1 60 1 124 1 177 1 325 2 
178 1 180 1 309 1 131 1 149 2 132 1 73 2 190 2 28 1 294 1 54 3 102 1 215 2 138 2 173 1 165 1 123 1 80 1 60 1 124 1 218 1 177 1 325 2 
0 1 131 2 132 1 294 1 54 3 102 1 215 2 173 2 138 2 60 2 218 1 178 1 180 1 309 1 149 2 73 2 190 2 28 1 30 1 165 1 124 1 80 1 123 1 325 2 
128 1 131 3 94 1 290 1 293 1 135 2 54 4 215 1 173 3 60 3 301 1 180 1 224 1 271 1 190 1 314 1 30 1 77 1 165 1 124 1 80 1 123 1 327 2 
180 1 128 1 224 1 131 3 271 1 290 1 190 1 293 1 135 2 54 4 30 1 77 1 215 1 173 3 165 1 123 1 80 1 60 3 124 1 301 1 327 2 104 1 
173 1 131 1 80 1 124 1 60 1 142 1 
283 1 86 1 224 2 131 7 72 1 6 1 251 1 190 2 75 1 54 3 215 1 174 1 173 7 79 1 300 1 321 1 60 6 124 2 80 3 142 1 303 1 
1 2 2 1 285 4 131 1 203 1 288 3 132 1 250 1 6 1 52 1 54 1 254 2 298 2 55 1 215 1 58 1 256 1 138 1 173 1 139 1 176 1 60 1 177 1 260 2 304 1 178 2 63 2 265 2 68 1 309 1 21 1 225 3 227 1 149 2 73 1 155 2 190 1 28 1 116 1 157 1 234 6 121 1 161 2 80 1 124 1 325 2 
37 2 240 1 128 1 131 1 290 1 96 2 293 2 208 1 135 3 53 1 54 2 173 1 60 1 219 1 301 1 104 1 224 1 311 2 310 1 150 1 271 1 26 1 76 2 77 1 82 1 276 1 327 3 328 1 
131 2 247 1 6 1 190 1 75 1 54 2 215 1 173 2 60 2 124 1 80 2 301 1 142 1 
224 1 131 4 71 1 152 1 6 1 190 1 54 1 30 1 272 1 173 4 80 1 60 4 124 1 
283 1 284 1 86 1 180 1 18 1 110 1 131 2 190 1 54 1 215 1 173 2 60 2 124 1 80 2 
212 1 173 1 43 1 131 1 224 1 80 1 124 1 60 1 112 1 220 1 
19 1 131 2 6 1 190 1 54 1 173 2 174 1 60 2 124 1 80 1 303 1 
180 1 224 1 131 5 71 1 152 1 6 1 190 2 54 3 272 1 173 5 79 1 60 4 124 2 80 2 321 1 303 1 
61 1 180 1 224 1 131 5 71 1 152 1 6 1 190 2 54 3 272 1 173 5 60 4 124 2 80 2 321 1 303 1 
178 1 0 1 309 1 224 1 131 1 149 2 132 1 73 1 190 1 28 1 54 1 215 1 138 1 173 1 80 1 60 1 124 1 325 2 
283 1 86 1 180 1 131 1 72 1 190 1 75 1 54 1 215 1 173 1 60 1 124 1 80 2 
207 1 199 1 
146 1 199 1 182 1 242 1 128 1 244 1 151 2 149 1 313 1 73 1 207 1 25 1 294 1 136 1 102 1 218 1 325 1 
178 1 199 1 242 1 151 2 149 1 73 1 207 1 25 1 136 1 299 1 218 1 325 1 
197 1 199 1 242 1 244 1 128 1 132 1 290 1 207 1 135 2 294 1 136 1 102 1 138 1 218 2 64 1 146 1 182 1 310 1 151 2 149 2 271 1 313 1 73 2 114 1 25 1 162 1 32 1 327 2 325 2 279 1 
191 1 17 1 287 1 275 1 
144 1 191 1 213 1 266 1 287 1 69 1 275 1 
264 1 69 1 171 1 
144 3 106 1 266 1 109 1 287 1 69 3 249 1 205 2 191 1 213 1 255 1 275 1 
144 2 191 1 192 1 213 1 266 1 287 1 69 2 275 1 5 1 
144 1 266 1 287 1 69 1 43 1 112 1 153 1 249 1 312 1 252 1 213 1 
144 1 213 1 266 1 287 1 69 1 275 1 249 1 
144 1 191 1 213 1 266 1 69 1 275 2 249 1 
144 2 266 2 287 1 69 2 204 1 249 1 213 2 172 1 275 1 324 1 
144 3 62 1 266 1 287 2 69 3 249 1 312 1 191 1 192 2 213 1 158 1 194 1 275 1 
144 2 266 1 287 1 69 2 43 1 112 2 226 1 153 1 249 1 191 1 192 1 212 1 213 1 275 1 126 1 
144 4 198 1 266 2 287 2 69 4 5 1 249 1 312 1 191 1 192 2 213 2 194 1 275 1 
144 1 191 1 213 1 266 1 287 1 69 1 275 1 249 1 
106 1 144 4 109 1 266 1 287 3 69 4 205 1 312 1 27 1 191 2 192 2 213 1 194 1 275 2 
144 2 266 1 287 1 286 1 69 2 249 1 192 1 191 1 213 1 275 1 12 1 278 1 
144 3 106 2 109 1 266 1 287 1 69 3 22 1 249 1 205 2 191 1 213 1 275 1 
127 1 211 1 231 2 287 2 
144 1 40 1 213 1 266 1 69 1 249 1 
62 1 144 2 191 1 192 1 213 1 266 1 287 1 69 2 275 1 249 1 
262 1 
144 1 191 1 213 1 266 1 287 1 69 1 275 1 249 1 
144 3 62 1 266 1 287 1 69 3 249 1 205 1 192 1 191 1 213 1 275 1 
27 1 194 1 287 1 312 1 
287 1 275 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 138 (16,311,333) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 138 67 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 138 67 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 330 53 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 330 53 269 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 72 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 138 (16,311,333) 205 103 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 36 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 137 217 153 329 305 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 137 217 153 329 305 24 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 137 217 153 329 305 24 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 137 217 153 329 305 24 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 286 153 329 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 330 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 36 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 137 217 153 329 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 138 67 21 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 138 67 21 151 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 1 300 2 134 1 89 6 3 1 135 1 258 1 47 9 308 2 9 1 146 2 229 1 272 1 106 1 274 1 276 2 275 1 70 1 317 9 198 2 200 2 32 1 328 3 161 1 83 2 212 4 128 5 298 1 
252 1 300 2 134 1 89 6 3 1 135 1 258 1 47 9 308 2 9 1 146 2 229 1 272 1 106 1 274 1 276 2 275 1 70 1 317 9 198 2 200 2 32 1 328 3 161 1 83 2 212 4 128 5 298 1 
252 1 300 2 134 1 89 7 3 1 135 1 258 1 47 10 308 2 9 1 146 2 229 1 272 1 106 1 274 1 276 2 275 1 70 1 317 10 198 2 200 2 32 1 328 4 161 1 83 2 212 5 128 6 298 1 
252 1 300 2 89 4 3 1 135 1 258 1 47 7 308 2 9 1 146 2 229 1 272 1 106 1 274 1 276 2 275 1 70 1 317 7 198 2 200 1 32 1 328 2 161 1 83 2 212 3 128 4 298 1 
300 1 70 1 317 4 134 1 89 3 135 1 198 1 47 4 200 2 308 1 9 1 328 1 161 1 146 1 212 2 274 1 128 3 276 1 
150 1 300 1 252 1 70 1 317 2 88 1 198 1 47 2 161 1 83 1 146 1 125 1 274 1 128 1 275 1 276 1 
70 1 317 3 89 1 198 2 47 3 328 1 161 1 83 1 272 1 212 1 274 1 128 2 276 2 
300 1 89 7 134 1 3 1 135 1 47 9 170 1 308 1 9 1 229 1 146 1 272 1 274 1 276 2 70 1 317 9 198 2 200 2 122 1 328 3 161 1 83 1 212 4 128 5 
300 1 89 7 134 1 3 1 135 1 47 9 170 1 308 1 9 1 229 1 146 1 272 1 274 1 276 2 70 1 317 9 198 2 200 2 122 1 328 3 161 1 83 1 212 4 128 5 
245 1 239 1 36 1 
76 1 
190 2 40 1 55 2 12 2 25 2 129 1 139 2 132 2 
40 1 41 1 5 1 95 1 139 2 171 2 174 1 102 2 271 1 55 2 147 1 12 3 230 1 312 2 59 1 184 1 315 1 190 2 69 2 152 1 192 1 319 1 113 1 25 3 115 1 118 1 285 1 206 1 326 1 289 1 249 1 210 1 332 2 213 1 129 1 132 2 37 1 
190 1 40 1 234 1 254 1 175 1 55 1 12 1 25 1 139 1 132 1 
138 1 16 1 
190 1 254 1 25 1 239 1 7 2 139 1 245 1 291 1 55 1 12 1 311 2 333 1 187 1 15 1 132 1 
173 1 273 1 311 1 130 1 7 1 
173 1 100 1 245 1 311 2 239 1 130 1 7 2 50 1 
173 1 311 1 7 1 
190 1 234 1 40 1 254 1 25 1 7 1 139 1 175 1 160 1 55 1 311 1 12 1 130 1 132 1 
239 1 
173 1 100 1 245 1 90 1 311 2 239 1 130 1 7 2 
168 1 92 1 260 1 239 1 322 1 7 5 173 2 10 1 144 2 207 1 100 1 245 1 182 1 311 5 58 2 61 1 130 2 86 1 148 2 
129 1 36 1 
190 1 157 1 25 2 78 1 139 2 55 1 12 2 129 2 132 1 
46 1 262 1 238 1 
192 1 319 1 44 1 25 1 5 1 118 1 171 1 285 1 174 1 326 1 102 1 12 1 230 1 312 1 129 1 315 1 
278 1 190 3 55 1 12 3 25 3 129 1 139 3 132 3 
190 1 254 1 175 1 12 1 25 1 139 1 132 1 
190 1 254 1 55 1 157 1 12 1 25 1 78 1 139 1 132 1 
40 1 41 1 254 1 5 1 139 3 7 1 171 1 174 1 102 1 271 1 55 2 230 1 12 4 311 1 312 1 187 1 15 1 315 1 190 3 278 1 69 2 152 1 192 1 319 1 195 1 113 1 25 4 115 1 77 1 78 1 118 1 285 1 206 1 326 1 289 1 249 1 291 1 332 1 213 1 129 1 333 1 163 1 132 3 37 1 
67 1 190 1 278 1 138 1 12 1 25 1 139 1 132 1 
278 2 190 3 254 1 195 1 25 3 77 1 78 1 239 1 7 1 139 3 270 1 291 1 55 1 311 1 12 3 333 1 187 1 15 1 132 3 
278 1 190 2 46 1 25 2 78 1 262 1 139 2 55 1 12 2 132 2 
192 1 319 1 25 1 5 1 118 1 171 1 285 1 174 1 326 1 102 1 12 1 230 1 312 1 129 1 315 1 
192 1 319 1 25 1 171 1 285 1 174 1 326 1 102 1 12 1 230 1 312 1 129 1 109 1 313 1 315 1 
41 1 46 2 137 1 262 2 177 1 271 1 147 2 69 2 152 1 156 1 22 1 281 1 113 2 115 1 237 1 238 2 80 1 120 1 244 1 289 1 332 4 162 1 35 1 37 1 
190 1 254 1 291 1 1 1 12 1 25 1 139 1 132 1 
278 1 190 1 192 1 319 1 195 1 25 2 5 1 262 1 118 1 285 1 139 1 171 1 174 1 326 1 102 1 230 1 12 2 312 1 132 1 315 1 
67 1 278 2 190 4 195 1 138 1 25 4 78 1 224 1 139 4 55 1 12 4 129 1 108 1 132 4 
190 2 254 1 175 1 1 1 12 2 25 2 139 2 132 2 
75 1 169 1 
75 1 169 1 
309 1 202 1 
309 1 202 1 
309 1 202 1 
268 1 75 1 169 1 
75 2 185 1 169 2 232 1 309 1 202 1 
75 1 169 1 96 1 
75 1 169 1 96 1 
75 1 169 1 96 1 
75 1 93 1 169 1 
75 1 93 1 169 1 
75 1 93 1 169 1 
257 1 53 1 330 1 75 1 169 1 324 1 
257 1 53 1 269 1 330 1 75 1 311 1 169 1 7 1 324 1 
300 1 146 1 308 1 
150 1 300 1 146 1 
19 1 150 1 300 3 225 1 28 1 308 2 
19 1 150 1 300 2 225 1 209 1 308 1 
19 2 150 1 300 2 225 1 308 1 
40 1 254 1 255 1 221 1 137 1 168 2 139 1 7 5 173 1 175 1 144 1 100 1 55 1 11 1 12 1 311 5 58 1 61 1 107 1 148 1 190 1 233 2 234 1 193 1 25 1 76 1 322 1 239 1 290 1 243 1 245 1 160 1 162 1 127 1 217 1 130 4 132 1 
40 1 254 1 255 1 221 1 137 1 168 2 7 5 139 1 173 3 144 1 175 1 265 2 100 1 55 1 11 1 12 1 273 2 311 5 58 1 61 1 107 1 231 1 148 1 190 1 234 1 25 1 76 1 322 1 239 1 290 1 245 1 160 1 162 1 127 1 217 1 130 4 164 1 132 1 
40 1 254 1 255 1 221 2 137 1 168 2 139 1 7 3 175 1 144 1 55 1 12 1 311 3 11 1 58 1 61 3 148 1 190 1 233 1 234 1 193 1 25 1 76 3 239 2 119 1 244 1 243 1 290 2 245 1 160 1 162 1 127 1 35 1 130 2 86 1 217 1 132 1 
165 1 254 1 255 1 168 4 7 4 175 1 12 1 11 2 190 1 193 1 25 1 119 2 290 4 127 1 35 2 217 2 130 3 132 1 40 1 221 4 137 2 139 1 144 1 55 1 311 4 58 1 61 5 60 1 148 1 233 2 234 1 235 1 76 6 239 3 243 1 244 2 245 1 160 1 162 2 86 1 
192 1 74 1 36 1 
192 1 26 1 
181 1 
192 1 326 1 
192 3 174 1 316 1 326 1 101 1 74 2 
192 1 174 1 326 1 
192 1 223 1 
136 2 259 2 49 2 179 1 147 8 188 1 110 1 71 1 281 4 113 6 282 1 237 5 79 1 325 1 332 14 162 3 215 2 35 3 
136 2 259 2 49 2 179 1 147 8 188 1 110 1 71 1 281 4 113 6 282 1 237 7 79 3 325 1 332 14 162 3 215 2 35 3 
136 2 259 2 49 2 179 1 147 8 188 1 110 1 191 1 71 1 281 4 113 6 282 1 237 5 79 1 325 1 332 14 162 3 215 2 35 3 
302 1 42 4 72 1 281 1 45 1 113 10 137 3 116 1 237 4 79 3 325 1 172 3 82 1 244 3 293 1 147 10 332 20 162 3 215 1 35 3 63 1 217 3 188 2 
41 1 45 1 136 1 259 1 49 1 97 1 141 1 271 1 147 6 188 1 110 1 69 2 71 1 281 3 113 5 282 1 237 5 79 2 325 1 289 1 332 11 162 2 215 1 35 2 37 1 
39 1 300 2 89 1 47 2 308 1 171 1 142 1 145 1 102 1 146 1 230 1 312 1 274 1 62 1 276 1 150 1 70 1 317 2 111 1 320 1 73 1 198 1 28 1 285 1 161 1 83 1 331 1 294 1 211 1 128 1 
39 1 300 2 89 2 303 1 47 3 308 1 171 1 142 1 267 1 145 1 102 1 146 1 230 1 312 1 276 1 150 1 70 1 317 3 111 1 320 1 73 1 198 1 236 1 28 1 285 1 161 1 83 1 331 1 211 1 128 1 
39 1 300 2 89 2 303 1 47 2 308 1 171 1 267 1 145 1 102 1 146 1 230 1 312 1 150 1 70 1 317 2 111 1 320 1 73 1 28 1 285 1 161 1 83 1 331 1 128 1 
317 1 320 2 73 2 91 1 198 1 236 1 47 1 222 1 171 1 204 1 158 1 83 2 102 1 331 2 312 1 276 1 315 1 
150 1 39 1 300 2 111 1 317 1 320 1 73 1 198 1 47 1 28 1 308 1 285 1 171 1 142 1 267 1 145 1 83 1 102 1 146 1 211 1 331 1 230 1 312 1 62 1 274 1 276 1 
247 1 
299 1 255 1 138 1 168 1 6 1 171 2 7 2 173 2 144 1 100 1 227 1 102 2 103 1 180 1 230 1 311 2 312 2 58 1 13 1 61 1 16 1 148 1 315 2 192 1 280 1 322 1 285 1 205 1 326 1 87 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 173 1 100 1 227 1 90 1 103 1 138 1 311 2 16 1 7 2 
299 1 138 1 322 1 7 1 205 1 144 1 227 1 103 1 311 1 58 1 148 1 16 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
205 1 299 1 227 1 103 1 138 1 311 1 16 1 7 1 
299 1 138 1 322 1 7 1 205 1 144 1 227 1 103 1 311 1 58 1 148 1 16 1 
152 1 69 2 41 1 71 1 281 2 113 2 136 1 282 1 259 1 115 1 237 2 49 1 120 1 289 1 271 1 147 3 332 5 162 1 215 1 129 2 35 1 36 1 37 1 
0 1 41 2 42 3 137 2 46 4 95 1 262 11 172 3 271 2 147 8 63 1 69 4 152 1 281 1 113 6 115 2 237 2 117 1 238 11 79 1 241 1 206 1 242 1 82 1 289 2 244 1 332 14 214 1 162 2 129 1 35 1 217 2 37 2 
41 1 44 1 46 1 5 1 95 1 171 1 139 1 174 1 226 1 102 1 271 1 147 1 230 1 12 2 312 1 315 1 190 1 278 1 192 1 152 1 69 2 319 1 194 1 195 1 113 1 25 2 115 1 283 1 118 1 117 1 285 1 206 1 326 1 289 1 332 2 129 1 132 1 37 1 
254 1 2 1 259 2 5 2 95 1 262 6 171 1 174 2 264 2 102 1 271 3 12 3 110 1 278 1 190 1 192 2 20 2 195 1 281 6 113 13 282 1 25 3 115 3 117 1 201 2 118 2 285 2 206 1 289 3 208 1 215 1 129 3 35 5 217 2 132 1 37 3 41 3 219 2 136 2 46 6 137 2 49 2 139 1 147 14 230 2 312 1 314 1 315 1 69 6 152 3 71 1 319 2 237 7 238 6 79 1 326 2 244 2 249 2 332 27 162 5 
41 2 43 1 4 1 95 1 6 1 139 1 171 7 263 1 267 1 99 1 102 8 104 1 271 2 147 1 12 1 230 2 312 8 13 1 315 2 190 1 278 1 192 3 69 4 152 2 113 1 25 1 115 2 29 1 285 2 206 1 120 1 326 2 289 2 248 1 294 1 210 2 332 2 132 1 37 2 
41 1 46 1 137 1 262 1 139 1 55 1 271 1 147 1 12 1 189 1 190 1 69 2 152 1 281 1 113 2 25 1 115 1 237 1 78 1 238 1 117 1 289 1 244 1 332 3 162 1 35 1 217 1 132 1 37 1 
152 1 69 2 41 1 46 1 137 1 115 1 237 1 262 1 238 1 79 1 80 1 120 1 289 1 271 1 147 2 332 2 162 1 37 1 
152 1 69 2 41 1 22 1 281 1 113 2 46 1 115 1 237 1 262 1 238 1 120 1 289 1 244 1 271 1 332 2 35 1 37 1 
41 1 137 1 46 2 262 2 271 1 147 2 69 2 152 1 281 1 113 2 115 1 237 2 238 2 79 1 120 1 289 1 244 1 332 4 162 1 35 1 217 1 37 1 
152 1 69 2 41 1 46 1 137 1 115 1 237 1 262 1 238 1 79 1 263 1 80 1 289 1 271 1 147 2 332 2 162 1 37 1 
152 1 69 2 41 1 22 1 281 1 113 2 46 1 115 1 237 1 262 1 238 1 263 1 289 1 244 1 271 1 332 2 35 1 37 1 
41 1 137 1 46 2 262 2 263 1 271 1 147 2 69 2 152 1 281 1 113 2 115 1 237 2 238 2 79 1 289 1 244 1 332 4 162 1 35 1 217 1 37 1 
152 1 69 2 41 1 281 1 113 2 46 2 137 1 115 1 237 2 262 2 238 2 79 1 244 1 289 1 271 1 147 2 332 4 162 1 35 1 217 1 37 1 
41 1 5 1 95 1 171 1 174 1 102 1 271 1 147 1 230 1 12 1 312 1 315 1 192 1 152 1 69 2 319 1 113 1 25 1 115 1 118 1 285 1 206 1 326 1 289 1 249 1 332 2 129 1 37 1 
41 1 95 1 171 1 174 1 102 1 271 1 147 1 230 1 12 1 312 1 109 1 313 1 315 1 192 1 152 1 69 2 319 1 113 1 25 1 115 1 285 1 206 1 326 1 288 1 289 1 332 2 129 1 37 1 
41 1 137 1 46 2 262 2 271 1 147 2 69 2 152 1 281 1 113 2 115 1 237 2 117 1 238 2 79 1 289 1 244 1 332 4 162 1 35 1 217 1 37 1 
41 1 46 2 137 1 5 1 262 2 171 1 174 1 102 1 271 1 147 2 230 1 12 1 312 1 192 1 152 1 69 2 20 1 319 1 281 1 113 2 25 1 115 1 237 2 238 2 118 1 79 1 285 1 326 1 244 1 289 1 249 1 294 1 332 4 162 1 35 1 217 1 37 1 
41 1 137 1 46 1 262 1 139 1 55 1 271 1 147 2 12 1 190 1 69 2 152 1 113 1 25 1 115 1 237 1 78 1 117 1 238 1 79 1 244 1 289 1 292 1 332 3 162 1 35 1 217 1 132 1 37 1 
41 2 42 2 305 1 137 3 97 1 172 1 271 2 147 9 65 2 63 1 14 1 279 1 69 4 23 2 281 3 24 1 113 10 237 6 79 3 323 1 82 1 289 2 244 3 246 1 332 19 295 1 162 3 35 3 217 3 37 2 
41 1 42 2 45 1 305 2 137 2 48 1 97 1 172 2 271 1 147 9 66 1 279 1 153 1 69 2 281 1 23 2 24 1 113 8 237 1 286 1 82 2 289 1 244 1 329 1 332 17 295 2 162 2 35 1 217 2 37 1 
41 2 42 4 45 1 305 1 137 4 306 1 48 1 97 1 172 3 271 2 147 15 65 1 63 1 14 1 66 1 279 1 153 1 69 4 23 3 281 2 24 1 113 15 237 4 286 1 79 2 82 3 289 2 244 3 246 1 329 1 332 30 295 2 162 4 35 3 217 4 37 2 
41 2 42 4 45 1 305 1 137 4 306 1 48 1 97 1 172 3 271 2 147 15 65 1 63 1 14 1 66 1 279 1 153 1 69 4 23 3 281 3 24 1 113 15 237 5 286 1 79 2 82 3 289 2 244 3 246 1 329 1 332 30 295 2 162 4 35 3 217 4 37 2 
41 1 42 4 136 1 305 1 137 6 259 1 48 1 49 1 97 1 172 4 271 1 147 22 63 2 66 1 279 1 153 1 69 2 71 1 23 2 281 6 24 1 113 19 282 1 237 10 286 1 79 4 242 2 82 2 289 1 244 5 329 1 332 41 295 1 162 7 215 1 35 6 217 6 37 1 
133 1 41 1 43 1 95 1 139 2 171 2 51 1 178 1 102 2 104 1 271 1 105 1 147 1 230 1 12 2 312 2 17 1 192 1 152 1 69 2 113 1 25 2 115 1 117 1 285 1 206 1 326 1 289 1 210 2 332 2 37 1 
150 1 300 2 111 1 318 1 304 1 28 1 321 1 308 1 285 1 171 2 142 1 267 1 145 1 102 2 146 1 331 1 294 1 230 1 312 2 
150 1 300 2 111 1 304 1 28 1 308 1 171 1 285 1 142 1 267 1 145 1 102 1 146 1 331 1 230 1 312 1 296 1 
52 1 102 1 331 1 312 1 321 1 171 1 158 1 315 1 
150 1 300 2 111 1 318 1 304 1 28 1 321 1 308 1 285 1 171 1 142 1 267 1 145 1 102 1 146 1 331 1 230 1 312 1 
159 1 
10 1 245 1 182 1 168 1 61 1 239 1 36 1 
168 1 7 1 173 1 144 1 100 1 311 1 58 1 61 1 148 1 154 1 68 1 196 1 76 1 322 1 239 1 119 1 245 1 
218 1 256 1 255 1 167 1 221 2 137 1 168 3 7 2 171 1 264 1 173 2 174 1 144 2 100 1 101 1 102 1 56 1 311 2 230 1 312 1 58 2 61 2 64 1 15 1 148 2 315 1 192 4 112 1 74 1 76 2 26 2 322 2 285 2 326 1 290 2 162 1 126 1 217 1 
153 1 42 1 221 4 137 1 168 3 76 3 48 1 322 1 286 1 172 1 144 1 82 1 244 1 290 4 329 1 162 1 58 1 61 4 35 1 217 1 66 1 148 1 
40 1 254 1 136 1 259 1 168 2 49 1 7 1 139 1 143 1 175 1 144 1 55 1 12 1 311 1 58 1 61 2 148 1 110 1 190 1 234 1 25 1 322 1 160 1 162 2 34 1 35 1 131 2 132 1 
168 1 322 1 239 1 144 1 10 1 245 1 182 1 58 1 61 1 148 1 
290 1 221 1 137 1 76 1 168 2 162 1 217 1 
173 1 100 1 245 1 311 1 239 1 7 1 
255 2 94 1 168 2 307 1 6 1 171 4 7 3 174 1 173 4 144 2 266 1 310 1 100 2 102 4 180 1 183 1 230 2 311 3 58 2 312 4 13 1 186 1 61 2 148 2 315 2 192 2 280 1 322 1 285 3 326 2 250 1 124 2 86 1 87 2 
40 1 41 1 5 1 171 1 139 2 174 1 102 1 271 1 55 2 12 3 230 1 312 1 315 1 190 2 69 2 192 1 152 1 319 1 113 1 25 3 115 1 118 1 285 1 206 1 326 1 289 1 249 1 332 1 213 1 129 1 132 2 37 1 
255 1 76 1 168 1 322 1 239 1 144 1 290 1 245 1 58 1 61 1 87 1 148 1 
257 1 330 1 
257 1 330 1 
257 1 330 1 
257 1 330 1 
257 1 330 1 
257 1 330 1 
257 1 330 1 
257 1 330 1 
75 1 169 1 
41 1 45 1 136 1 259 1 49 1 271 1 147 5 110 1 69 2 71 1 281 2 113 5 282 1 237 4 79 2 289 1 332 10 162 2 35 2 37 1 
71 1 281 2 113 2 136 1 282 1 259 1 237 2 49 1 147 3 332 5 162 1 215 1 35 1 36 1 
69 2 41 1 281 1 113 2 137 1 237 2 261 1 79 1 244 1 289 1 271 1 147 2 332 4 162 1 35 1 217 1 37 1 
42 2 281 1 113 4 137 1 237 2 79 1 172 1 82 1 244 1 147 3 332 7 162 1 35 1 63 1 217 1 
0 1 42 2 45 1 136 1 137 2 259 1 49 1 172 2 147 10 63 1 110 1 71 1 281 3 113 10 282 1 237 5 79 2 242 1 244 2 332 20 162 4 35 4 217 2 
42 1 113 1 332 1 
172 1 147 1 332 1 
69 2 41 1 281 2 113 3 137 1 261 1 237 3 79 1 264 1 289 1 244 1 271 1 147 3 332 6 162 1 35 1 217 1 37 1 
153 1 69 2 41 1 42 1 281 1 113 4 137 2 237 1 48 1 286 1 97 1 172 1 82 1 244 1 289 1 329 1 271 1 147 6 332 10 162 2 35 1 217 2 66 1 37 1 
281 1 113 3 136 1 259 1 237 2 49 1 79 1 147 3 332 6 162 1 35 1 
45 1 113 1 332 1 240 1 
69 2 41 1 281 3 136 2 113 5 259 1 237 5 49 2 79 2 97 1 289 1 271 1 147 5 332 10 162 2 35 2 37 1 110 1 
69 2 41 1 137 1 237 1 79 1 97 1 289 1 271 1 147 2 332 2 162 1 37 1 
69 2 41 1 281 1 113 2 137 1 237 2 79 1 97 1 244 1 289 1 271 1 147 2 332 4 162 1 35 1 217 1 37 1 
69 4 41 2 281 1 45 1 113 2 136 1 237 2 240 1 49 1 79 1 97 1 289 2 271 2 147 1 332 3 14 1 37 2 
302 1 41 3 42 3 45 1 136 1 137 2 259 1 261 1 49 1 97 1 172 3 271 3 147 12 14 1 110 1 69 6 71 1 281 3 113 12 282 1 116 1 237 6 79 3 82 1 289 3 244 2 293 1 332 24 162 4 35 4 217 2 37 3 
41 1 42 1 136 2 259 2 49 2 97 1 172 1 271 1 147 8 110 1 69 2 71 1 281 4 113 7 282 1 237 5 79 1 82 1 289 1 329 1 332 15 162 3 215 1 35 3 37 1 
41 2 42 2 136 2 137 1 259 2 261 1 49 2 97 1 172 1 271 2 147 10 63 1 110 1 69 4 71 1 281 4 113 8 282 1 237 6 79 2 82 1 289 2 329 1 332 18 162 4 215 1 35 3 217 1 37 2 
153 1 69 2 41 1 42 1 281 1 45 1 113 5 137 2 237 1 48 1 286 1 97 1 172 1 82 1 244 1 289 1 329 1 271 1 147 6 332 11 162 2 35 1 217 2 66 1 37 1 
153 1 69 2 41 1 42 1 281 1 113 4 137 2 237 1 48 1 286 1 97 1 172 1 82 1 244 1 289 1 329 1 271 1 147 6 332 10 162 2 35 1 217 2 66 1 37 1 
41 1 42 1 136 2 259 2 49 2 97 1 172 1 271 1 147 8 110 1 69 2 71 1 281 4 113 7 282 1 237 5 79 1 82 1 289 1 329 1 332 15 162 3 215 1 35 3 37 1 
153 1 69 2 41 1 42 1 281 1 113 4 137 2 237 1 48 1 286 1 97 1 172 1 82 1 244 1 289 1 329 1 271 1 147 6 332 10 162 2 35 1 217 2 66 1 37 1 
41 2 42 1 45 1 137 2 261 1 48 1 97 1 172 1 271 2 147 6 66 1 153 1 69 4 281 1 113 5 237 1 286 1 82 1 289 2 244 1 329 1 332 11 162 2 35 1 217 2 37 2 
41 2 42 1 45 1 137 2 48 1 97 1 172 1 271 2 147 6 14 1 66 1 153 1 69 4 281 2 113 5 237 2 286 1 82 1 289 2 244 1 329 1 332 11 162 2 35 1 217 2 37 2 
71 1 281 3 113 4 136 3 282 2 259 1 237 6 49 3 79 3 147 3 332 7 162 1 35 1 
41 2 42 1 45 1 137 2 48 1 97 1 172 1 271 2 147 6 14 1 66 1 153 1 69 4 281 1 113 5 237 1 286 1 82 1 289 2 244 1 329 1 332 11 162 2 35 1 217 2 37 2 
67 1 21 1 138 1 
67 1 151 1 21 1 166 1 138 1 114 1 284 1 199 1 
192 1 326 1 102 1 230 1 13 1 312 1 6 1 285 1 36 1 171 1 315 1 
278 1 190 1 192 1 319 1 25 2 118 1 285 1 139 1 171 1 174 1 326 1 102 1 12 2 230 1 312 1 129 1 132 1 315 1 
254 1 223 1 171 1 139 2 174 2 102 1 230 1 12 2 312 1 187 1 190 2 278 1 192 3 155 1 319 1 25 2 118 1 285 1 326 2 291 1 124 1 129 1 132 1 
254 1 223 1 171 2 139 2 174 2 102 2 54 1 230 1 12 2 312 2 187 1 109 1 190 2 278 1 192 3 155 1 319 1 25 2 285 1 326 2 291 1 124 1 129 1 132 1 
301 1 223 1 171 3 7 2 173 1 174 1 102 3 54 1 230 1 311 2 312 3 15 1 315 1 192 4 155 1 74 1 26 1 239 1 285 1 326 1 245 1 124 1 216 1 
155 1 192 4 256 1 74 1 26 1 223 1 239 1 285 1 7 2 171 3 174 1 173 1 326 1 245 1 102 3 54 1 124 1 311 2 230 1 312 3 15 1 315 1 
248 1 102 1 230 1 312 1 285 1 171 1 
149 1 192 1 171 1 285 2 174 1 326 1 310 1 101 1 102 1 230 1 312 1 186 1 315 1 
254 1 5 1 259 2 171 1 174 1 102 1 271 2 105 1 12 2 110 1 278 1 190 1 192 1 20 1 281 4 113 6 25 2 282 1 115 2 118 1 201 1 117 1 285 1 289 2 294 1 215 1 35 3 129 3 132 1 37 2 41 2 136 2 139 1 49 2 147 7 230 1 312 1 314 1 69 4 152 2 71 1 319 1 237 5 79 1 326 1 249 1 332 13 162 3 
256 1 168 1 171 1 7 3 173 2 10 1 144 2 266 1 100 1 102 1 56 1 182 1 311 3 312 1 58 2 61 1 64 1 15 1 148 2 315 1 192 2 112 1 74 1 26 1 239 1 322 2 245 1 130 1 
192 2 74 1 171 1 285 2 174 1 326 1 101 1 248 1 102 1 181 1 230 1 312 1 126 1 
192 1 6 1 285 1 171 4 98 1 326 1 102 4 54 1 294 1 230 1 312 4 13 1 315 1 
192 1 171 1 285 2 174 1 326 1 310 1 102 1 250 1 57 1 183 1 230 1 312 1 186 1 
150 1 300 1 145 1 102 1 146 1 230 1 312 1 285 1 171 1 315 1 
192 1 171 2 285 1 267 1 326 1 102 2 104 1 294 1 230 1 312 2 17 1 
192 3 6 1 29 1 171 4 285 2 98 1 326 2 99 1 102 5 124 1 104 1 294 1 230 2 13 1 312 5 315 1 
192 3 6 1 171 4 285 2 8 1 98 1 326 2 99 1 102 5 124 1 104 1 294 1 230 2 13 1 312 5 315 1 
278 1 190 1 192 1 319 1 25 2 285 1 139 1 171 1 174 1 326 1 102 1 12 2 230 1 312 1 129 1 109 1 132 1 315 1 
149 1 192 1 171 1 285 2 174 1 326 1 310 1 101 1 102 1 124 1 230 1 312 1 186 1 
38 1 121 1 220 1 33 1 129 1 
38 2 254 1 220 2 77 1 239 1 7 2 287 1 327 1 121 2 245 1 33 1 291 1 311 2 251 1 129 1 187 1 333 1 15 1 130 1 
133 1 51 1 121 1 178 1 33 1 220 1 12 1 25 1 139 1 
327 1 33 1 251 1 
70 1 161 1 128 1 36 1 
70 1 317 1 161 1 198 1 47 1 128 1 276 1 
83 1 73 1 47 1 
18 1 317 3 70 1 198 1 47 3 203 1 30 1 161 1 274 1 128 1 276 1 275 2 
70 1 317 2 161 1 89 1 198 1 47 2 128 1 200 1 276 1 
9 1 300 1 317 1 146 1 212 1 198 1 47 1 274 1 128 1 308 1 276 1 
317 1 161 1 198 1 47 1 274 1 128 1 276 1 
70 1 317 1 161 2 198 1 47 1 274 1 276 1 
317 2 198 2 47 2 31 1 161 1 123 1 84 1 274 1 128 1 276 2 
70 1 317 3 89 2 3 1 198 1 47 3 328 1 161 1 229 1 212 1 274 1 128 2 276 1 
150 1 300 2 70 1 317 2 89 1 198 1 47 2 28 1 308 1 161 1 146 1 274 1 128 1 276 1 297 1 
70 1 317 4 134 1 89 2 198 2 47 4 200 1 328 1 161 1 212 1 274 1 128 2 276 2 
70 1 317 1 161 1 198 1 47 1 274 1 128 1 276 1 
70 2 317 4 89 2 198 1 47 4 203 1 140 1 30 1 328 1 161 2 212 1 128 3 275 1 276 1 
317 2 70 1 89 1 198 1 47 2 170 1 176 1 161 1 85 1 274 1 128 1 276 1 
30 1 70 1 317 3 161 1 198 1 47 3 274 1 128 1 275 2 277 1 276 1 203 2 
81 1 228 1 27 2 128 2 
317 1 197 1 198 1 47 1 274 1 276 1 
70 1 317 2 161 1 89 1 3 1 198 1 47 2 274 1 128 1 276 1 
253 1 
70 1 317 1 161 1 198 1 47 1 274 1 128 1 276 1 
317 3 70 1 89 1 3 1 198 1 47 3 161 1 274 1 128 1 276 1 275 1 
328 1 212 1 128 1 140 1 
161 1 128 1 

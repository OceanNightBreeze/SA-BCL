#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (281,364) (281,364) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (281,364) (281,364) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (281,364) (281,364) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (281,364) (281,364) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (7,241) (7,241) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 125 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 125 183 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 189 69 226 106 315 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 189 69 226 106 315 167 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 189 69 226 106 315 167 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 151 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (7,241) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 37 89 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 189 69 226 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 189 69 226 106 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 189 69 226 106 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3734 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 1 68 1 328 1 310 1 287 1 292 1 343 1 364 1 281 1 291 1 173 1 
76 1 68 1 328 1 310 1 287 1 292 1 343 1 364 1 281 1 291 1 173 1 
76 1 68 1 328 1 310 1 287 1 292 1 343 1 364 1 281 1 291 1 173 1 
76 1 68 1 328 1 310 1 287 1 292 1 343 1 364 1 281 1 291 1 173 1 
68 1 310 4 78 3 185 1 210 3 215 1 291 4 43 2 168 1 169 1 295 1 328 1 200 1 84 1 230 1 332 1 173 1 25 2 
76 1 68 1 78 1 310 2 185 1 291 2 299 1 328 1 287 1 342 1 84 1 22 1 156 1 230 1 332 1 173 1 
68 2 310 3 78 2 185 1 210 1 291 3 43 1 328 1 287 1 200 1 228 1 84 1 173 2 
68 2 78 5 310 9 242 1 185 1 210 7 215 1 291 9 32 1 43 4 168 1 169 1 295 1 302 1 328 1 287 1 200 3 228 1 84 1 230 1 332 1 25 2 173 2 58 1 
68 2 78 5 310 9 242 1 185 1 210 7 215 1 291 9 32 1 43 4 168 1 169 1 295 1 302 1 328 1 287 1 200 3 228 1 84 1 230 1 332 1 25 2 173 2 58 1 
218 1 188 1 151 1 
283 1 
53 2 118 1 217 2 191 2 162 2 150 2 5 1 75 2 
116 1 117 1 145 1 118 1 90 1 214 1 30 1 351 1 150 2 5 1 71 1 53 2 96 1 9 2 97 2 99 2 259 1 217 2 171 1 74 1 57 2 191 3 307 1 103 1 75 2 158 1 334 1 267 1 224 1 107 1 162 3 271 1 163 1 87 1 88 1 275 2 348 1 
53 1 118 1 217 1 349 1 324 1 257 1 191 1 162 1 150 1 75 1 
77 1 196 1 257 1 162 1 188 1 139 1 337 1 53 1 285 1 130 1 218 1 237 1 191 1 232 1 
77 1 196 1 257 1 162 1 150 1 188 1 139 1 337 2 53 1 130 1 217 1 218 1 237 2 191 1 75 1 
194 1 237 1 319 1 337 1 174 1 
234 1 170 1 218 1 237 2 319 1 188 1 337 2 174 1 
237 1 337 1 174 1 
118 1 349 1 324 1 257 1 162 1 150 1 337 1 53 1 20 1 217 1 237 1 191 1 319 1 75 1 
188 1 
170 1 218 1 237 2 319 1 188 1 134 1 337 2 174 1 
241 1 13 1 160 2 323 1 282 2 149 1 198 1 188 1 337 5 7 1 170 1 218 1 237 5 165 1 319 2 133 2 27 1 67 1 174 2 
5 1 151 1 
162 2 150 1 5 2 53 2 62 1 217 1 305 1 191 2 75 1 
244 1 102 1 289 1 
158 1 117 1 145 1 334 1 90 1 30 1 162 1 294 1 5 1 71 1 9 1 97 1 57 1 191 1 87 1 348 1 
158 1 145 1 117 1 334 1 90 1 244 1 30 1 162 2 71 1 53 1 9 1 97 1 270 1 217 1 57 1 132 1 191 2 87 1 348 1 75 1 
335 1 211 1 162 5 150 1 5 1 53 5 270 2 217 4 305 1 191 5 132 1 288 1 232 1 75 4 
53 2 175 1 217 2 349 1 257 1 191 2 162 2 75 2 
53 3 270 1 217 3 191 3 162 3 150 1 5 1 75 3 
53 1 217 1 349 1 257 1 191 1 162 1 75 1 
53 1 62 1 217 1 305 1 257 1 191 1 162 1 150 1 75 1 
114 1 145 1 117 1 118 1 90 1 214 1 30 1 257 1 351 1 150 2 5 1 71 1 53 3 96 1 9 1 97 1 99 1 130 1 217 3 171 1 236 1 305 1 237 1 57 1 191 4 132 1 103 1 75 3 158 1 77 1 334 1 267 1 196 1 107 1 162 4 139 1 337 1 271 1 270 1 163 1 87 1 88 1 275 2 348 1 
53 2 270 1 217 1 191 2 162 2 288 1 5 1 232 1 75 1 
114 1 77 1 257 1 196 1 162 3 150 1 188 1 139 1 337 1 128 1 53 3 270 2 130 1 217 3 305 1 237 1 132 1 191 3 75 3 
244 1 162 2 150 1 53 2 270 1 217 2 305 1 102 1 191 2 75 2 
158 1 117 1 145 1 334 1 90 1 30 1 162 1 5 1 71 1 9 1 97 1 57 1 191 1 87 1 348 1 
145 1 334 1 90 1 30 1 162 1 5 1 353 1 71 1 9 1 97 1 57 1 273 1 191 1 87 1 348 1 
214 1 93 1 148 1 31 1 351 1 124 1 72 1 96 2 189 1 99 4 171 1 190 1 219 1 102 2 307 2 289 2 38 1 267 1 178 1 244 2 314 1 271 1 88 1 275 2 
53 1 130 1 175 1 217 1 257 1 191 1 162 1 75 1 
329 1 60 1 
329 1 60 1 
338 1 21 1 
338 1 21 1 
338 1 21 1 
329 1 60 1 179 1 
329 1 60 1 179 1 
329 1 177 1 60 1 
338 1 329 2 176 1 21 1 325 1 60 2 
329 1 60 1 179 1 
329 1 290 1 60 1 
329 1 290 1 60 1 
329 1 290 1 60 1 
11 1 177 1 121 1 15 1 127 1 162 2 60 1 5 1 337 1 182 1 326 1 53 2 249 1 329 1 154 1 184 1 227 1 217 2 363 1 237 1 191 2 239 1 75 2 220 1 
325 1 60 2 188 1 337 2 108 1 301 1 249 2 362 1 329 2 154 2 184 2 227 2 237 2 229 1 260 1 64 1 274 2 239 1 220 3 
230 1 332 1 168 1 
156 1 230 1 332 1 
297 1 156 1 360 1 332 3 168 2 44 1 
61 1 297 1 156 1 332 2 168 1 44 1 
297 1 156 1 332 2 168 1 44 2 
147 1 125 1 34 1 188 1 199 1 337 4 216 1 170 1 218 1 237 4 319 3 174 1 
136 1 194 1 125 1 188 1 199 1 337 4 286 1 170 1 218 1 237 4 26 1 319 3 174 2 
13 1 119 1 160 1 323 1 147 1 282 1 125 1 34 1 337 2 237 2 133 1 319 1 
13 1 119 1 160 1 323 1 147 1 282 1 125 1 34 1 337 1 183 1 237 1 133 1 
256 1 87 1 151 1 
87 1 180 1 
366 1 
87 1 348 1 71 1 
85 1 87 1 
87 1 348 1 
256 2 126 1 71 1 87 2 366 1 348 1 207 1 
265 1 93 1 245 1 31 2 124 1 72 3 96 3 99 7 140 1 153 1 113 1 47 1 238 2 307 4 365 1 36 1 66 1 
265 1 93 1 245 1 31 2 124 1 72 3 96 3 99 7 140 1 153 1 113 1 47 1 238 2 307 4 365 1 36 1 66 1 
10 1 265 1 93 1 245 1 31 2 124 1 72 3 96 3 99 7 140 1 153 1 113 1 47 1 238 2 365 1 307 4 36 1 66 1 
69 1 309 1 178 1 93 1 225 1 186 1 31 1 293 1 124 1 72 2 189 1 96 4 99 8 140 2 153 1 113 1 141 1 238 1 253 2 307 4 
93 2 31 2 124 2 72 3 96 4 99 9 153 1 171 1 357 1 238 1 307 5 265 1 267 1 245 1 17 1 271 1 140 1 113 1 47 1 365 1 166 1 88 1 275 2 66 1 
68 1 145 1 50 1 185 1 210 1 212 1 168 1 284 1 9 1 328 1 97 1 73 1 287 1 358 1 57 1 156 1 332 2 173 1 333 1 334 1 78 1 310 2 291 2 360 1 80 1 296 1 84 1 318 1 230 1 320 1 
68 1 145 1 185 1 210 2 212 1 146 1 168 1 284 1 9 1 97 1 287 1 358 1 57 1 156 1 332 2 173 1 333 1 334 1 78 1 310 3 291 3 360 1 80 1 296 1 46 1 317 1 84 1 318 1 230 1 320 1 
145 1 185 1 210 2 146 1 168 1 284 1 9 1 97 1 287 1 358 1 57 1 156 1 332 2 333 1 334 1 78 1 310 2 291 2 360 1 80 1 46 1 84 1 318 1 230 1 320 1 
145 1 68 1 334 1 310 1 291 1 30 1 80 2 81 1 269 1 284 2 8 1 9 1 97 1 54 1 287 2 317 1 57 1 157 1 87 1 173 1 347 1 348 1 333 2 
145 1 68 1 334 1 50 1 310 1 212 1 291 1 146 1 360 1 80 1 168 1 284 1 296 1 328 1 9 1 97 1 287 1 358 1 156 1 318 1 57 1 230 1 332 2 173 1 320 1 333 1 
109 1 
145 1 89 1 282 1 149 1 53 1 8 1 9 2 285 1 97 2 98 1 237 3 57 2 191 1 334 1 13 2 243 1 160 1 246 1 196 1 162 1 248 2 337 3 23 1 24 1 202 1 204 1 348 1 67 2 119 1 30 2 122 1 257 1 350 1 258 1 130 1 170 1 133 1 37 1 261 1 174 2 77 1 139 1 269 1 87 1 232 1 322 1 
257 1 258 1 53 1 327 1 285 1 98 1 130 1 170 1 237 3 191 1 134 1 261 1 174 2 77 1 196 1 162 1 248 2 139 1 337 3 202 1 232 1 322 1 
257 1 258 1 188 1 53 1 285 1 98 1 130 1 170 1 218 1 237 3 191 1 134 1 261 1 174 1 77 1 196 1 162 1 248 3 139 1 337 3 202 1 206 1 232 1 322 1 
257 1 258 1 188 1 53 1 327 1 285 1 98 1 130 1 170 1 218 1 237 3 191 1 134 1 261 1 174 2 77 1 196 1 162 1 248 3 139 1 337 3 345 1 202 1 206 1 232 1 322 1 
324 1 282 1 149 1 150 1 188 1 327 2 53 2 285 1 98 1 237 3 330 1 191 2 13 1 104 1 243 1 160 1 196 1 246 2 162 2 248 2 337 3 339 1 250 1 20 1 24 2 345 2 202 1 67 1 118 1 349 1 257 2 122 1 258 1 130 1 217 1 170 1 218 1 133 1 134 1 75 1 261 1 174 3 77 1 139 1 143 1 232 1 322 1 
122 1 282 1 257 1 149 1 258 1 53 1 285 1 98 1 130 1 237 2 191 1 133 1 261 1 77 1 13 1 243 1 160 1 246 1 196 1 162 1 248 2 139 1 337 2 23 1 24 1 202 1 232 1 67 1 322 1 
324 1 282 1 149 1 150 1 188 1 53 2 285 1 98 1 237 2 191 2 13 1 104 1 243 1 160 1 196 1 246 2 162 2 248 2 337 2 250 1 20 1 24 2 202 1 67 1 118 1 349 1 257 2 122 1 258 1 130 1 217 1 218 1 133 1 261 1 75 1 77 1 139 1 143 1 232 1 322 1 
324 1 282 1 149 1 150 1 188 1 53 2 285 1 98 1 237 2 191 2 13 1 104 1 243 1 160 1 196 1 246 2 162 2 248 2 337 2 250 1 20 1 24 2 202 1 67 1 118 1 349 1 257 2 122 1 258 1 130 1 217 1 218 1 133 1 261 1 75 1 77 1 139 1 143 1 232 1 322 1 
324 1 282 1 149 1 150 1 188 1 53 2 285 1 98 1 100 1 237 2 191 2 13 1 104 1 160 1 105 1 196 1 246 2 162 2 248 2 337 2 20 1 24 2 202 1 67 1 118 1 29 1 349 1 257 2 122 1 258 1 130 1 217 1 218 1 133 1 261 1 75 1 77 1 139 1 232 1 322 1 
324 1 282 1 149 1 150 1 188 1 327 1 53 2 285 1 98 1 330 1 237 2 191 2 13 1 104 1 243 1 160 1 196 1 246 2 162 2 248 3 337 2 250 1 20 1 24 2 345 1 202 1 206 1 67 1 118 1 349 1 257 2 122 1 258 1 130 1 217 1 218 1 133 1 75 1 261 1 174 1 77 1 139 1 143 1 232 1 322 1 
324 1 282 1 149 1 150 1 188 1 327 1 53 2 285 1 98 1 330 1 237 2 191 2 13 1 104 1 243 1 160 1 196 1 246 2 162 2 248 3 337 2 250 1 20 1 24 2 345 1 202 1 206 1 67 1 118 1 349 1 257 2 122 1 258 1 130 1 217 1 218 1 133 1 75 1 261 1 174 1 77 1 139 1 143 1 232 1 322 1 
122 1 282 1 257 1 149 1 258 1 53 1 285 1 98 1 130 1 237 2 191 1 133 1 261 1 77 1 13 1 160 1 105 1 246 1 196 1 162 1 248 2 139 1 337 2 23 1 24 1 202 1 232 1 67 1 322 1 
214 1 93 1 148 1 31 2 351 1 124 1 5 2 151 1 72 2 96 3 99 6 171 1 238 1 102 1 307 3 289 1 265 1 267 1 244 1 245 1 271 1 47 1 365 1 88 1 275 2 66 1 
116 1 69 2 214 2 93 2 186 3 31 1 351 1 124 1 5 1 72 2 96 6 189 2 99 14 171 2 102 4 307 8 103 1 289 11 309 1 42 1 267 2 244 11 178 1 138 1 16 1 110 1 271 2 141 1 113 1 63 1 253 3 88 2 275 4 
145 1 117 1 116 1 90 1 280 1 214 1 30 1 351 1 5 1 71 1 53 1 9 1 96 1 97 1 99 2 217 1 171 1 57 1 102 1 191 2 132 1 307 1 103 1 75 1 158 1 334 1 267 1 16 1 162 2 294 1 270 1 271 1 341 1 86 1 87 1 275 2 88 1 348 1 
145 2 90 2 146 1 93 3 5 2 6 2 53 1 96 10 9 3 189 2 97 3 99 20 238 1 57 3 191 3 102 7 103 1 289 7 158 2 59 1 334 2 244 7 245 1 16 1 107 2 162 3 336 1 112 2 113 4 66 1 348 2 116 1 117 2 69 2 214 3 30 1 31 4 351 3 124 3 71 2 72 8 129 1 217 1 171 3 132 1 307 10 75 1 265 1 311 2 267 3 178 2 271 3 270 1 47 1 48 2 365 1 87 2 88 3 275 6 
9 1 97 1 30 1 57 1 205 1 
69 1 214 1 91 1 93 1 31 1 351 1 124 1 150 1 72 1 53 1 189 1 96 2 99 3 217 1 171 1 305 1 102 1 191 1 307 1 75 1 289 1 267 1 244 1 178 1 16 1 162 1 271 1 88 1 275 2 
267 1 214 1 244 1 93 1 148 1 351 1 72 1 189 1 99 2 271 1 113 1 171 1 190 1 102 1 307 2 275 2 88 1 289 1 
267 1 214 1 244 1 178 1 148 1 31 1 351 1 124 1 72 1 96 2 314 1 99 2 271 1 171 1 102 1 275 2 88 1 289 1 
69 1 267 1 214 1 178 1 244 2 93 1 148 1 31 1 351 1 124 1 72 2 96 2 189 1 99 4 271 1 113 1 171 1 102 2 307 2 275 2 88 1 289 2 
205 1 
205 1 
205 1 
69 1 267 1 214 1 178 1 244 2 93 1 31 1 351 1 124 1 72 2 96 2 189 1 271 1 99 4 113 1 171 1 102 2 307 2 275 2 88 1 289 2 
116 1 145 1 117 1 90 1 214 1 30 1 351 1 5 1 71 1 9 1 96 1 97 1 99 2 171 1 57 1 191 1 307 1 103 1 158 1 334 1 267 1 107 1 162 1 271 1 87 1 275 2 88 1 348 1 
116 1 145 1 90 1 120 1 214 1 30 1 351 1 5 1 353 1 71 1 9 1 96 1 97 1 99 2 171 1 57 1 191 1 307 1 103 1 334 1 267 1 162 1 271 1 273 1 87 1 275 2 88 1 348 1 
69 1 267 1 214 1 178 1 244 2 93 1 31 1 16 1 351 1 124 1 72 2 96 2 189 1 99 4 271 1 113 1 171 1 102 2 307 2 275 2 88 1 289 2 
145 1 117 1 69 1 90 1 214 1 93 1 31 1 351 1 124 1 72 2 71 1 96 2 189 1 9 1 97 1 99 4 73 1 171 1 57 1 102 2 191 1 307 2 289 2 158 1 334 1 311 1 267 1 178 1 244 2 107 1 162 1 271 1 113 1 87 1 275 2 88 1 348 1 
144 1 69 1 214 1 93 1 351 1 124 1 150 1 72 1 53 1 96 1 189 1 99 3 217 1 171 1 305 1 191 1 102 1 307 2 75 1 289 1 267 1 178 1 244 1 16 1 162 1 271 1 113 1 88 1 275 2 
69 3 93 3 167 1 186 1 31 3 2 1 124 3 72 6 96 10 189 3 99 19 171 2 307 9 240 1 309 1 267 2 178 3 361 2 17 1 18 2 271 2 315 1 316 1 141 1 113 3 253 2 88 2 275 4 254 1 276 1 
69 2 93 2 167 1 186 2 31 1 124 1 72 1 96 8 189 2 99 17 171 2 56 1 307 9 267 2 178 1 106 1 226 1 17 1 18 2 271 2 45 1 315 2 316 1 201 1 141 2 272 1 253 2 88 2 275 4 276 2 
69 4 93 5 167 1 186 3 31 4 124 5 352 1 72 8 96 21 189 4 99 41 303 1 171 3 238 1 56 1 307 20 240 1 265 1 309 1 267 3 178 4 245 1 106 1 226 1 361 1 17 1 45 1 18 4 271 3 315 1 316 1 201 1 272 1 141 3 113 4 47 1 253 4 365 1 88 3 275 6 254 1 66 1 276 2 
69 4 93 4 167 1 186 3 31 3 124 3 352 1 72 5 96 15 189 4 99 30 171 3 56 1 307 15 240 1 309 1 267 3 178 3 106 1 226 1 361 1 17 1 45 1 18 3 271 3 315 1 316 1 201 1 272 1 141 3 113 2 253 4 88 3 275 6 254 1 276 2 
69 6 93 7 167 1 186 4 31 6 124 6 72 10 96 19 189 6 99 41 171 1 238 1 56 1 307 22 265 1 309 2 42 2 267 1 178 5 245 1 106 1 226 1 17 1 45 1 18 2 271 1 315 1 316 1 272 1 141 2 113 4 47 1 253 4 365 1 88 1 275 2 66 1 276 1 
95 1 249 1 329 1 154 1 227 1 184 1 260 1 64 1 325 1 60 1 
326 1 177 1 
209 1 249 1 159 1 329 1 154 1 227 1 184 1 60 1 313 1 
152 1 179 1 
176 1 19 1 290 1 
325 1 60 1 188 1 337 1 108 1 301 1 249 1 362 1 329 1 154 1 184 1 227 1 237 1 260 1 64 1 274 1 239 1 220 2 
325 1 60 1 188 1 337 1 108 1 301 1 249 1 362 1 329 1 154 1 184 1 227 1 237 1 260 1 64 1 274 1 239 1 220 2 
325 1 60 1 188 1 337 1 108 1 301 1 249 1 362 1 329 1 154 1 184 1 227 1 237 1 260 1 64 1 274 1 239 1 220 2 
152 1 176 1 179 1 
152 1 176 1 179 1 
19 1 290 1 
176 1 19 1 290 1 
121 1 127 1 
121 1 127 1 5 1 326 1 53 2 329 1 154 1 217 2 237 1 191 2 75 2 220 1 264 1 11 1 177 1 15 1 162 2 60 1 337 1 182 1 362 1 249 1 227 1 184 1 363 1 274 1 319 1 
145 1 116 1 213 1 214 1 187 1 351 1 53 2 356 1 9 2 96 1 97 2 99 2 259 2 171 1 57 2 191 2 307 1 103 1 263 1 334 1 12 1 41 1 267 1 16 1 162 2 271 1 87 1 275 2 88 1 348 1 233 1 
145 1 334 1 146 1 360 1 235 1 168 1 300 1 296 1 9 2 97 2 73 1 358 1 156 1 57 2 331 1 318 1 230 1 332 2 333 1 
145 1 334 1 146 1 360 1 168 1 296 1 9 1 97 1 358 1 156 1 57 1 331 1 318 1 230 1 332 2 308 1 333 1 
145 1 334 1 30 1 81 1 300 1 269 1 9 1 8 1 97 1 57 1 344 1 87 1 348 1 333 1 
145 1 334 1 146 1 360 1 235 1 168 1 300 1 296 1 9 1 97 1 358 1 156 1 57 1 331 1 318 1 230 1 332 2 333 1 
222 1 
7 1 241 1 13 1 218 1 188 1 67 1 151 1 
282 1 149 1 283 1 188 1 170 1 218 1 237 1 133 1 174 1 13 1 193 1 243 1 160 1 137 1 337 1 49 1 67 1 
69 1 145 1 255 2 256 1 119 1 93 1 30 1 282 2 149 2 283 2 298 2 71 1 355 1 189 1 9 1 97 1 55 1 170 1 237 2 57 1 133 2 174 2 334 2 40 1 223 1 13 2 160 2 139 1 337 2 181 1 180 2 111 1 112 1 87 4 321 1 348 1 67 3 207 1 
69 2 255 5 93 2 186 1 282 1 149 1 283 3 298 5 124 2 189 2 56 1 133 1 13 6 160 1 178 2 106 1 226 1 45 1 141 1 272 1 253 1 67 4 
118 1 349 1 93 2 324 1 257 1 282 1 149 1 124 1 150 1 53 1 217 1 357 1 237 1 191 1 133 1 75 1 265 1 13 2 160 1 162 1 197 2 337 1 250 1 20 1 47 1 65 1 66 1 67 2 
7 1 13 1 218 1 160 1 282 1 149 1 133 1 188 1 67 1 
69 1 255 1 13 1 193 1 93 1 178 1 298 1 283 2 124 1 188 1 189 1 67 2 
170 1 218 1 237 1 188 1 337 1 174 1 
145 1 89 1 119 1 323 1 30 2 282 2 149 1 9 2 8 1 97 2 170 1 237 2 57 2 133 2 37 1 221 1 174 2 334 1 13 1 160 2 337 2 269 1 87 1 204 1 348 1 67 1 
117 1 145 1 118 1 90 1 214 1 30 1 351 1 150 2 5 1 71 1 53 2 96 1 9 1 97 1 99 1 217 2 171 1 57 1 191 3 103 1 75 2 158 1 334 1 267 1 107 1 162 3 271 1 163 1 87 1 88 1 275 2 348 1 
255 1 13 1 160 1 119 1 282 1 149 1 283 1 188 1 218 1 133 1 204 1 67 1 
249 1 154 1 35 1 
249 1 154 1 35 1 
249 1 154 1 121 1 260 1 82 1 
249 1 154 1 35 1 
249 1 79 1 154 1 
249 1 79 1 154 1 
249 1 79 1 154 1 
249 1 154 1 
329 1 60 1 
265 1 267 2 93 1 245 1 31 2 124 1 72 3 96 4 99 8 271 2 113 1 171 2 201 1 238 1 47 1 307 4 365 1 275 4 88 2 66 1 
265 1 93 1 245 1 31 2 124 1 151 1 72 2 96 3 99 6 238 1 47 1 365 1 307 3 66 1 
69 1 267 1 178 1 93 1 31 1 124 1 72 2 96 2 189 1 271 1 99 4 171 1 113 1 307 2 346 1 275 2 88 1 
69 1 309 1 178 1 93 1 186 1 31 1 124 1 72 2 96 4 189 1 99 7 141 1 113 1 253 2 307 3 
69 2 93 3 186 2 31 5 124 3 72 9 189 2 96 12 99 23 171 2 238 1 101 1 307 11 265 2 309 1 42 1 267 2 178 2 245 1 271 2 113 4 201 2 63 1 47 2 253 2 365 1 275 4 88 2 66 1 
96 1 99 1 253 1 
99 1 186 1 307 1 
69 1 267 1 93 1 178 1 31 2 124 1 72 3 96 3 189 1 271 1 99 6 112 1 171 1 113 1 307 3 88 1 275 2 346 1 
69 2 93 2 186 1 31 1 124 2 72 2 96 6 189 2 99 12 171 1 56 1 307 6 267 1 178 2 106 1 226 1 17 1 271 1 45 1 113 1 141 1 272 1 253 1 88 1 275 2 
265 1 93 1 31 1 124 1 72 2 96 3 99 6 113 1 47 1 307 3 66 1 
265 1 267 1 245 1 31 1 72 2 96 2 99 3 271 1 113 1 201 1 171 1 47 1 101 1 307 1 365 1 275 2 88 1 
265 2 267 1 93 2 31 3 124 2 72 5 17 1 96 5 271 1 99 10 171 1 357 1 113 2 47 2 307 5 88 1 275 2 66 1 
267 1 93 1 72 1 17 1 189 1 271 1 99 2 171 1 113 1 307 2 275 2 88 1 
69 1 267 1 178 1 93 1 31 1 124 1 72 2 96 2 17 1 189 1 271 1 99 4 171 1 113 1 307 2 275 2 88 1 
265 1 267 3 31 1 72 2 96 2 17 1 99 3 271 3 201 1 171 3 113 1 101 1 47 1 307 1 275 6 88 3 240 1 
93 2 186 1 31 2 124 2 72 4 96 6 99 12 171 3 357 1 307 6 240 1 265 1 267 3 225 1 245 1 17 1 271 3 113 2 141 1 253 1 47 1 365 1 346 1 88 3 275 6 66 1 
93 1 186 1 31 2 124 1 72 2 96 4 99 8 171 1 238 1 307 4 265 1 267 1 245 1 106 1 17 1 271 1 141 1 253 1 47 1 365 1 88 1 275 2 66 1 
69 1 93 2 186 1 31 2 124 1 72 3 96 5 189 1 99 11 171 2 238 1 307 6 265 1 309 1 267 2 245 1 106 1 17 1 271 2 141 1 113 1 47 1 253 2 365 1 88 2 275 4 346 1 66 1 
69 2 93 3 186 1 31 3 124 3 72 4 96 10 189 2 99 19 171 3 238 1 56 1 307 9 265 1 267 3 178 2 245 1 106 1 226 1 17 1 271 3 45 1 113 1 141 1 272 1 201 1 47 1 253 1 365 1 346 1 88 3 275 6 66 1 
69 2 267 1 178 1 93 2 186 1 31 1 106 1 226 1 124 1 72 1 189 2 17 1 96 4 45 1 271 1 99 10 272 1 171 1 141 1 56 1 253 1 307 6 275 2 88 1 
93 1 186 1 31 2 124 1 72 2 96 4 99 8 171 1 238 1 307 4 265 1 267 1 245 1 106 1 17 1 271 1 141 1 253 1 47 1 365 1 88 1 275 2 66 1 
69 2 93 2 186 1 31 1 124 2 72 2 96 6 189 2 99 12 171 1 56 1 307 6 267 1 178 2 106 1 226 1 17 1 271 1 45 1 113 1 141 1 272 1 253 1 88 1 275 2 
69 2 93 2 186 1 31 1 124 1 72 1 96 5 189 2 99 11 171 3 56 1 307 6 267 3 178 1 106 1 226 1 17 1 271 3 45 1 141 1 272 1 201 1 253 1 346 1 88 3 275 6 
69 3 93 3 186 1 31 3 124 2 72 6 96 7 189 3 99 16 171 4 56 1 307 9 240 1 267 4 178 2 106 1 226 1 17 1 271 4 45 1 113 3 141 1 272 1 201 2 253 1 88 4 275 8 
265 3 93 1 245 1 31 3 124 1 72 6 96 4 99 7 113 3 47 3 365 2 307 3 66 1 
69 2 93 2 186 1 31 1 124 1 72 1 96 5 189 2 99 11 171 3 56 1 307 6 240 1 267 3 178 1 106 1 226 1 17 1 271 3 45 1 141 1 272 1 201 1 253 1 88 3 275 6 
53 1 39 1 191 1 162 1 288 1 5 1 232 1 
277 1 0 1 39 1 33 1 162 1 5 1 4 1 53 1 172 1 191 1 288 1 232 1 
145 1 8 1 9 1 334 1 97 1 30 1 57 1 87 1 348 1 269 1 151 1 
117 1 145 1 334 1 90 1 30 1 162 2 5 1 71 1 53 1 9 1 97 1 270 1 217 1 57 1 191 2 87 1 348 1 75 1 
117 1 145 1 334 1 51 1 90 1 257 1 196 1 268 1 162 2 5 1 71 2 53 2 9 1 97 1 130 1 270 1 217 2 85 1 57 1 191 2 87 3 348 2 75 1 
145 1 28 1 51 1 90 1 257 1 5 1 353 1 71 2 53 2 9 2 97 2 130 1 217 2 57 2 191 2 75 1 334 1 268 1 196 1 162 2 270 1 85 1 87 3 348 2 
145 1 334 1 28 1 51 1 256 1 30 1 268 1 247 1 188 1 139 1 337 2 180 1 71 1 9 3 97 3 218 1 85 1 237 2 57 3 87 4 348 1 135 1 174 1 
145 1 334 1 28 1 40 1 51 1 256 1 30 1 268 1 188 1 139 1 337 2 180 1 71 1 9 3 97 3 218 1 85 1 237 2 57 3 87 4 348 1 174 1 
145 1 9 1 334 1 97 1 131 1 57 1 
145 1 334 2 30 1 312 1 71 1 52 1 9 1 97 1 155 1 57 1 87 1 348 1 207 1 
145 1 90 1 93 1 5 2 6 1 53 1 9 1 96 3 97 1 99 6 57 1 238 1 102 1 191 2 289 1 158 1 334 1 244 1 245 1 107 1 16 1 162 2 66 1 348 1 117 1 214 2 31 2 351 2 124 1 71 1 72 2 73 1 217 1 171 2 307 3 75 1 265 1 311 1 267 2 271 2 270 1 47 1 87 1 365 1 88 2 275 4 233 1 
256 1 30 1 282 2 149 2 188 1 7 1 9 1 97 1 55 1 170 1 218 1 237 3 57 1 133 2 221 1 174 2 241 1 223 1 40 1 13 1 160 2 139 1 337 3 180 1 111 1 319 1 87 2 67 1 
145 1 334 2 256 1 71 1 9 2 97 2 73 1 131 1 57 2 87 2 321 1 348 1 207 1 
145 1 334 1 28 1 92 1 30 1 269 1 9 4 8 1 97 4 73 1 57 4 87 1 348 1 
145 1 266 1 334 2 312 1 354 1 71 1 52 1 129 1 9 1 97 1 57 1 87 1 348 1 
145 1 9 1 334 1 97 1 30 1 156 1 318 1 57 1 230 1 332 1 
145 1 334 1 41 1 146 1 9 2 356 1 97 2 73 1 57 2 87 1 348 1 
145 2 334 2 41 1 92 1 30 1 268 1 269 1 94 1 8 1 9 5 97 5 73 1 340 1 57 4 87 3 348 2 
145 2 334 2 41 1 92 1 30 1 268 1 269 1 8 1 9 5 97 5 73 1 251 1 340 1 57 4 87 3 348 2 
145 1 334 1 90 1 30 1 162 2 5 1 353 1 71 1 53 1 9 1 97 1 270 1 217 1 57 1 191 2 87 1 348 1 75 1 
145 1 334 2 268 1 312 1 71 1 52 1 9 1 97 1 155 1 57 1 87 1 348 1 207 1 
12 1 278 1 213 1 257 1 123 2 162 1 5 1 53 1 191 1 367 1 192 1 263 1 
114 1 118 1 213 1 349 1 324 1 257 2 123 2 150 1 188 1 53 2 130 1 217 1 218 1 237 2 191 2 75 1 263 1 192 1 77 1 12 1 196 1 161 1 162 2 139 1 337 2 20 1 252 1 231 1 319 1 367 1 
192 1 367 1 
252 1 161 1 123 1 
78 1 185 1 84 1 151 1 
68 1 78 1 310 1 185 1 84 1 291 1 173 1 
287 1 291 1 284 1 
68 1 78 1 310 3 185 1 291 3 1 1 14 1 299 2 328 1 84 1 173 1 203 1 
68 1 78 1 310 2 185 1 210 1 84 1 291 2 25 1 173 1 
68 1 310 1 78 1 291 1 43 1 168 1 295 1 328 1 230 1 332 1 173 1 
68 1 328 1 78 1 310 1 84 1 291 1 173 1 
68 1 328 1 310 1 185 1 84 2 291 1 173 1 
68 2 359 1 78 1 310 2 291 2 3 1 328 1 84 1 173 2 262 1 
68 1 310 3 78 2 185 1 210 2 291 3 43 1 302 1 328 1 200 1 84 1 173 1 58 1 
115 1 68 1 78 1 310 2 185 1 210 1 291 2 360 1 168 1 328 1 84 1 156 1 230 1 332 2 173 1 
68 2 310 4 78 2 185 1 210 2 291 4 215 1 43 1 328 1 200 1 84 1 173 2 25 1 
68 1 328 1 78 1 310 1 185 1 84 1 291 1 173 1 
68 1 310 4 78 3 185 2 210 2 1 1 291 4 299 1 43 1 70 1 200 1 84 2 173 1 203 1 
68 1 78 1 310 2 185 1 210 1 279 1 291 2 32 1 328 1 84 1 142 1 173 1 
68 1 78 1 310 3 185 1 291 3 1 2 299 2 328 1 84 1 164 1 173 1 203 1 
78 2 83 1 304 1 195 2 
68 1 328 1 310 1 291 1 306 1 173 1 
302 1 68 1 328 1 78 1 310 2 185 1 210 1 84 1 291 2 173 1 
208 1 
68 1 328 1 78 1 310 1 185 1 84 1 291 1 173 1 
302 1 68 1 328 1 78 1 310 3 185 1 210 1 84 1 291 3 299 1 173 1 
78 1 200 1 43 1 70 1 
78 1 84 1 

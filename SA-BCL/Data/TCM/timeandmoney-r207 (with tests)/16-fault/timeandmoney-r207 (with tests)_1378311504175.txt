#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 110 (86,101) (86,101) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 110 (86,101) (86,101) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 110 (86,101) (86,101) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 110 (86,101) (86,101) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 110 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (82,272) 317 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (82,272) 317 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (63,150,314) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (63,150,314) 47 56 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (29,38,277) 283 316 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (63,150,314) 47 203 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (29,38,277) 283 316 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 30 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (29,38,277) 283 (63,150,314) 12 170 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 61 228 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 61 228 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 61 228 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 61 228 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 61 228 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (29,38,277) 283 316 180 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (29,38,277) 283 316 180 238 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (63,150,314) 47 244 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 2 291 2 27 2 3 1 249 1 137 3 272 1 160 2 302 2 99 9 32 1 101 1 280 9 172 1 241 1 82 1 261 1 58 2 204 4 86 1 179 2 88 6 132 1 110 1 44 4 354 1 
149 2 291 2 27 2 3 1 249 1 137 3 272 1 160 2 99 9 302 2 32 1 101 1 280 9 172 1 241 1 82 1 261 1 58 2 204 4 86 1 179 2 88 6 132 1 110 1 44 4 354 1 
149 2 291 2 27 2 3 1 249 1 137 3 272 1 160 2 99 9 302 2 32 1 101 1 280 9 172 1 241 1 82 1 261 1 58 2 204 4 86 1 179 2 88 6 132 1 110 1 44 4 354 1 
149 2 291 2 27 2 3 1 249 1 137 2 272 1 160 2 99 7 302 1 32 1 101 1 280 7 241 1 82 1 261 1 58 2 204 3 86 1 179 2 88 4 132 1 110 1 44 3 354 1 
280 4 291 1 172 1 27 1 241 1 58 1 249 1 204 2 137 1 179 1 88 3 160 1 99 4 302 2 110 1 44 2 
32 1 280 2 291 1 149 1 27 1 261 1 2 1 307 1 58 1 249 1 204 1 17 1 179 1 119 1 66 1 99 2 
280 3 149 1 27 2 249 1 204 2 17 1 137 1 179 2 272 1 88 1 119 1 99 3 44 1 
280 1 272 1 179 1 27 1 317 1 223 1 99 1 249 1 
280 1 272 1 179 1 27 1 317 1 223 1 99 1 249 1 
337 1 9 1 104 1 
337 1 188 2 39 1 
29 2 278 1 216 1 158 2 35 2 38 2 277 2 135 2 
147 1 214 1 216 1 25 1 94 1 232 1 247 2 271 1 29 3 75 2 318 1 321 1 158 2 336 1 161 2 195 1 52 1 277 2 122 1 278 1 226 1 304 1 282 1 35 2 38 2 345 2 141 1 59 1 310 1 131 1 230 1 209 1 312 2 331 1 22 1 353 1 135 3 
327 1 29 1 278 1 158 1 313 1 35 1 38 1 222 1 277 1 135 1 
38 1 283 1 314 1 
29 1 150 1 158 1 35 1 38 1 277 1 135 1 
63 1 23 1 190 1 74 1 237 1 
337 1 252 1 63 2 9 1 23 2 74 1 264 1 237 1 
63 1 23 1 74 1 
327 1 278 1 35 1 38 1 29 1 63 1 23 1 158 1 313 1 77 1 222 1 277 1 237 1 135 1 
337 1 
337 1 251 1 63 2 9 1 23 2 74 1 264 1 237 1 
337 1 80 1 49 1 292 1 233 1 296 2 264 1 74 2 154 1 51 1 6 2 156 1 63 5 9 1 23 5 183 1 196 2 237 2 134 1 
122 1 147 1 94 1 126 1 35 1 247 1 38 1 141 1 153 1 29 2 131 1 209 1 22 1 89 1 312 1 331 1 336 1 161 1 277 1 135 2 
216 1 104 1 
33 1 123 1 216 2 35 1 38 2 29 2 158 1 277 1 135 2 
153 1 79 1 189 1 
122 1 147 1 216 1 94 1 247 1 141 1 29 1 5 1 131 1 209 1 312 1 331 1 22 1 336 1 161 1 135 1 
29 3 216 1 89 1 158 1 35 3 38 3 277 3 135 3 
327 1 29 1 313 1 35 1 38 1 277 1 135 1 
29 1 33 1 123 1 158 1 313 1 35 1 38 1 277 1 135 1 
29 2 33 1 150 1 56 1 89 1 158 1 35 2 126 1 38 2 277 2 47 1 135 2 
29 1 316 1 89 1 35 1 283 1 38 2 277 1 135 1 
29 1 150 1 89 1 35 1 126 1 38 1 203 1 277 1 47 1 135 1 
33 1 189 1 35 2 38 2 29 2 153 1 89 1 158 1 277 2 135 2 
122 1 147 1 216 1 94 1 247 1 141 1 29 1 131 1 209 1 312 1 331 1 22 1 336 1 161 1 135 1 
122 1 147 1 216 1 94 1 247 1 174 1 141 1 29 1 131 1 300 1 209 1 312 1 336 1 161 1 135 1 
148 1 25 2 293 1 189 2 153 2 75 4 8 1 98 1 195 1 139 1 52 1 167 1 79 2 239 1 199 1 304 1 282 2 14 1 345 2 59 1 310 1 230 1 133 1 289 1 
29 1 313 1 35 1 38 1 234 1 277 1 97 1 135 1 
33 1 216 1 316 1 105 1 35 4 126 1 283 1 38 5 295 1 29 4 89 2 158 1 277 4 135 4 
327 1 29 2 313 1 35 2 38 2 277 2 97 1 135 2 
31 1 129 1 
31 1 129 1 
286 1 255 1 
286 1 255 1 
286 1 255 1 
31 1 325 1 129 1 
117 1 31 1 129 1 
266 1 218 1 31 2 286 1 255 1 129 2 
31 1 325 1 129 1 
31 1 325 1 129 1 
279 1 31 1 129 1 
279 1 31 1 129 1 
279 1 31 1 129 1 
257 1 48 1 337 1 168 2 124 2 245 1 70 2 34 2 129 2 192 2 266 1 206 1 63 2 31 2 23 2 65 1 120 3 109 1 90 1 
216 1 70 1 29 2 192 1 333 1 116 1 117 1 31 1 253 1 120 1 277 2 198 1 102 1 124 1 34 1 35 2 38 2 129 1 227 1 208 1 63 1 23 1 90 1 135 2 
291 1 160 1 58 1 
291 1 66 1 58 1 
215 1 291 3 339 1 66 1 160 2 111 1 
291 2 339 1 83 1 66 1 160 1 111 1 
291 2 339 1 66 1 160 1 111 2 
148 1 188 3 296 1 233 3 250 1 74 1 114 1 193 1 154 2 116 1 6 1 322 2 8 1 156 1 9 1 196 1 237 4 337 2 198 1 199 1 81 1 262 1 57 2 39 1 264 1 60 1 142 1 16 1 208 1 63 5 133 1 23 5 315 2 
148 3 188 9 4 1 296 2 233 8 190 5 250 3 74 6 114 1 193 2 154 6 6 2 322 6 8 3 156 1 236 1 9 1 10 5 274 1 196 2 237 7 256 1 198 4 337 5 80 1 199 3 262 3 57 6 39 3 264 1 16 2 40 1 63 9 133 3 23 9 184 1 
148 1 188 4 296 1 233 3 250 1 29 1 193 1 154 2 6 1 8 1 322 2 9 1 158 1 77 1 222 1 196 1 277 1 237 2 327 1 278 1 337 3 198 1 199 1 80 1 81 1 200 1 262 1 35 1 57 2 38 1 39 2 142 1 16 1 63 3 133 1 23 3 313 1 315 1 135 1 
188 7 233 5 4 1 193 1 6 1 8 2 322 4 9 1 274 1 196 1 277 1 237 3 327 1 278 1 198 2 199 2 200 1 57 4 16 1 142 1 63 4 23 4 148 2 296 1 250 2 29 1 154 4 158 1 77 1 222 1 337 4 80 1 81 1 262 2 35 1 38 1 39 3 133 2 313 1 184 1 315 2 135 1 
147 1 173 1 104 1 
147 1 92 1 
128 1 
147 1 131 1 
147 3 131 1 173 2 323 1 306 1 141 1 
147 1 131 1 141 1 
147 1 240 1 
328 1 239 2 25 3 281 2 293 3 260 1 282 4 309 1 96 1 75 7 8 1 133 1 351 1 64 1 211 1 288 1 53 1 
328 1 239 2 25 3 281 2 293 3 260 1 282 4 309 1 96 1 75 7 8 1 133 1 351 1 64 1 211 1 288 1 53 1 
328 1 239 2 25 3 281 2 293 3 260 1 282 4 309 1 96 1 75 7 8 1 133 1 118 1 351 1 64 1 211 1 288 1 53 1 
91 1 148 3 25 15 293 10 136 1 71 1 95 1 96 1 250 3 75 31 8 4 324 3 162 1 52 1 53 2 328 2 54 1 239 5 199 3 55 1 281 3 304 1 260 1 282 16 309 1 345 2 59 1 310 1 144 4 133 4 64 1 351 2 211 5 288 2 
328 1 75 1 281 1 304 1 30 1 282 1 345 2 52 1 24 1 59 1 310 1 53 1 
149 1 291 2 215 1 1 1 27 1 217 1 247 1 246 1 220 1 249 1 298 1 299 1 119 1 160 1 161 1 99 2 164 1 122 1 280 2 125 1 58 1 204 1 17 1 329 1 179 1 209 1 88 1 312 1 66 1 108 1 
215 1 149 1 291 2 1 1 27 1 217 1 247 1 246 1 220 1 298 1 299 1 119 1 160 1 161 1 99 3 276 1 122 1 280 3 125 1 58 1 346 1 204 1 17 1 179 1 209 1 88 2 312 1 42 1 66 1 108 1 
149 1 291 2 215 1 217 1 247 1 220 1 298 1 299 1 119 1 161 1 160 1 99 2 276 1 122 1 280 2 125 1 58 1 204 1 17 1 209 1 88 2 312 1 42 1 66 1 108 1 
122 1 147 1 67 1 303 1 280 1 149 2 27 1 217 2 247 1 346 1 298 2 131 1 85 1 209 1 179 1 157 1 312 1 254 1 336 1 161 1 108 2 212 1 99 1 
149 1 291 2 215 1 1 1 27 1 217 1 247 1 246 1 220 1 249 1 298 1 299 1 160 1 161 1 99 1 122 1 280 1 125 1 58 1 329 1 179 1 209 1 312 1 42 1 66 1 108 1 
0 1 
147 1 247 2 296 1 233 1 74 2 154 1 6 1 156 1 273 1 336 2 254 1 161 2 196 1 122 1 170 1 12 1 259 1 341 1 38 1 283 1 264 1 16 1 131 1 209 1 63 2 312 2 23 2 314 1 212 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 251 1 12 1 63 2 23 2 38 1 283 1 314 1 74 1 264 1 
170 1 6 1 12 1 156 1 63 1 23 1 38 1 283 1 314 1 296 1 196 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 12 1 63 1 23 1 38 1 283 1 314 1 
170 1 6 1 12 1 156 1 63 1 23 1 38 1 283 1 314 1 296 1 196 1 
25 3 216 2 293 2 189 1 96 1 153 1 75 6 8 1 195 1 52 1 167 1 239 2 79 1 281 1 304 1 260 1 104 1 282 3 345 2 309 1 59 1 310 1 230 1 133 1 351 1 288 1 
148 2 216 1 25 6 187 1 293 2 136 1 189 4 95 1 250 2 153 11 75 14 318 1 8 2 324 3 195 1 163 1 52 2 239 1 79 11 226 1 199 1 304 2 282 8 345 4 59 2 310 2 265 1 349 1 230 2 144 3 133 1 211 1 43 1 
147 1 216 1 187 1 25 1 94 1 69 1 189 1 247 1 113 1 5 1 29 2 115 1 75 2 318 1 336 1 161 1 195 1 52 1 277 1 122 1 226 1 304 1 282 1 35 1 126 1 38 1 141 1 345 2 310 1 59 1 131 1 230 1 209 1 22 1 331 1 312 1 89 1 135 2 
269 2 187 1 94 2 189 7 96 1 318 1 319 1 8 3 195 3 277 1 52 3 239 4 199 2 281 1 282 10 202 2 141 2 59 3 209 2 331 2 22 2 211 4 288 1 147 2 148 2 216 2 25 10 293 8 26 1 247 3 250 2 29 3 153 7 75 20 335 2 155 2 336 1 161 3 122 2 79 7 226 1 304 3 260 1 37 1 126 1 35 1 38 1 309 1 345 6 310 3 131 2 230 3 133 3 312 3 89 1 42 1 351 1 353 2 135 3 
147 3 214 2 25 1 247 7 332 1 29 1 334 1 75 2 318 1 320 1 336 2 254 1 161 8 195 2 121 1 277 1 52 2 164 1 122 2 167 1 226 1 304 2 201 1 282 1 35 1 38 1 345 4 59 2 310 2 131 2 207 1 230 2 209 2 89 1 312 8 42 1 212 1 45 1 135 1 
148 1 187 1 68 1 25 2 293 1 189 1 250 1 153 1 29 1 75 3 8 1 158 1 195 1 52 1 277 1 239 1 79 1 33 1 199 1 304 1 282 1 35 1 38 1 345 2 59 1 310 1 230 1 133 1 135 1 
167 1 79 1 148 1 293 1 304 1 189 1 282 2 345 2 310 1 59 1 153 1 75 2 230 1 8 1 98 1 211 1 195 1 52 1 
167 1 239 1 79 1 199 1 25 2 293 1 304 1 189 1 14 1 345 2 310 1 59 1 153 1 75 2 230 1 133 1 195 1 52 1 
148 1 25 2 293 2 189 2 250 1 153 2 75 4 8 1 195 1 52 1 167 1 79 2 239 1 199 1 304 1 282 2 345 2 59 1 310 1 230 1 133 1 211 1 
79 1 148 1 293 1 304 1 189 1 282 2 345 2 310 1 59 1 153 1 75 2 320 1 230 1 8 1 98 1 211 1 195 1 52 1 
239 1 79 1 199 1 25 2 293 1 304 1 189 1 14 1 345 2 310 1 59 1 153 1 75 2 320 1 230 1 133 1 195 1 52 1 
148 1 25 2 293 2 189 2 250 1 153 2 75 4 320 1 8 1 195 1 52 1 79 2 239 1 199 1 304 1 282 2 345 2 59 1 310 1 230 1 133 1 211 1 
239 1 79 2 148 1 199 1 25 2 293 2 304 1 189 2 282 2 345 2 310 1 59 1 250 1 153 2 75 4 230 1 8 1 133 1 211 1 195 1 52 1 
147 1 216 1 25 1 94 1 247 1 29 1 75 2 318 1 336 1 161 1 195 1 52 1 122 1 226 1 304 1 282 1 141 1 345 2 310 1 59 1 131 1 230 1 209 1 22 1 331 1 312 1 353 1 135 1 
147 1 216 1 25 1 94 1 247 1 29 1 75 2 318 1 300 1 336 1 161 1 195 1 52 1 122 1 226 1 304 1 282 1 174 1 141 1 345 2 310 1 59 1 131 1 177 1 230 1 209 1 312 1 135 1 
148 1 187 1 25 2 293 2 189 2 250 1 153 2 75 4 8 1 195 1 52 1 79 2 239 1 199 1 304 1 282 2 345 2 59 1 310 1 230 1 133 1 211 1 
147 1 148 1 25 2 293 2 94 1 189 2 247 1 250 1 153 2 29 1 75 4 8 1 161 1 195 1 52 1 164 1 122 1 239 1 79 2 199 1 304 1 282 2 202 1 141 1 345 2 310 1 59 1 131 1 230 1 209 1 133 1 22 1 331 1 312 1 211 1 353 1 135 1 
148 1 25 1 187 1 293 1 189 1 250 1 29 1 153 1 75 3 8 1 158 1 195 1 52 1 277 1 79 1 199 1 33 1 304 1 282 2 35 1 38 1 345 2 59 1 310 1 205 1 230 1 133 1 211 1 135 1 
228 1 304 1 61 1 93 1 275 1 345 2 52 1 24 1 59 1 310 1 
228 1 304 1 61 1 93 1 275 1 345 2 52 1 24 1 59 1 310 1 
228 1 304 1 61 1 93 1 275 1 345 2 52 1 24 1 59 1 310 1 
228 1 304 1 61 1 93 1 275 1 345 2 52 1 24 1 59 1 310 1 
228 1 304 1 61 1 93 1 275 1 345 2 52 1 24 1 59 1 310 1 
50 1 48 1 192 1 266 1 206 1 124 1 31 1 34 1 70 1 129 1 
227 1 117 1 
192 1 124 1 31 1 34 1 70 1 13 1 344 1 129 1 186 1 
48 1 337 1 168 1 124 1 245 1 70 1 34 1 129 1 192 1 266 1 206 1 63 1 23 1 31 1 65 1 120 2 109 1 90 1 
48 1 337 1 168 1 124 1 245 1 70 1 34 1 129 1 192 1 266 1 206 1 63 1 23 1 31 1 65 1 120 2 109 1 90 1 
48 1 337 1 168 1 124 1 245 1 70 1 34 1 129 1 192 1 266 1 206 1 63 1 23 1 31 1 65 1 120 2 109 1 90 1 
218 1 84 1 325 1 
218 1 84 1 325 1 
279 1 290 1 
279 1 290 1 218 1 
333 1 253 1 
216 1 70 1 29 2 192 1 333 1 116 1 117 1 31 1 253 1 120 1 277 2 237 1 198 1 168 1 102 1 124 1 34 1 35 2 38 2 129 1 227 1 208 1 20 1 63 1 23 1 109 1 135 2 
84 1 325 1 
279 1 290 1 218 1 
147 1 214 2 187 1 25 1 247 2 332 1 29 2 75 2 318 1 138 1 161 2 195 1 52 1 122 1 140 1 226 1 304 1 201 1 282 1 38 2 343 1 345 2 310 1 59 1 131 1 230 1 209 1 312 2 107 1 46 1 135 2 
122 1 215 1 291 2 1 1 217 1 151 1 247 2 220 1 58 1 347 1 299 1 209 1 87 1 312 2 66 1 42 1 160 1 161 2 164 1 
122 1 215 1 291 2 1 1 217 1 247 1 220 1 58 1 299 1 87 1 209 1 181 1 312 1 66 1 42 1 160 1 161 1 
122 1 147 1 67 1 217 1 112 1 247 1 347 1 131 1 209 1 312 1 336 1 254 1 161 1 212 1 
122 1 215 1 291 2 1 1 217 1 151 1 247 1 220 1 58 1 347 1 299 1 87 1 209 1 312 1 66 1 42 1 160 1 161 1 
62 1 
337 1 154 1 292 1 9 1 104 1 183 1 233 1 
188 1 233 1 296 1 74 1 154 1 6 1 7 1 156 1 9 1 196 1 337 2 340 1 39 1 264 1 229 1 63 1 23 1 
270 1 92 2 188 6 233 4 191 1 6 2 322 3 8 1 323 1 196 2 199 1 242 1 57 3 141 1 16 1 21 1 209 1 63 2 23 2 147 4 148 1 72 1 247 1 296 2 74 2 250 1 154 3 155 1 156 2 336 1 161 1 225 1 122 2 337 3 173 1 262 2 36 1 39 3 264 1 131 1 311 1 312 1 133 1 
268 1 148 2 188 6 73 1 219 1 248 1 233 8 95 1 296 2 74 1 250 2 154 5 6 2 322 5 156 2 8 2 9 2 159 1 324 1 196 2 337 5 199 2 200 2 259 1 262 1 57 5 127 1 39 3 264 1 16 1 63 1 144 1 23 1 133 2 210 1 
296 1 233 2 29 1 154 2 6 1 156 1 8 2 158 1 77 1 222 1 196 1 277 1 327 1 278 1 169 1 200 2 262 1 35 1 38 1 309 1 175 1 63 1 23 1 133 1 351 1 313 1 288 1 135 1 
337 1 292 1 296 1 233 1 154 1 6 1 156 1 9 1 183 1 196 1 
148 1 337 2 199 1 200 1 188 4 262 1 57 2 233 2 39 2 250 1 154 2 8 1 322 2 133 1 
337 1 63 1 9 1 23 1 74 1 264 1 
147 1 247 4 296 2 233 2 74 4 154 2 6 2 156 1 273 1 336 2 254 1 161 4 196 2 122 1 80 1 258 2 259 2 341 1 264 2 348 1 16 2 285 1 131 1 209 1 63 3 231 1 312 4 23 3 212 1 
147 1 216 1 25 1 94 1 247 1 29 3 75 1 318 1 321 1 336 1 158 2 161 1 195 1 277 2 52 1 122 1 278 1 304 1 35 2 38 2 345 2 141 1 59 1 310 1 131 1 230 1 209 1 312 1 331 1 22 1 353 1 135 3 
337 2 259 1 188 2 296 1 233 1 39 1 16 1 154 1 6 1 322 1 156 1 9 1 196 1 
192 1 11 1 124 1 
48 1 333 1 192 1 178 1 124 1 
192 1 11 1 124 1 
192 1 11 1 124 1 
192 1 124 1 15 1 
192 1 124 1 15 1 
192 1 124 1 15 1 
192 1 124 1 
31 1 129 1 
239 2 281 1 25 4 293 3 304 2 71 1 260 1 282 4 309 1 345 4 310 2 59 2 96 1 75 8 8 1 133 1 351 1 211 1 52 2 288 1 
239 2 281 1 25 3 293 2 104 1 260 1 282 3 309 1 96 1 75 6 8 1 133 1 351 1 288 1 
239 1 148 1 199 1 25 2 293 2 304 1 282 2 345 2 310 1 59 1 250 1 75 4 8 1 133 1 267 1 211 1 52 1 
239 1 148 1 199 1 25 4 293 2 136 1 282 3 95 1 250 1 75 7 144 2 8 1 133 1 324 1 211 1 
148 2 25 12 293 9 136 1 71 2 297 1 96 1 250 2 75 23 8 3 324 2 52 2 239 5 199 2 281 1 304 2 260 1 282 11 309 1 345 4 310 2 59 2 265 1 144 2 133 3 351 2 211 4 43 1 288 2 
75 1 25 1 144 1 
75 1 282 1 324 1 
148 1 239 2 199 1 25 3 304 1 293 3 282 3 345 2 59 1 310 1 250 1 75 6 155 1 8 1 133 1 267 1 211 1 52 1 
148 2 25 6 293 2 73 1 219 1 95 1 250 2 75 12 8 2 324 1 159 1 52 1 239 1 199 2 304 1 282 6 127 1 345 2 59 1 310 1 144 1 133 2 211 1 210 1 24 1 
239 1 25 3 293 2 282 3 309 1 75 6 8 1 133 1 351 1 211 1 288 1 
239 1 25 2 293 2 304 1 71 1 260 1 282 1 297 1 345 2 96 1 310 1 59 1 75 3 351 1 211 1 52 1 288 1 
239 2 25 4 293 3 282 4 309 1 175 1 75 8 8 2 133 2 351 1 211 1 288 1 
148 1 304 1 293 1 282 2 345 2 310 1 59 1 75 2 8 1 211 1 24 1 52 1 
239 1 148 1 199 1 25 2 293 2 304 1 282 2 345 2 310 1 59 1 250 1 75 4 8 1 133 1 211 1 24 1 52 1 
239 1 25 2 304 3 293 2 71 1 282 1 297 1 345 6 310 3 59 3 152 1 75 3 351 1 211 1 24 1 52 3 288 1 
91 1 148 3 25 18 293 12 71 2 136 1 95 1 297 1 96 1 250 3 152 1 75 34 8 5 324 3 52 5 54 1 239 7 55 1 199 3 281 1 304 5 260 1 282 16 309 2 345 10 59 5 310 5 144 4 133 5 351 3 267 1 211 5 24 1 288 3 
25 4 293 2 73 1 95 1 96 1 75 8 8 1 324 1 52 1 239 2 281 1 304 1 260 1 282 4 345 2 309 1 59 1 310 1 144 1 133 1 351 1 24 1 288 1 
148 1 25 5 293 3 136 1 73 1 95 1 96 1 250 1 75 11 8 2 324 1 52 2 239 2 281 1 304 2 260 1 282 6 309 1 345 4 59 2 310 2 144 2 133 1 351 1 267 1 211 1 24 1 288 1 
148 2 25 10 293 4 71 1 73 1 219 1 95 1 96 1 250 2 75 19 8 3 159 1 324 1 52 3 239 3 199 2 281 1 304 3 260 1 282 9 127 1 309 1 345 6 59 3 310 3 144 1 133 3 351 1 267 1 211 1 210 1 24 1 288 1 
148 2 25 7 293 5 71 1 73 1 219 1 95 1 96 1 250 2 75 17 8 3 324 1 159 1 52 3 239 3 199 1 281 1 304 3 260 1 282 10 127 1 309 1 345 6 59 3 310 3 144 1 133 2 351 1 267 1 211 2 210 1 24 1 288 1 
25 4 293 2 73 1 95 1 96 1 75 8 8 1 324 1 52 1 239 2 281 1 304 1 260 1 282 4 345 2 309 1 59 1 310 1 144 1 133 1 351 1 24 1 288 1 
148 2 25 6 293 2 73 1 219 1 95 1 250 2 75 12 8 2 324 1 159 1 52 1 239 1 199 2 304 1 282 6 127 1 345 2 59 1 310 1 144 1 133 2 211 1 210 1 24 1 
148 2 25 8 293 5 71 2 73 1 219 1 95 1 96 1 250 2 75 18 8 3 159 1 324 1 52 4 239 3 199 1 281 1 304 4 260 1 282 10 127 1 309 1 345 8 59 4 310 4 144 1 133 2 351 1 267 1 211 2 210 1 24 1 288 1 
148 3 25 7 293 6 71 2 73 1 219 1 95 1 250 3 152 1 75 16 8 3 159 1 324 1 52 4 239 3 199 2 304 4 282 9 127 1 345 8 59 4 310 4 144 1 133 2 211 3 210 1 24 1 
239 3 25 4 293 6 260 1 282 3 309 1 96 2 75 7 8 1 133 1 351 3 211 3 288 3 
148 2 25 8 293 4 71 2 73 1 219 1 95 1 96 1 250 2 152 1 75 18 8 3 159 1 324 1 52 4 239 3 199 1 281 1 304 4 260 1 282 10 127 1 309 1 345 8 59 4 310 4 144 1 133 2 351 1 211 1 210 1 24 1 288 1 
316 1 180 1 38 1 283 1 
166 1 238 1 130 1 316 1 180 1 38 1 283 1 326 1 28 1 
122 1 147 1 131 1 209 1 104 1 312 1 254 1 336 1 161 1 247 1 212 1 
122 1 147 1 216 1 94 1 35 1 247 1 38 1 141 1 29 2 131 1 209 1 89 1 312 1 22 1 336 1 161 1 277 1 135 2 
147 2 216 1 94 1 247 1 234 1 29 2 76 1 161 1 277 2 122 1 258 1 35 1 38 2 284 1 141 2 131 2 209 1 350 1 22 1 312 1 89 1 313 2 135 2 
147 2 216 1 94 1 247 1 234 1 29 2 76 1 300 1 161 1 277 2 122 1 258 1 35 1 38 2 284 1 141 2 131 2 209 1 350 1 312 1 89 1 313 2 135 2 
147 3 270 1 92 1 247 1 74 1 29 1 76 1 9 1 158 1 77 1 161 1 222 1 277 1 327 1 122 1 278 1 337 1 258 1 173 1 35 1 38 1 263 1 141 1 131 1 209 1 63 2 330 1 312 1 23 2 313 1 135 1 
147 3 270 1 92 1 72 1 247 1 74 1 29 1 76 1 9 1 158 1 161 1 77 1 222 1 277 1 327 1 122 1 278 1 337 1 258 1 173 1 35 1 38 1 141 1 131 1 209 1 63 2 312 1 23 2 313 1 135 1 
122 1 207 1 209 1 312 1 161 1 247 1 
122 3 214 1 147 3 171 1 201 1 247 6 141 1 334 1 131 2 207 1 209 2 312 7 323 1 42 1 336 2 161 7 78 1 121 1 45 1 164 1 224 1 
147 1 269 1 216 2 25 3 187 1 293 2 94 1 189 1 247 1 96 1 153 1 29 2 75 6 8 1 161 1 195 2 52 2 277 1 164 1 122 1 79 1 239 2 281 1 304 2 260 1 282 3 35 1 38 1 202 1 309 1 141 1 345 4 310 2 59 2 131 1 230 2 209 1 133 1 89 1 312 1 331 1 22 1 351 1 353 1 288 1 46 1 135 2 
147 2 270 1 292 1 92 1 72 1 247 1 233 1 296 2 74 2 154 1 6 2 156 2 9 1 336 1 161 1 196 2 237 1 225 1 337 1 173 1 264 1 348 1 63 3 21 1 312 1 23 3 311 1 183 1 
122 2 147 2 173 1 247 2 36 1 141 1 131 1 207 1 209 1 312 2 323 1 161 2 164 1 
122 1 147 1 131 1 103 1 209 1 312 4 254 1 336 1 161 4 247 4 212 1 164 1 100 1 
122 2 147 1 258 1 26 1 247 2 141 1 131 1 176 1 209 1 235 1 312 2 161 2 78 1 224 1 
122 1 291 1 299 1 209 1 312 1 66 1 336 1 161 1 247 1 58 1 
122 1 147 1 201 1 247 2 131 1 209 1 138 1 312 2 42 1 161 2 164 1 
122 2 147 3 258 1 201 1 247 4 131 2 209 2 312 5 254 1 336 1 161 5 212 1 121 1 164 1 45 1 100 1 
122 2 147 3 258 1 201 1 247 4 19 1 131 2 209 2 312 5 254 1 336 1 161 5 212 1 121 1 164 1 100 1 
122 1 147 1 216 1 94 1 35 1 247 1 38 1 141 1 29 2 131 1 300 1 209 1 89 1 312 1 336 1 161 1 277 1 135 2 
122 2 147 1 258 1 171 1 247 1 141 1 131 1 209 1 312 1 323 1 161 1 78 1 224 1 
18 1 216 1 182 1 294 1 145 1 
18 1 244 1 63 1 150 1 23 1 182 1 294 1 185 1 145 1 237 1 221 1 47 1 
140 1 294 1 38 1 343 1 18 1 29 1 107 1 145 1 135 1 
18 1 244 1 185 1 
17 1 119 1 104 1 204 1 
17 1 280 1 179 1 27 1 119 1 99 1 204 1 
280 1 149 1 298 1 
17 1 213 1 280 3 179 1 27 1 119 1 261 2 41 1 352 1 99 3 249 1 204 1 
17 1 280 2 179 1 27 1 88 1 119 1 302 1 99 2 204 1 
280 1 291 1 27 1 241 1 58 1 249 1 204 1 179 1 160 1 99 1 44 1 
17 1 280 1 179 1 27 1 99 1 249 1 204 1 
17 2 280 1 179 1 27 1 119 1 99 1 249 1 
197 1 280 2 27 2 249 1 204 1 17 1 179 2 243 1 99 2 301 1 
280 3 27 1 3 1 249 1 204 2 17 1 137 1 179 1 132 1 88 2 119 1 99 3 44 1 
280 2 291 2 215 1 27 1 305 1 58 1 249 1 204 1 17 1 179 1 88 1 119 1 66 1 160 1 99 2 
280 4 172 1 27 2 249 1 204 2 17 1 137 1 179 2 88 2 119 1 99 4 302 1 44 1 
17 1 280 1 179 1 27 1 119 1 99 1 249 1 204 1 
213 1 280 4 27 1 261 1 204 3 17 2 137 1 179 1 88 2 41 1 119 2 99 4 44 1 165 1 
280 1 338 1 27 1 106 1 249 1 17 1 179 1 119 1 99 1 223 1 165 1 
213 2 280 3 27 1 261 2 249 1 204 1 17 1 179 1 41 1 119 1 99 3 146 1 
143 1 342 1 308 2 204 2 
280 1 179 1 27 1 287 1 99 1 249 1 
17 1 280 2 179 1 27 1 88 1 119 1 3 1 99 2 249 1 204 1 
194 1 
17 1 280 1 179 1 27 1 119 1 99 1 249 1 204 1 
17 1 280 3 179 1 27 1 88 1 119 1 261 1 3 1 99 3 249 1 204 1 
137 1 44 1 165 1 204 1 
17 1 204 1 

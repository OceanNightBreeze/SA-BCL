#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 71 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (40,146,241) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (40,146,241) 232 145 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (40,146,241) 232 114 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 81 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 213 119 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 86 209 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (40,146,241) (40,146,241) 68 224 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 28 229 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 71 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 298 (39,253) 291 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 168 53 79 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (218,228) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 89 171 (37,311) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 89 171 (51,313) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (51,313) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (37,311) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (40,146,241) 232 106 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 9 83 1 42 1 0 4 127 2 287 1 251 1 45 1 133 1 293 2 223 3 226 1 62 2 230 2 103 1 18 1 105 2 269 5 273 6 189 1 275 1 115 1 156 1 31 9 282 1 204 2 76 2 320 1 
122 9 83 1 42 1 0 4 127 2 287 1 251 1 45 1 133 1 293 2 223 3 226 1 62 2 230 2 103 1 18 1 105 2 269 5 273 6 189 1 275 1 115 1 156 1 31 9 282 1 204 2 320 1 76 2 
122 10 83 1 42 1 0 5 127 2 287 1 251 1 45 1 133 1 293 2 223 4 226 1 62 2 230 2 103 1 18 1 105 2 269 6 273 7 189 1 275 1 115 1 156 1 31 10 282 1 204 2 320 1 76 2 
122 7 83 1 42 1 0 3 127 2 287 1 251 1 45 1 133 1 293 2 223 2 226 1 62 2 230 2 103 1 18 1 105 2 269 4 273 4 189 1 115 1 156 1 31 7 282 1 204 2 320 1 76 1 
103 1 122 4 83 1 42 1 105 1 0 2 269 3 273 3 189 1 275 1 293 1 223 1 31 4 226 1 204 1 76 2 230 1 62 1 
103 1 122 2 83 1 105 1 269 1 127 1 95 1 69 1 133 1 293 1 31 2 156 1 226 1 176 1 230 1 62 1 
103 1 122 3 83 1 269 2 0 1 223 1 31 3 127 1 282 1 226 1 273 1 62 2 230 2 
122 9 83 1 42 1 0 4 127 1 90 1 287 1 251 1 293 1 223 3 226 1 62 2 230 2 103 1 105 1 269 5 152 1 273 7 189 1 275 1 31 9 282 1 204 1 76 2 
122 9 83 1 42 1 0 4 127 1 90 1 287 1 251 1 293 1 223 3 226 1 62 2 230 2 103 1 105 1 269 5 152 1 273 7 189 1 275 1 31 9 282 1 204 1 76 2 
71 1 
146 1 104 1 279 1 55 1 241 1 22 1 210 1 192 1 97 1 
146 1 52 1 104 1 279 1 55 1 149 1 22 1 210 1 192 1 61 1 
294 1 40 1 227 1 
294 1 40 1 227 1 
294 1 40 1 
294 1 40 1 227 1 
294 1 40 1 227 1 
206 1 294 2 40 2 278 1 73 1 10 1 227 1 
163 1 124 1 94 1 212 1 259 1 171 1 56 2 99 1 140 2 12 1 13 1 141 1 101 1 60 1 61 1 149 1 22 2 192 1 311 1 315 1 279 2 35 2 77 1 
71 1 170 1 
149 1 22 2 252 1 309 1 192 2 52 1 279 2 170 1 55 1 264 1 61 1 
8 1 300 1 12 1 
124 1 22 1 212 1 312 1 311 1 315 1 170 1 279 1 259 1 171 1 56 1 99 1 140 1 35 1 60 1 77 1 
149 3 22 3 192 3 52 1 279 3 170 1 55 1 264 1 101 1 61 3 
279 1 55 1 149 1 22 1 175 1 192 1 61 1 
149 1 22 1 252 1 309 1 192 1 52 1 279 1 55 1 61 1 
145 1 146 1 232 1 104 1 149 2 22 2 94 1 252 1 210 1 192 2 52 1 279 2 55 1 101 1 61 2 
170 1 279 2 149 1 22 2 159 1 101 1 192 2 61 1 97 1 
146 1 232 1 104 1 114 1 279 1 55 1 149 1 22 1 94 1 210 1 101 1 192 1 61 1 
300 1 149 2 22 2 252 1 192 2 52 1 279 2 12 1 101 1 61 2 
124 1 22 1 212 1 311 1 315 1 170 1 279 1 259 1 171 1 56 1 99 1 140 1 35 1 60 1 77 1 
124 1 307 1 22 1 212 1 51 1 315 1 170 1 279 1 259 1 171 1 56 1 140 1 35 1 60 1 77 1 
43 1 6 1 165 1 167 2 258 1 8 2 222 2 265 1 12 2 59 1 297 1 300 2 299 1 26 1 188 1 310 1 70 1 113 2 277 1 316 1 242 4 75 1 203 1 319 1 
148 1 104 1 279 1 55 1 149 1 22 1 192 1 61 1 
149 2 22 2 252 1 192 2 52 1 279 2 170 1 55 1 264 1 101 1 61 2 
148 1 279 2 55 1 149 2 22 2 175 1 192 2 61 2 
196 1 198 1 
196 1 198 1 
41 1 57 1 
41 1 57 1 
41 1 57 1 
196 1 198 1 292 1 
196 1 198 1 164 1 
196 2 198 2 41 1 92 1 57 1 143 1 
196 1 198 1 292 1 
196 1 198 1 292 1 
196 1 63 1 198 1 
196 1 63 1 198 1 
196 1 63 1 198 1 
40 2 208 1 306 2 235 1 130 1 110 2 27 1 216 2 196 2 198 2 199 2 294 2 261 2 244 1 
40 1 306 1 149 1 22 1 27 1 110 1 192 1 28 1 216 1 196 1 198 1 199 1 294 1 279 1 261 1 61 1 
293 1 105 1 204 1 
293 1 105 1 95 1 
200 1 105 3 91 1 263 1 204 2 95 1 
105 2 91 1 263 1 204 1 95 1 166 1 
105 2 91 2 263 1 204 1 95 1 
294 1 40 1 227 1 178 1 
81 1 294 2 40 2 23 1 227 2 248 1 
206 1 40 2 84 1 126 1 213 1 294 2 136 1 278 1 73 1 10 1 227 1 144 1 
206 1 84 1 40 1 126 1 213 1 294 1 136 1 278 1 73 1 10 1 119 1 144 1 
71 1 124 1 280 1 
124 1 111 1 
262 1 
124 1 77 1 
197 1 315 1 280 2 124 3 172 1 77 1 
315 1 124 1 77 1 
124 1 161 1 
268 1 297 2 180 1 128 1 21 1 154 1 188 3 167 3 193 1 254 1 134 2 113 2 201 1 242 5 265 1 58 1 319 1 
268 1 297 2 180 1 128 1 21 1 154 1 188 3 167 3 193 1 254 1 134 2 113 2 201 1 242 5 265 1 58 1 319 1 
268 1 297 2 180 1 128 1 21 1 154 1 188 3 167 3 193 1 254 1 134 2 113 2 201 1 242 5 265 1 58 1 319 1 266 1 
43 1 128 1 48 1 167 3 168 1 134 1 254 1 53 1 222 2 137 1 268 1 297 1 64 1 180 2 153 1 154 1 188 2 193 1 113 3 277 1 316 1 242 6 75 1 205 1 
43 2 128 1 48 1 167 4 134 2 254 1 222 4 265 1 58 1 268 1 297 3 180 1 236 1 21 1 188 4 193 1 113 3 277 2 316 2 201 1 242 7 158 1 75 2 319 1 
285 1 122 2 83 1 127 1 95 1 211 1 293 1 259 1 56 1 226 1 140 1 60 1 62 1 230 1 103 1 233 1 66 1 105 2 269 1 273 1 67 1 186 1 194 1 29 1 72 1 200 1 31 2 243 1 204 1 35 1 
285 1 122 3 83 1 127 1 95 1 211 1 293 1 259 1 56 1 226 1 140 1 14 1 60 1 62 1 230 1 233 1 66 1 105 2 269 1 109 1 272 1 273 2 67 1 186 1 194 1 200 1 31 3 243 1 204 1 35 1 
285 1 122 2 83 1 127 1 95 1 211 1 293 1 259 1 56 1 226 1 140 1 60 1 66 1 105 2 269 1 109 1 272 1 273 2 67 1 186 1 200 1 31 2 243 1 35 1 204 1 
122 1 162 1 82 1 124 1 127 2 289 1 212 1 259 1 173 1 56 1 140 1 60 1 14 1 62 1 230 1 66 2 186 2 31 1 32 1 243 2 35 1 77 1 80 1 
285 1 122 1 127 1 95 1 211 1 293 1 259 1 56 1 140 1 60 1 62 1 230 1 103 1 233 1 66 1 105 2 109 1 67 1 186 1 194 1 72 1 200 1 31 1 243 1 204 1 35 1 
238 1 
206 1 40 1 86 1 126 1 209 1 212 1 256 1 294 1 136 1 278 1 56 1 10 1 140 1 35 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
294 1 40 1 
206 1 146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 256 1 239 1 294 1 314 1 279 1 278 1 55 1 241 1 224 1 10 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 239 1 294 1 314 1 279 1 55 1 241 1 224 1 
206 1 146 1 40 1 104 1 22 1 210 1 68 1 192 1 97 1 256 1 239 1 294 1 314 1 279 1 278 1 55 1 241 1 224 1 10 1 
43 1 128 1 165 1 167 2 134 1 258 1 8 1 170 1 222 2 12 1 58 1 265 1 59 1 268 1 297 2 300 1 21 1 188 2 71 1 113 2 277 1 316 1 201 1 242 4 75 1 319 1 
249 1 43 2 286 1 288 1 46 1 6 1 49 1 167 7 168 2 258 2 8 6 170 1 217 1 55 1 222 4 137 2 225 2 264 1 12 6 265 2 59 1 297 1 300 2 188 1 113 5 277 2 316 2 242 12 75 2 74 1 203 2 319 1 38 1 
249 1 124 1 85 1 123 1 43 1 94 1 212 1 167 1 258 1 170 1 171 1 259 1 217 1 222 2 56 1 99 1 140 1 59 1 60 1 101 1 61 1 300 1 149 1 22 2 308 1 192 1 311 1 312 1 315 1 113 1 277 1 279 2 316 1 242 2 75 1 35 1 77 1 38 1 
249 1 88 1 94 1 6 2 167 9 258 3 8 7 170 1 259 2 171 2 9 1 99 2 12 7 265 3 101 1 268 1 21 1 22 3 109 1 184 2 188 10 192 1 193 4 113 9 279 3 277 3 201 1 203 2 35 3 284 2 38 1 39 2 124 2 43 3 128 1 212 1 134 1 217 1 220 2 295 1 222 6 56 3 225 2 140 3 58 1 59 3 60 2 61 1 297 6 300 7 149 1 311 2 315 2 316 3 242 18 75 3 319 3 77 2 321 2 
249 1 163 2 82 1 124 3 43 2 165 1 47 1 212 2 167 1 258 2 259 2 222 4 56 8 140 7 59 2 101 1 60 2 15 1 61 1 231 1 303 1 270 1 149 1 22 1 108 1 109 1 192 1 113 1 29 1 279 1 277 2 316 2 242 2 32 1 117 1 75 2 35 8 77 2 38 1 
43 1 252 1 6 1 167 1 52 1 8 1 258 1 217 1 222 2 225 1 12 1 265 1 59 1 61 1 297 1 300 1 149 1 22 1 188 1 192 1 113 2 277 1 279 1 316 1 240 1 242 3 75 1 203 1 319 1 
300 1 43 1 165 1 26 1 188 1 167 2 193 1 8 1 258 1 277 1 316 1 222 2 242 2 75 1 203 1 12 1 265 1 59 1 
297 1 300 1 43 1 6 1 165 1 188 1 70 1 8 1 258 1 113 2 277 1 316 1 222 2 242 2 75 1 12 1 59 1 319 1 
43 1 6 1 165 1 167 2 258 1 8 2 222 2 225 1 265 1 12 2 59 1 297 1 300 2 188 2 193 1 113 2 277 1 316 1 242 4 203 1 75 1 319 1 
300 1 43 1 108 1 26 1 188 1 167 2 193 1 8 1 258 1 277 1 316 1 222 2 242 2 75 1 203 1 12 1 265 1 59 1 
297 1 300 1 43 1 108 1 6 1 188 1 70 1 8 1 258 1 113 2 277 1 316 1 222 2 242 2 75 1 12 1 59 1 319 1 
43 1 6 1 167 2 258 1 8 2 222 2 225 1 265 1 12 2 59 1 297 1 300 2 108 1 188 2 193 1 113 2 277 1 316 1 242 4 203 1 75 1 319 1 
43 1 6 1 167 2 258 1 8 2 222 2 225 1 265 1 12 2 59 1 297 1 300 2 188 2 193 1 113 2 277 1 316 1 242 4 203 1 75 1 319 1 
249 1 124 1 43 1 167 1 212 1 258 1 170 1 171 1 259 1 222 2 56 1 99 1 140 1 59 1 60 1 22 1 184 1 311 1 315 1 113 1 279 1 277 1 316 1 242 2 75 1 35 1 77 1 38 1 
249 1 124 1 43 1 167 1 212 1 51 1 258 1 170 1 171 1 259 1 222 2 56 1 140 1 59 1 60 1 307 1 22 1 191 1 315 1 113 1 279 1 277 1 316 1 242 2 75 1 35 1 77 1 38 1 
43 1 6 1 167 2 258 1 8 2 217 1 222 2 225 1 265 1 12 2 59 1 297 1 300 2 188 2 193 1 113 2 277 1 316 1 242 4 203 1 75 1 319 1 
124 1 43 1 6 1 167 2 8 2 258 1 171 1 259 1 222 2 56 1 99 1 225 1 140 1 12 2 265 1 59 1 60 1 297 1 300 2 22 1 184 1 188 2 193 1 311 1 113 2 315 1 29 1 279 1 277 1 316 1 242 4 203 1 75 1 35 1 319 1 284 1 77 1 
43 1 6 1 252 1 167 2 52 1 258 1 8 1 217 1 260 1 222 2 225 1 265 1 12 1 59 1 61 1 300 1 149 1 22 1 188 1 192 1 193 1 113 1 277 1 279 1 316 1 242 3 75 1 203 1 319 1 
121 1 87 1 43 3 2 1 3 1 128 1 129 1 6 4 48 1 96 1 167 19 131 4 168 3 134 1 53 3 222 6 137 4 174 1 225 4 58 1 265 5 102 1 268 1 297 4 302 1 19 1 236 1 21 1 107 2 155 1 188 7 193 3 113 20 277 3 316 3 201 1 242 39 157 1 75 3 74 1 203 4 319 5 79 1 
121 1 87 1 43 4 2 1 3 1 128 1 129 1 6 3 48 2 96 1 167 19 131 4 168 3 134 1 53 3 222 8 137 4 174 1 225 4 58 1 265 5 102 1 268 1 297 4 302 1 19 1 236 1 21 1 107 2 155 1 188 6 193 2 113 17 277 4 316 4 201 1 242 36 157 1 75 4 74 1 203 4 319 4 79 1 
121 1 87 1 43 2 286 1 2 1 128 3 129 1 6 5 48 1 96 1 131 4 167 25 168 3 134 3 53 2 222 4 137 3 174 1 225 5 58 3 265 8 268 3 297 7 302 1 19 1 236 1 21 3 107 1 155 1 188 12 193 5 113 21 277 2 316 2 201 3 242 46 157 1 75 2 74 1 203 5 319 8 79 1 
87 1 43 2 129 1 6 2 96 1 167 9 131 3 168 2 53 2 222 4 137 3 225 2 265 2 102 1 297 1 302 1 19 1 236 1 107 1 185 1 188 1 113 10 277 2 316 2 242 19 75 2 74 1 203 2 319 2 79 1 
121 1 87 1 43 3 2 1 129 2 6 2 48 2 96 1 131 4 167 14 168 2 53 2 222 6 137 2 174 1 225 3 265 3 297 2 302 1 19 1 236 1 107 2 155 1 188 4 193 2 113 12 277 3 316 3 242 26 157 1 75 3 203 3 319 2 79 1 
196 1 216 1 198 1 98 1 306 1 261 1 92 1 11 1 25 1 110 1 
164 1 177 1 
16 1 196 1 216 1 198 1 306 1 261 1 34 1 24 1 110 1 
40 1 208 1 306 1 235 1 130 1 27 1 110 1 216 1 196 1 198 1 199 2 294 1 261 1 244 1 
40 1 208 1 306 1 235 1 130 1 27 1 110 1 216 1 196 1 198 1 199 2 294 1 261 1 244 1 
40 1 208 1 306 1 235 1 130 1 27 1 110 1 216 1 196 1 198 1 199 2 294 1 261 1 244 1 
147 1 143 1 292 1 
147 1 143 1 292 1 
63 1 234 1 
63 1 234 1 143 1 
7 1 142 1 
40 1 208 1 306 1 235 1 110 1 28 1 216 1 196 1 199 1 198 1 294 1 261 1 227 1 229 1 
147 1 292 1 
63 1 234 1 143 1 
249 1 163 2 124 1 43 1 250 1 1 1 47 1 167 1 258 1 259 1 217 1 54 1 222 2 56 2 140 2 59 1 60 1 267 1 270 1 271 1 22 2 192 2 113 1 279 2 277 1 316 1 242 2 75 1 35 2 77 1 38 1 
233 1 105 2 109 1 67 1 95 1 186 1 211 1 112 1 293 1 259 1 29 1 200 1 56 2 202 1 140 2 204 1 35 2 60 1 78 1 
233 1 105 2 109 1 67 1 95 1 186 1 211 1 112 1 293 1 259 1 30 1 200 1 56 1 140 1 204 1 35 1 60 1 
82 1 124 1 289 1 4 1 186 1 212 1 259 1 32 1 56 1 140 1 35 1 60 1 77 1 78 1 
233 1 105 2 109 1 67 1 95 1 186 1 211 1 112 1 293 1 259 1 200 1 56 1 202 1 140 1 204 1 35 1 60 1 78 1 
125 1 
71 1 218 1 183 1 228 1 
195 1 206 1 256 1 136 1 278 1 237 1 183 1 10 1 
206 1 298 1 124 2 126 1 291 1 212 1 253 1 111 1 256 1 315 1 136 1 259 1 278 1 172 1 56 1 317 1 10 1 140 1 35 1 60 2 77 1 
206 1 256 1 53 1 136 1 278 1 137 1 183 1 10 1 79 1 168 1 
206 1 268 1 40 1 128 1 183 2 257 1 256 1 294 1 136 1 278 1 201 1 10 1 118 1 265 2 100 1 245 2 319 1 
206 1 256 1 278 1 183 1 10 1 228 1 
136 1 183 1 225 1 6 1 203 1 265 1 319 1 
56 1 140 1 35 1 212 1 
169 1 206 1 256 1 136 1 278 1 126 1 183 1 10 1 
304 1 306 1 110 1 
296 1 306 1 25 1 110 1 142 1 
304 1 306 1 110 1 
304 1 306 1 110 1 
306 1 318 1 110 1 
306 1 318 1 110 1 
306 1 318 1 110 1 
306 1 110 1 
196 1 198 1 
121 1 43 2 2 1 128 2 6 1 48 1 167 12 168 1 134 1 53 1 222 4 137 1 225 2 174 1 100 1 58 1 265 5 268 2 297 5 236 1 21 1 188 9 155 1 193 4 113 8 277 2 316 2 201 2 242 20 75 2 203 2 319 4 79 1 
121 1 43 3 2 1 128 1 6 1 48 1 167 9 168 1 134 1 53 1 222 6 137 1 174 1 225 2 58 1 265 3 268 1 297 3 236 1 151 1 21 1 188 4 155 1 193 1 113 6 277 3 316 3 201 1 242 15 75 3 203 2 319 2 79 1 
121 1 43 3 2 1 128 1 6 2 48 1 167 8 168 1 134 1 53 1 222 6 137 1 174 1 225 2 58 1 265 3 268 1 297 3 236 1 151 1 21 1 188 4 155 1 193 1 113 9 277 3 316 3 201 1 242 17 75 3 203 2 319 3 79 1 
121 1 43 3 2 1 128 1 6 1 48 1 167 9 168 1 134 1 53 1 222 6 137 1 225 2 174 1 58 1 265 3 268 1 297 3 236 1 151 1 21 1 188 5 155 1 193 2 113 6 277 3 316 3 201 1 242 15 75 3 203 2 319 2 79 1 
121 1 43 2 2 1 128 2 6 1 48 1 167 12 168 1 134 1 53 1 222 4 137 1 225 2 174 1 100 1 58 1 265 5 268 2 297 5 236 1 21 1 188 9 155 1 193 4 113 8 277 2 316 2 201 2 242 20 75 2 203 2 319 4 79 1 
121 1 43 1 2 1 6 2 167 6 168 1 53 1 222 2 137 1 225 2 174 1 265 2 297 1 236 1 188 2 155 1 193 1 113 6 277 1 316 1 242 12 75 1 203 2 319 2 79 1 
121 1 43 4 2 1 128 1 6 1 48 2 167 9 168 1 134 1 53 1 222 8 137 1 174 1 225 2 58 1 265 3 268 1 297 3 236 1 151 1 21 1 155 1 188 5 193 2 113 7 277 4 316 4 201 1 242 16 75 4 203 2 319 2 79 1 
121 1 43 4 2 1 6 2 48 2 167 9 168 1 53 1 222 8 137 1 174 1 225 3 265 3 102 1 297 3 236 1 155 1 188 6 193 3 113 7 277 4 316 4 242 16 75 4 203 3 319 2 79 1 
268 2 297 4 128 2 21 1 188 7 167 5 134 1 193 3 113 4 201 2 242 9 100 1 58 1 265 3 319 3 
121 1 43 4 2 1 128 1 6 1 48 2 167 9 168 1 134 1 53 1 222 8 137 1 174 1 225 2 58 1 265 3 102 1 268 1 297 3 236 1 21 1 155 1 188 4 193 1 113 7 277 4 316 4 201 1 242 16 75 4 203 2 319 2 79 1 
268 1 297 2 43 2 128 1 21 1 48 1 167 3 188 3 134 1 193 1 113 3 277 2 316 2 201 1 222 4 242 6 75 2 265 1 58 1 319 1 
268 1 297 2 128 1 21 1 188 2 167 2 134 1 113 2 71 1 201 1 242 4 58 1 265 1 319 1 
297 1 43 1 151 1 6 1 188 2 167 2 193 1 113 2 277 1 316 1 222 2 242 4 225 1 75 1 203 1 265 1 319 1 
53 1 113 1 242 2 137 1 167 1 168 1 
43 1 286 1 128 2 6 2 46 1 48 1 167 11 168 2 134 1 222 2 137 2 225 2 100 1 58 1 265 5 268 2 297 5 21 1 188 7 193 2 113 11 277 1 316 1 201 2 242 22 203 2 74 1 75 1 319 5 
113 1 242 1 137 1 
242 1 167 1 168 1 
297 1 43 1 151 1 6 1 167 3 188 2 193 1 113 3 277 1 220 1 316 1 222 2 242 6 225 1 75 1 203 1 265 1 319 1 
121 1 43 1 2 1 6 2 167 6 168 1 53 1 222 2 137 1 225 2 174 1 265 2 297 1 236 1 188 2 155 1 193 1 113 6 277 1 316 1 242 12 75 1 203 2 319 2 79 1 
113 1 201 1 242 2 265 1 319 1 167 1 
268 1 297 1 43 1 128 1 21 1 153 1 48 1 167 1 188 2 193 1 113 2 277 1 316 1 222 2 242 3 75 1 58 1 
268 1 297 2 43 1 236 1 128 1 188 4 167 4 193 2 113 4 277 1 316 1 222 2 201 1 242 8 75 1 100 1 265 2 319 2 
43 1 236 1 167 2 188 1 193 1 277 1 316 1 222 2 242 2 75 1 203 1 265 1 
297 1 43 1 236 1 6 1 188 2 167 2 193 1 113 2 277 1 316 1 222 2 242 4 225 1 75 1 203 1 265 1 319 1 
268 1 297 1 43 3 236 1 128 1 153 1 48 1 188 2 167 1 193 1 113 2 277 3 316 3 222 6 242 3 75 3 102 1 
43 4 128 2 48 1 167 6 168 1 53 1 222 8 137 1 265 2 100 1 58 1 102 1 268 2 297 3 64 1 236 1 151 1 21 1 153 1 188 6 193 3 113 7 277 4 316 4 201 1 242 13 75 4 319 2 
170 1 279 1 138 1 22 1 159 1 192 1 97 1 
22 1 274 1 192 1 97 1 255 1 170 1 279 1 221 1 116 1 138 1 159 1 36 1 
82 1 71 1 259 1 124 1 32 1 56 1 140 1 35 1 60 1 77 1 212 1 
124 1 149 1 22 2 212 1 192 1 311 1 315 1 170 1 171 1 279 2 259 1 56 1 140 1 35 1 77 1 60 1 101 1 61 1 
104 1 124 3 89 1 149 1 22 1 210 1 192 1 311 1 315 2 171 1 279 1 259 1 55 1 33 1 56 1 140 1 35 1 77 2 60 1 101 1 161 1 61 1 
104 1 124 3 89 1 149 1 22 1 210 1 192 1 51 1 315 2 171 1 279 1 259 1 55 1 33 1 56 1 140 1 35 1 77 2 60 1 101 1 161 1 61 1 
313 1 294 1 40 1 124 1 33 1 56 1 140 1 35 1 111 1 
294 1 40 1 124 1 33 1 56 1 140 1 35 1 111 1 37 1 
259 1 56 1 140 1 35 1 60 1 15 1 
124 1 290 1 212 1 214 1 315 1 259 1 172 1 56 1 140 1 35 1 246 1 77 1 60 2 
39 1 124 1 43 2 1 1 128 1 167 2 134 1 8 1 258 2 170 1 171 1 259 1 217 1 222 4 56 1 99 1 140 1 12 1 265 1 58 1 59 2 60 1 101 1 61 1 268 1 297 2 300 1 149 1 21 1 22 2 184 1 188 2 192 1 311 1 113 2 315 1 277 2 279 2 29 1 316 2 201 1 242 4 75 2 35 1 319 1 77 1 284 1 
294 1 40 1 227 1 
124 2 315 1 29 1 259 1 280 1 172 1 56 2 317 1 140 2 35 2 77 1 60 2 15 1 
82 1 207 1 124 1 181 1 212 1 29 1 259 1 32 1 56 4 140 4 35 4 60 1 77 1 
124 1 88 1 150 1 290 1 132 1 214 1 315 1 259 1 56 1 140 1 35 1 77 1 60 2 
293 1 259 1 105 1 56 1 140 1 67 1 35 1 95 1 60 1 212 1 
124 1 271 1 270 1 109 1 29 1 259 1 56 2 140 2 35 2 77 1 60 1 
231 1 82 1 124 3 181 1 270 1 212 1 29 1 259 2 33 1 32 1 56 5 117 1 140 4 35 5 77 2 60 2 
231 1 82 1 124 3 181 1 270 1 212 1 50 1 29 1 259 2 33 1 32 1 56 5 140 4 35 5 77 2 60 2 
124 1 149 1 22 2 212 1 192 1 51 1 315 1 170 1 171 1 279 2 259 1 56 1 140 1 35 1 77 1 60 1 101 1 61 1 
124 1 290 1 214 1 315 1 259 1 172 1 33 1 56 1 140 1 35 1 246 1 77 1 60 2 
276 1 170 1 65 1 305 1 283 1 
120 1 146 1 40 1 232 1 104 1 65 1 305 1 106 1 93 1 210 1 276 1 294 1 55 1 227 1 283 1 
305 1 250 1 22 1 192 1 276 1 279 1 54 1 283 1 267 1 
120 1 276 1 106 1 
83 1 71 1 269 1 226 1 
122 1 83 1 269 1 31 1 226 1 62 1 230 1 
31 1 127 1 243 1 
103 1 122 3 17 1 83 1 269 1 133 2 215 1 31 3 160 1 226 1 230 1 62 1 
122 2 83 1 269 1 31 2 226 1 273 1 76 1 62 1 230 1 
103 1 122 1 293 1 42 1 105 1 269 1 0 1 31 1 204 1 62 1 230 1 
103 1 122 1 83 1 269 1 31 1 62 1 230 1 
103 1 122 1 83 2 31 1 226 1 62 1 230 1 
103 1 122 2 83 1 301 1 269 1 5 1 187 1 31 2 230 2 62 2 
103 1 122 3 83 1 0 1 269 2 287 1 251 1 273 2 31 3 223 1 226 1 230 1 62 1 
103 1 122 2 83 1 105 2 269 1 273 1 95 1 293 1 200 1 31 2 226 1 204 1 247 1 230 1 62 1 
275 1 103 1 122 4 83 1 269 2 0 1 223 1 31 4 226 1 273 2 76 1 62 2 230 2 
103 1 122 1 83 1 269 1 31 1 226 1 62 1 230 1 
122 4 17 1 83 2 0 1 269 3 273 2 133 1 215 1 31 4 223 1 281 1 226 2 230 1 62 1 
103 1 122 2 83 1 269 1 152 1 273 1 219 1 31 2 139 1 226 1 230 1 62 1 
103 1 122 3 17 1 83 1 269 1 133 2 215 2 135 1 31 3 226 1 230 1 62 1 
269 2 182 1 20 1 190 2 
103 1 122 1 31 1 44 1 62 1 230 1 
103 1 122 2 83 1 269 1 31 2 251 1 226 1 273 1 62 1 230 1 
179 1 
103 1 122 1 83 1 269 1 31 1 226 1 62 1 230 1 
103 1 122 3 83 1 269 1 31 3 251 1 226 1 273 1 62 1 230 1 133 1 
269 1 0 1 223 1 281 1 
83 1 269 1 

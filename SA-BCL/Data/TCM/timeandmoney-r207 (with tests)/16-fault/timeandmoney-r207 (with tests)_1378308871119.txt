#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (26,168) 256 (98,123) (98,123) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (26,168) 256 (98,123) (98,123) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (26,168) 256 (98,123) (98,123) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (26,168) 256 (98,123) (98,123) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (26,168) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (26,168) 328 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (26,168) 328 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 17 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 122 330 246 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 232 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 122 330 246 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 685 | return null
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1284 | != -> <
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 1 98 1 286 1 256 1 327 1 26 1 300 1 11 1 176 1 352 1 260 1 
123 1 98 1 286 1 256 1 327 1 26 1 300 1 11 1 176 1 352 1 260 1 
123 1 98 1 286 1 256 1 327 1 26 1 300 1 11 1 176 1 352 1 260 1 
123 1 98 1 286 1 256 1 327 1 26 1 300 1 11 1 176 1 352 1 260 1 
269 1 286 4 338 1 230 3 0 1 241 3 52 2 352 1 205 1 321 1 208 1 58 1 300 4 276 1 176 1 11 1 336 2 93 1 
269 1 286 2 0 1 241 1 327 1 278 1 352 1 115 1 279 1 39 1 321 1 58 1 300 2 176 1 11 1 260 1 
286 1 168 1 300 1 11 1 176 1 352 1 
230 1 286 2 168 1 217 1 328 1 300 2 11 1 176 1 352 1 
230 1 286 2 168 1 217 1 328 1 300 2 11 1 176 1 352 1 
281 1 304 1 359 1 
281 1 210 1 81 2 
186 1 234 1 354 2 227 2 318 2 163 2 30 2 33 2 
60 1 326 1 350 1 243 1 86 2 223 1 172 2 142 1 354 3 88 1 226 1 227 2 358 2 174 1 30 2 147 1 33 3 252 1 150 1 272 1 316 1 318 2 367 1 53 1 73 1 342 2 54 1 55 1 74 2 291 1 186 1 234 1 133 1 190 1 163 2 19 1 212 1 
234 1 56 1 354 1 41 1 227 1 318 1 163 1 310 1 30 1 33 1 
262 1 231 1 304 1 49 1 274 1 281 1 354 1 119 1 41 1 89 1 227 1 362 1 33 1 92 1 
262 1 231 2 304 1 49 2 318 1 274 1 281 1 354 1 119 1 41 1 89 1 163 1 227 1 30 1 33 1 
196 1 160 1 231 1 370 1 49 1 
281 1 196 1 9 1 231 2 76 1 304 1 370 1 49 2 
231 1 370 1 49 1 
231 1 49 1 318 1 196 1 234 1 56 1 354 1 41 1 163 1 227 1 310 1 42 1 30 1 33 1 
281 1 
281 1 196 1 231 2 76 1 304 1 370 1 25 1 49 2 
303 1 231 5 254 2 304 1 49 5 341 1 233 1 281 1 196 2 224 1 118 1 76 1 370 2 189 1 228 1 164 2 201 1 251 2 312 1 
150 1 270 1 350 1 154 1 316 1 243 1 318 1 54 1 342 1 142 1 172 1 354 2 356 1 88 1 174 1 163 1 227 1 358 1 212 1 33 2 
186 1 359 1 
318 1 75 1 186 2 296 1 354 2 227 2 163 1 30 1 33 2 
356 1 3 1 248 1 
150 1 253 1 350 1 316 1 243 1 54 1 342 1 172 1 142 1 186 1 354 1 88 1 358 1 174 1 212 1 33 1 
24 1 270 1 154 2 318 4 75 1 186 1 354 5 57 1 163 4 227 5 30 1 309 1 33 5 92 1 
354 2 41 1 227 2 318 2 163 2 310 1 33 2 170 1 
186 1 354 3 154 1 227 3 318 3 163 3 30 1 33 3 
354 1 41 1 227 1 318 1 163 1 310 1 33 1 
296 1 354 1 41 1 227 1 318 1 163 1 30 1 33 1 75 1 
215 1 60 1 262 1 326 1 350 1 305 1 243 1 86 1 223 1 142 1 172 1 354 4 88 1 119 1 89 1 174 1 227 3 358 1 30 2 147 1 33 4 252 1 150 1 231 1 270 1 154 1 272 1 316 1 318 3 49 1 53 1 73 1 54 1 342 1 74 2 274 1 75 1 186 1 234 1 133 1 41 1 190 1 163 3 212 1 
186 1 354 2 57 1 154 1 227 2 318 1 163 1 33 2 92 1 
231 1 262 1 270 1 154 2 305 1 49 1 318 3 15 1 75 1 274 1 281 1 354 3 41 1 119 1 89 1 163 3 227 3 30 1 33 3 
154 1 3 1 318 2 75 1 354 2 356 1 163 2 227 2 30 1 33 2 
150 1 350 1 316 1 243 1 54 1 342 1 172 1 142 1 186 1 354 1 88 1 358 1 174 1 212 1 33 1 
150 1 350 1 316 1 50 1 243 1 54 1 342 1 293 1 172 1 142 1 186 1 354 1 358 1 212 1 33 1 
109 1 60 1 326 2 3 2 84 1 6 1 223 1 86 4 87 1 356 2 248 2 46 1 45 1 125 1 182 1 70 1 272 1 53 1 73 1 74 2 298 1 190 1 19 2 258 1 
354 1 41 1 89 1 227 1 318 1 163 1 33 1 170 1 
339 1 185 1 
339 1 185 1 
37 1 169 1 
37 1 169 1 
37 1 169 1 
268 1 339 1 185 1 
339 1 333 1 185 1 
257 1 339 2 140 1 37 1 169 1 185 2 
268 1 339 1 185 1 
268 1 339 1 185 1 
339 1 32 1 185 1 
339 1 32 1 185 1 
339 1 32 1 185 1 
315 1 231 1 339 1 49 1 318 2 194 1 14 1 38 1 185 1 263 1 186 1 144 1 8 1 158 1 354 2 249 1 227 2 163 2 360 1 333 1 59 1 108 1 33 2 311 1 
337 1 261 1 68 2 124 1 231 2 339 2 49 2 14 2 194 1 185 2 263 3 281 1 158 2 257 1 44 1 59 2 311 2 121 1 214 1 
0 1 58 1 93 1 
0 1 58 1 279 1 
58 3 209 1 43 1 137 1 93 2 279 1 
71 1 58 2 43 1 137 1 93 1 279 1 
58 2 43 1 93 1 137 2 279 1 
192 1 1 1 84 1 281 2 196 4 249 1 334 1 201 3 251 1 254 1 49 5 341 2 56 1 297 2 298 1 163 1 210 1 164 1 301 2 109 1 23 2 304 1 63 1 354 1 228 1 227 1 30 1 310 1 229 1 33 1 231 5 125 1 36 1 318 1 234 1 76 1 41 1 370 1 42 1 81 3 
192 1 84 1 281 2 196 4 249 1 201 3 251 1 287 1 254 1 49 5 341 2 56 1 160 2 297 2 298 1 163 1 210 1 164 1 301 2 109 1 304 1 112 1 63 1 354 1 227 1 228 1 30 1 310 1 229 1 33 1 125 1 231 5 36 1 317 2 318 1 234 1 41 1 76 1 370 3 42 1 81 3 
192 1 109 1 23 1 304 1 1 1 84 1 63 1 281 2 196 2 354 1 227 1 249 1 310 1 30 1 229 1 334 1 201 3 33 1 251 1 312 1 125 1 231 3 254 1 318 1 49 3 341 2 234 1 56 1 297 2 41 1 298 1 163 1 210 1 42 1 164 1 301 2 81 3 
192 2 109 2 23 2 304 1 1 1 84 2 63 1 171 1 281 4 196 3 355 1 249 2 229 1 334 1 201 5 31 1 251 1 312 1 125 2 231 4 254 1 49 4 341 4 297 4 298 2 210 3 164 1 301 4 81 7 
159 1 243 1 359 1 
111 1 243 1 
106 1 
150 1 243 1 212 1 
243 1 141 1 
243 1 212 1 
150 1 151 1 243 2 159 2 212 1 106 1 179 1 
22 1 348 1 109 1 35 1 181 2 326 3 127 1 182 2 130 1 62 1 86 7 298 1 345 1 120 1 19 4 46 3 105 1 
22 1 348 1 109 1 35 1 181 2 326 3 127 1 182 2 130 1 62 1 86 7 298 1 345 1 120 1 19 4 46 3 105 1 
22 1 348 1 109 1 35 1 181 2 326 3 127 1 182 2 130 1 62 1 86 7 298 1 345 1 120 1 19 4 46 3 175 1 105 1 
348 2 181 1 326 1 271 1 161 1 72 1 17 1 120 1 19 2 157 1 86 3 
22 1 348 1 109 1 60 2 326 4 2 1 223 2 86 9 7 1 143 1 120 1 46 4 35 1 181 2 182 3 127 1 272 2 130 1 53 2 74 4 298 1 345 1 19 5 105 1 
0 1 241 1 242 1 352 1 329 1 172 1 142 1 279 1 265 1 358 1 11 1 176 1 93 1 269 1 230 1 286 2 155 1 316 1 342 1 368 1 321 1 344 1 135 1 103 1 136 1 58 2 209 1 191 1 300 2 260 1 
0 1 241 1 242 1 329 1 172 1 142 1 279 1 225 1 265 1 358 1 11 1 176 1 93 1 269 1 286 3 230 2 155 1 316 1 342 1 321 1 135 1 103 1 136 1 58 2 209 1 191 1 300 3 80 1 260 1 82 1 
0 1 241 1 242 1 329 1 172 1 142 1 279 1 358 1 93 1 269 1 286 2 230 2 155 1 316 1 342 1 321 1 135 1 103 1 58 2 209 1 191 1 300 2 80 1 260 1 82 1 
83 1 243 1 142 1 329 2 172 1 280 1 225 1 199 1 358 1 11 1 176 1 67 1 286 1 316 1 342 1 54 1 187 1 135 2 346 1 103 2 300 1 212 1 260 2 
0 1 242 1 352 1 329 1 172 1 142 1 279 1 265 1 358 1 11 1 176 1 93 1 286 1 155 1 316 1 342 1 368 1 135 1 103 1 136 1 58 2 209 1 191 1 300 1 80 1 260 1 
61 1 
277 1 243 1 244 2 142 1 281 2 145 1 199 1 89 1 90 1 250 2 201 2 47 2 251 1 92 1 254 1 49 5 340 1 341 2 54 2 342 2 346 1 299 1 162 1 210 2 16 1 211 4 212 1 164 1 21 2 262 1 304 1 63 1 172 2 264 1 354 1 119 1 65 2 228 1 358 2 227 1 362 1 33 1 34 1 363 2 231 5 316 1 128 1 274 1 76 3 41 1 370 6 77 1 322 1 372 2 81 2 
277 1 262 1 25 1 354 1 145 1 119 1 89 1 227 1 33 1 362 1 92 1 231 3 49 3 340 1 274 1 41 1 76 1 77 1 370 2 16 1 211 2 21 1 
277 1 262 1 304 1 25 1 281 1 354 1 145 1 119 1 89 1 227 1 33 1 362 1 92 1 231 3 49 3 340 1 274 1 41 1 76 1 370 1 77 1 16 1 211 3 372 1 
277 1 262 1 304 1 25 1 244 1 281 1 354 1 145 1 119 1 89 1 227 1 33 1 362 1 92 1 231 3 49 3 340 1 274 1 76 1 41 1 77 1 370 2 16 1 211 3 372 1 21 1 
277 1 262 1 304 5 25 1 222 1 244 4 281 5 198 1 145 1 354 1 119 1 89 1 65 2 228 1 227 1 250 2 201 1 47 2 251 1 148 1 362 1 33 1 92 1 335 1 267 1 34 1 363 2 231 5 254 1 49 5 340 1 341 1 274 1 76 3 41 1 77 1 370 7 322 1 210 2 16 1 211 6 164 1 372 4 21 4 
277 1 244 2 281 2 145 1 89 1 250 2 201 1 251 1 47 2 92 1 254 1 49 4 340 1 341 1 162 1 16 1 210 2 211 4 164 1 21 2 262 1 304 1 354 1 119 1 65 2 227 1 228 1 33 1 362 1 34 1 231 4 363 2 274 1 41 1 76 2 77 1 370 4 322 1 372 2 81 2 
277 1 262 1 304 1 244 2 222 1 281 1 354 1 145 1 198 1 119 1 89 1 65 2 227 1 228 1 250 2 201 1 47 2 33 1 362 1 148 1 251 1 92 1 34 1 363 2 231 4 254 1 49 4 340 1 341 1 274 1 76 2 41 1 370 4 77 1 322 1 210 2 16 1 211 4 164 1 372 2 21 2 
277 1 262 1 304 1 244 2 222 1 281 1 354 1 145 1 198 1 119 1 89 1 65 2 227 1 228 1 250 2 201 1 47 2 33 1 362 1 148 1 251 1 92 1 34 1 363 2 231 4 254 1 49 4 340 1 341 1 274 1 76 2 41 1 370 4 77 1 322 1 210 2 16 1 211 4 164 1 372 2 21 2 
277 1 262 1 110 2 304 1 244 2 222 1 281 1 354 1 145 1 119 1 89 1 65 2 227 1 228 1 201 1 33 1 362 1 251 1 92 1 34 1 363 2 180 1 231 4 254 1 48 1 152 1 49 4 340 1 341 1 274 1 76 2 41 1 370 4 77 1 16 1 211 4 104 2 164 1 372 2 21 2 81 2 
277 1 262 1 304 1 222 1 244 3 281 1 354 1 145 1 198 1 119 1 89 1 65 2 228 1 227 1 250 2 201 1 47 2 251 1 148 1 33 1 362 1 92 1 267 1 34 1 363 2 231 4 254 1 49 4 340 1 341 1 274 1 76 2 41 1 77 1 370 5 322 1 210 2 16 1 211 5 164 1 372 3 21 3 
277 1 262 1 304 1 222 1 244 3 281 1 354 1 145 1 198 1 119 1 89 1 65 2 228 1 227 1 250 2 201 1 47 2 251 1 148 1 33 1 362 1 92 1 267 1 34 1 363 2 231 4 254 1 49 4 340 1 341 1 274 1 76 2 41 1 77 1 370 5 322 1 210 2 16 1 211 5 164 1 372 3 21 3 
277 1 244 2 281 1 145 1 89 1 201 1 251 1 92 1 254 1 49 4 340 1 341 1 162 1 16 1 211 4 164 1 104 2 21 2 262 1 110 2 304 1 354 1 119 1 65 2 227 1 228 1 33 1 362 1 34 1 180 1 231 4 363 2 274 1 41 1 76 2 77 1 370 4 372 2 81 2 
22 1 60 1 109 1 326 3 3 1 223 1 86 6 356 1 248 1 359 1 46 2 35 1 181 1 182 2 272 1 130 1 53 1 73 1 74 2 186 2 345 1 298 1 190 1 19 3 105 1 258 1 
192 3 60 2 109 1 326 7 3 4 84 3 113 2 223 2 86 17 353 1 356 13 248 13 147 1 46 2 125 1 127 1 182 1 272 2 72 4 53 2 73 2 55 1 74 4 184 1 157 3 186 1 100 1 294 1 134 1 298 3 161 1 190 1 19 10 
60 1 325 1 350 1 326 1 3 1 243 1 351 1 142 1 172 1 223 1 86 2 354 2 88 1 174 1 358 1 227 1 147 1 33 2 150 1 253 1 270 1 154 1 316 1 272 1 318 1 290 1 342 1 54 1 53 1 73 1 74 2 55 1 186 1 134 1 190 1 163 1 19 1 212 1 
60 2 350 1 326 1 243 1 142 1 86 1 223 2 172 1 354 2 88 1 174 1 227 1 358 1 147 1 33 2 252 1 150 1 270 1 154 1 316 1 272 2 318 1 53 2 73 2 54 1 342 1 74 4 134 1 190 2 371 1 78 1 163 1 18 1 212 1 323 1 
60 2 326 1 243 3 246 1 142 2 172 4 223 2 86 2 330 1 29 1 354 1 199 1 226 1 227 1 358 5 146 1 147 1 33 1 122 1 154 1 316 2 272 2 318 1 51 1 342 5 54 2 53 2 73 2 74 4 55 1 132 1 344 1 190 2 346 1 163 1 19 1 258 1 212 2 
192 1 60 1 109 1 326 2 3 1 84 1 223 1 86 3 354 1 356 1 248 1 227 1 30 1 46 1 33 1 125 1 182 1 272 1 318 1 53 1 73 1 74 2 75 1 134 1 101 1 298 1 190 1 163 1 19 1 
60 1 127 1 3 1 272 1 84 1 73 1 53 1 74 2 86 2 223 1 356 1 298 1 248 1 190 1 19 2 46 1 258 1 45 1 
60 1 125 1 109 1 326 2 182 1 3 1 272 1 73 1 53 1 74 2 86 2 223 1 356 1 87 1 248 1 190 1 46 1 258 1 
192 1 60 1 109 1 326 2 3 2 84 1 223 1 86 4 356 2 248 2 46 2 125 1 127 1 182 1 272 1 53 1 73 1 74 2 298 1 190 1 19 2 258 1 
60 1 127 1 3 1 272 1 84 1 73 1 53 1 74 2 86 2 223 1 356 1 298 1 248 1 190 1 146 1 19 2 46 1 45 1 
60 1 125 1 109 1 326 2 182 1 3 1 272 1 73 1 53 1 74 2 86 2 223 1 356 1 87 1 248 1 190 1 146 1 46 1 
192 1 60 1 109 1 326 2 3 2 84 1 223 1 86 4 356 2 248 2 146 1 46 2 125 1 127 1 182 1 272 1 53 1 73 1 74 2 298 1 190 1 19 2 
192 1 109 1 125 1 60 1 326 2 182 1 127 1 3 2 272 1 84 1 73 1 53 1 74 2 223 1 86 4 356 2 298 1 248 2 190 1 19 2 46 2 
60 1 350 1 326 1 243 1 86 2 142 1 172 1 223 1 354 1 88 1 174 1 358 1 147 1 33 1 252 1 150 1 316 1 272 1 342 1 54 1 73 1 53 1 55 1 74 2 186 1 190 1 19 1 212 1 
60 1 350 1 326 1 243 1 86 2 142 1 172 1 223 1 354 1 358 1 147 1 33 1 150 1 316 1 272 1 50 1 342 1 54 1 73 1 53 1 55 1 293 1 183 1 74 2 186 1 190 1 19 1 212 1 
192 1 60 1 109 1 326 2 3 2 84 1 223 1 86 4 356 2 248 2 46 2 125 1 127 1 182 1 272 1 53 1 73 1 74 2 298 1 134 1 190 1 19 2 
192 1 109 1 60 1 326 2 350 1 3 2 84 1 243 1 86 4 142 1 172 1 223 1 354 1 356 2 88 1 248 2 174 1 358 1 46 2 33 1 252 1 125 1 150 1 182 1 127 1 316 1 272 1 342 1 73 1 53 1 74 2 344 1 298 1 190 1 19 2 18 1 212 1 
192 1 109 1 60 1 326 1 3 1 84 1 223 1 86 3 354 1 356 1 248 1 227 1 30 1 46 1 33 1 125 1 127 1 272 1 318 1 53 1 73 1 74 2 75 1 134 1 298 1 190 1 163 1 19 2 238 1 
192 2 138 1 216 1 109 1 60 2 326 5 2 1 84 2 113 1 223 2 86 11 331 1 177 1 288 1 125 1 289 1 126 1 272 2 72 2 53 2 74 4 157 1 298 2 161 1 19 6 213 1 
192 2 138 2 216 1 109 2 60 2 326 12 2 1 84 2 114 1 7 1 223 2 86 22 46 2 177 2 266 1 125 2 126 1 289 1 127 1 182 1 272 2 72 2 53 2 74 4 131 1 157 2 99 1 275 1 298 2 161 2 19 10 213 4 
22 1 192 4 138 1 216 1 109 3 60 3 326 18 2 1 84 4 5 1 114 1 113 2 7 1 223 3 86 37 331 1 46 5 177 2 266 1 35 1 125 2 126 1 181 1 289 1 127 2 182 3 272 3 72 5 130 1 53 3 74 6 131 1 157 3 99 1 275 1 345 1 298 5 161 3 19 19 105 1 213 4 
22 1 192 4 138 1 216 1 60 3 109 5 326 21 2 1 84 4 5 1 114 1 113 2 7 1 223 3 86 39 331 1 46 6 266 1 177 2 35 1 125 4 126 1 181 1 289 1 127 1 182 5 272 3 72 5 130 1 53 3 131 1 74 6 157 3 99 1 275 1 345 1 298 5 161 3 19 18 105 1 213 4 
22 1 192 3 138 1 216 1 109 3 60 1 326 13 2 1 84 3 114 1 113 1 223 1 86 27 46 4 177 1 266 1 35 1 125 2 126 1 181 1 289 1 127 1 182 3 272 1 72 3 130 1 53 1 74 2 131 1 157 2 99 1 275 1 345 1 298 4 161 2 19 14 105 1 213 3 
158 1 257 1 44 1 339 1 14 1 273 1 59 1 311 1 121 1 185 1 
333 1 108 1 
158 1 69 1 308 1 339 1 4 1 14 1 59 1 311 1 185 1 
268 1 357 1 
140 1 32 1 343 1 
337 1 261 1 68 1 231 1 339 1 49 1 194 1 14 1 185 1 263 2 281 1 158 1 257 1 44 1 59 1 311 1 121 1 214 1 
337 1 261 1 68 1 231 1 339 1 49 1 194 1 14 1 185 1 263 2 281 1 158 1 257 1 44 1 59 1 311 1 121 1 214 1 
337 1 261 1 68 1 231 1 339 1 49 1 194 1 14 1 185 1 263 2 281 1 158 1 257 1 44 1 59 1 311 1 121 1 214 1 
268 1 357 1 140 1 
268 1 357 1 140 1 
32 1 343 1 
140 1 32 1 343 1 
144 1 315 1 
263 1 196 1 8 1 144 1 354 2 249 1 227 2 360 1 333 1 33 2 311 1 68 1 231 1 315 1 339 1 49 1 318 2 14 1 38 1 185 1 186 1 158 1 206 1 163 2 59 1 108 1 214 1 
60 1 326 1 142 1 223 1 86 2 172 2 197 1 29 1 354 2 226 2 358 2 227 2 10 1 147 1 33 2 316 1 97 1 272 1 342 2 53 1 73 1 74 2 55 1 134 1 235 1 190 1 237 1 19 1 
324 1 0 1 219 1 316 1 155 1 342 2 279 1 142 1 172 2 344 1 64 1 135 1 58 2 136 1 209 1 358 2 191 1 80 1 93 1 
0 1 219 1 155 1 316 1 129 1 342 1 279 1 172 1 142 1 135 1 58 2 136 1 209 1 358 1 191 1 80 1 93 1 
316 1 243 1 54 1 342 1 142 1 172 1 199 1 64 1 135 1 346 1 358 1 212 1 67 1 285 1 
324 1 0 1 219 1 155 1 316 1 342 1 279 1 142 1 172 1 64 1 135 1 58 2 136 1 209 1 358 1 191 1 80 1 93 1 
202 1 
281 1 303 1 304 1 359 1 201 1 341 1 233 1 
304 1 281 2 228 1 250 1 201 1 47 1 251 1 231 1 254 1 49 1 341 1 76 1 370 1 322 1 210 1 164 1 81 1 
150 1 254 1 111 1 316 1 243 2 232 1 54 1 342 1 142 2 172 1 228 1 358 1 212 1 164 1 302 1 251 1 179 1 
192 1 109 1 218 1 304 2 84 1 63 1 281 5 264 1 228 2 201 6 266 1 251 2 231 1 125 1 254 2 49 1 72 1 341 3 255 1 131 1 157 1 297 4 275 1 76 1 298 1 102 1 370 1 161 1 210 3 164 2 165 2 301 4 81 6 
109 1 354 1 228 1 227 1 310 1 30 1 201 2 33 1 251 1 148 1 35 1 231 1 254 1 49 1 318 1 130 1 341 2 234 1 56 1 41 1 345 1 298 2 102 1 163 1 42 1 164 1 165 2 166 1 
303 1 254 1 304 1 341 1 233 1 281 1 228 1 164 1 201 1 251 1 
313 1 192 2 125 2 109 2 84 2 341 5 281 5 297 5 298 2 102 1 210 5 165 2 301 5 201 5 81 10 
281 1 231 1 76 1 304 1 370 1 49 1 
193 2 243 1 63 2 142 1 172 4 28 1 264 2 199 1 90 1 228 1 358 4 332 1 201 2 251 2 312 1 231 3 254 2 316 1 366 1 128 1 49 3 342 4 54 2 341 2 76 2 370 4 346 1 212 1 164 2 
60 1 326 1 350 1 243 1 86 1 223 1 172 1 142 1 354 3 88 1 358 1 227 2 174 1 30 2 147 1 33 3 252 1 150 1 272 1 316 1 318 2 342 1 54 1 73 1 53 1 74 2 186 1 234 1 133 1 190 1 163 2 212 1 
181 1 254 1 304 2 341 2 63 1 281 4 297 2 264 1 210 2 228 1 164 1 301 2 201 1 251 1 81 4 
95 1 14 1 311 1 
315 1 319 1 14 1 311 1 121 1 
95 1 14 1 311 1 
95 1 14 1 311 1 
40 1 14 1 311 1 
40 1 14 1 311 1 
40 1 14 1 311 1 
14 1 311 1 
339 1 185 1 
22 1 109 1 60 2 35 1 181 1 326 4 127 1 182 2 272 2 130 1 53 2 74 4 86 8 223 2 7 1 298 1 345 1 19 4 46 3 105 1 
22 1 35 1 109 1 181 1 326 3 182 2 130 1 86 6 345 1 298 1 359 1 19 3 105 1 46 2 
192 1 109 1 125 1 60 1 326 2 182 1 127 1 272 1 84 1 53 1 74 2 223 1 86 4 298 1 19 2 46 2 66 1 
192 1 125 1 109 1 326 4 182 1 84 1 72 2 113 1 157 1 86 7 298 1 161 1 19 3 46 1 
22 1 192 2 109 3 60 2 326 12 84 2 113 1 86 23 7 2 223 2 353 1 306 1 46 9 35 2 125 2 181 1 127 4 182 5 272 2 72 2 130 2 53 2 74 4 157 2 184 1 345 1 298 3 19 11 105 1 
326 1 72 1 86 1 
19 1 157 1 86 1 
313 1 192 1 60 1 125 1 109 1 326 3 127 1 182 2 272 1 84 1 53 1 74 2 223 1 86 6 298 1 19 3 66 1 46 3 
192 1 60 1 109 1 326 4 2 1 84 1 86 7 223 1 46 1 266 1 125 1 182 1 272 1 72 1 53 1 74 2 131 1 157 1 275 1 298 1 161 1 19 3 
109 1 35 1 326 3 182 1 127 1 130 1 86 6 345 1 298 1 19 3 46 2 
22 1 35 1 60 1 326 2 127 1 182 1 272 1 130 1 53 1 74 2 86 3 7 1 223 1 306 1 19 1 46 2 105 1 
60 1 35 2 109 2 326 5 2 1 182 3 127 2 272 1 130 2 53 1 74 2 223 1 86 10 345 1 298 2 19 5 46 5 166 1 
60 1 2 1 127 1 272 1 84 1 53 1 74 2 223 1 86 2 298 1 19 2 46 1 
192 1 109 1 125 1 60 1 326 2 182 1 2 1 127 1 272 1 84 1 53 1 74 2 223 1 86 4 298 1 19 2 46 2 
60 3 35 1 326 2 2 1 182 1 127 1 272 3 130 1 53 3 74 6 7 1 86 3 223 3 306 1 331 1 19 1 46 2 
192 1 22 1 109 2 60 3 326 7 2 1 84 1 113 1 223 3 86 15 331 1 46 4 66 1 35 1 271 1 127 2 182 2 272 3 72 2 130 1 53 3 74 6 157 1 345 1 298 3 161 1 19 8 105 1 166 1 
192 1 22 1 109 1 60 1 326 5 2 1 84 1 113 1 86 11 223 1 46 2 266 1 35 1 181 1 182 2 272 1 72 2 130 1 53 1 74 2 157 1 345 1 298 2 161 1 19 6 105 1 
22 1 109 1 60 2 326 4 2 1 86 8 223 2 66 1 46 2 266 1 35 1 181 1 182 2 272 2 72 1 130 1 53 2 74 4 157 1 298 1 345 1 161 1 19 4 105 1 
22 1 192 1 60 3 109 2 326 8 2 1 84 1 86 14 223 3 7 1 46 3 66 1 266 1 35 1 125 1 181 1 182 3 272 3 72 1 130 1 53 3 74 6 131 1 157 1 275 1 345 1 298 2 161 1 19 6 105 1 
192 1 60 2 109 1 326 4 2 1 84 1 86 7 223 2 46 1 66 1 266 1 125 1 182 1 272 2 72 1 53 2 74 4 131 1 157 1 275 1 298 1 161 1 19 3 
192 1 22 1 109 1 60 1 326 5 2 1 84 1 113 1 86 11 223 1 46 2 266 1 35 1 181 1 182 2 272 1 72 2 130 1 53 1 74 2 157 1 345 1 298 2 161 1 19 6 105 1 
192 1 60 1 109 1 326 4 2 1 84 1 86 7 223 1 46 1 266 1 125 1 182 1 272 1 72 1 53 1 74 2 131 1 157 1 275 1 298 1 161 1 19 3 
192 1 60 3 109 1 326 5 2 1 84 1 86 8 223 3 7 1 66 1 46 1 266 1 125 1 182 1 272 3 72 1 53 3 74 6 131 1 157 1 275 1 298 1 161 1 19 3 
192 1 60 3 109 1 326 5 2 1 84 1 86 8 223 3 7 1 331 1 46 2 266 1 125 1 182 2 272 3 72 1 53 3 74 6 131 1 157 1 275 1 298 1 161 1 19 3 
22 2 109 1 35 3 326 4 182 3 127 3 130 3 86 7 345 1 298 1 19 3 105 1 46 6 
192 1 60 3 109 1 326 5 2 1 84 1 86 8 223 3 7 1 331 1 46 1 266 1 125 1 182 1 272 3 72 1 53 3 74 6 131 1 157 1 275 1 298 1 161 1 19 3 
186 1 354 1 57 1 364 1 227 1 33 1 92 1 
186 1 283 1 354 1 57 1 364 1 227 1 20 1 361 1 33 1 12 1 92 1 116 1 
199 1 346 1 316 1 243 1 358 1 359 1 212 1 342 1 54 1 142 1 172 1 
150 1 350 1 154 1 316 1 243 1 318 1 54 1 342 1 142 1 172 1 186 1 354 2 163 1 227 1 358 1 174 1 212 1 33 2 
150 2 350 1 154 1 316 1 243 3 318 2 193 1 204 1 342 1 141 1 142 1 172 1 186 1 354 2 41 1 119 1 89 1 163 1 227 2 358 1 174 1 212 2 33 2 
350 1 193 1 243 3 141 1 172 2 142 1 354 2 119 1 89 1 358 2 227 2 33 2 150 2 154 1 316 1 318 2 342 2 204 1 293 1 186 1 41 1 188 1 163 1 212 2 
262 1 111 1 304 1 243 4 193 1 141 1 117 1 172 3 142 1 281 1 358 3 231 2 150 1 316 1 49 2 156 1 342 3 204 1 54 1 159 1 188 1 370 1 212 1 
262 1 150 1 231 2 304 1 167 1 111 1 316 1 49 2 193 1 243 4 54 1 204 1 342 3 141 1 142 1 172 3 281 1 159 1 188 1 370 1 358 3 212 1 
132 1 
150 1 316 2 243 3 51 1 54 2 342 4 246 1 172 3 142 3 132 1 330 1 344 1 207 1 358 4 212 2 79 1 179 1 122 1 239 1 
22 1 109 1 60 2 326 3 350 1 3 1 243 1 86 6 142 1 223 2 172 1 354 2 356 1 88 1 248 1 227 1 358 1 174 1 46 2 33 2 252 1 35 1 150 1 181 1 182 2 154 1 316 1 272 2 318 1 130 1 53 2 73 2 342 1 74 4 186 2 344 1 298 1 345 1 134 1 235 1 190 2 163 1 78 1 19 3 18 1 105 1 212 1 
303 1 262 1 304 1 167 1 111 1 221 1 243 2 172 1 281 1 196 1 358 1 228 2 332 1 201 1 251 2 94 1 231 3 254 2 203 1 49 3 341 1 54 1 342 1 233 1 159 1 76 1 370 2 164 2 
132 1 
316 1 243 1 54 1 342 4 142 1 172 4 344 1 369 1 199 1 188 1 346 1 358 4 212 1 
150 1 316 1 193 1 243 1 342 2 172 2 247 1 142 2 295 1 358 2 212 1 79 1 239 1 149 1 
0 1 58 1 316 1 358 1 191 1 342 1 54 1 279 1 142 1 172 1 
344 1 316 1 358 2 10 1 342 2 80 1 142 1 172 2 
316 2 193 1 243 3 51 1 54 1 342 5 172 4 142 2 330 1 344 1 369 1 199 1 346 1 358 5 212 2 122 1 
316 2 193 1 243 3 51 1 54 1 342 5 172 4 142 2 344 1 369 1 199 1 346 1 358 5 212 2 122 1 347 1 
150 1 350 1 154 1 316 1 243 1 318 1 54 1 342 1 293 1 142 1 172 1 186 1 354 2 163 1 227 1 358 1 212 1 33 2 
150 1 316 1 193 1 243 1 342 1 172 1 142 2 207 1 358 1 212 1 79 1 179 1 239 1 
314 1 349 1 97 1 197 1 354 1 237 1 227 1 259 1 33 1 
365 1 220 1 259 1 
186 1 314 1 349 1 245 1 259 1 
262 1 231 2 314 2 365 1 304 1 349 2 220 1 305 1 49 2 85 1 245 2 274 1 186 1 281 1 196 1 41 1 119 1 89 1 259 1 
269 1 321 1 241 1 359 1 
269 1 286 1 321 1 241 1 300 1 11 1 176 1 
286 1 103 1 260 1 
269 1 286 3 321 1 284 1 241 1 236 1 278 2 300 3 11 1 176 1 352 1 195 1 
269 1 230 1 286 2 321 1 241 1 52 1 300 2 11 1 176 1 
286 1 0 1 241 1 352 1 208 1 58 1 300 1 176 1 11 1 336 1 93 1 
286 1 321 1 241 1 300 1 11 1 176 1 352 1 
269 1 286 1 321 2 300 1 11 1 176 1 352 1 
173 1 286 2 321 1 241 1 307 1 139 1 300 2 11 2 176 2 352 1 
240 1 269 1 286 3 230 2 241 2 153 1 352 1 205 1 321 1 300 3 176 1 11 1 336 1 
269 1 286 2 230 1 0 1 241 1 352 1 279 1 321 1 58 2 209 1 300 2 176 1 11 1 107 1 93 1 
269 1 286 4 230 2 241 2 52 1 352 1 205 1 321 1 300 4 176 2 11 2 276 1 336 1 
269 1 286 1 321 1 241 1 300 1 11 1 176 1 352 1 
269 2 230 2 286 4 241 3 278 1 320 1 195 1 205 1 284 1 321 2 300 4 176 1 11 1 336 1 
269 1 230 1 286 2 321 1 241 1 217 1 200 1 27 1 300 2 11 1 176 1 352 1 
286 3 269 1 241 1 96 1 278 2 352 1 195 2 284 1 321 1 300 3 176 1 11 1 
282 2 241 2 91 1 178 1 
286 1 300 1 11 1 176 1 292 1 352 1 
240 1 269 1 230 1 286 2 321 1 241 1 300 2 11 1 176 1 352 1 
13 1 
269 1 286 1 321 1 241 1 300 1 11 1 176 1 352 1 
240 1 230 1 286 3 269 1 241 1 278 1 352 1 321 1 300 3 176 1 11 1 
205 1 241 1 320 1 336 1 
321 1 241 1 

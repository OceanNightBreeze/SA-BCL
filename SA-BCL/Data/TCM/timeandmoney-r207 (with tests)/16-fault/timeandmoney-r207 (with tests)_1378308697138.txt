#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 196 (13,120) (13,120) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 196 (13,120) (13,120) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 196 (13,120) (13,120) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 196 (13,120) (13,120) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (73,316) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (73,316) (73,316) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (73,316) (73,316) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (73,316) (73,316) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (73,316) (73,316) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (73,316) (73,316) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 111 132 146 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (73,316) (73,316) 251 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 224 95 132 146 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (73,316) (73,316) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V | STATEMENT | 809 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 1 196 1 120 1 108 1 13 1 305 1 117 1 374 1 176 1 79 1 204 1 
313 1 196 1 120 1 108 1 13 1 305 1 117 1 374 1 176 1 79 1 204 1 
313 1 196 1 120 1 108 1 13 1 305 1 117 1 374 1 176 1 79 1 204 1 
313 1 196 1 120 1 108 1 13 1 305 1 117 1 374 1 176 1 79 1 204 1 
195 1 292 1 173 1 335 2 211 3 239 3 138 1 374 4 253 1 79 1 204 1 311 2 313 1 52 1 364 1 227 1 305 4 236 1 
247 1 289 1 173 1 108 1 239 1 91 1 138 1 40 1 374 2 253 1 79 1 176 1 204 1 313 1 305 2 236 1 
292 1 77 1 108 1 239 2 211 1 374 3 253 1 79 2 204 2 311 1 313 1 305 3 236 1 
292 3 108 1 211 7 239 5 46 1 138 1 48 1 240 1 52 1 364 1 305 9 195 1 173 1 77 1 335 2 123 1 374 9 253 1 79 2 311 4 204 2 313 1 227 1 236 1 
292 3 108 1 211 7 239 5 46 1 138 1 48 1 240 1 52 1 364 1 305 9 195 1 173 1 77 1 335 2 123 1 374 9 253 1 79 2 311 4 204 2 313 1 227 1 236 1 
100 1 
5 1 269 1 21 2 
25 1 41 2 88 2 43 2 238 2 298 1 242 2 246 2 
25 1 263 1 88 2 293 1 238 2 187 1 298 1 299 1 300 1 191 1 141 1 242 3 301 2 51 1 30 2 113 1 347 1 144 1 31 1 366 1 246 2 273 1 36 1 76 1 57 1 39 1 175 2 15 1 41 2 225 1 43 3 229 2 131 2 180 1 157 1 22 1 181 1 
316 1 
183 1 160 1 58 1 163 1 307 1 61 1 242 1 361 1 277 1 41 1 43 1 84 1 269 1 271 1 
183 2 160 1 88 1 58 1 307 2 238 1 61 1 242 1 361 1 277 1 41 1 43 1 316 1 84 1 269 1 73 1 246 1 
183 1 164 1 307 1 351 1 210 1 
183 2 268 1 58 1 164 1 307 2 269 1 223 1 351 1 
183 1 164 1 307 1 
183 1 307 1 316 1 73 1 351 1 
269 1 
183 2 58 1 164 1 161 1 307 2 269 1 223 1 351 1 
183 5 10 1 58 1 307 5 60 1 223 1 302 1 279 1 150 2 127 1 255 1 256 2 164 2 82 1 330 1 269 1 317 2 351 2 352 1 
263 1 76 1 88 1 293 1 238 1 187 1 213 1 15 1 141 1 242 2 301 1 303 1 41 1 51 1 43 2 144 1 53 1 229 1 131 1 22 1 
100 1 
25 1 88 1 197 1 238 1 372 1 103 1 242 2 41 2 43 2 84 1 246 1 
319 1 53 1 325 1 
25 1 263 1 76 1 293 1 187 1 15 1 141 1 242 1 301 1 80 1 51 1 43 1 144 1 229 1 131 1 22 1 
25 1 88 4 163 1 238 4 372 1 213 1 242 5 346 1 303 2 41 5 43 5 71 1 85 1 246 1 
41 1 88 1 43 1 370 1 238 1 84 1 242 1 
25 1 303 1 41 3 88 3 43 3 238 3 242 3 246 1 
41 1 88 1 43 1 370 1 238 1 84 1 242 1 
88 1 238 1 372 1 103 1 242 1 41 1 43 1 84 1 246 1 
25 1 263 1 183 1 160 1 88 3 293 1 238 3 187 1 298 1 299 1 213 1 141 1 242 4 361 1 301 1 303 1 51 1 30 2 347 1 144 1 31 1 366 1 97 1 246 2 273 1 76 1 57 1 307 1 175 1 372 1 15 1 61 1 277 1 41 3 225 1 43 4 84 1 229 1 131 1 180 1 157 1 22 1 24 1 181 1 
25 1 88 1 163 1 197 1 238 1 242 2 303 1 41 2 43 2 71 1 84 1 
183 1 160 1 88 3 307 1 238 3 372 1 213 1 336 1 61 1 277 1 242 3 361 1 303 2 41 3 43 3 84 1 269 1 24 1 246 1 
319 1 88 2 238 2 372 1 242 2 303 1 41 2 43 2 53 1 246 1 
25 1 263 1 76 1 293 1 187 1 15 1 141 1 242 1 301 1 51 1 43 1 144 1 229 1 131 1 22 1 
25 1 263 1 76 1 291 1 293 1 15 1 242 1 301 1 51 1 43 1 144 1 229 1 131 1 367 1 22 1 
319 2 320 1 321 1 299 1 325 2 30 2 347 1 366 1 53 2 220 1 273 2 170 1 57 1 274 1 39 2 175 4 224 1 312 1 225 1 64 1 206 1 83 1 357 1 157 1 
171 1 88 1 238 1 61 1 242 1 41 1 43 1 84 1 
134 1 295 1 
134 1 295 1 
134 1 151 1 295 1 74 1 
134 1 151 1 295 1 74 1 
151 1 74 1 
134 1 295 1 124 1 
134 1 295 1 124 1 
134 2 151 1 295 2 89 1 309 1 74 1 
134 1 295 1 283 1 
134 1 295 1 124 1 
134 1 294 1 295 1 
134 1 294 1 295 1 
134 1 294 1 295 1 
25 1 134 1 183 1 88 2 295 1 238 2 137 1 188 1 297 1 242 2 327 1 93 1 32 1 245 1 37 1 307 1 369 1 148 1 41 2 43 2 283 1 285 1 208 1 133 1 
134 2 183 2 264 1 359 1 59 2 295 2 37 2 307 2 309 1 137 3 327 1 93 2 337 1 94 1 269 1 260 1 245 2 133 2 182 1 
52 1 173 1 138 1 
289 1 173 1 138 1 
18 1 52 2 289 1 378 1 143 1 138 3 
18 1 52 1 289 1 378 1 125 1 138 2 
18 1 52 1 289 1 378 2 138 2 
183 5 326 2 302 3 5 1 28 1 164 1 114 1 95 1 269 2 55 1 351 4 352 1 33 1 10 2 119 2 58 1 369 1 274 1 307 5 121 2 223 1 224 1 150 1 312 1 256 1 83 1 156 1 317 1 285 1 208 1 21 3 44 1 
183 8 302 6 5 2 348 1 95 2 350 1 351 6 352 1 10 4 147 1 58 1 307 8 200 1 14 4 101 1 150 2 312 2 255 1 256 2 316 1 156 2 317 2 21 6 210 4 69 1 326 4 28 2 164 5 269 4 73 1 119 4 274 2 223 1 224 2 83 2 285 4 44 1 
183 3 302 3 326 2 5 2 28 1 114 1 95 1 269 3 73 1 351 2 33 1 10 2 119 2 58 1 274 1 307 3 121 1 224 1 150 1 312 1 255 1 256 1 316 1 83 1 156 1 317 1 285 1 21 4 
183 3 69 1 326 2 302 3 5 2 28 1 114 1 95 1 269 3 73 1 350 1 351 2 33 1 10 2 119 2 147 1 58 1 274 1 307 3 121 1 224 1 150 1 312 1 255 1 256 1 316 1 83 1 156 1 317 1 285 2 21 4 
100 1 
144 1 130 1 
209 1 
51 1 144 1 22 1 
144 1 306 1 
144 1 22 1 
51 1 144 2 67 1 56 1 22 1 209 1 159 2 
273 4 136 1 274 1 26 1 39 5 175 9 139 1 109 1 278 1 63 1 281 1 64 2 83 1 228 1 220 3 193 1 358 2 
273 4 136 1 274 1 26 1 39 5 175 9 139 1 109 1 278 1 63 1 281 1 64 2 83 1 228 1 220 3 193 1 358 2 
273 4 136 1 274 1 26 1 39 5 175 9 139 1 250 1 109 1 278 1 63 1 281 1 64 2 83 1 228 1 220 3 193 1 358 2 
136 1 26 1 139 2 299 1 140 3 109 1 4 1 30 2 329 1 347 1 366 1 349 1 95 3 220 10 193 2 118 4 273 13 274 3 175 29 39 16 275 1 224 3 278 2 128 1 63 2 312 2 225 1 281 5 64 5 228 1 83 4 233 1 358 3 341 1 
273 5 136 1 274 1 26 1 39 6 175 11 139 1 299 2 109 1 278 1 63 1 126 1 225 2 30 4 281 2 64 3 347 2 83 1 366 2 220 5 193 1 358 2 341 1 75 1 
263 1 289 1 162 1 293 1 108 1 239 1 211 1 345 1 138 2 301 1 52 1 143 1 96 1 305 2 194 1 173 1 199 1 252 1 374 2 253 1 203 1 79 1 204 1 280 1 313 1 376 1 154 1 229 1 131 1 236 1 
263 1 289 1 293 1 189 1 108 1 239 1 211 2 345 1 138 2 301 1 52 1 143 1 96 1 305 3 194 1 173 1 122 1 199 1 222 1 374 3 253 1 203 1 79 1 204 1 280 1 376 1 154 1 229 1 131 1 236 1 
263 1 289 1 293 1 108 1 239 1 211 2 138 2 301 1 52 1 143 1 96 1 305 2 194 1 173 1 122 1 199 1 222 1 374 2 253 1 203 1 280 1 154 1 229 1 131 1 236 1 
263 1 334 1 293 1 249 1 108 2 189 1 15 1 374 1 79 1 301 1 203 2 204 1 254 1 328 1 144 1 66 1 96 2 229 1 116 1 131 1 305 1 22 1 194 2 
263 1 289 1 293 1 108 1 345 1 138 2 301 1 52 1 143 1 96 1 305 1 194 1 173 1 122 1 199 1 252 1 374 1 203 1 79 1 204 1 280 1 313 1 376 1 154 1 229 1 131 1 
166 1 
183 5 287 1 87 2 293 1 301 2 242 1 302 2 5 2 244 1 6 2 144 1 352 1 10 2 58 1 307 5 308 2 102 1 15 2 201 1 61 1 150 1 153 1 256 1 315 1 105 1 156 1 317 1 258 1 21 2 22 1 23 1 263 1 68 1 160 1 163 1 324 2 361 1 328 1 164 6 165 2 332 1 269 2 116 1 271 1 34 2 223 3 277 1 41 1 375 1 43 1 84 1 229 2 131 2 340 2 234 4 
183 3 160 1 287 1 68 1 161 1 163 1 242 1 361 1 164 2 6 1 271 1 307 3 102 1 201 1 61 1 223 1 277 1 41 1 43 1 84 1 258 1 234 2 
183 3 68 1 287 1 160 1 161 1 58 1 307 3 163 1 102 1 223 1 61 1 201 1 277 1 361 1 242 1 41 1 164 1 165 1 43 1 84 1 269 1 258 1 234 3 271 1 
183 3 160 1 287 1 68 1 161 1 163 1 242 1 361 1 324 1 164 2 165 1 6 1 269 1 271 1 58 1 307 3 102 1 223 1 201 1 61 1 277 1 41 1 43 1 84 1 258 1 234 3 
183 5 287 1 87 2 242 1 302 1 50 1 5 2 6 4 54 1 352 1 10 1 58 5 307 5 308 2 102 1 16 1 61 1 201 1 150 1 256 1 105 1 258 1 317 1 160 1 68 1 161 1 163 1 266 1 324 4 361 1 164 7 165 4 332 1 269 5 271 1 34 2 223 3 277 1 41 1 43 1 84 1 232 1 340 2 234 6 
183 4 287 1 87 2 242 1 302 1 5 2 6 2 244 1 352 1 10 1 58 1 307 4 308 2 102 1 61 1 201 1 150 1 256 1 105 1 317 1 258 1 21 2 160 1 68 1 163 1 361 1 324 2 164 4 165 2 332 1 269 2 271 1 34 2 223 2 277 1 41 1 43 1 84 1 340 2 234 4 
183 4 160 1 287 1 68 1 87 2 163 1 324 2 242 1 361 1 302 1 5 2 50 1 164 4 165 2 6 2 332 1 269 1 54 1 271 1 352 1 34 2 10 1 58 1 307 4 308 2 102 1 223 2 201 1 61 1 277 1 41 1 150 1 256 1 105 1 43 1 84 1 317 1 258 1 232 1 340 2 234 4 
183 4 160 1 287 1 68 1 87 2 163 1 324 2 242 1 361 1 302 1 5 2 50 1 164 4 165 2 6 2 332 1 269 1 54 1 271 1 352 1 34 2 10 1 58 1 307 4 308 2 102 1 223 2 201 1 61 1 277 1 41 1 150 1 256 1 105 1 43 1 84 1 317 1 258 1 232 1 340 2 234 4 
183 4 160 1 287 1 68 1 163 1 214 1 324 2 242 1 361 1 302 1 164 4 165 2 6 2 332 1 269 1 54 1 271 1 352 1 34 2 10 1 58 1 99 1 307 4 102 1 223 2 201 1 61 1 277 1 41 1 150 1 354 2 256 1 43 1 84 1 338 1 317 1 258 1 21 2 340 2 234 4 262 2 
183 4 160 1 287 1 68 1 87 2 163 1 266 1 242 1 361 1 324 3 302 1 5 2 50 1 164 5 165 3 6 3 332 1 269 1 54 1 271 1 352 1 34 2 10 1 58 1 307 4 308 2 102 1 223 2 201 1 61 1 277 1 150 1 41 1 256 1 105 1 43 1 84 1 317 1 258 1 232 1 340 2 234 5 
183 4 160 1 287 1 68 1 87 2 163 1 266 1 242 1 361 1 324 3 302 1 5 2 50 1 164 5 165 3 6 3 332 1 269 1 54 1 271 1 352 1 34 2 10 1 58 1 307 4 308 2 102 1 223 2 201 1 61 1 277 1 150 1 41 1 256 1 105 1 43 1 84 1 317 1 258 1 232 1 340 2 234 5 
183 4 287 1 242 1 302 1 6 2 244 1 352 1 10 1 58 1 99 1 307 4 102 1 61 1 201 1 150 1 256 1 354 2 317 1 258 1 21 2 262 2 160 1 68 1 163 1 361 1 324 2 164 4 165 2 332 1 269 1 271 1 34 2 223 2 277 1 41 1 43 1 84 1 340 2 234 4 
225 1 30 2 57 1 100 1 347 1 366 1 321 1 299 1 157 1 
25 1 106 1 319 4 290 1 296 1 299 2 140 3 325 11 30 4 113 1 347 2 7 1 366 2 220 2 8 1 53 11 349 1 95 2 118 3 273 6 57 2 274 1 175 14 39 8 224 2 128 1 312 1 225 2 281 1 64 1 83 2 180 1 157 1 
25 1 263 1 319 1 106 1 88 1 293 1 238 1 187 1 299 1 213 1 141 1 301 1 242 2 303 1 51 1 30 2 347 1 113 1 144 1 72 1 366 1 76 1 273 1 57 1 175 2 39 1 15 1 41 1 80 1 225 1 43 2 229 1 379 1 131 1 356 1 180 1 22 1 157 1 
88 1 136 1 293 2 238 1 187 2 139 1 299 3 141 2 301 3 242 3 303 1 51 2 347 3 144 2 53 7 95 2 57 3 198 1 353 1 15 1 62 2 312 2 17 2 64 6 355 2 157 3 22 2 358 1 25 3 106 1 263 2 319 7 26 1 213 1 109 1 325 7 30 6 113 1 31 2 366 3 220 11 221 2 273 11 76 2 274 3 122 1 175 22 39 11 224 2 278 1 41 1 225 3 281 5 43 3 83 3 229 3 231 1 131 3 180 1 
263 2 88 1 162 1 293 2 238 1 321 1 90 1 299 2 300 2 216 1 242 1 301 8 303 1 328 1 363 1 30 4 347 2 113 1 144 3 366 2 116 1 273 1 57 2 122 1 39 1 175 2 78 1 276 1 15 2 41 1 81 1 225 2 43 1 229 7 131 8 180 1 157 2 22 2 235 1 
319 1 106 1 88 1 238 1 299 1 325 1 242 1 30 2 347 1 366 1 220 1 53 1 95 1 246 1 273 2 57 1 368 1 274 1 39 1 175 3 372 1 224 1 41 1 312 1 225 1 64 1 43 1 83 1 157 1 
319 1 170 1 57 1 321 1 175 2 39 2 299 1 325 1 224 1 225 1 30 2 281 1 347 1 83 1 366 1 220 1 53 1 157 1 
319 1 273 2 57 1 274 1 321 1 175 2 299 1 325 1 312 1 225 1 30 2 64 1 347 1 366 1 220 1 53 1 357 1 157 1 
319 2 321 1 299 1 325 2 30 2 347 1 366 1 95 1 53 2 220 1 273 2 57 1 274 1 39 2 175 4 224 1 312 1 225 1 64 1 83 1 157 1 
319 1 170 1 57 1 90 1 175 2 39 2 299 1 325 1 224 1 225 1 30 2 281 1 347 1 83 1 366 1 220 1 53 1 157 1 
319 1 273 2 57 1 274 1 90 1 175 2 299 1 325 1 312 1 225 1 30 2 64 1 347 1 366 1 220 1 53 1 357 1 157 1 
319 2 90 1 299 1 325 2 30 2 347 1 366 1 95 1 53 2 220 2 273 2 57 1 274 1 39 2 175 4 224 1 312 1 225 1 281 1 64 1 83 1 157 1 
319 2 299 1 325 2 30 2 347 1 366 1 95 1 53 2 220 1 273 2 57 1 274 1 175 4 39 2 224 1 312 1 225 1 64 1 83 1 157 1 
25 1 263 1 293 1 187 1 299 1 141 1 301 1 242 1 51 1 30 2 113 1 347 1 31 1 144 1 366 1 76 1 273 1 57 1 39 1 175 2 15 1 225 1 43 1 229 1 131 1 180 1 22 1 157 1 
25 1 263 1 0 1 291 1 293 1 299 1 301 1 242 1 51 1 30 2 113 1 347 1 144 1 366 1 367 1 76 1 273 1 57 1 39 1 175 2 15 1 225 1 43 1 229 1 131 1 180 1 22 1 157 1 
106 1 319 2 299 1 325 2 30 2 347 1 366 1 95 1 53 2 220 1 273 2 57 1 274 1 39 2 175 4 224 1 312 1 225 1 64 1 83 1 157 1 
319 2 263 1 293 1 162 1 187 1 299 1 141 1 325 2 301 1 242 1 51 1 30 2 347 1 31 1 144 1 366 1 220 1 53 2 95 1 273 2 76 1 57 1 274 1 175 4 39 2 224 1 312 1 17 1 225 1 64 1 43 1 83 1 229 1 131 1 22 1 157 1 
106 1 319 1 88 1 265 1 238 1 299 1 242 1 325 1 30 2 347 1 366 1 220 1 95 1 53 1 246 1 273 1 57 1 274 1 39 2 175 3 372 1 224 1 41 1 312 1 225 1 281 1 43 1 83 1 157 1 
135 1 186 2 49 2 299 2 192 1 30 4 347 2 366 2 365 1 95 1 220 1 273 4 274 1 175 8 39 4 224 1 126 1 312 1 225 2 314 1 281 1 377 1 282 1 83 1 257 1 
135 1 186 1 49 2 299 2 30 4 347 2 366 2 365 1 95 1 220 2 273 4 274 1 175 8 39 4 224 1 126 1 312 1 225 2 314 1 281 1 64 1 377 1 282 1 83 1 257 1 
135 1 136 1 186 1 26 1 49 1 299 1 139 1 109 1 30 2 347 1 366 1 365 1 95 1 220 3 273 6 274 2 175 13 39 7 224 1 278 1 312 1 126 1 225 1 314 1 281 2 282 1 64 1 83 2 257 1 358 1 
135 1 186 1 49 1 299 2 30 4 347 2 331 1 366 2 365 1 95 1 220 1 273 3 274 1 175 6 39 3 224 1 126 1 312 1 225 2 314 1 377 1 282 1 64 1 83 1 
135 1 186 2 49 2 299 1 30 2 347 1 366 1 365 1 95 1 273 4 274 1 175 8 39 4 224 1 126 1 312 1 225 1 314 2 282 1 83 1 257 1 
134 1 93 1 359 1 94 1 37 1 295 1 309 1 245 1 133 1 272 1 
283 1 32 1 
134 1 35 1 93 1 185 1 37 1 295 1 245 1 133 1 177 1 
124 1 27 1 
294 1 89 1 129 1 
183 1 134 1 359 1 59 1 307 1 295 1 37 1 309 1 137 2 327 1 93 1 337 1 94 1 269 1 260 1 245 1 133 1 182 1 
183 1 134 1 359 1 59 1 307 1 295 1 37 1 309 1 137 2 327 1 93 1 337 1 94 1 269 1 260 1 245 1 133 1 182 1 
183 1 134 1 359 1 59 1 307 1 295 1 37 1 309 1 137 2 327 1 93 1 337 1 94 1 269 1 260 1 245 1 133 1 182 1 
89 1 124 1 27 1 
89 1 124 1 27 1 
294 1 129 1 
294 1 89 1 129 1 
148 1 297 1 
25 1 183 1 134 1 88 2 295 1 238 2 137 1 188 1 297 1 242 2 93 1 32 1 245 1 351 1 59 1 307 1 37 1 369 1 148 1 41 2 337 1 43 2 283 1 284 1 285 1 208 1 133 1 
263 1 106 1 293 1 299 1 300 2 216 1 110 1 301 2 242 2 30 2 347 1 113 1 144 1 366 1 333 1 270 1 273 1 57 1 39 1 175 2 78 1 373 1 41 2 225 1 43 2 229 2 131 2 180 1 22 1 157 1 286 1 
263 1 289 1 173 1 293 1 162 1 122 1 199 1 149 1 138 2 202 1 301 2 376 1 52 1 154 1 143 1 229 2 96 1 131 2 167 1 
263 1 289 1 11 1 173 1 293 1 122 1 199 1 138 2 301 1 376 1 52 1 154 1 143 1 229 1 96 1 131 1 167 1 
263 1 293 1 15 1 202 1 301 1 328 1 144 1 66 1 229 1 96 1 116 1 131 1 22 1 261 1 
263 1 289 1 173 1 293 1 122 1 199 1 149 1 138 2 202 1 301 1 376 1 52 1 154 1 143 1 229 1 96 1 131 1 167 1 
217 1 
100 1 
183 1 87 1 302 1 5 1 164 1 269 2 352 1 10 1 58 1 307 1 308 1 223 1 150 1 256 1 105 1 317 1 21 1 
183 5 288 2 293 4 1 2 2 2 190 2 301 3 302 9 92 2 5 6 51 3 144 10 95 2 352 4 306 2 98 1 10 8 58 2 12 2 307 5 248 1 15 1 150 4 312 2 256 4 315 1 355 2 156 2 317 4 67 1 21 12 22 3 159 2 263 3 162 1 360 2 326 6 219 1 164 5 330 1 269 8 169 1 119 6 274 2 38 2 223 3 277 2 224 2 127 1 83 2 130 3 229 3 380 1 131 3 
183 1 86 1 140 1 215 1 326 4 302 5 111 1 5 3 164 1 95 1 269 4 146 1 352 2 118 1 10 3 119 4 58 1 307 1 274 1 38 1 223 1 224 1 150 2 128 1 312 1 256 2 83 1 317 2 132 1 21 6 158 1 
183 1 10 1 274 1 307 1 38 2 26 1 139 1 251 1 302 2 278 1 50 1 150 1 256 1 316 1 83 1 317 1 73 1 352 1 
10 1 58 1 302 1 150 1 127 1 256 1 330 1 269 1 317 1 352 1 
10 5 119 5 12 1 274 2 38 2 224 2 326 5 302 5 5 5 312 2 83 2 355 1 95 2 269 5 21 10 
183 1 58 1 164 1 307 1 269 1 223 1 
263 1 183 3 293 1 301 4 302 2 142 1 328 1 112 1 164 4 144 1 116 1 352 1 98 2 10 2 307 3 248 1 15 2 223 2 150 2 375 1 255 1 256 2 315 2 229 4 156 2 317 2 131 4 22 1 23 1 
25 1 263 1 88 2 293 1 238 2 187 1 298 1 299 1 141 1 301 1 242 3 51 1 30 2 347 1 31 1 144 1 366 1 246 2 273 1 76 1 57 1 175 1 15 1 41 2 225 1 43 3 229 1 131 1 180 1 22 1 157 1 181 1 
10 2 119 2 58 2 326 2 302 1 5 2 150 1 256 1 315 1 156 1 269 4 317 1 21 4 358 1 352 1 
93 1 37 1 155 1 
93 1 37 1 155 1 
93 1 359 1 226 1 37 1 297 1 
93 1 37 1 155 1 
93 1 37 1 318 1 
93 1 37 1 318 1 
93 1 37 1 318 1 
93 1 37 1 
134 1 295 1 
273 5 136 1 274 1 26 1 39 5 175 10 139 1 299 1 140 1 109 1 278 1 126 1 128 1 225 1 30 2 281 1 64 2 347 1 83 1 366 1 220 3 146 1 358 1 118 1 
136 1 26 1 139 1 299 2 140 1 109 1 218 1 30 4 347 2 366 2 349 1 95 1 220 4 146 1 118 2 273 6 274 1 175 13 39 7 224 1 278 1 128 1 126 1 225 2 281 2 64 2 83 2 358 1 
86 1 273 5 274 1 39 6 175 11 299 2 140 1 224 2 215 1 111 1 312 1 126 1 128 1 225 2 30 4 64 1 347 2 83 2 366 2 220 1 95 2 132 1 146 1 341 1 118 1 
86 1 273 5 274 1 39 6 175 11 299 2 140 1 224 2 215 1 111 1 312 1 126 1 128 1 225 2 30 4 64 2 347 2 83 2 366 2 220 2 95 2 132 1 146 1 341 1 118 1 
273 5 136 1 274 1 26 1 39 5 175 10 139 1 299 1 140 1 109 1 278 1 126 1 128 1 225 1 30 2 281 1 64 2 347 1 83 1 366 1 220 3 146 1 358 1 118 1 
86 1 273 5 274 1 39 6 175 11 299 2 140 1 224 2 215 1 111 1 312 1 126 1 128 1 225 2 30 4 64 2 347 2 83 2 366 2 220 2 95 2 132 1 146 1 341 1 118 1 
86 1 273 5 274 1 39 6 175 11 140 1 299 3 224 2 215 1 111 1 312 1 126 1 218 1 128 1 225 3 30 6 64 1 347 3 83 2 366 3 220 1 95 2 132 1 146 1 341 1 118 1 
86 1 273 5 274 1 39 6 175 11 140 1 299 2 224 2 215 1 111 1 312 1 126 1 128 1 225 2 30 4 64 2 377 1 347 2 83 2 366 2 220 2 95 2 132 1 146 1 118 1 
273 2 136 2 39 2 175 4 139 2 109 1 278 2 281 2 64 2 220 4 
86 1 273 5 274 1 39 6 175 11 140 1 299 3 224 2 215 1 111 1 312 1 126 1 128 1 225 3 30 6 64 1 377 1 347 3 83 2 366 3 220 1 95 2 132 1 146 1 341 1 118 1 
273 4 136 1 274 1 26 1 175 8 39 4 299 2 139 1 109 1 278 1 225 2 30 4 281 1 64 2 347 2 83 1 366 2 220 3 358 1 341 1 
100 1 
273 2 274 1 39 2 175 4 299 1 224 1 312 1 218 1 225 1 30 2 281 1 64 1 347 1 83 1 366 1 220 2 95 1 
273 4 274 1 175 7 39 3 140 1 224 1 312 1 128 1 281 1 64 1 83 1 349 1 95 1 220 2 118 2 
136 1 290 1 26 1 139 2 140 2 299 1 109 1 30 2 347 1 366 1 95 2 349 1 8 1 220 7 118 2 273 11 274 3 39 11 175 22 224 2 278 2 312 2 225 1 281 3 64 4 83 3 358 1 341 1 
273 1 175 1 118 1 
175 1 39 1 140 1 
273 3 274 1 175 6 39 3 299 1 224 1 218 1 312 1 225 1 30 2 281 2 347 1 64 2 83 1 366 1 355 1 95 1 220 4 
86 1 273 5 274 1 39 6 175 11 299 1 140 1 224 2 215 1 111 1 312 1 126 1 128 1 225 1 30 2 64 2 347 1 83 2 366 1 220 2 95 2 132 1 146 1 118 1 
273 3 274 1 26 1 39 3 175 6 139 1 278 1 281 1 64 1 83 1 220 2 
273 2 136 1 39 1 175 3 139 1 299 1 109 1 278 1 225 1 30 2 281 1 42 1 64 1 347 1 366 1 220 2 341 1 
273 5 274 2 26 1 39 5 175 10 139 1 251 1 278 1 281 2 64 2 83 2 220 4 
39 2 175 2 299 1 224 1 126 1 225 1 30 2 281 1 347 1 83 1 366 1 220 1 
273 2 274 1 39 2 175 4 299 1 224 1 126 1 312 1 225 1 30 2 64 1 347 1 83 1 366 1 220 1 95 1 
273 1 175 2 39 1 299 1 139 1 278 1 126 1 225 1 30 2 281 1 347 1 64 1 366 1 220 2 
136 1 26 2 139 3 299 5 140 3 109 1 4 1 218 1 30 10 347 5 366 5 349 1 95 3 220 12 118 4 273 17 274 4 175 34 39 17 275 1 224 3 278 3 128 1 126 1 312 2 225 5 42 1 281 6 64 6 377 1 83 5 233 1 358 1 341 2 
25 1 41 1 104 1 43 1 163 1 71 1 242 1 
25 1 342 1 163 1 242 1 41 1 104 1 29 1 43 1 71 1 115 1 339 1 168 1 
100 1 229 1 131 1 15 1 301 1 
25 1 263 1 76 1 88 1 293 1 238 1 187 1 15 1 242 2 301 1 303 1 41 1 51 1 43 2 144 1 229 1 131 1 22 1 
25 1 263 1 88 2 293 1 238 1 187 1 1 1 301 1 242 2 361 1 303 1 51 2 144 3 306 1 98 1 76 1 197 1 61 1 41 2 43 2 84 2 229 1 131 1 22 2 
25 1 263 1 88 2 293 1 238 1 1 1 301 1 242 2 361 1 303 1 51 2 144 3 367 1 306 1 98 1 76 1 197 1 61 1 41 2 43 2 84 2 229 1 131 1 22 2 
183 2 263 1 98 1 172 1 58 1 293 1 307 2 1 1 344 1 310 1 15 1 277 1 301 3 51 1 164 1 144 4 130 1 229 3 269 1 131 3 22 1 306 1 159 1 
183 2 263 1 98 1 172 1 58 1 293 1 307 2 1 1 190 1 15 1 277 1 301 3 51 1 164 1 144 4 130 1 229 3 269 1 131 3 22 1 306 1 159 1 
263 1 363 1 293 1 229 1 131 1 301 1 
263 2 162 1 293 3 122 1 174 1 237 1 300 1 276 1 15 2 216 1 301 7 81 1 152 1 51 1 363 1 144 3 229 6 131 7 67 1 22 2 235 1 
88 1 136 1 293 1 238 1 187 1 299 2 139 1 141 1 301 1 242 2 303 1 51 1 347 2 144 1 53 1 57 2 62 1 17 1 64 2 157 2 22 1 358 1 319 1 106 1 263 1 25 3 162 1 26 1 109 1 325 1 30 4 31 1 366 2 220 3 333 1 76 1 273 4 274 1 39 4 175 8 278 1 41 1 225 2 281 1 43 2 83 1 229 1 131 1 
183 3 2 1 190 1 360 1 301 1 302 1 92 1 164 2 330 1 144 2 269 1 351 1 352 2 10 1 58 1 307 3 248 1 15 1 223 1 277 1 150 2 127 1 256 2 130 1 229 1 317 2 131 1 159 1 
169 1 263 1 162 1 293 2 301 2 51 1 363 1 144 2 229 2 131 2 67 1 22 1 159 1 
263 1 172 1 293 1 162 1 15 1 301 4 328 1 144 1 229 4 230 1 116 1 131 4 22 1 
263 1 98 1 293 2 237 1 198 1 323 1 301 2 152 1 362 1 51 1 144 1 229 2 131 2 22 1 
263 1 289 1 173 1 293 1 154 1 229 1 138 1 131 1 15 1 301 1 
263 1 162 1 293 1 122 1 301 2 110 1 216 1 144 1 229 2 131 2 22 1 
263 2 98 1 162 1 293 2 15 1 276 1 301 5 216 1 328 1 144 3 229 4 230 1 116 1 131 5 22 2 235 1 
263 2 98 1 162 1 293 2 15 1 276 1 301 5 216 1 328 1 144 3 229 4 230 1 116 1 131 5 259 1 22 2 
25 1 263 1 76 1 88 1 293 1 238 1 15 1 242 2 301 1 303 1 41 1 51 1 43 2 144 1 229 1 131 1 367 1 22 1 
263 1 98 1 293 2 174 1 237 1 301 1 152 1 51 1 144 1 229 1 131 1 67 1 22 1 
25 1 267 1 65 1 70 1 322 1 
183 2 160 1 58 1 307 2 70 1 61 1 322 1 277 1 361 1 205 1 267 1 316 1 65 1 84 1 269 1 179 1 145 1 73 1 351 1 24 1 
41 1 267 1 43 1 70 1 270 1 286 1 373 1 322 1 242 1 
267 1 179 1 145 1 
100 1 
239 1 305 1 374 1 253 1 79 1 236 1 204 1 
108 1 305 1 203 1 
239 1 91 2 47 1 374 3 79 1 253 1 204 1 313 1 243 1 19 1 305 3 236 1 
335 1 239 1 211 1 305 2 374 2 253 1 79 1 236 1 204 1 
195 1 173 1 239 1 138 1 374 1 79 1 204 1 311 1 313 1 52 1 305 1 
313 1 239 1 305 1 374 1 253 1 79 1 204 1 
313 1 305 1 374 1 253 2 79 1 236 1 204 1 
239 1 3 1 374 2 253 1 79 2 204 2 313 1 304 1 178 1 305 2 
292 1 46 1 211 2 239 2 48 1 374 3 253 1 79 1 204 1 311 1 313 1 305 3 236 1 
289 1 173 1 239 1 211 1 138 2 374 2 253 1 79 1 204 1 313 1 52 1 143 1 305 2 236 1 9 1 
292 1 335 1 211 2 239 2 374 4 253 1 79 2 204 2 311 1 313 1 364 1 305 4 236 1 
313 1 239 1 305 1 374 1 253 1 79 1 236 1 204 1 
292 1 91 1 211 2 239 3 47 1 374 4 253 2 79 1 204 1 311 1 19 1 305 4 45 1 236 2 
239 1 211 1 240 1 374 2 253 1 79 1 241 1 204 1 313 1 305 2 20 1 236 1 
239 1 212 1 91 2 47 1 374 3 79 1 253 1 204 1 313 1 19 2 305 3 236 1 
107 2 343 1 371 1 239 2 
313 1 207 1 305 1 374 1 79 1 204 1 
313 1 239 1 211 1 46 1 305 2 374 2 253 1 79 1 236 1 204 1 
184 1 
313 1 239 1 305 1 374 1 253 1 79 1 236 1 204 1 
211 1 91 1 239 1 46 1 374 3 79 1 253 1 204 1 313 1 305 3 236 1 
292 1 239 1 45 1 311 1 
239 1 253 1 

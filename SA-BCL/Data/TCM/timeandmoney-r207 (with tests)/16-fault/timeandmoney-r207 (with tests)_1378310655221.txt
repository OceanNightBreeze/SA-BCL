#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 153 58 69 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 153 58 69 72 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 153 58 69 (3,212) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 153 58 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 153 58 69 (3,212) (3,212) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 243 (205,281,323) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 225 12 249 32 186 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 153 147 164 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 153 58 69 (3,212) (3,212) 115 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 153 58 69 72 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 225 12 249 32 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 153 253 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 153 253 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 153 253 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 153 58 69 (3,212) (3,212) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 153 253 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 153 253 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 35 1 230 9 195 2 232 1 287 1 119 1 42 1 163 1 52 1 207 2 301 4 129 1 131 1 19 9 171 1 174 6 133 1 68 1 180 1 109 3 142 5 269 2 267 2 74 2 273 2 222 2 82 1 
160 1 35 1 230 9 195 2 232 1 287 1 119 1 42 1 163 1 52 1 207 2 301 4 129 1 131 1 19 9 171 1 174 6 133 1 68 1 180 1 109 3 142 5 269 2 267 2 74 2 273 2 222 2 82 1 
160 1 35 1 230 10 195 2 232 1 287 1 119 1 42 1 163 1 52 1 207 2 301 5 129 1 131 1 19 10 171 1 174 7 133 1 68 1 180 1 109 4 142 6 269 2 267 2 74 2 273 2 222 2 82 1 
160 1 35 1 230 7 195 2 232 1 287 1 119 1 42 1 52 1 207 2 301 3 129 1 131 1 19 7 171 1 174 4 133 1 68 1 180 1 109 2 142 4 269 2 267 2 74 2 273 1 222 2 82 1 
160 1 195 1 230 4 68 1 232 1 119 1 109 1 142 3 163 1 267 1 269 1 74 1 273 2 207 1 301 2 131 1 19 4 174 3 
133 1 191 1 230 2 195 1 68 1 232 1 215 1 180 1 142 1 94 1 267 1 74 1 207 1 222 1 131 1 19 2 
230 3 68 1 232 1 109 1 142 2 74 2 207 2 222 1 301 1 131 1 19 3 171 1 174 1 
160 1 230 9 195 1 232 1 287 1 119 1 163 1 207 2 301 4 129 1 131 1 171 1 19 9 174 7 68 1 109 3 142 5 73 1 269 1 267 1 74 2 273 2 222 1 80 1 
160 1 230 9 195 1 232 1 287 1 119 1 163 1 207 2 301 4 129 1 131 1 171 1 19 9 174 7 68 1 109 3 142 5 73 1 269 1 267 1 74 2 273 2 222 1 80 1 
297 1 141 1 93 1 
297 1 40 2 330 1 
69 1 153 1 58 1 
69 1 153 1 72 1 58 1 
69 1 3 1 153 1 58 1 
285 1 194 1 197 1 261 1 141 1 292 1 297 1 51 1 150 1 100 1 79 1 62 1 158 1 254 1 
153 1 58 1 
75 1 15 1 100 1 292 1 43 1 
297 1 117 1 15 1 100 2 314 1 141 1 292 2 43 1 
100 1 292 1 43 1 
15 1 69 1 3 1 153 1 100 1 292 1 212 1 58 1 
297 1 
297 1 15 1 100 2 314 1 56 1 141 1 292 2 43 1 
255 1 260 1 24 2 314 1 141 1 292 5 201 2 43 2 293 1 184 1 297 1 272 1 15 2 28 1 100 5 209 2 126 1 224 1 18 1 
323 1 21 1 
323 1 21 1 
243 1 281 1 
243 1 281 1 
323 1 243 1 21 1 281 1 
323 1 71 1 21 1 
243 1 323 1 21 1 281 1 
205 1 323 1 21 1 
323 1 71 1 21 1 
323 1 71 1 21 1 
323 1 7 1 21 1 
323 1 7 1 21 1 
323 1 7 1 21 1 
308 2 309 2 39 3 234 2 235 1 290 2 292 2 200 1 294 1 239 1 219 2 297 1 271 1 151 1 323 2 100 2 21 2 103 1 84 1 
309 1 308 1 39 1 323 1 153 1 234 1 100 1 290 1 292 1 21 1 239 1 
195 1 267 1 269 1 
191 1 195 1 267 1 
191 1 91 1 17 1 181 1 269 2 267 3 
191 1 38 1 91 1 17 1 269 1 267 2 
191 1 17 1 91 2 269 1 267 2 
36 1 233 1 40 3 236 1 292 5 237 1 201 1 43 1 162 1 293 1 121 1 12 1 297 2 15 4 100 5 209 1 18 3 104 1 65 1 177 1 24 1 314 1 141 1 266 1 315 2 184 2 319 2 275 1 188 1 225 1 190 2 330 1 
36 2 87 1 86 5 40 9 292 9 237 3 43 6 201 2 293 1 121 3 12 3 49 1 297 5 15 7 100 9 209 2 248 1 18 8 132 1 104 3 65 4 178 1 24 2 314 1 141 1 184 6 319 6 75 5 322 1 275 1 224 1 188 2 225 3 190 6 330 3 
36 1 40 4 236 1 292 3 237 1 201 1 12 1 121 1 297 3 15 2 100 3 209 1 18 3 104 1 65 1 24 1 141 1 266 1 315 1 184 2 319 2 224 1 188 1 225 1 190 2 330 2 
36 1 87 1 40 7 236 1 292 4 237 2 201 1 12 2 121 2 49 1 297 4 15 3 100 4 209 1 248 1 18 5 104 2 65 2 24 1 141 1 266 1 315 2 184 4 319 4 224 1 188 1 225 2 190 4 330 3 
257 1 318 1 53 1 77 1 93 1 
149 1 53 1 
96 1 
53 1 300 1 
77 2 53 3 300 1 101 1 218 1 251 1 
53 1 300 1 101 1 
76 1 53 1 
104 1 229 4 1 3 85 1 66 1 198 1 216 1 217 1 121 1 11 3 270 1 48 2 99 1 299 1 16 2 20 1 102 7 
104 1 229 4 1 3 85 1 66 1 198 1 216 1 217 1 121 1 11 3 270 1 48 2 99 1 299 1 16 2 20 1 102 7 
104 1 229 4 1 3 85 1 66 1 198 1 216 1 217 1 121 1 11 3 270 1 48 2 99 1 299 1 54 1 16 2 20 1 102 7 
104 1 229 7 284 1 1 4 198 2 216 1 237 1 217 1 11 2 121 2 12 2 48 1 242 1 16 1 186 1 32 1 245 2 225 2 249 1 102 11 252 2 
229 5 1 4 85 1 231 4 198 1 199 2 121 1 11 4 95 1 98 1 48 3 14 2 99 1 299 1 16 2 172 2 102 9 104 1 66 1 216 1 140 1 217 1 270 1 280 2 
0 1 191 1 195 1 230 2 116 1 232 1 118 1 89 1 161 1 90 1 206 2 207 1 131 1 19 2 304 1 305 1 174 1 64 1 22 1 105 1 68 1 181 1 142 1 269 1 267 2 146 1 74 1 27 1 222 1 279 2 157 2 
0 1 191 1 195 1 230 3 232 1 118 1 196 1 89 1 5 1 161 1 90 1 165 1 206 1 207 1 131 1 19 3 304 1 305 1 174 2 64 1 22 1 105 1 181 1 142 1 269 1 267 2 74 1 222 1 279 1 157 1 
0 1 191 1 230 2 195 1 232 1 118 1 196 1 89 1 161 1 90 1 165 1 206 1 131 1 19 2 305 1 174 2 22 1 105 1 181 1 142 1 267 2 269 1 222 1 279 1 157 1 
105 2 230 1 311 1 118 2 5 1 313 1 90 2 74 1 206 1 222 2 207 1 210 1 247 1 170 1 19 1 279 1 157 1 
0 1 191 1 195 1 230 1 116 1 118 1 89 1 161 1 90 1 165 1 206 1 207 1 19 1 304 1 305 1 64 1 22 1 105 1 68 1 181 1 269 1 267 2 74 1 222 1 279 1 157 1 
182 1 
0 1 161 1 8 1 9 1 97 2 100 5 18 2 254 1 106 2 259 2 24 1 261 1 110 2 184 2 25 1 188 1 30 1 33 1 279 2 112 4 192 1 285 1 37 1 194 1 197 1 40 2 292 5 43 6 201 1 293 1 202 1 297 2 206 2 51 1 53 1 125 2 300 1 209 1 127 1 60 2 62 1 310 2 313 2 314 3 137 1 141 1 321 1 150 1 79 1 157 2 156 1 330 2 329 1 158 1 83 1 
285 1 194 1 197 1 8 1 9 1 292 3 43 2 51 1 100 3 56 1 62 1 254 1 310 1 261 1 314 1 137 1 25 1 321 1 150 1 79 1 112 2 158 1 
285 1 194 1 197 1 8 1 9 1 292 3 43 1 297 1 51 1 100 3 56 1 62 1 254 1 261 1 314 1 137 1 141 1 110 1 25 1 321 1 150 1 79 1 112 3 158 1 
285 1 194 1 197 1 8 1 9 1 292 3 43 2 297 1 51 1 100 3 56 1 60 1 62 1 254 1 310 1 261 1 314 1 137 1 141 1 110 1 25 1 321 1 150 1 79 1 112 3 158 1 
8 1 9 1 97 2 100 5 168 1 18 1 254 1 106 2 259 2 261 1 24 1 110 4 184 1 25 1 112 6 285 1 194 1 37 1 197 1 292 5 43 7 201 1 293 1 297 5 51 1 125 2 209 1 56 1 57 1 60 4 62 1 310 4 214 1 314 3 137 1 141 5 321 1 150 1 324 1 155 1 79 1 156 1 158 1 330 2 
192 1 285 1 37 1 194 1 197 1 40 2 8 1 9 1 292 4 43 4 201 1 293 1 97 2 297 2 51 1 125 2 100 4 209 1 18 1 60 2 62 1 254 1 106 2 310 2 259 2 261 1 24 1 314 2 137 1 141 1 110 2 184 1 25 1 321 1 150 1 79 1 112 4 156 1 330 2 158 1 
285 1 37 1 194 1 197 1 8 1 9 1 292 4 43 4 201 1 293 1 97 2 297 1 51 1 125 2 100 4 209 1 57 1 168 1 18 1 60 2 62 1 254 1 106 2 310 2 214 1 259 2 24 1 261 1 314 2 137 1 141 1 110 2 184 1 25 1 321 1 150 1 79 1 156 1 112 4 330 2 158 1 
285 1 37 1 194 1 197 1 8 1 9 1 292 4 43 4 201 1 293 1 97 2 297 1 51 1 125 2 100 4 209 1 57 1 168 1 18 1 60 2 62 1 254 1 106 2 310 2 214 1 259 2 24 1 261 1 314 2 137 1 141 1 110 2 184 1 25 1 321 1 150 1 79 1 156 1 112 4 330 2 158 1 
285 1 193 2 37 1 194 1 197 1 40 2 8 1 9 1 292 4 43 4 201 1 293 1 297 1 51 1 125 2 100 4 244 1 209 1 18 1 60 2 62 1 254 1 310 2 258 2 214 1 259 2 24 1 261 1 314 2 137 1 141 1 110 2 184 1 25 1 321 1 150 1 152 1 78 1 79 1 112 4 158 1 
285 1 37 1 194 1 197 1 8 1 9 1 292 4 201 1 43 5 293 1 97 2 297 1 51 1 125 2 100 4 209 1 168 1 57 1 18 1 60 3 62 1 254 1 106 2 214 1 310 3 259 2 24 1 261 1 314 2 137 1 141 1 110 3 184 1 25 1 321 1 150 1 324 1 79 1 156 1 112 5 330 2 158 1 
285 1 37 1 194 1 197 1 8 1 9 1 292 4 201 1 43 5 293 1 97 2 297 1 51 1 125 2 100 4 209 1 168 1 57 1 18 1 60 3 62 1 254 1 106 2 214 1 310 3 259 2 24 1 261 1 314 2 137 1 141 1 110 3 184 1 25 1 321 1 150 1 324 1 79 1 156 1 112 5 330 2 158 1 
192 1 285 1 193 2 37 1 194 1 197 1 40 2 8 1 9 1 292 4 43 4 201 1 293 1 297 1 51 1 125 2 100 4 209 1 18 1 60 2 62 1 254 1 310 2 258 2 259 2 261 1 24 1 314 2 137 1 141 1 110 2 184 1 25 1 321 1 150 1 78 1 79 1 112 4 158 1 
229 22 284 2 114 1 1 22 85 1 231 6 289 1 199 3 237 4 44 1 12 5 121 6 11 8 122 1 203 1 95 1 48 4 99 1 14 3 241 1 242 3 299 1 16 1 245 5 128 2 250 1 172 3 102 44 252 3 63 1 256 1 104 5 66 1 262 1 140 1 217 4 270 1 220 1 317 1 148 1 325 4 225 5 280 3 
229 22 284 2 114 1 1 21 85 1 231 8 289 1 199 4 237 4 44 1 12 5 121 6 11 8 122 1 203 1 95 1 48 5 99 1 14 4 241 1 242 3 299 1 16 1 245 5 128 2 250 1 172 4 102 43 252 3 63 1 256 1 104 5 66 1 262 1 140 2 217 3 270 1 220 1 317 1 148 1 325 4 225 5 280 4 
229 27 284 2 1 26 85 1 231 6 289 1 199 3 237 7 44 1 12 7 121 8 11 15 122 1 203 1 95 1 48 8 99 1 14 3 242 2 299 1 16 1 245 4 128 1 250 1 130 2 172 3 102 53 252 4 63 1 256 1 104 8 66 1 262 1 140 2 217 7 270 1 220 1 317 1 148 1 325 4 225 7 280 3 
229 9 284 1 1 10 231 4 199 2 237 3 44 2 12 3 121 3 11 6 203 1 95 1 48 3 14 2 241 1 242 1 245 2 128 1 250 1 172 2 102 19 252 1 63 1 256 1 104 3 23 1 217 3 325 2 225 3 280 2 
229 14 1 12 231 6 289 1 199 3 237 2 44 1 11 4 12 3 121 3 203 2 95 1 122 1 48 2 14 3 242 2 245 2 128 2 250 1 172 3 102 26 252 2 63 1 104 2 256 1 262 1 140 2 217 2 220 1 317 1 148 1 325 4 225 3 280 3 
309 1 308 1 221 1 151 1 323 1 234 1 290 1 21 1 103 1 294 1 
205 1 331 1 
286 1 309 1 308 1 298 1 323 1 234 1 290 1 59 1 21 1 
308 1 309 1 39 2 234 1 235 1 292 1 290 1 200 1 294 1 239 1 219 1 297 1 271 1 151 1 323 1 100 1 21 1 103 1 
308 1 309 1 39 2 234 1 235 1 292 1 290 1 200 1 294 1 239 1 219 1 297 1 271 1 151 1 323 1 100 1 21 1 103 1 
308 1 309 1 39 2 234 1 235 1 292 1 290 1 200 1 294 1 239 1 219 1 297 1 271 1 151 1 323 1 100 1 21 1 103 1 
2 1 135 1 71 1 
2 1 135 1 71 1 
213 1 7 1 
213 1 135 1 7 1 
88 1 55 1 
65 1 177 1 308 1 309 1 39 1 88 1 234 1 290 1 292 1 200 1 162 1 219 1 164 1 205 1 147 1 15 1 323 1 153 1 100 1 55 1 21 1 331 1 
2 1 71 1 
213 1 135 1 7 1 
0 1 113 1 229 1 1 1 194 2 231 2 161 1 199 1 45 1 10 1 14 1 206 2 53 1 300 1 172 1 306 1 62 2 102 2 307 1 134 1 179 1 108 1 263 1 27 2 154 1 79 2 226 1 279 2 157 2 280 1 228 1 
191 1 0 1 22 1 195 1 89 1 161 1 90 1 181 1 265 1 269 1 267 2 146 1 165 1 204 1 206 2 277 1 279 2 304 1 157 2 
191 1 22 1 0 1 195 1 70 1 89 1 161 1 90 1 181 1 265 1 269 1 267 2 165 1 206 1 279 1 304 1 157 1 
204 1 206 1 311 1 313 1 90 1 246 1 279 1 157 1 
191 1 22 1 0 1 195 1 89 1 161 1 90 1 181 1 265 1 269 1 267 2 165 1 204 1 206 1 277 1 279 1 304 1 157 1 
291 1 
184 1 255 1 297 1 272 1 141 1 18 1 93 1 
40 1 292 1 201 1 43 1 293 1 97 1 297 2 100 1 209 1 18 1 106 1 24 1 314 1 141 1 184 1 156 1 330 1 
0 3 161 4 237 2 92 2 12 2 100 5 101 3 18 9 251 1 255 1 104 2 24 4 183 1 184 8 185 1 272 1 31 1 188 2 111 2 189 2 279 3 190 6 40 12 292 5 201 4 43 5 293 4 121 2 47 2 297 8 50 2 206 3 123 2 53 10 300 3 209 4 211 2 313 1 314 3 141 2 139 1 146 1 319 6 320 2 76 2 149 3 77 2 225 2 157 3 81 1 328 2 329 1 158 2 330 6 
40 6 289 1 292 1 43 1 201 2 237 2 46 1 92 2 293 2 12 2 121 2 122 1 297 5 242 1 100 1 209 2 211 1 245 1 18 8 252 1 104 2 24 2 314 1 262 1 141 2 220 1 317 1 184 5 319 5 26 1 188 1 225 2 190 5 329 1 330 3 
104 1 85 1 115 1 66 1 69 1 3 1 24 1 292 1 201 1 293 1 92 2 121 1 184 1 99 1 153 1 100 1 209 1 168 1 212 1 18 2 58 1 
255 1 24 1 141 1 201 1 293 1 184 1 297 1 272 1 209 1 18 1 
104 2 40 10 237 2 92 2 12 2 121 2 184 5 319 5 297 5 211 1 225 2 18 5 190 5 328 1 330 5 
297 1 100 1 314 1 141 1 292 1 43 1 
0 2 288 1 161 3 292 3 201 2 43 4 293 1 202 1 13 1 206 4 53 2 300 2 100 3 166 1 209 2 101 1 18 2 313 2 24 2 136 1 314 2 264 1 184 2 185 1 31 2 224 1 30 1 188 2 327 1 279 4 33 1 157 4 329 2 83 1 
69 1 153 1 72 1 58 1 
40 4 24 1 141 2 201 1 293 1 184 2 319 2 297 4 16 1 209 1 188 1 18 1 190 2 330 2 329 1 
309 1 124 1 234 1 
309 1 88 1 274 1 234 1 103 1 
309 1 124 1 234 1 
309 1 124 1 234 1 
309 1 326 1 234 1 
309 1 326 1 234 1 
309 1 326 1 234 1 
309 1 234 1 
323 1 21 1 
229 6 284 1 1 5 85 1 231 2 289 1 199 1 11 2 12 1 121 2 95 1 48 2 99 1 14 1 242 1 299 1 16 1 245 2 172 1 252 1 102 11 104 1 66 1 270 1 225 1 280 1 
229 6 284 1 1 5 85 1 231 4 289 1 199 2 41 1 12 1 121 2 11 3 95 1 48 2 99 1 14 2 242 1 299 1 16 1 245 2 172 2 102 11 252 1 104 1 66 1 217 1 270 1 225 1 280 2 
229 9 1 10 85 1 231 6 289 1 41 1 199 3 237 2 12 2 121 3 11 4 95 1 122 1 48 3 99 1 14 3 242 1 299 1 16 1 245 1 172 3 252 1 102 19 104 3 66 1 262 1 140 1 217 1 270 1 220 1 317 1 225 2 280 3 
229 7 1 5 231 8 289 1 41 1 199 4 237 1 12 2 121 2 11 3 95 1 122 1 48 2 14 4 242 1 245 1 172 4 252 1 102 12 104 1 262 1 140 2 217 1 220 1 317 1 225 2 280 4 
229 6 284 1 1 5 85 1 231 2 289 1 199 1 11 2 12 1 121 2 95 1 48 2 99 1 14 1 242 1 299 1 16 1 245 2 172 1 252 1 102 11 104 1 66 1 270 1 225 1 280 1 
229 6 1 7 231 4 289 1 199 2 237 2 12 2 121 2 11 3 95 1 122 1 48 2 14 2 242 1 245 1 172 2 252 1 102 13 104 2 262 1 140 1 217 1 220 1 317 1 225 2 280 2 
229 10 1 8 85 1 231 8 289 1 41 1 199 4 237 1 12 2 121 3 11 5 95 1 122 1 48 3 99 1 14 4 242 1 299 1 16 1 245 1 172 4 102 18 252 1 104 2 66 1 262 1 140 2 217 2 270 1 220 1 317 1 225 2 280 4 
229 9 1 7 231 8 289 1 199 4 237 2 12 3 121 3 11 6 95 1 122 1 48 3 14 4 242 1 241 1 245 1 172 4 102 16 252 1 104 2 262 1 140 2 217 3 220 1 317 1 225 3 280 4 
104 1 229 3 1 4 85 1 66 3 217 3 11 6 121 1 270 2 48 3 99 3 299 1 102 7 
229 10 1 8 85 1 231 8 289 1 199 4 237 1 12 2 121 3 11 4 95 1 122 1 48 3 99 1 14 4 242 1 241 1 299 1 16 1 245 1 172 4 102 18 252 1 104 2 66 1 262 1 140 2 217 1 270 1 220 1 317 1 225 2 280 4 
104 1 229 4 1 4 85 1 66 1 231 4 199 2 140 1 217 1 121 1 11 3 270 1 48 2 14 2 99 1 299 1 16 1 172 2 280 2 102 8 
104 1 229 3 48 2 1 3 85 1 99 1 66 1 299 1 16 1 93 1 121 1 11 2 102 6 270 1 
104 1 229 2 1 2 231 2 41 1 199 1 237 1 217 1 11 2 12 1 121 1 48 1 14 1 225 1 172 1 280 1 102 4 
104 1 229 3 284 1 1 4 237 1 217 1 12 1 121 1 11 2 48 1 242 1 245 2 225 1 102 7 252 1 
284 1 229 11 1 12 85 1 231 4 199 2 237 2 11 9 121 3 12 2 48 5 99 2 14 2 299 1 16 1 245 2 302 1 130 1 172 2 252 2 102 23 104 3 66 2 138 1 140 2 217 4 270 1 225 2 280 2 
1 1 245 1 102 1 
229 1 102 1 252 1 
229 3 104 1 1 3 231 2 199 1 41 1 237 1 217 1 12 1 121 1 11 3 48 2 14 1 225 1 172 1 280 1 328 1 102 6 
229 6 1 7 231 4 289 1 199 2 237 2 12 2 121 2 11 3 95 1 122 1 48 2 14 2 242 1 245 1 172 2 252 1 102 13 104 2 262 1 140 1 217 1 220 1 317 1 225 2 280 2 
229 3 104 1 1 3 85 1 66 1 217 1 121 1 11 2 48 1 99 1 102 6 
229 1 1 2 66 1 231 2 138 1 140 1 199 1 217 1 11 2 270 1 48 1 99 1 14 1 299 1 172 1 280 1 102 3 
229 5 104 2 1 5 115 1 85 1 66 2 231 2 199 1 217 2 11 5 121 2 95 1 48 3 14 1 99 2 172 1 280 1 102 10 
229 2 231 2 199 1 217 1 121 1 11 1 95 1 14 1 225 1 172 1 280 1 102 2 
104 1 229 2 1 2 231 2 199 1 237 1 217 1 11 2 12 1 121 1 95 1 48 1 14 1 225 1 172 1 280 1 102 4 
229 1 1 2 66 1 231 6 138 1 140 1 199 3 217 1 11 2 95 1 48 1 14 3 99 1 241 1 172 3 280 3 102 3 
284 1 229 6 1 2 231 6 199 3 41 1 121 2 12 2 95 1 14 3 241 1 242 1 32 1 245 2 225 2 249 1 172 3 280 3 252 2 102 8 
194 1 51 1 167 1 79 1 62 1 144 1 282 1 
194 1 67 1 144 1 295 1 145 1 296 1 51 1 208 1 167 1 79 1 62 1 282 1 
0 1 206 1 53 1 161 1 300 1 313 1 33 1 279 1 93 1 157 1 83 1 
153 1 253 1 
153 1 253 1 
153 1 253 1 
69 1 3 1 292 1 141 1 297 1 206 1 149 1 53 1 153 1 100 1 31 1 212 1 279 1 58 1 157 1 34 1 
0 1 313 1 161 1 141 1 292 2 43 1 240 1 47 1 297 1 76 1 320 1 206 3 149 1 53 4 77 1 300 1 100 2 101 1 31 1 279 3 157 3 158 1 
0 1 206 1 161 1 223 1 279 1 157 1 
0 2 176 1 107 1 313 2 161 3 263 1 316 1 146 1 165 1 13 1 27 1 206 7 53 3 223 1 300 2 101 1 327 1 279 6 173 1 157 7 251 1 
153 1 253 1 
292 3 201 2 43 2 293 2 297 1 15 1 206 1 123 1 53 2 100 3 209 2 18 1 255 1 313 1 24 2 314 1 141 1 184 1 185 1 272 1 320 1 149 1 77 1 111 1 279 1 189 1 157 1 158 1 
0 1 161 2 146 1 206 2 77 1 53 2 223 1 300 1 101 1 279 2 157 2 81 1 251 1 
0 1 161 1 313 1 240 1 146 1 206 4 53 1 300 1 279 4 33 1 157 4 61 1 83 1 
0 1 161 2 136 1 264 1 13 1 206 2 53 1 300 1 31 1 101 1 327 1 278 1 279 2 157 2 
191 1 0 1 22 1 195 1 206 1 161 1 313 1 279 1 157 1 267 1 
0 1 161 1 263 1 45 1 146 1 165 1 206 2 53 1 300 1 279 2 157 2 
0 2 176 1 313 1 161 2 263 1 146 1 206 5 53 3 300 2 31 1 33 1 279 4 173 1 157 5 61 1 83 1 
0 2 313 1 4 1 161 3 136 1 263 1 264 1 146 1 13 1 206 2 53 2 300 2 101 1 327 1 33 1 279 2 157 2 
153 1 253 1 
0 1 161 2 316 1 13 1 206 1 53 1 300 1 31 1 101 1 327 1 279 1 157 1 251 1 
232 1 131 1 142 1 93 1 
74 1 230 1 232 1 207 1 131 1 19 1 142 1 
105 1 230 1 222 1 
133 2 74 1 230 3 68 1 232 1 207 1 312 1 276 1 131 1 19 3 142 1 283 1 
74 1 230 2 273 1 232 1 207 1 131 1 19 2 142 1 174 1 
160 1 74 1 195 1 230 1 68 1 207 1 301 1 19 1 142 1 267 1 269 1 
74 1 230 1 68 1 207 1 131 1 19 1 142 1 
74 1 230 1 68 1 232 1 207 1 131 2 19 1 
74 1 175 1 230 1 68 1 207 1 169 1 19 1 
230 3 68 1 232 1 287 1 109 1 142 2 74 1 207 1 301 1 129 1 131 1 19 3 174 2 
191 1 230 2 195 1 68 1 232 1 6 1 181 1 142 1 267 2 269 1 74 1 207 1 131 1 19 2 174 1 
230 4 68 1 232 1 109 1 142 2 163 1 74 2 273 1 207 2 301 1 131 1 19 4 174 2 
74 1 230 1 68 1 232 1 207 1 131 1 19 1 142 1 
133 1 230 4 232 2 312 1 109 1 142 3 74 1 207 1 301 1 29 1 276 1 131 2 19 4 174 2 
230 2 68 1 232 1 142 1 143 1 238 1 73 1 74 1 207 1 131 1 19 2 174 1 
133 2 230 3 68 1 232 1 312 2 142 1 74 1 207 1 276 1 19 3 131 1 227 1 
159 1 187 1 142 2 268 2 
74 1 230 1 68 1 207 1 120 1 19 1 
74 1 230 2 68 1 232 1 207 1 129 1 131 1 19 2 142 1 174 1 
303 1 
74 1 230 1 68 1 232 1 207 1 131 1 19 1 142 1 
133 1 74 1 230 3 68 1 232 1 207 1 129 1 131 1 19 3 142 1 174 1 
301 1 29 1 109 1 142 1 
131 1 142 1 

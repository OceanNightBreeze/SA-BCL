#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 41 341 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (109,359) (109,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (52,245,258) (52,245,258) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (52,245,258) (52,245,258) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (52,245,258) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (52,245,258) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 130 346 305 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 130 346 305 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 35 330 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 355 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 355 97 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 130 346 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 74 130 346 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 74 130 268 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 220 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 35 330 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 260 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 201 48 345 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 41 341 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 220 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1280 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
249 3 250 2 115 1 15 1 270 1 110 1 284 2 313 1 312 1 98 1 56 1 72 2 222 3 
75 1 238 1 4 1 108 1 110 1 270 1 135 1 222 7 249 7 250 3 277 1 115 2 12 1 91 1 51 1 69 1 15 3 284 2 313 1 312 1 148 1 98 5 56 1 72 2 
75 1 238 1 4 1 108 1 110 1 270 1 135 1 222 7 249 7 250 3 277 1 115 2 12 1 91 1 51 1 69 1 15 3 284 2 313 1 312 1 148 1 98 5 56 1 72 2 
75 1 238 1 4 2 108 2 270 1 110 2 135 1 222 7 249 7 250 3 277 1 12 1 115 2 141 1 224 1 69 2 227 1 122 1 15 3 335 1 284 2 313 1 312 1 148 1 98 4 56 1 72 2 36 1 
75 1 238 1 4 2 108 2 270 1 110 2 135 1 222 7 249 7 250 3 277 1 12 1 115 2 141 1 224 1 69 2 227 1 122 1 15 3 335 1 284 2 313 1 312 1 148 1 98 4 56 1 72 2 36 1 
75 1 238 1 4 2 108 2 270 1 110 2 135 1 222 7 249 7 250 3 277 1 12 1 115 2 141 1 224 1 69 2 227 1 122 1 15 3 335 1 284 2 313 1 312 1 148 1 98 4 56 1 72 2 36 1 
75 1 238 1 4 2 108 2 270 1 110 2 222 7 249 7 250 4 277 1 12 1 115 2 141 1 224 1 69 2 227 1 122 1 15 3 335 1 284 2 313 1 312 1 148 1 98 4 56 1 72 2 36 1 
249 2 75 1 238 1 250 1 12 1 4 1 69 1 15 1 108 1 270 1 284 1 135 1 313 1 312 1 98 1 72 1 222 2 
249 2 113 1 250 1 141 1 4 1 108 1 270 1 110 1 284 1 313 1 312 1 72 1 222 2 150 1 248 1 36 1 
287 1 128 1 194 1 239 1 255 1 25 1 156 1 228 1 186 1 308 1 360 1 189 1 273 1 20 1 
132 1 
287 1 128 1 239 1 194 1 132 1 25 1 156 1 241 1 273 1 255 1 164 1 228 1 208 1 167 1 186 1 308 1 360 1 189 1 20 1 
128 1 287 1 194 1 239 1 261 1 263 2 290 2 25 1 132 1 341 1 292 1 156 1 241 2 41 1 80 1 269 1 7 2 273 1 327 1 112 1 117 1 89 1 255 1 256 2 164 1 331 2 228 1 184 2 186 4 167 1 308 2 360 1 310 1 311 4 189 1 192 5 20 4 170 1 
220 1 132 1 164 1 
33 1 132 1 366 2 
128 2 239 2 255 2 189 2 25 2 291 1 156 2 228 1 
128 2 193 1 22 2 239 2 79 2 2 1 195 1 59 1 175 1 25 2 291 1 177 2 196 1 26 1 156 2 60 1 197 1 246 2 111 1 274 1 353 1 202 2 118 1 139 1 255 3 119 1 206 1 228 1 143 1 70 1 231 1 259 1 147 1 55 1 189 3 364 1 58 1 
128 1 194 1 239 1 360 1 255 1 189 1 25 1 273 1 156 1 228 1 
172 1 251 1 194 1 255 1 132 1 164 1 156 1 16 1 186 1 144 1 32 1 243 1 189 1 20 1 
128 1 172 1 239 1 251 1 194 1 255 1 132 1 25 1 164 1 156 1 186 2 144 1 243 1 189 1 20 2 
186 1 53 1 308 1 241 1 20 1 
287 1 128 1 239 1 194 1 132 1 25 1 156 1 241 1 273 1 255 1 164 1 228 1 167 1 186 1 308 1 360 1 363 1 189 1 20 1 
186 1 241 1 20 1 
239 1 79 1 2 1 195 1 139 1 59 1 119 1 255 2 25 1 177 1 60 1 156 1 70 1 347 1 325 1 246 1 189 2 364 1 160 1 58 1 
1 1 128 1 239 1 255 2 25 1 291 2 156 2 189 2 85 1 
30 1 347 1 320 1 
79 1 195 1 2 1 255 1 119 1 59 1 139 1 291 1 177 1 60 1 70 1 246 1 189 1 364 1 338 1 58 1 
220 1 291 1 
128 1 239 3 325 1 255 3 189 3 25 3 291 1 156 3 
194 1 239 1 255 1 189 1 25 1 273 1 156 1 
1 1 128 1 194 1 239 1 255 1 189 1 25 1 156 1 85 1 
128 2 22 1 172 1 23 1 239 3 194 1 79 1 2 1 195 1 59 1 175 1 25 3 291 1 196 1 177 1 26 1 60 1 156 3 243 1 197 1 325 1 246 1 160 1 111 1 353 1 85 1 202 2 251 1 279 1 139 1 119 1 255 4 206 1 228 1 70 1 231 1 259 1 186 1 144 1 147 1 364 1 189 4 58 1 20 1 
16 1 239 1 325 1 215 1 255 2 189 2 25 1 291 1 156 2 
128 1 23 1 172 1 194 1 239 3 251 1 255 3 132 1 25 3 156 3 186 1 144 1 243 1 94 1 325 2 189 3 160 1 20 1 85 1 
128 1 30 1 239 2 255 2 25 2 156 2 347 1 325 1 189 2 85 1 
79 1 195 1 2 1 255 1 119 1 59 1 139 1 291 1 177 1 60 1 70 1 246 1 189 1 364 1 58 1 
79 1 90 1 195 1 2 1 255 1 59 1 139 1 291 1 177 1 60 1 70 1 246 1 189 1 44 1 58 1 
22 4 77 1 38 1 320 2 290 1 175 1 26 1 323 1 347 2 197 1 134 1 111 2 353 1 202 2 30 2 253 1 280 1 206 1 121 1 184 1 96 1 34 1 147 1 55 2 
194 1 251 1 239 1 255 1 189 1 25 1 156 1 282 1 
128 1 194 1 239 4 328 1 255 4 25 4 291 1 156 4 325 2 233 1 189 4 19 1 160 1 85 1 
194 1 239 2 255 2 189 2 25 2 273 1 156 2 282 1 
127 1 37 2 242 1 153 1 8 1 356 2 
37 1 356 1 45 1 
37 1 356 1 
37 1 356 1 
127 1 153 1 
127 1 153 1 
127 1 153 1 
37 1 125 1 356 1 
37 1 125 1 356 1 
37 1 125 1 356 1 
37 1 332 1 356 1 
37 1 332 1 356 1 
37 1 332 1 356 1 
37 2 87 1 262 1 289 3 173 2 155 1 132 1 133 2 322 1 257 2 356 2 92 1 28 2 186 2 242 1 324 1 81 2 296 1 20 2 
37 1 239 2 213 1 289 1 173 1 255 2 25 2 291 1 165 1 156 2 257 1 303 1 356 1 157 1 333 1 28 1 186 1 324 1 81 1 337 1 189 2 45 1 20 1 354 1 
101 2 108 2 302 1 69 1 150 1 
108 1 4 1 69 1 
108 1 4 1 150 1 
101 1 108 3 302 1 18 1 69 2 150 1 
101 1 108 2 302 1 69 1 150 1 152 1 
0 2 318 1 103 1 263 1 290 1 132 1 342 1 323 1 344 1 272 1 7 1 351 1 352 1 354 1 66 1 256 1 164 1 303 1 357 1 184 1 186 4 308 4 34 1 310 1 311 3 337 1 192 1 366 1 20 4 
318 6 263 2 290 3 132 5 241 5 323 3 344 2 7 2 351 2 352 3 299 1 46 5 114 1 66 1 252 1 256 2 164 1 304 1 303 4 357 6 184 3 186 8 53 5 308 7 232 1 34 3 33 3 310 1 336 1 311 8 192 6 366 9 20 8 170 1 
0 1 318 2 263 1 290 1 132 3 342 1 323 1 344 1 272 1 7 1 351 1 352 1 256 1 164 1 303 1 357 2 184 1 186 3 308 2 34 1 33 2 311 3 192 2 366 4 20 3 170 1 
0 2 318 4 263 1 290 2 132 4 342 1 323 2 344 1 272 1 7 1 351 1 352 2 256 1 164 1 304 1 303 2 357 4 184 2 186 4 308 3 232 1 34 2 33 3 336 1 311 5 192 4 366 7 20 4 170 1 
226 1 
220 1 131 1 58 1 
286 1 58 1 
139 1 58 1 
2 1 154 1 139 1 131 2 58 3 183 1 
2 1 139 1 58 1 
294 1 58 1 
22 8 77 5 319 1 104 1 290 1 341 1 41 2 350 2 111 2 327 2 276 1 138 1 117 2 121 4 229 1 184 3 17 1 55 6 236 1 
22 23 77 6 288 1 319 2 290 3 26 2 106 1 323 3 350 1 221 1 297 1 111 12 65 4 199 2 327 1 352 3 353 2 276 1 202 4 117 1 278 1 49 1 206 2 50 3 121 2 229 1 184 3 17 4 362 1 34 3 147 2 55 11 
22 10 77 7 319 1 104 1 290 1 341 1 26 2 41 2 244 1 350 2 111 3 199 1 327 2 353 2 138 1 202 4 117 2 223 1 206 2 121 5 229 1 184 3 17 2 147 2 55 7 
22 8 77 5 319 1 104 1 290 1 341 1 41 2 350 2 111 2 327 2 276 1 138 1 117 2 121 4 229 1 184 3 17 1 55 6 
22 8 77 7 319 1 104 1 290 1 341 1 41 2 350 2 111 2 327 2 276 1 138 1 117 2 121 4 229 1 184 3 17 3 55 6 
249 1 79 1 116 1 195 1 177 1 109 1 110 2 359 1 284 1 246 1 285 2 190 1 72 1 222 1 
249 1 110 1 284 1 79 1 312 1 245 1 285 1 246 1 177 1 72 1 222 1 52 1 211 1 
179 1 249 1 110 1 284 1 79 1 312 1 245 1 285 1 246 1 177 1 72 1 222 1 52 1 
249 2 110 1 11 1 284 1 79 1 285 1 246 1 98 1 177 1 190 1 72 1 222 2 52 1 211 1 
249 1 110 1 11 1 79 1 285 1 246 1 98 1 177 1 258 1 222 1 211 1 
166 1 
212 1 172 1 194 1 340 4 39 1 263 1 264 1 130 1 174 2 156 1 241 3 107 1 346 1 243 1 7 1 82 1 355 2 251 1 47 1 255 1 120 1 256 1 182 2 225 2 305 1 167 1 16 1 186 2 144 1 32 1 95 1 33 1 310 1 311 1 97 2 189 1 192 1 74 1 20 2 151 2 
212 1 172 1 194 1 340 4 39 1 263 1 264 1 130 1 174 2 156 1 241 3 107 1 346 1 243 1 7 1 82 1 355 2 251 1 47 1 255 1 120 1 256 1 182 2 225 2 305 1 167 1 16 1 186 2 144 1 32 1 95 1 33 1 310 1 311 1 97 2 189 1 192 1 74 1 20 2 151 2 
212 1 172 1 194 1 340 3 263 1 264 1 174 1 156 1 241 2 243 1 7 1 355 1 251 1 47 1 120 1 255 1 256 1 225 2 93 1 167 1 306 1 186 2 16 1 145 2 144 1 32 1 95 1 310 1 311 1 97 1 189 1 192 1 74 1 366 1 20 2 151 2 317 1 
263 1 79 1 195 1 256 1 177 1 330 1 241 2 344 1 167 1 186 1 310 1 311 1 35 1 7 1 246 1 192 1 237 1 20 1 
355 1 212 1 172 1 340 2 194 1 251 1 47 1 264 1 120 1 255 1 156 1 241 2 208 1 167 1 186 2 16 1 144 1 243 1 95 1 32 1 189 1 20 2 
212 1 172 1 194 1 340 3 264 1 174 1 132 1 156 1 241 1 243 1 251 1 47 1 255 1 120 1 164 1 208 1 16 1 186 2 167 1 144 1 32 1 95 1 189 1 20 2 
212 1 172 1 194 1 340 3 264 1 174 1 156 1 241 2 243 1 355 1 251 1 47 1 255 1 120 1 208 1 167 1 16 1 186 2 144 1 32 1 95 1 97 1 189 1 20 2 
167 1 186 1 241 1 208 1 20 1 
212 1 172 1 194 1 340 3 39 1 263 1 264 1 174 1 156 1 241 2 243 1 7 1 82 1 355 1 251 1 47 1 120 1 255 1 256 1 182 2 225 2 93 1 167 1 186 2 16 1 144 1 32 1 95 1 33 1 310 1 311 1 97 1 189 1 192 1 74 1 366 1 20 2 151 2 
212 1 172 1 194 1 340 3 39 1 263 1 264 1 174 1 130 1 156 1 241 2 107 1 346 1 243 1 7 1 82 1 355 1 251 1 47 1 255 1 120 1 256 1 182 2 225 2 167 1 16 1 186 2 144 1 32 1 95 1 33 1 310 1 311 1 97 1 189 1 192 1 74 1 20 2 151 2 
212 1 172 1 194 1 340 2 39 1 263 1 264 1 130 1 156 1 241 2 107 1 346 1 243 1 7 1 82 1 355 1 251 1 47 1 255 1 120 1 256 1 182 1 225 1 167 1 16 1 186 2 144 1 32 1 95 1 33 1 310 1 311 1 97 1 189 1 192 1 74 1 20 2 151 1 
212 1 172 1 194 1 340 2 263 1 264 1 130 1 156 1 241 2 268 1 243 1 7 1 355 1 161 1 251 1 47 1 255 1 120 1 256 1 225 1 167 1 306 1 16 1 186 2 145 1 144 1 32 1 95 1 310 1 311 1 97 1 189 1 192 1 74 1 366 1 20 2 151 1 317 1 
79 7 2 1 175 2 177 7 40 1 178 1 179 1 325 1 43 1 274 2 84 1 139 3 281 1 280 1 230 1 231 1 188 1 147 2 55 1 189 1 58 4 22 2 239 1 240 1 195 2 59 4 25 1 26 2 156 1 197 2 246 6 111 1 200 1 353 2 202 4 118 1 255 1 206 2 70 3 309 1 315 1 365 1 169 1 
128 1 77 1 22 3 239 1 320 1 290 1 175 1 25 1 26 1 156 1 105 1 323 1 347 1 197 1 111 2 352 1 353 1 85 1 30 1 202 2 255 1 206 1 121 1 184 1 34 1 147 1 189 1 55 1 149 1 
22 2 77 2 138 1 202 2 117 1 104 1 175 1 291 1 280 1 26 1 206 1 41 1 121 2 184 1 197 1 147 1 220 1 350 1 55 2 327 1 353 1 
77 4 22 22 320 16 214 1 290 2 175 2 291 1 26 2 105 1 323 4 347 16 197 1 221 2 111 9 65 4 352 4 353 2 202 4 30 6 118 1 49 1 206 2 50 4 121 2 207 1 209 2 231 1 184 4 17 2 34 2 168 1 147 2 55 13 
22 2 171 1 239 1 79 1 2 1 195 1 59 1 175 1 25 1 265 1 291 1 177 1 60 1 26 1 156 1 105 1 197 1 325 1 246 1 159 1 160 1 111 1 353 1 30 1 202 2 118 1 139 1 119 1 255 2 206 1 70 1 231 1 147 1 364 1 189 2 55 1 338 1 58 1 
77 6 320 3 79 1 129 2 2 2 175 3 177 1 41 2 323 1 42 1 325 1 327 2 138 1 328 1 139 2 231 1 184 4 17 1 147 3 234 1 189 3 55 9 58 2 22 15 194 1 239 1 104 1 195 1 59 2 290 2 25 1 341 1 291 1 196 2 156 1 26 3 60 2 105 1 347 3 197 3 350 1 246 1 160 1 198 1 111 6 352 1 353 3 202 6 30 3 117 2 118 1 255 3 163 2 119 2 206 3 121 5 70 2 361 1 34 1 364 2 
77 1 22 2 30 1 202 2 320 1 175 1 280 1 26 1 206 1 323 1 184 1 17 1 347 1 96 1 197 1 147 1 55 2 353 1 
77 1 22 2 30 1 202 2 320 1 290 1 175 1 280 1 26 1 206 1 121 1 347 1 197 1 34 1 147 1 134 1 111 2 353 1 
22 4 77 2 320 2 290 1 175 1 26 1 323 1 347 2 197 1 111 2 352 1 353 1 202 2 30 2 280 1 206 1 121 1 184 1 17 1 34 1 147 1 55 2 
77 1 22 2 30 1 202 2 320 1 240 1 175 1 26 1 206 1 323 1 184 1 17 1 347 1 96 1 197 1 147 1 55 2 353 1 
77 1 22 2 30 1 202 2 320 1 240 1 290 1 175 1 26 1 206 1 121 1 347 1 197 1 34 1 147 1 134 1 111 2 353 1 
22 4 77 2 240 1 320 2 290 1 175 1 26 1 323 1 347 2 197 1 111 2 352 1 353 1 202 2 30 2 206 1 121 1 184 1 17 1 34 1 147 1 55 2 
77 2 22 4 30 2 202 2 320 2 290 1 175 1 26 1 206 1 121 1 323 1 184 1 17 1 347 2 34 1 197 1 147 1 55 2 111 2 352 1 353 1 
22 2 79 1 2 1 195 1 59 1 175 1 291 1 196 1 177 1 60 1 26 1 197 1 246 1 111 1 353 1 202 2 118 1 139 1 119 1 255 1 206 1 70 1 231 1 147 1 55 1 364 1 189 1 58 1 
22 2 79 1 2 1 195 1 59 1 175 1 291 1 177 1 60 1 26 1 197 1 246 1 44 1 111 1 353 1 202 2 118 1 90 1 139 1 255 1 206 1 70 1 231 1 147 1 55 1 189 1 58 1 21 1 
22 4 77 2 320 2 290 1 175 1 26 1 105 1 323 1 347 2 197 1 111 2 352 1 353 1 202 2 30 2 206 1 121 1 184 1 17 1 34 1 147 1 55 2 
77 2 22 4 320 2 79 1 2 1 290 1 59 1 175 1 196 1 177 1 60 1 26 1 323 1 179 1 347 2 197 1 246 1 111 2 352 1 353 1 30 2 202 2 119 1 163 1 139 1 255 1 206 1 121 1 70 1 184 1 17 1 34 1 147 1 55 2 364 1 189 1 58 1 
128 1 77 1 22 3 239 1 320 1 290 1 175 1 25 1 26 1 156 1 105 1 323 1 347 1 197 1 111 1 352 1 353 1 85 1 202 2 30 1 255 1 206 1 185 1 184 1 17 1 34 1 147 1 189 1 55 2 
22 31 77 6 290 4 26 4 323 4 6 1 345 1 218 1 348 1 221 1 9 1 199 2 247 1 65 3 111 16 352 4 201 1 353 4 86 1 202 8 203 1 48 1 223 1 140 1 49 2 206 4 50 2 121 3 184 4 17 3 210 3 34 4 147 4 55 15 99 1 339 1 
77 8 22 46 290 6 26 3 323 7 6 1 345 1 218 1 348 2 221 2 10 1 9 1 199 2 247 1 111 22 65 4 352 7 201 1 353 3 202 6 48 1 223 1 140 1 49 2 206 3 50 4 121 4 209 2 184 7 17 4 210 4 34 6 147 3 55 24 99 1 339 2 
22 46 77 10 290 5 26 4 323 7 6 1 345 1 218 1 348 2 221 2 10 1 9 1 199 2 247 1 65 5 111 21 352 7 201 1 353 4 202 8 203 1 48 1 223 1 140 1 49 3 206 4 50 5 121 4 209 2 184 7 31 1 17 6 210 4 34 5 147 4 55 25 99 1 339 1 
22 33 77 5 290 4 26 4 323 4 6 1 345 1 218 1 348 1 221 1 10 1 9 1 199 2 247 1 65 3 111 17 352 4 201 1 353 4 202 8 203 1 48 1 223 1 140 1 49 2 206 4 50 2 121 2 184 4 17 3 210 4 34 4 147 4 55 16 99 1 339 1 
22 50 77 14 104 1 290 7 26 3 41 1 323 7 6 1 345 1 218 1 348 1 350 1 221 2 10 1 9 1 199 2 247 1 65 4 111 24 327 1 352 7 201 1 353 3 138 1 202 6 117 1 48 1 223 1 140 1 49 2 206 3 50 4 121 8 209 2 184 8 17 6 210 4 34 7 147 3 55 26 99 1 339 1 
22 2 79 2 59 1 175 1 177 2 26 1 156 2 40 1 105 1 293 1 197 1 246 2 111 1 274 2 353 1 202 2 118 1 254 1 139 1 255 2 329 1 67 1 204 1 206 1 70 1 231 1 147 1 189 2 55 1 58 1 169 1 
79 1 195 1 59 1 139 1 176 1 177 1 230 1 70 1 295 1 187 1 309 1 246 1 57 1 58 1 
79 1 24 1 59 1 176 1 177 1 4 1 69 1 70 1 108 2 295 1 124 1 358 1 314 1 246 1 18 1 150 1 300 1 211 1 
79 2 24 1 59 1 176 1 177 2 4 1 69 1 70 1 179 1 108 2 295 1 124 1 358 1 314 1 246 2 18 1 150 1 300 1 211 1 
79 1 24 1 59 1 176 1 177 1 4 1 69 1 70 1 123 1 108 2 124 1 358 1 246 1 18 1 150 1 300 1 211 1 
14 1 
261 1 263 1 256 1 132 1 164 1 80 1 310 1 311 1 7 1 192 1 
318 5 290 2 132 5 292 1 331 2 323 2 357 5 184 2 33 5 34 2 311 5 198 1 192 5 352 2 366 10 
287 1 128 1 194 1 239 1 255 1 25 1 132 1 164 1 156 1 241 1 228 1 167 1 360 1 189 1 273 1 
79 1 263 1 195 1 256 1 177 1 330 1 241 2 344 1 167 1 349 1 310 1 311 1 35 1 246 1 7 1 192 1 237 1 
128 2 22 1 239 2 79 1 195 1 2 1 59 1 25 2 175 1 291 1 177 1 196 1 156 2 60 1 26 1 197 1 246 1 111 1 353 1 202 2 255 3 119 1 139 1 206 1 228 1 70 1 231 1 259 1 147 1 189 3 364 1 58 1 
318 2 263 1 256 1 132 4 164 2 357 2 344 1 33 2 310 1 311 1 350 1 7 1 192 2 366 4 237 1 
261 1 311 1 220 1 132 1 164 1 192 1 80 1 
39 1 263 1 132 1 256 1 164 1 241 1 182 1 167 1 310 1 33 1 311 1 7 1 82 1 192 1 366 1 
263 1 79 1 2 1 195 1 59 2 139 1 256 1 177 1 183 1 70 1 310 1 260 1 7 1 246 1 286 1 235 1 58 2 
318 7 263 2 290 3 132 6 241 1 266 1 323 3 345 1 218 1 7 2 221 1 247 1 65 2 352 3 201 1 48 1 256 2 164 1 49 1 50 2 331 2 357 7 209 1 184 3 167 1 310 2 33 5 34 3 311 10 192 6 366 10 
263 1 117 1 290 1 256 1 341 1 331 1 41 1 107 1 184 1 186 1 310 1 311 2 7 1 192 2 327 1 20 1 
28 1 219 1 213 1 296 1 257 1 
28 1 257 1 316 1 
28 1 257 1 316 1 
28 1 257 1 316 1 
28 1 257 1 73 1 
28 1 257 1 73 1 
28 1 257 1 73 1 
28 1 257 1 
37 1 356 1 
77 4 22 7 202 2 117 1 223 1 290 1 341 1 206 1 26 1 121 2 41 1 184 2 17 2 147 1 55 4 111 3 327 1 353 1 
22 2 77 1 202 2 223 1 26 1 206 1 323 1 184 1 17 1 147 1 55 2 353 1 
77 2 22 4 202 2 290 1 223 1 26 1 206 1 121 1 323 1 184 1 17 1 34 1 147 1 55 2 111 2 352 1 353 1 
22 3 77 2 202 6 203 1 117 1 223 1 26 3 206 3 121 1 17 1 147 3 55 1 297 1 199 1 111 2 327 1 353 3 
77 6 22 12 104 1 290 1 341 1 26 4 41 1 106 1 297 1 111 6 65 1 199 1 327 2 353 4 138 1 202 8 203 1 117 2 223 1 49 1 206 4 50 1 121 3 184 2 17 3 147 4 55 6 100 1 
22 18 77 9 104 1 290 2 341 1 26 2 41 2 323 2 345 1 218 1 350 1 199 1 111 6 65 1 247 1 327 2 352 2 353 2 201 1 138 1 202 4 117 2 223 1 48 1 49 1 50 1 206 2 121 5 184 5 17 4 34 1 147 2 55 12 
22 12 77 6 104 1 290 1 341 1 26 2 41 2 323 1 345 1 350 1 221 1 111 4 65 2 327 2 352 1 353 2 138 1 202 4 117 2 223 1 49 1 206 2 50 1 121 4 184 4 17 2 147 2 55 8 100 1 
22 30 77 9 104 1 290 5 341 1 26 3 41 2 323 4 345 1 218 1 350 1 221 1 199 1 111 14 65 2 247 1 327 2 352 4 201 1 353 3 138 1 202 6 117 2 48 1 223 1 49 1 50 2 206 3 121 6 209 1 184 7 17 3 34 4 147 3 55 16 100 1 
22 28 77 11 104 1 290 4 341 1 26 3 41 2 323 4 345 1 218 1 350 1 221 1 199 1 111 11 65 2 247 1 327 2 352 4 201 1 353 3 138 1 202 6 117 2 48 1 223 1 49 1 50 2 206 3 121 6 209 1 184 7 17 5 34 3 147 3 55 17 100 1 
22 18 77 9 104 1 290 2 341 1 26 2 41 2 323 2 345 1 218 1 350 1 199 1 111 6 65 1 247 1 327 2 352 2 353 2 201 1 138 1 202 4 117 2 223 1 48 1 49 1 50 1 206 2 121 5 184 5 17 4 34 1 147 2 55 12 
22 22 77 4 290 4 26 1 323 4 345 1 218 1 221 1 111 11 65 2 247 1 352 4 201 1 353 1 202 2 48 1 223 1 49 1 50 2 206 1 121 2 209 1 184 4 17 2 34 4 147 1 55 11 
22 29 77 9 104 1 290 4 341 1 26 4 41 2 323 4 345 1 218 1 350 1 221 1 199 2 247 1 111 12 65 2 327 2 352 4 201 1 353 4 138 1 202 8 117 2 48 1 223 1 49 1 206 4 50 2 121 6 209 1 184 7 17 3 34 3 147 4 55 17 100 1 
22 7 77 1 290 1 26 2 323 1 345 1 221 1 111 4 65 2 352 1 353 2 202 4 203 1 223 1 49 1 206 2 50 1 121 1 184 1 34 1 147 2 55 3 
22 8 77 6 138 1 117 2 104 1 290 1 341 1 121 4 41 2 184 3 17 2 350 1 55 5 111 3 327 2 
22 7 77 1 290 1 26 2 323 1 345 1 221 1 111 4 65 2 352 1 353 2 202 4 203 1 223 1 49 1 206 2 50 1 121 1 184 1 34 1 147 2 55 3 
77 7 22 11 104 1 290 1 341 1 26 2 41 2 350 1 199 1 111 4 327 2 353 2 138 1 202 4 117 2 206 2 121 4 184 3 17 3 147 2 55 7 
184 1 22 2 77 2 138 1 117 1 220 1 350 1 104 1 55 2 41 1 121 2 327 1 
77 2 22 4 202 2 290 1 26 1 206 1 121 1 323 1 184 1 17 1 34 1 147 1 55 2 111 2 352 1 353 1 100 1 
77 2 22 12 290 2 49 1 50 2 121 1 323 2 209 1 184 2 17 1 34 2 55 6 221 1 65 2 111 6 352 2 
22 19 77 7 104 1 290 3 341 1 26 1 41 2 323 2 350 1 221 1 111 8 65 2 199 1 327 2 352 2 353 1 138 1 202 2 117 2 50 2 206 1 121 5 209 1 184 5 17 2 34 2 168 1 147 1 55 11 
22 1 111 1 65 1 
22 1 55 1 50 1 
22 6 77 3 202 2 290 1 206 1 26 1 121 2 323 1 184 1 17 1 34 1 147 1 55 3 198 1 111 3 352 1 353 1 100 1 
22 22 77 4 290 4 26 1 323 4 345 1 218 1 221 1 111 11 65 2 247 1 352 4 201 1 353 1 202 2 48 1 223 1 49 1 50 2 206 1 121 2 209 1 184 4 17 2 34 4 147 1 55 11 
184 1 22 1 55 1 41 1 
77 2 22 3 138 1 202 2 117 1 104 1 26 1 206 1 121 1 17 1 147 1 55 1 297 1 111 2 199 1 327 1 353 1 
16 1 255 1 215 1 189 1 291 1 156 1 3 1 
137 1 29 1 181 1 215 1 255 1 291 1 3 1 156 1 16 1 63 1 158 1 189 1 
79 4 162 1 195 1 59 1 139 1 177 4 230 1 70 1 62 1 179 1 309 1 246 4 58 1 
79 2 2 1 139 1 59 2 205 1 177 2 70 1 178 1 188 1 246 2 126 1 200 1 58 1 84 1 
108 1 24 1 79 1 195 1 59 1 246 1 177 1 4 1 150 1 70 1 
179 1 79 2 254 1 59 1 139 1 246 2 177 2 40 1 58 1 70 1 211 1 
79 5 162 1 195 1 139 2 59 2 177 5 281 1 40 1 230 1 70 2 179 1 309 1 246 4 315 1 126 1 58 3 
88 1 79 5 162 1 195 1 139 2 59 2 177 5 281 1 40 1 230 1 70 2 179 1 309 1 246 4 126 1 58 3 
309 1 220 1 79 1 195 1 59 1 139 1 246 1 177 1 58 1 230 1 70 1 
239 1 79 1 2 1 195 1 139 1 59 1 255 2 119 1 25 1 291 1 177 1 60 1 156 1 70 1 325 1 246 1 189 2 58 1 
239 1 194 2 79 1 2 2 59 1 25 1 291 1 177 1 156 1 60 1 294 1 325 1 246 1 251 1 328 1 119 1 255 1 139 2 13 1 70 1 144 1 189 1 126 1 58 3 
239 1 194 2 79 1 2 2 59 1 25 1 291 1 177 1 156 1 60 1 294 1 325 1 246 1 44 1 251 1 328 1 255 1 139 2 13 1 70 1 144 1 189 1 126 1 58 3 
79 3 2 1 195 1 59 1 131 1 132 1 177 3 241 1 216 1 294 1 62 1 243 1 246 3 13 1 139 1 164 1 70 1 283 1 186 2 126 1 286 1 58 4 20 2 
79 3 195 1 2 1 139 1 13 1 59 1 132 1 131 1 164 1 177 3 294 1 241 1 70 1 62 1 186 2 243 1 54 1 246 3 126 1 286 1 58 4 20 2 
79 1 59 1 246 1 177 1 365 1 70 1 
79 6 195 2 2 1 139 2 59 3 281 1 177 6 40 1 61 1 183 1 70 2 178 1 179 1 315 1 43 1 246 5 274 1 365 1 200 1 58 3 
77 5 129 1 79 1 2 1 175 2 177 1 41 2 179 1 325 1 327 2 138 1 328 1 139 1 184 3 17 1 147 2 189 2 55 5 58 1 22 7 194 1 239 1 104 1 59 1 290 1 25 1 196 1 291 1 341 1 156 1 26 2 60 1 293 1 105 1 197 2 350 1 246 1 111 2 353 2 202 4 117 2 119 1 163 1 255 2 206 2 121 4 70 1 364 1 
128 1 287 1 194 1 239 1 261 1 79 1 263 1 195 1 290 1 25 1 177 1 341 1 292 1 156 1 41 1 27 1 80 1 349 1 246 1 7 1 273 1 327 1 117 1 255 1 256 1 331 2 228 1 184 2 186 1 308 1 360 1 310 1 311 2 189 1 192 3 20 1 
79 2 2 1 139 1 59 2 131 1 177 2 183 1 70 1 179 1 246 2 235 1 365 1 58 2 
239 1 79 1 2 1 195 1 139 1 59 1 255 2 25 1 291 1 177 1 60 1 156 1 70 1 325 1 246 1 189 2 44 1 58 1 
79 1 2 1 139 1 59 2 177 1 61 1 183 1 70 1 178 1 246 1 126 1 200 1 58 1 
102 1 64 1 255 1 189 1 329 1 67 1 204 1 156 1 301 1 
83 1 343 1 301 1 
102 1 64 1 291 1 275 1 301 1 
102 2 23 1 172 1 194 1 251 1 132 1 291 1 164 1 343 1 186 2 144 1 308 1 243 1 64 2 136 1 275 2 83 1 301 1 20 2 
249 1 250 1 270 1 284 1 313 1 312 1 72 1 222 1 
249 4 250 3 115 1 141 1 15 1 334 1 270 2 284 1 313 2 135 1 98 2 298 1 72 1 222 4 
249 2 250 1 68 1 51 1 270 1 284 1 313 1 312 1 98 1 180 1 72 1 222 2 
249 3 250 1 141 2 217 1 334 1 270 1 284 1 312 1 313 1 72 1 298 2 222 3 
76 2 250 2 271 1 191 1 
249 1 284 1 312 1 72 1 222 1 5 1 
249 2 250 1 270 1 277 1 284 1 313 1 312 1 98 1 72 1 222 2 
307 1 
249 1 250 1 270 1 284 1 313 1 312 1 72 1 222 1 
249 3 250 1 277 1 141 1 270 1 284 1 312 1 313 1 98 1 72 1 222 3 
250 1 115 1 135 1 15 1 
250 1 313 1 
250 1 270 1 220 1 313 1 
249 1 250 1 270 1 284 1 313 1 72 1 222 1 
249 1 110 1 267 1 
249 3 250 1 141 2 334 1 270 1 146 1 284 1 312 1 313 1 72 1 298 1 222 3 
249 2 250 1 238 1 270 1 284 1 313 1 98 1 72 1 222 2 
249 1 108 1 250 1 284 1 12 1 312 1 4 1 72 1 69 1 222 1 15 1 
249 1 250 1 284 1 313 1 312 1 72 1 222 1 
249 1 270 1 284 1 313 2 312 1 72 1 222 1 
249 2 250 1 78 1 321 1 71 1 284 2 313 1 312 1 72 2 222 2 
249 3 250 2 277 1 115 1 15 1 270 1 284 1 313 1 312 1 148 1 98 2 72 1 222 3 
249 2 250 1 4 1 69 1 108 2 270 1 284 1 326 1 313 1 312 1 98 1 18 1 72 1 150 1 222 2 
249 4 238 1 250 2 115 1 142 1 15 1 270 1 284 2 313 1 312 1 98 2 72 2 222 4 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 284 (51,69,169) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 284 202 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 284 202 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) (55,139) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (55,139) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) (55,139) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (35,54,66,161) (35,54,66,161) (35,54,66,161) 236 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 284 (51,69,169) 78 192 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 251 32 46 232 247 64 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 251 32 46 232 247 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 251 32 46 232 247 64 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 251 32 46 232 247 64 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 251 32 46 232 247 64 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 9 46 232 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 251 32 46 232 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 284 202 103 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 284 202 103 134 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 189 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 113 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
54 1 66 1 161 1 137 1 236 1 
31 1 283 1 189 1 
31 1 125 2 277 1 
271 2 287 2 186 2 187 1 170 2 188 1 219 2 142 2 
0 1 259 2 262 2 3 1 34 1 38 1 186 2 187 1 188 1 271 2 239 1 156 1 160 1 162 1 49 2 281 1 210 1 90 1 287 3 214 1 248 1 249 1 218 1 170 3 219 2 293 1 63 1 223 1 224 2 225 1 27 2 29 1 99 1 229 1 104 1 142 2 143 1 
271 1 255 1 45 1 287 1 186 1 135 1 187 1 170 1 219 1 142 1 
69 1 284 1 
31 1 263 1 283 1 186 1 287 1 116 2 170 1 169 1 219 1 271 1 13 1 45 1 176 1 142 1 51 2 
303 1 286 1 179 1 116 1 51 1 
31 1 283 1 303 1 266 1 39 1 179 1 116 2 51 2 
303 1 116 1 51 1 
186 1 287 1 135 1 187 1 116 1 170 1 219 1 94 1 255 1 271 1 45 1 179 1 142 1 51 1 
31 1 
31 1 283 1 303 1 39 1 22 1 179 1 116 2 51 2 
258 1 31 2 112 4 264 2 185 1 39 1 184 1 186 1 187 1 151 1 42 2 116 5 152 2 12 1 271 1 45 1 17 1 128 2 51 5 209 1 283 2 133 1 287 1 216 1 135 1 290 1 170 1 219 1 24 5 255 1 94 1 302 2 303 2 179 2 180 2 142 1 106 1 306 1 
188 1 189 1 
2 1 73 1 287 2 186 1 170 2 219 1 188 1 271 2 45 1 140 1 142 1 
120 1 282 1 201 1 
0 1 3 1 38 1 287 1 214 1 249 1 170 1 188 1 63 1 239 1 224 1 27 1 29 1 160 1 102 1 49 1 
0 1 3 1 282 1 38 1 214 1 186 1 287 2 249 1 170 2 219 1 271 1 63 1 239 1 224 1 27 1 29 1 198 1 243 1 160 1 49 1 
2 1 284 1 186 4 287 4 170 4 219 4 188 1 271 4 14 1 243 2 198 1 202 1 278 1 142 1 
271 2 45 1 287 2 186 2 48 1 135 1 170 2 219 2 
271 3 243 1 287 3 186 3 170 3 142 1 188 1 219 3 
271 1 45 1 287 1 186 1 135 1 170 1 219 1 
2 1 73 1 186 1 287 1 170 1 219 1 271 1 45 1 142 1 
0 1 2 1 259 2 262 1 3 1 263 1 38 1 186 3 187 1 116 1 188 1 271 3 239 1 13 1 45 1 243 1 198 1 160 1 162 1 49 1 206 1 51 1 281 1 210 1 90 1 214 1 287 4 248 1 249 1 169 1 170 4 219 3 293 1 63 1 224 1 27 1 301 1 29 1 99 1 176 1 229 1 104 1 142 2 143 1 
271 1 284 1 243 1 202 1 287 1 186 1 170 1 219 1 
2 1 31 1 5 1 263 1 186 3 287 3 116 1 170 3 169 1 219 3 271 3 13 1 45 1 301 1 198 1 243 2 176 1 142 1 51 1 
2 1 271 2 120 1 282 1 243 1 287 2 186 2 170 2 219 2 142 1 
0 1 3 1 38 1 287 1 214 1 249 1 170 1 188 1 63 1 239 1 224 1 27 1 29 1 160 1 49 1 
0 1 3 1 146 1 267 1 38 1 287 1 249 1 170 1 188 1 239 1 224 1 27 1 29 1 160 1 49 1 
109 1 259 2 262 4 37 1 120 2 200 1 201 2 162 2 281 1 282 2 210 1 90 1 248 1 58 1 251 1 23 1 292 1 293 1 223 2 302 1 99 1 141 1 180 1 107 1 
186 1 287 1 170 1 219 1 271 1 13 1 45 1 48 1 
30 1 164 1 
30 1 164 1 
300 1 204 1 
300 1 204 1 
300 1 204 1 
211 1 30 1 164 1 
6 1 30 1 164 1 
227 1 300 1 132 1 30 2 204 1 164 2 
211 1 30 1 164 1 
211 1 30 1 164 1 
30 1 164 1 92 1 
30 1 164 1 92 1 
30 1 164 1 92 1 
261 1 6 1 186 2 116 1 188 1 271 2 195 1 272 1 164 1 84 1 51 1 129 1 208 1 85 1 285 1 287 2 170 2 219 2 295 1 172 1 96 1 30 1 228 1 101 1 
31 1 20 1 85 2 208 3 40 1 116 2 93 1 190 1 220 2 174 1 195 2 272 2 227 1 30 2 205 1 101 2 164 2 51 2 129 1 
89 1 149 1 181 1 
149 1 105 1 181 1 
36 1 89 2 105 1 279 1 291 1 181 3 
36 1 89 1 88 1 105 1 279 1 181 2 
89 1 36 2 105 1 279 1 181 2 
258 1 31 2 261 1 71 1 32 1 112 3 264 1 234 1 39 1 114 1 42 1 116 5 270 1 273 1 125 3 128 1 277 1 280 2 51 5 283 1 59 2 251 1 292 1 24 2 25 2 297 1 96 1 302 1 303 1 228 1 179 4 180 1 
31 5 258 1 32 3 112 8 264 2 265 1 39 1 115 1 8 5 116 9 42 2 117 1 270 2 119 1 273 1 125 9 128 2 277 3 51 9 131 1 283 1 286 5 59 6 251 3 292 3 24 6 25 6 62 1 96 4 297 2 302 3 303 6 179 7 180 3 106 1 
31 3 32 1 112 3 264 1 234 1 114 1 42 1 116 3 270 1 125 4 128 1 277 2 280 1 51 3 283 1 59 2 251 1 292 1 24 2 25 2 297 1 96 1 302 1 179 2 180 1 106 1 
31 4 32 2 112 5 264 1 234 1 114 1 42 1 116 4 117 1 270 1 125 7 128 1 277 3 280 2 51 4 131 1 283 1 59 4 251 2 292 2 24 4 25 4 62 1 297 1 96 2 302 2 179 3 180 2 106 1 
38 1 171 1 189 1 
95 1 38 1 
82 1 
239 1 38 1 160 1 
238 1 38 1 
239 1 38 1 
86 1 38 2 246 1 171 2 239 1 160 1 82 1 
1 1 262 7 111 1 37 2 185 1 133 1 215 2 151 1 23 3 269 1 223 4 296 1 302 1 159 1 127 1 162 3 180 1 
1 1 262 7 111 1 37 2 185 1 133 1 215 2 151 1 23 3 269 1 223 4 296 1 302 1 159 1 127 1 162 3 180 1 
1 1 262 7 111 1 37 2 185 1 133 1 215 2 151 1 23 3 253 1 269 1 296 1 223 4 302 1 159 1 127 1 162 3 180 1 
1 3 259 4 262 27 32 2 110 1 111 2 37 4 235 1 185 1 151 2 10 1 269 1 191 1 241 3 159 1 126 1 127 2 162 13 52 3 281 2 210 2 133 2 215 3 248 2 250 2 251 2 23 7 292 2 293 2 173 1 296 1 223 14 302 3 180 3 
1 1 281 2 259 4 262 9 111 1 210 2 37 3 185 1 133 1 215 2 248 2 151 1 250 1 268 1 23 4 269 1 293 2 296 1 223 5 302 1 175 1 127 1 162 4 180 1 
54 1 66 1 161 1 137 1 236 1 
54 1 55 1 66 1 161 1 137 1 
54 1 35 1 139 1 137 1 
54 1 55 1 66 1 161 1 137 1 
54 1 66 1 161 1 137 1 236 1 
222 1 
0 1 258 1 145 1 3 2 75 1 112 1 264 1 38 1 39 1 42 1 116 2 237 1 239 1 242 1 160 1 128 1 49 2 165 1 51 2 60 1 24 1 224 2 297 1 27 2 29 2 257 1 303 2 305 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 303 1 39 1 47 1 22 1 116 2 51 2 
258 1 69 1 192 1 78 1 65 1 264 1 284 1 47 1 128 1 42 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
69 1 192 1 78 1 65 1 284 1 47 1 116 1 51 1 
258 1 69 1 192 1 78 1 65 1 264 1 284 1 47 1 128 1 42 1 116 1 51 1 
259 2 262 6 37 2 185 1 151 1 188 2 189 1 269 1 120 1 201 1 162 3 281 1 282 1 210 1 133 1 90 1 215 1 248 1 23 2 293 1 296 1 223 3 302 1 99 1 141 1 180 1 
1 1 259 4 72 1 262 14 32 2 37 1 188 1 44 1 154 1 120 4 158 1 241 3 199 1 201 11 126 1 162 6 52 3 281 2 282 11 210 2 90 2 248 2 168 1 251 2 23 2 292 1 293 2 223 8 225 1 302 2 99 1 104 1 180 1 
0 1 259 2 3 1 4 1 262 2 38 1 186 1 188 1 154 1 271 1 239 1 120 1 243 1 198 1 274 1 160 1 162 1 49 1 19 1 281 1 210 1 214 1 90 1 287 2 248 1 249 1 170 2 219 1 293 1 63 1 223 1 224 1 27 1 225 1 29 1 99 1 102 1 104 1 
0 2 1 4 3 1 74 1 7 2 151 1 11 1 154 1 239 2 243 1 160 2 162 10 90 3 248 3 249 2 251 2 170 3 23 8 27 3 29 2 99 3 177 2 100 1 180 3 104 1 182 2 259 6 262 20 32 2 37 4 185 1 38 2 186 1 188 2 269 1 271 1 120 7 198 1 201 7 203 2 49 3 281 3 282 7 210 3 133 1 215 1 287 3 214 2 219 1 292 2 293 3 63 2 296 1 223 10 224 3 225 1 302 3 229 2 304 1 
0 1 145 1 259 2 3 1 262 2 75 1 38 1 237 1 239 1 242 1 160 1 275 1 162 1 49 2 281 1 210 1 90 1 248 1 218 1 293 1 223 1 224 2 27 2 226 1 225 1 29 2 99 1 104 1 305 1 
2 1 259 2 32 1 262 3 37 1 186 1 154 1 271 1 120 1 201 1 162 2 281 1 282 1 210 1 90 1 91 1 287 1 248 1 251 1 170 1 23 1 219 1 292 1 293 1 223 1 302 1 99 1 180 1 142 1 
1 1 281 1 259 2 262 2 282 1 210 1 90 1 248 1 58 1 251 1 23 1 293 1 120 1 223 2 302 1 141 1 99 1 201 1 
281 1 259 2 262 2 282 1 210 1 37 1 90 1 248 1 23 1 292 1 293 1 120 1 141 1 99 1 201 1 162 2 180 1 107 1 
1 1 259 2 32 1 262 4 37 1 120 2 201 2 162 2 281 1 282 2 210 1 90 1 248 1 251 1 23 2 292 1 293 1 223 2 302 1 99 1 141 1 180 1 
1 1 281 1 259 2 262 2 282 1 210 1 90 1 248 1 58 1 251 1 23 1 293 1 120 1 223 2 302 1 99 1 201 1 275 1 
281 1 259 2 262 2 282 1 210 1 37 1 90 1 248 1 23 1 292 1 293 1 120 1 99 1 201 1 275 1 162 2 180 1 107 1 
1 1 259 2 32 1 262 4 37 1 120 2 201 2 275 1 162 2 281 1 282 2 210 1 90 1 248 1 251 1 23 2 292 1 293 1 223 2 302 1 99 1 180 1 
1 1 281 1 259 2 32 1 262 4 282 2 210 1 37 1 90 1 248 1 251 1 23 2 292 1 293 1 120 2 223 2 302 1 99 1 201 2 162 2 180 1 
0 1 259 2 262 2 3 1 38 1 188 1 239 1 160 1 162 1 49 1 281 1 210 1 214 1 287 1 90 1 248 1 249 1 170 1 293 1 63 1 223 1 224 1 225 1 27 1 29 1 99 1 229 1 104 1 
0 1 259 2 262 2 146 1 3 1 267 1 38 1 188 1 239 1 160 1 162 1 49 1 281 1 210 1 287 1 90 1 248 1 249 1 170 1 294 1 293 1 223 1 224 1 225 1 27 1 29 1 99 1 104 1 
1 1 259 2 32 1 262 4 37 1 154 1 120 2 201 2 162 2 281 1 282 2 210 1 90 1 248 1 251 1 23 2 292 1 293 1 223 2 302 1 99 1 180 1 
1 1 0 1 259 2 262 4 32 1 37 1 38 1 7 1 120 2 239 1 201 2 160 1 162 2 49 1 281 1 282 2 210 1 214 1 287 1 90 1 248 1 249 1 251 1 170 1 23 2 292 1 293 1 63 1 223 2 224 1 27 1 302 1 29 1 99 1 178 1 229 1 180 1 
1 1 2 1 259 2 32 1 262 3 186 1 154 1 271 1 120 1 201 1 162 1 281 1 282 1 210 1 90 1 287 1 248 1 136 1 251 1 170 1 23 1 219 1 292 1 293 1 223 2 302 1 99 1 180 1 142 1 
259 6 262 17 232 1 32 2 37 1 150 1 9 1 46 1 241 2 126 2 162 8 52 2 207 2 130 1 281 3 210 3 247 1 248 3 250 1 217 1 251 2 23 1 138 1 292 1 293 3 64 1 223 9 302 2 175 1 180 1 183 1 
259 4 262 17 232 1 32 2 37 1 9 1 46 1 241 2 126 2 162 8 207 2 52 2 130 1 281 2 210 2 247 2 248 2 250 1 217 1 251 2 23 1 138 2 292 1 293 2 64 1 223 9 302 2 175 1 180 1 183 1 
259 6 262 17 232 1 32 2 37 1 150 1 9 1 46 1 241 2 126 2 162 8 52 2 207 2 130 1 281 3 210 3 247 1 248 3 250 1 217 1 251 2 23 1 138 1 292 1 293 3 64 1 223 9 302 2 175 1 180 1 183 1 
259 6 262 17 232 1 32 2 37 1 150 1 9 1 46 1 241 2 126 2 162 8 52 2 207 2 130 1 281 3 210 3 247 1 248 3 250 1 217 1 251 2 23 1 138 1 292 1 293 3 64 1 223 9 302 2 175 1 180 1 183 1 
259 2 262 21 232 1 32 2 37 2 185 1 151 1 9 1 269 1 46 1 241 2 126 2 162 9 52 2 207 2 130 1 281 1 210 1 133 1 215 1 247 1 248 1 217 1 251 2 23 2 138 1 292 1 293 1 296 1 64 1 223 12 302 3 175 1 180 2 183 1 
85 1 174 1 195 1 272 1 227 1 30 1 101 1 41 1 164 1 93 1 
6 1 84 1 
85 1 195 1 272 1 16 1 30 1 18 1 56 1 101 1 164 1 
144 1 211 1 
15 1 132 1 92 1 
31 1 20 1 85 1 208 2 40 1 116 1 93 1 190 1 220 1 174 1 195 1 272 1 227 1 30 1 101 1 164 1 129 1 51 1 
31 1 20 1 85 1 208 2 40 1 116 1 93 1 190 1 220 1 174 1 195 1 272 1 227 1 30 1 101 1 164 1 129 1 51 1 
31 1 20 1 85 1 208 2 40 1 116 1 93 1 190 1 220 1 174 1 195 1 272 1 227 1 30 1 101 1 164 1 129 1 51 1 
144 1 211 1 132 1 
144 1 211 1 132 1 
15 1 92 1 
15 1 132 1 92 1 
172 1 285 1 
261 1 6 1 186 2 40 1 77 1 116 1 188 1 271 2 195 1 272 1 164 1 84 1 51 1 85 1 208 1 285 1 287 2 170 2 219 2 220 1 295 1 172 1 96 1 30 1 228 1 101 1 179 1 
0 1 259 2 260 1 262 2 38 1 154 1 271 2 239 1 157 1 162 1 49 2 281 1 210 1 90 1 287 2 248 1 252 1 170 2 218 2 293 1 223 1 224 2 226 1 225 1 27 2 97 1 28 1 29 1 99 1 104 1 108 1 
0 1 244 1 89 1 21 1 149 1 289 1 76 1 11 1 291 1 79 1 224 2 27 2 29 1 124 1 178 1 230 1 105 1 181 2 49 2 
0 1 244 1 89 1 21 1 149 1 289 1 11 1 291 1 79 1 224 1 122 1 27 1 124 1 29 1 105 1 181 2 49 1 
0 1 145 1 3 1 75 1 38 1 237 1 239 1 79 1 224 1 27 1 26 1 29 2 242 1 80 1 160 1 81 1 230 1 305 1 49 1 
0 1 244 1 89 1 21 1 149 1 289 1 76 1 11 1 291 1 79 1 224 1 27 1 29 1 124 1 230 1 105 1 181 2 49 1 
67 1 
31 1 112 1 283 1 17 1 216 1 24 1 189 1 
258 1 31 2 112 1 264 1 39 1 42 1 116 1 121 1 125 1 128 1 277 1 51 1 53 1 283 1 24 1 221 1 303 1 
0 3 231 1 3 1 152 2 12 2 155 2 238 2 239 3 240 2 17 1 160 3 165 1 86 1 251 2 171 2 24 8 25 6 95 3 27 3 29 4 178 1 180 2 182 2 258 4 31 8 32 2 33 2 263 2 112 9 264 4 38 10 39 3 42 4 116 5 43 1 193 2 197 1 125 12 128 4 276 2 277 6 49 3 51 5 283 2 216 1 57 2 59 6 292 2 298 1 297 2 224 3 299 1 302 2 303 5 
258 2 31 4 232 1 32 1 112 5 264 2 39 1 9 1 116 1 42 2 152 1 194 1 46 1 241 1 125 6 126 1 128 2 277 3 51 1 52 1 130 1 283 1 59 4 217 1 251 1 24 3 292 1 25 4 302 1 303 1 180 1 
258 1 112 2 264 1 184 1 185 1 186 1 151 1 187 1 42 1 116 1 152 2 153 1 12 1 271 1 45 1 128 1 51 1 133 1 287 1 135 1 170 1 219 1 24 2 94 1 255 1 302 2 180 1 142 1 
258 1 31 1 112 1 264 1 283 1 216 1 42 1 24 1 17 1 128 1 
31 5 32 2 112 5 59 5 251 2 152 2 24 5 292 2 12 1 25 5 302 2 125 10 277 5 180 2 182 1 
31 1 283 1 303 1 39 1 116 1 51 1 
0 1 258 1 145 1 3 2 75 1 112 1 264 1 38 1 39 1 42 1 116 1 237 1 239 1 242 1 160 1 128 1 49 2 165 1 51 1 60 1 24 1 298 1 224 2 297 1 27 2 29 2 257 1 303 2 305 1 
0 1 259 2 262 1 3 1 38 1 186 2 187 1 188 1 271 2 239 1 160 1 162 1 49 1 281 1 210 1 287 3 214 1 90 1 248 1 249 1 170 3 219 2 293 1 63 1 224 1 27 1 29 1 99 1 229 1 104 1 142 2 143 1 
258 1 31 4 112 1 264 1 283 2 215 1 59 2 42 1 24 2 25 2 297 1 125 4 128 1 277 2 165 1 
85 1 195 1 245 1 
85 1 172 1 195 1 147 1 93 1 
85 1 195 1 245 1 
85 1 195 1 245 1 
85 1 195 1 288 1 
85 1 195 1 288 1 
85 1 195 1 288 1 
85 1 195 1 
30 1 164 1 
1 1 281 2 259 4 262 8 210 2 37 2 185 1 133 1 215 1 248 2 250 1 151 1 23 3 293 2 269 1 223 4 296 1 302 1 162 4 180 1 
262 6 37 2 133 1 185 1 215 1 151 1 23 2 189 1 269 1 296 1 223 3 302 1 162 3 180 1 
1 1 281 1 259 2 32 1 262 4 210 1 37 1 248 1 251 1 23 2 292 1 293 1 256 1 223 2 302 1 162 2 180 1 
52 1 262 2 223 1 241 1 126 1 162 1 
1 4 259 4 32 2 262 23 37 5 185 1 151 2 269 1 44 1 158 1 241 2 199 1 162 12 52 2 281 2 210 2 133 2 215 1 248 2 250 2 251 2 23 9 292 2 293 2 173 1 296 1 223 11 302 3 180 3 
262 1 241 1 162 1 
52 1 262 1 223 1 
1 1 259 2 281 1 262 6 32 1 210 1 37 2 248 1 251 1 23 3 292 1 293 1 256 1 223 3 302 1 162 3 180 1 182 1 
130 1 52 1 281 1 259 2 32 2 232 1 262 10 210 1 37 1 248 1 9 1 251 2 217 1 23 1 292 1 293 1 223 6 46 1 302 2 241 1 175 1 126 1 162 4 180 1 
1 1 262 6 37 1 185 1 133 1 151 1 23 2 223 3 302 1 162 3 180 1 
1 1 281 1 259 2 262 3 210 1 37 1 133 1 248 1 151 1 250 1 23 2 293 1 269 1 173 1 223 1 296 1 162 2 
1 2 259 2 281 1 262 10 210 1 37 3 184 1 133 2 185 1 248 1 151 2 23 5 293 1 223 5 302 2 175 1 162 5 180 2 
1 1 281 1 259 2 262 2 210 1 248 1 251 1 23 1 293 1 223 2 302 1 175 1 
1 1 281 1 259 2 32 1 262 4 210 1 37 1 248 1 251 1 23 2 292 1 293 1 223 2 302 1 175 1 162 2 180 1 
1 1 281 3 259 6 262 3 210 3 37 1 133 1 150 1 248 3 250 1 151 1 23 2 293 3 173 1 223 1 175 1 162 2 
1 4 259 10 262 31 32 2 37 5 235 1 185 2 150 1 151 3 10 1 269 1 191 1 241 3 126 1 162 16 52 3 281 5 210 5 133 3 215 1 248 5 250 2 251 2 23 9 292 2 293 5 173 1 256 1 296 1 223 15 302 4 175 1 180 4 
259 2 262 8 232 1 37 2 185 1 151 1 269 1 241 1 126 1 162 4 52 1 281 1 210 1 133 1 215 1 248 1 23 2 293 1 223 4 296 1 302 1 175 1 180 1 
259 4 262 10 232 1 32 2 37 1 9 1 241 1 46 1 126 1 162 4 52 1 130 1 281 2 210 2 248 2 217 1 251 2 23 1 292 1 293 2 256 1 223 6 302 2 175 1 180 1 
259 4 262 11 232 1 32 2 37 1 9 1 241 1 46 1 126 1 162 5 52 1 130 1 281 2 210 2 248 2 250 1 217 1 251 2 23 1 292 1 293 2 223 6 302 2 175 1 180 1 
130 1 52 1 281 1 259 2 32 2 232 1 262 10 210 1 37 1 248 1 9 1 251 2 217 1 23 1 292 1 293 1 223 6 46 1 302 2 241 1 175 1 126 1 162 4 180 1 
259 2 262 8 232 1 37 2 185 1 151 1 269 1 241 1 126 1 162 4 52 1 281 1 210 1 133 1 215 1 248 1 23 2 293 1 223 4 296 1 302 1 175 1 180 1 
130 1 52 1 281 1 259 2 32 2 232 1 262 10 210 1 37 1 248 1 9 1 251 2 217 1 23 1 292 1 293 1 223 6 46 1 302 2 241 1 175 1 126 1 162 4 180 1 
259 6 262 11 232 1 32 2 37 1 9 1 46 1 241 1 126 1 162 5 52 1 130 1 281 3 210 3 248 3 250 1 217 1 251 2 23 1 292 1 293 3 256 1 223 6 302 2 175 1 180 1 
259 6 262 11 232 1 32 2 37 2 150 1 9 1 46 1 241 1 126 1 162 5 52 1 130 1 281 3 210 3 248 3 250 1 217 1 251 2 23 2 292 1 293 3 223 6 302 2 175 1 180 1 
1 3 262 7 37 3 133 3 185 1 151 3 23 6 269 1 296 2 223 3 302 1 162 4 180 1 
259 6 262 11 232 1 32 2 37 1 150 1 9 1 46 1 241 1 126 1 162 5 52 1 130 1 281 3 210 3 248 3 250 1 217 1 251 2 23 1 292 1 293 3 223 6 302 2 175 1 180 1 
284 1 202 1 103 1 
166 1 233 1 284 1 123 1 213 1 202 1 134 1 103 1 
3 1 224 1 27 1 305 1 49 1 189 1 
0 1 3 1 38 1 186 1 287 2 214 1 249 1 170 2 188 1 219 1 271 1 239 1 224 1 27 1 29 1 243 1 160 1 49 1 
0 1 231 1 38 3 186 2 188 1 271 2 238 1 239 2 13 1 45 1 243 1 160 2 49 1 214 1 287 2 249 1 57 1 170 2 219 1 224 1 27 1 29 1 176 1 
0 1 146 1 231 1 38 3 186 2 188 1 271 2 238 1 239 2 13 1 45 1 243 1 160 2 49 2 212 1 287 2 249 1 57 1 170 2 219 1 224 2 27 2 29 1 176 1 
31 1 0 1 68 1 3 1 231 1 263 1 283 1 212 1 38 4 148 1 57 1 116 2 171 1 238 1 239 1 224 3 95 1 27 3 29 1 303 1 160 1 49 3 51 2 
31 1 0 1 3 1 231 1 263 1 283 1 212 1 38 4 57 1 116 2 171 1 238 1 239 1 224 3 95 1 27 3 29 1 303 1 160 1 276 1 49 3 51 2 
0 1 118 1 224 1 27 1 29 1 49 1 
86 1 0 2 70 1 145 1 3 2 87 1 75 1 38 3 218 1 11 1 118 1 61 1 239 2 224 7 27 6 98 1 29 3 160 1 178 1 108 1 49 7 
0 1 7 1 151 1 154 1 239 1 243 1 160 1 162 3 90 2 248 2 249 1 170 2 23 2 27 1 97 1 29 1 99 2 178 1 180 1 259 4 262 6 37 2 38 1 185 1 186 1 188 2 269 1 271 1 120 1 201 1 203 1 49 1 281 2 282 1 210 2 133 1 214 1 287 2 215 1 219 1 293 2 63 1 296 1 223 3 224 1 302 1 229 1 
31 1 258 2 3 1 33 1 263 1 112 1 264 2 38 2 39 1 42 2 116 3 193 1 155 1 17 1 128 2 276 1 49 1 51 3 283 1 216 1 171 1 24 1 298 1 224 1 95 1 27 1 303 2 179 1 
86 1 0 1 38 2 171 1 43 1 118 1 239 1 224 2 27 2 29 2 160 1 178 1 49 2 
0 1 145 1 3 1 75 1 38 1 237 1 239 1 224 2 27 2 29 2 242 1 160 1 178 1 305 1 49 2 
0 1 145 1 231 1 75 1 38 1 237 1 239 1 224 2 27 2 242 1 29 2 160 1 304 1 49 2 
0 1 3 1 224 1 27 1 29 1 149 1 289 1 105 1 181 1 49 1 
0 1 38 1 11 1 252 1 239 1 224 2 27 2 29 1 178 1 49 2 108 1 
0 2 145 1 3 1 75 1 87 1 38 3 61 1 237 1 239 2 224 3 27 2 242 1 29 3 160 1 178 1 305 1 49 3 108 1 
0 2 145 1 3 1 75 1 87 1 38 3 254 1 237 1 239 2 224 3 27 2 242 1 29 3 160 1 178 1 305 1 49 3 108 1 
0 1 3 1 146 1 38 1 186 1 287 2 249 1 170 2 188 1 219 1 271 1 239 1 224 1 27 1 29 1 243 1 160 1 49 1 
86 1 0 1 145 1 231 1 75 1 38 1 239 1 224 1 27 1 98 1 29 2 160 1 49 1 
260 1 287 1 167 1 170 1 188 1 271 1 196 2 157 1 45 1 28 1 140 1 163 1 
196 1 113 1 83 1 179 1 116 1 50 1 51 1 
167 1 163 1 
260 1 263 1 113 1 287 1 167 1 169 1 170 1 271 1 13 1 196 2 157 1 45 1 301 1 28 1 176 1 163 1 50 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (34,159,161,287,349) (134,196) (134,196) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 314 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 263 268 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 263 (17,175) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 263 (115,135) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 263 (115,135) 292 183 (60,239) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
228 1 63 1 346 1 126 1 224 1 8 1 
228 1 63 1 346 1 126 1 224 1 8 1 
228 1 63 1 346 1 126 1 224 1 8 1 
228 1 63 1 346 1 126 1 224 1 8 1 
228 1 32 1 147 1 188 3 182 1 106 1 8 1 63 4 222 2 282 2 126 4 224 1 129 1 192 1 328 2 66 1 
213 1 228 1 21 1 63 1 196 1 134 1 349 1 91 1 126 1 224 1 8 1 192 1 
228 2 82 1 334 1 147 1 188 1 8 2 63 3 222 1 184 1 282 2 126 3 91 1 224 1 
43 1 228 2 2 1 32 1 334 1 147 3 188 7 106 1 182 1 8 2 36 1 85 1 63 9 222 4 282 4 126 9 91 1 224 1 129 1 192 1 66 1 328 2 
43 1 228 2 2 1 32 1 334 1 147 3 188 7 106 1 182 1 8 2 36 1 85 1 63 9 222 4 282 4 126 9 91 1 224 1 129 1 192 1 66 1 328 2 
176 1 22 1 314 1 
218 1 22 1 16 2 
280 2 209 2 70 1 325 2 296 2 146 2 24 2 278 1 
164 2 80 1 166 1 209 2 121 1 232 1 187 1 146 3 233 1 211 2 311 1 39 1 11 1 150 1 256 1 177 2 70 1 237 1 95 2 296 2 74 1 220 1 321 1 157 1 298 1 116 1 24 3 278 1 135 1 238 1 280 2 281 2 325 2 352 1 142 1 265 1 102 1 
209 1 296 1 146 1 278 1 24 1 61 1 280 1 325 1 141 1 205 1 
209 1 169 1 333 1 146 2 61 1 10 1 291 1 128 1 275 1 176 1 296 1 46 1 199 1 22 1 24 2 278 1 280 2 325 1 77 1 141 2 205 1 
209 2 169 2 333 1 146 2 61 1 10 2 291 1 128 1 176 1 296 2 199 1 22 1 24 2 278 1 280 2 325 2 77 1 141 2 205 1 
193 1 10 1 52 1 169 1 327 1 
193 1 176 1 10 2 144 1 258 1 169 2 22 1 327 1 
10 1 169 1 327 1 
193 1 209 1 169 1 296 1 146 1 278 1 24 1 61 1 10 1 280 1 325 1 77 1 141 1 205 1 
22 1 
193 1 176 1 10 2 144 1 169 2 22 1 185 1 327 1 
193 2 42 2 28 1 176 1 144 1 194 1 169 5 318 1 260 2 277 1 22 1 58 1 148 1 252 2 107 1 118 1 10 5 78 1 327 2 
177 1 121 1 187 1 296 1 233 1 146 2 74 1 157 1 298 1 24 2 211 1 135 1 322 1 280 1 281 1 325 1 352 1 102 1 274 1 154 1 
70 1 314 1 
209 1 70 2 296 1 146 2 24 2 270 1 280 2 325 1 273 1 
0 1 154 1 87 1 
177 1 121 1 70 1 187 1 146 1 233 1 74 1 157 1 298 1 24 1 211 1 135 1 281 1 352 1 102 1 286 1 
322 1 280 3 209 1 70 1 325 3 296 3 146 3 24 3 
280 1 325 1 141 1 296 1 146 1 24 1 61 1 
209 1 296 1 146 1 24 1 270 1 280 1 325 1 141 1 273 1 
164 1 166 1 209 2 121 1 169 1 232 1 187 1 333 1 233 1 146 4 311 1 211 1 39 1 270 1 10 1 256 1 291 1 274 1 128 1 177 1 70 1 237 1 95 2 296 3 74 1 199 1 220 1 298 1 157 1 116 1 24 4 278 1 135 1 322 1 280 3 281 1 325 3 352 1 240 1 141 1 142 1 265 1 102 1 303 1 
257 1 275 1 322 1 280 2 70 1 325 1 296 1 146 2 24 2 
104 1 209 1 169 1 333 1 296 3 146 3 22 1 199 1 24 3 270 1 10 1 322 2 280 3 325 3 141 1 274 1 303 1 291 1 128 1 
270 1 280 1 209 1 325 1 296 1 146 1 154 1 24 1 
177 1 121 1 70 1 187 1 146 1 233 1 74 1 157 1 298 1 24 1 211 1 135 1 281 1 352 1 102 1 
177 1 121 1 70 1 187 1 146 1 233 1 74 1 157 1 24 1 211 1 119 1 281 1 352 1 175 1 102 1 
164 2 0 1 166 1 347 1 237 1 71 1 95 2 210 1 336 1 116 2 87 1 136 1 39 1 256 1 92 1 265 1 142 1 153 1 154 1 
296 1 146 1 199 1 24 1 280 1 325 1 141 1 227 1 
257 1 275 1 209 1 70 1 296 4 146 5 24 5 322 2 270 1 280 5 325 4 274 1 216 1 127 1 
280 1 325 1 141 1 296 1 146 1 24 1 61 1 
251 1 355 1 
251 1 355 1 
319 1 54 1 
319 1 54 1 
319 1 54 1 
174 1 251 1 355 1 
174 1 251 1 355 1 
174 1 251 1 355 1 
112 1 251 1 355 1 
100 1 319 1 54 1 251 2 355 2 204 1 
111 1 251 1 355 1 
111 1 251 1 355 1 
111 1 251 1 355 1 
209 1 245 2 169 2 146 1 123 2 251 2 212 1 61 1 10 2 338 1 235 1 41 1 191 1 296 1 72 1 297 1 22 1 24 1 278 1 97 1 98 2 280 1 160 2 325 1 351 2 301 1 77 1 141 1 243 1 355 2 205 1 
245 1 169 1 57 1 146 2 289 1 123 1 251 1 310 1 312 1 10 1 112 1 70 1 276 1 133 1 296 2 24 2 98 1 160 1 280 2 324 1 325 2 351 1 301 1 355 1 
32 1 106 1 192 1 
21 1 32 1 192 1 
20 1 21 1 29 1 13 1 106 2 192 3 
20 1 21 1 13 1 288 1 106 1 192 2 
20 2 21 1 13 1 106 1 192 2 
28 3 144 1 169 5 81 1 33 1 308 2 289 1 170 1 58 1 252 1 310 1 10 5 173 2 90 1 16 3 42 1 193 4 176 1 347 1 218 1 133 1 71 1 260 1 22 2 99 1 118 2 50 1 162 1 353 1 327 1 163 2 103 1 
330 1 28 8 144 1 169 9 33 2 234 1 58 1 335 1 148 1 310 4 252 2 10 9 173 6 90 3 16 9 193 7 42 2 176 1 68 1 347 3 218 3 71 3 260 2 22 5 118 6 138 1 50 2 52 5 202 1 264 5 162 3 353 3 327 6 163 6 103 1 
28 3 81 1 169 3 33 1 308 1 170 1 252 1 148 1 310 1 10 3 173 2 90 1 16 4 193 2 42 1 176 1 347 1 218 2 71 1 260 1 22 3 118 2 50 1 353 1 162 1 163 2 
330 1 28 5 169 4 81 1 33 1 308 2 234 1 170 1 335 1 252 1 148 1 310 2 10 4 173 4 90 2 16 7 42 1 193 3 176 1 347 2 218 3 71 2 260 1 22 4 118 4 50 1 353 2 162 2 163 4 
263 1 314 1 
236 1 74 1 
248 1 
352 1 74 1 
263 1 352 1 268 1 74 1 102 1 96 1 
352 1 74 1 102 1 
167 1 74 1 
164 7 155 1 347 1 230 1 247 1 219 1 321 4 156 1 116 3 336 3 110 1 40 2 272 1 152 1 162 1 92 2 130 1 
164 7 155 1 347 1 230 1 247 1 219 1 321 4 156 1 116 3 336 3 110 1 40 2 272 1 152 1 162 1 92 2 130 1 
164 7 155 1 347 1 230 1 247 1 219 1 321 4 156 1 116 3 336 3 110 1 40 2 272 1 152 1 162 1 92 2 356 1 130 1 
164 31 165 1 166 1 230 1 247 2 290 3 336 10 39 1 40 3 110 5 90 3 152 1 272 1 151 1 256 1 215 1 92 5 293 1 18 1 130 2 155 1 347 4 219 2 237 1 195 4 71 3 179 1 95 2 321 16 156 2 116 15 117 1 353 3 162 4 
164 9 166 1 230 1 247 1 336 3 39 1 110 1 40 1 340 1 152 1 256 1 92 2 130 1 155 1 347 2 93 1 237 1 219 1 95 2 48 1 321 5 156 1 116 4 162 2 
228 1 29 1 121 1 32 1 82 1 187 1 188 1 84 1 106 1 8 1 59 1 211 1 337 1 63 2 126 2 91 1 192 2 21 1 177 1 345 1 73 1 180 1 350 1 279 1 281 1 184 1 53 1 282 1 224 1 326 1 
228 1 29 1 121 1 32 1 82 1 187 1 188 2 84 1 106 1 8 1 59 1 211 1 62 1 337 1 63 3 126 3 91 1 192 2 21 1 177 1 345 1 178 1 180 1 350 1 279 1 281 1 184 1 282 1 326 1 120 1 
29 1 121 1 32 1 82 1 187 1 188 2 84 1 106 1 59 1 211 1 62 1 63 2 91 1 126 2 192 2 21 1 177 1 180 1 350 1 279 1 281 1 184 1 282 1 326 1 120 1 
228 1 177 1 121 1 187 1 178 1 74 1 180 2 157 1 8 1 350 2 211 1 279 2 38 1 63 1 281 1 223 1 352 1 283 1 91 2 126 1 15 1 113 1 315 1 
228 1 21 1 29 1 177 1 121 1 345 1 32 1 187 1 73 1 180 1 84 1 106 1 59 1 8 1 350 1 211 1 279 1 337 1 63 1 281 1 91 1 126 1 326 1 224 1 120 1 192 2 
140 1 
305 1 28 1 144 1 121 1 169 3 333 1 187 1 33 1 146 1 58 1 211 2 252 1 10 3 89 1 64 1 291 1 113 1 128 1 42 1 176 1 275 1 177 2 260 1 94 1 46 1 22 1 199 1 74 1 181 1 157 2 24 1 200 1 118 1 280 1 281 2 223 1 352 1 141 1 327 2 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 144 1 169 3 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 3 280 1 141 1 64 1 291 1 185 1 327 1 128 1 
42 1 176 1 275 1 169 2 333 1 260 1 94 1 146 1 46 1 22 1 199 1 58 1 24 1 252 1 200 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
176 1 275 1 169 2 333 1 94 1 46 1 146 1 22 1 199 1 200 1 24 1 10 2 280 1 141 1 64 1 291 1 128 1 
42 1 176 1 275 1 169 2 333 1 260 1 94 1 146 1 46 1 22 1 199 1 58 1 24 1 252 1 200 1 10 2 280 1 141 1 64 1 291 1 128 1 
164 5 155 1 166 1 347 1 230 1 70 2 219 2 237 1 95 2 321 2 116 3 336 2 136 1 39 1 152 1 256 1 314 1 162 1 92 2 265 1 142 1 130 2 
164 15 80 1 0 12 166 2 145 1 3 1 232 1 249 1 290 3 336 3 87 12 39 2 110 3 90 3 151 2 256 2 215 1 154 12 70 1 195 4 237 2 45 1 95 4 321 10 116 5 241 1 353 3 162 3 142 2 265 1 
164 2 0 1 80 1 166 1 3 1 35 1 232 1 146 1 253 1 39 1 256 1 274 1 237 1 296 1 95 2 321 1 24 1 116 1 322 1 280 1 325 1 142 1 265 1 
0 2 3 1 231 1 232 1 6 1 187 1 146 2 233 1 311 1 190 1 110 2 274 1 154 2 237 2 74 1 321 3 157 1 116 2 24 2 322 1 280 1 281 1 325 1 239 1 162 1 164 5 79 1 166 2 121 1 211 1 336 3 87 2 39 2 90 1 256 2 92 1 177 1 95 4 296 1 298 1 135 1 352 1 353 1 265 2 142 2 102 1 
164 2 80 1 166 1 121 3 187 2 232 1 211 2 39 1 108 1 149 1 150 1 256 1 113 1 344 1 177 2 237 1 95 2 74 2 321 1 157 1 116 1 281 2 76 1 223 1 352 2 102 1 142 1 265 1 206 1 329 1 
164 3 0 1 166 1 209 1 3 1 146 1 336 1 87 1 270 1 39 1 271 1 90 1 256 1 92 1 154 1 347 1 237 1 71 1 95 2 296 1 321 1 24 1 116 2 280 1 325 1 353 1 162 1 142 1 265 1 
164 2 0 1 166 1 237 1 95 2 105 1 321 2 336 1 87 1 136 1 39 1 110 1 90 1 256 1 162 1 265 1 142 1 154 1 
164 2 0 1 166 1 347 1 237 1 71 1 95 2 336 1 116 2 87 1 136 1 39 1 256 1 92 1 265 1 142 1 153 1 154 1 
164 4 0 2 166 1 336 2 87 2 39 1 110 1 90 1 256 1 92 1 154 2 347 1 237 1 71 1 95 2 321 2 116 2 136 1 162 1 353 1 142 1 265 1 
164 2 0 1 166 1 237 1 95 2 105 1 321 2 336 1 87 1 39 1 110 1 149 1 90 1 256 1 162 1 265 1 142 1 154 1 
164 2 0 1 166 1 347 1 237 1 71 1 95 2 336 1 116 2 87 1 39 1 149 1 256 1 92 1 265 1 142 1 153 1 154 1 
164 2 0 1 166 1 237 1 95 2 321 2 336 1 87 1 39 1 110 1 149 1 90 1 256 1 353 1 162 1 265 1 142 1 154 1 
164 2 0 1 166 1 237 1 95 2 321 2 336 1 87 1 39 1 110 1 90 1 256 1 353 1 162 1 265 1 142 1 154 1 
164 2 80 1 166 1 121 1 187 1 232 1 233 1 146 1 311 1 211 1 39 1 256 1 177 1 70 1 237 1 95 2 74 1 321 1 298 1 157 1 24 1 116 1 135 1 281 1 352 1 102 1 265 1 142 1 
164 2 80 1 166 1 121 1 55 1 187 1 232 1 233 1 146 1 211 1 39 1 256 1 175 1 177 1 70 1 237 1 95 2 74 1 321 1 157 1 24 1 116 1 119 1 281 1 352 1 102 1 265 1 142 1 
164 2 0 1 166 1 3 1 237 1 95 2 321 2 336 1 87 1 39 1 110 1 90 1 256 1 353 1 162 1 265 1 142 1 154 1 
164 2 0 1 166 1 121 1 187 1 233 1 146 1 336 1 311 1 211 1 87 1 190 1 39 1 110 1 90 1 256 1 154 1 177 1 237 1 95 2 74 1 321 2 298 1 24 1 135 1 281 1 53 1 352 1 162 1 353 1 102 1 265 1 142 1 
164 2 0 1 166 1 1 1 209 1 3 1 146 1 336 1 87 1 270 1 39 1 110 1 90 1 256 1 154 1 237 1 95 2 296 1 321 2 24 1 280 1 325 1 353 1 162 1 142 1 265 1 
164 19 166 2 5 1 290 1 336 6 39 2 12 1 339 1 110 3 90 3 151 1 256 2 215 1 14 2 92 3 294 1 132 1 347 3 195 2 237 2 71 3 95 4 48 1 321 9 116 10 139 2 285 1 353 3 162 3 203 1 
164 26 166 3 208 1 122 1 290 2 336 4 189 1 39 3 12 2 339 1 110 2 90 3 256 3 215 2 92 2 14 4 294 2 69 1 347 2 179 2 237 3 195 2 71 2 95 6 48 1 321 14 116 12 139 1 26 1 285 1 353 3 162 3 203 1 244 1 
230 1 5 1 189 1 12 2 110 4 151 1 152 1 14 4 155 1 69 1 71 4 237 3 195 4 321 20 116 21 26 1 162 5 285 1 203 1 244 1 164 41 166 3 208 1 122 1 290 3 336 8 39 3 40 1 339 1 90 4 256 3 215 3 92 4 130 1 131 1 294 1 347 5 179 1 219 1 95 6 48 1 139 1 353 4 
164 38 166 4 208 1 230 1 122 1 5 1 290 3 336 7 189 1 39 4 12 2 339 1 40 1 110 3 90 4 152 1 151 1 256 4 215 3 14 4 92 4 131 1 130 1 294 1 155 1 69 1 347 4 219 1 179 2 195 4 237 4 71 3 95 8 48 1 321 20 116 18 139 1 26 1 285 1 353 4 162 5 203 1 244 1 
164 53 166 3 208 1 230 1 122 1 290 4 336 15 189 1 39 3 12 1 339 1 40 1 110 7 90 7 152 1 151 2 256 3 215 2 14 4 92 8 130 1 294 1 155 1 69 1 347 8 219 1 179 2 195 4 237 3 71 7 95 6 48 1 321 27 116 26 139 1 26 1 241 2 285 1 353 7 162 8 203 1 244 1 
245 1 297 1 123 1 251 1 98 1 323 1 160 1 235 1 41 1 191 1 355 1 
112 1 312 1 
98 1 160 1 245 1 4 1 7 1 123 1 302 1 251 1 355 1 
209 1 245 1 169 1 146 1 123 1 251 1 212 1 61 1 10 1 338 1 235 1 41 1 191 1 296 1 72 1 297 1 22 1 24 1 278 1 97 1 98 1 280 1 160 1 325 1 351 2 301 1 77 1 141 1 243 1 355 1 205 1 
209 1 245 1 169 1 146 1 123 1 251 1 212 1 61 1 10 1 338 1 235 1 41 1 191 1 296 1 72 1 297 1 22 1 24 1 278 1 97 1 98 1 280 1 160 1 325 1 351 2 301 1 77 1 141 1 243 1 355 1 205 1 
209 1 245 1 169 1 146 1 123 1 251 1 212 1 61 1 10 1 338 1 235 1 41 1 191 1 296 1 72 1 297 1 22 1 24 1 278 1 97 1 98 1 280 1 160 1 325 1 351 2 301 1 77 1 141 1 243 1 355 1 205 1 
174 1 204 1 37 1 
174 1 204 1 37 1 
304 1 111 1 
304 1 111 1 204 1 
324 1 57 1 
245 1 169 1 57 1 146 2 289 1 123 1 251 1 310 1 312 1 10 1 338 1 112 1 193 1 70 1 276 1 133 1 296 2 24 2 97 1 98 1 160 1 280 2 324 1 351 1 325 2 284 1 355 1 
174 1 37 1 
304 1 111 1 204 1 
164 2 80 1 166 1 121 1 56 1 30 1 3 1 187 1 232 1 146 2 250 1 211 2 86 1 39 1 150 2 256 1 177 2 237 1 198 1 95 2 74 1 321 1 23 1 24 2 116 1 280 2 281 2 352 1 142 1 265 1 329 1 
21 1 29 1 177 2 121 1 345 1 32 1 187 1 106 1 59 1 211 2 269 1 279 1 201 1 51 1 281 2 53 1 326 1 120 1 192 2 
21 1 29 1 177 1 345 1 121 1 32 1 187 1 106 1 59 1 211 1 171 1 279 1 51 1 281 1 326 1 120 1 192 2 
177 1 121 1 187 1 74 1 157 1 211 1 279 1 201 1 281 1 221 1 223 1 352 1 315 1 113 1 
21 1 29 1 177 1 121 1 345 1 32 1 187 1 106 1 59 1 211 1 269 1 279 1 201 1 51 1 281 1 326 1 120 1 192 2 
83 1 
28 1 176 1 118 1 318 1 78 1 22 1 314 1 
28 1 144 1 307 1 169 1 58 1 252 1 10 1 16 1 316 1 42 1 176 1 218 1 260 1 22 2 320 1 118 1 327 1 
42 1 236 1 177 1 121 2 295 1 187 1 260 1 74 2 58 1 157 1 96 1 252 1 211 1 281 1 214 1 352 1 102 1 
305 1 28 8 168 1 144 1 122 1 169 1 33 1 58 2 290 1 309 1 252 2 189 1 10 1 173 5 90 2 215 1 16 6 114 1 42 2 176 2 69 1 347 2 218 3 195 1 260 2 71 2 22 5 137 2 118 5 26 1 353 2 162 2 327 1 163 5 244 1 
28 2 209 1 169 1 146 1 58 1 309 1 252 1 61 1 10 1 130 1 42 1 155 1 347 1 93 1 219 1 260 1 296 1 24 1 278 1 137 2 118 2 101 1 280 1 325 1 77 1 141 1 162 2 205 1 
42 1 176 1 28 1 318 1 260 1 22 1 58 1 252 1 118 1 78 1 
79 1 28 5 347 2 218 5 71 2 22 5 309 1 137 2 118 5 173 5 90 2 353 2 162 2 16 10 163 5 
176 1 10 1 144 1 169 1 22 1 327 1 
305 2 28 2 229 2 144 2 267 1 121 1 169 3 187 1 33 2 58 1 148 1 252 2 211 4 124 1 10 3 89 1 113 1 42 2 177 4 260 2 74 1 181 1 157 2 118 2 300 1 281 4 223 1 352 1 327 4 
164 1 166 1 209 2 121 1 232 1 187 1 146 3 233 1 211 1 311 1 39 1 256 1 177 1 70 1 237 1 95 2 296 2 220 1 74 1 157 1 298 1 116 1 24 3 278 1 135 1 280 2 281 1 325 2 352 1 102 1 265 1 142 1 
42 1 305 1 28 1 176 2 218 2 260 1 33 1 22 4 58 1 252 1 118 2 173 2 40 1 16 4 163 2 
98 1 109 1 123 1 
98 1 109 1 123 1 
98 1 109 1 123 1 
98 1 158 1 57 1 242 1 123 1 
98 1 266 1 123 1 
98 1 266 1 123 1 
98 1 266 1 123 1 
98 1 123 1 
251 1 355 1 
164 8 155 1 166 2 347 1 230 1 237 2 179 1 219 1 95 4 321 4 116 4 336 3 39 2 40 1 110 1 152 1 256 2 162 1 92 2 130 1 
164 6 155 1 230 1 347 1 219 1 321 3 116 3 336 2 40 1 152 1 314 1 162 1 92 2 130 1 
164 4 166 1 347 1 71 1 237 1 95 2 321 2 116 2 336 2 39 1 110 1 90 1 256 1 353 1 162 1 92 1 27 1 
164 7 347 1 71 1 195 2 321 3 290 1 116 4 336 2 110 1 90 1 151 1 215 1 353 1 162 1 92 1 
164 23 166 2 230 1 290 2 336 9 39 2 40 1 110 4 90 2 152 1 151 1 256 2 92 5 130 2 155 1 317 1 347 3 219 2 195 2 71 2 179 2 237 2 45 1 95 4 321 11 116 12 241 1 162 3 353 2 
164 1 195 1 116 1 
164 1 321 1 290 1 
79 1 164 6 166 1 347 1 237 1 71 1 95 2 321 3 116 3 336 3 39 1 110 1 90 1 256 1 353 1 162 1 92 2 27 1 
164 13 166 2 122 1 290 1 336 3 189 1 39 2 110 1 90 2 256 2 215 1 92 2 69 1 347 2 195 1 237 2 71 2 179 1 95 4 48 1 321 6 116 7 26 1 353 2 162 2 244 1 
164 6 155 1 347 1 219 1 321 3 116 3 336 2 110 1 162 1 92 1 130 1 
164 3 317 1 166 1 230 1 219 1 179 1 237 1 95 2 321 1 336 2 116 2 39 1 110 1 152 1 256 1 92 1 130 1 
164 10 155 1 166 1 347 2 93 1 237 1 219 2 95 2 48 1 321 5 336 5 116 5 39 1 110 2 256 1 162 2 92 3 130 2 
164 2 166 1 237 1 95 2 48 1 321 2 336 1 39 1 110 1 90 1 256 1 162 1 
164 4 166 1 347 1 71 1 237 1 95 2 48 1 321 2 116 2 336 2 39 1 110 1 90 1 256 1 353 1 162 1 92 1 
164 3 317 1 166 3 179 1 5 1 237 3 219 1 95 6 48 1 321 1 116 2 336 2 39 3 110 1 256 3 92 1 130 1 
164 29 165 1 166 4 230 1 5 1 290 3 336 10 39 4 40 1 110 5 90 3 152 1 151 1 256 4 215 1 92 5 18 1 130 2 155 1 347 4 219 2 179 1 195 4 237 4 71 3 95 8 48 1 321 14 116 15 117 1 353 3 162 4 27 1 
164 8 166 1 230 1 290 1 336 2 39 1 40 1 152 1 256 1 215 1 92 2 130 1 155 1 347 1 195 1 237 1 219 1 95 2 48 1 321 4 116 4 162 1 244 1 
164 11 166 2 230 1 290 1 336 3 39 2 40 1 110 1 90 1 152 1 151 1 256 2 215 1 92 2 130 1 155 1 347 1 219 1 195 2 237 2 95 4 48 1 321 6 116 5 353 1 162 2 244 1 27 1 
164 19 166 3 230 1 122 1 290 1 336 4 189 1 39 3 40 1 110 1 90 2 152 1 256 3 215 1 92 3 130 1 155 1 69 1 347 3 219 1 195 1 237 3 71 2 179 1 95 6 48 1 321 9 116 10 26 1 353 2 162 3 27 1 244 1 
164 12 166 4 122 1 290 1 336 3 189 1 39 4 110 1 90 2 256 4 215 1 92 2 69 1 347 1 195 1 237 4 71 1 179 2 95 8 48 1 321 7 116 5 26 1 353 2 162 2 27 1 244 1 
164 8 166 1 230 1 290 1 336 2 39 1 40 1 152 1 256 1 215 1 92 2 130 1 155 1 347 1 195 1 237 1 219 1 95 2 48 1 321 4 116 4 162 1 244 1 
164 13 166 2 122 1 290 1 336 3 189 1 39 2 110 1 90 2 256 2 215 1 92 2 69 1 347 2 195 1 237 2 71 2 179 1 95 4 48 1 321 6 116 7 26 1 353 2 162 2 244 1 
164 18 166 4 230 1 122 1 290 1 336 5 189 1 39 4 40 1 110 2 90 2 152 1 256 4 215 1 92 3 130 1 155 1 69 1 347 2 219 1 195 1 237 4 71 1 179 2 95 8 48 1 321 10 116 8 26 1 353 2 162 3 244 1 27 1 
164 16 166 4 122 1 5 1 290 1 336 6 189 1 39 4 110 3 90 3 256 4 215 1 92 3 69 1 347 2 195 1 237 4 71 2 179 2 95 8 48 1 321 9 116 7 26 1 353 3 162 3 244 1 
164 7 155 1 347 1 230 2 219 3 321 3 116 4 336 6 110 3 152 1 162 1 92 3 130 3 
164 18 166 4 230 1 122 1 5 1 290 1 336 4 189 1 39 4 40 1 110 1 90 2 152 1 256 4 215 1 92 3 130 1 155 1 69 1 347 2 219 1 195 1 237 4 71 1 179 2 95 8 48 1 321 10 116 8 26 1 353 2 162 3 244 1 
257 1 275 1 280 1 254 1 70 1 146 1 24 1 
31 1 332 1 70 1 348 1 261 1 255 1 141 1 217 1 
281 1 177 1 121 1 223 1 187 1 352 1 74 1 314 1 157 1 113 1 211 1 
177 1 121 1 70 1 187 1 296 1 233 1 146 2 74 1 157 1 24 2 211 1 135 1 322 1 280 1 281 1 325 1 352 1 102 1 
343 1 229 1 167 1 177 1 121 1 70 1 187 1 296 2 233 1 146 2 199 1 74 3 24 2 211 1 135 1 322 1 280 2 281 1 325 1 352 2 141 1 102 2 128 1 
229 1 167 1 121 1 187 1 146 2 233 1 211 2 175 1 128 1 343 1 177 2 70 1 296 2 74 3 199 1 24 2 322 1 280 2 281 2 325 1 352 2 141 1 354 1 102 2 
236 1 10 1 229 1 281 1 177 1 169 1 263 1 74 1 327 1 17 1 211 1 
236 1 10 1 229 1 281 1 177 1 169 1 263 1 74 1 115 1 327 1 211 1 
306 1 281 1 177 1 121 1 187 1 211 1 
306 1 207 1 177 6 121 3 187 2 74 3 250 1 157 2 96 1 211 7 281 7 76 1 150 1 53 1 352 2 102 1 120 1 225 1 206 1 67 1 19 1 
164 5 166 2 230 1 121 1 3 1 187 1 233 1 146 2 336 2 86 1 211 1 311 1 190 1 39 2 152 1 256 2 92 2 130 2 155 1 177 1 347 1 70 2 219 2 237 2 296 1 95 4 74 1 321 2 298 1 116 3 24 2 135 1 322 1 280 1 281 1 325 1 352 1 53 1 239 1 162 1 102 1 142 2 265 2 
193 1 42 1 236 1 177 1 169 1 260 1 74 1 115 1 58 1 157 1 252 1 211 1 60 1 183 1 10 1 124 1 281 1 263 1 327 1 292 1 
306 1 177 1 121 2 187 1 74 1 96 1 211 1 281 1 214 1 263 1 352 1 102 1 
177 4 121 1 187 1 74 1 157 1 211 4 88 1 281 4 223 1 53 1 352 1 354 1 113 1 
344 1 229 1 177 2 121 2 187 1 74 1 211 2 281 2 108 1 76 1 352 1 125 1 102 1 206 1 
21 1 281 1 177 1 121 1 32 1 187 1 326 1 157 1 211 1 192 1 
177 2 121 1 187 1 74 1 250 1 23 1 211 2 281 2 53 1 352 1 120 1 
229 1 207 1 177 4 121 2 187 2 74 3 157 1 250 1 211 5 88 1 281 5 223 1 53 1 352 2 113 1 225 1 
229 1 207 1 177 4 121 2 187 2 74 3 157 1 250 1 211 5 88 1 75 1 281 5 223 1 53 1 352 2 113 1 
177 1 121 1 70 1 187 1 296 1 233 1 146 2 74 1 157 1 24 2 211 1 322 1 280 1 281 1 325 1 352 1 175 1 102 1 
229 1 177 1 121 2 187 1 74 1 96 1 211 1 281 1 76 1 352 1 102 1 206 1 19 1 
70 1 259 1 313 1 342 1 9 1 
209 1 331 1 169 2 333 1 146 1 9 1 61 1 10 2 313 1 291 1 342 1 128 1 193 1 176 1 259 1 296 1 199 1 22 1 24 1 278 1 280 1 325 1 25 1 77 1 141 2 303 1 143 1 205 1 
280 1 56 1 30 1 259 1 313 1 198 1 146 1 24 1 9 1 
331 1 25 1 313 1 
82 1 184 1 282 1 314 1 
228 1 63 1 82 1 184 1 282 1 126 1 8 1 
63 1 91 1 350 1 
228 1 159 1 63 3 82 1 184 1 34 1 161 1 282 1 349 2 126 3 224 1 8 1 
228 1 63 2 82 1 184 1 282 1 188 1 126 2 8 1 328 1 
228 1 63 1 222 1 32 1 282 1 126 1 106 1 224 1 8 1 192 1 66 1 
228 1 63 1 82 1 282 1 126 1 224 1 8 1 
228 1 63 1 82 2 184 1 126 1 224 1 8 1 
228 2 44 1 82 1 47 1 8 2 63 2 262 1 282 1 126 2 224 1 
228 1 2 1 82 1 147 1 188 2 8 1 36 1 63 3 222 1 184 1 282 2 126 3 224 1 
228 1 21 1 29 1 246 1 32 1 82 1 188 1 106 1 8 1 63 2 184 1 282 1 126 2 224 1 192 2 
228 2 82 1 147 1 188 2 8 2 63 4 222 1 184 1 282 2 126 4 224 1 129 1 328 1 
228 1 63 1 82 1 184 1 282 1 126 1 224 1 8 1 
228 1 34 1 82 2 147 1 349 1 188 2 8 1 299 1 159 1 63 4 222 1 184 2 282 3 126 4 
43 1 228 1 82 1 188 1 8 1 63 2 184 1 282 1 341 1 126 2 224 1 65 1 
228 1 287 1 34 2 82 1 349 2 8 1 159 1 63 3 184 1 282 1 126 3 224 1 
282 2 49 1 226 1 172 2 
228 1 63 1 197 1 126 1 224 1 8 1 
228 1 2 1 63 2 82 1 184 1 282 1 188 1 126 2 224 1 8 1 
186 1 
228 1 63 1 82 1 184 1 282 1 126 1 224 1 8 1 
228 1 2 1 82 1 188 1 349 1 8 1 63 3 184 1 282 1 126 3 224 1 
222 1 282 1 147 1 299 1 
82 1 282 1 

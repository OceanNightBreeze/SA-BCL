#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (78,100) (78,100) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (78,100) (78,100) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (78,100) (78,100) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (78,100) (78,100) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 258 39 6 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 94 139 265 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (11,46) 133 367 55 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 258 315 286 363 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 258 243 286 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 258 315 286 363 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 258 315 286 363 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 258 315 286 363 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 258 39 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 367 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 258 243 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 94 249 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 94 139 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 94 111 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 212 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 280 2 170 3 353 1 181 2 356 1 132 1 317 1 70 1 362 1 289 2 292 1 273 3 
317 1 78 1 100 1 20 1 1 1 170 1 337 1 289 1 292 1 273 1 181 1 
317 1 78 1 100 1 20 1 1 1 170 1 337 1 289 1 292 1 273 1 181 1 
317 1 78 1 100 1 20 1 1 1 170 1 337 1 289 1 292 1 273 1 181 1 
317 1 78 1 100 1 20 1 1 1 170 1 337 1 289 1 292 1 273 1 181 1 
309 1 165 3 280 3 170 4 89 1 181 1 356 1 132 1 328 1 316 1 330 2 232 1 70 1 362 2 289 1 292 1 273 4 294 1 
166 1 280 1 170 2 181 1 89 1 356 1 132 1 316 1 203 1 317 1 235 1 289 1 337 1 292 1 293 1 273 2 
165 7 170 9 232 1 62 1 273 9 309 1 326 1 280 5 353 1 260 1 354 1 181 2 89 1 356 1 132 1 328 1 330 2 316 1 317 1 70 3 362 4 289 2 292 1 294 1 
165 7 170 9 232 1 62 1 273 9 309 1 326 1 280 5 353 1 260 1 354 1 181 2 89 1 356 1 132 1 328 1 330 2 316 1 317 1 70 3 362 4 289 2 292 1 294 1 
82 1 349 1 277 1 252 1 279 1 230 1 114 1 253 1 18 1 44 1 248 1 287 1 271 1 225 1 
368 1 
300 1 277 2 321 1 252 2 364 1 230 1 368 1 189 1 
266 1 277 5 110 1 321 2 252 5 340 2 230 2 180 1 261 1 189 1 254 2 222 1 183 1 300 1 4 1 205 2 196 1 336 1 368 1 
156 1 368 1 189 1 
84 1 
82 2 44 2 349 2 248 2 287 1 114 2 185 1 225 2 
338 1 227 1 112 1 114 2 299 1 115 1 58 1 60 1 303 1 148 2 35 1 344 1 345 1 175 1 216 1 82 2 349 2 123 2 125 1 87 2 16 1 65 1 281 1 178 1 262 2 44 2 314 1 248 3 287 1 135 2 288 1 185 1 186 1 51 1 264 1 225 3 52 1 
18 1 82 1 44 1 349 1 248 1 287 1 271 1 114 1 253 1 225 1 
277 1 145 1 211 1 252 1 56 1 189 1 253 1 44 1 68 1 248 1 137 1 368 1 225 1 164 1 
82 1 349 1 277 2 145 1 211 1 252 2 114 1 189 1 253 1 44 1 248 1 137 1 368 1 225 1 164 1 
17 1 277 1 321 1 252 1 230 1 
300 1 277 2 127 1 321 1 252 2 230 1 368 1 189 1 
277 1 321 1 252 1 
82 1 240 1 349 1 144 1 114 1 253 1 44 2 248 2 215 1 185 1 225 2 
11 1 133 1 106 1 
338 1 10 1 123 1 125 1 16 1 178 1 248 1 58 1 148 1 135 1 288 1 216 1 185 1 186 1 264 1 225 1 
156 1 185 1 
338 1 82 1 349 1 123 1 125 1 11 1 16 1 178 1 57 1 44 1 255 1 58 1 248 2 148 1 135 1 288 1 216 1 186 1 264 1 225 2 
57 1 82 3 44 3 349 3 248 3 114 1 185 1 225 3 
18 1 82 1 44 1 349 1 248 1 253 1 225 1 
82 1 349 1 240 1 144 1 114 1 253 1 44 1 248 1 225 1 
338 1 227 1 112 1 144 1 145 1 211 1 252 1 114 2 299 1 115 1 253 1 57 1 255 1 58 1 148 1 35 1 344 1 175 1 257 1 216 1 82 3 349 3 123 1 125 1 277 1 87 1 16 1 65 1 178 1 262 2 246 1 314 1 44 3 248 4 287 1 135 1 288 1 137 1 185 1 186 1 51 1 264 1 164 1 225 4 
82 1 57 1 44 2 349 1 68 1 248 2 346 1 185 1 225 2 
82 3 108 1 349 3 277 1 144 1 211 1 145 1 252 1 114 1 253 1 57 2 44 3 255 1 248 3 257 1 137 1 368 1 225 3 164 1 
82 2 349 2 11 1 144 1 114 1 57 1 44 2 248 2 106 1 225 2 
338 1 123 1 125 1 16 1 178 1 248 1 58 1 148 1 135 1 288 1 216 1 185 1 186 1 264 1 225 1 
338 1 308 1 123 1 218 1 125 1 16 1 178 1 248 1 58 1 148 1 135 1 288 1 216 1 185 1 225 1 
53 1 227 2 270 1 299 1 31 1 115 1 303 2 35 1 34 1 175 1 200 1 199 1 11 2 87 4 65 1 88 1 262 2 103 1 46 1 133 2 361 1 106 2 51 1 141 1 
82 1 44 1 349 1 248 1 145 1 146 1 253 1 225 1 
82 4 349 4 144 1 114 1 131 1 57 2 44 5 255 1 68 1 248 5 204 1 346 1 185 1 225 5 
18 1 82 2 44 2 349 2 248 2 146 1 253 1 225 2 
95 1 75 1 157 1 
301 1 75 2 298 1 157 2 152 1 197 1 
75 1 157 1 
75 1 157 1 
298 1 152 1 
298 1 152 1 
298 1 152 1 
75 1 157 1 244 1 
75 1 157 1 244 1 
75 1 157 1 244 1 
75 1 157 1 322 1 
75 1 157 1 322 1 
75 1 157 1 322 1 
295 2 275 1 73 1 201 2 277 2 210 1 75 2 157 2 252 2 221 1 3 1 147 3 192 2 301 1 318 1 97 2 136 1 80 2 368 1 
295 1 75 1 252 1 147 1 192 1 95 1 231 1 80 1 99 1 82 2 349 2 275 1 201 1 277 1 350 1 157 1 40 1 102 1 355 1 44 2 248 2 334 1 185 1 225 2 
343 1 316 2 293 1 294 1 247 2 
316 1 89 1 294 1 
316 1 293 1 89 1 
343 1 316 3 12 1 293 1 247 1 294 2 
343 1 5 1 316 2 293 1 247 1 294 1 
267 1 110 1 321 1 340 1 252 5 269 1 230 4 31 1 189 1 254 1 76 2 300 1 323 1 99 1 196 3 153 1 200 1 84 3 277 5 40 1 66 1 41 2 103 1 134 1 334 1 205 1 71 1 91 2 138 1 336 2 368 2 141 1 
187 5 267 2 110 1 321 6 30 1 252 9 167 1 340 2 230 7 31 3 189 1 254 2 300 1 323 3 99 4 196 8 120 1 200 3 83 1 84 9 277 9 66 3 41 6 67 1 17 5 222 1 103 3 134 2 205 2 91 6 224 1 138 1 336 6 368 5 141 3 
267 1 340 1 252 3 230 2 269 1 31 1 189 1 254 1 76 1 323 2 99 1 196 3 200 1 277 3 84 4 66 1 41 2 103 1 222 1 134 1 71 1 205 1 91 2 336 2 368 3 141 1 
267 1 30 1 340 1 252 4 269 1 230 3 31 2 189 1 254 1 76 2 323 3 99 2 196 5 200 2 84 7 277 4 66 2 41 4 67 1 103 2 222 1 134 1 205 1 71 1 91 4 224 1 336 4 368 4 141 2 
325 1 
156 1 16 1 163 1 
16 1 208 1 
58 1 16 1 
58 1 16 3 151 1 216 1 163 2 202 1 
58 1 16 1 216 1 
16 1 107 1 
199 1 28 1 87 1 351 1 303 1 34 2 48 1 98 1 272 1 150 1 49 1 207 1 290 1 24 1 
191 1 6 1 303 2 227 1 61 1 39 1 28 1 87 3 272 1 258 1 24 2 
199 1 28 1 87 1 351 1 220 1 262 2 115 1 303 1 34 1 35 1 48 1 98 1 272 1 175 1 49 1 184 1 51 1 24 1 
199 1 28 1 87 1 351 1 303 1 34 2 48 1 98 1 272 1 150 1 49 1 207 1 24 1 
199 1 28 1 87 1 351 1 303 1 34 2 48 1 98 1 272 1 150 1 49 1 207 1 24 1 
123 1 125 1 242 1 109 1 16 1 278 1 170 1 282 1 178 1 181 1 58 1 148 1 104 2 317 2 135 1 288 1 333 1 37 1 234 2 289 1 119 1 121 2 273 1 
169 1 170 1 341 1 148 1 234 1 118 1 121 1 273 1 63 1 123 1 125 1 126 1 12 1 245 1 89 1 181 1 316 2 104 1 317 1 135 1 360 1 288 1 289 1 292 1 293 1 294 1 
74 1 165 1 169 1 170 2 341 1 148 1 234 1 121 1 273 2 63 1 123 1 125 1 126 1 12 1 280 1 245 1 89 1 181 1 356 1 132 1 316 2 104 1 317 1 135 1 360 1 288 1 289 1 292 1 293 1 294 1 
165 2 169 1 170 3 341 1 148 1 234 1 118 1 121 1 273 3 123 1 125 1 126 1 12 1 280 1 245 1 89 1 181 1 158 1 356 1 132 1 316 2 104 1 317 1 135 1 360 1 288 1 333 1 289 1 293 1 294 1 
165 2 169 1 170 2 341 1 148 1 234 1 118 1 121 1 273 2 123 1 125 1 12 1 280 1 158 1 89 1 356 1 132 1 316 2 104 1 317 1 135 1 360 1 288 1 293 1 294 1 
13 1 
267 1 321 6 145 1 56 1 189 1 58 1 194 1 323 2 148 2 233 1 196 2 9 1 154 2 277 5 16 1 278 1 68 1 248 1 288 1 205 1 336 2 23 1 250 2 164 1 25 2 251 1 26 1 110 1 27 1 211 1 252 5 340 1 253 1 254 1 300 3 116 2 304 2 36 2 117 2 37 1 123 2 84 2 125 1 177 1 86 1 42 1 178 2 179 4 44 1 135 2 137 1 319 1 263 1 368 2 225 1 
251 1 26 1 27 1 321 2 145 1 211 1 252 3 56 1 253 1 300 1 116 1 233 1 277 3 179 2 44 1 248 1 68 1 137 1 364 1 263 1 164 1 225 1 
251 1 26 1 27 1 321 1 145 1 211 1 252 3 56 1 253 1 189 1 300 1 304 1 233 1 277 3 179 3 44 1 248 1 68 1 137 1 364 1 263 1 368 1 164 1 225 1 
251 1 26 1 27 1 321 2 145 1 211 1 252 3 56 1 253 1 189 1 300 1 116 1 304 1 233 1 277 3 179 3 44 1 248 1 68 1 137 1 364 1 263 1 250 1 368 1 164 1 225 1 
0 1 321 7 145 1 56 1 189 5 323 2 233 1 196 1 237 1 9 1 154 2 277 5 14 1 248 1 68 1 69 1 205 1 23 1 336 1 250 4 164 1 25 2 251 1 26 1 110 1 27 1 211 1 252 5 340 1 253 1 254 1 300 3 116 4 304 4 36 2 117 2 179 6 44 1 137 1 364 1 263 1 366 1 368 5 225 1 
25 2 251 1 26 1 110 1 27 1 321 4 145 1 211 1 340 1 252 4 56 1 189 1 253 1 254 1 300 2 116 2 323 2 304 2 36 2 117 2 233 1 196 1 9 1 154 2 84 2 277 4 177 1 179 4 44 1 68 1 248 1 205 1 137 1 336 1 263 1 23 1 368 2 250 2 225 1 164 1 
25 2 251 1 26 1 110 1 27 1 321 4 145 1 211 1 340 1 252 4 56 1 189 1 253 1 254 1 300 2 116 2 323 2 304 2 36 2 117 2 233 1 196 1 237 1 9 1 154 2 277 4 14 1 179 4 44 1 248 1 68 1 137 1 205 1 336 1 23 1 263 1 366 1 368 1 250 2 164 1 225 1 
25 2 251 1 26 1 110 1 27 1 321 4 145 1 211 1 340 1 252 4 56 1 189 1 253 1 254 1 300 2 116 2 323 2 304 2 36 2 117 2 233 1 196 1 237 1 9 1 154 2 277 4 14 1 179 4 44 1 248 1 68 1 137 1 205 1 336 1 23 1 263 1 366 1 368 1 250 2 164 1 225 1 
25 2 296 1 251 1 26 1 110 1 27 1 321 4 145 1 211 1 340 1 252 4 229 2 56 1 189 1 253 1 254 1 300 2 116 2 304 2 77 2 117 2 233 1 196 1 9 1 84 2 277 4 179 4 44 1 248 1 68 1 137 1 205 1 206 1 336 1 263 1 366 1 162 1 368 1 250 2 164 1 225 1 
25 2 251 1 0 1 26 1 110 1 27 1 321 5 145 1 211 1 340 1 252 4 56 1 189 1 253 1 254 1 300 2 323 2 116 3 304 3 36 2 117 2 233 1 196 1 237 1 9 1 154 2 277 4 14 1 179 5 44 1 248 1 68 1 205 1 137 1 336 1 23 1 263 1 366 1 368 1 250 3 164 1 225 1 
25 2 251 1 0 1 26 1 110 1 27 1 321 5 145 1 211 1 340 1 252 4 56 1 189 1 253 1 254 1 300 2 323 2 116 3 304 3 36 2 117 2 233 1 196 1 237 1 9 1 154 2 277 4 14 1 179 5 44 1 248 1 68 1 205 1 137 1 336 1 23 1 263 1 366 1 368 1 250 3 164 1 225 1 
25 2 251 1 296 1 26 1 110 1 27 1 321 4 145 1 211 1 340 1 252 4 229 2 56 1 189 1 253 1 254 1 300 2 116 2 304 2 77 2 117 2 233 1 196 1 9 1 84 2 277 4 177 1 179 4 44 1 68 1 248 1 205 1 137 1 336 1 263 1 368 1 250 2 225 1 164 1 
74 1 227 1 299 2 115 2 94 1 57 1 60 1 58 3 148 4 303 1 35 2 344 1 79 1 176 1 175 2 37 1 216 1 82 1 347 1 349 1 123 4 125 2 87 2 16 3 311 1 65 2 259 1 278 1 281 1 178 2 262 4 44 1 248 1 135 4 288 3 361 1 50 1 139 1 265 1 51 2 225 1 
227 2 144 1 114 1 299 1 31 1 115 1 303 1 34 1 35 1 175 1 82 1 199 1 200 1 349 1 11 1 87 3 65 1 66 1 262 2 44 1 103 1 160 1 248 1 133 1 331 1 106 1 51 1 225 1 141 1 
199 1 156 1 351 1 65 1 299 1 262 2 115 1 34 1 35 1 98 1 48 1 361 1 175 1 49 1 51 1 
11 3 227 1 55 1 87 2 65 1 299 1 262 2 115 1 191 1 160 1 303 1 133 3 35 1 61 1 175 1 367 1 51 1 
338 1 227 1 299 1 115 1 57 1 172 1 255 1 58 1 148 1 303 1 35 1 8 1 344 1 175 1 216 1 82 1 123 1 10 1 349 1 125 1 87 2 16 1 65 1 281 1 178 1 262 2 44 1 160 1 248 2 161 1 135 1 288 1 106 1 185 1 186 1 264 1 51 1 225 2 
227 7 57 1 58 2 148 1 98 1 149 1 200 2 199 3 11 6 16 2 65 3 66 2 281 1 285 2 103 2 248 3 160 1 288 2 207 1 106 6 338 2 29 2 299 3 31 2 171 2 115 3 255 1 303 7 34 4 35 3 344 1 175 3 216 2 82 1 123 1 349 1 125 2 87 14 351 1 130 2 178 1 262 6 43 1 44 1 314 2 133 6 135 1 48 1 49 1 186 2 51 3 264 2 225 3 141 2 
53 1 11 1 87 2 65 1 299 1 31 1 262 2 115 1 133 1 303 2 34 1 35 1 361 1 175 1 207 1 106 1 51 1 141 1 
199 1 200 1 11 1 227 2 87 2 65 1 270 1 299 1 262 2 115 1 103 1 133 1 34 1 35 1 361 1 175 1 106 1 51 1 
227 2 31 1 299 1 115 1 303 2 35 1 34 2 175 1 200 1 199 1 11 2 87 4 65 1 66 1 262 2 103 1 133 2 361 1 207 1 106 2 51 1 141 1 
347 1 53 1 11 1 87 2 65 1 299 1 31 1 262 2 115 1 133 1 303 2 34 1 35 1 175 1 207 1 106 1 51 1 141 1 
199 1 347 1 200 1 11 1 227 2 87 2 65 1 270 1 299 1 262 2 115 1 103 1 133 1 34 1 35 1 175 1 106 1 51 1 
227 2 31 1 299 1 115 1 303 2 35 1 34 2 175 1 347 1 200 1 199 1 11 2 87 4 65 1 66 1 262 2 103 1 133 2 207 1 106 2 51 1 141 1 
227 2 31 1 299 1 115 1 303 2 35 1 34 2 175 1 200 1 199 1 11 2 87 4 65 1 66 1 262 2 103 1 133 2 207 1 106 2 51 1 141 1 
338 1 227 1 299 1 115 1 58 1 303 1 148 1 35 1 344 1 175 1 216 1 123 1 125 1 87 2 16 1 65 1 281 1 178 1 262 2 314 1 248 1 135 1 288 1 185 1 186 1 264 1 51 1 225 1 
338 1 226 1 227 1 299 1 115 1 58 1 303 1 148 1 35 1 344 1 175 1 216 1 308 1 123 1 125 1 218 1 87 2 16 1 65 1 281 1 178 1 262 2 248 1 135 1 288 1 185 1 51 1 225 1 
227 2 31 1 299 1 115 1 303 2 35 1 34 2 175 1 200 1 199 1 11 2 87 4 65 1 66 1 262 2 103 1 160 1 133 2 207 1 106 2 51 1 141 1 
338 1 74 1 227 2 31 1 299 1 171 1 115 1 58 1 303 2 148 1 34 2 35 1 175 1 216 1 199 1 200 1 123 1 125 1 11 2 87 4 16 1 65 1 66 1 262 2 103 1 314 1 248 1 133 2 135 1 288 1 207 1 106 2 186 1 264 1 51 1 141 1 225 1 
227 1 144 1 114 1 299 1 31 1 115 1 303 2 34 1 35 1 175 1 82 1 200 1 349 1 11 1 87 3 65 1 66 1 262 2 103 1 44 1 160 1 248 1 133 1 22 1 207 1 106 1 51 1 225 1 141 1 
227 2 87 4 262 2 115 1 191 1 182 1 315 1 45 1 286 1 303 2 35 1 61 1 175 1 258 1 363 1 184 1 51 1 
243 1 227 4 87 8 262 2 115 1 191 2 315 2 182 2 45 1 286 2 303 4 61 2 35 1 175 1 258 2 363 1 184 1 51 1 
227 2 87 4 262 2 115 1 191 1 182 1 315 1 45 1 286 1 303 2 35 1 61 1 175 1 258 1 363 1 184 1 51 1 
227 2 87 4 262 2 115 1 191 1 182 1 315 1 45 1 286 1 303 2 35 1 61 1 175 1 258 1 363 1 184 1 51 1 
227 2 87 4 262 2 115 1 191 1 182 1 315 1 45 1 286 1 303 2 35 1 61 1 175 1 258 1 363 1 184 1 51 1 
295 1 192 1 301 1 201 1 210 1 219 1 75 1 80 1 157 1 221 1 
95 1 355 1 
295 1 54 1 192 1 358 1 201 1 75 1 80 1 157 1 352 1 
295 1 275 1 277 1 201 1 210 1 75 1 252 1 157 1 221 1 3 1 147 2 192 1 301 1 318 1 97 1 136 1 80 1 368 1 
295 1 275 1 277 1 201 1 210 1 75 1 252 1 157 1 221 1 3 1 147 2 192 1 301 1 318 1 97 1 136 1 80 1 368 1 
295 1 275 1 277 1 201 1 210 1 75 1 252 1 157 1 221 1 3 1 147 2 192 1 301 1 318 1 97 1 136 1 80 1 368 1 
59 1 244 1 197 1 
59 1 244 1 197 1 
322 1 140 1 
322 1 197 1 140 1 
231 1 102 1 
295 1 75 1 252 1 230 1 3 1 147 1 192 1 95 1 231 1 97 1 80 1 99 1 82 2 349 2 277 1 201 1 350 1 157 1 40 1 102 1 355 1 44 2 248 2 223 1 334 1 185 1 225 2 
59 1 244 1 
322 1 197 1 140 1 
44 1 248 1 33 1 225 1 
123 1 125 1 16 1 278 1 282 1 178 1 58 1 148 1 135 1 288 1 37 1 324 1 320 1 121 1 
123 1 125 1 126 1 12 1 169 1 89 1 316 2 195 1 148 1 7 1 135 1 360 1 288 1 118 1 293 1 320 1 294 1 121 1 
123 2 125 1 74 1 126 1 12 1 169 1 89 1 316 2 195 1 148 2 7 1 135 2 360 1 288 1 118 1 293 1 320 1 294 1 121 1 
123 1 125 1 126 1 12 1 169 1 89 1 316 2 195 1 148 1 135 1 360 1 288 1 21 1 118 1 293 1 294 1 121 1 
359 1 
266 1 110 1 340 1 189 1 254 1 183 1 205 1 196 1 336 1 368 1 
200 2 84 10 339 1 29 1 66 2 31 2 41 5 103 2 323 5 256 2 91 5 196 5 336 5 368 5 141 2 
300 1 277 1 321 1 252 1 368 1 189 1 
267 2 110 1 321 4 92 1 340 2 252 3 254 2 300 2 58 1 302 1 148 4 37 1 196 2 274 1 123 4 125 1 277 3 86 1 16 1 278 1 327 2 178 2 42 2 222 1 135 4 288 1 205 2 319 1 336 2 
266 1 183 1 156 1 196 1 336 1 368 1 189 1 
110 1 321 1 340 1 252 1 189 1 254 1 300 1 323 1 36 1 196 1 154 1 84 1 277 1 205 1 336 1 23 1 368 2 
266 1 267 2 321 5 189 2 58 2 148 3 323 6 196 9 274 1 200 2 276 2 277 5 16 8 66 2 327 1 284 2 202 1 103 2 288 3 205 4 291 1 208 3 336 8 163 2 107 1 74 1 110 4 29 2 339 3 211 2 340 4 252 5 31 2 254 4 214 2 300 3 256 2 174 2 306 2 81 1 307 1 216 2 123 3 125 2 84 12 310 1 41 6 42 1 178 1 183 1 135 3 91 6 368 8 141 2 
267 1 110 2 339 1 321 1 228 1 252 1 168 1 340 2 2 1 31 2 189 2 254 2 191 1 300 1 323 3 61 1 256 2 258 1 196 8 239 1 200 2 277 1 84 6 85 1 243 1 66 2 41 5 42 1 159 1 103 2 205 2 91 5 336 5 368 5 141 2 
110 1 339 1 340 1 252 1 114 1 253 1 254 1 173 1 256 2 271 1 196 2 82 1 200 1 349 1 277 1 14 1 351 1 279 1 18 1 44 1 248 1 47 1 287 1 48 1 205 1 336 2 225 1 141 2 
338 1 227 1 112 1 114 2 299 1 115 1 58 1 148 1 35 1 344 1 175 1 216 1 82 2 123 1 349 2 125 1 87 1 16 1 65 1 178 1 262 2 44 2 314 1 248 3 287 1 135 1 288 1 185 1 186 1 51 1 264 1 225 3 
84 4 267 1 110 1 340 1 41 2 42 1 189 2 254 1 323 2 272 1 205 1 91 2 196 1 336 2 368 4 
213 1 201 1 80 1 102 1 221 1 
193 1 201 1 80 1 
193 1 201 1 80 1 
193 1 201 1 80 1 
217 1 201 1 80 1 
217 1 201 1 80 1 
217 1 201 1 80 1 
201 1 80 1 
75 1 157 1 
199 3 200 2 227 5 87 10 351 2 262 2 115 1 173 1 303 5 47 1 35 1 34 5 48 2 175 1 207 2 184 1 51 1 141 2 
87 2 31 1 262 2 115 1 303 2 35 1 34 1 175 1 207 1 184 1 51 1 141 1 
199 1 200 1 227 2 87 4 66 1 31 1 262 2 115 1 103 1 303 2 34 2 35 1 175 1 207 1 184 1 51 1 141 1 
199 1 227 2 188 1 87 3 351 1 32 1 283 1 262 6 115 3 303 1 35 3 34 2 48 1 175 3 207 1 184 1 51 3 
191 1 357 1 303 1 227 1 61 1 39 1 35 3 188 1 87 2 175 3 258 1 184 1 51 3 262 6 115 3 
191 1 303 1 227 1 61 1 243 1 35 1 87 2 175 1 258 1 184 1 51 1 262 2 115 1 
191 1 357 1 303 1 227 1 61 1 243 1 35 2 87 2 175 2 258 1 184 1 51 2 262 4 115 2 
227 7 228 1 2 1 31 2 32 1 115 3 191 1 303 6 61 1 35 3 34 3 98 1 175 3 258 1 239 1 200 2 199 2 243 1 87 13 351 1 66 2 262 6 357 1 159 1 103 2 48 1 49 1 207 1 184 1 51 3 141 2 
191 1 303 1 227 1 61 1 243 1 35 1 87 2 175 1 258 1 184 1 51 1 262 2 115 1 
191 1 303 1 227 1 61 1 243 1 35 1 87 2 175 1 258 1 184 1 51 1 262 2 115 1 
227 6 228 1 2 1 31 2 115 1 191 1 303 6 61 1 35 1 34 2 175 1 258 1 239 1 200 2 199 1 243 1 87 12 66 2 262 2 103 2 159 1 207 1 184 1 51 1 141 2 
191 1 357 1 303 1 227 1 61 1 243 1 35 2 87 2 175 2 258 1 184 1 51 2 262 4 115 2 
191 1 303 1 227 1 61 1 243 1 35 2 188 1 87 2 175 2 258 1 184 1 51 2 262 4 115 2 
199 2 227 1 87 2 351 2 303 1 34 4 98 2 48 2 49 1 207 2 
191 1 303 1 227 1 61 1 243 1 35 2 188 1 87 2 175 2 258 1 184 1 51 2 262 4 115 2 
199 1 227 1 87 2 351 1 262 4 32 1 115 2 303 1 34 2 35 2 98 1 48 1 175 2 49 1 207 1 51 2 
199 1 34 1 48 1 98 1 156 1 351 1 49 1 
199 1 200 1 227 2 87 4 66 1 31 1 262 2 115 1 103 1 357 1 303 2 34 2 35 1 175 1 207 1 51 1 141 1 
191 1 303 1 227 1 61 1 87 2 258 1 
191 1 303 1 227 1 61 1 87 2 367 1 
227 1 61 1 87 1 
191 1 303 1 87 1 
200 1 199 2 227 3 29 1 87 6 66 1 31 1 262 2 115 1 357 1 103 1 303 3 35 1 34 4 175 1 207 2 51 1 141 1 
191 1 303 1 227 1 61 1 243 1 35 1 87 2 175 1 258 1 184 1 51 1 262 2 115 1 
200 1 199 1 227 3 87 6 351 1 47 1 303 3 34 2 48 1 207 1 141 1 
227 6 32 1 115 1 173 1 303 6 35 1 34 6 98 1 175 1 272 1 199 3 200 1 87 12 351 3 262 2 283 1 47 1 48 3 49 1 207 3 51 1 141 1 
44 1 248 1 68 1 346 1 342 1 185 1 225 1 
122 1 124 1 101 1 342 1 190 1 44 1 68 1 248 1 72 1 346 1 185 1 225 1 
348 1 123 4 125 1 74 1 16 1 278 1 178 1 58 1 148 4 105 1 135 4 288 1 37 1 
123 1 125 1 16 1 311 1 58 1 148 1 135 1 288 2 176 1 79 1 50 1 335 1 216 1 
123 1 316 1 125 1 148 1 135 1 288 1 169 1 178 1 293 1 89 1 
123 2 125 1 74 1 16 2 311 1 94 1 58 2 148 2 135 2 288 2 79 1 176 1 50 1 118 1 249 1 216 1 
123 2 125 1 74 1 16 2 311 1 178 1 94 1 58 2 148 2 135 2 288 2 79 1 176 1 50 1 139 1 216 1 
123 2 125 1 74 1 111 1 16 2 311 1 178 1 94 1 58 2 148 2 135 2 288 2 79 1 176 1 50 1 216 1 
123 1 125 1 58 1 148 1 135 1 288 1 156 1 16 1 278 1 37 1 178 1 
338 1 82 1 349 1 123 1 125 1 16 1 178 1 57 1 44 1 58 1 248 2 148 1 135 1 288 1 216 1 185 1 186 1 225 2 
338 1 145 1 253 1 57 1 58 2 148 1 307 1 216 2 82 1 123 1 349 2 125 1 16 3 327 1 44 2 248 2 135 1 288 1 137 1 185 1 186 1 225 2 107 1 
338 1 145 1 253 1 57 1 58 2 148 2 307 1 216 2 82 1 348 1 308 1 123 2 349 2 125 1 16 3 327 1 44 2 248 2 135 2 288 1 137 1 185 1 225 2 107 1 
252 1 114 1 253 1 189 1 148 1 271 1 82 1 123 1 349 1 277 1 16 1 279 1 327 1 313 1 18 1 44 1 248 1 287 1 135 1 208 1 368 1 225 1 
348 1 123 3 276 1 277 2 125 1 321 1 211 1 16 4 252 2 327 1 178 1 189 1 58 1 148 3 135 3 288 1 307 1 216 1 208 1 368 1 163 1 107 1 
123 1 125 1 148 1 332 1 135 1 288 1 
142 1 123 1 125 1 16 1 178 1 202 1 58 1 148 1 135 1 288 2 79 1 50 1 216 1 
338 1 74 1 299 2 171 1 115 2 57 1 58 1 148 1 34 1 35 2 98 1 175 2 216 1 82 1 199 1 349 1 123 1 125 1 351 1 16 1 65 2 262 4 44 1 285 1 314 1 160 1 248 2 135 1 48 1 288 1 49 1 365 1 186 1 51 2 264 1 225 2 
266 1 110 2 321 2 211 1 340 2 252 3 230 1 189 1 254 2 214 1 300 1 148 1 306 1 196 1 274 1 123 1 276 1 277 3 16 2 178 1 284 1 183 1 135 1 205 2 336 1 208 1 368 1 163 1 
123 2 125 1 74 1 16 2 202 1 58 1 148 2 332 1 135 2 288 2 81 1 216 1 163 1 
338 1 82 1 308 1 349 1 123 1 125 1 16 1 178 1 57 1 44 1 58 1 248 2 148 1 135 1 288 1 216 1 185 1 225 2 
142 1 123 1 125 1 16 1 327 1 202 1 58 1 148 1 135 1 288 2 79 1 50 1 216 1 
198 1 96 1 15 1 113 1 185 1 
241 1 277 1 143 1 15 1 252 1 230 1 212 1 
198 1 33 1 15 1 113 1 
198 1 143 1 15 1 145 1 211 1 113 1 212 1 253 1 96 1 257 1 137 1 164 1 
356 1 132 1 280 1 170 1 289 1 292 1 273 1 181 1 
268 1 165 2 93 1 280 3 170 4 181 1 356 2 132 2 305 1 70 1 362 1 235 1 289 1 273 4 
356 1 132 1 155 1 165 1 280 1 170 2 289 1 260 1 292 1 90 1 273 2 181 1 
129 1 280 1 93 2 170 3 181 1 356 1 132 1 305 1 289 1 235 2 292 1 273 3 
19 1 280 2 236 2 238 1 
209 1 170 1 289 1 292 1 273 1 181 1 
356 1 132 1 165 1 62 1 280 1 170 2 289 1 292 1 273 2 181 1 
297 1 
356 1 132 1 280 1 170 1 289 1 292 1 273 1 181 1 
356 1 132 1 156 1 280 1 
356 1 132 1 280 1 170 1 289 1 273 1 181 1 
317 1 234 1 170 1 
312 1 280 1 93 1 170 3 181 1 356 1 132 1 305 1 289 1 235 2 292 1 273 3 
356 1 132 1 330 1 165 1 280 1 170 2 289 1 273 2 181 1 
280 1 170 1 181 1 89 1 316 1 232 1 362 1 289 1 292 1 273 1 294 1 
132 1 280 1 170 1 289 1 292 1 273 1 181 1 
356 1 132 2 170 1 289 1 292 1 273 1 181 1 
64 1 128 1 280 1 170 2 181 2 132 1 329 1 289 2 292 1 273 2 
165 2 326 1 280 2 170 3 181 1 356 1 132 1 62 1 70 1 362 1 289 1 292 1 273 3 
12 1 165 1 280 1 170 2 181 1 89 1 356 1 132 1 316 2 38 1 289 1 292 1 293 1 273 2 294 1 
165 2 280 2 170 4 181 2 356 1 132 1 328 1 330 1 70 1 362 1 289 2 292 1 273 4 
165 1 280 1 170 3 181 1 356 1 132 1 62 1 289 1 235 1 292 1 273 3 
268 1 70 1 362 1 280 1 
132 1 280 1 

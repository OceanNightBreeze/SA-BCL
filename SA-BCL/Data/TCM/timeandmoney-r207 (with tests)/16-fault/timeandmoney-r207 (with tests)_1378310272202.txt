#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 86 293 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 86 293 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 280 73 253 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 280 73 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 280 73 253 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 280 73 253 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 280 73 253 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 182 339 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 1 189 266 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 3 26 2 321 5 325 1 140 2 54 9 184 1 328 1 329 2 162 4 10 1 168 1 35 6 101 2 37 1 313 1 197 1 64 2 315 1 42 1 263 2 239 1 242 1 289 1 342 1 133 1 220 9 366 2 
135 3 26 2 321 5 325 1 140 2 54 9 184 1 328 1 329 2 162 4 10 1 168 1 35 6 101 2 37 1 313 1 197 1 64 2 315 1 42 1 263 2 239 1 242 1 289 1 342 1 133 1 220 9 366 2 
135 4 26 2 321 6 325 1 140 2 54 10 184 1 328 1 329 2 162 5 10 1 168 1 35 7 101 2 37 1 313 1 197 1 64 2 315 1 42 1 263 2 239 1 242 1 289 1 342 1 133 1 220 10 366 2 
135 2 26 2 321 4 140 2 54 7 184 1 328 1 329 2 162 3 10 1 168 1 35 4 101 1 37 1 313 1 197 1 64 2 315 1 42 1 263 2 239 1 242 1 289 1 342 1 133 1 220 7 366 2 
37 1 135 1 26 1 321 3 325 1 64 1 315 1 54 4 329 1 162 2 263 1 239 1 242 1 133 1 220 4 35 3 366 1 101 2 
37 1 26 1 321 1 64 1 140 1 54 2 329 1 251 1 42 1 164 1 263 1 239 1 240 1 242 1 342 1 220 2 
37 1 135 1 321 2 140 1 54 3 329 2 162 1 10 1 263 2 239 1 242 1 220 3 35 1 
135 3 26 1 321 5 325 1 140 1 54 9 328 1 162 4 329 2 10 1 35 7 101 2 37 1 20 1 197 1 314 1 64 1 315 1 263 2 239 1 242 1 133 1 220 9 366 1 
135 3 26 1 321 5 325 1 140 1 54 9 328 1 162 4 329 2 10 1 35 7 101 2 37 1 20 1 197 1 314 1 64 1 315 1 263 2 239 1 242 1 133 1 220 9 366 1 
30 1 244 1 9 1 
61 1 118 2 244 1 
166 1 254 2 71 2 120 2 55 1 142 2 294 2 237 2 
345 1 2 2 346 2 347 1 137 1 71 3 349 1 6 1 139 2 212 1 55 1 248 1 142 2 166 1 145 1 254 2 120 2 33 1 214 1 124 1 16 1 60 1 173 1 358 1 79 2 259 1 21 1 196 1 232 1 284 2 237 3 43 1 217 1 203 1 178 1 294 2 222 1 
45 1 181 1 254 1 322 1 71 1 120 1 55 1 142 1 294 1 237 1 
193 1 181 1 338 1 71 1 72 1 108 1 236 1 237 1 316 1 30 1 244 1 190 1 304 1 294 1 
181 1 338 1 71 1 72 2 142 1 236 1 237 1 316 1 30 1 254 1 120 1 244 1 190 1 304 2 294 1 
172 1 354 1 72 1 159 1 304 1 
278 1 172 1 30 1 244 1 360 1 72 2 159 1 304 2 
72 1 159 1 304 1 
172 1 181 1 322 1 71 1 72 1 107 1 55 1 142 1 237 1 45 1 254 1 120 1 304 1 294 1 
244 1 
278 1 172 1 30 1 299 1 244 1 72 2 159 1 304 2 
278 1 172 2 39 1 180 1 311 1 41 2 72 5 159 2 163 2 28 1 177 1 265 1 187 1 30 1 288 1 244 1 218 1 304 5 307 2 
166 1 9 1 
181 1 71 2 142 1 237 2 166 1 227 1 112 1 254 1 120 1 294 2 102 1 
88 1 211 1 34 1 
346 1 79 1 137 1 71 1 21 1 196 1 349 1 139 1 296 1 237 1 166 1 217 1 145 1 124 1 16 1 60 1 
346 1 79 1 137 1 211 1 21 1 196 1 71 2 349 1 127 1 139 1 237 2 77 1 217 1 145 1 254 1 120 1 124 1 294 1 60 1 16 1 
166 1 77 1 254 3 71 3 120 3 142 1 294 3 237 3 
45 1 181 1 254 1 71 1 120 1 294 1 237 1 
181 1 71 1 142 1 237 1 112 1 254 1 120 1 294 1 102 1 
2 1 181 2 137 1 139 1 55 1 142 2 227 1 145 1 190 1 16 1 60 1 102 1 338 1 196 1 21 1 284 2 236 1 237 4 203 1 69 1 294 3 346 1 347 1 71 4 72 1 349 1 212 1 166 1 77 1 254 3 120 3 33 1 304 1 214 1 124 1 173 1 79 1 259 1 127 1 316 1 43 1 217 1 131 1 178 1 222 1 
181 1 71 2 108 1 237 2 166 1 227 1 77 1 254 1 120 1 305 1 294 2 
338 1 181 1 71 3 72 1 127 1 261 1 142 1 236 1 237 3 316 1 77 2 254 3 131 1 120 3 244 1 304 1 190 1 294 3 102 1 
254 1 211 1 71 1 120 1 142 1 294 1 237 1 102 1 
346 1 79 1 137 1 71 1 196 1 21 1 349 1 139 1 237 1 166 1 217 1 145 1 124 1 16 1 60 1 
346 1 79 1 137 1 71 1 196 1 21 1 349 1 139 1 286 1 237 1 166 1 24 1 145 1 16 1 60 1 
258 1 2 2 347 1 259 1 211 1 284 2 351 1 298 1 330 1 76 1 43 1 203 1 178 1 214 2 34 1 222 1 
181 1 71 1 236 1 237 1 272 1 254 1 120 1 294 1 
195 1 71 5 127 1 108 1 142 1 237 5 166 1 275 1 77 2 254 4 120 4 305 1 294 5 102 1 
45 1 181 1 254 1 71 1 120 1 294 1 237 1 
165 1 170 1 
165 1 170 1 
150 1 270 1 
150 1 270 1 
150 1 270 1 
165 1 170 1 233 1 
165 1 170 1 233 1 
165 1 170 1 233 1 
165 1 170 1 47 1 
165 2 170 2 67 1 80 1 150 1 270 1 
165 1 170 1 324 1 
165 1 170 1 324 1 
165 1 170 1 324 1 
170 2 62 2 72 2 143 2 92 1 185 1 57 1 130 1 341 1 165 2 83 2 276 1 241 2 67 1 244 1 290 3 304 2 49 2 51 1 
157 1 158 1 71 2 72 1 143 1 165 1 166 1 254 2 120 2 304 1 355 1 170 1 103 1 62 1 262 1 237 2 83 1 47 1 132 1 290 1 49 1 292 1 294 2 51 1 
26 1 64 1 366 1 
26 1 240 1 64 1 
26 3 153 1 240 1 359 1 366 2 249 1 
26 2 153 1 240 1 359 1 245 1 366 1 
26 2 153 1 240 1 359 2 366 1 
224 2 72 5 225 1 159 1 351 1 163 1 74 1 28 3 76 1 118 3 30 1 32 1 119 1 121 1 304 5 355 1 307 1 278 1 172 4 61 1 39 1 41 1 149 2 283 1 262 1 151 1 264 2 265 2 317 1 243 1 244 2 292 1 
224 6 72 9 225 2 226 1 159 6 144 1 351 3 250 1 163 2 28 8 76 3 118 9 30 1 32 3 119 2 354 5 355 4 304 9 307 2 172 7 278 1 61 3 39 1 279 1 41 2 199 1 149 6 285 1 151 1 340 5 265 6 317 3 243 3 244 5 218 1 
224 2 72 3 225 1 351 1 74 1 163 1 28 3 76 1 30 1 118 4 119 1 32 1 304 3 355 1 307 1 172 2 61 2 41 1 149 2 283 1 264 1 265 2 243 1 317 1 244 3 218 1 
224 4 72 4 225 1 226 1 144 1 351 2 163 1 74 1 28 5 76 2 30 1 118 7 119 1 32 2 304 4 355 2 307 1 172 3 61 3 279 1 41 1 149 4 283 1 264 2 265 4 243 2 317 2 244 4 218 1 
21 1 219 1 9 1 
21 1 182 1 
111 1 
137 1 21 1 
40 1 44 1 137 1 21 3 196 1 219 2 
137 1 21 1 196 1 
21 1 255 1 
36 3 2 7 320 1 232 4 247 1 56 1 186 2 76 1 32 1 167 1 204 1 78 1 230 2 214 3 303 1 123 1 50 1 
36 3 2 7 320 1 232 4 247 1 56 1 186 2 76 1 32 1 167 1 204 1 78 1 230 2 214 3 303 1 123 1 50 1 
36 3 223 1 2 7 320 1 247 1 232 4 56 1 186 2 76 1 32 1 167 1 204 1 78 1 230 2 214 3 303 1 123 1 50 1 
2 1 4 1 204 1 232 1 230 1 123 2 56 1 
2 9 320 1 347 2 138 1 247 1 186 3 76 1 32 1 167 1 78 1 230 2 123 1 214 4 303 1 337 1 36 4 232 5 284 4 65 1 203 2 204 1 178 2 50 1 222 2 
346 1 208 1 26 2 321 1 349 1 350 1 139 1 140 1 54 2 249 1 329 1 29 1 95 1 145 1 122 1 35 1 256 1 125 1 37 1 79 1 64 1 23 1 263 1 239 1 240 1 242 1 205 1 344 1 220 2 366 1 
346 1 26 2 321 1 349 1 350 1 139 1 140 1 54 3 249 1 329 1 29 1 95 1 145 1 334 1 122 1 35 2 256 1 79 1 64 1 176 1 129 1 23 1 263 1 239 1 240 1 242 1 205 1 344 1 220 3 366 1 
346 1 26 2 321 1 349 1 140 1 350 1 139 1 54 2 249 1 29 1 95 1 145 1 334 1 122 1 35 2 256 1 79 1 64 1 176 1 23 1 239 1 240 1 242 1 220 2 366 1 
277 1 346 1 79 1 137 1 21 1 349 1 140 2 139 1 350 2 7 1 54 1 129 1 329 1 84 1 263 1 29 2 145 1 268 1 122 2 220 1 319 1 221 1 16 1 
346 1 26 2 349 1 350 1 139 1 140 1 54 1 249 1 329 1 29 1 95 1 145 1 122 1 256 1 125 1 37 1 79 1 64 1 176 1 23 1 263 1 240 1 205 1 344 1 220 1 366 1 
310 1 
346 2 295 1 137 2 349 2 72 2 225 1 139 2 159 2 163 1 28 1 145 3 304 2 356 1 16 2 307 1 278 1 39 1 79 2 312 1 196 1 21 2 41 1 109 1 84 1 85 1 265 1 206 1 155 1 319 1 
52 1 181 1 71 1 72 3 326 1 159 2 30 2 299 1 96 1 304 3 190 1 336 1 278 1 193 1 338 1 200 1 108 1 236 1 237 1 316 1 363 1 244 2 318 2 294 1 
52 1 181 1 71 1 72 3 326 1 159 1 30 3 96 1 299 1 304 3 190 1 278 1 193 1 338 1 200 1 108 1 236 1 237 1 316 1 363 1 244 3 68 1 318 3 294 1 
52 1 181 1 71 1 72 3 326 1 159 2 30 3 299 1 96 1 97 1 304 3 190 1 336 1 278 1 193 1 338 1 200 1 108 1 236 1 237 1 316 1 363 1 244 3 68 1 318 3 294 1 
52 1 181 1 326 1 89 2 141 1 183 2 96 1 97 4 190 1 14 1 336 4 278 3 17 1 193 1 61 2 338 1 200 1 108 1 236 1 237 1 244 8 68 4 293 1 294 1 71 1 72 5 159 7 163 1 252 1 28 1 30 8 299 1 353 2 301 1 304 5 307 1 309 2 39 1 41 1 316 1 265 1 363 1 86 1 318 6 
52 1 181 1 71 1 89 2 326 1 72 4 159 4 183 2 141 1 163 1 28 1 331 1 118 2 30 5 96 1 353 2 301 1 97 2 304 4 190 1 307 1 336 2 309 2 278 2 61 2 193 1 39 1 338 1 41 1 200 1 108 1 236 1 237 1 316 1 265 1 363 1 68 2 244 6 318 4 294 1 
52 1 181 1 71 1 89 2 72 4 326 1 159 4 183 2 141 1 163 1 28 1 252 1 30 5 96 1 353 2 301 1 97 2 14 1 304 4 190 1 307 1 336 2 309 2 278 2 61 2 193 1 39 1 338 1 41 1 200 1 108 1 236 1 237 1 316 1 265 1 363 1 86 1 68 2 244 5 318 4 294 1 
52 1 181 1 71 1 89 2 72 4 326 1 159 4 183 2 141 1 163 1 28 1 252 1 30 5 96 1 353 2 301 1 97 2 14 1 304 4 190 1 307 1 336 2 309 2 278 2 61 2 193 1 39 1 338 1 41 1 200 1 108 1 236 1 237 1 316 1 265 1 363 1 86 1 68 2 244 5 318 4 294 1 
52 1 115 1 181 1 71 1 72 4 326 1 159 4 163 1 28 1 117 1 118 2 30 5 96 1 353 2 301 1 97 2 14 1 304 4 190 1 307 1 336 2 309 2 278 2 193 1 39 1 174 2 338 1 63 1 41 1 200 1 108 1 362 2 236 1 237 1 316 1 265 1 363 1 68 2 244 5 318 4 294 1 
52 1 181 1 71 1 72 2 326 1 159 1 30 3 96 1 97 1 304 2 190 1 336 1 193 1 338 1 200 1 108 1 236 1 237 1 316 1 363 1 86 1 68 1 244 3 318 3 293 1 294 1 
52 1 181 1 71 1 72 2 326 1 159 1 30 3 96 1 97 1 304 2 190 1 336 1 193 1 338 1 200 1 108 1 236 1 237 1 316 1 363 1 86 1 68 1 244 3 318 3 293 1 294 1 
52 1 181 1 71 1 326 1 72 4 159 4 163 1 28 1 331 1 118 2 30 5 96 1 353 2 301 1 97 2 304 4 190 1 307 1 336 2 309 2 278 2 193 1 39 1 174 2 338 1 63 1 41 1 200 1 108 1 362 2 236 1 237 1 316 1 265 1 363 1 68 2 244 5 318 4 294 1 
88 1 2 6 347 1 211 1 247 1 9 1 186 2 76 1 166 2 32 1 167 1 78 1 230 1 303 1 214 3 34 1 36 2 258 1 259 1 232 3 284 2 43 1 203 1 178 1 50 1 222 1 
88 4 1 2 2 9 320 1 347 2 181 1 211 5 212 1 213 2 166 1 227 1 11 1 32 2 214 3 335 1 34 5 36 1 259 1 148 1 232 6 281 1 282 1 284 4 43 2 203 2 243 2 317 2 178 2 114 1 222 2 
88 1 345 1 346 1 2 2 347 1 137 1 71 2 349 1 327 1 139 1 212 1 296 1 166 1 77 1 145 1 254 1 120 1 335 1 214 1 124 1 60 1 16 1 79 1 259 1 21 1 196 1 232 1 127 1 284 2 237 2 43 1 217 1 203 1 269 1 178 1 25 1 294 1 222 1 
179 1 88 1 2 5 137 1 139 1 186 1 145 1 335 1 99 1 59 1 16 1 60 1 196 1 21 1 232 3 284 4 237 2 203 2 243 1 294 1 346 1 347 2 71 2 211 2 349 1 212 1 77 1 300 1 254 1 32 1 120 1 214 2 34 2 124 1 36 1 173 1 79 1 259 2 260 1 127 1 43 2 217 1 317 1 178 2 222 2 
345 1 346 7 2 2 208 1 347 2 137 2 71 1 349 2 139 8 8 1 212 1 248 2 77 1 145 2 254 1 120 1 214 1 191 1 16 2 257 1 126 1 38 1 258 1 79 8 259 2 21 3 232 1 106 1 176 1 234 1 284 4 237 1 84 1 43 2 203 2 178 2 319 1 294 1 222 2 
88 1 2 3 347 1 211 1 71 1 142 1 186 1 351 1 76 1 254 1 32 1 120 1 335 1 214 2 34 1 102 1 36 1 259 1 105 1 232 1 284 2 237 1 43 1 203 1 243 1 317 1 178 1 294 1 222 1 
258 1 2 2 347 1 259 1 27 1 211 1 232 2 284 2 43 1 203 1 317 1 32 1 178 1 34 1 222 1 
258 1 2 2 347 1 259 1 211 1 284 2 351 1 298 1 76 1 43 1 203 1 178 1 214 2 34 1 222 1 
258 1 2 2 347 1 259 1 211 1 232 2 284 2 43 1 203 1 243 1 317 1 32 1 178 1 34 1 222 1 
2 2 347 1 259 1 27 1 211 1 232 2 8 1 284 2 43 1 203 1 317 1 32 1 178 1 34 1 222 1 
2 2 347 1 259 1 211 1 8 1 284 2 351 1 298 1 76 1 43 1 203 1 178 1 214 2 34 1 222 1 
2 2 347 1 259 1 211 1 232 2 8 1 284 2 43 1 203 1 243 1 317 1 32 1 178 1 34 1 222 1 
2 2 347 1 259 1 211 1 232 2 284 2 43 1 203 1 243 1 317 1 32 1 178 1 34 1 222 1 
345 1 2 2 346 1 347 1 137 1 71 1 349 1 139 1 212 1 166 1 145 1 214 1 124 1 60 1 16 1 173 1 79 1 259 1 196 1 21 1 232 1 284 2 237 1 43 1 217 1 203 1 178 1 222 1 
345 1 2 2 346 1 136 1 347 1 137 1 71 1 349 1 139 1 212 1 166 1 145 1 214 1 60 1 16 1 79 1 259 1 196 1 21 1 232 1 284 2 286 1 237 1 43 1 24 1 203 1 178 1 222 1 
2 2 347 1 259 1 211 1 232 2 284 2 43 1 203 1 243 1 317 1 32 1 178 1 335 1 34 1 222 1 
2 2 346 1 208 1 347 1 137 1 211 1 71 1 349 1 139 1 145 1 32 1 99 1 34 1 124 1 60 1 173 1 79 1 259 1 196 1 21 1 232 2 284 2 237 1 43 1 217 1 203 1 317 1 243 1 178 1 222 1 
88 1 2 2 320 1 347 1 71 1 211 1 160 1 142 1 254 1 32 1 120 1 335 1 34 1 102 1 36 1 259 1 232 2 284 2 237 1 43 1 203 1 243 1 317 1 178 1 294 1 222 1 
1 2 2 8 347 1 280 1 232 4 361 1 90 1 73 1 284 2 213 2 65 1 253 1 266 1 203 1 178 1 214 4 189 2 15 2 222 1 
1 2 2 18 320 1 347 3 90 2 73 2 213 2 186 1 351 1 76 1 253 1 229 1 32 2 214 8 189 2 15 2 231 1 337 2 36 2 280 1 361 1 232 10 284 6 65 1 152 1 266 1 203 3 243 2 317 2 343 1 178 3 222 3 
1 2 2 8 347 1 280 1 232 4 361 1 90 1 73 1 284 2 213 2 65 1 253 1 266 1 203 1 178 1 214 4 189 2 15 2 222 1 
1 2 2 8 347 1 280 1 232 4 361 1 90 1 73 1 284 2 213 2 65 1 253 1 266 1 203 1 178 1 214 4 189 2 15 2 222 1 
1 2 2 8 347 1 280 1 232 4 361 1 90 1 73 1 284 2 213 2 65 1 253 1 266 1 203 1 178 1 214 4 189 2 15 2 222 1 
165 1 83 1 170 1 93 1 62 1 67 1 49 1 143 1 92 1 57 1 
157 1 47 1 
0 1 165 1 83 1 170 1 12 1 62 1 49 1 143 1 216 1 
170 1 62 1 72 1 143 1 92 1 185 1 57 1 130 1 165 1 83 1 276 1 241 1 67 1 244 1 290 2 304 1 49 1 51 1 
170 1 62 1 72 1 143 1 92 1 185 1 57 1 130 1 165 1 83 1 276 1 241 1 67 1 244 1 290 2 304 1 49 1 51 1 
170 1 62 1 72 1 143 1 92 1 185 1 57 1 130 1 165 1 83 1 276 1 241 1 67 1 244 1 290 2 304 1 49 1 51 1 
175 1 80 1 233 1 
175 1 80 1 233 1 
210 1 324 1 
210 1 80 1 324 1 
103 1 132 1 
157 1 158 1 71 2 72 1 143 1 165 1 166 1 276 1 254 2 120 2 304 1 355 1 172 1 170 1 103 1 62 1 262 1 237 2 83 1 241 1 47 1 154 1 132 1 290 1 49 1 292 1 294 2 
175 1 233 1 
210 1 80 1 324 1 
345 1 2 2 346 2 347 1 209 1 137 1 71 2 349 1 139 2 212 1 248 2 145 1 335 1 58 1 214 1 79 2 104 1 259 1 21 1 232 1 106 1 234 1 284 2 238 1 237 2 43 1 203 1 178 1 294 2 365 1 222 1 
346 2 26 2 208 1 79 2 19 1 64 1 116 1 349 1 139 2 176 1 249 1 95 1 145 1 240 1 205 1 122 1 156 1 366 1 256 1 
346 1 26 2 79 1 64 1 349 1 139 1 176 1 271 1 249 1 95 1 145 1 240 1 205 1 122 1 156 1 366 1 256 1 
207 1 346 1 79 1 137 1 21 1 116 1 349 1 139 1 84 1 145 1 122 1 319 1 16 1 221 1 
346 1 26 2 79 1 19 1 64 1 116 1 349 1 139 1 176 1 249 1 95 1 145 1 240 1 205 1 122 1 156 1 366 1 256 1 
192 1 
28 1 177 1 265 1 180 1 30 1 244 1 9 1 
278 1 39 1 61 1 41 1 72 1 89 1 159 1 183 1 141 1 163 1 28 1 265 1 30 1 118 1 244 2 304 1 307 1 
171 1 39 1 346 1 79 1 40 1 137 1 21 1 196 1 182 1 41 1 339 1 349 1 139 1 163 1 145 1 307 1 16 1 
1 1 61 1 39 1 224 1 41 1 149 1 213 1 163 1 28 1 265 1 266 1 118 2 244 1 189 1 307 1 
181 1 322 1 71 1 72 1 55 1 142 1 163 1 252 1 28 2 76 1 32 2 254 1 167 1 120 1 304 1 303 1 307 1 39 1 41 1 107 1 237 1 265 2 267 1 45 1 364 2 50 1 134 1 294 1 
39 1 180 1 41 1 163 1 177 1 28 1 265 1 30 1 244 1 307 1 
61 5 224 5 260 1 149 5 351 2 28 5 76 2 265 5 118 10 267 1 243 2 317 2 32 2 244 5 364 2 
278 1 30 1 244 1 72 1 304 1 159 1 
346 2 295 1 137 2 349 2 225 1 72 1 139 2 159 2 163 1 28 1 145 3 304 1 356 1 307 1 16 2 278 1 39 1 312 1 79 2 196 1 21 2 41 1 109 1 84 1 85 1 265 1 46 1 206 1 155 1 319 1 
2 1 346 1 347 1 137 1 71 3 349 1 139 1 212 1 55 1 142 2 166 1 145 1 254 2 120 2 33 1 214 1 124 1 16 1 60 1 173 1 79 1 259 1 196 1 21 1 284 2 237 3 43 1 217 1 203 1 178 1 294 2 222 1 
61 2 39 1 224 2 41 1 149 2 225 1 109 1 163 1 28 1 265 2 118 4 30 2 244 4 230 1 307 1 
83 1 302 1 49 1 
83 1 302 1 49 1 
83 1 302 1 49 1 
83 1 132 1 246 1 49 1 92 1 
83 1 146 1 49 1 
83 1 146 1 49 1 
83 1 146 1 49 1 
83 1 49 1 
165 1 170 1 
36 3 2 8 320 1 347 2 232 4 247 1 284 4 186 2 76 1 203 2 32 1 167 1 78 1 230 1 178 2 303 1 214 4 50 1 222 2 337 1 
36 2 2 6 247 1 232 3 9 1 186 2 76 1 32 1 167 1 78 1 230 1 214 3 303 1 50 1 
36 2 2 4 320 1 347 1 232 2 284 2 186 1 351 1 76 1 203 1 243 1 317 1 32 1 178 1 214 2 308 1 222 1 
1 1 2 2 232 1 214 1 189 1 213 1 
1 2 2 26 320 2 347 1 247 1 213 2 351 2 186 5 76 5 11 1 32 5 167 2 78 1 230 1 303 2 214 13 337 1 36 7 148 1 281 1 232 13 284 2 203 1 317 2 243 2 178 1 50 2 134 1 222 1 
2 1 214 1 213 1 
1 1 2 1 232 1 
36 3 2 6 320 1 347 1 260 1 232 3 284 2 351 1 186 2 76 1 203 1 243 1 317 1 32 1 178 1 214 3 222 1 308 1 
1 1 2 12 320 1 347 1 213 1 351 2 186 1 76 2 229 1 32 2 214 6 189 1 231 1 36 2 232 6 284 2 65 1 152 1 266 1 203 1 243 2 317 2 343 1 178 1 222 1 
36 2 2 6 320 1 232 3 186 1 76 1 32 1 167 1 303 1 214 3 50 1 
36 2 2 3 320 1 347 1 232 1 247 1 284 2 186 1 203 1 167 1 113 1 78 1 178 1 214 2 50 1 222 1 337 1 
36 5 2 10 320 2 347 1 232 5 284 2 65 1 186 3 76 2 203 1 32 2 167 2 178 1 214 5 303 1 50 2 134 1 222 1 
36 1 2 2 320 1 347 1 232 2 284 2 65 1 203 1 317 1 32 1 178 1 222 1 
36 2 2 4 320 1 347 1 232 2 284 2 186 1 351 1 65 1 76 1 203 1 243 1 317 1 32 1 178 1 214 2 222 1 
36 2 2 3 320 1 347 3 232 1 284 6 65 1 186 1 66 1 203 3 167 1 113 1 178 3 214 2 50 1 222 3 337 1 
1 1 2 15 320 3 347 4 247 1 213 1 186 3 76 2 32 2 167 2 78 1 303 1 214 8 189 1 308 1 337 1 36 6 232 7 284 8 202 1 65 1 66 1 203 4 113 1 178 4 50 2 134 1 222 4 
1 1 2 24 320 4 347 2 247 1 213 1 351 1 186 5 76 4 229 1 32 5 167 2 78 1 230 1 303 2 214 10 189 1 231 1 337 1 36 9 232 14 284 4 65 1 152 1 266 1 203 2 243 2 317 2 343 1 178 2 50 2 134 1 222 2 
1 1 2 17 320 1 347 3 247 1 213 1 351 1 186 3 76 2 229 1 32 3 167 1 78 1 230 1 303 1 214 7 189 1 231 1 308 1 337 1 36 4 232 10 284 6 65 1 152 1 266 1 203 3 243 2 317 2 343 1 178 3 50 1 222 3 
1 1 2 19 320 1 347 3 247 1 213 1 351 2 186 3 76 3 229 1 32 3 167 1 78 1 230 1 303 1 214 10 189 1 231 1 308 1 337 1 36 4 232 9 284 6 65 1 152 1 266 1 203 3 243 2 317 2 343 1 178 3 50 1 222 3 
1 1 2 17 320 2 347 3 247 1 213 1 351 1 186 3 76 2 229 1 32 3 167 1 78 1 230 1 303 1 214 7 189 1 231 1 308 1 337 1 36 5 232 10 284 6 65 1 152 1 266 1 203 3 243 2 317 2 343 1 178 3 50 1 222 3 
1 1 2 24 320 4 347 2 247 1 213 1 351 1 186 5 76 4 229 1 32 5 167 2 78 1 230 1 303 2 214 10 189 1 231 1 337 1 36 9 232 14 284 4 65 1 152 1 266 1 203 2 243 2 317 2 343 1 178 2 50 2 134 1 222 2 
1 1 2 12 320 1 347 1 213 1 351 2 186 1 76 2 229 1 32 2 214 6 189 1 231 1 36 2 232 6 284 2 65 1 152 1 266 1 203 1 243 2 317 2 343 1 178 1 222 1 
1 1 2 18 320 2 347 4 247 1 213 1 351 1 186 3 76 2 229 1 32 3 167 1 78 1 230 1 303 1 214 8 189 1 231 1 308 1 337 2 36 5 232 10 284 8 65 1 152 1 266 1 203 4 243 2 317 2 343 1 178 4 50 1 222 4 
1 1 2 16 320 3 347 4 213 1 351 2 186 3 76 2 229 1 32 3 214 7 189 1 231 1 337 2 36 6 232 9 284 8 65 1 152 1 66 1 266 1 203 4 243 3 317 3 343 1 178 4 222 4 
36 6 2 7 320 3 247 2 232 3 186 3 76 1 32 1 167 3 78 1 214 4 303 1 50 3 
1 1 2 18 320 1 347 4 247 1 213 1 351 1 186 3 76 2 229 1 32 3 167 1 78 1 230 1 303 1 214 8 189 1 231 1 337 2 36 4 232 10 284 8 65 1 152 1 66 1 266 1 203 4 243 2 317 2 343 1 178 4 50 1 222 4 
166 1 188 1 71 1 305 1 108 1 294 1 237 1 
287 1 94 1 147 1 3 1 297 1 
84 1 346 1 145 1 79 1 137 1 21 1 349 1 139 1 319 1 9 1 16 1 
346 1 79 1 137 1 21 1 196 1 71 2 349 1 139 1 237 2 166 1 77 1 145 1 254 1 120 1 294 1 124 1 60 1 16 1 
346 1 137 2 181 2 71 2 349 1 139 1 75 1 166 1 227 1 77 1 145 1 254 1 120 2 190 1 124 1 60 1 79 1 196 2 21 2 82 1 236 1 237 2 294 2 
346 1 137 2 181 2 71 2 349 1 139 1 75 1 166 1 227 1 77 1 145 1 254 1 120 2 190 1 60 1 79 1 196 2 21 2 82 1 286 1 236 1 237 2 294 2 
346 1 181 1 322 1 71 1 5 1 182 1 72 2 159 1 139 1 55 1 142 1 30 1 254 1 120 1 304 2 79 1 338 1 21 2 107 1 82 1 237 1 45 1 244 1 219 1 294 1 
346 1 181 1 322 1 137 1 71 1 182 1 349 1 72 2 159 1 139 1 55 1 142 1 75 1 145 1 30 1 254 1 120 1 304 2 306 1 79 1 338 1 21 3 196 1 107 1 82 1 237 1 45 1 244 1 219 1 294 1 
346 1 145 1 79 1 349 1 139 1 191 1 
126 1 70 1 38 1 346 6 208 1 295 1 79 7 40 1 137 2 196 1 21 3 349 2 139 7 176 1 234 1 248 1 145 3 206 1 191 1 16 2 257 1 
88 1 179 1 2 6 137 1 139 1 186 2 145 1 230 1 99 1 335 1 60 1 196 1 21 1 232 3 284 4 237 2 238 1 203 2 294 1 346 1 208 1 347 2 71 2 211 1 349 1 247 1 76 1 166 2 77 1 254 1 32 1 120 1 167 1 78 1 303 1 214 3 34 1 124 1 36 2 173 1 79 1 259 2 43 2 217 1 178 2 50 1 222 2 
346 1 180 1 323 1 182 1 72 3 139 1 159 2 163 2 28 1 30 1 304 3 306 1 16 1 307 2 172 1 278 1 39 2 79 1 338 1 21 2 41 2 81 1 177 1 265 1 46 1 244 1 48 1 219 1 
171 1 346 1 79 1 40 1 137 1 196 1 21 1 349 1 139 1 111 1 145 1 219 1 191 1 
346 4 208 1 79 4 137 1 21 1 349 1 139 4 84 1 228 1 145 1 333 1 319 1 16 1 
346 2 295 1 79 2 137 1 196 1 21 1 349 1 139 2 82 1 145 2 332 1 206 1 155 1 356 1 
346 1 26 1 145 1 79 1 240 1 64 1 349 1 139 1 256 1 16 1 
346 2 208 1 79 2 209 1 137 1 21 1 349 1 139 2 176 1 234 1 145 1 
126 1 38 1 346 4 208 1 79 5 137 2 21 3 349 2 139 5 234 1 82 1 84 1 228 1 145 2 319 1 16 1 
126 1 357 1 346 4 208 1 79 5 137 2 21 3 349 2 139 5 234 1 82 1 84 1 228 1 145 2 319 1 16 1 
346 1 79 1 137 1 21 1 196 1 71 2 349 1 139 1 286 1 237 2 166 1 77 1 145 1 254 1 120 1 294 1 60 1 16 1 
70 1 346 1 295 1 79 1 40 1 137 1 196 1 21 1 349 1 139 1 82 1 145 2 206 1 
166 1 53 1 31 1 169 1 98 1 
53 1 181 2 322 1 71 1 72 2 55 1 142 1 352 1 30 1 254 1 31 1 120 1 169 1 98 1 304 2 190 1 172 1 18 1 338 1 107 1 235 1 236 1 237 1 316 1 45 1 131 1 244 1 294 1 
104 1 71 1 237 1 31 1 98 1 169 1 58 1 365 1 294 1 
18 1 31 1 352 1 
239 1 321 1 242 1 9 1 
263 1 239 1 321 1 242 1 220 1 54 1 329 1 
140 1 350 1 220 1 
37 1 321 1 22 1 54 3 329 1 263 1 110 1 239 1 242 1 342 2 220 3 100 1 
263 1 239 1 321 1 242 1 220 2 54 2 35 1 101 1 329 1 
37 1 263 1 26 1 321 1 64 1 315 1 220 1 54 1 366 1 162 1 329 1 
37 1 263 1 239 1 321 1 220 1 54 1 329 1 
37 1 263 1 239 2 242 1 220 1 54 1 329 1 
37 1 321 1 54 2 91 1 128 1 329 2 274 1 263 2 239 1 220 2 
37 1 135 1 321 2 197 1 54 3 328 1 329 1 162 1 263 1 239 1 242 1 220 3 35 2 
37 1 26 2 321 1 64 1 201 1 54 2 249 1 329 1 263 1 239 1 240 1 242 1 220 2 35 1 366 1 
37 1 135 1 321 2 325 1 54 4 329 2 162 1 263 2 239 1 242 1 220 4 35 2 101 1 
37 1 263 1 239 1 321 1 242 1 220 1 54 1 329 1 
194 1 135 1 321 3 22 1 54 4 329 1 162 1 263 1 239 2 242 2 342 1 220 4 100 1 35 2 
273 1 37 1 263 1 239 1 321 1 242 1 20 1 198 1 220 2 54 2 35 1 329 1 
37 1 263 1 239 1 321 1 242 1 342 2 22 2 215 1 220 3 54 3 100 1 329 1 
321 2 13 1 348 2 161 1 
37 1 263 1 87 1 220 1 54 1 329 1 
37 1 263 1 239 1 321 1 242 1 220 2 54 2 35 1 328 1 329 1 
291 1 
37 1 263 1 239 1 321 1 242 1 220 1 54 1 329 1 
37 1 263 1 239 1 321 1 242 1 342 1 220 3 54 3 35 1 328 1 329 1 
194 1 135 1 321 1 162 1 
239 1 321 1 

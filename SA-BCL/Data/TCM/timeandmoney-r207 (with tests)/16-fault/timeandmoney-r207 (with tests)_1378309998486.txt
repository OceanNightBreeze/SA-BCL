#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (83,189) (83,189) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (83,189) (83,189) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (83,189) (83,189) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (83,189) (83,189) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 45 244 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 45 261 121 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 45 261 362 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 45 174 363 7 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V ERROR java.lang.NullPointerException (238,270) 317 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (238,270) 317 330 166 (238,270) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 45 261 136 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 45 244 90 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 45 5 234 284 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 45 5 234 284 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 45 261 361 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 45 173 150 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 45 5 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 45 261 362 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 45 5 234 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 45 261 362 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 45 261 361 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 45 261 361 224 210 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 45 261 361 224 210 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 3 361 224 148 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 187 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (238,270) 317 130 84 137 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (238,270) 317 133 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException (238,270) 317 330 59 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException (238,270) 317 352 66 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException (238,270) 317 330 166 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException (238,270) 317 352 59 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException (238,270) 317 352 66 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException (238,270) 317 330 166 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException (238,270) 317 352 59 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException (238,270) 317 352 59 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException (238,270) 317 352 59 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (238,270) 317 352 59 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException (238,270) 317 352 59 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 45 261 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 45 (76,223) 102 260 (112,358) 143 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 45 261 315 183 144 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 45 261 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 45 173 150 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 175 159 252 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 175 159 252 288 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 187 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 45 (76,223) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (238,270) 317 356 (13,273) (13,273) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 45 (76,223) 102 260 (112,358) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | ASSIGN | 4718 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
179 9 92 1 211 1 138 1 236 1 97 1 182 2 186 2 349 4 165 1 276 1 124 1 145 1 80 5 39 1 15 9 222 1 18 2 198 1 107 1 87 7 359 1 113 1 293 3 
179 9 92 1 211 1 138 1 236 1 97 1 182 2 186 2 349 4 165 1 276 1 124 1 145 1 80 5 39 1 15 9 222 1 18 2 198 1 107 1 87 7 359 1 113 1 293 3 
114 1 124 1 179 2 15 2 72 1 83 1 97 1 18 1 198 1 107 1 186 1 359 1 189 1 266 1 278 1 
114 1 124 1 179 2 15 2 72 1 83 1 97 1 18 1 198 1 107 1 186 1 359 1 189 1 266 1 278 1 
114 1 124 1 179 2 15 2 72 1 83 1 97 1 18 1 198 1 107 1 186 1 359 1 189 1 266 1 278 1 
114 1 124 1 179 2 15 2 72 1 83 1 97 1 18 1 198 1 107 1 186 1 359 1 189 1 266 1 278 1 
124 1 145 1 179 4 80 3 15 4 211 1 222 1 97 1 18 1 182 2 198 1 107 1 186 1 87 3 113 1 349 2 165 1 293 1 
114 1 124 1 80 1 145 1 179 2 15 2 72 1 302 1 18 1 97 1 198 1 186 1 77 1 359 1 205 1 165 1 
145 1 179 3 80 2 15 3 92 1 18 2 198 1 186 2 87 1 359 1 349 1 165 1 293 1 
232 1 187 1 206 1 
343 1 232 1 3 2 
191 1 157 2 331 2 247 2 75 2 249 2 22 1 323 2 
157 3 115 1 94 1 73 2 75 2 340 1 141 1 76 1 215 1 32 1 119 2 314 1 163 1 12 1 52 1 191 1 56 1 167 1 192 2 221 1 58 1 60 1 61 1 323 2 326 2 131 1 108 1 199 1 357 1 331 2 41 2 306 1 305 1 247 2 228 1 249 3 22 1 
191 1 157 1 331 1 116 1 180 1 247 1 75 1 249 1 117 1 323 1 
232 1 157 1 269 1 47 1 117 1 239 1 218 1 175 1 331 1 290 1 249 1 44 1 206 1 155 1 
232 1 157 1 269 2 47 1 75 1 323 1 117 1 239 1 331 1 247 1 290 2 249 1 44 1 206 1 155 1 
244 1 269 1 264 1 290 1 45 1 
269 1 264 1 290 1 121 1 45 1 261 1 
269 1 290 1 45 1 
191 1 269 1 157 1 116 1 180 1 75 1 285 1 117 1 323 1 264 1 331 1 247 1 290 1 249 1 
232 1 
269 1 264 1 362 1 290 1 45 1 261 1 
54 1 174 1 269 3 264 2 127 1 17 1 290 3 363 1 37 1 45 1 7 1 
187 1 22 1 
56 1 157 2 221 1 58 1 4 1 73 1 75 1 61 1 323 1 326 1 131 1 76 1 238 1 119 1 331 1 298 1 305 1 163 1 228 1 249 2 
157 2 75 1 323 1 201 1 331 2 247 1 249 2 22 2 38 1 
238 1 317 1 
56 1 157 1 221 1 58 1 73 1 61 1 326 1 76 1 131 1 119 1 67 1 305 1 228 1 163 1 249 1 22 1 
157 5 159 1 82 1 4 1 75 4 282 1 323 4 175 1 331 5 298 2 247 1 249 5 22 1 38 1 
157 2 331 2 202 1 180 1 75 2 249 2 117 1 323 2 
157 3 331 3 298 1 247 1 75 3 249 3 22 1 323 3 
157 1 331 1 180 1 75 1 249 1 117 1 323 1 
157 1 201 1 331 1 247 1 75 1 249 1 117 1 323 1 38 1 
157 4 269 1 47 1 94 1 4 1 73 1 75 3 117 1 340 1 6 1 141 1 76 1 215 1 239 1 119 1 314 1 298 1 163 1 38 1 12 1 52 1 191 1 56 1 192 2 221 1 58 1 61 1 323 3 85 1 326 1 131 1 108 1 199 1 331 3 41 1 306 1 305 1 228 1 247 2 290 1 44 1 249 4 22 1 155 1 
175 1 157 2 331 2 159 1 298 1 75 1 249 2 22 1 323 1 
232 1 26 1 269 1 157 3 47 1 4 1 75 3 117 1 323 3 85 1 239 1 331 3 298 2 247 1 290 1 249 3 44 1 38 1 155 1 
157 2 75 2 323 2 238 1 331 2 298 1 78 1 247 1 249 2 38 1 
56 1 157 1 221 1 58 1 73 1 61 1 326 1 76 1 131 1 119 1 228 1 163 1 305 1 249 1 22 1 
56 1 157 1 258 1 221 1 58 1 73 1 61 1 326 1 325 1 131 1 119 1 163 1 305 1 249 1 22 1 
52 1 192 2 270 1 94 1 322 1 340 1 141 1 238 1 314 2 110 1 330 1 317 1 41 2 306 1 12 1 166 1 
157 1 331 1 202 1 75 1 249 1 117 1 323 1 155 1 
57 1 286 1 
57 1 286 1 
307 1 303 1 
307 1 303 1 
307 1 303 1 
63 1 57 1 286 1 
57 1 132 1 286 1 
250 1 57 2 307 1 286 2 303 1 327 1 
63 1 57 1 286 1 
63 1 57 1 286 1 
57 1 286 1 366 1 
57 1 286 1 366 1 
57 1 286 1 366 1 
311 1 269 1 157 2 1 1 297 1 75 2 120 1 33 1 347 1 146 1 255 1 57 1 286 1 323 2 200 1 331 2 226 1 132 1 290 1 249 2 22 1 308 1 153 1 207 1 
250 1 231 2 232 1 57 2 311 2 269 2 126 1 297 2 160 1 286 2 161 1 64 1 200 2 162 1 227 1 226 2 290 2 153 3 207 1 
124 1 107 1 97 1 
124 1 302 1 97 1 
124 3 353 1 107 2 280 1 302 1 181 1 
124 2 107 1 280 1 302 1 181 1 62 1 
124 2 107 1 280 2 302 1 181 1 
269 1 264 1 136 1 290 1 45 1 261 1 
90 1 244 1 269 2 264 2 281 1 195 1 290 2 45 1 
232 3 269 3 3 4 95 2 343 2 342 2 217 1 240 1 37 1 164 1 352 1 54 1 300 1 146 1 103 1 127 1 59 1 322 1 17 1 109 3 330 1 264 2 290 3 230 1 265 2 206 1 
232 4 269 4 3 7 95 4 212 1 343 3 342 4 217 1 240 2 346 1 37 1 164 2 352 2 54 1 300 1 146 2 103 1 127 1 59 2 128 1 322 2 17 1 109 5 330 2 264 3 290 4 265 4 230 1 206 1 
305 1 171 1 187 1 
34 1 305 1 
55 1 
131 1 305 1 61 1 
305 1 339 1 
305 1 61 1 
131 1 152 1 305 3 171 2 61 1 140 1 
13 1 256 2 322 1 356 2 341 3 214 1 106 1 273 1 329 1 32 4 314 3 240 1 65 1 41 7 360 1 365 1 71 1 
13 1 256 2 322 1 356 2 341 3 214 1 106 1 273 1 329 1 32 4 314 3 240 1 65 1 41 7 360 1 365 1 71 1 
13 1 320 1 256 2 322 1 356 2 341 3 214 1 273 1 106 1 329 1 32 4 314 3 240 1 65 1 41 7 360 1 365 1 71 1 
106 2 32 1 338 1 41 1 356 1 71 1 
340 1 341 3 141 1 273 1 32 5 314 4 240 2 11 1 52 1 13 1 256 2 192 2 322 2 356 1 287 1 106 1 329 1 65 1 41 9 306 1 360 1 71 1 365 1 24 1 
179 2 268 1 73 1 97 1 254 1 119 1 186 1 275 1 163 1 79 1 50 1 165 1 190 1 124 2 80 1 145 1 279 1 353 1 56 1 15 2 170 1 302 1 324 1 326 1 18 1 107 1 198 1 87 1 359 1 333 1 
334 1 179 3 268 1 73 1 253 1 97 1 254 1 119 1 186 1 275 1 163 1 79 1 50 1 165 1 124 2 80 1 145 1 353 1 279 1 56 1 15 3 302 1 324 1 326 1 18 1 107 1 87 2 68 1 359 1 333 1 
334 1 179 2 268 1 73 1 253 1 254 1 97 1 119 1 275 1 163 1 79 1 165 1 124 2 80 1 145 1 279 1 353 1 56 1 15 2 302 1 326 1 107 1 87 2 359 1 333 1 
179 1 296 1 268 2 135 1 337 1 93 1 73 1 96 1 254 2 98 1 119 1 186 1 163 1 79 2 56 2 193 1 15 1 169 1 58 1 61 1 326 1 18 1 131 1 245 1 68 1 359 2 305 1 364 1 23 1 
334 1 179 1 268 1 73 1 97 1 254 1 119 1 186 1 275 1 163 1 79 1 50 1 124 2 279 1 353 1 56 1 15 1 170 1 302 1 324 1 326 1 18 1 107 1 198 1 359 1 333 1 
318 1 
134 2 269 2 157 1 47 1 209 1 234 1 283 1 284 1 5 1 117 1 239 1 218 1 175 1 331 1 274 1 290 2 44 1 249 1 45 1 177 1 309 1 155 1 
134 2 269 2 157 1 47 1 209 1 234 1 283 1 284 1 5 1 117 1 239 1 218 1 175 1 331 1 274 1 290 2 249 1 44 1 45 1 177 1 309 1 155 1 
134 2 269 2 157 1 3 1 209 1 47 1 117 1 213 1 342 1 239 1 218 1 8 1 274 1 319 1 54 1 127 1 17 1 283 1 243 1 261 1 262 1 109 1 175 1 331 1 361 1 43 1 290 2 249 1 44 1 45 1 309 1 177 1 155 1 
54 1 300 1 269 1 58 1 127 1 73 1 17 1 326 1 173 1 150 1 262 1 109 1 119 1 290 1 45 1 
134 2 269 2 157 1 47 1 209 1 283 1 5 1 117 1 239 1 218 1 175 1 331 1 274 1 290 2 249 1 44 1 45 1 177 1 309 1 155 1 
134 3 232 1 157 1 269 2 209 1 47 1 117 1 239 1 218 1 274 1 283 1 172 1 261 1 175 1 331 1 362 1 290 2 44 1 249 1 45 1 206 1 309 1 177 1 155 1 
134 2 269 2 157 1 47 1 209 1 234 1 283 1 5 1 117 1 239 1 218 1 175 1 331 1 274 1 290 2 249 1 44 1 45 1 177 1 309 1 155 1 
269 1 362 1 290 1 45 1 261 1 
134 2 269 2 157 1 3 1 209 1 47 1 117 1 343 1 342 1 239 1 218 1 274 1 319 1 54 1 104 1 127 1 194 1 17 1 283 1 243 1 261 1 262 1 328 1 109 1 175 1 331 1 361 1 290 2 249 1 44 1 45 1 309 1 177 1 155 1 
134 2 157 1 269 2 209 1 47 1 210 1 117 1 343 1 342 1 239 1 218 1 274 1 319 1 54 1 104 1 127 1 194 1 283 1 17 1 243 1 261 1 262 1 328 1 224 1 109 1 175 1 331 1 361 1 290 2 44 1 249 1 45 1 176 1 309 1 177 1 155 1 
134 2 157 1 269 2 209 1 47 1 210 1 117 1 343 1 342 1 239 1 218 1 274 1 319 1 54 1 104 1 127 1 194 1 283 1 17 1 243 1 261 1 262 1 328 1 224 1 109 1 175 1 331 1 361 1 290 2 44 1 249 1 45 1 176 1 309 1 177 1 155 1 
134 2 157 1 269 2 3 1 209 1 47 1 117 1 213 1 342 1 239 1 8 1 218 1 274 1 319 1 54 1 127 1 283 1 17 1 148 1 243 1 262 1 224 1 109 1 175 1 331 1 361 1 290 2 44 1 249 1 309 1 177 1 155 1 154 1 
94 1 340 1 341 2 273 1 141 1 238 1 32 3 240 1 314 3 317 1 187 1 12 1 13 1 52 1 256 2 192 2 322 1 356 1 329 1 110 1 41 6 360 1 306 1 22 2 365 1 
52 1 192 2 94 1 137 1 84 1 340 1 130 1 141 1 238 1 314 1 20 1 317 1 41 1 306 1 12 1 
157 2 94 1 4 1 73 1 75 1 340 1 31 1 76 1 141 1 119 1 32 1 314 1 78 1 298 1 163 1 12 1 52 1 56 1 14 1 192 2 167 1 221 1 168 1 58 1 61 1 323 1 326 1 131 1 108 1 331 1 67 1 20 1 41 2 305 1 228 1 306 1 249 2 22 1 
157 2 94 2 4 1 73 1 75 1 340 2 313 1 76 1 141 2 238 1 215 1 119 1 314 2 317 1 298 1 163 1 122 1 12 2 52 2 56 1 192 4 221 1 58 1 16 1 61 1 323 1 326 1 131 1 108 1 331 1 20 1 41 2 305 1 228 1 112 1 306 2 249 2 133 1 
296 1 115 1 94 1 73 2 340 1 96 1 141 1 119 2 32 1 314 1 163 1 12 1 351 1 52 1 56 2 192 2 167 1 193 1 81 1 58 1 61 1 326 2 131 1 245 1 108 1 41 2 305 1 306 1 364 1 
157 1 208 1 94 1 75 1 340 1 141 1 238 1 32 1 240 1 314 2 317 1 38 1 12 1 352 1 52 1 192 2 59 1 322 1 323 1 330 1 331 1 20 1 41 3 247 1 306 1 249 1 
52 1 192 2 94 1 340 1 141 1 238 1 32 2 110 1 240 1 66 1 317 1 41 2 306 1 12 1 352 1 
52 1 192 2 94 1 322 1 340 1 141 1 238 1 110 1 330 1 314 2 317 1 41 2 306 1 12 1 166 1 
52 1 192 2 94 1 59 1 340 1 141 1 238 1 32 2 110 1 240 1 317 1 41 2 306 1 12 1 352 1 
52 1 192 2 81 1 94 1 340 1 141 1 238 1 32 2 240 1 66 1 317 1 41 2 306 1 12 1 352 1 
52 1 192 2 81 1 94 1 322 1 340 1 141 1 238 1 330 1 314 2 317 1 41 2 306 1 12 1 166 1 
52 1 192 2 81 1 94 1 59 1 340 1 141 1 238 1 32 2 240 1 317 1 41 2 306 1 12 1 352 1 
52 1 192 2 94 1 59 1 340 1 141 1 238 1 32 2 240 1 317 1 41 2 306 1 12 1 352 1 
157 1 94 1 73 1 340 1 76 1 141 1 215 1 32 1 119 1 314 1 163 1 12 1 52 1 56 1 167 1 192 2 221 1 58 1 61 1 326 1 131 1 108 1 41 2 228 1 305 1 306 1 249 1 22 1 
157 1 94 1 73 1 340 1 141 1 32 1 119 1 314 1 163 1 48 1 12 1 52 1 56 1 167 1 258 1 192 2 221 1 58 1 61 1 325 1 326 1 131 1 108 1 41 2 305 1 306 1 249 1 22 1 
52 1 192 2 94 1 59 1 340 1 141 1 238 1 32 2 240 1 20 1 317 1 41 2 306 1 12 1 352 1 
157 1 94 1 73 1 340 1 76 1 141 1 238 1 215 1 32 2 119 1 240 1 317 1 163 1 352 1 190 1 12 1 52 1 56 1 192 2 221 1 16 1 59 1 61 1 326 1 131 1 41 2 228 1 305 1 306 1 249 1 
52 1 46 1 157 1 192 2 59 1 94 1 75 1 323 1 340 1 141 1 238 1 32 2 240 1 331 1 20 1 317 1 41 2 306 1 247 1 249 1 38 1 352 1 12 1 
156 2 310 2 27 1 272 1 340 2 341 4 141 2 32 13 314 12 240 4 100 2 352 4 52 2 256 2 147 1 321 1 192 4 355 2 354 3 59 4 322 3 196 1 130 4 289 1 330 3 65 2 41 25 229 1 306 2 42 1 24 1 
156 2 310 2 27 1 272 1 340 2 341 6 141 2 32 13 314 14 240 4 100 2 352 4 52 2 256 3 147 1 321 1 192 4 355 2 354 3 59 4 322 4 196 1 130 4 289 1 330 4 65 3 41 27 229 1 306 2 42 1 24 1 
156 1 310 1 27 1 340 1 341 7 273 2 141 1 32 16 314 14 240 5 100 1 352 3 13 2 52 1 256 4 321 1 192 2 355 2 354 2 59 3 322 5 196 1 356 2 130 2 329 2 289 1 330 3 65 3 41 30 360 2 229 1 306 1 42 1 365 2 24 1 
156 1 310 1 27 2 340 2 341 6 141 2 32 9 314 10 240 3 350 1 100 1 352 3 52 2 256 3 147 1 321 1 192 4 355 2 354 1 59 3 322 3 196 1 130 2 289 1 330 3 65 3 41 19 229 1 306 2 24 1 
156 2 310 1 27 1 340 1 341 2 141 1 32 10 314 10 240 3 100 1 352 3 52 1 256 1 321 1 192 2 355 2 354 2 59 3 322 3 196 1 130 2 289 1 330 3 65 1 41 20 229 2 306 1 42 1 24 1 
250 1 57 1 64 1 311 1 200 1 227 1 226 1 111 1 297 1 286 1 
33 1 132 1 
105 1 344 1 57 1 311 1 200 1 226 1 348 1 297 1 286 1 
63 1 241 1 
204 1 327 1 366 1 
250 1 231 1 232 1 57 1 269 1 311 1 126 1 297 1 160 1 286 1 64 1 200 1 162 1 227 1 226 1 290 1 153 2 207 1 
250 1 231 1 232 1 57 1 269 1 311 1 126 1 297 1 160 1 286 1 64 1 200 1 162 1 227 1 226 1 290 1 153 2 207 1 
250 1 231 1 232 1 57 1 269 1 311 1 126 1 297 1 160 1 286 1 64 1 200 1 162 1 227 1 226 1 290 1 153 2 207 1 
63 1 241 1 327 1 
63 1 241 1 327 1 
204 1 366 1 
204 1 327 1 366 1 
347 1 308 1 
231 1 157 2 269 1 311 1 1 1 297 1 75 2 162 1 120 1 33 1 347 1 146 1 255 1 57 1 286 1 323 2 264 1 200 1 331 2 226 1 132 1 332 1 290 1 249 2 22 1 308 1 153 1 
157 2 336 1 115 2 94 1 73 2 340 1 141 1 119 2 32 1 184 1 219 1 314 1 163 1 12 1 351 1 52 1 56 1 192 2 167 1 61 1 326 2 108 1 225 1 331 2 20 1 41 2 305 1 306 1 88 1 249 2 291 1 
124 2 353 1 334 1 125 1 56 1 242 1 73 2 302 1 324 1 326 2 97 1 254 1 107 1 119 2 246 1 163 1 275 1 190 1 333 1 
124 2 353 1 334 1 242 1 56 1 73 1 302 1 324 1 326 1 97 1 254 1 107 1 119 1 275 1 163 1 69 1 333 1 
296 1 73 1 251 1 254 1 96 1 119 1 163 1 125 1 56 2 193 1 169 1 58 1 61 1 326 1 131 1 245 1 305 1 23 1 364 1 
124 2 353 1 334 1 125 1 56 1 242 1 73 1 302 1 324 1 326 1 97 1 254 1 107 1 119 1 246 1 275 1 163 1 333 1 
99 1 
157 3 94 1 73 1 75 2 340 1 76 1 141 1 215 1 119 1 314 1 163 1 12 1 52 1 191 1 56 1 192 2 221 1 58 1 323 2 61 1 326 1 131 1 108 1 199 1 331 2 41 1 306 1 247 2 228 1 305 1 249 3 22 1 
54 1 300 1 232 4 3 4 127 1 95 2 17 1 356 1 343 2 342 2 262 1 151 1 109 1 265 2 206 2 
342 1 232 1 28 1 109 1 187 1 206 1 197 1 
54 1 104 1 3 1 127 1 194 1 17 1 261 1 262 1 342 1 343 1 328 1 109 1 45 1 
54 1 300 1 56 2 102 1 260 1 58 1 127 1 73 1 17 1 61 1 326 1 223 1 262 1 131 1 118 1 109 1 119 1 152 1 34 2 358 1 163 1 305 3 143 1 45 1 
232 6 310 1 3 10 95 7 343 5 342 5 183 1 240 3 315 1 100 1 144 1 352 3 54 1 257 1 354 2 127 1 59 3 17 1 322 3 261 1 130 2 262 1 109 10 330 3 42 1 265 7 70 2 45 1 206 1 
157 1 269 1 116 1 180 1 75 1 117 1 342 2 240 2 316 1 11 1 54 1 191 1 127 1 17 1 322 1 285 1 323 1 262 1 329 1 109 2 331 1 360 1 247 1 290 1 249 1 70 2 176 1 365 1 
54 1 232 1 28 1 127 1 17 1 197 1 262 1 342 1 109 1 206 1 
232 5 3 10 59 2 95 5 322 2 342 5 343 5 109 5 240 2 330 2 316 1 70 2 265 5 133 1 352 2 
45 1 261 1 
54 1 300 1 58 1 127 1 73 1 17 1 326 1 173 1 19 1 150 1 262 1 109 1 119 1 45 1 
311 1 226 1 40 1 
311 1 227 1 226 1 347 1 149 1 
311 1 226 1 40 1 
311 1 226 1 40 1 
233 1 311 1 226 1 
233 1 311 1 226 1 
233 1 311 1 226 1 
311 1 226 1 
57 1 286 1 
310 1 340 1 341 2 141 1 273 1 32 6 314 5 240 2 100 1 144 1 352 1 52 1 13 1 256 2 192 2 354 1 59 1 322 1 356 1 130 2 329 1 41 11 306 1 360 1 365 1 24 1 
310 1 340 2 341 3 273 1 141 2 32 6 314 5 240 2 36 1 100 1 144 1 352 1 13 1 52 2 256 2 192 4 354 1 59 1 322 1 356 1 130 2 329 1 65 1 41 11 360 1 306 2 365 1 24 1 
310 1 340 2 341 6 273 1 141 2 32 13 314 12 240 5 36 1 100 1 144 1 11 1 352 2 13 1 52 2 256 4 192 4 354 2 59 2 322 5 356 1 130 2 329 2 330 2 65 2 41 25 360 2 306 2 42 1 365 2 24 1 
310 1 340 2 341 8 273 1 141 2 32 13 314 10 240 5 36 1 100 1 144 1 11 1 352 2 13 1 52 2 256 5 192 4 354 2 59 2 322 4 356 1 130 2 329 2 330 1 65 3 41 23 360 2 306 2 42 1 365 2 24 1 
310 1 340 1 341 2 141 1 273 1 32 6 314 5 240 2 100 1 144 1 352 1 52 1 13 1 256 2 192 2 354 1 59 1 322 1 356 1 130 2 329 1 41 11 306 1 360 1 365 1 24 1 
310 1 340 1 341 2 141 1 32 6 314 6 240 2 100 1 144 1 352 2 52 1 256 1 192 2 354 2 59 2 322 2 130 2 330 2 65 1 41 12 306 1 42 1 24 1 
310 1 340 2 341 1 141 2 32 6 314 4 240 2 36 1 100 1 144 1 352 2 52 2 256 1 192 4 354 2 59 2 322 1 130 2 330 1 41 10 306 2 42 1 24 1 
310 1 340 2 341 1 141 2 32 3 314 4 240 1 100 1 144 1 352 1 52 2 256 1 192 4 147 1 354 1 59 1 322 1 130 2 330 1 41 7 306 2 24 1 
13 1 256 3 322 1 341 6 273 2 329 3 32 3 314 4 240 1 65 3 41 7 360 3 365 1 
310 1 340 2 341 1 141 2 32 3 314 4 240 1 100 1 144 1 352 1 52 2 256 1 192 4 147 1 354 1 59 1 322 1 130 2 330 1 41 7 306 2 24 1 
52 2 13 1 256 2 192 4 322 1 356 1 340 2 341 3 141 2 273 1 32 4 329 1 240 1 314 4 65 1 41 8 306 2 360 1 188 1 365 1 
13 1 256 2 322 1 356 1 341 2 273 1 329 1 32 3 314 3 240 1 41 6 360 1 187 1 365 1 
52 1 256 1 192 2 59 1 322 1 340 1 341 2 141 1 32 2 314 2 330 1 240 1 65 1 41 4 306 1 36 1 352 1 
310 1 256 1 354 2 59 2 322 2 341 2 130 2 32 6 314 6 240 2 330 2 65 1 41 12 42 1 100 1 352 2 
310 1 340 1 341 7 273 1 141 1 32 13 240 5 314 13 188 1 11 1 352 2 13 1 52 1 256 5 192 2 354 2 59 2 322 5 356 1 84 1 130 2 329 2 330 2 65 2 41 26 360 2 306 1 42 1 365 2 
130 1 314 1 41 1 
32 1 354 1 41 1 
52 1 256 2 192 2 59 1 322 1 340 1 341 3 141 1 32 3 314 3 240 1 330 1 65 1 41 6 306 1 36 1 133 1 352 1 
310 1 271 1 340 1 341 4 141 1 32 11 183 1 314 11 240 4 100 1 144 1 277 1 352 4 52 1 256 2 257 1 192 2 354 2 59 4 322 4 130 2 330 4 65 2 41 22 306 1 42 1 24 1 
256 1 322 1 341 2 32 3 329 1 240 1 314 3 65 1 41 6 360 1 365 1 
52 1 13 1 256 1 335 1 192 2 340 1 341 2 273 1 141 1 32 1 329 1 314 2 65 1 41 3 360 1 306 1 188 1 
52 1 256 3 192 2 322 2 340 1 341 5 141 1 329 2 32 5 314 5 240 2 65 2 41 10 306 1 360 2 11 1 365 1 24 1 
52 1 192 2 340 1 341 1 141 1 32 2 240 1 65 1 41 2 306 1 24 1 352 1 
52 1 256 1 192 2 59 1 322 1 340 1 341 2 141 1 32 2 314 2 330 1 240 1 65 1 41 4 306 1 24 1 352 1 
52 3 335 1 256 1 147 1 192 6 340 3 341 2 141 3 329 1 32 1 314 2 65 1 41 3 306 3 360 1 188 1 24 1 
310 1 340 4 341 9 30 1 273 1 141 4 32 18 314 17 240 6 185 1 36 1 188 1 100 1 11 1 352 3 13 1 52 4 256 5 147 1 192 8 354 3 59 3 322 5 356 1 130 4 329 2 330 2 65 4 41 35 360 2 306 4 89 1 365 2 24 1 
175 1 159 1 252 1 
288 1 178 1 175 1 345 1 159 1 142 1 252 1 29 1 
119 1 193 1 58 1 73 1 187 1 326 1 
56 1 157 2 221 1 58 1 73 1 75 1 61 1 323 1 326 1 131 1 76 1 119 1 331 1 298 1 305 1 163 1 249 2 22 1 
56 1 157 2 221 1 158 1 73 1 75 1 339 1 117 1 61 2 323 2 326 1 131 2 76 1 216 1 239 1 119 1 331 2 298 1 305 3 163 1 249 2 22 1 155 1 
56 1 157 2 221 1 158 1 73 2 75 1 339 1 117 1 61 2 323 2 326 2 325 1 131 2 216 1 239 1 119 2 331 2 298 1 305 3 163 1 249 2 22 1 299 1 155 1 
232 1 269 1 157 1 158 1 116 1 180 1 73 1 75 1 117 1 119 1 34 1 191 1 101 1 285 1 323 1 326 1 331 1 305 1 247 1 290 1 249 1 206 1 
119 1 269 1 158 1 34 1 305 1 73 1 290 1 45 1 326 1 223 1 
56 1 119 1 163 1 73 1 49 1 326 1 
334 1 0 1 296 1 56 3 115 1 58 2 73 7 74 1 61 2 326 6 131 1 245 1 119 7 152 1 203 1 305 3 163 2 49 1 88 1 51 1 190 1 
157 2 94 2 73 1 75 1 340 2 341 2 273 1 141 2 76 1 238 1 215 1 32 3 119 1 314 3 240 1 317 1 298 1 163 1 12 2 190 1 13 1 52 2 256 2 56 1 192 4 221 1 16 1 322 1 356 1 61 1 323 1 326 1 131 1 329 1 225 1 331 1 20 1 41 6 360 1 305 1 306 2 112 1 228 1 249 2 22 2 365 1 
54 1 102 1 269 1 260 1 58 1 127 1 73 1 17 1 326 1 223 1 19 1 262 1 119 1 264 1 34 1 358 1 305 1 290 1 45 1 
56 2 73 2 171 1 61 1 326 2 131 1 118 1 119 2 152 1 305 2 163 1 49 1 190 1 
296 1 56 2 193 1 58 1 73 2 61 1 326 2 96 1 131 1 245 1 119 2 163 1 305 1 364 1 190 1 
25 1 296 1 56 2 158 1 73 2 61 1 326 2 96 1 131 1 245 1 119 2 305 1 163 1 364 1 
124 1 56 1 119 1 58 1 163 1 275 1 73 1 302 1 326 1 97 1 
334 1 56 1 73 2 61 1 326 2 119 2 184 1 305 1 163 1 88 1 190 1 
296 1 73 3 74 1 96 1 119 3 163 2 51 1 190 1 56 3 193 1 58 1 61 2 326 2 131 1 245 1 305 3 88 1 364 1 
296 1 73 3 235 1 96 1 119 3 163 2 51 1 190 1 56 3 193 1 58 1 61 2 326 2 131 1 245 1 305 3 88 1 364 1 
56 1 157 2 221 1 58 1 73 1 75 1 61 1 323 1 326 1 325 1 131 1 119 1 331 1 298 1 305 1 163 1 249 2 22 1 
296 1 56 2 158 1 73 1 61 1 326 1 131 1 245 1 119 1 152 1 203 1 305 1 163 1 
53 1 157 1 219 1 331 1 336 1 249 1 291 1 123 1 267 1 
295 1 53 1 237 1 
53 1 220 1 22 1 123 1 267 1 
53 1 295 1 232 1 269 2 47 1 117 1 85 1 237 1 239 1 264 1 220 2 9 1 290 2 44 1 22 1 206 1 123 2 155 1 267 2 
114 1 80 1 145 1 179 3 198 1 186 1 15 3 87 1 276 1 165 1 18 1 
80 1 349 1 139 1 293 1 
80 1 165 1 
80 1 145 1 187 1 165 1 
80 1 145 1 179 1 186 1 15 1 165 1 18 1 
15 1 359 1 79 1 
114 2 80 1 179 3 145 1 15 3 312 1 18 1 129 1 198 1 186 1 21 1 165 1 
80 1 145 1 182 1 179 2 186 1 15 2 87 1 165 1 18 1 
124 1 80 1 179 1 107 1 198 1 186 1 15 1 349 1 222 1 97 1 18 1 
80 1 179 1 198 1 186 1 15 1 165 1 18 1 
145 1 179 1 198 1 186 1 15 1 165 2 18 1 
80 1 179 2 15 2 259 1 18 2 198 1 186 2 35 1 248 1 165 1 
145 1 179 3 80 2 15 3 236 1 18 1 198 1 186 1 87 2 349 1 165 1 276 1 293 1 
124 2 80 1 145 1 179 2 353 1 15 2 302 1 18 1 97 1 263 1 198 1 107 1 186 1 87 1 165 1 
145 1 179 4 80 2 15 4 211 1 18 2 182 1 198 1 186 2 87 2 349 1 165 1 293 1 
80 1 145 1 179 1 198 1 186 1 15 1 165 1 18 1 
114 1 145 2 179 4 80 3 15 4 139 1 18 1 129 1 186 1 87 2 349 1 21 1 165 2 293 1 
80 1 179 2 145 1 39 1 15 2 2 1 18 1 198 1 186 1 87 1 292 1 165 1 
114 2 80 1 179 3 145 1 15 3 18 1 304 1 129 1 198 1 186 1 21 2 165 1 
80 2 91 2 301 1 10 1 
86 1 179 1 198 1 186 1 15 1 18 1 
80 1 145 1 179 2 198 1 186 1 15 2 87 1 165 1 276 1 18 1 
294 1 
80 1 145 1 179 1 198 1 186 1 15 1 165 1 18 1 

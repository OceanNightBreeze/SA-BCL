#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 257 (42,79,356) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 187 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 43 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 114 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 199 148 282 265 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 141 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | RETURN | 5959 | return null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
349 2 276 1 190 1 21 1 321 2 24 9 241 2 172 2 54 3 219 1 80 1 333 1 12 1 245 2 267 1 59 1 183 2 61 1 340 2 185 1 312 5 112 9 344 1 208 1 119 1 345 1 41 4 99 6 
349 2 276 1 190 1 21 1 321 2 24 9 241 2 172 2 54 3 219 1 80 1 333 1 12 1 245 2 267 1 59 1 183 2 61 1 340 2 185 1 312 5 112 9 344 1 208 1 119 1 345 1 41 4 99 6 
349 2 276 1 190 1 21 1 321 2 24 10 241 2 172 2 54 4 219 1 80 1 333 1 12 1 245 2 267 1 59 1 183 2 61 1 340 2 185 1 312 6 112 10 344 1 208 1 119 1 345 1 41 5 99 7 
349 2 276 1 190 1 21 1 321 2 24 7 241 2 172 2 54 2 219 1 80 1 333 1 12 1 245 1 267 1 59 1 183 2 61 1 340 2 185 1 312 4 112 7 344 1 208 1 119 1 41 3 99 4 
349 1 59 1 321 1 340 1 185 1 24 4 312 3 112 4 241 1 172 1 344 1 208 1 54 1 345 1 41 2 333 1 99 3 245 2 
349 1 321 1 191 1 340 1 61 1 183 1 168 1 185 1 24 2 312 1 135 1 112 2 241 1 208 1 219 1 333 1 
267 1 321 2 340 2 183 1 185 1 24 3 312 2 112 3 208 1 54 1 41 1 333 1 99 1 
276 1 349 1 321 2 24 9 241 1 172 1 355 1 54 3 333 1 12 1 245 2 15 1 267 1 59 1 183 1 340 2 185 1 312 5 112 9 344 1 208 1 41 4 345 1 99 7 
276 1 349 1 321 2 24 9 241 1 172 1 355 1 54 3 333 1 12 1 245 2 15 1 267 1 59 1 183 1 340 2 185 1 312 5 112 9 344 1 208 1 41 4 345 1 99 7 
141 1 
220 2 81 1 153 1 
94 2 32 2 77 1 34 1 258 2 288 2 271 2 92 2 
22 1 258 3 45 1 122 1 166 1 323 1 297 1 75 1 125 1 48 1 77 1 197 1 357 2 199 2 55 1 359 1 200 1 105 1 282 1 57 1 83 1 85 2 106 1 148 2 32 2 33 1 34 1 288 2 271 3 92 2 94 2 365 1 251 2 96 1 252 1 159 1 273 1 
94 1 32 1 162 1 77 1 329 1 258 1 288 1 271 1 314 1 92 1 
246 1 16 1 258 1 1 1 271 1 25 1 4 1 314 1 94 1 217 1 81 1 360 1 274 1 307 1 
246 1 32 1 258 1 288 1 1 1 271 1 25 2 92 1 314 1 94 1 217 1 81 1 360 2 274 1 307 1 
107 1 23 1 25 1 360 1 324 1 
162 1 23 1 258 1 213 1 25 2 324 1 77 1 50 1 329 1 81 1 360 2 246 1 32 1 288 1 271 1 92 1 314 1 115 1 94 1 
25 1 360 1 324 1 
32 1 162 1 23 1 258 1 288 1 25 1 271 1 314 1 92 1 115 1 94 1 77 1 329 1 360 1 
81 1 
162 1 23 1 258 1 213 1 25 2 324 1 77 1 329 1 81 1 360 2 305 1 246 1 32 1 288 1 271 1 92 1 314 1 115 1 94 1 
162 1 23 2 256 1 258 1 213 1 25 5 299 1 324 2 259 2 325 1 216 1 77 1 329 1 301 2 198 1 53 5 218 2 243 1 264 1 81 2 304 1 334 4 360 5 32 1 246 2 288 1 270 2 287 1 108 2 203 1 271 1 314 1 92 1 115 1 94 1 229 2 66 1 254 1 
181 1 22 1 122 1 258 2 288 1 352 1 75 1 271 2 125 1 92 1 94 1 327 1 96 1 357 1 252 1 199 1 359 1 159 1 282 1 148 1 
141 1 
32 1 34 2 258 2 288 1 271 2 292 1 92 1 94 2 38 1 
132 1 181 1 133 1 
34 1 22 1 258 1 122 1 36 1 271 1 75 1 125 1 96 1 357 1 252 1 199 1 359 1 159 1 282 1 148 1 
32 1 94 3 34 1 258 3 288 3 352 1 271 3 92 3 
94 1 329 1 258 1 288 1 271 1 314 1 92 1 
94 1 32 1 38 1 258 1 288 1 271 1 292 1 314 1 92 1 
22 1 122 1 45 1 258 4 323 1 352 1 1 1 297 1 75 1 25 1 125 1 280 1 327 1 77 1 217 1 302 1 357 1 199 1 359 1 105 1 360 1 282 1 57 1 83 1 85 2 106 1 307 1 148 1 32 2 33 1 34 1 288 3 292 1 271 4 92 3 314 1 94 3 365 1 251 1 96 1 252 1 159 1 273 1 274 1 
94 2 296 1 34 1 16 1 258 2 288 1 352 1 271 2 92 1 
32 1 182 1 258 3 288 3 1 1 352 2 292 1 25 1 271 3 314 1 92 3 94 3 327 1 280 1 217 1 81 1 360 1 274 1 307 1 
94 2 32 1 132 1 181 1 258 2 288 2 352 1 271 2 292 1 92 2 
34 1 22 1 258 1 122 1 271 1 75 1 125 1 357 1 96 1 252 1 199 1 359 1 159 1 282 1 148 1 
34 1 258 1 122 1 271 1 75 1 125 1 357 1 96 1 252 1 199 1 359 1 175 1 221 1 282 1 148 1 
33 1 132 2 181 2 269 1 133 2 270 1 323 1 363 1 3 1 365 1 251 4 155 1 218 1 157 1 200 2 244 1 105 1 57 2 255 1 273 1 106 1 85 2 
94 1 194 1 258 1 288 1 271 1 314 1 274 1 92 1 
32 1 179 1 296 1 34 1 16 1 258 5 288 4 352 2 271 5 292 1 92 4 94 5 327 1 177 1 
94 2 194 1 329 1 258 2 288 2 271 2 314 1 92 2 
285 1 356 1 
285 1 356 1 
285 1 257 1 356 1 42 1 
285 1 257 1 356 1 42 1 
257 1 42 1 
285 1 330 1 356 1 
285 1 257 1 356 1 42 1 
285 1 356 1 79 1 
285 1 330 1 356 1 
285 1 330 1 356 1 
285 1 35 1 356 1 
285 1 35 1 356 1 
285 1 35 1 356 1 
295 2 285 2 309 1 341 3 2 1 25 2 204 2 193 2 126 1 356 2 9 2 81 1 67 1 100 1 233 1 360 2 160 1 319 2 361 1 
295 1 258 2 322 1 25 1 193 1 9 1 356 1 79 1 360 1 362 1 34 1 285 1 224 1 288 2 341 1 291 1 271 2 272 1 249 1 92 2 94 2 67 1 317 1 319 1 
172 1 349 1 241 1 
349 1 168 1 241 1 
172 2 349 3 86 1 332 1 289 1 168 1 
172 1 349 2 86 1 332 1 168 1 10 1 
172 1 349 2 86 2 332 1 168 1 
23 4 322 1 3 1 142 1 47 1 213 1 25 5 259 1 324 1 127 1 51 2 195 1 196 2 301 1 53 2 218 1 220 3 81 2 360 5 334 3 246 1 223 1 337 1 270 1 290 1 272 1 249 1 153 1 206 2 229 1 157 1 66 1 
23 7 322 4 3 3 142 3 213 1 25 9 324 6 259 2 171 5 78 1 51 6 195 2 28 1 196 6 301 2 53 6 218 3 220 9 81 5 304 1 360 9 334 8 129 1 246 1 131 1 107 5 337 2 270 3 342 1 290 1 153 3 229 2 157 3 40 1 66 1 
23 2 322 1 47 1 142 1 3 1 25 3 259 1 195 1 51 2 301 1 196 2 53 2 218 1 220 4 81 3 304 1 360 3 334 3 246 1 223 1 337 1 270 1 153 2 206 1 229 1 157 1 
23 3 322 2 47 1 142 2 3 2 25 4 259 1 51 4 195 1 28 1 196 4 301 1 53 4 218 2 220 7 81 4 304 1 360 4 334 5 129 1 246 1 131 1 223 1 337 1 270 2 153 3 206 2 229 1 157 2 
141 1 
96 1 111 1 
234 1 
96 1 252 1 
189 1 154 2 96 3 252 1 104 1 125 1 
96 1 252 1 125 1 
96 1 97 1 
270 1 248 3 287 1 46 1 260 1 6 1 146 2 174 2 198 1 251 7 218 1 243 1 98 1 200 4 368 1 57 3 347 1 
270 1 248 3 287 1 46 1 260 1 6 1 146 2 174 2 198 1 251 7 218 1 243 1 98 1 200 4 368 1 57 3 347 1 
71 1 270 1 248 3 287 1 46 1 260 1 6 1 146 2 174 2 198 1 251 7 218 1 243 1 98 1 200 4 368 1 57 3 347 1 
260 2 146 1 123 1 251 1 46 1 200 1 
323 2 46 1 74 1 144 1 260 1 6 1 146 2 174 3 198 1 218 1 243 1 200 5 105 2 57 4 85 4 106 2 270 1 248 4 287 1 113 1 365 2 251 9 368 1 347 1 
349 2 321 1 168 1 24 2 75 1 241 1 172 1 279 1 357 1 199 1 359 1 333 1 13 1 148 1 247 1 311 1 340 1 183 1 289 1 185 1 312 1 109 1 112 2 18 1 208 1 118 1 316 1 293 1 99 1 120 1 
349 2 321 1 168 1 24 3 278 1 75 1 241 1 172 1 357 1 242 1 199 1 359 1 333 1 56 1 148 1 247 1 311 1 340 1 183 1 289 1 312 1 109 1 112 3 18 1 208 1 118 1 316 1 293 1 99 2 120 1 
349 2 168 1 24 2 278 1 75 1 241 1 172 1 357 1 199 1 359 1 333 1 56 1 148 1 183 1 311 1 289 1 312 1 109 1 112 2 18 1 208 1 118 1 293 1 99 2 120 1 
348 1 321 1 140 1 183 2 311 2 340 1 24 1 109 2 75 1 112 1 27 1 262 1 18 2 96 1 95 1 357 1 252 1 242 1 199 1 359 1 346 1 282 1 148 1 
247 1 349 2 321 1 183 1 340 1 311 1 289 1 168 1 185 1 24 1 109 1 75 1 112 1 241 1 172 1 279 1 18 1 118 1 357 1 293 1 316 1 199 1 359 1 56 1 120 1 148 1 
261 1 
143 1 213 1 75 2 25 2 125 1 259 1 324 2 27 1 195 1 301 1 357 2 53 1 199 2 359 3 282 2 360 2 334 1 148 2 265 1 87 1 91 1 37 1 116 1 96 2 229 1 252 2 66 1 318 1 346 1 
147 1 358 1 213 1 25 2 62 1 360 2 305 1 324 2 306 1 
336 1 303 1 358 1 25 1 62 1 360 1 306 1 
336 1 213 1 25 2 225 1 62 1 324 2 147 1 358 1 303 1 360 2 305 1 306 1 
101 1 43 1 324 7 329 1 147 4 53 1 334 1 11 1 246 1 336 2 58 1 60 2 288 1 62 1 153 2 115 1 209 1 66 1 162 1 258 1 213 3 25 4 26 2 259 1 300 2 77 1 301 1 358 1 128 2 303 2 263 1 81 1 360 4 305 1 306 1 32 1 225 4 271 1 314 1 92 1 94 1 228 1 229 1 
43 1 324 4 329 1 147 2 53 1 11 1 334 1 246 1 336 2 60 2 288 1 62 1 153 2 115 1 66 1 162 1 258 1 213 2 25 3 26 2 259 1 300 2 77 1 301 1 128 2 358 1 303 2 220 2 31 1 81 1 360 3 306 1 32 1 225 2 271 1 314 1 92 1 94 1 229 1 
43 1 213 2 25 3 26 2 324 4 259 1 300 2 147 2 301 1 303 2 358 1 128 2 53 1 263 1 81 1 360 3 11 1 334 1 306 1 246 1 336 2 60 2 225 2 62 1 153 2 228 1 229 1 209 1 66 1 
43 1 324 4 329 1 147 2 53 1 334 1 11 1 246 1 336 2 60 2 288 1 62 1 153 2 115 1 209 1 66 1 162 1 258 1 213 2 25 3 26 2 259 1 300 2 77 1 301 1 128 2 358 1 303 2 263 1 81 1 360 3 306 1 32 1 225 2 271 1 92 1 314 1 94 1 228 1 229 1 
187 1 358 1 25 1 62 1 360 1 306 1 
43 1 324 5 329 1 147 3 53 1 334 1 11 1 246 1 336 3 58 1 60 2 288 1 62 1 153 2 115 1 209 1 66 1 162 1 258 1 213 2 25 3 26 2 259 1 300 2 77 1 301 1 358 1 303 3 128 2 263 1 81 1 360 3 306 1 32 1 225 3 271 1 314 1 92 1 94 1 228 1 229 1 
43 1 324 5 329 1 147 3 53 1 334 1 11 1 246 1 336 3 58 1 60 2 288 1 62 1 153 2 115 1 209 1 66 1 162 1 258 1 213 2 25 3 26 2 259 1 300 2 77 1 301 1 358 1 303 3 128 2 263 1 81 1 360 3 306 1 32 1 225 3 271 1 314 1 92 1 94 1 228 1 229 1 
165 1 60 1 43 1 25 1 26 1 62 1 259 1 301 1 229 1 358 1 53 1 66 1 334 1 360 1 306 1 
33 1 365 1 141 1 323 1 105 1 273 1 255 1 85 2 106 1 
235 1 103 1 323 2 142 2 3 2 218 2 55 1 200 8 105 2 83 1 57 6 84 1 178 1 85 4 106 2 180 1 33 1 132 4 181 11 34 1 248 1 133 11 270 1 365 2 366 1 251 14 253 3 157 1 230 3 137 1 347 1 273 2 
22 1 122 1 258 2 323 1 352 1 75 1 125 1 327 1 357 1 199 1 359 1 55 1 200 1 105 1 282 1 84 1 83 1 57 1 148 1 106 1 85 2 33 1 335 1 132 1 34 1 36 1 288 1 271 2 90 1 92 1 94 1 17 1 365 1 96 1 251 2 252 1 159 1 273 1 
45 1 277 1 323 2 142 1 3 1 192 1 327 1 328 1 199 1 200 3 105 2 282 1 57 4 148 1 106 2 248 1 288 1 110 1 251 7 252 1 157 1 159 1 22 1 258 2 122 1 352 1 75 1 125 1 357 1 174 1 218 1 359 1 83 1 84 1 85 4 33 2 132 3 181 3 133 3 270 1 271 2 92 1 94 1 365 2 96 1 232 1 273 2 
258 1 352 1 323 2 75 2 48 2 27 1 357 8 199 8 359 2 55 1 200 1 105 2 56 1 282 2 13 1 83 1 57 1 148 7 85 4 106 2 14 1 33 2 268 1 88 1 288 1 271 1 152 1 92 1 94 1 250 1 365 2 96 3 251 2 252 2 210 1 156 1 346 1 255 1 273 2 
258 1 323 1 142 1 3 1 218 1 200 1 105 1 84 1 57 2 85 2 106 1 32 1 33 1 132 1 181 1 133 1 288 1 270 1 292 1 271 1 92 1 94 1 365 1 251 3 157 1 231 1 273 1 
33 1 132 1 181 1 269 1 248 1 133 1 323 1 3 1 365 1 251 2 218 1 200 2 105 1 347 1 255 1 273 1 106 1 85 2 
33 1 132 1 181 1 133 1 270 1 323 1 365 1 251 2 155 1 157 1 105 1 255 1 273 1 57 2 106 1 85 2 
33 1 132 2 181 2 270 1 133 2 323 1 142 1 3 1 365 1 251 4 157 1 218 1 200 2 105 1 57 2 255 1 273 1 106 1 85 2 
33 1 132 1 181 1 88 1 269 1 248 1 133 1 323 1 3 1 365 1 251 2 218 1 200 2 105 1 347 1 273 1 106 1 85 2 
33 1 132 1 181 1 88 1 133 1 270 1 323 1 365 1 251 2 155 1 157 1 105 1 273 1 57 2 106 1 85 2 
323 1 3 1 142 1 218 1 200 2 105 1 57 2 85 2 106 1 33 1 132 2 181 2 88 1 133 2 248 1 270 1 365 1 251 4 157 1 273 1 347 1 
33 1 132 2 181 2 270 1 133 2 323 1 142 1 3 1 365 1 251 4 157 1 218 1 200 2 105 1 57 2 273 1 106 1 85 2 
22 1 122 1 45 1 258 1 323 1 75 1 125 1 357 1 199 1 55 1 359 1 200 1 105 1 282 1 83 1 57 1 148 1 106 1 85 2 33 1 34 1 271 1 365 1 251 2 96 1 252 1 159 1 273 1 
122 1 258 1 323 1 75 1 125 1 357 1 199 1 55 1 359 1 200 1 221 1 175 1 105 1 282 1 83 1 57 1 148 1 106 1 85 2 33 1 34 1 271 1 227 1 365 1 251 2 96 1 252 1 273 1 
33 1 132 2 181 2 270 1 133 2 323 1 142 1 3 1 365 1 251 4 157 1 218 1 200 2 105 1 57 2 84 1 273 1 106 1 85 2 
22 1 122 1 45 1 258 1 323 1 3 1 142 1 75 1 192 1 125 1 357 1 218 1 199 1 359 1 200 2 105 1 57 2 13 1 148 1 106 1 85 2 33 1 132 2 181 2 270 1 133 2 271 1 365 1 251 4 96 1 252 1 157 1 159 1 273 1 
258 1 323 1 142 1 3 1 218 1 200 2 105 1 57 1 84 1 85 2 106 1 32 1 33 1 132 1 181 1 270 1 248 1 288 1 133 1 292 1 271 1 92 1 94 1 365 1 251 3 157 1 294 1 347 1 273 1 
236 1 102 1 350 1 103 1 323 2 142 2 3 2 8 1 218 2 200 6 105 2 57 7 85 4 106 2 248 1 270 2 202 1 63 1 113 1 226 1 365 2 366 1 251 13 253 1 157 2 230 2 20 1 347 1 
161 1 164 1 102 1 350 2 323 3 351 1 142 3 3 3 144 2 7 1 174 1 8 1 331 1 218 3 200 14 105 3 57 12 85 6 106 3 248 3 270 2 202 2 134 1 313 1 63 4 113 1 365 3 251 26 366 2 253 2 157 2 230 2 20 1 347 2 
102 1 103 1 323 3 3 4 142 4 144 1 6 1 146 1 7 1 8 1 198 1 331 1 243 1 200 20 105 3 57 21 106 3 248 6 287 1 202 2 63 4 113 1 251 41 157 4 253 3 20 1 347 4 161 1 164 1 350 1 351 1 174 2 218 5 82 1 85 6 270 5 134 1 313 1 226 1 365 3 366 3 230 4 368 1 
102 1 103 1 323 4 3 4 142 4 144 2 6 1 146 1 7 1 8 1 198 1 331 1 243 1 200 20 105 4 57 18 106 4 248 5 287 1 202 2 63 4 113 1 251 38 157 3 253 3 20 1 347 3 161 1 164 1 350 1 351 1 174 2 218 5 82 1 85 8 270 4 134 1 313 1 226 1 365 4 366 3 230 4 368 1 
161 1 164 1 102 1 350 1 103 1 323 2 351 1 142 4 3 4 144 1 6 1 146 1 7 1 198 1 174 2 8 1 331 1 243 1 218 5 200 18 105 2 57 19 85 4 106 2 287 1 248 4 270 5 202 1 134 1 313 1 63 4 113 1 365 2 366 2 251 37 253 2 157 4 230 3 368 1 20 1 347 2 
295 1 285 1 52 1 9 1 356 1 100 1 160 1 319 1 361 1 193 1 
224 1 79 1 
295 1 285 1 9 1 356 1 214 1 151 1 343 1 319 1 193 1 
295 1 285 1 309 1 341 2 2 1 25 1 204 1 193 1 356 1 9 1 81 1 67 1 100 1 233 1 360 1 160 1 319 1 361 1 
295 1 285 1 309 1 341 2 2 1 25 1 204 1 193 1 356 1 9 1 81 1 67 1 100 1 233 1 360 1 160 1 319 1 361 1 
295 1 285 1 309 1 341 2 2 1 25 1 204 1 193 1 356 1 9 1 81 1 67 1 100 1 233 1 360 1 160 1 319 1 361 1 
330 1 138 1 170 1 
330 1 138 1 170 1 
35 1 238 1 
35 1 238 1 170 1 
291 1 317 1 
295 1 23 1 258 2 322 1 25 1 193 1 9 1 356 1 79 1 360 1 362 1 34 1 285 1 224 1 309 1 288 2 341 1 291 1 271 2 272 1 249 1 204 1 92 2 94 2 317 1 19 1 319 1 
330 1 138 1 
35 1 238 1 170 1 
0 1 258 2 323 1 75 1 48 2 357 2 199 2 359 1 55 1 200 1 105 1 84 1 83 1 57 1 106 1 85 2 148 2 33 1 271 2 93 1 94 2 250 1 365 1 96 1 251 2 252 1 65 1 210 1 139 1 273 1 275 1 
247 1 349 2 150 1 286 1 311 1 289 1 168 1 75 1 241 1 172 1 64 1 357 2 293 1 199 2 359 1 56 1 13 1 120 1 148 2 
247 1 349 2 286 1 311 1 289 1 168 1 75 1 241 1 172 1 117 1 357 1 293 1 199 1 359 1 56 1 120 1 148 1 
311 1 75 1 27 1 64 1 96 1 357 1 95 1 252 1 30 1 199 1 359 1 346 1 282 1 148 1 
247 1 349 2 150 1 286 1 311 1 289 1 168 1 75 1 241 1 172 1 64 1 357 1 293 1 199 1 359 1 56 1 120 1 148 1 
211 1 
141 1 
162 1 258 1 213 1 25 1 259 1 324 1 300 1 77 1 329 1 301 1 128 1 53 1 220 1 81 1 334 1 11 1 360 1 32 1 246 1 288 1 271 1 314 1 92 1 153 1 115 1 94 1 229 1 66 1 
189 1 121 1 111 1 75 1 125 1 259 1 114 1 301 1 96 2 229 1 357 1 252 1 199 1 359 2 66 1 282 1 148 1 
3 2 142 2 324 1 325 1 5 1 329 1 51 5 195 1 196 5 53 5 331 1 334 8 246 2 288 1 108 2 153 3 115 1 116 1 205 1 157 2 253 1 66 2 161 1 162 1 164 1 258 1 351 1 213 1 25 1 259 2 77 1 301 2 218 2 220 6 81 5 360 1 32 1 270 2 134 1 271 1 314 1 92 1 94 1 229 2 366 1 230 1 
162 1 258 1 25 1 259 1 325 1 77 1 329 1 301 1 198 1 53 2 243 1 218 2 264 1 360 1 334 2 32 1 287 1 270 1 288 1 108 2 271 1 314 1 92 1 115 1 94 1 229 1 209 1 66 1 
246 1 256 1 203 1 259 1 301 1 229 1 53 1 66 1 81 1 334 1 
270 1 142 1 3 1 153 2 51 2 196 2 53 2 218 1 157 1 220 4 81 2 334 2 
32 1 246 1 162 1 258 1 288 1 213 1 271 1 25 1 314 1 92 1 324 1 115 1 94 1 77 1 329 1 81 1 360 1 
265 1 213 1 184 1 25 1 91 1 324 2 259 1 116 1 195 1 301 1 357 2 229 1 53 1 199 2 66 1 360 1 334 1 282 2 148 2 
22 1 258 3 45 1 122 1 323 1 297 1 75 1 125 1 77 1 357 1 199 1 359 1 105 1 282 1 57 1 83 1 85 2 148 1 106 1 32 2 33 1 34 1 288 2 271 3 92 2 94 2 365 1 251 1 96 1 252 1 159 1 273 1 
246 2 153 2 259 1 116 1 146 1 51 2 195 1 196 2 301 1 229 1 53 2 220 4 66 1 81 4 334 1 
295 1 39 1 9 1 
295 1 9 1 291 1 100 1 215 1 
295 1 39 1 9 1 
295 1 39 1 9 1 
295 1 207 1 9 1 
295 1 207 1 9 1 
295 1 207 1 9 1 
295 1 9 1 
285 1 356 1 
270 1 248 3 287 1 323 2 144 1 6 1 146 1 365 2 251 8 174 2 198 1 218 1 243 1 200 4 105 2 368 1 57 4 347 1 106 2 85 4 
141 1 
69 1 270 1 248 1 323 1 142 1 3 1 365 1 251 4 157 1 218 1 200 2 105 1 57 2 347 1 106 1 85 2 
270 1 103 1 248 1 142 1 3 1 366 1 251 7 157 1 253 1 218 1 230 2 200 3 57 4 347 1 
235 1 103 1 323 1 3 2 142 2 144 1 6 1 146 1 174 4 198 2 243 2 218 5 264 1 200 13 105 1 57 12 106 1 85 2 180 1 287 2 270 5 248 8 365 1 251 25 157 2 253 2 230 2 368 1 347 4 
251 1 230 1 57 1 
251 1 253 1 200 1 
277 1 248 2 270 1 142 1 3 1 251 6 174 1 218 1 157 1 200 3 57 3 347 1 
161 1 164 1 351 1 323 2 142 2 3 2 144 1 174 1 331 1 218 2 200 6 105 2 57 7 85 4 106 2 270 2 248 2 134 1 113 1 365 2 251 13 366 1 253 1 157 2 230 1 347 1 
270 1 287 1 248 2 251 6 198 1 174 1 243 1 218 1 200 3 57 3 347 1 
248 2 287 1 323 1 240 1 144 1 6 1 365 1 174 1 198 1 251 3 200 1 105 1 368 1 347 1 57 2 106 1 85 2 
287 2 248 5 270 2 323 1 113 1 365 1 198 2 174 3 251 10 243 1 218 2 264 1 200 5 105 1 347 2 57 5 85 2 106 1 
248 1 323 1 3 1 113 1 365 1 251 2 218 1 200 2 105 1 347 1 106 1 85 2 
270 1 323 1 142 1 3 1 113 1 365 1 251 4 218 1 157 1 200 2 105 1 57 2 106 1 85 2 
287 1 248 2 323 3 144 1 240 1 113 1 226 1 365 3 251 3 198 1 174 1 200 1 105 3 57 2 347 1 106 3 85 6 
69 1 320 1 323 3 6 1 174 2 198 1 218 2 243 1 264 1 200 6 105 3 57 6 85 6 106 3 270 2 248 4 287 1 113 1 226 1 365 3 366 1 251 12 253 1 230 1 368 1 347 2 
351 1 323 1 6 1 146 1 198 1 174 2 218 1 243 1 200 4 105 1 57 4 85 2 106 1 270 1 287 1 248 2 113 1 365 1 251 8 366 1 253 1 230 1 368 1 
69 1 103 1 351 1 323 2 142 1 3 1 6 1 146 1 174 2 198 1 243 1 218 2 200 6 105 2 57 5 85 4 106 2 270 1 287 1 248 3 113 1 365 2 251 11 366 1 253 1 230 2 368 1 347 1 
161 1 69 1 164 1 351 1 323 3 142 2 3 2 144 1 6 1 146 1 198 1 174 3 331 1 243 1 218 3 200 9 105 3 57 10 85 6 106 3 287 1 270 3 248 4 134 1 113 1 365 3 251 19 366 1 253 1 157 2 230 1 368 1 347 1 
161 1 69 1 164 1 351 1 323 4 142 2 3 2 144 2 174 1 331 1 218 2 200 7 105 4 57 5 85 8 106 4 270 1 248 2 134 1 113 1 365 4 251 12 366 1 253 1 157 1 230 1 347 1 
351 1 323 1 6 1 146 1 198 1 174 2 218 1 243 1 200 4 105 1 57 4 85 2 106 1 270 1 287 1 248 2 113 1 365 1 251 8 366 1 253 1 230 1 368 1 
161 1 164 1 351 1 323 2 142 2 3 2 144 1 174 1 331 1 218 2 200 6 105 2 57 7 85 4 106 2 270 2 248 2 134 1 113 1 365 2 251 13 366 1 253 1 157 2 230 1 347 1 
161 1 69 1 164 1 351 1 323 4 142 2 3 2 144 2 6 1 146 1 198 1 174 3 331 1 243 1 218 3 200 10 105 4 57 8 85 8 106 4 287 1 270 2 248 5 134 1 113 1 365 4 251 18 366 1 253 1 157 1 230 1 368 1 347 2 
161 1 164 1 351 1 323 4 142 3 3 3 144 2 174 1 331 1 218 3 200 9 105 4 57 7 85 8 106 4 270 2 248 4 134 1 113 1 226 1 365 4 251 16 366 1 253 1 157 2 230 1 347 3 
270 1 287 3 248 6 6 1 251 7 198 3 174 3 243 1 218 1 200 3 368 2 57 4 347 3 
161 1 164 1 351 1 323 4 142 2 3 2 144 2 6 1 146 1 198 1 174 3 331 1 243 1 218 3 200 10 105 4 57 8 85 8 106 4 287 1 270 2 248 4 134 1 113 1 226 1 365 4 251 18 366 1 253 1 157 1 230 1 368 1 347 1 
94 1 296 1 34 1 16 1 258 1 271 1 239 1 
296 1 34 1 16 1 73 1 258 1 169 1 271 1 239 1 353 1 94 1 315 1 367 1 
357 1 141 1 199 1 282 1 148 1 
34 1 22 1 122 1 258 2 288 1 352 1 271 2 75 1 125 1 92 1 94 1 96 1 357 1 252 1 199 1 359 1 282 1 148 1 
34 1 22 1 44 1 122 1 258 2 288 1 352 1 271 2 75 1 125 2 314 1 92 2 94 2 136 1 96 3 357 1 97 1 252 2 199 1 359 1 274 1 307 1 148 1 
34 1 44 1 122 1 258 2 288 1 352 1 271 2 75 1 125 2 314 1 92 2 94 2 136 1 96 3 357 2 97 1 252 2 199 2 359 1 221 1 176 1 274 1 307 1 148 2 
44 1 212 1 1 1 75 1 25 2 125 1 324 1 173 1 357 3 199 3 359 1 81 1 176 1 360 2 282 1 148 3 246 1 111 1 154 1 136 1 96 4 252 1 97 1 
246 1 222 1 44 1 1 1 25 2 111 1 75 1 125 1 324 1 154 1 136 1 357 3 96 4 97 1 252 1 199 3 359 1 81 1 176 1 282 1 360 2 148 3 
14 1 357 1 199 1 359 1 75 1 148 1 
189 1 143 1 75 1 125 1 37 1 145 1 357 1 96 1 252 1 199 1 359 2 282 1 148 1 
22 1 122 1 258 2 45 1 323 2 352 1 75 1 192 1 125 1 6 1 328 1 146 1 174 2 198 1 357 1 218 1 243 1 199 1 359 1 200 3 105 2 57 3 84 1 13 1 106 2 85 4 148 1 33 2 132 1 181 1 34 2 133 1 270 1 248 2 287 1 288 1 271 2 92 1 93 1 94 1 365 2 251 6 96 1 252 1 159 1 368 1 273 2 
1 1 324 2 325 1 329 1 198 1 53 5 199 1 243 1 282 1 334 4 148 1 246 2 284 1 287 1 288 1 203 1 108 2 111 1 115 1 154 1 66 2 162 1 23 1 256 1 258 1 213 1 124 1 25 3 259 2 77 1 301 2 357 1 218 2 264 1 81 2 360 3 32 1 222 1 270 2 184 1 186 1 271 1 314 1 92 1 94 1 96 2 229 2 
189 1 14 1 121 1 154 1 96 2 357 2 252 1 199 2 359 2 75 1 125 1 13 1 148 2 
167 1 75 1 27 1 357 4 96 1 252 1 199 4 359 1 346 1 176 1 282 1 13 1 148 4 
87 1 143 1 75 1 125 1 37 1 76 1 357 1 96 1 252 1 199 1 359 2 318 1 148 1 
349 1 357 1 293 1 168 1 199 1 359 1 75 1 282 1 241 1 148 1 
75 1 357 2 96 1 252 1 199 2 210 1 359 1 56 1 139 1 13 1 148 2 
44 1 268 1 167 1 75 2 152 1 27 1 357 5 96 3 252 2 199 5 210 1 359 2 346 1 282 1 13 1 148 4 
44 1 167 1 298 1 75 2 152 1 27 1 357 5 96 3 252 2 199 5 210 1 359 2 346 1 282 1 13 1 148 4 
34 1 122 1 258 2 288 1 352 1 271 2 75 1 125 1 92 1 94 1 96 1 357 1 252 1 199 1 359 1 221 1 282 1 148 1 
189 1 44 1 143 1 75 1 125 1 37 1 145 1 357 1 96 1 252 1 199 1 359 2 148 1 
163 1 0 1 258 1 339 1 271 1 94 1 281 1 65 1 275 1 
70 1 163 1 49 1 
163 1 281 1 34 1 29 1 339 1 
246 1 163 1 70 1 34 1 23 1 339 2 1 1 237 1 25 2 314 1 49 1 281 2 280 1 217 1 29 2 81 1 360 2 274 1 307 1 
141 1 
321 1 208 1 340 1 24 1 312 1 333 1 112 1 
18 1 183 1 112 1 
321 1 340 1 89 1 185 1 24 3 312 1 112 3 188 1 208 1 219 2 333 1 130 1 
321 1 208 1 340 1 24 2 312 1 333 1 99 1 112 2 245 1 
349 1 321 1 340 1 185 1 24 1 312 1 112 1 241 1 172 1 344 1 41 1 
321 1 208 1 340 1 24 1 185 1 312 1 112 1 
321 1 208 2 340 1 24 1 185 1 333 1 112 1 
283 1 338 1 321 2 340 2 185 1 24 2 312 1 112 2 354 1 208 1 
276 1 321 1 340 1 185 1 24 3 312 2 112 3 208 1 54 1 41 1 333 1 99 2 12 1 
149 1 349 2 321 1 340 1 168 1 289 1 185 1 24 2 312 1 112 2 241 1 172 1 208 1 333 1 99 1 
321 2 340 2 185 1 24 4 312 2 112 4 208 1 54 1 345 1 41 1 333 1 99 2 245 1 
321 1 208 1 340 1 24 1 185 1 312 1 333 1 112 1 
321 1 340 1 24 4 312 3 112 4 326 1 188 1 208 2 54 1 219 1 41 1 333 2 99 2 130 1 
15 1 321 1 340 1 201 1 185 1 24 2 312 1 112 2 208 1 158 1 99 1 333 1 
68 1 321 1 340 1 185 1 24 3 312 1 112 3 188 2 208 1 219 2 333 1 130 1 
266 2 310 1 312 2 364 1 
308 1 321 1 340 1 24 1 185 1 112 1 
321 1 208 1 340 1 24 2 185 1 312 1 333 1 99 1 12 1 112 2 
72 1 
321 1 208 1 340 1 24 1 185 1 312 1 333 1 112 1 
321 1 340 1 185 1 24 3 312 1 112 3 208 1 219 1 99 1 333 1 12 1 
326 1 54 1 41 1 312 1 
208 1 312 1 

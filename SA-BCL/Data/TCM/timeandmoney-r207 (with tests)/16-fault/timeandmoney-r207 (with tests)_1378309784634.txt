#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (1,119,285,304) (1,119,285,304) (22,249,269,291) 237 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (1,119,285,304) (1,119,285,304) (22,249,269,291) 237 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 246 (67,225) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 217 92 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (112,297) (132,294) (132,294) 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 324 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 154 318 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 154 318 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 154 318 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 154 318 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 154 318 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (112,297) (112,297) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 217 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 164 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 272 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (112,297) (132,294) (132,294) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (112,297) (132,294) (132,294) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (112,297) (132,294) (132,294) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 164 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 164 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 272 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 272 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 217 92 189 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 275 307 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 200 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (1,119,285,304) (1,119,285,304) (22,249,269,291) (22,249,269,291) (22,249,269,291) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
178 3 52 1 1 1 55 1 278 1 142 1 119 2 266 2 32 1 49 1 304 2 267 1 285 3 
178 1 48 1 304 1 49 1 285 1 119 1 
178 1 48 1 304 1 49 1 285 1 119 1 
178 1 48 1 304 1 49 1 285 1 119 1 
178 1 48 1 304 1 49 1 285 1 119 1 
327 1 178 4 249 1 52 1 105 2 274 1 1 3 45 1 55 1 119 1 126 1 266 3 32 1 49 1 304 1 267 2 285 4 167 1 
178 2 327 1 52 1 274 1 55 1 278 1 119 1 322 1 266 1 175 1 49 1 304 1 283 1 285 2 23 1 345 1 
178 1 1 1 304 1 49 1 285 2 269 1 237 1 119 1 
178 1 1 1 304 1 49 1 285 2 269 1 237 1 119 1 
11 1 180 1 276 1 214 1 223 1 171 1 79 1 339 1 350 1 174 1 282 1 314 1 146 1 326 1 
0 1 
238 1 350 1 213 1 0 1 174 2 314 2 145 1 252 1 
104 2 51 1 213 2 96 1 0 1 252 1 46 2 3 1 78 1 219 1 350 2 174 5 176 1 188 1 33 1 314 5 145 1 284 1 10 2 
0 1 205 1 145 1 
0 1 312 1 295 2 
11 2 180 2 214 2 276 2 216 1 223 2 326 2 171 1 
180 2 133 1 135 1 117 1 165 1 25 1 214 2 276 2 216 1 299 1 218 1 303 2 7 1 120 1 38 2 326 3 11 3 12 1 151 1 63 2 42 1 170 1 330 1 153 1 44 1 64 1 223 2 171 1 124 1 351 1 69 1 333 2 88 1 156 1 334 1 356 1 208 2 
11 1 180 1 276 1 214 1 223 1 171 1 79 1 339 1 282 1 326 1 
11 1 0 1 181 1 214 1 172 1 66 1 263 1 79 1 279 1 174 1 314 1 145 1 326 1 21 1 
11 1 180 1 0 1 181 1 276 1 214 1 223 1 263 1 79 1 279 1 174 2 314 2 145 1 326 1 21 1 
350 1 213 1 250 1 174 1 314 1 
350 1 213 1 0 1 174 2 314 2 145 1 341 1 252 1 
213 1 174 1 314 1 
11 2 74 1 180 1 214 2 276 1 223 1 216 1 79 1 313 1 326 2 344 1 
195 1 227 1 209 1 
11 1 12 1 63 1 330 1 308 1 216 1 299 1 124 1 351 1 7 1 120 1 156 1 356 1 38 1 208 1 326 1 
205 1 216 1 
11 2 12 1 195 1 63 1 180 1 330 1 214 1 118 1 223 1 299 1 124 1 351 1 80 1 7 1 156 1 120 1 356 1 38 1 208 1 326 2 
11 2 180 2 214 2 276 1 223 2 216 1 79 1 80 1 313 1 326 2 344 1 
339 1 11 2 180 2 214 2 223 2 336 1 326 2 79 1 
11 3 180 3 276 1 214 3 223 3 216 1 79 1 80 1 326 3 344 1 
339 1 11 1 180 1 214 1 223 1 326 1 79 1 
11 1 180 1 74 1 276 1 214 1 223 1 79 1 313 1 326 1 
180 3 181 1 133 1 135 1 117 1 276 2 214 3 118 1 216 1 299 1 79 1 218 1 279 1 80 1 303 2 7 1 120 1 38 1 326 4 151 1 11 4 12 1 63 1 42 1 170 1 330 1 153 1 223 3 171 1 124 1 263 1 351 1 333 1 174 1 88 1 355 1 313 1 156 1 314 1 334 1 356 1 208 1 21 1 210 1 
264 1 11 2 180 1 80 1 214 2 216 1 223 1 326 2 66 1 
11 3 180 3 0 1 181 1 276 1 214 3 118 1 223 3 79 1 263 1 279 1 80 2 174 1 313 1 34 1 314 1 326 3 210 1 21 1 
11 2 195 1 180 2 276 1 214 2 223 2 80 1 313 1 209 1 326 2 
11 1 12 1 63 1 330 1 216 1 299 1 124 1 351 1 7 1 120 1 156 1 356 1 38 1 208 1 326 1 
12 1 63 1 216 1 79 1 38 1 208 1 194 1 344 1 
130 1 160 1 133 1 135 1 117 1 98 1 139 1 218 1 303 2 81 1 37 1 152 1 195 2 170 1 153 2 44 2 173 1 333 4 227 2 88 1 91 1 209 2 
11 1 279 1 180 1 214 1 223 1 326 1 336 1 79 1 
246 1 225 1 67 1 
225 1 
225 1 
225 1 
246 1 67 1 
246 1 67 1 
246 1 67 1 
225 1 
225 1 
225 1 
225 1 
225 1 
225 1 
11 1 75 1 180 1 13 1 328 1 77 1 214 1 331 1 223 1 111 1 217 1 225 1 174 1 101 1 314 1 92 1 157 1 326 1 149 1 
297 1 75 2 0 1 132 1 328 2 182 1 331 2 111 1 225 2 174 2 101 2 294 1 314 2 9 1 149 2 
327 2 84 1 198 2 175 1 167 1 
327 1 274 1 167 1 
327 1 274 1 175 1 
327 3 198 1 84 1 175 1 167 2 73 1 
327 2 198 1 84 1 175 1 86 1 167 1 
213 1 160 1 24 2 96 2 0 2 98 1 162 1 77 1 252 1 3 3 183 1 166 1 81 1 190 1 254 1 145 1 37 1 10 1 192 1 104 1 83 2 123 2 13 1 46 1 125 1 350 4 174 5 312 1 176 1 314 5 157 1 295 3 
213 6 160 3 24 6 96 6 250 5 0 5 98 3 162 2 236 1 252 1 3 8 81 3 254 2 145 1 37 3 284 1 10 2 192 1 104 2 288 1 83 6 46 2 17 1 125 3 265 5 350 7 244 1 174 9 312 3 176 1 314 9 157 4 158 1 295 9 271 1 
160 1 96 2 24 2 0 3 162 1 98 1 3 3 183 1 166 1 81 1 254 1 145 1 37 1 284 1 10 1 104 1 123 1 83 2 46 1 125 1 350 2 174 3 312 2 314 3 157 1 295 4 
160 2 24 4 96 4 0 4 162 1 98 2 3 5 183 1 166 1 81 2 254 1 145 1 37 2 284 1 10 1 104 1 288 1 83 4 123 2 46 1 17 1 125 2 350 3 174 4 312 3 314 4 157 2 295 7 271 1 
199 1 
205 1 356 1 261 1 
356 1 273 1 
351 1 156 1 356 1 
356 1 243 1 
156 1 356 1 
351 1 59 1 156 1 356 3 39 1 261 2 
160 1 98 1 153 3 2 1 44 2 348 1 290 1 140 1 241 4 57 1 4 2 186 1 6 1 333 5 89 1 342 1 93 3 193 1 
160 5 97 3 98 5 135 1 2 2 140 2 57 3 218 1 4 3 186 1 6 3 187 1 303 2 81 2 102 1 37 2 287 1 193 2 257 1 170 1 153 19 44 16 348 1 241 12 290 5 125 2 18 1 114 1 333 35 89 1 88 1 93 7 233 3 115 1 
160 1 98 1 135 2 2 1 140 1 57 1 4 2 218 2 186 1 6 1 303 4 102 1 193 1 170 2 153 5 44 3 258 1 241 5 290 1 226 1 333 8 88 2 89 1 93 4 
160 1 98 1 153 3 2 1 44 2 348 1 290 1 140 1 241 4 57 1 4 2 186 1 6 1 333 5 89 1 93 3 193 1 
160 1 98 1 153 4 2 1 44 2 348 1 290 1 140 1 241 4 57 1 4 2 186 1 6 1 333 6 89 1 93 3 193 1 
178 1 278 2 30 1 119 1 323 2 8 1 103 2 304 1 38 1 285 1 286 1 12 1 63 1 107 1 330 1 124 1 354 2 353 1 156 1 245 1 335 1 356 1 208 1 
178 1 274 1 137 1 278 1 300 1 119 1 323 1 103 1 304 1 167 1 38 1 285 1 220 1 327 2 63 1 40 1 197 1 330 1 124 1 175 1 354 1 49 1 296 1 208 1 73 1 316 1 
178 2 52 1 274 1 1 1 137 1 55 1 278 1 119 1 323 1 103 1 304 1 167 1 38 1 285 2 220 1 327 2 63 1 40 1 197 1 330 1 124 1 266 1 175 1 354 1 49 1 296 1 208 1 73 1 316 1 211 1 
178 3 52 1 274 1 1 2 137 1 55 1 278 1 300 1 119 1 323 1 103 1 304 1 167 1 38 1 285 3 327 2 63 1 40 1 197 1 330 1 124 1 266 1 175 1 354 1 335 1 296 1 73 1 208 1 232 1 316 1 
327 2 178 2 52 1 63 1 197 1 274 1 1 2 330 1 137 1 55 1 278 1 124 1 300 1 266 1 323 1 175 1 354 1 103 1 296 1 167 1 73 1 285 2 38 1 208 1 232 1 
352 1 
96 2 131 1 0 2 181 1 134 1 53 1 3 2 184 1 320 2 239 1 279 1 143 2 8 1 145 1 10 1 326 1 104 1 12 2 11 1 63 2 15 2 330 1 65 2 242 1 66 1 156 1 295 2 208 2 21 1 212 4 213 6 338 1 162 1 214 1 252 3 30 1 79 1 82 1 255 2 38 2 46 1 260 2 124 1 309 1 172 1 263 1 127 1 47 1 174 5 311 2 312 2 176 1 314 5 356 1 270 1 
212 2 11 1 213 2 181 1 53 1 134 1 338 1 214 1 252 1 260 1 79 1 263 1 309 1 172 1 66 1 238 1 279 1 174 3 314 3 270 1 326 1 21 1 
212 3 11 1 213 1 0 1 181 1 53 1 134 1 338 1 214 1 252 1 79 1 263 1 309 1 172 1 66 1 238 1 279 1 174 3 314 3 145 1 255 1 270 1 326 1 21 1 
212 3 213 2 181 1 0 1 338 1 134 1 53 1 214 1 252 1 79 1 238 1 279 1 145 1 255 1 326 1 11 1 260 1 66 1 172 1 309 1 263 1 174 3 311 1 314 3 21 1 270 1 
96 1 181 1 0 5 53 1 134 1 319 1 3 1 320 2 238 1 239 1 279 1 143 2 145 5 10 1 326 1 11 1 104 1 15 2 65 2 66 1 242 1 72 1 207 1 21 1 212 6 213 7 159 1 338 1 214 1 252 3 79 1 255 4 46 1 260 4 263 1 309 1 172 1 174 5 311 4 312 2 229 1 176 1 314 5 270 1 
96 1 181 1 0 2 53 1 134 1 3 1 184 1 320 2 239 1 279 1 143 2 145 1 10 1 326 1 11 1 104 1 15 2 65 2 66 1 242 1 295 2 21 1 212 4 213 4 338 1 214 1 252 2 79 1 255 2 46 1 260 2 263 1 309 1 172 1 174 4 312 2 311 2 176 1 314 4 270 1 
212 4 213 4 159 1 96 1 0 1 181 1 338 1 134 1 53 1 214 1 252 2 3 1 79 1 320 2 239 1 279 1 143 2 145 1 255 2 10 1 326 1 11 1 104 1 15 2 65 2 46 1 260 2 242 1 66 1 172 1 309 1 263 1 174 4 311 2 312 2 176 1 314 4 72 1 207 1 21 1 270 1 
212 4 213 4 159 1 96 1 0 1 181 1 338 1 134 1 53 1 214 1 252 2 3 1 79 1 320 2 239 1 279 1 143 2 145 1 255 2 10 1 326 1 11 1 104 1 15 2 65 2 46 1 260 2 242 1 66 1 172 1 309 1 263 1 174 4 311 2 312 2 176 1 314 4 72 1 207 1 21 1 270 1 
212 2 11 1 181 1 53 1 134 1 338 1 214 1 79 1 263 1 309 1 172 1 66 1 279 1 174 2 324 1 314 2 270 1 326 1 21 1 
212 5 213 5 159 1 96 1 0 1 181 1 338 1 134 1 53 1 214 1 252 2 3 1 79 1 320 2 239 1 279 1 143 2 145 1 255 3 10 1 326 1 104 1 11 1 15 2 65 2 46 1 260 3 242 1 66 1 172 1 309 1 263 1 174 4 312 2 311 3 176 1 229 1 314 4 72 1 207 1 21 1 270 1 
212 5 213 5 159 1 96 1 0 1 181 1 338 1 134 1 53 1 214 1 252 2 3 1 79 1 320 2 239 1 279 1 143 2 145 1 255 3 10 1 326 1 104 1 11 1 15 2 65 2 46 1 260 3 242 1 66 1 172 1 309 1 263 1 174 4 312 2 311 3 176 1 229 1 314 4 72 1 207 1 21 1 270 1 
212 4 213 4 96 1 0 1 181 1 338 1 134 1 53 1 214 1 252 2 3 1 184 1 79 1 279 1 143 2 280 1 240 2 145 1 255 2 10 1 326 1 104 1 11 1 15 2 46 1 260 2 242 1 172 1 309 1 66 1 263 1 292 2 174 4 311 2 176 1 314 4 295 2 270 1 21 1 
130 1 180 1 133 2 135 2 117 2 251 1 235 1 215 1 214 1 25 2 26 1 56 1 300 1 30 1 218 2 80 1 303 4 8 1 38 8 343 1 326 1 11 1 12 2 63 7 85 1 330 2 170 2 42 1 153 1 44 1 223 1 64 1 124 2 333 2 88 2 156 2 356 3 208 8 211 1 
160 1 180 1 133 1 135 1 117 1 98 1 276 1 214 1 218 1 303 2 81 1 37 1 326 1 11 1 195 1 170 1 153 2 44 1 223 1 16 1 125 1 227 1 333 3 88 1 313 1 71 1 209 1 
130 1 160 1 133 1 135 1 117 1 98 1 2 1 216 1 57 1 218 1 4 1 186 1 6 1 303 2 195 1 170 1 153 3 44 2 241 2 333 5 227 1 89 1 88 1 205 1 93 2 209 1 
160 1 97 3 133 1 135 2 117 2 98 2 216 1 218 2 31 1 303 4 81 1 37 2 195 11 257 1 42 1 170 2 153 6 44 8 64 1 241 1 290 1 125 2 333 14 227 11 88 2 203 1 230 1 90 1 71 1 209 4 315 1 233 3 
180 1 133 1 135 1 117 1 214 1 118 1 216 1 299 1 218 1 80 1 7 1 303 2 120 1 38 1 326 2 12 1 11 2 63 1 330 1 170 1 42 1 153 1 308 1 44 1 223 1 64 1 124 1 293 1 351 1 333 2 88 1 156 1 70 1 71 1 356 1 208 1 209 1 357 1 
180 1 133 3 135 3 98 3 2 1 57 1 4 1 186 1 6 1 7 2 191 1 326 3 150 2 12 1 11 3 151 2 196 1 63 3 195 7 330 2 153 10 64 1 290 4 241 6 332 2 333 19 113 2 156 2 71 1 208 3 209 7 160 3 117 3 214 1 118 1 216 1 299 2 300 1 218 3 253 2 80 1 340 1 303 6 81 2 120 2 37 2 38 3 42 1 170 3 44 9 223 1 124 2 125 2 351 2 227 7 89 1 88 3 356 2 93 2 
130 1 195 1 133 1 117 1 135 1 170 1 98 1 44 2 241 1 290 1 218 1 227 1 333 2 303 2 88 1 91 1 37 1 209 1 
130 1 195 1 160 1 133 1 117 1 135 1 170 1 153 2 139 1 218 1 227 1 333 2 303 2 88 1 81 1 209 1 
130 1 160 1 195 2 133 1 117 1 135 1 170 1 98 1 153 2 44 2 241 1 290 1 218 1 125 1 227 2 333 4 303 2 81 1 88 1 37 1 209 2 
195 1 133 1 117 1 135 1 170 1 98 1 26 1 44 2 241 1 290 1 218 1 227 1 333 2 303 2 88 1 91 1 37 1 209 1 
195 1 160 1 133 1 117 1 135 1 170 1 153 2 26 1 139 1 218 1 227 1 333 2 303 2 88 1 81 1 209 1 
160 1 195 2 133 1 117 1 135 1 170 1 98 1 153 2 26 1 44 2 218 1 125 1 227 2 333 4 303 2 81 1 88 1 37 1 209 2 
160 1 195 2 133 1 117 1 135 1 170 1 98 1 153 2 44 2 241 1 290 1 218 1 125 1 227 2 333 4 303 2 81 1 88 1 37 1 209 2 
133 1 117 1 135 1 216 1 299 1 218 1 7 1 303 2 120 1 38 1 326 1 151 1 12 1 11 1 63 1 330 1 170 1 42 1 153 1 44 1 64 1 124 1 351 1 333 2 88 1 156 1 356 1 208 1 
12 1 63 1 133 1 42 1 117 1 135 1 170 1 153 1 216 1 79 1 218 1 333 1 303 2 88 1 60 1 38 1 208 1 194 1 344 1 
160 1 195 2 133 1 117 1 135 1 170 1 98 1 153 2 44 2 241 1 290 1 218 1 125 1 227 2 333 4 303 2 81 1 88 1 71 1 37 1 209 2 
160 1 133 1 98 1 117 1 135 1 299 1 218 1 7 1 303 2 81 1 120 1 37 1 38 1 326 1 150 1 151 1 11 1 195 2 63 1 330 1 170 1 153 2 44 2 241 1 290 1 124 1 125 1 351 1 227 2 333 4 88 1 156 1 356 1 208 1 209 2 211 1 
160 1 180 1 133 1 135 1 117 1 98 1 276 1 214 1 218 1 303 2 81 1 37 1 326 1 11 1 195 1 170 1 153 1 44 2 223 1 241 1 290 1 125 1 333 3 227 1 88 1 202 1 313 1 71 1 209 1 
168 1 303 2 88 1 318 1 170 1 135 1 154 1 258 1 218 1 
168 1 303 2 88 1 318 1 170 1 135 1 154 1 258 1 218 1 
168 1 303 2 88 1 318 1 170 1 135 1 154 1 258 1 218 1 
168 1 303 2 88 1 318 1 170 1 135 1 154 1 258 1 218 1 
168 1 303 2 88 1 318 1 170 1 135 1 154 1 258 1 218 1 
297 1 112 1 101 1 328 1 331 1 149 1 225 1 
217 1 
14 1 101 1 328 1 331 1 149 1 225 1 
164 1 
272 1 
297 1 75 2 0 1 132 1 328 1 182 1 331 1 111 1 225 1 174 1 101 1 294 1 314 1 9 1 149 1 
297 1 75 2 0 1 132 1 328 1 182 1 331 1 111 1 225 1 174 1 101 1 294 1 314 1 9 1 149 1 
297 1 75 2 0 1 132 1 328 1 182 1 331 1 111 1 225 1 174 1 101 1 294 1 314 1 9 1 149 1 
164 1 
164 1 
272 1 
272 1 
35 1 147 1 
75 1 13 1 328 1 77 1 182 1 331 1 217 1 225 1 350 1 174 1 101 1 314 1 9 1 92 1 189 1 157 1 149 1 
133 1 116 1 135 1 117 1 235 1 214 2 25 2 27 1 218 1 303 2 256 1 38 2 148 1 343 1 326 2 11 2 346 1 63 2 330 1 170 1 42 1 153 1 44 1 64 1 124 1 333 2 88 1 156 1 71 1 356 1 208 2 
12 1 63 1 107 1 330 1 124 1 30 1 87 1 281 1 354 1 8 1 156 1 356 1 38 1 208 1 
327 2 63 1 197 1 274 1 330 1 124 1 300 1 349 1 175 1 281 1 354 1 325 1 296 1 167 1 73 1 38 1 208 1 316 1 
327 2 63 2 197 1 274 1 330 1 124 1 300 1 349 1 175 1 281 1 354 1 325 1 296 1 167 1 73 1 38 2 208 2 316 1 211 1 
327 2 63 1 197 1 274 1 54 1 330 1 300 1 124 1 349 1 175 1 354 1 296 1 167 1 73 1 38 1 208 1 316 1 
29 1 
104 1 96 1 0 1 46 1 3 1 78 1 219 1 176 1 145 1 10 1 
83 5 96 5 24 5 160 2 0 5 98 2 3 5 99 1 125 2 113 1 312 5 81 2 37 2 295 10 
213 1 0 1 174 1 314 1 145 1 252 1 
213 4 96 2 162 2 252 2 3 2 30 1 302 2 8 1 82 1 284 1 10 2 38 4 121 1 104 2 12 2 63 4 330 1 46 2 124 1 47 1 127 2 174 3 176 1 156 1 314 3 356 1 247 1 208 4 95 1 
219 1 96 1 0 1 205 1 145 1 3 1 78 1 
213 1 96 1 0 2 252 1 3 1 320 1 239 1 145 1 10 1 104 1 65 1 46 1 174 1 312 1 176 1 314 1 295 1 
12 1 104 1 63 1 176 1 330 1 275 1 307 1 46 1 208 1 38 1 10 1 124 1 
213 1 24 5 96 5 160 2 97 1 0 5 162 1 98 2 252 1 277 1 3 8 99 1 81 2 305 1 36 1 145 2 37 2 10 2 104 2 83 5 257 1 43 1 306 2 46 2 224 1 125 2 201 1 127 1 174 1 312 3 176 2 314 1 295 6 233 1 248 1 
96 2 160 1 180 1 98 2 2 1 276 1 214 1 3 2 99 1 79 1 57 1 339 1 6 1 187 1 282 1 146 1 10 1 326 1 11 1 104 1 306 2 46 1 223 1 171 1 174 1 176 1 314 1 72 1 
180 2 133 1 117 1 135 1 214 2 276 2 216 1 299 1 218 1 303 2 7 1 120 1 38 1 326 3 12 1 11 3 151 1 63 1 42 1 170 1 330 1 153 1 223 2 171 1 124 1 351 1 333 1 88 1 334 1 156 1 356 1 208 1 
96 1 24 2 0 3 162 1 3 2 4 1 145 1 10 1 104 1 83 2 306 1 46 1 127 1 312 2 176 1 295 4 
179 1 101 1 259 1 331 1 147 1 
101 1 109 1 331 1 
101 1 109 1 331 1 
101 1 109 1 331 1 
100 1 101 1 331 1 
100 1 101 1 331 1 
100 1 101 1 331 1 
101 1 331 1 
225 1 
160 2 170 1 135 1 98 2 153 5 2 1 44 5 258 1 241 5 290 2 57 2 218 1 6 2 187 1 333 10 303 2 88 1 93 3 
135 1 170 1 98 1 44 2 258 1 290 1 241 1 218 1 333 2 303 2 88 1 37 1 
160 1 135 1 170 1 98 1 153 2 44 2 258 1 241 1 290 1 218 1 125 1 333 4 303 2 81 1 88 1 37 1 
135 3 170 3 153 2 44 1 258 1 241 2 290 1 57 1 218 3 6 1 333 3 303 6 88 3 102 1 93 1 94 1 221 1 
160 6 97 4 135 5 98 6 2 2 57 3 4 1 218 5 31 1 186 1 6 3 303 10 81 4 102 2 37 4 62 1 287 1 221 1 257 1 170 5 153 21 44 19 258 1 290 7 241 11 125 4 18 1 333 40 89 1 88 5 90 1 93 4 94 1 233 4 115 1 
160 1 97 1 98 1 135 1 2 1 57 1 4 1 218 1 186 1 6 1 303 2 305 1 257 1 170 1 153 4 44 3 258 1 241 2 333 7 88 1 89 1 93 2 233 1 
160 1 97 2 135 2 98 2 2 1 57 1 4 1 218 2 31 1 186 1 6 1 303 4 305 1 37 1 62 1 257 1 170 2 153 5 44 5 258 1 290 1 241 3 125 1 333 10 89 1 88 2 93 2 233 1 
160 3 97 1 135 3 98 3 2 1 277 1 57 1 4 1 218 3 186 1 6 1 303 6 81 2 102 1 305 1 37 2 62 1 257 1 170 3 153 10 44 8 258 1 290 1 241 4 224 1 125 2 201 1 333 18 89 1 88 3 93 3 233 1 248 1 
160 2 97 1 135 3 98 3 2 1 277 1 57 1 4 1 218 3 186 1 6 1 303 6 81 1 102 1 305 1 37 2 62 1 257 1 170 3 153 7 44 9 258 1 290 2 241 4 224 1 125 2 201 1 333 16 89 1 88 3 93 2 233 1 248 1 
160 1 97 1 98 1 135 1 2 1 57 1 4 1 218 1 186 1 6 1 303 2 305 1 257 1 170 1 153 4 44 3 258 1 241 2 333 7 88 1 89 1 93 2 233 1 
160 2 97 1 135 1 98 2 277 1 218 1 303 2 81 2 305 1 37 2 257 1 170 1 153 6 44 6 258 1 290 1 241 1 224 1 125 2 201 1 333 12 88 1 233 1 248 1 
160 2 97 1 135 4 98 3 2 1 277 1 57 1 4 1 218 4 186 1 6 1 303 8 81 1 102 2 305 1 37 2 62 1 257 1 170 4 153 8 44 9 258 1 290 2 241 5 224 1 125 2 201 1 333 17 89 1 88 4 93 3 233 1 248 1 
160 1 97 1 135 3 98 2 277 1 218 3 303 6 81 1 102 1 305 1 37 2 257 1 170 3 153 4 44 7 258 1 241 2 290 2 224 1 125 2 201 1 333 11 88 3 94 1 233 1 248 1 
160 1 98 1 153 4 2 1 44 3 241 6 290 3 57 3 186 2 6 3 333 7 89 1 93 3 
160 2 97 1 135 4 98 3 2 1 277 1 57 1 4 1 218 4 186 1 6 1 303 8 81 1 102 2 305 1 37 2 257 1 170 4 153 8 44 9 258 1 290 1 241 4 224 1 125 2 201 1 333 17 89 1 88 4 93 3 94 1 233 1 248 1 
160 1 98 1 135 2 170 2 153 4 2 1 44 3 290 1 241 3 57 1 4 1 218 2 186 1 6 1 333 7 303 4 88 2 89 1 102 1 93 2 
186 1 160 1 6 1 333 5 89 1 98 1 205 1 153 3 2 1 44 2 241 2 93 2 57 1 4 1 
160 1 135 1 170 1 98 1 153 2 44 2 218 1 125 1 333 4 303 2 88 1 81 1 37 1 62 1 
160 2 97 2 257 1 98 2 153 6 44 6 290 2 241 2 31 1 125 2 333 12 81 2 90 1 37 2 233 2 
160 4 97 2 98 4 135 2 2 2 57 4 4 1 31 1 218 2 186 1 6 4 187 1 303 4 81 2 102 2 37 2 221 1 170 2 153 16 44 13 241 10 290 5 125 2 333 29 89 1 88 2 90 1 93 5 233 2 315 1 
333 1 97 1 153 1 
333 1 44 1 233 1 
160 1 170 1 135 1 98 1 153 3 44 3 290 1 241 1 218 1 125 1 113 1 333 6 303 2 88 1 81 1 37 1 62 1 
160 2 97 1 135 1 98 2 277 1 218 1 303 2 81 2 305 1 37 2 257 1 170 1 153 6 44 6 258 1 290 1 241 1 224 1 125 2 201 1 333 12 88 1 233 1 248 1 
160 1 98 1 153 3 2 1 44 3 241 2 290 1 57 1 6 1 333 6 93 1 
135 1 170 1 153 2 44 1 290 1 241 2 57 1 218 1 186 1 6 1 333 3 303 2 88 1 89 1 102 1 93 1 221 1 
11 1 264 1 214 1 216 1 231 1 326 1 66 1 
11 1 222 1 298 1 214 1 216 1 141 1 66 1 321 1 264 1 5 1 231 1 326 1 
12 1 63 4 330 1 124 1 30 1 185 1 228 1 8 1 156 1 356 1 38 4 208 4 211 1 
196 1 63 1 337 1 329 1 330 1 124 2 301 1 351 1 156 1 356 1 38 1 208 1 129 1 
327 1 12 1 63 1 197 1 274 1 175 1 330 1 208 1 38 1 124 1 
63 2 346 1 330 1 300 1 124 1 156 1 356 1 38 2 208 2 343 1 211 1 
12 1 63 4 330 2 251 1 56 1 30 1 124 2 302 1 228 1 8 1 156 2 356 3 38 5 208 5 343 1 211 1 
12 1 63 4 41 1 330 2 56 1 30 1 124 2 302 1 228 1 8 1 156 2 356 3 38 5 208 5 343 1 211 1 
12 1 63 1 8 1 330 1 156 1 205 1 356 1 208 1 38 1 124 1 30 1 
11 2 12 1 63 1 180 1 330 1 214 1 216 1 223 1 299 1 124 1 351 1 80 1 156 1 120 1 356 1 38 1 208 1 326 2 
180 2 214 2 216 1 299 1 79 1 279 1 302 1 80 1 120 1 38 1 326 2 11 2 63 1 330 1 223 1 124 1 263 1 243 1 351 2 156 2 356 3 208 1 177 1 
180 2 214 2 216 1 138 1 299 1 79 1 185 1 279 1 302 1 80 1 38 2 326 2 11 2 63 2 330 1 223 1 124 1 263 1 243 1 351 2 156 2 356 3 208 2 177 1 
180 1 0 1 276 1 214 1 79 1 339 1 302 1 282 1 145 1 146 1 38 1 326 1 11 1 63 1 223 1 171 1 68 1 174 1 314 1 356 1 208 1 273 1 
180 1 0 1 276 1 214 1 79 1 339 1 302 1 282 1 145 1 146 1 38 1 326 1 11 1 63 1 223 1 171 1 174 1 206 1 314 1 356 1 208 1 273 1 
63 1 85 1 330 1 208 1 38 1 124 1 
12 1 63 1 337 1 330 1 347 1 124 2 351 1 59 1 156 1 356 1 38 1 208 1 129 1 
160 1 180 1 133 2 98 1 135 2 117 2 2 1 214 1 216 1 299 1 57 1 4 1 218 2 186 1 6 1 253 1 80 1 303 4 7 1 120 1 256 1 38 1 326 2 150 1 11 2 151 1 195 1 63 1 330 1 170 2 153 3 44 2 223 1 241 2 124 1 351 1 227 1 333 5 89 1 88 2 156 1 71 1 356 1 93 2 208 1 209 1 211 1 
96 5 180 1 181 1 0 2 234 1 98 2 2 1 276 1 3 4 99 1 57 1 6 1 187 1 282 1 145 2 146 1 10 2 326 1 104 2 12 1 11 1 63 1 155 1 206 1 247 1 208 1 213 2 160 2 214 1 252 1 79 1 78 1 339 1 219 1 38 1 306 2 46 2 223 1 171 1 310 1 350 1 174 3 176 2 314 3 356 1 273 1 
63 1 85 1 330 1 275 1 208 1 38 1 124 1 
11 2 12 1 63 1 180 1 330 1 214 1 216 1 223 1 138 1 299 1 124 1 351 1 80 1 156 1 356 1 38 1 208 1 326 2 
63 1 337 1 330 1 347 1 124 2 351 1 302 1 59 1 156 1 356 1 38 1 208 1 129 1 
169 1 106 1 163 1 216 1 50 1 
350 1 19 1 174 1 106 1 314 1 136 1 200 1 
11 1 106 1 116 1 163 1 214 1 27 1 50 1 148 1 326 1 
169 1 181 1 106 1 163 1 200 1 263 1 79 1 279 1 19 1 50 1 210 1 21 1 
178 1 52 1 266 1 304 1 49 1 55 1 285 1 119 1 
178 4 52 2 317 1 1 2 55 2 119 1 266 3 32 1 204 1 304 1 267 1 285 4 23 1 122 1 
178 1 1 1 304 1 49 1 291 1 285 2 269 1 22 1 119 1 
178 3 52 1 55 1 119 1 266 1 204 2 49 1 304 1 128 1 285 3 122 1 23 2 
266 2 58 1 61 2 28 1 
178 1 304 1 49 1 285 1 262 1 119 1 
178 2 52 1 266 1 1 1 108 1 304 1 49 1 55 1 285 2 119 1 
289 1 
178 1 52 1 266 1 304 1 49 1 55 1 285 1 119 1 
52 1 266 1 205 1 55 1 
178 1 52 1 266 1 304 1 55 1 285 1 119 1 
178 1 323 1 278 1 
178 3 52 1 76 1 55 1 119 1 266 1 204 1 49 1 304 1 285 3 122 1 23 2 
178 2 52 1 105 1 266 1 1 1 304 1 55 1 285 2 119 1 
327 1 249 1 178 1 266 1 274 1 267 1 304 1 49 1 167 1 285 1 119 1 
178 1 266 1 304 1 49 1 55 1 285 1 119 1 
178 1 52 1 304 1 49 1 55 2 285 1 119 1 
178 2 55 1 110 1 119 2 266 1 144 1 49 1 304 2 268 1 285 2 
178 3 52 1 266 2 32 1 161 1 1 2 267 1 108 1 304 1 49 1 55 1 285 3 119 1 
178 2 327 2 52 1 266 1 274 1 175 1 1 1 304 1 49 1 20 1 55 1 167 1 73 1 285 2 119 1 
178 4 52 1 105 1 1 2 55 1 119 2 126 1 266 2 32 1 49 1 304 2 267 1 285 4 
178 3 52 1 266 1 1 1 108 1 304 1 49 1 55 1 285 3 23 1 119 1 
317 1 266 1 32 1 267 1 
266 1 55 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 144 199 202 285 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 144 199 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 144 199 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 144 141 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 144 199 202 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 144 199 202 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 286 335 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 286 335 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 286 335 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 286 335 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 286 335 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 87 17 222 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 3 184 1 31 6 75 2 5 2 252 1 80 1 236 1 81 2 62 1 281 9 96 1 124 2 14 5 312 1 170 1 16 1 336 1 340 1 262 2 265 2 344 9 21 1 152 4 27 1 269 2 369 1 352 1 
158 3 184 1 31 6 75 2 5 2 252 1 80 1 236 1 81 2 62 1 281 9 96 1 124 2 14 5 312 1 170 1 16 1 336 1 340 1 265 2 262 2 344 9 21 1 152 4 27 1 369 1 269 2 352 1 
158 4 184 1 31 7 75 2 5 2 252 1 80 1 236 1 81 2 62 1 281 10 96 1 124 2 14 6 312 1 170 1 16 1 336 1 340 1 265 2 262 2 344 10 21 1 152 5 27 1 369 1 269 2 352 1 
158 2 184 1 31 4 75 2 5 2 252 1 80 1 236 1 81 2 62 1 281 7 96 1 124 2 14 4 312 1 170 1 16 1 336 1 340 1 265 2 262 2 344 7 21 1 152 3 27 1 369 1 269 1 
158 1 14 3 312 1 184 1 16 1 31 3 75 1 262 1 265 1 344 4 21 1 152 2 269 2 352 1 81 1 281 4 96 1 124 1 
14 1 312 1 184 1 75 1 221 1 5 1 262 1 264 1 344 2 252 1 280 1 62 1 81 1 281 2 96 1 124 1 
158 1 14 2 312 1 184 1 170 1 31 1 5 1 262 2 344 3 152 1 81 2 281 3 96 1 
158 3 184 1 31 7 75 1 5 1 358 1 81 2 281 9 96 1 124 1 14 5 312 1 170 1 16 1 336 1 340 1 262 2 265 1 344 9 21 1 152 4 269 2 352 1 181 1 
158 3 184 1 31 7 75 1 5 1 358 1 81 2 281 9 96 1 124 1 14 5 312 1 170 1 16 1 336 1 340 1 262 2 265 1 344 9 21 1 152 4 269 2 352 1 181 1 
70 1 367 1 175 1 
297 1 198 2 175 1 
359 2 334 1 258 2 160 2 347 1 76 2 116 2 182 2 
271 1 88 1 60 1 160 2 272 1 76 2 273 1 162 1 90 1 114 1 116 2 301 2 119 1 359 3 9 1 165 2 122 1 326 1 278 1 279 2 310 2 190 1 43 1 238 1 217 1 313 2 334 1 258 3 259 1 64 1 338 1 23 1 347 1 350 1 155 1 56 1 182 2 
359 1 334 1 195 1 258 1 160 1 76 1 12 1 318 1 116 1 182 1 
140 1 204 1 195 1 258 1 82 1 129 1 4 1 175 1 116 1 290 1 163 1 359 1 367 1 268 1 
204 1 195 1 160 1 258 1 129 1 76 1 4 1 175 1 116 1 290 1 163 2 359 1 367 1 268 2 182 1 
150 1 163 1 177 1 268 1 98 1 
163 2 367 1 177 1 268 2 98 1 112 1 175 1 148 1 
163 1 268 1 98 1 
334 1 195 1 160 1 258 1 76 1 116 1 163 1 359 1 177 1 268 1 12 1 180 1 318 1 182 1 
175 1 
163 2 367 1 177 1 268 2 98 1 112 1 307 1 175 1 
44 1 333 1 98 2 146 2 112 1 99 2 113 1 315 2 136 1 175 1 163 5 291 1 367 1 210 1 177 2 268 5 55 1 156 1 331 1 
70 1 347 1 
192 1 195 1 59 1 258 2 160 1 76 1 116 2 359 2 223 1 347 1 182 1 
121 1 32 1 317 1 
217 1 88 1 258 1 272 1 273 1 301 1 359 1 119 1 165 1 9 1 345 1 122 1 347 1 310 1 190 1 56 1 
88 1 217 1 257 1 272 1 160 1 258 2 273 1 116 1 301 1 119 1 359 2 9 1 165 1 122 1 317 1 25 1 310 1 190 1 56 1 182 1 
192 1 365 1 257 1 160 4 258 5 82 1 76 1 116 5 359 5 25 2 347 1 72 1 182 4 282 1 
359 1 195 1 258 1 160 1 12 1 116 1 182 1 
359 3 25 1 258 3 160 3 76 1 347 1 116 3 182 3 
359 1 195 1 258 1 160 1 12 1 116 1 182 1 
192 1 195 1 160 1 258 1 76 1 116 1 359 1 223 1 182 1 
88 1 59 1 272 1 60 1 273 1 4 1 90 1 9 1 276 1 279 1 190 1 192 1 15 1 238 1 334 1 195 2 64 1 338 1 290 1 23 1 25 1 347 1 350 1 204 1 160 3 76 2 162 1 114 1 301 1 116 3 163 1 359 4 119 1 165 1 122 1 310 1 217 1 313 2 257 1 258 4 129 1 259 1 268 1 182 3 56 1 
195 1 59 1 365 1 160 1 258 2 82 1 116 2 359 2 25 1 347 1 182 1 
192 1 15 1 195 1 204 1 257 1 160 3 258 3 129 1 76 1 4 1 175 1 116 3 187 1 290 1 163 1 359 3 268 1 25 2 182 3 
192 1 32 1 160 2 258 2 76 1 116 2 359 2 25 1 317 1 182 2 
217 1 88 1 258 1 272 1 273 1 301 1 359 1 119 1 165 1 9 1 122 1 347 1 310 1 190 1 56 1 
88 1 258 1 272 1 301 1 359 1 119 1 165 1 9 1 122 1 79 1 347 1 253 1 310 1 190 1 56 1 
32 2 60 1 134 1 162 2 114 1 93 1 121 2 326 2 235 1 279 4 308 1 194 1 238 1 45 1 313 2 64 1 338 1 67 1 22 1 23 1 317 2 153 1 52 1 270 1 
195 1 145 1 160 1 258 1 4 1 116 1 359 1 182 1 
362 1 0 1 
362 1 0 1 
362 1 0 1 246 1 11 1 
362 1 0 1 246 1 11 1 
246 1 11 1 
362 1 0 1 244 1 
362 1 0 1 244 1 
362 1 0 1 244 1 
362 1 78 1 0 1 
362 1 0 1 161 1 
362 2 126 1 0 2 246 1 11 1 220 1 
362 1 78 1 0 1 
362 1 78 1 0 1 
215 1 227 1 362 1 191 1 0 1 159 1 314 1 161 1 319 1 258 2 299 1 160 2 341 1 116 2 163 1 359 2 101 1 268 1 233 1 347 1 293 1 351 1 370 1 182 2 
226 1 227 1 203 1 159 2 0 2 160 1 299 2 76 1 206 1 322 1 116 1 163 2 359 1 12 1 191 2 362 2 334 1 218 1 195 1 314 2 258 1 147 1 175 1 267 1 151 1 268 2 51 1 370 2 180 1 318 1 182 1 
75 1 124 1 265 1 
75 1 221 1 124 1 
355 1 277 1 221 1 247 1 265 2 124 3 
277 1 94 1 221 1 247 1 295 1 124 1 
277 1 221 1 247 2 265 1 124 2 
157 1 297 1 112 1 207 1 93 1 163 5 166 2 327 1 234 2 308 1 331 1 216 1 284 1 332 1 45 1 98 1 146 1 198 3 99 1 315 1 175 2 341 1 367 1 291 3 177 4 268 5 293 1 52 1 154 1 349 2 351 1 156 2 
274 1 93 1 327 1 234 2 12 1 331 1 284 1 332 1 334 1 195 1 98 4 146 1 99 1 198 3 343 1 150 3 291 3 351 2 156 2 157 1 297 1 160 1 76 1 112 1 208 1 116 1 163 6 359 1 166 2 37 3 308 1 45 1 258 1 315 1 175 3 367 1 177 5 268 6 52 1 318 1 180 1 182 1 
157 1 297 2 207 1 93 1 163 3 210 1 166 2 327 1 234 2 308 1 216 1 284 1 45 1 146 1 99 1 198 4 315 1 175 3 367 1 291 3 177 2 268 3 52 1 349 1 351 1 156 2 
157 1 297 3 207 1 230 1 93 2 163 4 166 4 210 1 327 2 234 4 308 2 216 1 284 1 45 2 287 1 146 1 198 7 99 1 315 1 175 4 367 1 291 5 177 3 268 4 52 2 349 2 351 2 86 1 156 4 
119 1 70 1 174 1 
119 1 172 1 
95 1 
119 1 9 1 56 1 
119 1 168 1 
119 1 9 1 
119 3 9 1 196 1 366 1 174 2 56 1 
30 1 1 1 134 2 205 1 162 3 261 1 115 1 93 1 137 1 326 4 292 1 279 7 308 1 270 3 241 1 371 2 255 1 
30 1 1 1 134 2 205 1 162 3 261 1 115 1 93 1 137 1 326 4 292 1 279 7 308 1 270 3 241 1 371 2 255 1 
30 1 1 1 134 2 205 1 162 3 261 1 115 1 93 1 137 1 326 4 292 1 279 7 308 1 270 3 241 1 255 1 123 1 371 2 
30 1 74 1 185 1 134 1 205 1 162 3 114 1 115 1 326 3 361 1 214 1 279 6 125 1 313 2 128 1 64 1 338 1 261 1 23 1 26 1 292 1 241 2 270 2 371 1 
30 1 134 3 1 1 205 1 135 1 162 4 114 2 115 1 93 1 137 1 326 5 305 1 279 9 308 1 255 1 313 4 64 2 338 2 261 1 23 2 26 1 241 1 270 4 371 2 
184 1 88 1 355 1 31 1 58 1 229 1 75 1 324 1 5 1 301 1 36 1 164 1 275 1 165 1 310 1 81 1 281 2 190 1 96 1 124 2 14 1 312 1 221 1 265 1 262 1 69 1 344 2 103 1 50 1 224 1 
355 1 88 1 31 2 58 1 75 1 324 1 5 1 301 1 36 1 117 1 275 1 165 1 310 1 81 1 281 3 190 1 96 1 124 2 14 1 312 1 221 1 66 1 265 1 262 1 69 1 344 3 103 1 50 1 224 1 225 1 
88 1 355 1 31 2 58 1 75 1 5 1 301 1 36 1 117 1 165 1 310 1 281 2 190 1 96 1 124 2 14 1 312 1 221 1 265 1 69 1 344 2 103 1 50 1 224 1 225 1 
42 1 88 1 18 1 58 2 186 1 89 1 66 1 5 2 262 1 301 1 119 1 69 2 344 1 9 1 7 1 165 1 213 1 122 1 103 2 81 1 310 1 190 1 281 1 
184 1 88 1 355 1 58 1 75 1 324 1 5 1 301 1 36 1 164 1 275 1 165 1 310 1 81 1 281 1 190 1 124 2 221 1 265 1 262 1 69 1 344 1 103 1 50 1 224 1 225 1 
243 1 
88 1 204 1 3 1 112 1 4 1 35 1 300 2 91 1 325 1 116 1 301 2 163 3 359 1 119 1 303 1 165 2 9 1 212 1 122 2 304 1 310 2 309 1 190 1 331 1 140 1 284 1 42 1 311 1 195 1 18 1 288 1 98 2 258 1 146 1 129 1 82 1 99 1 315 1 19 1 290 1 291 2 268 3 156 2 
204 1 112 1 4 1 35 1 300 2 116 1 163 3 359 1 212 1 304 1 307 1 140 1 195 1 288 1 98 2 258 1 82 1 129 1 339 1 19 1 290 1 268 3 
204 1 112 1 4 1 35 1 300 3 116 1 163 3 359 1 212 1 304 1 307 1 139 1 140 1 195 1 98 1 288 1 258 1 82 1 129 1 19 1 175 1 290 1 367 1 268 3 
204 1 112 1 4 1 35 1 300 3 116 1 163 3 359 1 212 1 304 1 307 1 139 1 140 1 195 1 288 1 98 2 258 1 82 1 129 1 337 1 339 1 19 1 175 1 290 1 367 1 268 3 
204 1 3 1 112 1 4 1 35 1 300 2 116 1 163 3 359 1 212 1 304 1 307 1 331 1 140 1 311 1 285 1 195 1 144 1 288 1 98 3 146 1 258 1 82 1 129 1 99 1 337 2 315 1 339 2 19 1 199 1 290 1 291 1 268 3 202 1 29 1 156 1 
204 1 3 1 4 1 35 1 300 2 116 1 163 2 359 1 212 1 304 1 331 1 140 1 311 1 195 1 288 1 146 1 258 1 82 1 129 1 99 1 315 1 19 1 290 1 291 1 268 2 156 1 
204 1 3 1 4 1 35 1 300 2 116 1 163 2 359 1 212 1 304 1 331 1 140 1 311 1 195 1 144 1 288 1 146 1 258 1 82 1 129 1 99 1 315 1 19 1 199 1 290 1 291 1 268 2 29 1 156 1 
204 1 3 1 4 1 35 1 300 2 116 1 163 2 359 1 212 1 304 1 331 1 140 1 311 1 195 1 144 1 288 1 146 1 258 1 82 1 129 1 99 1 315 1 19 1 199 1 290 1 291 1 268 2 29 1 156 1 
204 1 4 1 35 1 300 2 116 1 163 2 359 1 212 1 304 1 189 1 331 1 140 1 311 1 141 1 195 1 144 1 288 1 146 1 258 1 82 1 129 1 99 1 315 1 19 1 290 1 291 1 102 1 268 2 156 1 
204 1 3 1 4 1 35 1 300 3 116 1 163 2 359 1 212 1 304 1 331 1 139 1 140 1 311 1 195 1 144 1 288 1 98 1 146 1 258 1 82 1 129 1 99 1 337 1 315 1 339 1 19 1 199 1 290 1 291 1 268 2 202 1 29 1 156 1 
204 1 3 1 4 1 35 1 300 3 116 1 163 2 359 1 212 1 304 1 331 1 139 1 140 1 311 1 195 1 144 1 288 1 98 1 146 1 258 1 82 1 129 1 99 1 337 1 315 1 339 1 19 1 199 1 290 1 291 1 268 2 202 1 29 1 156 1 
204 1 4 1 35 1 300 2 116 1 163 2 359 1 212 1 304 1 331 1 140 1 311 1 195 1 288 1 146 1 258 1 82 1 129 1 99 1 315 1 19 1 290 1 291 1 102 1 268 2 156 1 
32 1 60 1 134 2 1 1 162 3 114 1 115 1 93 1 137 1 121 1 326 3 279 6 308 1 255 1 238 1 313 2 64 1 338 1 261 1 67 1 70 1 23 1 317 1 347 2 270 2 371 1 
271 1 32 2 59 1 60 1 134 1 162 5 114 2 93 1 121 8 326 7 327 2 361 2 279 12 308 2 125 2 238 2 313 4 45 1 195 1 219 1 259 1 64 2 338 2 65 1 240 1 23 2 317 8 368 1 347 1 52 2 28 1 53 1 270 1 
271 1 88 1 32 1 298 1 272 1 60 1 160 1 33 1 273 1 162 1 114 1 301 1 116 1 119 1 359 2 9 1 165 1 122 1 326 1 279 2 310 1 190 1 217 1 238 1 313 2 257 1 258 2 259 1 64 1 338 1 68 1 345 1 23 1 25 1 347 1 28 1 56 1 182 1 
88 1 59 1 320 1 60 2 272 1 1 1 134 4 273 1 93 4 137 1 9 1 327 2 326 10 279 21 190 1 97 1 238 2 195 1 64 2 338 2 20 1 23 2 25 1 347 1 28 1 350 1 30 1 32 6 160 1 162 11 114 2 115 1 301 1 116 1 359 2 119 1 165 1 121 6 122 1 39 1 310 1 308 4 255 1 217 1 313 4 45 2 257 1 258 2 259 1 260 1 261 1 176 2 178 2 317 6 52 2 270 5 182 1 56 1 
271 1 88 2 109 1 229 1 160 1 60 2 162 1 114 2 6 1 249 1 116 1 301 8 359 1 119 3 165 8 9 2 122 2 326 1 328 1 278 2 279 2 310 7 190 2 42 1 127 1 169 1 238 2 313 4 18 1 258 1 259 1 64 2 338 2 67 1 263 1 23 2 25 1 225 1 182 1 
32 1 160 1 60 1 134 1 76 1 162 2 114 1 116 1 93 1 359 1 121 1 327 1 326 1 279 3 308 1 192 1 238 1 313 2 45 1 258 1 64 1 338 1 201 1 23 1 317 1 52 1 28 1 270 1 182 1 
30 1 238 1 313 2 32 1 60 1 64 1 338 1 114 1 67 1 121 1 23 1 317 1 326 2 153 1 52 1 279 2 270 1 308 1 
238 1 313 2 45 1 32 1 60 1 134 1 64 1 338 1 162 2 114 1 67 1 93 1 22 1 121 1 23 1 317 1 279 2 270 1 
30 1 238 1 45 1 313 2 32 2 60 1 134 1 64 1 162 2 338 1 114 1 67 1 93 1 121 2 23 1 317 2 327 1 326 2 52 1 279 4 270 2 308 1 
30 1 169 1 238 1 313 2 32 1 60 1 64 1 338 1 114 1 121 1 23 1 317 1 326 2 153 1 52 1 279 2 270 1 308 1 
169 1 238 1 313 2 45 1 32 1 60 1 134 1 64 1 338 1 162 2 114 1 93 1 22 1 121 1 23 1 317 1 279 2 270 1 
30 1 169 1 238 1 45 1 313 2 32 2 60 1 134 1 64 1 162 2 338 1 114 1 93 1 121 2 23 1 317 2 327 1 326 2 52 1 279 4 270 2 308 1 
30 1 238 1 45 1 313 2 32 2 60 1 134 1 64 1 162 2 338 1 114 1 93 1 121 2 23 1 317 2 327 1 326 2 52 1 279 4 270 2 308 1 
271 1 88 1 272 1 60 1 273 1 162 1 114 1 301 1 119 1 359 1 9 1 165 1 122 1 326 1 279 2 310 1 190 1 217 1 238 1 313 2 258 1 259 1 64 1 338 1 23 1 347 1 350 1 56 1 
271 1 88 1 272 1 60 1 162 1 114 1 301 1 119 1 359 1 9 1 165 1 122 1 326 1 79 1 253 1 279 2 310 1 190 1 238 1 313 2 258 1 259 1 64 1 338 1 48 1 23 1 347 1 56 1 
30 1 238 1 45 1 313 2 32 2 60 1 134 1 64 1 162 2 338 1 114 1 93 1 121 2 23 1 317 2 327 1 326 2 52 1 28 1 279 4 270 2 308 1 
30 1 88 1 32 2 229 1 272 1 60 1 134 1 273 1 162 2 114 1 301 1 93 1 119 1 359 1 165 1 9 1 121 2 326 2 327 1 279 4 308 1 310 1 190 1 217 1 238 1 45 1 313 2 258 1 260 1 64 1 338 1 23 1 317 2 52 1 350 1 270 2 56 1 
30 1 32 1 160 1 60 1 76 1 162 1 114 1 116 1 93 1 359 1 121 1 327 1 326 2 279 3 308 1 192 1 238 1 45 1 313 2 258 1 64 1 338 1 23 1 317 1 52 1 28 1 270 1 133 1 182 1 
316 1 286 1 335 1 23 1 313 2 228 1 305 1 64 1 338 1 114 1 
316 1 286 1 335 1 23 1 313 2 228 1 305 1 64 1 338 1 114 1 
316 1 286 1 335 1 23 1 313 2 228 1 305 1 64 1 338 1 114 1 
316 1 286 1 335 1 23 1 313 2 228 1 305 1 64 1 338 1 114 1 
316 1 286 1 335 1 23 1 313 2 228 1 305 1 64 1 338 1 114 1 
226 1 362 1 191 1 218 1 0 1 159 1 299 1 147 1 151 1 71 1 370 1 
161 1 319 1 
266 1 191 1 362 1 159 1 0 1 132 1 299 1 370 1 242 1 
188 1 244 1 
126 1 78 1 41 1 
226 1 227 1 203 1 159 1 0 1 160 1 299 1 76 1 206 1 322 1 116 1 163 1 359 1 12 1 191 1 362 1 334 1 218 1 195 1 314 2 258 1 147 1 175 1 267 1 151 1 268 1 51 1 370 1 180 1 318 1 182 1 
226 1 227 1 203 1 159 1 0 1 160 1 299 1 76 1 206 1 322 1 116 1 163 1 359 1 12 1 191 1 362 1 334 1 218 1 195 1 314 2 258 1 147 1 175 1 267 1 151 1 268 1 51 1 370 1 180 1 318 1 182 1 
226 1 227 1 203 1 159 1 0 1 160 1 299 1 76 1 206 1 322 1 116 1 163 1 359 1 12 1 191 1 362 1 334 1 218 1 195 1 314 2 258 1 147 1 175 1 267 1 151 1 268 1 51 1 370 1 180 1 318 1 182 1 
126 1 188 1 244 1 
126 1 188 1 244 1 
78 1 41 1 
126 1 78 1 41 1 
215 1 233 1 
183 1 159 1 0 1 299 1 319 1 161 1 160 2 206 1 322 1 116 2 163 1 359 2 233 1 191 1 362 1 215 1 314 1 258 2 341 1 101 1 177 1 268 1 347 1 293 1 370 1 351 1 182 2 
57 1 271 1 88 1 60 1 61 1 162 1 114 1 6 1 301 2 116 2 119 1 359 2 9 1 165 2 250 1 326 1 278 2 279 2 310 2 190 1 127 1 238 1 364 1 313 2 258 2 259 1 64 1 338 1 23 1 28 1 296 1 
355 1 88 1 142 1 229 1 46 1 75 1 221 1 324 1 265 1 301 2 248 1 69 1 165 2 50 1 224 1 225 1 310 2 190 1 124 2 
355 1 88 1 46 1 75 1 221 1 324 1 265 1 301 1 302 1 69 1 165 1 50 1 224 1 225 1 310 1 190 1 124 2 
42 1 88 1 356 1 18 1 301 1 248 1 119 1 69 1 9 1 165 1 122 1 213 1 310 1 190 1 
355 1 88 1 142 1 46 1 75 1 221 1 324 1 265 1 301 1 248 1 69 1 165 1 50 1 224 1 225 1 310 1 190 1 124 2 
8 1 
70 1 291 1 367 1 44 1 136 1 175 1 156 1 
297 1 3 1 112 1 163 1 138 1 331 1 98 1 146 1 99 1 198 1 315 1 175 2 291 1 367 1 268 1 294 1 156 1 
88 4 229 1 136 1 323 2 231 1 93 2 9 3 327 2 234 6 190 3 331 4 284 2 196 1 98 5 146 4 99 4 198 12 342 1 200 2 291 9 156 8 297 6 245 1 112 3 301 3 163 5 119 10 118 2 303 1 165 3 166 6 211 2 122 1 38 1 40 1 168 2 254 2 310 3 308 2 44 1 45 2 172 3 173 2 129 2 83 2 315 4 174 2 175 8 176 2 367 2 268 5 49 2 52 2 56 3 
87 1 297 3 112 1 163 1 93 1 166 4 211 1 327 1 234 4 361 1 329 1 214 1 308 1 125 1 331 2 17 1 45 1 239 1 98 1 146 2 198 6 99 2 315 2 175 4 291 5 367 1 268 1 222 1 52 1 107 1 156 3 
320 1 160 1 1 1 76 1 115 1 116 1 163 1 93 1 359 1 211 2 12 1 308 2 331 1 334 1 195 1 258 1 146 1 99 1 315 1 261 1 200 1 291 2 268 1 29 1 180 1 318 1 156 2 182 1 
44 1 146 1 99 1 315 1 136 1 175 1 367 1 291 1 331 1 156 1 
297 5 45 2 198 10 175 5 200 1 176 1 93 2 166 5 291 5 211 2 327 2 234 5 52 2 308 2 156 5 
163 1 367 1 268 1 98 1 112 1 175 1 
88 3 111 1 112 2 325 1 301 4 163 3 119 2 303 2 210 1 120 1 9 2 165 4 122 2 38 2 309 1 310 4 190 2 283 1 331 1 284 2 42 1 18 1 98 4 146 2 99 2 315 2 342 1 149 1 291 2 268 3 179 1 354 1 56 1 156 2 
88 1 160 2 272 1 60 1 76 2 273 1 162 1 90 1 114 1 301 1 116 2 359 3 119 1 165 1 9 1 122 1 279 1 310 1 190 1 217 1 238 1 313 2 334 1 258 3 259 1 64 1 338 1 23 1 347 1 350 1 182 2 56 1 
284 1 297 2 146 1 198 4 99 1 315 1 175 4 303 1 166 2 291 1 367 2 234 2 371 1 156 2 331 1 
191 1 159 1 348 1 
191 1 159 1 348 1 
191 1 159 1 348 1 
191 1 209 1 159 1 
73 1 215 1 191 1 159 1 105 1 
191 1 209 1 159 1 
191 1 209 1 159 1 
191 1 159 1 
362 1 0 1 
30 1 313 4 1 1 134 2 64 2 162 4 338 2 114 2 261 1 115 1 93 1 137 1 23 2 326 4 26 1 279 8 308 1 270 3 371 1 255 1 
134 2 1 1 162 3 261 1 115 1 93 1 70 1 137 1 326 3 279 6 270 2 308 1 371 1 255 1 
30 1 45 1 313 2 134 1 64 1 162 2 338 1 114 1 84 1 93 1 23 1 327 1 326 2 52 1 279 4 270 2 308 1 
326 1 361 1 162 1 214 1 279 2 125 1 
30 2 320 1 1 2 134 5 162 13 114 1 115 2 93 5 137 1 327 2 326 13 361 2 279 26 308 5 255 1 125 2 45 2 313 2 64 1 338 1 261 2 65 1 23 1 368 1 26 1 52 2 53 1 270 7 371 1 
162 1 279 1 125 1 
326 1 361 1 279 1 
30 1 313 2 45 1 134 2 64 1 338 1 162 3 114 1 84 1 176 1 93 1 23 1 327 1 326 3 52 1 279 6 308 1 270 3 
30 1 87 1 134 1 162 6 114 1 93 2 326 6 327 2 305 1 361 1 329 1 214 1 279 12 308 2 125 1 17 1 313 2 45 2 64 1 338 1 23 1 222 1 52 2 270 2 107 1 
30 1 1 1 134 1 162 3 261 1 115 1 93 1 326 3 279 6 308 1 270 2 
30 1 185 1 313 2 134 1 64 1 162 2 338 1 261 1 114 1 115 1 137 1 23 1 326 1 26 1 279 3 270 2 255 1 
30 2 313 2 320 1 134 3 1 1 64 1 338 1 162 5 114 1 261 2 115 2 93 2 23 1 326 5 305 1 279 10 270 5 308 2 
30 1 313 2 64 1 338 1 114 1 23 1 326 2 305 1 52 1 279 2 308 1 270 1 
30 1 45 1 313 2 134 1 64 1 162 2 338 1 114 1 93 1 23 1 327 1 326 2 305 1 52 1 279 4 270 2 308 1 
30 1 185 1 313 6 171 1 134 1 64 3 162 2 338 3 114 3 261 1 115 1 23 3 326 1 26 1 305 1 279 3 270 2 
30 3 185 1 320 1 1 1 134 3 162 8 114 4 115 2 93 2 137 1 326 7 305 1 361 1 214 1 279 15 308 2 125 1 255 1 313 8 171 1 128 1 64 4 338 4 261 2 84 1 23 4 26 1 270 6 
30 4 87 1 320 1 1 2 134 5 162 10 114 2 115 2 93 4 137 1 326 14 327 2 305 1 361 1 329 1 214 1 279 24 308 5 255 1 125 1 17 1 313 4 45 1 64 2 338 2 261 2 23 2 222 1 26 1 52 2 270 9 107 1 371 1 
30 1 87 1 1 1 134 3 162 7 114 3 115 1 93 2 137 1 326 10 327 2 305 1 361 1 329 1 214 1 279 17 308 3 255 1 125 1 17 1 313 6 45 1 64 3 338 3 261 1 84 1 23 3 222 1 26 1 52 2 270 4 107 1 371 1 
30 1 87 1 1 1 134 3 162 10 114 3 115 1 93 3 137 1 326 9 327 2 305 1 361 1 329 1 214 1 279 19 308 3 255 1 125 1 17 1 313 6 45 2 64 3 338 3 261 1 84 1 23 3 222 1 26 1 52 2 270 4 107 1 371 1 
30 2 87 1 1 1 134 3 162 7 114 3 115 1 93 2 137 1 326 10 327 2 305 1 361 1 329 1 214 1 279 17 308 3 255 1 125 1 17 1 313 6 45 1 64 3 338 3 261 1 84 1 23 3 222 1 26 1 52 2 270 5 107 1 371 1 
30 4 87 1 320 1 1 2 134 5 162 10 114 2 115 2 93 4 137 1 326 14 327 2 305 1 361 1 329 1 214 1 279 24 308 5 255 1 125 1 17 1 313 4 45 1 64 2 338 2 261 2 23 2 222 1 26 1 52 2 270 9 107 1 371 1 
30 1 87 1 134 1 162 6 114 1 93 2 326 6 327 2 305 1 361 1 329 1 214 1 279 12 308 2 125 1 17 1 313 2 45 2 64 1 338 1 23 1 222 1 52 2 270 2 107 1 
30 2 87 1 1 1 134 3 162 8 114 4 115 1 93 2 137 1 326 10 327 2 305 1 361 1 329 1 214 1 279 18 308 3 255 1 125 1 17 1 313 8 45 1 64 4 338 4 261 1 84 1 23 4 222 1 26 2 52 2 270 5 107 1 371 1 
30 3 87 1 134 3 162 7 114 4 93 2 326 9 327 3 305 1 361 1 329 1 214 1 279 16 308 3 125 1 17 1 313 8 45 2 171 1 64 4 338 4 23 4 222 1 26 2 52 3 270 6 107 1 
30 3 134 3 1 1 162 4 261 3 115 3 93 1 137 1 326 3 279 7 270 6 308 1 255 2 
30 1 87 1 1 1 134 3 162 8 114 4 115 1 93 2 137 1 326 10 327 2 305 1 361 1 329 1 214 1 279 18 308 3 255 1 125 1 17 1 313 8 45 1 171 1 64 4 338 4 261 1 23 4 222 1 26 2 52 2 270 4 107 1 371 1 
359 1 365 1 258 1 82 1 347 1 237 1 116 1 
108 1 365 1 258 1 82 1 357 1 116 1 359 1 251 1 85 1 347 1 13 1 237 1 
42 1 119 1 70 1 88 1 9 1 165 1 18 1 122 1 310 1 190 1 301 1 
88 1 272 1 160 1 258 2 273 1 116 1 301 1 119 1 359 2 9 1 165 1 122 1 25 1 347 1 310 1 190 1 56 1 182 1 
88 1 59 1 160 1 272 1 273 1 4 1 301 1 116 2 359 2 119 3 118 1 165 1 9 2 38 1 168 1 310 1 190 1 195 2 258 2 290 1 25 1 347 1 182 2 56 2 
88 1 59 1 160 1 272 1 4 1 301 1 116 2 359 2 119 3 118 1 165 1 9 2 38 1 253 1 168 1 310 1 190 1 195 2 258 2 290 1 25 1 347 1 182 2 56 2 
160 1 76 1 116 1 301 1 163 2 359 1 119 2 165 1 38 1 12 1 310 1 334 1 195 1 172 1 98 1 258 1 129 1 174 1 175 1 367 1 268 2 104 1 180 1 318 1 182 1 
88 1 172 1 98 1 129 1 174 1 175 1 301 3 163 2 232 1 118 1 119 4 367 1 9 1 165 3 122 1 268 2 38 1 49 1 168 1 310 3 190 1 56 1 
88 1 165 1 310 1 190 1 301 1 263 1 
363 1 88 2 196 1 301 1 119 1 120 1 165 1 9 1 122 1 310 1 190 1 56 1 354 1 
88 1 32 1 229 1 272 1 60 2 160 1 1 1 134 2 273 1 162 3 114 2 115 1 116 1 301 1 93 1 119 1 359 2 137 1 9 1 165 1 121 1 326 3 279 6 308 1 310 1 190 1 255 1 238 2 364 1 217 1 313 4 258 2 64 2 260 1 338 2 261 1 20 1 23 2 317 1 25 1 347 2 28 1 350 1 270 2 371 1 56 1 182 1 
112 1 136 1 323 1 301 1 163 3 119 2 165 1 122 1 310 1 331 2 44 1 172 1 98 2 146 2 173 1 129 1 99 2 315 2 83 1 174 1 175 1 342 1 291 1 367 1 177 1 268 3 49 1 156 1 
88 2 196 1 229 1 174 1 263 1 301 2 231 1 119 2 165 2 9 1 310 2 190 1 56 1 
42 1 88 1 18 1 229 1 289 1 301 4 232 1 119 1 165 4 9 1 122 1 310 4 190 1 
88 2 111 1 321 1 301 1 119 1 120 1 165 1 9 1 179 1 310 1 190 1 56 1 354 1 
88 1 165 1 122 1 75 1 50 1 221 1 310 1 190 1 124 1 301 1 
57 1 119 1 88 1 9 1 165 2 229 1 225 1 310 2 190 1 6 1 301 2 
42 1 88 2 109 1 18 1 229 1 289 1 301 5 6 1 119 3 165 5 9 2 122 1 38 1 328 1 310 4 190 2 
42 1 88 2 109 1 18 1 229 1 197 1 289 1 301 5 6 1 119 3 165 5 9 2 122 1 38 1 310 4 190 2 
88 1 272 1 160 1 258 2 116 1 301 1 119 1 359 2 9 1 165 1 122 1 25 1 347 1 253 1 310 1 190 1 56 1 182 1 
363 1 88 2 196 1 301 1 119 1 120 1 165 1 9 1 38 1 310 1 190 1 56 1 354 1 
256 1 167 1 347 1 34 1 330 1 
204 1 110 1 160 1 76 1 4 1 34 1 116 1 163 2 359 1 167 1 12 1 330 1 193 1 256 1 15 1 334 1 195 2 258 1 129 1 175 1 290 1 367 1 177 1 268 2 346 1 180 1 318 1 182 1 
359 1 256 1 250 1 258 1 61 1 34 1 330 1 116 1 296 1 
193 1 256 1 110 1 
14 1 312 1 70 1 96 1 
14 1 344 1 312 1 81 1 281 1 96 1 262 1 
58 1 5 1 281 1 
14 1 184 1 312 1 262 1 344 3 24 1 360 1 131 1 81 1 62 2 281 3 96 1 
14 1 344 2 312 1 31 1 269 1 81 1 281 2 96 1 262 1 
14 1 184 1 75 1 262 1 265 1 344 1 21 1 152 1 81 1 281 1 124 1 
14 1 344 1 184 1 81 1 281 1 96 1 262 1 
344 1 312 1 184 1 81 1 281 1 96 2 262 1 
14 1 184 1 63 1 100 1 262 2 344 2 10 1 81 2 281 2 96 1 
158 1 14 2 312 1 184 1 31 2 336 1 340 1 262 1 344 3 152 1 81 1 281 3 96 1 
14 1 312 1 184 1 355 1 31 1 75 1 221 1 262 1 265 1 344 2 106 1 81 1 281 2 96 1 124 2 
158 1 14 2 312 1 184 1 31 2 262 2 344 4 152 1 269 1 81 2 352 1 281 4 96 1 
14 1 344 1 312 1 184 1 81 1 281 1 96 1 262 1 
158 1 14 3 312 2 31 2 262 1 344 4 152 1 360 1 131 1 54 1 62 1 81 1 281 4 96 2 
14 1 184 1 312 1 31 1 2 1 358 1 262 1 344 2 77 1 81 1 281 2 96 1 
14 1 184 1 312 1 47 1 262 1 344 3 360 1 131 2 81 1 62 2 281 3 96 1 
14 2 143 1 306 1 130 2 
344 1 184 1 81 1 353 1 281 1 262 1 
14 1 344 2 312 1 184 1 31 1 336 1 81 1 281 2 96 1 262 1 
92 1 
14 1 344 1 312 1 184 1 81 1 281 1 96 1 262 1 
14 1 344 3 312 1 184 1 31 1 336 1 62 1 81 1 281 3 96 1 262 1 
158 1 14 1 152 1 54 1 
14 1 96 1 

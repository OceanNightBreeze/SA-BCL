#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 199 30 (60,331) (60,331) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 199 30 (60,331) (60,331) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 199 30 (60,331) (60,331) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 199 30 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (103,325) 300 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (103,325) 300 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 367 371 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 102 (94,269,368) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (239,243) 136 43 195 100 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException (239,243) 136 43 25 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (239,243) 136 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (239,243) (239,243) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (239,243) 136 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException (239,243) 136 43 25 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException (239,243) 136 43 195 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException (239,243) 136 43 361 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (239,243) (239,243) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isZero()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
334 1 359 1 30 1 103 1 199 2 312 1 202 2 203 2 8 7 220 3 298 1 137 4 60 1 62 1 226 2 348 2 183 1 325 1 303 7 159 2 160 1 331 1 193 1 306 2 
334 1 137 4 359 1 60 1 62 1 226 2 30 1 103 1 348 2 183 1 199 2 325 1 312 1 303 7 202 2 159 2 203 2 160 1 220 3 8 7 331 1 193 1 298 1 306 2 
334 1 137 4 359 1 60 1 62 1 226 2 30 1 103 1 348 2 183 1 199 2 325 1 312 1 303 7 202 2 159 2 203 2 160 1 220 3 8 7 331 1 193 1 298 1 306 2 
334 1 359 1 289 1 30 1 103 1 148 1 199 2 312 1 202 2 203 2 242 1 8 7 220 3 298 1 137 4 60 1 62 1 226 2 348 2 183 1 325 1 303 7 159 2 160 1 331 1 193 1 306 2 
303 2 137 1 202 1 203 1 226 1 220 1 30 1 8 2 193 1 306 1 298 1 183 1 199 1 
289 1 226 1 348 1 217 1 148 1 199 1 312 1 303 2 202 1 203 1 242 1 160 1 190 1 53 1 8 2 193 1 
303 3 137 1 202 2 159 1 203 2 242 1 289 1 220 1 8 3 348 1 103 1 193 1 148 1 
303 1 41 1 202 1 203 1 300 1 8 1 103 1 193 1 
303 1 41 1 202 1 203 1 300 1 8 1 103 1 193 1 
332 1 71 1 90 1 
273 1 278 2 71 1 
86 1 120 2 364 2 116 2 263 2 231 1 256 2 307 2 
356 1 288 1 28 1 238 1 104 1 364 2 267 1 106 1 34 1 241 2 130 1 81 1 37 2 83 1 275 1 206 1 224 1 16 1 58 2 86 1 116 2 209 1 255 1 280 1 231 1 349 1 256 2 230 1 186 2 375 1 120 3 330 1 212 2 142 1 263 2 145 1 307 3 
86 1 120 1 323 1 364 1 116 1 263 1 256 1 307 1 
332 1 155 1 114 1 168 1 253 1 364 1 32 1 120 1 9 1 71 1 48 1 12 1 297 1 307 1 
332 1 114 1 168 2 253 1 116 1 364 1 256 1 32 1 120 1 9 1 71 1 263 1 48 1 12 2 307 1 
318 1 146 1 168 1 167 1 12 1 
332 1 318 1 257 1 168 2 167 1 133 1 71 1 12 2 
318 1 168 1 12 1 
86 1 323 1 167 1 168 1 116 1 364 1 256 1 120 1 54 1 12 1 263 1 307 1 
71 1 
332 1 318 1 168 2 167 1 133 1 339 1 71 1 12 2 
281 1 123 1 367 1 282 1 168 2 167 1 213 1 12 2 371 1 
90 1 231 1 
364 2 116 1 256 1 231 2 351 1 120 2 98 1 263 1 307 2 
319 1 377 1 99 1 
356 1 58 1 16 1 288 1 28 1 238 1 104 1 231 1 185 1 106 1 34 1 120 1 142 1 212 1 37 1 307 1 
356 1 16 1 58 1 288 1 177 1 28 1 238 1 104 1 364 1 256 1 106 1 34 1 120 2 142 1 212 1 37 1 108 1 99 1 263 1 307 2 
120 3 116 1 108 1 364 3 263 3 231 1 256 3 307 3 
304 1 120 1 364 1 263 1 32 1 256 1 307 1 
351 1 120 1 98 1 364 1 116 1 263 1 32 1 256 1 307 1 
356 1 288 1 28 1 168 1 238 1 104 1 364 3 267 1 32 1 106 1 34 1 241 1 37 1 244 1 9 1 108 1 12 1 83 1 275 1 206 1 224 1 16 1 58 1 86 1 177 1 114 1 253 1 116 2 209 1 255 1 231 1 349 1 230 1 256 3 186 2 120 4 330 1 98 1 142 1 212 1 236 1 48 1 263 3 307 4 
120 2 364 2 108 1 263 1 297 1 231 1 229 1 256 1 307 2 
177 1 114 1 168 1 253 1 116 1 364 3 32 1 256 3 120 3 260 1 98 1 9 1 244 1 108 2 71 1 12 1 263 3 48 1 307 3 
319 1 116 1 364 2 256 2 120 2 98 1 108 1 263 2 99 1 307 2 
356 1 58 1 16 1 288 1 28 1 238 1 104 1 231 1 106 1 34 1 120 1 142 1 212 1 37 1 307 1 
248 1 58 1 16 1 28 1 238 1 104 1 231 1 76 1 106 1 34 1 120 1 142 1 212 1 37 1 307 1 
105 1 200 1 241 4 272 1 39 1 83 2 275 1 206 1 224 1 319 2 42 1 346 1 279 1 209 1 255 1 280 2 157 1 349 1 186 2 118 1 66 1 97 1 377 2 99 2 
120 1 114 1 364 1 180 1 263 1 32 1 256 1 307 1 
177 1 364 4 116 1 32 1 256 4 231 1 4 1 120 4 98 1 143 1 10 1 108 2 263 4 307 4 
304 1 120 2 180 1 364 2 263 2 32 1 256 2 307 2 
368 1 19 1 
368 1 19 1 
269 1 102 1 
269 1 102 1 
269 1 102 1 
368 1 19 1 208 1 
368 1 19 1 208 1 
94 1 368 1 19 1 
269 1 102 1 368 1 19 1 
368 1 19 1 208 1 
171 1 368 1 19 1 
171 1 368 1 19 1 
171 1 368 1 19 1 
357 1 166 2 345 2 176 2 372 1 112 1 19 2 168 2 338 1 311 1 211 1 368 2 218 2 46 1 353 1 152 2 71 1 12 2 222 3 
166 1 73 1 335 1 168 1 364 2 368 1 150 1 152 1 12 1 14 1 222 1 345 1 176 1 19 1 324 1 91 1 231 1 256 2 94 1 120 2 46 1 354 1 263 2 307 2 
226 1 306 1 199 1 
53 1 226 1 199 1 
53 1 226 3 347 1 306 2 264 1 22 1 
194 1 53 1 226 2 306 1 264 1 22 1 
53 1 226 2 306 1 264 2 22 1 
332 1 123 1 73 1 168 5 167 4 362 1 2 2 105 1 75 1 365 1 268 3 131 1 219 2 150 1 133 1 12 5 173 2 273 1 318 1 346 1 321 1 111 1 88 2 278 3 181 1 91 1 157 1 281 1 118 1 282 1 261 1 71 2 
332 1 146 5 123 2 168 9 167 7 362 3 341 1 105 3 365 1 268 8 270 1 219 6 36 1 150 4 133 1 38 5 13 1 12 9 205 1 173 6 273 3 318 6 346 3 321 1 111 2 88 6 278 9 157 3 281 2 118 3 93 1 282 2 261 2 213 1 71 5 
332 1 123 1 167 2 168 3 362 1 2 1 75 1 105 1 268 3 131 1 219 2 150 1 12 3 173 2 273 2 346 1 111 1 88 2 278 4 157 1 281 1 118 1 282 1 261 1 213 1 71 3 
332 1 123 1 168 4 167 3 362 2 341 1 2 2 75 1 105 2 268 5 131 1 219 4 150 2 13 1 12 4 173 4 273 3 346 2 111 1 88 4 278 7 157 2 281 1 118 2 93 1 282 1 261 1 213 1 71 4 
104 1 198 1 90 1 
104 1 154 1 
85 1 
16 1 104 1 
34 1 16 1 67 1 104 3 198 2 122 1 
34 1 16 1 104 1 
89 1 104 1 
42 2 346 1 251 1 105 1 280 4 210 1 350 2 149 1 293 1 241 7 172 1 119 1 376 1 272 3 192 1 246 1 83 3 
42 2 346 1 251 1 105 1 280 4 210 1 350 2 149 1 293 1 241 7 172 1 119 1 376 1 272 3 192 1 246 1 83 3 
57 1 42 2 346 1 251 1 105 1 280 4 210 1 350 2 149 1 293 1 241 7 119 1 172 1 376 1 272 3 192 1 246 1 83 3 
309 1 362 3 105 4 201 1 149 1 241 31 293 2 172 2 272 10 246 2 11 1 83 15 275 1 206 1 224 1 42 5 346 4 251 5 374 1 179 1 209 1 210 1 280 16 157 3 350 3 186 2 328 3 158 4 118 3 258 1 119 1 376 2 284 1 192 1 
105 1 149 1 241 9 293 1 172 1 272 4 246 1 83 4 275 2 206 2 224 2 42 3 346 1 251 1 299 1 228 1 209 2 280 5 350 2 186 4 258 1 119 1 376 1 192 1 
125 1 289 1 29 1 28 1 148 1 199 1 106 1 202 1 203 1 242 1 53 1 37 1 8 2 295 1 137 1 58 1 59 1 138 1 226 2 347 1 348 1 303 2 329 1 212 1 163 1 234 1 193 1 378 1 285 1 306 1 
125 1 289 1 29 1 28 1 148 1 199 1 106 1 6 1 202 1 203 1 242 1 53 1 107 1 37 1 8 3 245 1 58 1 137 2 59 1 226 2 347 1 348 1 303 3 329 1 212 1 163 1 234 1 378 1 285 1 306 1 
125 1 289 1 28 1 148 1 199 1 106 1 242 1 53 1 107 1 37 1 8 2 245 1 58 1 137 2 226 2 347 1 348 1 303 2 329 1 212 1 163 1 234 1 378 1 285 1 306 1 
15 1 16 1 58 1 125 2 28 1 104 1 139 1 348 2 31 1 106 1 303 1 6 1 202 1 203 1 162 1 142 1 212 1 163 2 8 1 37 1 296 1 285 2 221 1 
59 1 58 1 138 1 125 1 226 2 28 1 29 1 347 1 348 1 199 1 106 1 303 1 329 1 202 1 203 1 53 1 107 1 212 1 234 1 8 1 37 1 163 1 378 1 193 1 285 1 306 1 
95 1 
332 1 147 1 237 1 290 2 104 1 106 1 52 1 9 1 294 2 12 5 297 1 15 1 16 1 58 2 155 1 114 1 252 2 253 1 120 1 261 1 212 2 164 4 70 1 71 2 307 1 123 1 358 1 168 5 28 1 364 1 216 1 169 1 365 1 32 1 268 2 78 2 313 2 133 3 37 2 134 2 315 1 221 1 273 2 318 6 84 1 373 1 322 1 88 2 278 2 281 1 141 1 282 1 45 2 142 2 48 1 
168 3 364 1 339 1 216 1 32 1 133 1 9 1 12 3 297 1 84 1 318 2 155 1 322 1 373 1 114 1 252 1 253 1 141 1 120 1 164 2 48 1 307 1 
332 1 168 3 364 1 339 1 216 1 32 1 78 1 133 1 9 1 12 3 297 1 318 1 84 1 155 1 322 1 373 1 114 1 253 1 141 1 120 1 164 3 48 1 71 1 307 1 
332 1 168 3 290 1 339 1 364 1 216 1 32 1 78 1 133 1 9 1 12 3 297 1 84 1 318 2 155 1 322 1 373 1 114 1 252 1 253 1 141 1 120 1 164 3 48 1 71 1 307 1 
332 5 290 4 339 1 240 1 52 1 9 1 294 2 12 5 297 1 249 1 155 1 114 1 252 4 253 1 64 1 120 1 164 6 71 5 307 1 123 1 358 1 168 5 364 1 216 1 32 1 365 1 268 1 78 4 79 1 313 2 133 3 134 2 273 2 318 7 84 1 373 1 322 1 88 1 281 1 187 1 141 1 282 1 45 2 48 1 
332 1 237 1 290 2 52 1 9 1 294 2 12 4 297 1 155 1 114 1 252 2 253 1 120 1 164 4 71 2 307 1 123 1 358 1 168 4 364 1 216 1 32 1 365 1 268 1 313 2 78 2 133 2 134 2 273 2 84 1 318 4 373 1 322 1 88 1 278 2 281 1 141 1 282 1 45 2 48 1 
332 1 123 1 358 1 290 2 168 4 364 1 216 1 32 1 365 1 268 1 78 2 313 2 52 1 79 1 133 2 134 2 9 1 294 2 12 4 297 1 273 2 318 4 249 1 84 1 155 1 322 1 373 1 114 1 252 2 88 1 253 1 281 1 187 1 141 1 282 1 120 1 45 2 164 4 71 1 48 1 307 1 
332 1 123 1 358 1 290 2 168 4 364 1 216 1 32 1 365 1 268 1 78 2 313 2 52 1 79 1 133 2 134 2 9 1 294 2 12 4 297 1 273 2 318 4 249 1 84 1 155 1 322 1 373 1 114 1 252 2 88 1 253 1 281 1 187 1 141 1 282 1 120 1 45 2 164 4 71 1 48 1 307 1 
332 1 123 1 358 1 290 2 168 4 364 1 127 1 216 1 32 1 365 1 268 1 78 2 133 2 134 2 9 1 12 4 297 1 82 2 318 4 249 1 84 1 155 1 322 1 373 1 114 1 252 2 88 1 253 1 278 2 182 1 281 1 141 1 282 1 120 1 45 2 379 2 164 4 262 1 71 1 48 1 307 1 
332 1 123 1 358 1 168 4 290 3 364 1 216 1 365 1 32 1 268 1 313 2 52 1 78 3 79 1 133 2 134 2 9 1 294 2 12 4 297 1 273 2 249 1 84 1 318 5 155 1 322 1 373 1 114 1 252 3 88 1 253 1 64 1 281 1 187 1 141 1 282 1 120 1 45 2 164 5 71 1 48 1 307 1 
332 1 123 1 358 1 168 4 290 3 364 1 216 1 365 1 32 1 268 1 313 2 52 1 78 3 79 1 133 2 134 2 9 1 294 2 12 4 297 1 273 2 249 1 84 1 318 5 155 1 322 1 373 1 114 1 252 3 88 1 253 1 64 1 281 1 187 1 141 1 282 1 120 1 45 2 164 5 71 1 48 1 307 1 
332 1 237 1 290 2 9 1 12 4 297 1 155 1 114 1 252 2 253 1 120 1 164 4 71 1 307 1 123 1 358 1 168 4 364 1 216 1 32 1 365 1 268 1 78 2 133 2 134 2 82 2 84 1 318 4 373 1 322 1 88 1 278 2 182 1 281 1 141 1 282 1 45 2 379 2 48 1 
105 1 200 1 149 1 241 6 272 2 246 1 83 3 275 1 319 1 206 1 224 1 42 2 346 1 209 1 255 1 90 1 349 1 280 3 231 2 350 1 186 2 119 1 376 1 377 1 192 1 99 1 
308 1 26 1 362 2 267 1 105 2 201 1 128 1 241 14 272 2 81 1 11 1 83 6 275 2 42 1 206 2 224 2 319 4 346 1 250 1 251 1 209 2 255 2 231 1 349 1 280 8 157 1 186 4 158 3 328 3 118 2 23 1 377 11 99 11 
356 1 215 1 0 1 124 1 288 1 28 1 238 1 104 1 364 1 267 1 106 1 34 1 241 2 37 1 81 1 108 1 83 1 275 1 16 1 58 1 319 1 224 1 206 1 177 1 209 1 255 1 231 1 185 1 349 1 256 1 280 1 186 2 23 1 120 2 212 1 142 1 263 1 307 2 
101 1 286 2 288 2 238 2 104 2 105 3 106 2 149 1 241 20 107 1 246 1 108 1 58 3 206 3 16 2 346 3 251 4 209 3 255 3 256 1 349 3 157 2 350 1 118 2 68 1 119 1 23 1 120 3 212 3 24 2 263 1 307 3 356 2 28 2 363 2 362 2 364 1 267 1 34 2 272 8 81 1 37 3 83 10 275 3 175 2 42 4 224 3 319 7 225 1 177 1 231 2 230 2 280 10 186 6 376 1 142 1 377 7 192 1 99 7 
195 1 28 2 364 1 104 3 267 1 3 1 200 1 106 2 34 1 241 2 130 1 243 1 37 4 81 1 108 1 55 1 295 1 221 1 83 1 136 1 275 2 15 1 58 4 206 2 224 2 16 3 43 1 209 2 255 2 256 1 349 2 280 1 186 4 120 1 212 4 142 2 191 1 263 1 100 1 307 1 
362 1 310 1 364 1 105 1 241 3 272 1 83 2 275 1 42 1 319 1 206 1 224 1 346 1 116 1 209 1 255 1 349 1 256 1 280 1 157 1 186 2 118 1 23 1 120 1 98 1 377 1 99 1 263 1 307 1 
275 1 319 1 224 1 206 1 251 1 209 1 255 1 349 1 105 1 280 2 200 1 186 2 118 1 66 1 241 2 272 1 377 1 99 1 
275 1 42 1 319 1 224 1 206 1 346 1 209 1 255 1 349 1 157 1 200 1 186 2 241 2 272 1 377 1 99 1 39 1 83 2 
362 1 105 1 200 1 241 4 272 2 83 2 275 1 206 1 224 1 319 2 42 1 346 1 251 1 209 1 255 1 280 2 349 1 157 1 186 2 118 1 377 2 99 2 
275 1 319 1 224 1 206 1 251 1 209 1 255 1 349 1 105 1 280 2 186 2 118 1 66 1 241 2 272 1 377 1 191 1 99 1 
275 1 42 1 319 1 224 1 206 1 346 1 209 1 255 1 349 1 157 1 186 2 241 2 272 1 377 1 191 1 99 1 39 1 83 2 
362 1 105 1 241 4 272 2 83 2 275 1 206 1 224 1 319 2 42 1 346 1 251 1 209 1 255 1 280 2 349 1 157 1 186 2 118 1 191 1 377 2 99 2 
362 1 105 1 241 4 272 2 83 2 275 1 206 1 224 1 319 2 42 1 346 1 251 1 209 1 255 1 280 2 349 1 157 1 186 2 118 1 377 2 99 2 
356 1 288 1 28 1 238 1 104 1 267 1 106 1 34 1 241 2 81 1 37 1 83 1 275 1 16 1 58 1 224 1 206 1 209 1 255 1 280 1 231 1 230 1 349 1 186 2 120 1 212 1 142 1 307 1 
28 1 238 1 104 1 267 1 106 1 76 1 34 1 241 2 81 1 37 1 83 1 248 1 275 1 16 1 58 1 224 1 206 1 209 1 255 1 280 1 231 1 349 1 186 2 188 1 120 1 212 1 142 1 307 1 
362 1 105 1 241 4 272 2 83 2 275 1 206 1 224 1 319 2 42 1 346 1 251 1 209 1 255 1 280 2 349 1 157 1 186 2 118 1 23 1 377 2 99 2 
356 1 286 1 288 1 28 1 238 1 362 1 104 1 105 1 106 1 34 1 241 4 272 2 37 1 295 1 83 2 275 1 42 1 319 2 58 1 16 1 224 1 206 1 346 1 251 1 209 1 255 1 157 1 280 2 230 1 349 1 186 2 118 1 120 1 212 1 377 2 99 2 307 1 
362 1 364 1 105 1 241 3 132 1 272 1 83 1 275 1 206 1 224 1 319 1 346 1 251 1 116 1 209 1 255 1 157 1 349 1 256 1 280 2 186 2 118 1 23 1 120 1 98 1 377 1 263 1 99 1 307 1 
291 1 362 2 197 1 105 2 201 1 241 13 77 1 272 3 11 1 135 1 343 1 83 7 275 2 42 2 206 2 224 2 346 2 251 1 228 1 209 2 21 1 280 6 157 2 186 4 158 2 328 1 118 2 161 1 235 1 
333 1 291 2 362 3 197 3 105 3 51 1 241 24 77 2 272 2 11 2 247 1 83 11 343 1 275 3 42 1 206 3 224 3 346 2 251 1 17 1 113 1 178 1 228 1 209 3 21 1 280 13 157 2 186 6 158 2 328 2 118 3 258 2 161 1 189 1 
291 1 362 2 197 1 105 2 201 1 241 13 77 1 272 2 11 1 343 1 83 7 275 2 42 1 206 2 224 2 346 2 251 1 228 1 209 2 21 1 280 6 157 2 186 4 158 2 328 1 118 2 161 1 189 1 235 1 
291 1 362 2 197 1 105 2 201 1 241 13 77 1 272 2 11 1 343 1 83 7 275 2 42 1 206 2 224 2 346 2 251 1 228 1 209 2 21 1 280 6 157 2 186 4 158 2 328 1 118 2 161 1 189 1 235 1 
333 1 291 1 362 7 197 3 105 8 51 1 201 2 149 1 128 2 241 50 77 1 272 13 246 1 11 2 247 1 343 1 83 24 275 2 42 6 206 2 224 2 346 8 251 7 17 1 113 1 178 1 228 1 209 2 21 1 280 26 157 7 350 1 186 4 158 4 328 4 118 7 258 1 119 1 161 1 189 1 376 1 192 1 
345 1 166 1 176 1 368 1 96 1 277 1 19 1 126 1 152 1 174 1 
94 1 335 1 
40 1 223 1 345 1 166 1 176 1 368 1 283 1 19 1 152 1 
357 1 166 1 345 1 176 1 372 1 112 1 168 1 19 1 338 1 311 1 368 1 218 1 46 1 353 1 152 1 71 1 12 1 222 2 
357 1 166 1 345 1 176 1 372 1 112 1 168 1 19 1 338 1 311 1 368 1 218 1 46 1 353 1 152 1 71 1 12 1 222 2 
357 1 166 1 345 1 176 1 372 1 112 1 168 1 19 1 338 1 311 1 368 1 218 1 46 1 353 1 152 1 71 1 12 1 222 2 
33 1 208 1 153 1 
33 1 208 1 153 1 
171 1 74 1 
33 1 171 1 74 1 
324 1 354 1 
166 1 73 1 335 1 168 1 167 1 364 2 218 1 368 1 150 1 152 1 109 1 12 1 14 1 222 1 345 1 176 1 112 1 19 1 324 1 91 1 231 1 256 2 94 1 120 2 354 1 263 2 307 2 
208 1 153 1 
33 1 171 1 74 1 
287 1 28 1 104 2 364 2 267 1 106 1 3 1 34 1 241 2 130 2 243 1 37 2 81 1 55 1 83 1 136 1 275 1 16 2 58 2 224 1 206 1 20 1 301 1 43 1 209 1 255 1 349 1 280 1 117 1 186 2 23 1 120 2 212 2 25 1 307 2 
58 2 226 2 28 1 29 1 347 1 115 1 199 1 232 1 106 1 329 1 369 1 53 1 107 1 212 2 37 2 163 1 234 1 295 1 306 1 
58 1 226 2 29 1 28 1 347 1 115 1 199 1 106 1 329 1 259 1 53 1 107 1 212 1 37 1 163 1 234 1 306 1 
15 1 16 1 58 1 320 1 28 1 104 1 139 1 106 1 369 1 142 1 212 1 37 1 163 1 221 1 
58 1 226 2 29 1 28 1 347 1 115 1 199 1 232 1 106 1 329 1 369 1 53 1 107 1 212 1 37 1 163 1 234 1 306 1 
265 1 
332 1 268 1 80 1 88 1 50 1 71 1 90 1 
332 1 123 1 168 1 365 1 268 1 313 1 52 1 133 1 294 1 12 1 273 1 318 1 88 1 278 1 281 1 282 1 71 2 
332 2 50 1 104 10 198 2 105 2 106 4 5 1 9 2 151 2 295 1 12 5 56 1 154 3 16 3 58 3 346 2 18 2 157 2 118 2 67 1 352 1 261 2 305 1 212 3 24 2 121 2 70 1 71 8 123 4 28 3 168 5 362 2 365 4 268 9 34 3 129 2 219 6 80 1 314 2 37 3 133 3 370 2 173 6 273 6 318 5 276 1 88 8 89 2 278 12 326 2 281 4 282 4 142 1 380 2 
333 1 332 2 123 2 168 1 337 1 362 2 365 2 105 2 268 8 219 5 133 1 204 1 11 1 247 1 12 1 173 5 273 3 318 1 346 2 17 1 113 1 88 5 178 1 278 6 157 2 281 2 158 1 328 1 118 2 282 2 261 1 121 1 380 2 70 1 71 5 
123 1 168 1 364 1 365 1 105 2 268 2 54 1 246 1 12 1 344 1 346 1 86 1 323 1 88 2 116 1 256 1 281 1 187 1 282 1 120 1 376 1 121 1 192 1 380 2 263 1 307 1 
332 1 123 1 88 1 50 1 365 1 281 1 268 1 282 1 80 1 71 1 
273 5 346 2 88 5 362 2 278 10 105 2 157 2 118 2 268 5 219 5 121 1 24 1 380 2 71 5 173 5 
332 1 318 1 168 1 133 1 71 1 12 1 
123 2 147 1 28 2 168 3 104 2 365 1 3 1 106 2 34 1 268 2 243 1 37 4 133 2 315 1 12 3 221 1 317 1 136 1 318 4 15 1 16 2 276 1 58 4 88 2 65 1 281 2 282 2 261 2 305 2 212 4 142 2 213 1 70 2 
356 1 288 1 28 1 238 1 364 2 104 1 267 1 106 1 34 1 241 1 37 1 83 1 275 1 206 1 224 1 58 1 16 1 86 1 116 2 209 1 255 1 231 1 256 2 230 1 349 1 186 2 120 3 330 1 212 1 142 1 263 2 307 3 
273 2 332 2 123 1 88 2 278 4 365 1 350 1 281 1 268 1 282 1 219 2 261 1 70 1 71 4 173 2 
345 1 176 1 7 1 
345 1 176 1 7 1 
110 1 345 1 176 1 324 1 338 1 
345 1 176 1 7 1 
345 1 176 1 316 1 
345 1 176 1 316 1 
345 1 176 1 316 1 
345 1 176 1 
368 1 19 1 
275 2 42 2 224 2 206 2 346 1 251 1 209 2 105 1 280 4 350 1 186 4 149 1 258 1 241 8 119 1 376 1 272 3 192 1 246 1 83 4 
42 2 346 1 90 1 105 1 280 3 350 1 149 1 241 6 119 1 376 1 272 2 192 1 246 1 83 3 
275 1 42 1 224 1 206 1 346 1 336 1 251 1 362 1 209 1 157 1 105 1 280 2 186 2 118 1 241 4 272 2 83 2 
42 1 346 1 251 1 362 1 157 1 280 3 105 1 201 1 158 2 328 1 118 1 241 7 272 2 11 1 83 4 
308 1 362 2 105 3 201 1 149 1 128 1 241 23 272 9 246 2 83 12 275 2 42 5 224 2 206 2 346 3 251 4 209 2 280 11 157 2 350 1 186 4 118 2 328 2 158 2 327 1 258 2 119 1 376 2 192 1 
158 1 241 1 83 1 
328 1 241 1 280 1 
275 1 206 1 224 1 42 2 346 1 336 1 251 1 362 1 209 1 105 1 280 3 157 1 186 2 118 1 241 6 272 3 24 1 83 3 
333 1 362 2 105 2 241 12 272 2 11 1 247 1 83 6 275 1 206 1 224 1 42 1 346 2 251 1 17 1 113 1 178 1 228 1 209 1 280 6 157 2 186 2 328 1 158 1 118 2 
42 1 346 1 251 1 105 1 280 3 241 6 376 1 272 2 192 1 246 1 83 3 
275 1 42 1 224 1 206 1 251 1 209 1 280 1 186 2 327 1 149 1 258 1 241 3 119 1 376 1 272 2 246 1 83 2 
344 1 275 1 206 1 224 1 42 3 346 2 251 2 228 1 209 1 280 5 105 2 186 2 241 10 376 2 272 5 192 1 246 2 83 5 
275 1 224 1 206 1 251 1 228 1 209 1 105 1 280 2 186 2 118 1 241 2 272 1 
275 1 42 1 224 1 206 1 346 1 251 1 362 1 228 1 209 1 157 1 105 1 280 2 186 2 118 1 241 4 272 2 83 2 
275 3 224 3 206 3 42 1 251 1 228 1 209 3 280 1 186 6 327 1 258 1 241 3 376 1 272 2 235 1 246 1 83 2 
336 1 309 1 362 3 105 5 201 1 149 1 241 34 272 12 246 3 11 1 83 18 275 5 206 5 224 5 42 7 346 5 374 1 251 5 228 1 209 5 280 16 157 3 350 1 186 10 327 1 158 4 328 3 118 3 258 2 119 1 376 3 284 1 192 2 235 1 
333 1 105 1 149 1 241 8 272 2 11 1 246 1 83 4 275 1 206 1 224 1 42 2 346 1 228 1 209 1 280 4 350 1 186 2 328 1 158 1 119 1 376 1 192 1 
333 1 336 1 362 1 105 2 201 1 149 1 241 11 272 3 246 1 11 1 83 5 275 2 42 2 206 2 224 2 346 1 251 1 228 1 209 2 280 6 350 1 186 4 158 2 328 1 118 1 119 1 376 1 192 1 
333 1 336 1 362 2 105 3 149 1 241 19 272 4 246 1 11 1 247 1 83 10 275 3 206 3 224 3 42 3 346 3 251 1 17 1 113 1 178 1 228 1 209 3 280 9 157 2 350 1 186 6 328 1 158 1 118 2 258 1 119 1 376 1 192 1 
333 1 336 1 362 2 105 3 149 1 241 17 272 5 246 1 11 1 247 1 83 7 275 3 206 3 224 3 42 3 346 2 251 2 17 1 113 1 178 1 228 1 209 3 280 10 157 1 350 1 186 6 328 1 158 1 118 2 258 1 119 1 376 1 192 1 
333 1 105 1 149 1 241 8 272 2 11 1 246 1 83 4 275 1 206 1 224 1 42 2 346 1 228 1 209 1 280 4 350 1 186 2 328 1 158 1 119 1 376 1 192 1 
333 1 362 2 105 2 241 12 272 2 11 1 247 1 83 6 275 1 206 1 224 1 42 1 346 2 251 1 17 1 113 1 178 1 228 1 209 1 280 6 157 2 186 2 328 1 158 1 118 2 
333 1 336 1 362 2 105 3 149 1 241 18 272 5 246 1 11 1 247 1 83 8 275 4 206 4 224 4 42 3 346 2 251 2 17 1 113 1 178 1 228 1 209 4 280 10 157 1 350 1 186 8 158 1 328 1 118 2 258 2 119 1 376 1 192 1 
333 1 362 3 105 3 241 16 272 6 11 1 247 1 83 7 275 4 206 4 224 4 42 3 346 2 251 3 17 1 113 1 178 1 228 1 209 4 280 9 157 2 186 8 158 1 328 1 118 3 258 2 235 1 
42 3 346 1 251 3 105 1 280 3 149 1 241 7 119 2 376 3 272 6 192 1 246 3 83 4 
333 1 362 2 105 3 149 1 241 18 272 4 246 1 11 1 247 1 83 8 275 4 206 4 224 4 42 3 346 2 251 1 17 1 113 1 178 1 228 1 209 4 280 10 157 1 350 1 186 8 158 1 328 1 118 2 258 2 119 1 376 1 192 1 235 1 
366 1 120 1 364 1 297 1 231 1 229 1 307 1 
274 1 61 1 227 1 364 1 254 1 231 1 229 1 366 1 120 1 297 1 214 1 307 1 
15 1 16 1 58 1 28 1 212 1 142 1 37 1 104 1 221 1 90 1 106 1 
356 1 16 1 58 1 28 1 238 1 104 1 364 1 231 1 256 1 106 1 34 1 120 2 142 1 212 1 37 1 108 1 263 1 307 2 
356 1 28 1 238 1 364 2 104 3 32 1 106 1 34 2 37 1 108 1 58 1 16 2 114 1 253 1 89 1 231 1 256 2 326 1 120 2 212 1 305 1 263 1 307 2 
28 1 238 1 364 2 104 3 32 1 76 1 106 1 34 2 37 2 108 1 342 1 58 2 16 2 114 1 253 1 89 1 231 1 256 2 326 1 120 2 212 2 305 1 263 1 307 2 
332 1 165 1 318 1 16 1 58 3 168 2 28 1 89 1 104 4 198 1 326 1 106 1 34 1 142 1 69 1 305 1 212 3 37 3 9 1 71 1 12 2 342 1 154 1 
332 1 318 1 16 1 58 3 168 2 28 1 89 1 104 4 198 1 326 1 106 1 34 1 142 1 305 1 212 3 314 1 37 3 9 1 71 1 12 2 342 1 154 1 
58 1 63 1 28 1 212 1 37 1 106 1 
34 1 16 1 58 1 67 1 28 1 212 1 142 1 243 1 37 1 104 1 239 1 106 1 
286 1 287 1 288 1 238 1 104 1 105 1 106 1 149 1 241 6 108 1 246 1 295 1 58 1 206 2 16 1 346 1 209 2 255 2 256 1 349 2 350 1 23 1 119 1 120 2 212 1 263 1 307 2 356 1 28 1 364 1 34 1 272 2 37 1 83 3 175 1 275 2 319 1 224 2 42 2 230 1 280 3 231 2 186 4 376 1 377 1 192 1 99 1 
332 1 123 2 168 3 167 1 50 1 104 2 198 1 365 2 268 1 129 1 80 1 314 1 37 1 133 1 9 1 12 3 370 1 154 1 318 2 276 1 58 1 18 1 88 1 281 2 282 2 212 1 142 1 71 1 
58 2 16 1 63 1 28 1 104 2 198 1 106 2 34 1 67 1 212 2 37 2 295 1 56 1 
15 1 58 4 16 1 28 1 104 1 106 1 142 1 212 4 47 1 37 4 295 1 342 1 221 1 
136 1 101 1 34 1 16 1 58 1 28 1 212 1 243 1 37 1 104 1 106 1 3 1 
58 1 53 1 226 1 28 1 212 1 142 1 234 1 37 1 199 1 106 1 
136 1 58 2 16 2 28 1 43 1 104 2 106 1 3 1 34 1 212 2 107 1 243 1 37 2 25 1 295 1 
136 1 58 2 16 2 28 1 195 1 43 1 104 2 106 1 3 1 34 1 142 1 212 2 243 1 37 2 295 1 
136 1 58 2 16 2 28 1 361 1 43 1 104 2 106 1 3 1 34 1 142 1 212 2 243 1 37 2 295 1 
16 1 58 1 28 1 238 1 104 1 364 1 231 1 256 1 106 1 76 1 34 1 120 2 142 1 212 1 37 1 108 1 263 1 307 2 
34 1 16 1 58 1 67 1 28 1 212 1 305 1 243 1 37 1 104 1 239 1 106 1 
196 1 340 1 144 1 292 1 231 1 
332 1 1 1 114 1 167 1 168 2 253 1 196 2 156 1 340 2 292 1 231 1 32 1 271 1 9 1 244 1 71 1 12 2 48 1 144 2 
120 1 20 1 301 1 196 1 364 1 292 1 144 1 307 1 117 1 
1 1 271 1 292 1 
242 1 289 1 90 1 148 1 
303 1 202 1 203 1 242 1 289 1 8 1 148 1 
303 1 348 1 285 1 
27 1 289 1 360 1 302 1 148 1 312 2 303 3 202 1 203 1 242 1 8 3 193 1 
303 2 137 1 202 1 203 1 242 1 289 1 8 2 183 1 148 1 
303 1 202 1 203 1 226 1 220 1 8 1 193 1 306 1 298 1 199 1 
303 1 202 1 203 1 289 1 8 1 193 1 148 1 
303 1 202 1 203 1 242 1 8 1 193 1 148 2 
303 2 202 2 233 1 203 2 289 1 8 2 193 1 170 1 148 1 381 1 
303 3 137 2 202 1 359 1 159 1 203 1 242 1 62 1 289 1 220 1 8 3 193 1 148 1 
137 1 289 1 226 2 347 1 148 1 199 1 303 2 202 1 203 1 242 1 53 1 8 2 193 1 49 1 306 1 
303 4 137 2 202 2 159 1 35 1 203 2 242 1 289 1 220 1 8 4 193 1 183 1 148 1 
303 1 202 1 203 1 242 1 289 1 8 1 193 1 148 1 
137 2 266 1 360 1 289 2 302 1 148 2 312 1 303 4 202 1 203 1 159 1 242 2 8 4 220 1 
41 1 266 1 207 1 44 1 148 1 303 1 202 1 203 1 242 1 8 1 193 1 
360 1 289 1 140 1 302 2 148 1 312 2 303 3 202 1 203 1 242 1 8 3 193 1 
289 2 72 1 184 2 355 1 
303 1 202 1 203 1 87 1 8 1 193 1 
303 2 137 1 202 1 203 1 242 1 62 1 289 1 8 2 193 1 148 1 
92 1 
303 1 202 1 203 1 242 1 289 1 8 1 193 1 148 1 
137 1 62 1 289 1 148 1 312 1 303 3 202 1 203 1 242 1 8 3 193 1 
303 1 137 1 159 1 8 1 220 1 
289 1 148 1 

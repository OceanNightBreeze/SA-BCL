#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (19,23) (19,23) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (19,23) (19,23) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (19,23) (19,23) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (19,23) (19,23) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 155 193 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 95 (89,159,230) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 95 210 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 155 197 239 70 (51,74) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 155 94 261 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 155 94 261 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 155 94 261 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 155 94 261 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 155 94 261 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (103,120,347) (103,120,347) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (103,120,347) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (103,120,347) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (122,207) (122,207) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (103,120,347) (103,120,347) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 95 (89,159,230) 322 262 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 155 331 34 263 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 155 193 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 155 197 239 222 260 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 155 193 33 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 155 197 239 70 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 155 197 239 70 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 155 193 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 155 193 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 155 141 136 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 155 141 136 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 155 141 136 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 155 141 136 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 155 141 136 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 155 193 33 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 293 31 334 (66,97) (66,97) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 155 331 25 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 155 331 34 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 155 331 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 155 197 239 222 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 155 197 253 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 293 31 334 (66,97) (66,97) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 155 197 253 135 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 155 197 239 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 155 197 239 222 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 293 31 334 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 155 331 25 323 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 293 31 334 (66,97) (66,97) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 155 331 25 153 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 95 210 101 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 155 197 253 (66,97) (66,97) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 3127 | = null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1213 | stmt -> ;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
249 1 23 1 255 1 304 1 288 1 291 1 83 1 69 1 216 1 10 2 203 2 244 1 114 1 278 1 19 1 
249 1 23 1 255 1 304 1 288 1 291 1 83 1 69 1 216 1 10 2 203 2 244 1 114 1 278 1 19 1 
249 1 23 1 255 1 304 1 288 1 291 1 83 1 69 1 216 1 10 2 203 2 244 1 114 1 278 1 19 1 
249 1 23 1 255 1 304 1 288 1 291 1 83 1 69 1 216 1 10 2 203 2 244 1 114 1 278 1 19 1 
321 1 306 2 145 1 288 1 308 1 291 1 69 1 216 1 219 3 10 4 242 2 52 1 297 3 203 4 244 1 185 1 278 1 300 1 
249 1 255 1 147 1 288 1 308 1 291 1 267 1 309 1 69 1 219 1 10 2 203 2 244 1 114 1 278 1 300 1 
255 1 306 1 308 1 291 1 30 1 219 2 10 3 297 1 203 3 244 2 185 1 278 2 300 1 
255 1 306 4 212 1 308 1 216 1 86 1 219 5 10 9 52 1 185 3 278 2 321 1 145 1 28 1 288 1 291 1 69 1 30 1 242 2 297 7 203 9 244 2 344 1 300 1 
255 1 306 4 212 1 308 1 216 1 86 1 219 5 10 9 52 1 185 3 278 2 321 1 145 1 28 1 288 1 291 1 69 1 30 1 242 2 297 7 203 9 244 2 344 1 300 1 
269 1 
303 1 24 1 301 2 
56 1 127 2 340 2 182 1 307 2 330 2 125 2 68 2 
37 2 258 1 44 1 170 1 307 3 125 3 217 1 127 2 314 1 223 1 182 1 320 1 56 1 282 1 281 1 98 1 100 1 326 1 325 2 142 1 327 1 65 1 189 2 330 2 193 1 68 2 107 1 294 1 155 1 336 1 157 1 36 1 340 2 201 1 341 1 298 1 245 1 
254 1 127 1 340 1 182 1 307 1 192 1 330 1 238 1 125 1 68 1 
95 1 89 1 
254 1 21 1 230 1 24 1 307 1 330 1 68 1 125 1 127 1 221 1 202 2 340 1 159 2 92 1 186 1 
187 1 202 1 14 1 233 1 159 1 
119 1 221 1 24 1 202 2 14 1 233 1 159 2 172 1 
202 1 233 1 159 1 
254 1 307 1 192 1 236 1 238 1 330 1 68 1 125 1 127 1 202 1 340 1 14 1 182 1 159 1 
24 1 
119 1 109 1 221 1 24 1 202 2 14 1 233 1 159 2 
0 1 137 1 119 1 208 2 24 1 284 1 1 1 233 2 146 2 149 1 311 2 48 1 221 1 271 1 202 5 14 2 159 5 316 1 346 1 
269 1 
56 1 254 1 140 1 307 2 330 2 125 2 68 1 127 1 180 1 340 1 160 1 
166 1 51 1 305 1 
37 1 56 1 281 1 282 1 325 1 142 1 189 1 170 1 307 1 125 1 217 1 336 1 36 1 341 1 298 1 317 1 
37 1 282 1 281 1 166 1 142 1 325 1 189 1 170 1 307 2 330 1 125 2 217 1 127 1 336 1 36 1 340 1 341 1 112 1 298 1 280 1 
56 1 254 1 105 1 307 4 330 4 125 4 68 1 176 1 127 4 180 1 340 4 112 2 160 1 280 1 
254 1 127 1 340 1 307 1 192 1 330 1 125 1 
56 1 127 3 340 3 112 1 307 3 330 3 68 1 125 3 
254 1 127 1 340 1 307 1 192 1 330 1 125 1 
254 1 140 1 307 1 330 1 68 1 125 1 127 1 340 1 160 1 
254 2 170 1 180 1 182 1 92 1 186 1 280 1 281 1 282 1 98 1 21 1 100 1 189 1 107 1 202 1 201 1 36 1 112 1 298 1 117 1 37 1 44 1 307 4 125 4 217 1 127 3 314 1 223 1 320 1 56 1 230 1 325 1 142 1 65 1 327 1 330 3 68 2 336 1 157 1 340 3 341 1 159 1 160 1 245 1 246 1 
95 1 127 1 210 1 340 1 112 1 307 1 330 1 125 1 
254 1 21 1 165 1 230 1 24 1 307 3 330 3 68 1 125 3 127 3 202 1 340 3 112 2 159 1 160 1 92 1 186 1 246 1 280 1 
166 1 307 2 330 2 68 1 125 2 127 2 51 1 340 2 112 1 160 1 
37 1 56 1 281 1 282 1 325 1 142 1 189 1 170 1 307 1 125 1 217 1 336 1 36 1 341 1 298 1 
37 1 56 1 281 1 282 1 57 1 325 1 142 1 189 1 170 1 307 1 125 1 217 1 73 1 36 1 341 1 
166 1 100 1 305 1 65 1 327 1 143 1 213 1 239 1 70 1 197 1 126 1 218 1 107 1 155 1 314 1 74 1 51 1 157 2 339 1 223 1 245 1 320 2 
254 1 307 1 330 1 125 1 194 1 127 1 340 1 92 1 
224 1 55 1 
224 1 55 1 
26 1 206 1 
26 1 206 1 
26 1 206 1 
77 1 224 1 55 1 
163 1 224 1 55 1 
108 1 243 1 224 2 26 1 55 2 206 1 
77 1 224 1 55 1 
77 1 224 1 55 1 
75 1 224 1 55 1 
75 1 224 1 55 1 
75 1 224 1 55 1 
118 1 252 1 163 1 78 1 307 2 173 1 125 2 127 2 224 1 181 1 276 1 55 1 228 1 319 1 56 1 283 1 229 1 330 2 110 1 340 2 202 1 159 1 205 1 248 1 
78 2 283 2 61 1 24 1 259 1 42 1 81 2 173 1 72 1 243 1 53 1 202 2 224 2 159 2 276 2 55 2 299 1 319 2 228 3 
216 1 288 1 69 1 
288 1 69 1 309 1 
216 2 328 1 15 1 191 1 69 3 309 1 
216 1 328 1 15 1 277 1 69 2 309 1 
216 1 328 1 15 2 69 2 309 1 
303 1 252 1 119 1 208 1 213 1 264 1 6 2 85 1 311 1 87 1 179 2 221 1 222 1 181 1 14 4 316 3 139 1 58 1 24 2 233 1 146 1 149 1 239 1 71 1 197 1 335 2 339 1 202 5 159 5 205 1 346 2 301 3 
0 1 164 1 252 4 254 1 6 6 85 2 177 1 87 1 14 7 182 1 275 1 16 5 187 5 24 5 192 1 197 3 202 9 301 9 303 3 119 1 208 2 307 1 213 3 125 1 311 2 127 1 221 1 222 3 316 8 58 2 233 6 146 2 237 1 330 1 238 1 236 1 333 1 68 1 149 1 239 3 151 1 335 6 339 3 340 1 159 9 346 6 
0 1 303 2 252 1 208 1 213 1 264 1 6 2 85 1 311 1 221 1 179 1 222 1 14 2 316 3 58 1 24 3 146 1 239 1 71 1 197 1 335 2 339 1 202 3 159 3 346 2 301 4 
0 1 303 4 252 2 208 1 213 2 264 1 6 4 85 1 311 1 221 1 179 2 222 2 14 3 275 1 316 5 58 1 24 5 146 1 237 1 333 1 239 2 71 1 197 2 335 4 339 2 202 4 159 4 346 4 301 8 
269 1 
217 1 324 1 
167 1 
217 1 282 1 36 1 
217 1 175 1 
217 1 36 1 
302 2 217 3 282 1 45 1 36 1 290 1 
94 1 80 1 155 1 261 1 
94 1 80 1 155 1 261 1 
94 1 80 1 155 1 261 1 133 1 
94 1 80 1 155 1 261 1 
94 1 80 1 155 1 261 1 
37 1 255 1 325 1 120 1 103 1 189 1 171 1 291 1 84 1 10 1 203 1 244 1 278 1 
37 1 255 1 325 1 103 1 189 1 171 1 3 1 29 1 270 1 10 2 297 1 203 2 244 1 278 1 
37 1 255 1 325 1 10 1 297 1 189 1 203 1 171 1 3 1 29 1 347 1 
37 1 207 1 255 2 325 1 122 1 189 1 170 1 144 1 171 2 270 1 10 1 203 1 244 1 278 1 
37 1 255 1 325 1 120 1 103 1 189 1 171 1 291 1 29 1 10 1 203 1 244 1 278 1 
345 1 
37 2 119 1 208 1 209 1 262 1 170 2 85 1 266 1 217 1 311 1 9 1 89 1 316 1 95 1 281 1 322 1 59 1 142 1 325 2 189 2 233 2 146 1 287 1 106 1 149 1 292 1 202 2 36 1 159 2 346 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 119 1 109 1 9 1 89 1 209 1 202 2 262 1 233 1 159 2 
95 1 322 1 208 1 209 1 262 1 146 1 149 1 311 1 9 1 89 1 202 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 9 1 89 1 209 1 202 1 262 1 159 1 
95 1 322 1 208 1 209 1 262 1 146 1 149 1 311 1 9 1 89 1 202 1 159 1 
269 1 107 1 218 1 314 1 100 1 327 1 223 1 65 1 245 1 
166 1 100 1 305 1 65 1 327 1 263 1 331 1 150 1 107 1 34 1 155 1 50 1 314 1 157 1 223 1 245 1 320 1 
98 1 100 1 327 1 65 1 307 1 330 1 193 1 125 1 107 1 127 1 155 1 314 1 50 1 157 1 340 1 223 1 112 1 132 1 226 1 245 1 280 1 320 1 
37 1 166 1 305 1 260 1 170 1 307 2 214 1 125 2 217 1 127 1 220 1 50 1 314 2 51 1 222 1 223 2 280 1 320 2 282 1 281 1 98 1 100 2 142 1 325 1 65 2 327 2 189 1 67 1 148 1 330 1 239 1 197 1 107 2 155 1 336 1 157 2 36 1 201 1 340 1 341 1 112 1 298 1 245 2 
37 1 107 1 33 1 155 1 314 1 100 1 325 1 327 1 223 1 65 1 189 1 273 1 170 1 245 1 193 1 
100 1 65 1 327 1 307 1 330 1 125 1 68 1 239 1 197 1 107 1 127 1 155 1 50 1 314 1 295 1 222 1 340 1 223 1 160 1 245 1 
197 1 107 1 218 1 155 1 314 1 100 1 327 1 223 1 65 1 245 1 239 1 70 1 
166 1 100 1 305 1 65 1 327 1 4 1 213 1 310 1 126 1 218 1 107 1 314 1 51 1 157 2 339 1 223 1 245 1 320 2 
197 1 107 1 218 1 155 1 314 1 100 1 222 1 327 1 223 1 65 1 245 1 239 1 
197 1 107 1 155 1 314 1 100 1 327 1 223 1 65 1 273 1 245 1 239 1 70 1 
166 1 100 1 305 1 65 1 327 1 4 1 213 1 310 1 126 1 107 1 314 1 51 1 157 2 339 1 223 1 273 1 245 1 320 2 
197 1 107 1 155 1 314 1 100 1 222 1 327 1 223 1 65 1 273 1 245 1 239 1 
197 1 107 1 155 1 314 1 100 1 222 1 327 1 223 1 65 1 245 1 239 1 
37 1 170 1 307 1 125 1 217 1 314 1 223 1 320 1 56 1 282 1 281 1 98 1 100 1 142 1 325 1 65 1 327 1 189 1 193 1 107 1 155 1 336 1 157 1 36 1 201 1 341 1 298 1 245 1 
37 1 170 1 307 1 125 1 217 1 314 1 223 1 320 1 56 1 282 1 281 1 20 1 98 1 57 1 100 1 142 1 325 1 65 1 327 1 189 1 193 1 73 1 107 1 155 1 157 1 36 1 341 1 245 1 
197 1 107 1 155 1 314 1 100 1 50 1 222 1 327 1 223 1 65 1 245 1 239 1 
37 1 307 1 84 1 125 1 217 1 314 1 223 1 222 1 282 1 281 1 100 1 142 1 325 1 65 1 327 1 189 1 67 1 239 1 197 1 107 1 155 1 336 1 201 1 36 1 341 1 298 1 245 1 
100 1 65 1 327 1 307 1 330 1 125 1 68 1 239 1 197 1 107 1 127 1 155 1 50 1 314 1 222 1 340 1 223 1 131 1 160 1 245 1 
141 1 327 1 152 1 107 1 155 1 314 1 157 1 296 1 223 1 342 1 245 1 17 1 136 1 320 1 
141 1 327 1 152 1 107 1 155 1 314 1 157 1 296 1 223 1 342 1 245 1 17 1 136 1 320 1 
141 1 327 1 152 1 107 1 155 1 314 1 157 1 296 1 223 1 342 1 245 1 17 1 136 1 320 1 
141 1 327 1 152 1 107 1 155 1 314 1 157 1 296 1 223 1 342 1 245 1 17 1 136 1 320 1 
141 1 327 1 152 1 107 1 155 1 314 1 157 1 296 1 223 1 342 1 245 1 17 1 136 1 320 1 
78 1 283 1 61 1 243 1 259 1 224 1 276 1 55 1 265 1 319 1 
118 1 163 1 
78 1 283 1 60 1 224 1 190 1 276 1 55 1 162 1 319 1 
77 1 169 1 
108 1 75 1 225 1 
78 1 283 1 61 1 24 1 259 1 81 1 173 1 72 1 243 1 53 1 202 1 224 1 159 1 276 1 55 1 299 1 319 1 228 2 
78 1 283 1 61 1 24 1 259 1 81 1 173 1 72 1 243 1 53 1 202 1 224 1 159 1 276 1 55 1 299 1 319 1 228 2 
78 1 283 1 61 1 24 1 259 1 81 1 173 1 72 1 243 1 53 1 202 1 224 1 159 1 276 1 55 1 299 1 319 1 228 2 
77 1 108 1 169 1 
77 1 108 1 169 1 
75 1 225 1 
108 1 75 1 225 1 
229 1 248 1 
78 1 283 1 202 1 14 1 224 1 159 1 115 1 276 1 55 1 319 1 
100 1 2 1 327 1 65 1 307 2 27 1 330 2 193 1 125 2 107 1 33 1 155 1 314 1 50 1 223 1 134 1 245 1 279 1 
37 2 281 1 79 1 22 1 142 1 325 2 231 1 189 2 191 1 288 1 29 1 84 1 69 2 309 1 216 1 111 1 272 1 130 1 184 1 
37 1 281 1 79 1 325 1 142 1 189 1 191 1 288 1 29 1 215 1 69 2 309 1 216 1 111 1 272 1 130 1 184 1 
37 1 281 1 22 1 142 1 325 1 257 1 189 1 170 1 287 1 195 1 266 1 217 1 36 1 272 1 
37 1 281 1 79 1 22 1 142 1 325 1 231 1 189 1 191 1 288 1 29 1 69 2 309 1 216 1 111 1 272 1 130 1 184 1 
99 1 
269 1 
303 1 119 1 208 1 311 1 313 1 221 1 316 1 24 2 188 1 233 1 146 1 149 1 202 1 159 1 116 1 346 1 301 1 
250 2 256 1 260 2 170 1 175 2 84 1 6 6 85 2 13 2 186 2 281 3 282 3 284 1 24 8 189 3 289 2 198 2 197 2 36 3 200 1 202 5 301 12 37 3 302 2 38 1 303 6 40 1 119 3 208 4 213 2 217 10 311 4 45 1 48 1 47 2 221 2 222 2 316 9 227 2 324 3 59 1 142 4 325 3 62 2 232 1 233 5 146 4 149 4 239 2 335 6 339 2 343 2 159 5 346 8 
303 3 119 1 41 1 208 2 213 2 6 5 5 1 85 1 311 2 221 2 222 2 316 8 93 1 59 1 62 1 25 1 24 5 63 1 233 1 146 2 289 2 149 2 331 1 332 1 239 2 150 1 197 2 32 1 153 1 335 5 339 2 202 1 159 1 346 5 301 6 
253 1 254 1 208 1 307 1 124 1 213 1 125 1 311 1 127 1 182 1 316 2 135 1 62 1 146 1 192 1 289 2 236 1 238 1 330 1 149 1 68 1 334 1 31 1 197 2 202 1 340 1 159 1 346 2 
208 1 284 1 24 1 146 1 149 1 311 1 48 1 221 1 316 1 346 1 
303 5 62 1 24 5 260 1 289 2 213 2 6 5 239 2 197 2 335 5 339 2 222 2 316 5 346 5 301 10 
119 1 221 1 24 1 202 1 159 1 233 1 
0 1 37 4 119 2 208 2 256 1 170 2 174 1 85 2 266 1 217 1 311 2 316 2 281 1 59 2 142 1 325 4 232 2 189 4 233 4 146 2 287 1 106 1 149 1 292 1 36 1 202 3 113 1 159 3 346 2 
37 1 44 1 170 1 307 3 125 3 217 1 127 2 314 1 223 1 182 1 320 1 56 1 281 1 282 1 98 1 100 1 325 1 142 1 327 1 65 1 189 1 330 2 68 2 107 1 336 1 157 1 340 2 201 1 36 1 341 1 298 1 245 1 
94 1 303 2 208 1 59 1 24 4 146 1 289 1 6 2 149 1 85 1 311 1 335 2 221 2 316 2 346 2 301 4 
102 1 276 1 319 1 
259 1 91 1 276 1 248 1 319 1 
102 1 276 1 319 1 
102 1 276 1 319 1 
138 1 276 1 319 1 
138 1 276 1 319 1 
138 1 276 1 319 1 
276 1 319 1 
224 1 55 1 
97 1 327 2 66 1 4 1 310 1 334 1 31 1 293 1 107 2 314 2 12 1 223 2 245 2 
269 1 
197 1 107 1 155 1 178 1 314 1 222 1 327 1 223 1 245 1 239 1 
150 1 155 1 157 1 25 1 331 1 320 1 
150 1 34 1 155 1 157 1 331 1 320 1 
150 1 157 1 320 1 
155 1 331 1 
197 1 155 1 157 1 222 1 260 1 239 1 320 1 
150 1 153 1 107 1 155 1 314 1 157 1 25 1 327 1 223 1 296 1 245 1 331 1 320 1 
197 1 253 1 155 1 
97 1 327 1 66 1 82 1 4 1 310 1 334 1 31 1 293 1 107 1 314 1 157 1 12 1 223 1 245 1 320 1 
334 1 197 1 253 1 31 1 155 1 4 1 135 1 310 1 
197 1 107 1 155 1 314 1 327 1 223 1 296 1 245 1 239 1 
197 1 107 1 155 1 314 1 222 1 327 1 223 1 296 1 245 1 239 1 
327 2 4 1 310 1 334 1 31 1 107 2 293 1 314 2 90 1 296 1 223 2 245 2 
323 1 25 1 327 3 331 1 150 1 107 3 155 1 178 1 314 3 157 1 90 1 296 1 223 3 245 3 320 1 
150 1 153 1 107 1 155 1 314 1 157 1 25 1 327 1 223 1 296 1 245 1 331 1 320 1 
25 1 327 2 331 1 150 1 107 2 153 1 155 1 178 1 314 2 157 1 223 2 296 1 245 2 320 1 
150 1 153 1 107 1 155 1 314 1 157 1 25 1 327 1 223 1 296 1 245 1 331 1 320 1 
150 1 153 1 107 1 155 1 314 1 157 1 25 1 327 1 223 1 296 1 245 1 331 1 320 1 
150 1 153 1 107 1 155 1 314 1 157 1 25 1 327 1 223 1 296 1 245 1 331 1 320 1 
150 1 153 1 107 1 155 1 314 1 157 1 25 1 327 1 223 1 296 1 245 1 331 1 320 1 
25 1 327 2 331 1 150 1 107 2 153 1 155 1 178 1 314 2 157 1 296 1 223 2 245 2 320 1 
150 1 153 1 107 2 155 1 314 2 157 1 25 1 90 1 296 1 327 2 223 2 245 2 331 1 320 1 
334 1 31 1 293 1 97 1 66 1 4 1 310 1 
150 1 153 1 107 2 155 1 314 2 157 1 25 1 90 1 296 1 327 2 223 2 245 2 331 1 320 1 
95 1 210 1 101 1 
240 1 54 1 286 1 123 1 7 1 
269 1 37 1 325 1 189 1 170 1 
37 1 56 1 282 1 281 1 142 1 325 1 189 1 170 1 307 2 330 1 125 2 217 1 127 1 36 1 340 1 341 1 112 1 298 1 
37 1 254 2 307 2 175 1 125 2 217 3 127 1 180 1 92 1 56 1 281 1 282 2 21 1 325 1 142 1 189 1 232 1 330 2 198 1 340 2 36 2 112 1 341 1 298 1 
37 1 254 2 307 2 175 1 125 2 217 3 127 1 180 1 92 1 56 1 281 1 282 2 21 1 325 1 142 1 189 1 232 1 330 2 73 1 198 1 340 2 36 2 112 1 341 1 
302 1 37 3 170 1 175 1 217 4 312 1 221 1 11 1 183 1 186 1 281 1 282 1 324 1 325 3 142 1 24 1 189 3 232 1 233 1 198 1 202 2 36 1 159 2 
37 3 302 1 282 1 281 1 324 1 24 1 142 1 325 3 232 1 189 3 170 1 233 1 175 1 217 4 312 1 198 1 47 1 221 1 36 1 202 2 159 2 186 1 
37 1 281 1 142 1 325 1 189 1 274 1 
37 1 282 1 281 1 325 1 142 2 189 1 170 1 217 1 45 1 46 1 337 1 36 1 247 1 
37 1 253 1 307 2 4 1 125 2 84 1 310 1 217 1 127 1 50 1 314 2 223 2 282 1 281 1 97 1 100 2 142 1 325 1 65 2 327 2 189 1 66 1 27 1 67 1 330 1 148 1 334 1 197 1 31 1 107 2 155 1 336 1 36 1 340 1 201 1 341 1 112 1 298 1 245 2 
37 1 250 1 302 1 119 1 208 2 256 1 170 1 311 2 217 2 48 1 47 1 221 1 13 1 14 1 316 1 186 1 324 1 24 1 284 1 325 1 189 1 233 2 146 2 149 2 202 3 159 3 343 1 346 1 
302 1 37 2 282 1 281 1 325 2 142 2 189 2 84 1 217 2 45 1 200 1 36 1 274 1 
37 4 281 1 142 1 325 4 189 4 170 1 287 1 84 1 266 1 217 1 312 1 36 1 18 1 
37 1 282 1 281 1 325 1 142 2 189 1 8 1 217 1 154 1 337 1 36 1 247 1 161 1 
37 1 281 1 142 1 111 1 325 1 189 1 170 1 288 1 69 1 309 1 
37 2 281 1 325 2 142 1 189 2 43 1 29 1 84 1 217 1 128 1 36 1 
37 5 281 2 251 1 325 4 142 2 232 1 189 5 43 1 170 1 287 1 84 1 266 1 217 3 88 1 36 2 18 1 
37 5 281 2 251 1 325 4 142 2 232 1 189 5 43 1 170 1 287 1 84 1 266 1 217 3 36 2 76 1 18 1 
37 1 56 1 282 1 281 1 142 1 325 1 189 1 170 1 307 2 330 1 125 2 217 1 73 1 127 1 36 1 340 1 341 1 112 1 
37 1 282 1 281 1 325 1 142 2 232 1 189 1 217 1 45 1 46 1 337 1 36 1 247 1 
56 1 96 1 315 1 285 1 129 1 
254 2 121 1 307 1 125 1 127 1 49 1 221 1 315 1 129 1 14 1 182 1 92 1 186 1 96 1 21 1 230 1 24 1 64 1 285 1 192 1 330 1 236 1 238 1 68 1 340 1 202 2 159 2 246 1 
96 1 2 1 315 1 129 1 307 1 134 1 330 1 279 1 125 1 
49 1 64 1 315 1 
269 1 
219 1 10 1 203 1 244 1 278 1 308 1 300 1 
255 1 10 1 318 1 
219 1 10 3 203 3 244 1 114 2 235 1 329 1 278 1 308 1 291 1 300 1 268 1 
219 1 242 1 10 2 297 1 203 2 244 1 278 1 308 1 300 1 
216 1 219 1 306 1 52 1 10 1 203 1 244 1 288 1 278 1 291 1 69 1 
219 1 10 1 203 1 244 1 278 1 291 1 300 1 
10 1 203 1 244 1 278 1 308 1 291 1 300 2 
291 1 196 1 219 1 10 2 35 1 203 2 244 2 278 2 300 1 204 1 
306 1 28 1 308 1 291 1 219 2 10 3 297 2 203 3 244 1 185 1 278 1 344 1 300 1 
191 1 288 1 308 1 291 1 309 1 69 2 216 1 219 1 199 1 10 2 297 1 203 2 244 1 278 1 300 1 
321 1 306 1 308 1 291 1 219 2 10 4 242 1 297 2 203 4 244 2 185 1 278 2 300 1 
219 1 10 1 203 1 244 1 278 1 308 1 291 1 300 1 
306 1 211 1 235 1 329 1 308 2 219 3 10 4 297 2 203 4 244 1 185 1 114 1 278 1 300 2 
219 1 10 2 297 1 212 1 168 1 203 2 244 1 104 1 278 1 308 1 291 1 300 1 
329 1 235 2 291 1 308 1 219 1 156 1 10 3 203 3 244 1 278 1 114 2 300 1 
39 1 219 2 338 2 234 1 
10 1 158 1 203 1 244 1 278 1 291 1 
219 1 10 2 297 1 203 2 244 1 28 1 278 1 308 1 291 1 300 1 
241 1 
219 1 10 1 203 1 244 1 278 1 308 1 291 1 300 1 
28 1 291 1 308 1 219 1 10 3 297 1 203 3 244 1 278 1 114 1 300 1 
219 1 306 1 211 1 185 1 
219 1 300 1 

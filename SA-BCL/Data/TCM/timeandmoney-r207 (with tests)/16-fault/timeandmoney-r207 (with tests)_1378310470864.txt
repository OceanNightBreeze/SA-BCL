#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (73,87,239,318,323) (56,278) (56,278) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (73,87,239,318,323) (56,278) (56,278) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (73,87,239,318,323) (56,278) (56,278) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (73,87,239,318,323) (56,278) (56,278) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 192 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (73,87,239,318,323) (221,316) (221,316) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 192 305 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 192 305 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (127,335,361,369) (127,335,361,369) (75,280,291) (75,280,291) (75,280,291) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (127,335,361,369) (127,335,361,369) (75,280,291) (75,280,291) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (127,335,361,369) (127,335,361,369) (75,280,291) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (127,335,361,369) (127,335,361,369) (75,280,291) (75,280,291) (75,280,291) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 168 258 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 168 258 273 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 168 258 71 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 168 258 71 167 65 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 168 258 71 167 65 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 168 258 27 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 168 258 27 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 289 69 208 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 289 69 208 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 289 69 208 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 289 69 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 299 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (127,335,361,369) (127,335,361,369) 180 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
263 1 203 1 18 1 329 1 143 1 318 1 217 1 347 1 348 1 278 1 369 1 127 1 94 1 56 1 361 1 
263 1 203 1 18 1 329 1 143 1 318 1 217 1 347 1 348 1 278 1 369 1 127 1 94 1 56 1 361 1 
263 1 203 1 18 1 329 1 143 1 318 1 217 1 347 1 348 1 278 1 369 1 127 1 94 1 56 1 361 1 
263 1 203 1 18 1 329 1 143 1 318 1 217 1 347 1 348 1 278 1 369 1 127 1 94 1 56 1 361 1 
7 1 203 1 18 1 329 2 192 1 26 1 217 1 347 1 335 1 369 1 127 1 361 2 360 1 200 1 
263 1 221 1 18 1 329 1 316 1 74 1 369 1 318 1 217 1 127 1 347 1 348 1 361 1 
7 2 263 1 59 1 11 1 329 3 26 1 331 1 347 1 335 1 369 2 127 2 81 1 361 3 
7 3 263 1 203 1 59 2 18 1 192 1 329 7 26 3 305 1 217 1 331 1 347 1 368 1 335 5 369 2 127 2 128 1 155 1 200 1 360 1 361 7 
7 3 263 1 203 1 59 2 18 1 192 1 329 7 26 3 305 1 217 1 331 1 347 1 368 1 335 5 369 2 127 2 128 1 155 1 200 1 360 1 361 7 
350 1 299 1 96 1 
350 1 253 2 326 1 
220 2 295 2 182 2 330 1 274 2 91 2 319 1 365 2 
285 1 286 1 72 1 0 1 182 2 158 2 292 1 145 1 319 1 40 2 164 1 295 2 103 1 21 1 296 1 352 1 353 1 212 1 246 1 358 1 269 2 362 1 328 1 170 2 330 1 274 3 176 1 365 2 220 3 309 1 223 1 222 1 91 2 34 2 283 1 260 1 313 1 
220 1 295 1 322 1 182 1 274 1 91 1 161 1 259 1 319 1 365 1 
130 1 25 1 182 1 274 1 161 1 144 1 235 1 124 1 125 1 76 1 350 1 220 1 298 1 96 1 
130 1 25 1 182 1 274 1 161 1 235 1 124 1 76 2 365 1 350 1 295 1 220 1 298 2 91 1 96 1 
146 1 298 1 109 1 29 1 76 1 
350 1 60 1 298 2 109 1 29 1 226 1 76 2 96 1 
298 1 109 1 76 1 
182 1 274 1 29 1 47 1 161 1 319 1 76 1 365 1 295 1 220 1 322 1 298 1 91 1 259 1 
350 1 
350 1 113 1 60 1 298 2 109 1 29 1 76 2 96 1 
229 1 169 1 100 2 60 1 29 2 109 2 131 2 86 1 218 1 76 5 237 1 350 1 257 1 298 5 324 2 357 1 213 1 83 1 96 1 
330 1 299 1 
190 1 182 2 330 2 274 2 39 1 365 1 220 2 295 1 91 1 
287 1 304 1 199 1 
5 1 170 1 330 1 274 1 158 1 292 1 164 1 220 1 103 1 21 1 296 1 352 1 34 1 283 1 358 1 260 1 
295 1 220 3 182 3 330 1 274 3 43 1 91 3 365 3 
220 1 182 1 274 1 91 1 161 1 259 1 365 1 
190 1 220 1 295 1 182 1 274 1 91 1 161 1 39 1 365 1 
285 1 286 1 72 1 0 1 182 3 158 1 161 1 292 1 235 1 124 1 145 1 319 1 76 1 40 1 164 1 295 2 21 1 103 1 296 1 352 1 298 1 212 1 43 1 358 1 269 2 359 1 190 1 130 1 25 1 328 1 170 1 330 1 274 4 365 3 279 1 220 4 309 1 222 1 223 1 33 1 91 3 283 1 34 1 260 1 
220 2 265 1 182 2 330 1 274 2 91 1 43 1 125 1 365 1 
190 1 130 1 25 1 182 3 274 3 161 1 124 1 235 1 76 1 365 3 279 1 295 1 350 1 220 3 20 1 298 1 43 2 91 3 359 1 
190 1 287 1 182 2 304 1 274 2 365 2 295 1 220 2 43 1 91 2 
170 1 330 1 274 1 158 1 292 1 164 1 220 1 103 1 21 1 352 1 296 1 34 1 283 1 358 1 260 1 
129 1 170 1 330 1 274 1 158 1 292 1 162 1 164 1 220 1 103 1 21 1 352 1 296 1 34 1 260 1 
35 1 286 1 72 1 179 1 36 1 287 2 0 2 38 1 145 1 40 4 126 1 294 1 211 1 212 1 269 2 106 1 328 1 304 2 173 1 108 1 48 1 309 1 199 2 313 2 
130 1 220 1 112 1 182 1 274 1 91 1 161 1 365 1 
170 1 304 1 182 1 274 2 158 1 292 1 365 1 164 1 220 2 21 1 103 1 296 1 352 1 43 1 91 1 34 1 283 1 260 1 358 1 359 1 
190 1 262 1 265 1 182 5 330 1 274 5 125 1 365 4 220 5 295 1 336 1 43 2 91 4 359 1 
112 1 220 2 182 2 274 2 91 2 161 1 259 1 365 2 
204 1 53 1 
204 1 53 1 
191 1 370 1 
191 1 370 1 
191 1 370 1 
194 1 204 1 53 1 
194 1 204 1 53 1 
9 1 204 1 53 1 
191 1 204 2 252 1 370 1 53 2 342 1 
194 1 204 1 53 1 
271 1 204 1 53 1 
271 1 204 1 53 1 
271 1 204 1 53 1 
327 1 98 1 247 3 61 2 172 1 204 2 252 1 333 1 364 1 53 2 234 2 76 2 349 2 350 1 256 2 184 1 298 2 197 2 50 1 
201 1 182 2 204 1 234 1 53 1 123 1 76 1 349 1 184 1 298 1 301 1 247 1 9 1 171 1 61 1 330 1 274 2 365 2 275 1 220 2 68 1 91 2 197 1 312 1 
203 1 18 1 217 1 
18 1 74 1 217 1 
203 2 232 1 243 1 74 1 217 3 355 1 
203 1 195 1 243 1 74 1 217 2 355 1 
203 1 243 1 74 1 217 2 355 2 
201 1 179 1 100 1 233 2 123 1 76 5 350 2 211 1 298 5 324 1 356 1 326 1 169 2 171 1 60 1 14 1 173 1 109 1 29 4 253 3 48 1 131 1 30 1 218 1 219 1 67 2 133 2 16 1 257 3 341 1 154 1 96 1 
344 1 179 3 140 1 100 2 317 5 76 9 293 1 350 5 146 5 211 3 22 1 298 9 324 2 357 1 326 3 169 6 171 4 60 1 14 2 173 3 251 1 109 6 29 7 253 9 48 3 30 1 131 2 218 1 67 6 133 6 257 8 196 1 341 3 154 2 96 1 
179 1 100 1 233 1 76 3 350 3 211 1 298 3 324 1 356 1 357 1 326 2 169 2 171 1 14 1 173 1 29 2 253 4 48 1 131 1 219 1 67 2 133 2 257 3 341 1 154 1 96 1 
179 2 100 1 233 2 76 4 293 1 350 4 211 2 22 1 298 4 324 1 356 1 357 1 326 3 169 4 171 2 14 1 173 2 29 3 253 7 48 2 131 1 219 1 67 4 133 4 257 5 196 1 341 2 154 1 96 1 
296 1 121 1 299 1 
296 1 345 1 
311 1 
296 1 292 1 
142 1 296 3 311 1 121 2 159 1 292 1 260 1 
296 1 292 1 260 1 
296 1 24 1 
35 3 138 1 139 1 118 1 0 3 249 2 173 1 236 1 40 7 111 1 294 2 241 1 32 1 211 1 281 1 80 1 313 4 
35 3 138 1 139 1 118 1 0 3 249 2 173 1 236 1 40 7 111 1 294 2 241 1 32 1 211 1 281 1 80 1 313 4 
35 3 138 1 139 1 118 1 0 3 13 1 249 2 173 1 236 1 40 7 111 1 294 2 241 1 32 1 211 1 281 1 80 1 313 4 
138 1 343 1 35 8 179 2 286 1 118 2 139 4 0 12 52 3 207 1 145 1 236 2 40 26 238 1 241 1 294 4 211 3 148 3 80 1 269 2 303 1 363 1 328 1 249 3 173 3 48 2 111 1 32 2 281 2 309 1 341 2 135 1 313 14 
35 4 138 1 286 2 118 1 139 1 0 4 145 2 236 1 40 9 238 1 294 3 211 1 42 1 80 1 269 4 328 2 249 2 173 1 111 1 32 1 309 2 281 1 224 1 313 5 
137 1 263 1 203 1 18 1 232 1 74 1 75 1 291 1 158 1 347 1 164 1 165 1 352 1 127 1 325 1 361 2 170 1 329 1 217 2 193 1 110 1 280 1 335 1 153 1 369 1 340 1 34 1 
137 1 263 1 203 1 97 1 18 1 232 1 290 1 74 1 75 1 291 1 158 1 164 1 165 1 352 1 127 1 325 1 361 3 170 1 329 2 217 2 110 1 335 2 88 1 153 1 369 1 340 1 34 1 
263 1 203 1 18 1 232 1 170 1 329 1 290 1 74 1 291 1 217 2 158 1 110 1 164 1 165 1 335 2 352 1 88 1 153 1 340 1 325 1 34 1 361 2 
263 2 230 1 97 1 120 1 158 1 292 1 54 1 164 1 240 1 210 1 103 1 3 1 352 2 296 1 127 1 354 1 45 1 361 1 170 1 329 1 62 1 110 2 117 1 153 2 369 1 340 2 34 1 260 1 156 1 
137 1 263 1 203 1 18 1 232 1 74 1 75 1 291 1 158 1 347 1 164 1 165 1 352 1 127 1 325 1 361 2 170 1 329 1 217 2 110 1 280 1 335 1 88 1 153 1 369 1 340 1 34 1 
276 1 
230 1 100 1 120 1 158 2 292 1 76 2 164 1 78 1 351 1 210 1 103 2 352 2 296 1 298 2 324 1 170 2 169 1 60 1 109 2 131 1 218 1 257 1 117 1 116 1 34 2 154 1 260 1 156 1 
84 1 130 1 25 1 182 1 274 1 161 1 124 1 235 1 144 1 76 2 125 1 209 1 366 1 166 1 220 1 89 1 168 1 298 2 261 2 
182 1 161 1 144 1 235 1 124 1 346 1 125 1 76 3 209 1 166 1 350 1 298 3 130 1 84 1 25 1 60 1 274 1 109 1 220 1 366 1 113 1 89 1 261 3 96 1 
84 1 130 1 25 1 182 1 274 1 161 1 124 1 235 1 144 1 76 2 125 1 209 1 366 1 166 1 220 1 258 1 89 1 168 1 298 2 261 2 
84 1 130 1 25 1 60 1 182 1 273 1 274 1 109 1 161 1 124 1 235 1 144 1 76 3 125 1 209 1 220 1 366 1 166 1 113 1 258 1 89 1 168 1 298 3 261 2 
100 1 182 1 161 1 144 1 235 1 124 1 76 3 125 1 209 1 166 1 168 1 298 3 324 1 326 1 270 1 130 1 84 1 25 1 10 1 169 1 60 1 274 1 109 1 253 1 131 1 218 1 152 1 366 1 220 1 257 1 258 1 70 1 89 1 282 1 71 1 261 2 
100 1 182 1 161 1 144 1 235 1 124 1 125 1 76 3 209 1 166 1 167 1 168 1 298 3 324 1 326 1 57 1 270 1 130 1 84 1 25 1 10 1 169 1 60 1 274 1 109 1 131 1 152 1 65 1 218 1 220 1 366 1 257 1 258 1 70 1 89 1 282 1 71 1 261 2 
100 1 182 1 161 1 144 1 235 1 124 1 125 1 76 3 209 1 166 1 167 1 168 1 298 3 324 1 326 1 57 1 270 1 130 1 84 1 25 1 10 1 169 1 60 1 274 1 109 1 131 1 152 1 65 1 218 1 220 1 366 1 257 1 258 1 70 1 89 1 282 1 71 1 261 2 
161 2 124 1 319 1 76 4 125 1 209 1 166 1 322 1 167 1 324 1 44 2 84 1 130 1 169 1 85 1 274 2 47 1 131 1 218 1 220 2 89 1 91 1 282 2 96 1 100 1 182 2 235 1 144 1 295 1 350 1 298 4 55 1 58 1 25 1 60 2 109 2 253 2 64 2 365 1 366 1 257 1 70 2 259 1 71 1 261 2 
84 1 130 1 25 1 27 1 182 1 274 1 161 1 124 1 235 1 144 1 76 2 125 1 209 1 366 1 166 1 220 1 258 1 89 1 168 1 298 2 261 2 
84 1 130 1 25 1 27 1 182 1 274 1 161 1 124 1 235 1 144 1 76 2 125 1 209 1 366 1 166 1 220 1 258 1 89 1 168 1 298 2 261 2 
231 1 100 1 182 1 161 1 144 1 235 1 124 1 76 3 125 1 209 1 166 1 298 3 324 1 44 1 58 1 130 1 84 1 25 1 169 1 60 1 274 1 109 1 64 1 253 1 131 1 218 1 366 1 220 1 257 1 70 1 89 1 282 1 71 1 261 2 
35 2 138 1 72 1 286 1 287 1 0 3 328 1 249 1 304 1 330 2 173 1 145 1 40 6 111 1 294 2 126 1 32 1 211 1 309 1 281 1 212 1 299 1 80 1 199 1 313 3 269 2 
285 1 35 2 286 2 72 1 179 2 139 1 287 4 0 6 51 1 52 3 1 1 145 2 40 14 294 1 211 1 148 3 212 2 4 1 269 4 363 1 328 2 304 11 330 1 173 2 332 1 176 1 15 1 48 1 309 2 115 1 341 2 199 11 313 8 
285 1 286 1 72 1 287 1 0 1 182 1 158 1 292 1 145 1 40 2 164 1 21 1 103 1 296 1 352 1 212 1 43 1 358 1 359 1 269 2 5 1 170 1 328 1 330 1 274 2 332 1 176 1 365 1 334 1 134 1 220 2 309 1 91 1 283 1 34 1 260 1 284 1 313 1 
35 5 72 2 202 1 0 11 158 1 161 1 40 21 77 1 164 1 211 4 43 1 212 2 80 1 269 4 46 2 170 1 328 2 330 1 274 2 173 4 332 1 48 2 220 2 281 1 222 1 337 2 91 1 341 2 283 1 138 1 285 1 286 2 179 2 139 1 287 6 181 1 182 1 292 1 145 2 294 4 102 1 103 1 21 1 352 1 296 1 358 1 359 1 150 1 304 6 365 1 111 1 255 1 32 1 309 2 34 1 260 1 199 6 313 10 
285 1 286 1 72 1 230 1 0 1 120 1 158 2 292 1 145 1 40 2 164 1 210 1 103 1 352 2 296 1 212 1 269 2 362 1 170 2 328 1 250 1 151 1 176 1 309 1 117 1 34 2 260 1 313 1 156 1 
35 1 286 1 72 1 179 1 287 1 0 2 182 1 145 1 40 3 294 1 295 1 211 1 212 1 104 1 269 2 190 1 328 1 304 1 274 1 173 1 332 1 48 1 365 1 220 1 309 1 91 1 341 1 199 1 313 1 
35 1 72 1 286 1 179 1 139 1 287 1 106 1 328 1 304 1 173 1 145 1 40 2 126 1 309 1 212 1 199 1 269 2 313 2 
35 1 72 1 286 1 287 1 0 2 328 1 304 1 108 1 48 1 145 1 40 2 294 1 126 1 309 1 211 1 212 1 199 1 269 2 
35 2 179 1 286 1 72 1 287 2 139 1 0 2 145 1 40 4 126 1 294 1 211 1 212 1 269 2 328 1 304 2 173 1 48 1 309 1 341 1 199 2 313 2 
35 1 72 1 286 1 179 1 139 1 287 1 106 1 328 1 304 1 250 1 173 1 145 1 40 2 309 1 212 1 199 1 269 2 313 2 
35 1 72 1 286 1 287 1 0 2 328 1 304 1 250 1 108 1 48 1 145 1 40 2 294 1 309 1 211 1 212 1 199 1 269 2 
35 2 179 1 286 1 72 1 287 2 139 1 0 2 145 1 40 4 294 1 211 1 212 1 269 2 328 1 250 1 304 2 173 1 48 1 309 1 341 1 199 2 313 2 
35 2 179 1 286 1 72 1 287 2 139 1 0 2 145 1 40 4 294 1 211 1 212 1 269 2 328 1 304 2 173 1 48 1 309 1 341 1 199 2 313 2 
285 1 72 1 286 1 0 1 158 1 292 1 145 1 40 2 164 1 21 1 103 1 352 1 296 1 212 1 358 1 269 2 170 1 328 1 330 1 274 1 176 1 220 1 222 1 309 1 283 1 34 1 260 1 313 1 
285 1 72 1 286 1 0 1 158 1 292 1 145 1 162 1 40 2 164 1 21 1 103 1 352 1 296 1 212 1 269 2 129 1 170 1 328 1 330 1 274 1 176 1 306 1 220 1 309 1 34 1 260 1 313 1 
35 2 179 1 286 1 72 1 287 2 139 1 0 2 145 1 40 4 294 1 211 1 212 1 269 2 328 1 304 2 173 1 332 1 48 1 309 1 341 1 199 2 313 2 
35 2 179 1 72 1 286 1 139 1 287 2 0 2 158 1 292 1 145 1 40 4 164 1 294 1 102 1 211 1 21 1 352 1 296 1 212 1 358 1 269 2 170 1 328 1 304 2 173 1 274 1 48 1 193 1 220 1 222 1 309 1 341 1 283 1 34 1 199 2 260 1 313 2 
35 1 286 1 72 1 179 1 139 1 287 1 0 1 182 1 145 1 40 3 295 1 211 1 212 1 269 2 189 1 190 1 328 1 304 1 274 1 173 1 332 1 48 1 365 1 220 1 309 1 91 1 341 1 199 1 313 2 
228 1 35 3 286 3 179 3 139 2 0 14 289 1 101 1 37 2 52 3 208 1 145 3 238 1 40 27 321 1 294 1 79 1 211 3 41 1 42 1 266 1 148 3 269 6 363 3 328 3 272 1 173 3 48 3 367 1 307 1 69 1 309 3 225 1 341 3 198 3 313 13 
228 1 35 4 286 4 179 3 139 2 0 12 289 1 101 1 37 2 52 3 208 1 145 4 238 2 40 26 321 1 294 2 79 1 211 2 41 1 42 1 266 1 148 3 269 8 363 3 328 4 272 1 173 3 48 2 367 1 307 1 69 1 309 4 225 1 341 3 198 3 313 14 
138 1 228 1 35 3 286 1 179 2 139 1 0 11 289 1 101 1 37 1 52 2 208 1 145 1 40 23 321 1 294 2 211 3 42 1 148 2 80 1 269 2 363 2 328 1 249 1 272 1 173 3 48 2 111 1 367 1 32 1 69 1 281 1 309 1 225 1 341 2 198 2 313 12 
35 4 286 2 179 2 139 2 0 7 37 1 52 1 122 1 208 1 145 2 40 14 294 2 211 2 79 2 42 1 266 1 148 1 269 4 363 1 328 2 173 2 48 2 69 1 307 1 309 2 225 1 341 2 198 2 313 7 
228 1 35 2 286 3 179 2 139 1 0 8 289 1 101 1 37 2 52 2 208 1 145 3 238 2 40 18 321 1 294 1 211 1 42 1 148 2 269 6 328 3 363 2 272 1 173 2 48 1 367 1 69 2 309 3 225 1 341 2 198 2 313 10 
285 1 286 1 72 1 0 1 182 2 205 1 158 2 292 1 145 1 40 2 164 1 183 1 352 1 296 1 212 1 82 1 269 2 362 2 170 2 328 1 63 1 274 2 332 1 151 1 176 1 132 1 220 2 309 1 34 2 136 1 313 1 
137 1 203 1 18 1 232 1 170 2 74 1 217 2 158 2 193 1 254 1 110 1 164 1 163 1 165 1 352 1 88 1 23 1 34 2 325 1 
137 1 203 1 18 1 232 1 170 1 74 1 217 2 158 1 110 1 164 1 165 1 88 1 352 1 23 1 34 1 325 1 302 1 
230 1 120 1 206 1 158 1 292 1 164 1 210 1 3 1 103 1 296 1 352 2 45 1 170 1 254 1 110 1 117 1 34 1 260 1 156 1 
137 1 203 1 18 1 232 1 170 1 74 1 217 2 158 1 254 1 110 1 163 1 164 1 165 1 352 1 88 1 23 1 34 1 325 1 
114 1 
229 1 350 1 169 1 257 1 299 1 83 1 96 1 
100 1 76 1 350 2 298 1 324 1 326 1 270 1 10 1 169 1 60 1 109 1 253 1 131 1 152 1 218 1 257 1 96 1 
179 1 100 2 99 1 345 2 121 1 159 1 158 1 160 1 124 1 292 1 76 2 164 1 350 3 211 1 103 1 296 4 352 2 244 1 298 2 324 2 326 3 46 1 8 1 169 3 216 1 170 1 60 1 173 1 109 2 253 6 174 1 175 1 48 1 131 2 218 2 67 3 133 3 257 4 341 1 34 1 154 1 260 1 
228 1 179 2 141 1 119 1 100 2 101 1 52 1 76 1 321 1 350 5 351 1 211 2 298 1 148 1 324 2 267 2 326 3 363 1 169 5 272 1 60 1 173 2 109 1 253 6 131 2 48 2 218 2 67 5 133 5 367 1 257 8 339 1 341 2 154 1 96 2 
202 1 141 1 100 1 182 1 161 1 319 1 76 1 295 1 211 1 322 1 298 1 324 1 267 2 57 1 169 2 274 1 173 2 47 1 131 1 218 1 365 1 111 1 220 1 32 1 281 1 257 2 91 1 259 1 
229 1 100 1 169 1 131 1 218 1 350 1 257 1 324 1 83 1 96 1 
179 1 169 2 173 1 253 4 48 1 67 2 133 2 350 2 211 1 257 2 341 1 326 2 
350 1 60 1 298 1 109 1 76 1 96 1 
230 1 100 1 120 1 158 2 292 1 76 1 164 1 78 1 351 1 210 1 103 2 352 2 296 1 298 1 324 1 214 1 170 2 169 1 60 1 109 2 131 1 218 1 257 1 117 1 116 1 34 2 154 1 260 1 156 1 
285 1 72 1 286 1 0 1 182 2 158 1 292 1 145 1 319 1 40 1 164 1 295 2 103 1 21 1 352 1 296 1 212 1 358 1 269 2 328 1 170 1 330 1 274 3 365 2 220 3 309 1 223 1 222 1 91 2 34 1 283 1 260 1 
169 1 100 1 253 2 131 1 218 1 133 1 350 2 351 1 257 1 324 1 154 1 326 1 96 1 
92 1 197 1 234 1 
92 1 197 1 234 1 
197 1 364 1 234 1 268 1 275 1 
92 1 197 1 234 1 
197 1 234 1 66 1 
197 1 234 1 66 1 
197 1 234 1 66 1 
197 1 234 1 
204 1 53 1 
138 1 35 2 286 1 0 4 52 1 145 1 40 8 294 2 211 1 42 1 148 1 80 1 269 2 363 1 328 1 249 1 272 1 173 1 111 1 32 1 309 1 281 1 313 4 
138 1 35 2 286 2 0 4 52 1 145 2 40 8 294 2 211 1 42 1 148 1 80 1 269 4 363 1 328 2 249 1 272 1 173 1 111 1 32 1 309 2 281 1 93 1 313 4 
138 1 35 4 228 1 286 3 179 2 139 1 0 10 101 1 52 1 145 3 40 19 238 1 321 1 294 3 211 3 42 1 148 1 80 1 269 6 363 1 328 3 249 1 272 1 173 3 48 2 111 1 367 1 32 1 281 1 309 3 341 2 93 1 313 9 
138 1 35 5 228 1 286 3 179 2 139 2 0 7 101 1 52 1 145 3 238 1 40 17 321 1 294 3 211 2 42 1 148 1 80 1 269 6 363 1 328 3 249 1 272 1 173 3 48 1 111 1 367 1 32 1 281 1 309 3 341 2 93 1 313 10 
138 1 35 2 286 1 0 4 52 1 145 1 40 8 294 2 211 1 42 1 148 1 80 1 269 2 363 1 328 1 249 1 272 1 173 1 111 1 32 1 309 1 281 1 313 4 
35 2 228 1 286 1 179 2 139 1 0 6 101 1 52 1 145 1 40 12 321 1 294 1 211 2 42 1 148 1 269 2 363 1 328 1 272 1 173 2 48 2 367 1 309 1 341 2 313 6 
138 1 228 1 35 5 286 4 179 2 139 2 0 8 101 1 52 1 145 4 40 18 238 2 321 1 294 3 211 2 42 1 148 1 80 1 269 8 363 1 328 4 249 1 272 1 173 3 48 1 111 1 367 1 32 1 281 1 309 4 341 2 93 1 313 10 
228 1 35 6 286 4 179 3 139 3 0 7 101 1 52 1 145 4 40 16 238 2 321 1 294 3 211 2 42 1 148 1 269 8 363 1 328 4 272 1 173 3 48 2 367 1 307 1 309 4 341 3 313 9 
138 2 35 6 139 3 0 4 173 1 40 7 111 1 294 3 32 3 211 1 281 3 80 1 313 3 
138 1 228 1 35 4 286 4 179 2 139 1 0 8 101 1 52 1 145 4 40 18 238 2 321 1 294 3 211 2 42 1 148 1 80 1 269 8 363 1 328 4 249 1 272 1 173 3 48 1 111 1 367 1 32 1 307 1 281 1 309 4 341 2 313 10 
35 3 138 1 286 2 139 1 0 4 328 2 249 1 173 1 145 2 40 8 238 1 111 1 294 2 32 1 211 1 309 2 281 1 80 1 313 4 269 4 
138 1 35 2 0 3 249 1 173 1 40 6 111 1 294 2 32 1 281 1 211 1 299 1 80 1 313 3 
35 2 286 1 179 1 139 1 0 2 328 1 173 1 48 1 145 1 40 4 294 1 211 1 309 1 341 1 93 1 269 2 313 2 
0 1 363 1 52 1 148 1 313 1 40 2 
138 1 35 9 179 2 286 2 139 4 0 12 51 1 52 2 1 1 145 2 40 23 238 2 294 5 211 3 148 2 80 1 269 4 328 2 249 1 12 1 173 3 15 1 48 2 111 1 32 2 281 2 309 2 341 2 313 11 
0 1 148 1 40 1 
52 1 40 1 313 1 
35 3 286 1 46 1 179 1 139 1 0 3 328 1 173 1 48 1 145 1 40 6 294 2 309 1 211 1 341 1 93 1 269 2 313 3 
35 2 228 1 286 1 179 2 139 1 0 6 101 1 52 1 145 1 40 12 321 1 294 1 211 2 42 1 148 1 269 2 363 1 328 1 272 1 173 2 48 2 367 1 309 1 341 2 313 6 
35 2 139 1 0 3 173 1 40 6 111 1 294 1 32 1 211 1 281 1 313 3 
35 2 138 1 286 1 139 1 0 2 328 1 12 1 145 1 40 3 238 1 294 1 32 1 281 1 309 1 80 1 313 1 269 2 
35 5 286 1 202 1 139 2 0 5 328 1 173 2 145 1 40 10 111 1 294 3 32 2 309 1 281 2 211 2 42 1 269 2 313 5 
35 1 286 1 179 1 139 1 328 1 173 1 145 1 40 2 309 1 42 1 269 2 313 2 
35 2 286 1 179 1 139 1 0 2 328 1 173 1 48 1 145 1 40 4 294 1 211 1 309 1 42 1 341 1 269 2 313 2 
35 2 286 3 139 1 0 2 328 3 12 1 145 3 238 1 40 3 294 1 307 1 32 1 309 3 281 1 42 1 269 6 313 1 
138 1 343 1 35 10 286 5 179 2 139 4 0 15 52 3 145 5 238 2 40 29 294 6 211 4 42 1 148 3 80 1 269 10 303 1 363 1 328 5 249 1 12 1 173 4 48 2 111 2 32 3 307 1 281 3 309 5 341 2 93 1 135 1 313 14 
220 1 19 1 265 1 182 1 330 1 274 1 125 1 
6 1 265 1 107 1 182 1 330 1 274 1 125 1 320 1 19 1 220 1 186 1 371 1 
170 1 103 1 120 1 299 1 158 1 34 1 
170 1 182 1 330 1 274 2 158 1 292 1 365 1 164 1 220 2 21 1 103 1 296 1 352 1 43 1 91 1 34 1 260 1 358 1 
130 1 149 1 170 1 182 2 330 1 274 2 158 1 161 1 235 1 292 2 365 2 164 1 220 2 21 1 296 3 352 1 43 1 91 1 187 1 34 1 24 1 260 2 358 1 
130 1 129 1 149 1 170 2 182 2 330 1 274 2 158 2 161 1 235 1 292 2 365 2 164 1 220 2 21 1 296 3 352 1 43 1 91 1 187 1 34 2 24 1 260 2 188 1 
149 1 170 3 345 1 158 3 109 1 121 1 124 1 292 1 76 2 164 1 350 1 308 1 103 1 352 1 296 4 242 1 298 2 187 1 34 3 24 1 260 1 188 1 96 1 
149 1 8 1 170 3 345 1 158 3 109 1 121 1 124 1 292 1 76 2 164 1 350 1 103 1 352 1 296 4 298 2 187 1 34 3 24 1 260 1 188 1 96 1 
164 1 170 1 352 1 310 1 158 1 34 1 
362 1 170 7 205 1 158 6 159 1 193 1 292 2 177 1 164 2 103 2 88 1 296 3 352 3 310 1 117 1 178 1 34 7 215 1 260 1 105 1 156 1 
35 2 138 1 286 2 72 2 287 1 0 3 181 1 182 1 158 1 292 1 145 2 40 6 164 1 294 2 102 1 211 1 21 1 296 1 352 1 212 2 43 1 80 1 358 1 269 4 328 2 170 1 249 1 304 1 330 2 173 1 63 1 274 2 332 1 193 1 365 1 111 1 220 2 32 1 281 1 309 2 222 1 91 1 34 1 283 1 199 1 260 1 313 3 
229 1 100 2 99 1 345 1 158 1 121 1 160 1 124 1 76 3 350 1 103 1 296 2 244 1 298 3 324 2 214 1 83 1 8 1 169 1 170 1 60 1 29 1 109 2 131 2 218 2 257 1 34 1 96 1 
170 2 216 1 121 1 158 2 159 1 193 1 292 1 164 1 296 2 352 2 310 1 34 2 260 1 
230 1 170 2 120 1 158 2 292 1 193 1 164 1 210 1 103 1 352 2 296 1 117 1 34 2 260 1 156 1 
230 1 170 2 248 1 158 2 292 1 164 1 210 1 296 1 352 2 117 1 187 1 34 2 260 1 156 1 
170 1 18 1 74 1 158 1 217 1 164 1 103 1 352 1 34 1 325 1 
170 2 205 1 158 2 193 1 292 1 132 1 164 1 88 1 296 1 352 1 34 2 
230 1 120 1 205 1 158 2 292 2 164 2 210 1 103 1 352 3 296 3 105 1 170 3 193 1 117 1 178 1 34 3 260 1 156 1 
230 1 170 3 120 1 205 1 158 2 193 1 292 2 164 2 210 1 103 1 185 1 296 3 352 3 117 1 34 3 178 1 260 1 156 1 
129 1 170 1 182 1 330 1 274 2 158 1 292 1 365 1 164 1 220 2 21 1 103 1 296 1 352 1 43 1 91 1 34 1 260 1 
170 1 158 1 159 1 292 1 177 1 164 1 296 1 352 2 117 1 187 1 34 1 260 1 156 1 
17 1 183 1 264 1 220 1 182 1 157 1 274 1 82 1 136 1 
130 1 17 1 2 1 279 1 264 1 25 1 28 1 157 1 161 1 124 1 235 1 95 1 
17 1 264 1 330 1 28 1 157 1 
130 1 17 2 264 1 25 1 330 1 157 2 28 2 29 1 161 1 124 1 235 1 76 2 2 1 279 1 350 1 297 1 298 2 95 1 96 1 
7 1 11 1 299 1 81 1 
7 1 11 1 329 1 369 1 127 1 81 1 361 1 
263 1 329 1 340 1 
7 1 329 2 11 1 73 1 318 1 347 1 239 1 87 1 369 1 338 1 127 1 81 1 361 2 
7 1 335 1 11 1 329 2 369 1 127 1 81 1 360 1 361 2 
7 1 203 1 18 1 329 1 26 1 217 1 347 1 369 1 127 1 361 1 200 1 
7 1 329 1 369 1 127 1 81 1 347 1 361 1 
11 1 329 1 369 1 127 1 81 2 347 1 361 1 
7 1 315 1 329 2 347 1 369 2 245 1 127 2 81 1 49 1 361 2 
7 2 59 1 11 1 329 3 26 1 347 1 368 1 335 2 369 1 127 1 128 1 81 1 361 3 
203 1 180 1 335 1 18 1 232 1 329 1 369 1 74 1 127 1 217 2 347 1 361 2 
7 2 59 1 11 1 329 4 26 1 347 1 277 1 335 2 369 2 127 2 81 1 361 4 360 1 
7 1 11 1 329 1 369 1 127 1 81 1 347 1 361 1 
7 3 59 1 11 2 329 4 26 1 73 1 318 1 335 2 87 1 369 1 338 1 127 1 81 2 361 4 
7 1 288 1 335 1 11 1 329 2 369 1 90 1 127 1 81 1 347 1 155 1 361 2 
7 1 329 3 11 1 73 2 318 2 347 1 87 1 369 1 127 1 323 1 81 1 361 3 
7 2 300 1 227 2 31 1 
314 1 329 1 369 1 127 1 347 1 361 1 
7 1 368 1 335 1 11 1 329 2 369 1 127 1 81 1 347 1 361 2 
147 1 
7 1 11 1 329 1 369 1 127 1 81 1 347 1 361 1 
7 1 368 1 335 1 11 1 329 3 369 1 318 1 127 1 81 1 347 1 361 3 
7 1 59 1 335 1 329 1 26 1 361 1 
7 1 81 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 80 156 240 352 294 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 80 156 240 352 294 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 80 156 240 352 (355,367) (355,367) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 80 156 240 352 (355,367) (355,367) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 80 156 240 352 (355,367) (355,367) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 80 156 240 352 (355,367) (355,367) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (14,359,360) (14,359,360) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (14,359,360) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (14,359,360) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (35,320) (35,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (14,359,360) (14,359,360) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 49 257 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 49 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 80 156 240 352 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money; | RETURN | 5040 | return null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
352 1 271 1 60 2 256 2 86 1 94 1 153 1 192 4 80 2 156 2 294 1 140 1 240 2 296 4 199 2 
352 1 271 1 60 2 256 2 86 1 94 1 153 1 192 4 80 2 294 1 156 2 140 1 240 2 296 4 199 2 
270 1 352 1 271 2 60 2 256 1 86 1 342 1 355 1 48 1 128 1 153 1 192 4 312 1 367 1 91 1 80 2 156 2 240 2 140 1 296 4 199 2 200 1 
270 1 352 1 271 2 60 2 256 1 86 1 342 1 355 1 48 1 128 1 153 1 192 4 312 1 367 1 91 1 80 2 156 2 240 2 140 1 296 4 199 2 200 1 
270 1 352 1 271 2 60 2 256 1 86 1 342 1 355 1 48 1 128 1 153 1 192 4 312 1 367 1 91 1 80 2 156 2 240 2 140 1 296 4 199 2 200 1 
270 1 352 1 271 2 60 2 256 1 86 1 342 1 355 1 48 1 128 1 153 1 192 4 312 1 367 1 91 1 80 2 156 2 240 2 140 1 296 4 199 2 200 1 
304 2 60 1 256 3 86 1 88 1 260 1 192 4 312 1 91 1 156 2 80 3 240 1 296 4 199 1 373 1 254 1 200 1 301 1 
270 1 271 1 60 1 86 1 289 1 48 1 260 1 192 2 91 1 80 1 296 2 199 1 299 1 254 1 12 1 200 1 
271 1 60 2 256 1 86 1 260 1 192 3 156 1 80 2 140 1 240 1 296 3 199 2 254 1 
292 1 
31 2 266 1 253 1 
2 2 195 2 317 2 328 1 233 2 151 2 20 1 22 2 
305 1 353 1 1 2 126 1 2 2 195 2 101 1 87 2 275 2 151 3 89 1 129 1 8 2 160 1 277 1 217 1 317 2 43 1 202 1 287 1 18 1 19 1 20 1 225 1 167 1 115 1 22 2 77 2 368 1 345 1 51 1 328 1 233 3 297 1 303 1 268 1 170 1 
198 1 2 1 195 1 127 1 317 1 328 1 96 1 233 1 151 1 22 1 
2 2 195 1 127 1 175 1 102 1 151 2 216 1 198 2 317 1 318 1 72 1 186 1 136 1 288 1 22 1 169 1 232 1 328 1 96 1 233 2 266 1 
136 1 195 2 2 2 127 1 102 1 288 1 151 2 22 2 169 1 216 2 198 2 328 1 317 2 232 2 96 1 233 2 266 1 72 1 186 1 
339 1 216 1 232 1 42 1 211 1 
169 1 216 2 159 1 26 1 232 2 266 1 42 1 211 1 
216 1 232 1 42 1 
195 1 2 1 127 1 102 1 151 1 22 1 198 1 216 1 232 1 328 1 317 1 96 1 233 1 211 1 
266 1 
169 1 216 2 26 1 232 2 266 1 42 1 281 1 211 1 
46 1 149 1 204 1 32 2 152 1 276 1 155 1 230 1 169 1 216 5 130 2 26 1 232 5 70 1 370 1 266 1 83 2 42 2 211 2 
292 1 
2 2 195 1 286 1 354 1 151 2 20 1 22 1 198 1 207 1 317 1 233 2 
263 1 347 1 106 1 
255 1 126 1 87 1 287 1 275 1 151 1 20 1 167 1 115 1 77 1 277 1 217 1 233 1 170 1 202 1 268 1 
263 1 194 1 126 1 195 1 2 1 87 1 287 1 275 1 151 2 167 1 115 1 22 1 77 1 277 1 217 1 233 2 280 1 268 1 202 1 170 1 
194 2 195 4 2 5 64 1 151 5 20 1 22 4 252 1 207 1 317 1 233 5 318 1 280 1 13 1 
198 1 2 2 195 2 362 1 96 1 233 2 151 2 22 2 
194 1 2 3 195 3 317 1 233 3 151 3 20 1 22 3 
198 1 2 1 195 1 96 1 233 1 151 1 22 1 
195 1 2 1 354 1 151 1 22 1 198 1 207 1 317 1 233 1 
194 1 1 1 101 1 195 3 2 3 196 1 275 1 151 4 198 2 68 1 8 2 277 1 160 1 280 1 72 1 202 1 286 1 287 1 288 1 18 1 167 1 20 1 115 1 22 3 77 1 207 1 297 1 170 1 303 1 305 1 126 1 87 1 216 1 217 1 317 2 43 1 186 1 136 1 225 1 368 1 51 1 328 1 232 1 233 4 268 1 
194 1 2 2 195 1 233 2 318 1 151 2 20 1 22 1 252 1 
194 2 136 1 195 3 2 3 288 1 151 3 237 1 22 3 216 1 198 1 68 1 207 1 317 1 232 1 233 3 266 1 280 1 72 1 186 1 
194 1 263 1 195 2 2 2 151 2 22 2 207 1 347 1 317 1 233 2 
126 1 87 1 287 1 275 1 151 1 20 1 167 1 115 1 77 1 277 1 217 1 233 1 170 1 202 1 268 1 
126 1 87 1 287 1 275 1 3 1 151 1 20 1 167 1 115 1 77 1 277 1 217 1 233 1 161 1 268 1 
99 1 351 1 305 1 30 1 1 4 329 1 89 2 335 1 8 2 7 1 106 2 337 1 43 1 263 2 244 1 248 1 18 1 225 1 120 1 368 1 231 1 347 2 297 1 303 2 
198 1 2 1 195 1 362 1 233 1 151 1 186 1 22 1 
229 1 173 1 
229 1 173 1 
315 1 134 1 
315 1 134 1 
315 1 134 1 
79 1 229 1 173 1 
229 1 173 1 142 1 
229 2 173 2 315 1 219 1 298 1 134 1 
79 1 229 1 173 1 
79 1 229 1 173 1 
229 1 173 1 206 1 
229 1 173 1 206 1 
229 1 173 1 206 1 
308 1 173 1 150 1 195 2 2 2 309 1 212 1 151 2 4 1 65 1 216 1 92 1 185 1 358 1 135 1 245 1 20 1 22 2 76 1 229 1 24 1 232 1 233 2 142 1 
124 1 173 2 246 1 212 2 103 1 4 2 65 3 323 1 229 2 216 2 346 2 278 1 232 2 92 1 298 1 266 1 185 2 358 2 108 1 
91 1 200 1 312 1 
91 1 299 1 200 1 
91 3 228 1 299 1 107 1 312 2 44 1 
91 2 228 1 299 1 107 1 312 1 332 1 
91 2 228 2 299 1 107 1 312 1 
351 1 31 3 307 2 309 1 32 1 152 1 335 1 238 2 155 2 216 5 130 1 218 1 241 1 42 1 337 1 242 2 282 1 135 1 45 1 243 1 340 1 245 1 248 1 169 1 230 3 26 1 232 5 82 1 266 2 83 1 253 1 211 4 
216 1 232 1 211 1 154 1 
351 1 307 2 31 4 309 1 32 1 335 1 238 2 155 2 216 3 130 1 218 1 241 1 242 1 337 1 282 1 45 1 243 1 204 1 248 1 169 1 230 3 232 3 266 3 83 1 253 2 211 2 
351 2 31 7 307 4 309 2 213 1 32 1 335 2 179 1 238 4 155 4 216 4 130 1 218 1 241 1 242 2 337 2 282 1 45 1 243 2 204 1 248 2 322 1 169 1 230 5 232 4 266 4 83 1 253 3 211 3 
292 1 
126 1 25 1 
364 1 
126 1 217 1 268 1 
126 1 112 1 
126 1 217 1 
126 3 217 1 321 2 138 1 331 1 268 1 
0 2 351 1 272 1 1 7 248 1 341 1 190 1 343 1 214 1 89 4 67 1 23 1 231 3 7 2 53 1 71 1 303 3 
0 2 351 1 272 1 1 7 248 1 341 1 190 1 343 1 214 1 89 4 67 1 23 1 231 3 7 2 53 1 71 1 303 3 
0 2 351 1 272 1 1 7 248 1 341 1 190 1 343 1 214 1 89 4 67 1 23 1 231 3 7 2 53 1 71 1 303 3 188 1 
0 3 351 4 306 1 272 2 61 1 1 31 214 2 89 16 67 2 335 3 8 2 7 5 131 1 71 5 337 3 43 1 201 4 243 3 110 1 341 1 248 4 190 1 224 1 343 1 164 3 225 1 23 2 368 1 231 10 53 1 208 1 297 1 57 1 303 15 
0 2 351 1 306 1 1 9 272 1 214 1 89 5 67 1 8 4 7 3 71 1 43 2 248 1 190 1 343 1 225 2 23 1 368 2 293 1 231 4 53 1 297 2 302 1 303 4 
271 1 14 1 360 1 60 1 162 1 86 1 87 1 275 1 192 1 77 1 327 1 296 1 199 1 
271 1 360 1 60 1 162 1 256 1 87 1 275 1 192 2 77 1 95 1 357 1 296 2 199 1 133 1 
271 1 162 1 95 1 256 1 296 1 87 1 275 1 133 1 192 1 359 1 77 1 
271 2 60 1 162 2 320 1 87 1 287 1 275 1 35 1 192 1 77 1 105 1 357 1 296 1 199 1 
271 1 14 1 360 1 60 1 162 1 86 1 87 1 275 1 192 1 77 1 95 1 296 1 199 1 
148 1 
2 1 32 1 310 1 175 1 151 1 330 1 152 1 259 3 155 1 216 4 198 1 130 1 9 1 42 5 318 1 72 1 93 1 186 1 338 2 136 1 73 1 221 1 288 1 118 1 265 3 168 1 50 3 227 2 230 1 169 3 139 2 26 2 232 4 348 2 233 1 266 3 143 1 83 1 209 1 253 2 300 1 267 5 
2 1 32 1 310 1 175 1 151 1 330 1 152 1 259 3 155 1 216 4 198 1 130 1 9 1 318 1 42 5 72 1 93 1 186 1 338 2 136 1 73 1 221 1 288 1 118 1 265 3 168 1 50 3 227 2 230 1 169 3 139 2 26 2 232 4 348 2 233 1 266 3 143 1 83 1 209 1 253 2 300 1 267 5 
100 2 2 1 151 1 330 1 152 1 333 2 155 1 198 1 9 1 72 1 338 2 73 1 288 1 168 1 169 3 26 2 348 2 83 1 349 1 300 1 31 2 125 1 32 1 175 1 259 2 216 4 130 1 318 1 42 4 93 1 186 1 136 1 265 2 50 2 230 1 232 4 233 1 266 3 267 4 
2 1 275 2 330 1 151 1 152 1 155 2 198 1 157 1 9 1 277 1 72 1 338 2 15 1 74 1 73 1 287 2 288 1 167 1 168 1 77 2 169 3 26 3 348 2 83 1 253 2 300 1 31 2 125 1 174 1 126 1 32 1 87 2 310 1 175 1 259 2 216 5 130 1 217 1 218 1 42 6 318 1 93 1 186 1 136 1 265 2 193 1 50 2 227 2 230 2 139 2 232 5 233 1 266 4 144 1 267 4 
2 1 175 1 151 1 330 1 259 1 216 3 198 1 9 1 318 1 42 2 281 1 72 1 93 1 186 1 136 1 73 1 288 1 168 1 169 2 26 1 232 3 233 1 266 2 267 2 
136 1 73 1 2 1 175 1 288 1 330 1 151 1 265 1 168 1 169 2 198 1 216 2 9 1 232 2 233 1 266 2 318 1 72 1 93 1 267 3 186 1 
2 1 175 1 151 1 330 1 259 1 216 3 198 1 9 1 318 1 42 2 281 1 72 1 93 1 186 1 136 1 73 1 288 1 168 1 265 1 50 1 169 3 26 1 232 3 233 1 266 3 267 3 
195 1 2 2 102 1 151 2 330 1 152 1 155 1 198 2 9 1 72 1 281 1 338 2 73 1 288 1 22 1 168 1 118 1 169 4 26 3 348 2 83 1 209 1 300 1 253 2 29 1 127 1 32 1 310 1 175 1 259 4 216 5 130 1 317 1 42 7 318 1 93 1 186 1 136 1 221 1 265 3 50 4 227 2 230 1 139 2 328 1 232 5 96 1 233 2 266 4 143 1 267 5 
2 1 151 1 330 1 152 1 155 1 198 1 9 1 72 1 338 2 73 1 288 1 168 1 169 3 26 2 348 2 83 1 300 1 253 2 31 2 125 1 32 1 310 1 175 1 259 2 216 4 130 1 318 1 42 4 93 1 186 1 136 1 265 2 50 2 227 2 230 1 139 2 232 4 233 1 266 4 267 4 
2 1 32 1 310 1 175 1 151 1 330 1 259 2 152 1 155 1 216 4 198 1 130 1 9 1 42 4 318 1 72 1 93 1 186 1 338 2 136 1 73 1 288 1 265 2 168 1 118 1 50 2 227 2 230 1 169 3 139 2 26 2 232 4 348 2 233 1 266 3 143 1 83 1 209 1 253 2 300 1 267 4 
2 1 32 1 310 1 175 1 151 1 330 1 259 2 152 1 155 1 216 4 198 1 130 1 9 1 42 4 318 1 72 1 93 1 186 1 338 2 136 1 73 1 288 1 265 2 168 1 118 1 50 2 227 2 230 1 169 3 139 2 26 2 232 4 348 2 233 1 266 3 143 1 83 1 209 1 253 2 300 1 267 4 
31 2 100 2 2 1 32 1 175 1 151 1 330 1 259 2 152 1 333 2 155 1 356 1 216 4 198 1 130 1 9 1 42 4 318 1 72 1 93 1 186 1 338 2 136 1 73 1 288 1 165 1 265 2 168 1 50 2 230 1 169 3 26 2 232 4 348 2 233 1 266 3 143 1 83 1 300 1 349 1 267 4 
292 1 368 1 305 1 30 1 8 2 297 1 18 1 225 1 43 1 
305 2 351 1 61 1 353 1 1 14 89 8 178 1 335 1 7 1 8 4 160 1 40 1 71 1 106 11 337 2 43 2 201 3 263 11 243 2 248 2 189 1 18 1 224 1 290 1 164 3 20 1 225 2 368 2 231 2 347 4 297 2 84 1 303 6 
194 1 305 1 255 1 1 2 353 1 126 1 2 1 195 1 87 1 275 1 151 2 89 1 8 2 277 1 160 1 217 1 280 1 43 1 202 1 264 1 287 1 18 1 20 1 167 1 225 1 115 1 22 1 77 1 368 1 369 1 347 1 233 2 297 1 58 1 84 1 268 1 170 1 303 1 
0 1 194 1 272 1 1 14 195 1 2 1 275 1 151 3 67 1 335 1 336 1 8 6 7 3 160 1 277 2 280 1 106 4 337 1 202 2 243 1 248 2 287 1 18 3 343 1 20 2 250 2 167 2 115 2 22 1 77 1 347 4 297 3 84 1 303 7 170 2 305 3 351 2 353 1 126 2 87 1 89 7 38 1 217 2 41 1 43 3 187 1 263 4 190 1 225 3 368 3 231 3 51 2 53 1 233 3 56 2 268 2 
194 1 30 1 305 2 171 1 353 1 1 2 174 1 2 1 195 1 126 3 34 1 87 7 275 8 176 1 151 1 89 1 8 4 277 2 160 1 39 1 217 2 43 2 319 1 74 1 287 2 18 2 19 2 167 2 225 2 116 1 22 1 77 8 368 2 95 1 327 1 233 1 297 2 350 1 303 1 
305 1 351 1 1 3 195 1 2 1 151 1 89 1 335 1 7 1 8 2 317 1 106 1 337 1 43 1 263 1 243 1 248 1 18 1 225 1 366 1 22 1 368 1 231 1 207 1 347 1 233 1 297 1 84 1 303 2 
263 1 30 1 305 1 1 2 248 1 18 1 329 1 225 1 89 2 368 1 231 1 8 2 347 1 297 1 71 1 106 1 337 1 43 1 
263 1 30 1 305 1 351 1 244 1 1 2 18 1 225 1 335 1 368 1 231 1 7 1 8 2 347 1 297 1 106 1 43 1 303 2 
263 2 351 1 30 1 305 1 243 1 1 4 248 1 18 1 225 1 89 2 335 1 368 1 7 1 231 2 8 2 347 2 297 1 71 1 106 2 337 1 43 1 303 2 
263 1 305 1 1 2 248 1 176 1 18 1 329 1 225 1 89 2 368 1 231 1 8 2 347 1 297 1 71 1 106 1 337 1 43 1 
263 1 305 1 351 1 244 1 1 2 176 1 18 1 225 1 335 1 368 1 231 1 7 1 8 2 347 1 297 1 106 1 43 1 303 2 
263 2 351 1 305 1 243 1 1 4 248 1 176 1 18 1 225 1 89 2 335 1 368 1 7 1 231 2 8 2 347 2 297 1 71 1 106 2 337 1 43 1 303 2 
263 2 351 1 305 1 243 1 1 4 248 1 18 1 225 1 89 2 335 1 368 1 7 1 231 2 8 2 347 2 297 1 71 1 106 2 337 1 43 1 303 2 
305 1 353 1 1 2 126 1 87 1 275 1 151 1 89 1 8 2 277 1 160 1 217 1 43 1 202 1 287 1 18 1 20 1 167 1 225 1 115 1 77 1 368 1 51 1 233 1 297 1 268 1 170 1 303 1 
305 1 353 1 1 2 126 1 87 1 3 1 275 1 151 1 89 1 8 2 277 1 160 1 217 1 43 1 161 1 47 1 287 1 18 1 20 1 167 1 225 1 115 1 77 1 368 1 233 1 297 1 268 1 303 1 
263 2 351 1 305 1 243 1 1 4 248 1 18 1 225 1 89 2 335 1 368 1 7 1 231 2 8 2 347 2 297 1 71 1 106 2 337 1 43 1 84 1 303 2 
351 1 305 1 1 4 126 1 87 1 275 1 151 1 89 2 335 1 7 1 8 2 277 1 217 1 71 1 106 2 337 1 43 1 202 1 263 2 243 1 248 1 18 1 167 1 250 1 225 1 115 1 77 1 368 1 231 2 51 1 327 1 347 2 233 1 297 1 303 2 268 1 170 1 
351 1 305 1 1 3 195 1 2 1 151 1 89 2 335 1 8 2 317 1 71 1 337 1 106 1 43 1 263 1 243 1 248 1 18 1 225 1 22 1 368 1 231 1 207 1 347 1 233 1 297 1 145 1 84 1 303 1 
351 1 61 1 1 9 235 1 89 4 335 1 7 1 8 4 37 1 71 1 337 1 43 2 201 2 243 1 247 1 248 1 224 1 164 1 225 2 121 1 78 1 368 2 293 1 231 2 81 1 141 1 297 2 303 5 
351 1 61 1 1 9 235 1 89 4 335 1 7 1 8 4 37 1 71 1 337 1 43 2 201 2 243 1 247 1 248 1 224 1 164 1 225 2 121 1 78 1 368 2 293 1 231 2 81 1 141 1 297 2 303 5 
0 1 306 1 351 7 272 1 61 2 1 46 235 3 63 1 89 24 67 1 5 1 335 6 7 6 8 4 37 1 71 6 337 6 43 2 109 1 201 4 243 6 248 7 223 1 189 2 190 1 224 2 343 1 164 4 225 2 191 1 121 1 78 1 368 2 293 1 231 12 81 1 141 1 53 1 297 2 269 1 303 22 
351 2 61 1 1 13 235 1 89 6 335 2 7 2 8 4 37 1 71 2 337 2 43 2 284 1 201 2 243 2 247 1 248 2 224 1 164 1 225 2 121 1 78 1 368 2 293 1 231 4 81 1 141 1 122 1 297 2 303 7 
306 2 351 1 1 20 61 2 235 3 63 1 89 11 5 1 335 1 7 1 8 6 37 1 71 1 337 2 43 3 109 1 201 2 243 2 248 2 223 1 164 2 225 3 191 1 121 1 78 1 368 3 293 1 231 2 81 2 141 2 297 3 303 9 269 1 
229 1 124 1 173 1 278 1 212 1 298 1 4 1 185 1 197 1 358 1 
142 1 76 1 
229 1 173 1 212 1 75 1 4 1 185 1 66 1 291 1 358 1 
203 1 79 1 
313 1 219 1 206 1 
124 1 173 1 246 1 212 1 4 1 65 2 323 1 216 1 229 1 346 1 278 1 232 1 92 1 298 1 266 1 185 1 358 1 108 1 
124 1 173 1 246 1 212 1 4 1 65 2 323 1 216 1 229 1 346 1 278 1 232 1 92 1 298 1 266 1 185 1 358 1 108 1 
124 1 173 1 246 1 212 1 4 1 65 2 323 1 216 1 229 1 346 1 278 1 232 1 92 1 298 1 266 1 185 1 358 1 108 1 
203 1 79 1 219 1 
203 1 79 1 219 1 
313 1 206 1 
313 1 219 1 206 1 
308 1 24 1 
308 1 173 1 150 1 309 1 195 2 2 2 212 1 151 2 4 1 65 1 216 1 316 1 185 1 108 1 358 1 135 1 245 1 20 1 76 1 22 2 346 1 229 1 24 1 232 1 233 2 142 1 211 1 
172 1 2 1 233 1 151 1 
147 1 87 2 275 2 365 1 167 1 236 1 21 1 312 1 77 2 91 2 95 1 277 1 327 1 28 1 27 1 299 1 210 1 200 1 44 1 
147 1 87 1 275 1 365 1 167 1 236 1 21 1 312 1 77 1 91 2 95 1 277 1 52 1 27 1 299 1 200 1 44 1 
74 1 174 1 126 1 274 1 87 1 287 1 275 1 167 1 236 1 77 1 295 1 277 1 217 1 28 1 
147 1 87 1 275 1 365 1 167 1 236 1 21 1 312 1 77 1 91 2 95 1 277 1 28 1 27 1 299 1 210 1 200 1 44 1 
262 1 
305 1 1 1 2 2 195 2 101 1 126 1 87 1 275 1 151 3 8 2 160 1 277 1 217 1 317 2 43 1 202 1 287 1 18 1 20 1 225 1 167 1 115 1 22 2 77 1 368 1 51 1 328 1 233 3 297 1 303 1 170 1 268 1 
0 1 31 4 307 2 15 1 32 1 152 1 238 2 155 2 230 1 169 2 130 1 218 1 266 4 83 1 253 2 
292 1 
31 1 32 1 310 1 152 1 155 1 216 1 130 1 42 1 227 1 230 1 169 1 139 1 26 1 232 1 266 2 83 1 253 1 
130 1 277 1 257 1 32 1 87 1 275 1 287 1 83 1 167 1 152 1 49 1 77 1 
351 2 31 6 307 5 61 1 32 2 63 1 152 2 5 1 335 2 238 5 155 4 216 1 130 2 42 1 337 2 109 1 201 1 243 2 16 1 248 2 223 1 164 1 205 1 230 7 169 1 232 1 26 1 266 4 83 2 253 3 269 1 
272 1 32 1 152 1 205 1 334 1 118 1 67 1 216 1 130 1 232 1 83 1 
46 1 32 1 152 1 155 1 169 1 230 1 130 1 370 1 266 1 83 1 
243 2 351 2 307 5 31 10 222 1 248 2 205 2 335 2 238 5 155 5 230 5 266 5 41 1 337 2 253 5 
169 1 216 1 232 1 26 1 266 1 42 1 
234 1 174 1 126 2 32 2 87 4 275 4 311 1 152 1 155 2 216 3 157 1 130 2 158 1 277 3 183 1 217 2 279 2 218 2 10 1 42 4 15 2 74 1 204 1 137 1 287 2 167 2 193 1 77 4 230 2 26 2 232 3 55 1 83 2 268 1 
54 1 4 1 358 1 
325 1 308 1 124 1 4 1 358 1 
54 1 4 1 358 1 
54 1 4 1 358 1 
114 1 4 1 358 1 
114 1 4 1 358 1 
114 1 4 1 358 1 
4 1 358 1 
229 1 173 1 
0 1 351 1 272 1 61 1 1 8 248 1 190 1 343 1 164 1 89 4 225 1 67 1 5 1 293 1 368 1 231 2 7 2 8 2 53 1 297 1 43 1 201 1 303 4 
0 1 351 1 272 1 1 11 61 1 89 6 67 1 5 1 7 2 8 4 71 1 337 1 43 2 201 2 243 1 248 2 190 1 224 1 343 1 164 1 225 2 166 1 293 1 368 2 231 3 53 1 297 2 303 5 
351 2 306 1 1 13 61 1 63 1 89 6 5 1 335 2 8 6 7 1 71 1 337 2 43 3 109 1 201 1 243 2 248 2 223 1 164 1 166 1 225 3 368 3 293 1 231 2 297 3 303 7 269 1 
306 1 351 1 1 11 61 1 63 1 89 7 5 1 335 1 8 6 7 1 71 1 337 2 43 3 109 1 201 1 243 2 248 2 223 1 164 1 166 1 225 3 368 3 293 1 231 2 297 3 303 4 269 1 
0 1 351 1 272 1 61 1 1 8 248 1 190 1 343 1 164 1 89 4 225 1 67 1 5 1 293 1 368 1 231 2 7 2 8 2 53 1 297 1 43 1 201 1 303 4 
351 2 1 12 61 1 63 1 89 6 5 1 335 2 8 2 7 1 71 1 337 2 43 1 109 1 201 1 243 2 248 2 223 1 164 1 225 1 368 1 293 1 231 2 297 1 303 6 269 1 
351 1 306 2 1 12 61 1 63 1 89 7 5 1 335 1 8 8 7 1 71 1 337 2 43 4 109 1 201 1 243 2 248 2 223 1 164 1 166 1 225 4 368 4 293 1 231 2 297 4 303 5 269 1 
351 1 306 2 1 12 61 1 63 1 89 7 5 1 335 1 8 8 7 2 71 2 337 2 43 4 109 1 201 1 243 2 247 1 248 2 223 1 164 1 225 4 293 1 368 4 231 4 297 4 303 5 269 1 
351 1 1 7 272 3 248 1 190 2 343 1 89 3 67 3 7 3 231 6 53 1 71 3 303 4 
351 1 306 2 1 12 61 1 63 1 89 7 5 1 335 1 8 8 7 1 71 1 337 2 43 4 109 1 201 1 243 2 247 1 248 2 223 1 164 1 225 4 293 1 368 4 231 2 297 4 303 5 269 1 
0 1 351 1 306 1 1 8 272 1 248 1 190 1 343 1 89 4 225 2 67 1 368 2 231 3 7 2 8 4 53 1 297 2 71 1 43 2 303 4 
292 1 
351 1 243 1 1 4 248 1 166 1 225 1 89 2 335 1 368 1 7 1 231 2 8 2 297 1 71 1 337 1 43 1 303 2 
351 1 243 1 61 1 1 7 248 1 224 1 164 1 89 3 335 1 7 1 231 2 71 1 337 1 201 2 303 4 
0 1 351 3 306 2 272 2 1 23 89 11 67 2 335 2 7 5 8 4 40 1 71 4 337 2 43 2 201 2 243 2 248 3 189 1 17 1 190 1 224 1 343 1 164 2 225 2 368 2 231 9 53 1 297 2 303 12 
1 1 303 1 201 1 
1 1 164 1 89 1 
243 1 351 1 1 6 248 1 225 1 166 1 89 3 335 1 368 1 8 2 231 3 7 2 297 1 41 1 71 1 337 1 43 1 303 3 
351 2 1 12 61 1 63 1 89 6 5 1 335 2 8 2 7 1 71 1 337 2 43 1 109 1 201 1 243 2 248 2 223 1 164 1 225 1 368 1 293 1 231 2 297 1 303 6 269 1 
351 1 1 6 272 1 248 1 89 3 67 1 7 1 231 2 53 1 71 1 303 3 
306 1 272 1 1 3 17 1 190 1 343 1 89 1 225 1 67 1 368 1 231 2 7 1 8 2 297 1 71 1 43 1 303 2 
231 1 7 1 272 1 334 1 67 1 
1 2 248 1 225 1 89 2 293 1 368 1 8 2 231 1 297 1 71 1 337 1 43 1 
351 1 243 1 1 4 248 1 225 1 89 2 335 1 293 1 368 1 7 1 231 2 8 2 297 1 71 1 337 1 43 1 303 2 
306 1 1 3 272 1 247 1 17 1 225 3 89 1 67 1 293 1 368 3 8 6 7 1 231 2 297 3 71 1 43 3 303 2 
0 1 306 2 351 5 272 3 61 1 1 34 89 16 67 3 335 3 8 10 7 7 131 1 71 5 337 3 43 5 201 4 243 3 247 1 248 5 17 1 190 1 224 1 343 1 164 3 166 1 225 5 368 5 293 1 231 12 53 2 208 1 297 5 57 1 303 18 
2 1 233 1 151 1 318 1 20 1 6 1 252 1 
62 1 2 1 151 1 20 1 36 1 6 1 252 1 239 1 97 1 233 1 318 1 11 1 
292 1 87 1 275 1 287 1 77 1 
194 1 126 1 195 1 2 1 87 1 287 1 275 1 151 2 20 1 167 1 115 1 22 1 77 1 277 1 217 1 233 2 268 1 202 1 
194 1 2 2 195 1 126 3 87 1 275 1 151 2 90 1 198 1 277 1 217 2 279 1 186 1 202 1 136 1 112 1 20 1 167 1 115 1 22 2 77 1 233 2 268 2 
194 1 2 2 195 1 126 3 87 2 3 1 275 2 151 2 90 1 198 1 277 1 217 2 279 1 220 1 186 1 136 1 112 1 20 1 167 1 115 1 22 2 77 2 233 2 268 2 
2 1 195 1 126 4 127 1 87 1 102 1 275 1 258 1 151 1 90 1 198 1 216 2 182 1 277 1 217 1 317 1 279 1 42 1 72 1 321 1 112 1 167 1 22 1 77 1 169 1 25 1 328 1 232 2 96 1 233 1 266 1 268 1 
2 1 195 1 126 4 127 1 87 1 102 1 275 1 151 1 90 1 198 1 216 2 277 1 217 1 317 1 279 1 42 1 72 1 321 1 112 1 167 1 344 1 22 1 77 1 169 1 25 1 328 1 232 2 96 1 233 1 266 1 268 1 
277 1 87 1 275 1 167 1 350 1 77 1 
98 1 171 1 126 3 137 1 34 1 87 6 287 2 275 7 19 1 167 2 331 1 77 7 95 1 327 1 277 3 39 1 183 1 217 2 319 1 350 1 268 1 
194 1 0 1 272 1 1 6 195 1 2 1 275 1 151 2 67 1 8 4 7 2 277 1 106 1 202 1 111 1 248 1 18 2 343 1 250 1 167 1 20 2 115 1 22 1 77 1 347 1 297 2 84 1 170 1 303 3 305 2 351 1 126 1 87 1 89 3 217 1 43 2 263 1 190 1 225 2 368 2 231 2 51 1 327 1 53 1 233 2 56 1 268 1 
272 1 126 2 32 2 87 1 275 1 177 1 152 2 334 1 67 1 155 1 216 3 130 2 158 1 42 2 72 1 46 1 321 1 287 1 113 1 205 1 344 1 77 1 169 1 25 1 232 3 26 1 370 1 266 1 83 2 123 1 211 1 
277 1 87 1 275 1 167 1 49 1 350 1 77 1 
74 1 174 1 126 1 87 4 287 1 275 4 249 1 167 1 77 4 277 1 327 1 217 1 220 1 
126 1 137 1 87 2 275 2 163 1 167 1 77 2 277 2 183 1 217 1 279 1 10 1 55 1 268 1 
91 1 277 1 87 1 275 1 287 1 299 1 365 1 167 1 200 1 77 1 
126 1 87 2 275 2 167 1 77 2 104 1 95 1 327 1 277 1 217 1 319 1 
171 1 174 1 74 1 126 3 87 4 34 1 287 1 275 5 249 1 167 2 77 5 327 1 277 2 217 2 279 1 319 1 
171 1 174 1 74 1 126 3 87 4 287 1 275 5 249 1 167 2 77 5 324 1 327 1 277 2 217 2 279 1 319 1 
194 1 126 1 195 1 2 1 87 1 287 1 275 1 3 1 151 2 20 1 167 1 115 1 22 1 77 1 277 1 217 1 233 2 268 1 
98 1 126 1 137 1 87 1 275 1 167 1 331 1 77 1 277 2 183 1 217 1 279 1 268 1 
226 1 372 1 20 1 215 1 283 1 
2 1 195 1 127 1 102 1 151 1 215 1 68 1 180 1 216 2 198 2 317 1 72 1 283 1 186 1 285 1 136 1 288 1 22 1 226 1 119 1 169 1 328 1 232 2 96 1 233 1 266 1 372 1 211 1 
226 1 172 1 372 1 215 1 
119 1 180 1 372 1 
270 1 60 1 80 1 296 2 86 1 199 1 153 1 254 1 260 1 192 2 
80 1 156 1 240 1 184 1 
80 1 260 1 
292 1 
60 1 80 1 296 1 199 1 254 1 260 1 192 1 
146 1 271 1 296 1 
270 2 60 1 361 1 85 1 86 1 192 3 260 1 80 1 296 3 314 1 199 1 254 1 
304 1 60 1 80 1 256 1 296 2 199 1 254 1 260 1 192 2 
91 1 60 1 80 1 156 1 296 1 86 1 199 1 373 1 200 1 312 1 192 1 
60 1 80 1 296 1 86 1 199 1 260 1 192 1 
60 1 296 1 86 1 199 1 254 1 260 2 192 1 
60 2 86 1 33 1 260 1 192 2 80 1 296 2 199 2 371 1 59 1 
352 1 60 1 80 1 156 1 240 1 296 1 86 1 199 1 153 1 192 1 
60 1 256 1 363 1 86 1 260 1 192 2 312 1 91 2 80 1 296 2 199 1 299 1 254 1 44 1 200 1 
304 1 60 2 256 2 86 1 88 1 260 1 192 4 156 1 80 2 240 1 296 4 199 2 254 1 
60 1 80 1 296 1 86 1 199 1 254 1 260 1 192 1 
270 1 60 1 256 2 361 1 260 2 192 4 156 1 80 3 240 1 314 1 296 4 184 1 199 1 254 2 
60 1 256 1 86 1 94 1 260 1 192 2 117 1 80 1 69 1 296 2 199 1 254 1 
270 2 60 1 361 2 86 1 192 3 260 1 80 1 314 1 296 3 199 1 254 1 261 1 
326 1 80 2 181 2 251 1 
60 1 296 1 86 1 199 1 132 1 192 1 
60 1 86 1 153 1 192 1 260 1 296 1 184 1 199 1 254 1 
273 1 
60 1 80 1 296 1 86 1 199 1 254 1 260 1 192 1 

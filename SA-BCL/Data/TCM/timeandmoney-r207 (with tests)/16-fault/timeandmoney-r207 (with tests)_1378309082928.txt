#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (210,346) (210,346) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (210,346) (210,346) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (210,346) (210,346) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (210,346) (210,346) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 176 247 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 176 247 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 176 247 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 176 247 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 176 247 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 58 254 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 194 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 199 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 332 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 58 254 239 329 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 46 18 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 176 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 194 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 176 (9,179) (9,179) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (33,165,183,244) (33,165,183,244) 32 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
226 2 33 2 89 1 21 1 165 1 244 3 350 1 304 1 82 3 126 1 183 2 57 1 173 1 
277 1 301 1 321 1 210 1 33 1 346 1 244 2 350 1 82 2 169 1 183 1 184 1 28 1 173 1 256 1 
277 1 301 1 321 1 210 1 33 1 346 1 244 2 350 1 82 2 169 1 183 1 184 1 28 1 173 1 256 1 
277 1 301 1 321 1 210 1 33 1 346 1 244 2 350 1 82 2 169 1 183 1 184 1 28 1 173 1 256 1 
277 1 301 1 321 1 210 1 33 1 346 1 244 2 350 1 82 2 169 1 183 1 184 1 28 1 173 1 256 1 
277 1 226 3 301 1 33 1 89 2 165 3 244 4 350 1 304 1 269 2 82 4 126 1 183 1 184 1 57 1 365 1 174 1 366 1 
226 1 97 1 277 1 321 1 301 1 33 1 78 1 244 2 149 1 350 1 82 2 126 1 183 1 57 1 173 1 256 1 
277 1 226 5 356 1 301 1 163 1 358 1 33 2 212 1 89 4 21 1 165 7 244 9 350 1 269 2 304 3 82 9 126 1 183 2 184 1 57 1 365 1 174 1 173 1 366 1 
277 1 226 5 356 1 301 1 163 1 358 1 33 2 212 1 89 4 21 1 165 7 244 9 350 1 269 2 304 3 82 9 126 1 183 2 184 1 57 1 365 1 174 1 173 1 366 1 
96 1 42 1 98 1 331 1 135 1 146 1 231 1 154 1 345 1 150 1 351 1 27 1 262 1 264 1 
227 1 
42 2 227 1 125 1 134 1 154 2 59 1 138 1 262 1 
113 2 42 5 227 1 134 1 12 1 43 1 154 5 243 2 213 1 138 1 4 1 15 1 5 1 360 2 292 1 196 1 59 2 66 1 262 2 
227 1 194 1 134 1 
227 1 208 1 216 2 
98 2 331 1 231 2 146 2 336 1 27 2 150 2 264 2 
201 1 98 2 1 1 323 2 231 2 302 1 203 1 81 1 205 1 181 1 282 1 24 1 236 1 26 1 109 1 27 2 287 1 264 3 143 1 331 1 117 2 146 2 336 1 72 1 14 2 13 1 215 1 246 2 190 1 150 3 55 2 315 1 272 1 318 1 60 1 255 1 131 1 
351 1 98 1 331 1 135 1 231 1 146 1 345 1 27 1 150 1 264 1 
42 1 227 1 134 1 20 1 231 1 118 1 154 1 207 1 7 1 150 1 351 1 17 1 41 1 264 1 
96 1 42 2 98 2 227 1 134 1 20 1 135 1 231 2 154 2 345 1 207 1 351 2 27 2 264 2 331 1 118 1 146 2 150 2 41 1 
42 1 154 1 59 1 262 1 319 1 
42 2 227 1 134 1 154 2 59 1 3 1 138 1 262 1 
42 1 154 1 59 1 
201 1 98 1 323 1 146 1 231 1 258 1 205 1 13 1 325 1 246 1 150 2 55 1 282 1 24 1 236 1 318 1 255 1 65 1 131 1 264 2 
98 1 231 2 146 1 336 2 150 2 220 1 221 1 27 1 264 2 
202 1 344 1 258 1 
201 1 323 1 336 1 13 1 205 1 246 1 150 1 55 1 282 1 24 1 236 1 318 1 76 1 255 1 131 1 264 1 
194 1 336 1 
98 4 230 1 146 4 231 4 336 1 325 1 150 4 56 1 93 1 351 1 220 1 27 1 65 2 264 4 
351 1 98 2 16 1 231 2 146 2 345 1 150 2 264 2 
98 3 231 3 146 3 336 1 27 1 65 1 150 3 264 3 
351 1 98 1 231 1 146 1 345 1 150 1 264 1 
351 1 98 1 231 1 146 1 220 1 221 1 27 1 150 1 264 1 
42 1 201 1 98 3 1 1 20 1 323 1 231 3 154 1 203 1 205 1 207 1 81 1 325 1 181 1 351 1 282 1 24 1 236 1 26 1 109 1 27 2 287 1 65 1 264 4 310 1 331 1 117 2 118 1 146 3 336 1 72 1 14 1 13 1 246 1 190 1 150 4 270 1 55 1 315 1 220 1 318 1 255 1 41 1 131 1 
98 1 17 1 231 2 146 1 336 1 110 1 65 1 150 2 264 2 
114 1 42 1 227 1 98 3 310 1 20 1 146 3 231 3 118 1 154 1 207 1 325 1 150 3 351 1 220 1 27 1 41 1 65 2 264 3 
98 2 344 1 146 2 231 2 258 1 150 2 220 1 27 1 65 1 264 2 
201 1 323 1 336 1 13 1 205 1 246 1 150 1 55 1 282 1 24 1 236 1 318 1 255 1 131 1 264 1 
201 1 323 1 336 1 205 1 246 1 150 1 55 1 248 1 24 1 236 1 318 1 223 1 255 1 131 1 264 1 
0 1 202 1 52 1 330 1 257 1 344 1 70 1 1 1 117 2 258 1 203 2 72 1 14 2 181 1 190 1 103 1 48 1 109 1 287 1 
351 1 98 1 16 1 20 1 231 1 146 1 150 1 264 1 
11 1 245 1 308 1 
11 2 187 1 211 1 339 1 308 2 280 1 
11 1 308 1 
11 1 308 1 
211 1 339 1 
211 1 339 1 
211 1 339 1 
11 1 224 1 308 1 
11 1 224 1 308 1 
11 1 224 1 308 1 
11 1 99 1 308 1 
11 1 99 1 308 1 
11 1 99 1 308 1 
299 1 42 1 98 2 231 2 154 1 104 1 354 1 111 1 162 1 308 1 264 2 68 1 11 1 146 2 334 1 336 1 245 1 166 1 268 1 150 2 36 1 271 1 293 1 342 1 
68 2 299 1 11 2 42 2 227 1 53 1 44 1 154 2 280 1 189 2 104 2 271 3 293 2 172 1 261 1 297 1 111 2 308 2 31 1 
277 2 184 1 252 2 78 1 359 1 
277 1 301 1 184 1 
277 1 301 1 78 1 
277 3 184 2 8 1 252 1 78 1 359 1 
314 1 277 2 184 1 252 1 78 1 359 1 
0 1 42 5 227 1 134 1 43 1 154 5 138 1 22 1 283 1 30 1 66 1 262 4 263 1 113 1 52 1 243 1 148 1 334 1 213 3 266 1 73 1 166 1 54 1 216 1 360 1 217 2 152 1 58 1 59 1 254 1 342 1 
0 3 42 9 227 2 134 1 43 3 154 9 138 1 62 1 185 1 108 1 158 1 262 7 66 1 263 2 113 2 52 3 69 5 164 1 243 2 148 2 334 4 213 8 266 3 73 3 54 1 15 1 216 3 360 2 152 3 364 1 58 3 59 6 254 3 319 5 
0 1 42 3 227 2 134 1 43 1 154 3 208 1 22 1 30 1 262 2 263 1 113 1 52 1 243 1 148 1 334 1 213 3 266 1 73 1 216 2 15 1 360 1 217 1 152 1 58 1 254 1 
0 2 42 4 227 2 134 1 43 2 154 4 208 1 22 1 108 1 30 1 263 1 262 3 113 1 52 2 164 1 243 1 148 1 334 2 213 5 266 2 73 2 216 3 15 1 360 1 217 2 152 2 364 1 58 2 254 2 
77 1 
201 1 194 1 167 1 
201 1 214 1 
201 1 24 1 255 1 
201 1 241 1 
201 1 255 1 
201 3 24 1 324 1 167 2 255 1 123 1 
247 1 143 1 193 1 14 1 307 1 176 1 
247 1 143 1 14 1 307 1 176 1 
247 1 143 1 14 1 307 1 176 1 
247 1 143 1 14 1 307 1 176 1 
247 1 143 1 14 1 307 1 176 1 
201 1 133 2 265 1 100 1 33 1 323 1 145 2 244 1 122 1 246 1 82 1 55 1 259 1 273 1 236 1 183 1 353 1 318 1 173 2 255 1 131 1 328 1 175 2 
277 2 301 1 133 1 323 1 78 1 350 1 82 1 183 1 236 1 184 1 8 1 209 1 145 1 33 1 244 1 338 1 246 1 168 1 55 1 249 1 291 1 38 1 318 1 173 1 175 1 200 1 
226 1 277 2 301 1 133 1 323 1 78 1 350 1 82 2 183 1 236 1 184 1 8 1 209 1 145 1 33 1 165 1 244 2 337 1 338 1 246 1 55 1 249 1 291 1 126 1 57 1 38 1 318 1 173 1 175 1 200 1 
277 2 301 1 133 1 323 1 78 1 82 2 183 1 236 1 184 1 8 1 209 1 353 1 145 1 33 1 144 1 165 1 244 2 338 1 246 1 313 1 168 1 55 1 249 1 291 1 318 1 173 1 175 1 200 1 
55 1 323 1 144 1 246 1 175 1 168 1 
2 1 
42 5 177 1 227 2 134 1 323 2 43 2 231 1 278 2 138 3 7 1 47 2 236 1 240 1 50 1 148 1 243 1 246 2 150 1 55 2 17 1 197 2 251 2 59 6 255 1 298 1 300 1 343 1 201 1 153 1 20 1 154 5 207 1 208 2 348 2 351 1 29 4 355 1 66 1 264 1 113 1 116 1 309 1 265 1 118 1 71 2 213 2 121 1 216 2 360 1 273 1 361 2 75 1 318 1 41 1 131 2 
177 1 42 3 300 1 153 1 20 1 231 1 154 3 278 1 207 1 138 1 7 1 351 1 29 2 50 1 264 1 118 1 121 1 150 1 125 1 17 1 59 2 41 1 
177 1 42 3 300 1 153 1 227 1 134 1 20 1 231 1 154 3 207 1 138 1 7 1 47 1 351 1 29 3 50 1 264 1 118 1 121 1 150 1 125 1 17 1 59 1 41 1 
177 1 42 3 300 1 153 1 227 1 134 1 20 1 231 1 154 3 278 1 207 1 138 1 348 1 7 1 47 1 351 1 29 3 50 1 264 1 118 1 121 1 150 1 125 1 17 1 59 2 41 1 
42 4 177 1 227 1 134 1 135 1 231 2 43 1 278 3 138 2 7 1 47 1 50 1 10 1 331 1 146 1 188 1 243 1 150 2 17 1 251 1 197 1 59 5 96 1 300 1 98 1 153 1 20 1 154 4 345 1 207 1 208 1 348 3 351 2 352 1 27 1 160 1 29 3 355 1 66 1 264 2 113 1 116 1 118 1 71 1 213 1 121 1 312 1 360 1 125 1 361 1 41 1 
42 4 177 1 227 2 134 1 231 1 43 1 278 2 138 2 7 1 47 2 50 1 243 1 150 1 17 1 251 2 197 2 59 4 298 1 300 1 153 1 20 1 154 4 207 1 208 2 348 2 351 1 29 4 355 1 66 1 264 1 113 1 116 1 118 1 71 2 213 1 121 1 216 2 360 1 361 2 41 1 
42 3 177 1 227 1 134 1 135 1 231 2 43 1 278 1 138 1 7 1 47 1 50 1 331 1 146 1 188 1 243 1 150 2 17 1 251 1 197 1 59 2 96 1 300 1 98 1 153 1 20 1 154 3 345 1 207 1 208 1 348 1 351 2 352 1 27 1 29 3 355 1 66 1 264 2 113 1 116 1 118 1 71 1 213 1 121 1 312 1 360 1 361 1 41 1 
42 3 177 1 227 1 134 1 135 1 231 2 43 1 278 1 138 1 7 1 47 1 50 1 331 1 146 1 188 1 243 1 150 2 17 1 251 1 197 1 59 2 96 1 300 1 98 1 153 1 20 1 154 3 345 1 207 1 208 1 348 1 351 2 352 1 27 1 29 3 355 1 66 1 264 2 113 1 116 1 118 1 71 1 213 1 121 1 312 1 360 1 361 1 41 1 
42 3 177 1 227 1 134 1 135 1 231 2 43 1 278 1 138 1 7 1 47 1 85 1 50 1 142 1 331 1 146 1 243 1 90 1 150 2 17 1 251 1 59 2 96 1 300 1 98 1 153 1 20 1 154 3 345 1 207 1 348 1 349 1 351 2 352 1 27 1 29 3 66 1 264 2 113 1 116 1 118 1 71 1 213 1 121 1 216 1 360 1 316 1 41 1 
42 3 177 1 227 1 134 1 135 1 231 2 43 1 278 2 138 1 7 1 47 2 50 1 10 1 331 1 146 1 188 1 243 1 150 2 17 1 251 1 197 1 59 3 96 1 300 1 98 1 153 1 20 1 154 3 345 1 207 1 208 1 348 2 351 2 352 1 27 1 29 4 355 1 66 1 264 2 113 1 116 1 118 1 71 1 213 1 121 1 312 1 360 1 361 1 41 1 
42 3 177 1 227 1 134 1 135 1 231 2 43 1 278 2 138 1 7 1 47 2 50 1 10 1 331 1 146 1 188 1 243 1 150 2 17 1 251 1 197 1 59 3 96 1 300 1 98 1 153 1 20 1 154 3 345 1 207 1 208 1 348 2 351 2 352 1 27 1 29 4 355 1 66 1 264 2 113 1 116 1 118 1 71 1 213 1 121 1 312 1 360 1 361 1 41 1 
42 4 177 1 227 1 134 1 231 1 43 1 278 2 138 2 7 1 47 2 85 2 50 1 243 1 150 1 17 1 251 2 59 4 298 1 300 1 153 1 20 1 154 4 207 1 348 2 349 1 351 1 29 4 66 1 264 1 113 1 116 1 118 1 71 2 213 1 121 1 216 2 360 1 316 2 41 1 
98 1 201 4 1 2 323 7 231 1 203 1 137 1 102 1 181 2 24 1 156 1 236 3 25 1 238 1 109 2 287 2 161 1 65 1 264 1 87 1 143 1 70 1 265 1 117 4 146 1 72 2 14 2 246 7 35 1 267 1 168 1 150 1 190 2 55 6 315 1 192 1 272 1 273 1 318 4 60 2 40 1 255 3 131 2 
143 2 98 1 1 1 101 1 117 2 231 1 146 1 72 1 266 1 14 2 150 1 181 1 190 1 274 1 220 1 58 1 109 1 254 1 27 1 287 1 264 1 
143 2 330 1 257 1 70 1 1 1 117 2 179 1 46 1 72 1 266 1 14 2 181 1 190 1 6 1 194 1 9 1 109 1 287 1 95 1 176 1 
0 4 202 14 257 3 344 4 1 2 203 13 258 14 204 1 279 2 181 2 83 1 326 4 109 2 287 1 143 9 52 4 330 3 117 4 333 1 336 1 72 2 266 4 14 22 190 2 124 2 315 1 272 1 340 1 274 1 198 4 58 4 254 4 
201 1 98 1 344 1 1 1 229 1 323 1 231 1 203 1 205 1 325 1 181 1 282 1 24 1 236 1 109 1 159 1 287 1 65 1 264 2 143 1 117 2 146 1 336 1 72 1 13 1 14 2 246 1 150 2 190 1 55 1 315 1 272 1 363 1 274 1 318 1 76 1 255 1 131 1 
0 2 1 3 179 1 323 1 231 1 46 1 325 1 6 1 181 3 282 2 236 2 9 1 287 3 143 7 52 2 330 3 332 2 147 1 146 1 335 1 14 14 13 2 246 1 190 3 150 3 55 1 58 2 254 2 95 1 255 2 98 1 201 2 202 4 344 4 257 3 203 7 258 4 205 2 24 2 107 2 26 2 109 3 65 1 112 2 264 3 117 6 72 3 266 3 315 1 272 1 274 1 318 2 129 2 131 1 176 1 
143 1 70 1 1 1 117 2 72 1 266 1 14 1 181 1 190 1 58 1 109 1 276 1 287 1 
0 1 202 1 52 1 330 1 257 1 344 1 70 1 1 1 117 2 258 1 72 1 203 2 14 2 181 1 190 1 103 1 109 1 287 1 
0 1 202 1 344 1 257 1 1 1 203 2 258 1 181 1 109 1 287 1 143 1 52 1 70 1 330 1 117 2 72 1 266 1 14 3 190 1 58 1 254 1 
87 1 143 1 1 1 117 2 72 1 266 1 14 1 181 1 190 1 58 1 109 1 276 1 287 1 
87 1 0 1 202 1 52 1 330 1 257 1 344 1 1 1 117 2 258 1 72 1 203 2 14 2 181 1 190 1 103 1 109 1 287 1 
0 1 202 1 344 1 257 1 1 1 203 2 258 1 181 1 109 1 287 1 87 1 143 1 52 1 330 1 117 2 72 1 266 1 14 3 190 1 58 1 254 1 
0 1 202 1 344 1 257 1 1 1 203 2 258 1 181 1 109 1 287 1 143 1 52 1 330 1 117 2 72 1 266 1 14 3 190 1 58 1 254 1 
201 1 1 1 323 1 203 1 205 1 181 1 282 1 24 1 236 1 26 1 109 1 287 1 264 1 143 1 117 2 336 1 72 1 14 2 13 1 246 1 150 1 190 1 55 1 315 1 272 1 318 1 255 1 131 1 
201 1 1 1 323 1 203 1 205 1 181 1 24 1 236 1 109 1 287 1 264 1 143 1 117 2 336 1 72 1 14 2 246 1 150 1 190 1 248 1 55 1 315 1 272 1 318 1 295 1 223 1 255 1 131 1 
0 1 202 1 344 1 257 1 1 1 203 2 258 1 181 1 109 1 287 1 143 1 52 1 330 1 117 2 72 1 266 1 14 3 190 1 274 1 58 1 254 1 
0 1 202 1 201 1 257 1 344 1 1 1 323 1 258 1 203 2 205 1 181 1 282 1 24 1 236 1 26 1 107 1 109 1 287 1 264 1 143 1 52 1 330 1 117 2 72 1 266 1 14 3 13 1 337 1 246 1 150 1 190 1 55 1 58 1 318 1 254 1 255 1 
0 1 98 1 1 1 231 1 203 1 181 1 109 1 27 1 63 1 287 1 264 1 143 1 52 1 117 2 146 1 72 1 266 1 14 2 190 1 150 1 220 1 274 1 58 1 254 1 
0 2 257 2 1 2 322 1 45 1 203 7 204 1 140 1 157 1 326 1 109 2 143 4 52 2 330 2 117 4 72 2 266 2 14 11 91 1 190 2 124 1 250 1 294 1 198 2 199 1 58 2 317 1 254 2 
0 3 257 1 1 2 322 1 136 1 45 2 203 14 204 2 235 1 140 4 157 1 237 1 326 2 109 2 239 1 329 1 115 1 143 10 52 3 330 1 117 4 72 2 266 3 14 24 91 1 290 1 190 2 294 2 199 1 198 2 39 1 58 3 254 3 
0 2 257 1 1 2 322 1 136 1 45 1 203 8 204 1 140 2 157 1 326 1 109 2 143 5 52 2 330 1 117 4 72 2 266 2 14 13 91 1 190 2 124 1 294 1 198 2 199 1 58 2 317 1 254 2 
0 2 257 1 1 2 322 1 136 1 45 1 203 8 204 1 140 2 157 1 326 1 109 2 143 5 52 2 330 1 117 4 72 2 266 2 14 13 91 1 190 2 124 1 294 1 198 2 199 1 58 2 317 1 254 2 
257 1 1 1 322 1 179 1 45 1 203 2 46 1 204 1 6 1 140 1 326 1 9 1 109 1 143 4 330 1 117 2 72 1 266 1 14 6 91 1 190 1 294 1 198 1 199 1 95 1 176 1 
201 1 1 1 323 2 231 2 180 1 203 1 102 1 181 1 236 1 109 1 287 1 64 1 264 2 86 1 143 1 117 2 72 1 14 2 246 2 150 2 190 1 55 2 315 1 272 1 195 1 274 1 318 1 94 1 60 2 255 1 40 1 
201 1 133 1 100 1 265 1 323 1 246 1 92 1 55 1 273 1 236 1 341 1 318 1 255 1 131 1 
277 2 301 1 133 1 323 1 78 1 246 1 233 1 168 1 92 1 55 1 249 1 236 1 184 1 8 1 74 1 209 1 318 1 200 1 
277 2 301 1 133 1 323 2 78 1 337 1 246 2 233 1 168 1 92 1 55 2 249 1 236 1 184 1 8 1 74 1 209 1 318 1 200 1 
277 2 301 1 133 1 323 1 78 1 246 1 233 1 168 1 55 1 305 1 249 1 236 1 184 1 8 1 209 1 318 1 200 1 
61 1 
113 1 227 1 134 1 43 1 243 1 213 1 4 1 5 1 360 1 66 1 
0 1 52 1 227 1 43 1 213 2 266 1 73 1 208 1 155 1 216 2 152 1 58 1 254 1 
42 1 227 1 134 1 154 1 59 1 138 1 
42 3 201 1 343 2 323 4 43 2 154 3 347 1 138 2 84 2 236 1 240 1 66 1 113 2 265 1 243 2 288 1 148 2 213 2 15 1 246 4 360 2 55 4 273 1 128 1 59 4 318 1 75 1 255 1 131 2 
227 1 194 1 134 1 43 1 213 1 4 1 5 1 
42 1 227 2 134 1 43 1 154 1 208 1 138 1 355 1 66 1 113 1 243 1 213 1 216 1 360 1 361 1 197 1 59 1 
113 1 201 2 228 1 332 1 242 1 323 1 243 1 213 1 214 1 324 1 246 1 360 1 55 1 24 1 236 1 219 1 318 2 255 1 66 1 131 1 
113 1 329 1 227 2 43 3 243 1 213 2 266 1 204 1 73 3 208 2 216 4 360 1 152 3 326 1 58 1 39 1 198 1 254 1 239 1 66 1 
113 1 42 1 52 1 43 2 154 1 243 1 213 2 46 1 266 1 312 1 155 1 6 1 360 1 18 1 95 1 66 1 
98 2 201 1 1 1 323 1 231 2 203 1 81 1 205 1 181 1 282 1 24 1 236 1 26 1 109 1 27 2 287 1 264 3 331 1 117 2 146 2 336 1 72 1 14 1 13 1 246 1 190 1 150 3 55 1 315 1 318 1 255 1 131 1 
113 1 227 2 343 1 134 1 43 2 243 1 148 1 213 1 73 1 208 1 216 2 360 1 152 1 66 1 176 1 
104 1 357 1 111 1 31 1 268 1 
104 1 111 1 225 1 
104 1 111 1 225 1 
104 1 111 1 225 1 
104 1 186 1 111 1 
104 1 186 1 111 1 
104 1 186 1 111 1 
104 1 111 1 
11 1 308 1 
143 2 52 1 257 2 330 3 46 1 203 2 266 2 14 4 6 1 182 1 18 1 95 1 
143 1 1 1 117 2 72 1 266 1 14 1 91 1 190 1 58 1 109 1 
0 1 143 1 52 1 330 1 257 1 1 1 117 2 203 2 72 1 266 1 14 3 91 1 190 1 58 1 109 1 254 1 
115 1 143 1 257 1 330 2 1 3 117 6 203 2 72 3 80 1 14 3 91 1 190 3 6 1 182 1 317 1 109 3 95 1 
0 2 257 1 1 4 179 1 46 1 203 8 204 1 6 1 182 1 326 3 9 1 109 4 49 1 67 1 143 8 115 1 52 2 330 2 117 8 72 4 266 3 14 16 91 1 289 1 190 4 171 1 198 3 58 2 317 1 254 2 95 1 176 1 
257 1 1 1 179 1 203 1 46 1 204 1 6 1 326 1 9 1 109 1 329 1 143 3 330 1 117 2 72 1 266 1 14 4 91 1 190 1 198 1 95 1 176 1 
0 4 257 3 1 2 203 11 204 1 279 1 235 1 326 2 109 2 239 1 67 1 329 1 143 7 52 4 330 3 117 4 72 2 266 4 14 18 91 1 290 1 190 2 124 1 39 1 198 2 58 4 254 4 
0 2 257 2 1 3 179 1 46 1 203 7 204 1 6 1 235 1 326 1 9 1 109 3 239 1 67 1 329 1 143 6 115 1 52 2 330 2 117 6 72 3 266 3 14 13 91 1 290 1 190 3 198 1 39 1 58 2 254 2 95 1 176 1 
0 2 257 1 1 2 203 6 204 1 235 1 326 1 109 2 239 1 67 1 329 1 143 4 52 2 330 1 117 4 72 2 266 2 14 10 91 1 190 2 290 1 198 1 39 1 58 2 254 2 
257 1 1 1 179 1 203 1 46 1 204 1 6 1 326 1 9 1 109 1 329 1 143 3 330 1 117 2 72 1 266 1 14 4 91 1 190 1 198 1 95 1 176 1 
0 2 257 1 1 1 203 6 204 1 235 1 326 1 109 1 239 1 329 1 143 4 52 2 330 1 117 2 72 1 266 2 14 10 91 1 190 1 290 1 198 1 39 1 58 2 254 2 
0 2 257 1 1 3 203 7 204 1 235 1 326 1 109 3 239 1 67 1 329 1 143 4 115 1 52 2 330 1 117 6 72 3 266 2 14 11 91 1 290 1 190 3 198 1 39 1 58 2 254 2 
0 2 257 2 1 3 203 7 204 1 235 1 326 1 109 3 239 1 329 1 143 4 115 1 52 2 330 2 117 6 72 3 266 2 14 11 91 1 290 1 190 3 198 1 39 1 58 2 317 1 254 2 
143 2 257 1 330 2 179 1 46 1 266 1 14 2 6 1 182 1 9 1 95 1 176 1 
0 2 257 1 1 3 203 7 204 1 235 1 326 1 109 3 239 1 329 1 143 4 115 1 52 2 330 1 117 6 72 3 266 2 14 11 91 1 290 1 190 3 198 1 39 1 58 2 317 1 254 2 
143 3 115 1 330 2 257 1 1 2 117 4 179 1 46 1 203 1 72 2 266 1 14 4 190 2 6 1 182 1 9 1 109 2 95 1 176 1 
143 2 257 1 330 1 179 1 46 1 266 1 14 2 6 1 194 1 9 1 95 1 176 1 
0 1 143 1 52 1 330 1 257 1 1 1 117 2 203 2 72 1 266 1 14 3 190 1 58 1 109 1 254 1 67 1 
0 1 143 2 52 1 330 1 257 1 203 4 204 1 266 1 14 6 124 1 326 1 198 2 58 1 254 1 
0 2 257 2 1 1 179 1 46 1 203 6 279 1 6 1 326 2 9 1 109 1 143 6 115 1 52 2 330 2 117 2 333 1 72 1 266 3 14 12 124 1 190 1 58 2 198 2 254 2 95 1 176 1 
198 1 203 1 14 1 
143 1 326 1 14 1 
0 1 143 2 52 1 257 2 330 2 1 1 332 1 117 2 72 1 203 3 266 1 14 5 190 1 58 1 109 1 254 1 67 1 
0 2 257 1 1 1 203 6 204 1 235 1 326 1 109 1 239 1 329 1 143 4 52 2 330 1 117 2 72 1 266 2 14 10 91 1 190 1 290 1 198 1 39 1 58 2 254 2 
143 1 46 1 266 1 14 1 
143 1 115 1 330 2 257 1 1 1 179 1 117 2 203 2 72 1 80 1 14 3 6 1 190 1 182 1 9 1 109 1 95 1 
17 1 231 1 34 1 336 1 110 1 150 1 264 1 
132 1 88 1 120 1 34 1 231 1 336 1 150 1 17 1 110 1 51 1 327 1 264 1 
201 1 265 1 323 4 337 1 246 4 55 4 281 1 273 1 236 1 285 1 318 1 255 1 131 1 
201 1 323 2 79 1 137 1 246 2 267 1 55 2 84 1 24 1 156 1 236 1 318 2 161 1 255 1 
55 1 277 1 301 1 236 1 323 1 78 1 209 1 318 1 246 1 131 1 
201 1 323 2 180 1 337 1 246 2 168 1 55 2 236 1 318 1 40 1 255 1 
201 3 265 1 323 5 337 1 246 5 35 1 55 4 281 1 84 1 273 1 236 2 238 1 318 2 40 1 255 2 131 1 
201 3 265 1 323 5 311 1 337 1 246 5 55 4 281 1 84 1 273 1 236 2 238 1 318 2 40 1 255 2 131 1 
55 1 201 1 273 1 194 1 265 1 236 1 323 1 318 1 255 1 246 1 131 1 
201 1 98 1 323 1 146 1 231 1 336 1 205 1 13 1 246 1 150 2 55 1 24 1 236 1 318 1 255 1 65 1 131 1 264 2 
201 3 98 2 20 1 323 1 146 1 231 2 336 1 207 1 205 1 13 1 246 1 150 2 55 1 351 1 84 1 105 1 24 2 236 1 318 1 255 2 65 1 241 1 264 2 
201 3 98 2 20 1 323 2 146 1 231 2 336 1 207 1 205 1 246 2 150 2 55 2 248 1 351 1 84 1 105 1 24 2 236 1 285 1 318 1 255 2 65 1 241 1 264 2 
42 2 227 1 201 4 134 1 323 3 154 2 232 1 214 1 167 1 246 3 139 1 55 3 84 1 24 1 105 1 236 1 285 1 59 1 318 1 41 1 255 1 131 1 241 1 
42 2 227 1 201 4 134 1 323 3 154 2 214 1 167 1 246 3 55 3 170 1 84 1 24 1 105 1 236 1 285 1 59 1 318 1 41 1 255 1 131 1 241 1 
55 1 192 1 236 1 323 1 318 1 246 1 
201 3 323 6 324 1 137 1 246 6 35 1 168 1 55 5 192 1 23 1 24 1 156 1 236 2 25 1 238 1 318 3 60 1 40 1 255 2 131 2 
201 1 98 1 257 1 1 2 179 1 323 1 231 1 46 1 205 1 6 1 181 2 282 1 24 1 236 1 107 1 26 1 9 1 109 2 287 2 65 1 112 1 264 2 86 1 143 2 330 1 117 4 146 1 72 2 266 1 14 2 337 1 13 1 246 1 150 2 190 2 55 1 274 1 318 1 95 1 255 1 176 1 
42 3 227 1 201 2 134 1 323 1 43 1 154 3 138 1 4 1 5 1 66 2 262 1 113 2 243 2 288 1 213 1 214 1 167 1 246 1 55 1 360 2 151 1 170 1 253 1 275 1 59 2 41 1 131 1 
228 1 201 2 323 2 337 1 324 1 167 1 246 2 55 2 192 1 24 1 236 1 318 2 255 1 
201 1 98 1 323 1 146 1 231 1 336 1 205 1 246 1 150 2 55 1 248 1 24 1 236 1 318 1 255 1 65 1 131 1 264 2 
201 1 323 1 324 1 137 1 246 1 55 1 84 1 23 1 24 1 156 1 236 1 318 2 255 1 
234 1 195 1 231 1 286 1 94 1 64 1 130 1 150 1 264 1 
19 1 141 1 130 1 
234 1 191 1 286 1 336 1 130 1 
96 1 42 2 98 1 19 1 227 1 134 1 135 1 20 1 231 1 154 2 345 1 207 1 234 2 351 2 141 1 286 2 27 1 262 1 264 1 310 1 331 1 146 1 118 1 336 1 150 1 191 2 362 1 130 1 41 1 
82 1 226 1 126 1 183 1 33 1 57 1 244 1 350 1 
226 3 33 1 89 1 165 2 244 4 313 1 304 1 82 4 126 2 183 1 284 1 57 2 296 1 256 1 
226 1 356 1 33 1 119 1 165 1 244 2 350 1 82 2 126 1 183 1 57 1 222 1 
226 1 33 1 244 3 303 1 350 1 82 3 126 1 183 1 284 1 57 1 296 2 256 2 
226 2 178 1 37 1 127 2 
82 1 183 1 33 1 244 1 206 1 350 1 
82 2 226 1 126 1 358 1 183 1 33 1 57 1 165 1 244 2 350 1 
106 1 
82 1 226 1 126 1 183 1 33 1 57 1 244 1 350 1 
226 1 194 1 126 1 57 1 
82 1 226 1 126 1 183 1 33 1 57 1 244 1 
82 1 145 1 173 1 
226 1 33 1 244 3 350 1 82 3 126 1 183 1 284 1 57 1 306 1 296 1 256 2 
82 2 226 1 126 1 183 1 33 1 57 1 165 1 244 2 269 1 
226 1 277 1 301 1 33 1 89 1 244 1 350 1 82 1 183 1 184 1 365 1 
82 1 226 1 183 1 33 1 57 1 244 1 350 1 
82 1 126 1 183 1 33 1 57 2 244 1 350 1 
226 1 33 2 244 2 350 1 82 2 218 1 183 2 57 1 260 1 320 1 
226 2 163 1 33 1 358 1 89 1 165 2 244 3 350 1 304 1 82 3 126 1 183 1 57 1 
82 1 277 1 183 1 33 1 78 1 165 1 244 2 350 1 32 1 
226 2 33 2 89 1 165 2 244 4 350 1 269 1 304 1 82 4 126 1 183 2 57 1 174 1 
82 3 226 1 126 1 358 1 183 1 33 1 57 1 165 1 244 3 350 1 256 1 
226 1 89 1 313 1 304 1 
226 1 57 1 

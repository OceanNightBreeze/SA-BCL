#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) (133,178) (133,178) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) (133,178) (133,178) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) (133,178) (133,178) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) (133,178) (133,178) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) 254 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (31,292) 254 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 297 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 350 302 309 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 297 120 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 192 174 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 177 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 177 339 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 54 258 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 54 258 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 54 342 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 54 258 267 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 54 258 267 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 350 302 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 192 174 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 222 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 222 243 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
292 1 97 1 346 2 178 1 122 1 295 1 262 2 51 1 252 1 3 1 133 1 68 1 126 1 31 1 44 1 356 1 
292 1 97 1 346 2 178 1 122 1 295 1 262 2 51 1 252 1 3 1 133 1 68 1 126 1 31 1 44 1 356 1 
292 1 97 1 346 2 178 1 122 1 295 1 262 2 51 1 252 1 3 1 133 1 68 1 126 1 31 1 44 1 356 1 
292 1 97 1 346 2 178 1 122 1 295 1 262 2 51 1 252 1 3 1 133 1 68 1 126 1 31 1 44 1 356 1 
97 1 346 4 122 1 262 4 252 1 3 1 101 3 181 2 69 1 55 3 44 1 330 1 163 1 33 1 319 2 356 1 150 1 202 1 
97 1 346 2 295 1 262 2 51 1 252 1 3 1 55 1 69 1 126 1 44 1 221 1 33 1 356 1 278 1 260 1 
31 1 346 1 97 1 262 1 356 1 252 1 
31 1 209 1 346 2 97 1 262 2 356 1 252 1 101 1 254 1 
31 1 209 1 346 2 97 1 262 2 356 1 252 1 101 1 254 1 
283 1 14 1 166 1 
283 1 288 1 369 2 
157 2 134 2 165 1 15 2 207 1 271 2 180 2 259 2 
223 1 25 1 347 1 227 1 207 1 95 2 271 3 180 2 28 1 74 2 349 1 157 2 230 2 76 1 5 1 134 3 165 1 331 1 306 1 235 1 259 2 237 1 199 1 310 1 15 2 81 1 264 1 144 2 84 2 362 1 43 1 145 1 200 1 149 1 248 1 90 1 47 1 
108 1 15 1 124 1 207 1 180 1 271 1 157 1 134 1 247 1 259 1 
108 1 203 1 207 1 271 2 180 1 157 1 185 1 134 2 161 1 166 1 259 2 308 1 13 1 124 2 15 1 363 1 283 1 244 1 247 1 128 1 175 1 
108 1 203 1 207 1 271 2 180 2 157 2 185 1 134 2 161 2 166 1 259 2 308 1 13 1 124 2 15 2 363 1 283 1 247 1 175 2 
161 1 297 1 46 1 175 1 
108 1 207 1 180 1 271 1 157 1 134 1 161 1 190 1 166 1 259 1 308 1 15 1 124 1 282 1 283 1 246 1 247 1 46 1 175 1 
161 1 246 1 175 1 
108 1 308 1 124 1 15 1 207 1 180 1 271 1 157 1 134 1 161 1 247 1 46 1 175 1 259 1 
283 1 
48 1 108 1 207 1 180 1 271 1 157 1 134 1 161 1 190 1 166 1 259 1 308 1 15 1 124 1 283 1 246 1 247 1 46 1 175 1 
108 1 323 4 226 1 270 2 113 1 207 1 26 1 155 2 154 1 271 1 180 1 274 1 157 1 184 1 134 1 352 1 161 4 189 2 257 1 190 1 166 2 259 1 138 2 236 2 308 1 213 2 140 1 238 1 124 1 15 1 283 2 245 1 146 5 147 1 246 2 247 1 46 2 175 4 
165 1 14 1 
15 1 271 2 180 1 157 1 134 2 365 1 328 1 165 2 259 2 
12 1 127 1 370 1 
237 1 25 1 359 1 199 1 347 1 95 1 271 1 74 1 84 1 362 1 349 1 200 1 134 1 165 1 149 1 306 1 
237 1 25 1 347 1 199 1 225 1 15 1 95 1 180 1 271 2 362 1 74 1 84 1 349 1 158 1 200 1 134 2 127 1 149 1 306 1 259 1 
157 1 158 1 134 3 165 1 15 3 271 3 180 3 259 3 
134 1 124 1 247 1 15 1 271 1 180 1 259 1 
15 1 124 1 180 1 271 1 157 1 134 1 328 1 365 1 259 1 
25 1 203 1 347 1 225 1 207 1 95 1 271 4 180 3 28 1 74 1 349 1 157 2 158 1 230 2 76 1 185 1 5 1 134 4 328 1 161 1 165 1 331 1 306 1 235 1 259 3 237 1 199 1 13 1 15 3 124 1 81 1 144 1 362 1 84 1 43 1 363 1 145 1 200 1 286 1 149 1 71 1 90 1 47 1 175 1 
158 1 134 2 165 1 128 1 15 1 320 1 271 2 180 1 259 2 
203 1 13 1 225 1 132 1 124 1 15 3 180 3 271 3 157 1 283 1 158 2 363 1 185 1 134 3 328 1 161 1 71 1 175 1 259 3 
157 1 134 1 328 1 127 1 15 1 271 1 180 1 259 1 
237 1 25 1 199 1 347 1 95 1 271 1 74 1 84 1 362 1 349 1 200 1 134 1 165 1 149 1 306 1 
237 1 25 1 199 1 123 1 347 1 95 1 271 1 74 1 84 1 349 1 200 1 134 1 165 1 148 1 149 1 
249 1 72 1 213 1 12 1 63 1 144 2 40 1 43 1 145 1 76 1 230 2 5 1 127 1 191 1 331 2 90 1 47 1 194 1 370 1 
15 1 124 1 180 1 271 1 208 1 363 1 134 1 259 1 
225 1 15 4 242 1 180 4 271 5 158 2 157 1 114 1 134 5 328 1 165 1 128 1 320 1 259 5 
134 1 124 1 247 1 15 1 271 1 180 1 259 1 
294 1 37 1 
294 1 37 1 
100 1 10 1 
100 1 10 1 
100 1 10 1 
327 1 294 1 37 1 
294 1 210 1 37 1 
111 1 294 2 37 2 39 1 100 1 10 1 
327 1 294 1 37 1 
327 1 294 1 37 1 
318 1 294 1 37 1 
318 1 294 1 37 1 
318 1 294 1 37 1 
35 1 280 1 197 2 139 2 36 1 294 2 37 2 141 2 142 1 39 1 62 1 315 2 283 1 85 3 161 2 220 1 354 2 34 1 175 2 
0 1 294 1 180 2 271 2 75 1 134 2 161 1 210 1 354 1 165 1 355 1 259 2 35 1 170 1 11 1 139 1 197 1 37 1 15 2 337 1 315 1 85 1 22 1 175 1 
44 1 122 1 3 1 
44 1 3 1 278 1 
324 1 122 2 261 1 105 1 3 3 278 1 
188 1 122 1 261 1 105 1 3 2 278 1 
122 1 261 2 105 1 3 2 278 1 
323 1 94 1 270 1 155 1 302 1 350 1 352 1 161 4 32 2 189 1 190 1 166 1 138 1 170 1 309 1 312 1 283 1 146 2 201 1 246 1 104 1 46 4 175 4 
256 1 161 2 367 1 297 1 120 1 46 2 175 2 
108 1 249 1 323 3 226 1 270 1 207 1 155 1 271 1 180 1 302 1 157 1 159 1 350 1 134 1 187 1 161 3 32 1 189 1 166 1 259 1 138 1 236 1 170 1 308 1 309 1 213 1 312 1 124 1 15 1 283 1 201 1 146 1 104 1 247 1 369 1 46 2 175 3 
323 5 224 1 226 1 2 1 270 2 271 1 180 1 134 1 187 2 189 1 138 1 236 1 15 1 283 2 146 2 201 1 288 1 104 1 247 1 291 1 108 1 249 2 155 1 207 1 302 2 350 2 159 2 157 1 32 2 161 4 166 1 259 1 170 2 308 1 309 1 213 2 312 1 124 1 369 3 46 3 175 4 
349 1 164 1 14 1 
349 1 183 1 
23 1 
349 1 347 1 
349 3 200 1 364 1 347 1 164 2 65 1 
349 1 200 1 347 1 
349 1 16 1 
335 1 72 1 251 1 239 1 1 1 227 1 82 1 144 1 4 1 316 1 184 1 257 1 194 2 
335 1 72 1 251 1 239 1 1 1 227 1 82 1 144 1 4 1 316 1 184 1 257 1 194 2 
335 1 72 1 251 1 239 1 1 1 227 1 82 1 144 1 4 1 316 1 217 1 184 1 257 1 194 2 
249 2 268 1 72 2 251 2 1 2 270 2 227 9 302 2 4 1 184 2 350 2 230 2 5 1 303 3 119 1 276 1 257 2 332 3 331 9 211 1 194 4 335 1 213 2 239 2 144 18 82 2 316 1 317 1 43 1 90 1 47 1 343 1 
335 1 268 1 72 2 251 1 239 1 1 1 227 2 241 1 82 1 144 3 228 1 316 1 184 1 43 2 230 4 5 2 257 1 331 1 90 2 47 2 194 3 
25 1 324 1 92 1 346 2 295 1 205 1 252 1 95 1 3 2 74 1 55 1 353 1 116 1 33 1 356 1 278 1 333 1 97 1 122 1 61 1 262 2 101 1 84 1 42 1 265 1 102 1 69 1 44 1 149 1 176 1 
324 1 25 1 92 1 346 3 295 1 205 1 95 1 3 2 29 1 74 1 53 1 55 1 115 1 353 1 116 1 33 1 356 1 278 1 333 1 97 1 122 1 262 3 84 1 101 2 42 1 265 1 102 1 69 1 44 1 149 1 
25 1 324 1 346 2 295 1 205 1 95 1 3 2 74 1 53 1 55 1 115 1 353 1 116 1 33 1 278 1 333 1 122 1 262 2 84 1 101 2 265 1 102 1 69 1 44 1 149 1 
333 2 25 1 97 1 346 1 347 1 199 1 295 2 262 1 296 1 95 1 52 1 29 1 74 1 84 1 349 1 19 1 338 1 353 2 116 2 149 1 356 1 168 1 167 1 
25 1 324 1 92 1 346 1 295 1 205 1 252 1 95 1 3 2 74 1 53 1 353 1 116 1 356 1 278 1 333 1 97 1 122 1 61 1 262 1 84 1 42 1 265 1 102 1 44 1 149 1 
38 1 
323 1 199 1 155 1 95 1 301 1 74 1 84 1 146 1 201 1 352 1 161 1 246 2 189 1 190 1 192 1 175 1 174 1 138 1 
48 1 177 1 203 1 253 2 271 1 272 1 185 1 134 1 161 2 190 1 166 1 121 1 259 1 196 1 13 1 124 1 218 1 363 1 283 1 244 1 246 2 128 1 321 1 175 2 
196 1 203 1 13 1 124 1 253 3 271 1 272 1 216 1 283 1 363 1 218 1 185 1 244 1 134 1 161 2 166 1 128 1 121 1 321 1 175 2 259 1 
48 1 177 1 203 1 253 3 271 1 272 1 185 1 134 1 161 2 190 1 166 1 121 1 259 1 196 1 13 1 124 1 216 1 218 1 363 1 283 1 244 1 339 1 246 2 128 1 321 1 175 2 
48 1 161 1 246 1 190 1 175 1 
177 1 323 1 203 1 253 3 155 1 326 1 271 1 272 1 185 1 134 1 160 1 352 1 161 2 189 1 190 1 166 1 121 1 138 1 259 1 196 1 360 2 13 1 361 2 124 1 216 1 125 1 218 1 363 1 283 1 244 1 146 1 339 1 246 2 288 1 341 1 369 1 128 1 321 1 175 2 322 2 
323 1 203 1 253 2 155 1 326 1 271 1 272 1 185 1 54 1 134 1 352 1 161 2 189 1 258 1 166 1 121 1 138 1 259 1 196 1 13 1 124 1 218 1 363 1 283 1 244 1 146 1 340 1 128 1 321 1 175 2 
323 1 203 1 253 2 155 1 326 1 271 1 272 1 185 1 54 1 134 1 352 1 161 2 189 1 258 1 166 1 121 1 138 1 259 1 196 1 13 1 124 1 218 1 363 1 283 1 244 1 146 1 340 1 128 1 321 1 175 2 
323 1 345 1 203 1 253 2 155 1 271 1 272 1 185 1 54 1 134 1 352 1 161 2 162 1 189 1 166 1 121 1 138 1 259 1 196 1 13 1 124 1 218 1 363 1 283 1 244 1 146 1 128 1 321 1 342 1 175 2 
177 1 323 1 203 1 253 3 155 1 326 1 271 1 272 1 185 1 54 1 134 1 352 1 161 2 189 1 258 1 166 1 121 1 138 1 259 1 196 1 13 1 124 1 216 1 218 1 363 1 283 1 244 1 146 1 339 1 246 1 340 1 128 1 321 1 267 1 175 2 
177 1 323 1 203 1 253 3 155 1 326 1 271 1 272 1 185 1 54 1 134 1 352 1 161 2 189 1 258 1 166 1 121 1 138 1 259 1 196 1 13 1 124 1 216 1 218 1 363 1 283 1 244 1 146 1 339 1 246 1 340 1 128 1 321 1 267 1 175 2 
177 1 323 1 345 1 203 1 253 3 155 1 271 1 272 1 185 1 134 1 160 1 352 1 161 2 189 1 190 1 166 1 357 2 121 1 138 1 259 1 196 1 360 2 13 1 361 2 124 1 216 1 218 1 363 1 283 1 244 1 146 1 21 1 339 1 246 2 341 1 369 1 128 1 321 1 175 2 
335 1 72 1 14 1 316 1 43 1 184 1 145 1 76 1 230 2 5 1 257 1 191 1 90 1 47 1 194 1 
249 2 72 2 270 2 227 6 302 2 350 2 230 4 76 2 5 2 232 1 275 1 30 1 303 3 276 1 165 1 136 1 331 8 332 3 235 1 194 2 279 1 213 2 12 7 264 1 144 14 43 2 145 1 103 1 127 7 90 2 47 2 370 7 
225 1 227 1 271 1 180 1 158 1 76 1 230 2 134 1 5 1 136 1 331 1 259 1 235 1 12 1 15 1 66 1 144 2 264 1 43 1 145 1 86 1 90 1 47 1 
93 1 225 1 270 2 95 1 227 5 180 1 271 3 184 1 230 6 5 3 134 3 56 2 135 1 136 1 331 7 194 3 235 1 237 2 335 1 12 4 199 1 15 1 143 2 144 12 145 3 200 2 149 2 249 2 72 3 25 2 347 2 302 2 74 1 156 2 158 1 349 2 350 2 76 3 257 1 306 2 259 1 213 2 81 2 264 1 316 1 84 1 362 2 43 3 87 2 127 4 90 3 47 3 370 4 
25 2 130 1 325 1 347 2 296 1 95 2 227 1 74 2 349 2 230 2 76 1 5 1 6 1 57 1 331 1 9 1 235 1 199 1 264 1 144 2 67 1 84 2 43 1 200 1 145 1 338 1 149 3 248 1 90 1 47 1 
15 1 270 1 227 2 144 2 302 1 271 1 180 1 350 1 43 1 157 1 145 1 76 1 230 2 134 1 5 1 328 1 136 1 90 1 78 1 47 1 259 1 
270 1 227 1 144 1 43 1 350 1 145 1 76 1 230 2 5 1 20 1 191 1 90 1 47 1 
249 1 72 1 213 1 12 1 63 1 144 2 43 1 145 1 76 1 230 2 5 1 127 1 191 1 331 2 90 1 47 1 194 1 370 1 
249 1 72 1 270 1 227 1 302 1 350 1 230 2 76 1 5 1 191 1 331 2 194 1 213 1 12 1 144 3 43 1 145 1 127 1 90 1 47 1 370 1 
270 1 227 1 144 1 43 1 350 1 145 1 76 1 230 2 5 1 20 1 57 1 90 1 47 1 
249 1 72 1 213 1 12 1 63 1 144 2 43 1 145 1 76 1 230 2 5 1 127 1 57 1 331 2 90 1 47 1 194 1 370 1 
249 1 72 1 270 1 227 1 302 1 350 1 230 2 76 1 5 1 57 1 331 2 194 1 213 1 12 1 144 3 43 1 145 1 127 1 90 1 47 1 370 1 
249 1 72 1 270 1 227 1 302 1 350 1 230 2 76 1 5 1 331 2 194 1 213 1 12 1 144 3 43 1 145 1 127 1 90 1 47 1 370 1 
25 1 347 1 227 1 95 1 271 1 74 1 349 1 76 1 230 2 134 1 5 1 165 1 331 1 306 1 235 1 237 1 199 1 81 1 264 1 144 2 362 1 84 1 43 1 200 1 145 1 149 1 90 1 47 1 
25 1 347 1 227 1 95 1 271 1 74 1 349 1 76 1 230 2 134 1 5 1 165 1 331 1 235 1 237 1 214 1 123 1 199 1 264 1 144 2 84 1 43 1 200 1 145 1 148 1 149 1 90 1 47 1 
249 1 72 1 270 1 227 1 302 1 350 1 230 2 76 1 5 1 136 1 331 2 194 1 213 1 12 1 144 3 43 1 145 1 127 1 90 1 47 1 370 1 
249 1 72 1 25 1 347 1 270 1 227 1 95 1 271 1 302 1 74 1 350 1 349 1 76 1 230 2 134 1 5 1 331 2 306 1 194 1 237 1 213 1 12 1 81 1 144 3 362 1 84 1 43 1 200 1 145 1 87 1 127 1 149 1 90 1 47 1 370 1 176 1 
249 1 270 1 227 1 180 1 271 1 302 1 157 1 350 1 230 2 76 1 5 1 134 1 328 1 136 1 331 1 96 1 259 1 213 1 15 1 144 2 43 1 145 1 90 1 47 1 
249 1 72 1 110 1 270 1 298 1 227 3 228 1 302 1 182 1 350 1 230 4 5 2 303 1 276 1 7 1 234 1 331 4 332 1 137 1 194 1 213 1 144 7 43 2 173 1 106 1 90 2 47 2 
249 1 110 1 269 1 270 1 298 1 227 7 228 1 302 1 350 1 230 2 5 1 303 2 276 2 7 2 331 8 332 2 137 1 213 1 313 1 64 1 144 15 43 1 173 4 106 2 90 1 47 1 
249 1 110 1 270 1 298 1 227 4 228 1 302 1 350 1 230 4 5 2 303 1 276 1 7 1 234 1 331 5 332 1 137 1 213 1 64 1 144 9 43 2 173 2 106 1 90 2 47 2 
249 1 110 1 270 1 298 1 227 4 228 1 302 1 350 1 230 4 5 2 303 1 276 1 7 1 234 1 331 5 332 1 137 1 213 1 64 1 144 9 43 2 173 2 106 1 90 2 47 2 
249 3 293 1 72 2 110 1 250 1 269 1 270 3 298 1 227 10 228 1 302 3 273 1 184 1 350 3 230 2 5 1 303 2 276 2 257 1 7 1 331 13 332 2 137 1 8 1 194 2 335 1 213 3 313 1 64 1 144 23 316 1 43 1 173 4 106 1 90 1 47 1 
49 1 139 1 197 1 294 1 354 1 37 1 142 1 39 1 62 1 315 1 
75 1 210 1 
195 1 139 1 197 1 294 1 354 1 37 1 107 1 315 1 60 1 
35 1 280 1 197 1 139 1 294 1 37 1 141 1 142 1 39 1 62 1 315 1 283 1 85 2 161 1 220 1 354 1 34 1 175 1 
35 1 280 1 197 1 139 1 294 1 37 1 141 1 142 1 39 1 62 1 315 1 283 1 85 2 161 1 220 1 354 1 34 1 175 1 
35 1 280 1 197 1 139 1 294 1 37 1 141 1 142 1 39 1 62 1 315 1 283 1 85 2 161 1 220 1 354 1 34 1 175 1 
327 1 111 1 368 1 
327 1 111 1 368 1 
171 1 318 1 
171 1 318 1 111 1 
0 1 355 1 
0 1 294 1 271 2 180 2 75 1 134 2 161 1 210 1 354 1 165 1 355 1 259 2 170 1 11 1 358 1 139 1 197 1 37 1 141 1 15 2 337 1 315 1 85 1 220 1 22 1 46 1 175 1 
327 1 368 1 
171 1 318 1 111 1 
109 1 25 1 130 1 347 1 227 1 95 2 271 2 74 2 349 1 76 1 230 2 231 1 134 2 5 1 117 1 136 1 331 1 58 1 259 2 235 1 314 1 264 1 144 2 84 2 43 1 145 1 149 1 248 2 90 1 152 1 47 1 
344 1 324 1 25 1 92 1 122 1 3 2 95 2 74 2 84 2 265 1 102 1 53 1 44 1 70 1 353 1 149 1 151 1 278 1 176 1 
324 1 25 1 92 1 122 1 3 2 95 1 83 1 74 1 84 1 265 1 102 1 53 1 44 1 353 1 149 1 151 1 278 1 
25 1 347 1 199 1 296 1 95 1 74 1 84 1 349 1 338 1 70 1 353 1 233 1 149 1 168 1 
344 1 324 1 25 1 92 1 122 1 3 2 95 1 74 1 84 1 265 1 102 1 53 1 44 1 70 1 353 1 149 1 151 1 278 1 
219 1 
274 1 283 1 323 1 146 1 147 1 14 1 166 1 
323 1 155 1 326 1 125 1 283 1 146 1 352 1 246 1 189 1 288 1 190 1 166 1 369 1 138 1 322 1 
91 1 323 7 179 1 270 2 95 1 183 2 185 1 187 4 189 2 190 1 193 1 138 2 236 2 199 1 143 2 65 1 283 4 200 1 284 1 201 1 146 5 246 2 288 4 149 2 249 2 25 1 347 1 155 2 301 1 302 2 73 1 74 1 349 4 159 4 350 2 352 2 161 1 304 1 164 1 213 2 84 1 88 1 89 2 369 8 175 1 
108 1 323 2 269 1 207 1 155 1 301 1 271 1 180 1 157 1 159 1 134 1 187 1 303 1 352 1 276 1 189 1 166 1 332 1 259 1 138 1 236 1 308 1 336 1 238 1 124 1 15 1 283 1 146 2 201 1 247 1 
108 1 323 2 270 2 154 1 155 1 207 1 271 1 180 1 184 1 157 1 134 1 352 1 161 1 189 1 257 1 138 1 259 1 236 2 308 1 213 1 238 1 124 1 15 1 245 1 146 2 340 1 247 1 175 1 
323 1 155 1 274 1 283 1 146 1 352 1 147 1 189 1 166 1 138 1 
236 1 249 1 323 2 213 1 270 1 302 1 350 1 159 1 283 1 187 1 146 1 288 1 369 2 
108 1 308 1 124 1 15 1 207 1 271 1 180 1 283 1 157 1 134 1 246 1 190 1 247 1 166 1 259 1 
323 1 24 1 199 1 95 1 155 1 301 1 74 1 84 1 146 1 201 1 352 1 246 2 189 1 190 1 192 1 174 1 138 1 
25 1 347 1 95 1 207 1 271 3 180 2 28 1 74 1 157 2 349 1 230 2 76 1 5 1 134 3 165 1 331 1 306 1 235 1 259 2 237 1 199 1 15 2 81 1 144 1 84 1 362 1 43 1 200 1 145 1 149 1 90 1 47 1 
323 1 251 1 155 1 301 1 159 2 283 4 187 2 146 2 201 1 352 1 288 2 189 1 369 4 166 2 138 1 
139 1 366 1 354 1 
139 1 354 1 204 1 355 1 142 1 
139 1 366 1 354 1 
139 1 366 1 354 1 
186 1 139 1 354 1 
186 1 139 1 354 1 
186 1 139 1 354 1 
139 1 354 1 
294 1 37 1 
268 1 335 1 72 1 239 1 227 1 144 2 316 1 43 2 184 1 230 4 5 2 257 1 331 1 90 2 47 2 194 2 
184 1 335 1 72 1 257 1 14 1 194 1 316 1 
249 1 72 1 213 1 281 1 270 1 227 1 144 3 302 1 43 1 350 1 230 2 5 1 331 2 90 1 47 1 194 1 
303 1 276 1 227 1 332 1 331 1 144 2 
249 2 268 2 72 7 251 1 270 3 154 1 227 11 302 2 229 1 184 4 350 2 230 4 5 2 275 1 303 2 257 4 332 2 331 14 194 11 335 1 279 1 213 3 239 4 144 25 316 1 43 2 245 1 103 1 90 2 47 2 
303 1 331 1 144 1 
227 1 332 1 144 1 
249 1 72 2 213 1 281 1 270 1 143 1 227 2 144 5 302 1 43 1 350 1 230 2 5 1 331 3 90 1 47 1 194 2 
269 1 227 1 144 2 228 1 43 1 230 2 5 1 303 1 276 1 331 1 332 1 90 1 47 1 
72 1 213 1 239 1 270 1 227 3 144 6 184 1 245 1 257 1 331 3 194 2 
268 1 72 3 251 1 270 1 154 1 227 6 229 1 184 3 230 2 5 1 257 3 331 6 194 6 335 1 213 1 239 3 144 12 316 1 43 1 245 1 90 1 47 1 
72 3 213 2 239 2 270 2 154 1 227 5 144 10 228 1 43 1 184 2 230 2 245 1 5 1 257 2 331 5 90 1 47 1 194 5 
270 1 227 1 144 1 228 1 43 1 350 1 230 2 5 1 90 1 47 1 
249 1 72 1 213 1 270 1 227 1 144 3 228 1 302 1 43 1 350 1 230 2 5 1 331 2 90 1 47 1 194 1 
268 1 72 1 239 1 227 1 144 3 228 1 229 1 43 3 184 1 230 6 5 3 257 1 234 1 331 2 90 3 47 3 194 2 
249 2 268 2 72 3 270 3 227 10 228 1 302 2 229 1 184 3 350 2 230 10 5 5 303 3 276 1 119 1 257 3 234 1 331 13 332 3 194 6 335 1 213 3 239 3 281 1 144 23 316 1 43 5 317 1 245 1 90 5 47 5 343 1 
249 2 250 1 72 1 293 1 269 1 270 2 227 4 228 1 302 2 273 1 350 2 230 2 5 1 303 1 276 1 332 1 331 6 8 1 194 1 213 2 144 10 43 1 90 1 47 1 
249 2 250 1 72 1 293 1 269 1 270 2 227 4 228 1 302 2 273 1 350 2 230 4 5 2 303 1 276 1 331 6 332 1 8 1 194 1 213 2 281 1 144 10 43 2 90 2 47 2 
335 1 72 1 269 1 281 1 227 1 144 2 228 1 316 1 184 1 43 2 230 4 5 2 303 1 276 1 257 1 331 1 332 1 90 2 47 2 194 1 
72 1 269 1 227 1 228 1 184 1 230 4 5 2 303 1 276 1 257 1 332 1 331 1 194 2 335 1 239 1 281 1 144 2 316 1 43 2 90 2 47 2 
249 2 250 1 72 1 293 1 269 1 270 2 227 4 228 1 302 2 273 1 350 2 230 2 5 1 303 1 276 1 332 1 331 6 8 1 194 1 213 2 144 10 43 1 90 1 47 1 
269 1 227 1 144 2 228 1 43 1 230 2 5 1 303 1 276 1 331 1 332 1 90 1 47 1 
269 1 281 1 227 1 144 2 228 1 43 2 230 4 5 2 303 1 276 1 332 1 331 1 90 2 47 2 
269 1 227 1 144 2 228 1 43 2 230 4 5 2 303 1 276 1 234 1 332 1 331 1 90 2 47 2 
335 2 72 2 239 2 227 1 144 2 316 1 184 2 257 2 331 1 194 4 
269 1 227 1 144 2 228 1 43 2 230 4 5 2 303 1 276 1 234 1 332 1 331 1 90 2 47 2 
134 1 165 1 128 1 305 1 320 1 271 1 259 1 
198 1 215 1 27 1 271 1 18 1 134 1 329 1 165 1 305 1 128 1 320 1 259 1 
349 1 25 1 338 1 347 1 199 1 14 1 149 1 296 1 95 1 84 1 74 1 
237 1 25 1 347 1 199 1 15 1 95 1 180 1 271 2 74 1 84 1 362 1 349 1 158 1 200 1 134 2 165 1 149 1 259 1 
237 1 25 1 347 2 13 1 124 1 15 1 95 1 16 1 180 2 271 2 74 1 84 1 362 1 363 1 349 3 158 1 200 2 134 2 266 1 165 1 149 1 45 1 259 2 
237 1 25 1 347 2 123 1 13 1 124 1 15 1 95 2 16 1 180 2 271 2 74 2 84 2 363 1 349 3 158 1 200 2 134 2 266 1 165 1 149 1 45 1 59 1 259 2 
108 1 25 1 347 1 50 1 112 1 207 1 95 2 271 1 180 1 74 2 157 1 349 4 183 1 185 1 134 1 161 2 164 1 166 1 259 1 308 1 199 1 124 1 15 1 16 1 84 2 283 1 200 1 246 1 266 1 149 1 247 1 45 1 175 2 
91 1 25 1 199 1 347 1 95 3 16 1 74 3 84 3 283 1 183 1 349 4 185 1 200 1 161 2 266 1 246 1 164 1 149 1 166 1 45 1 59 1 175 2 
25 1 149 1 95 1 299 1 84 1 74 1 
25 2 199 2 98 1 347 2 131 1 311 1 240 1 95 6 299 1 65 1 74 7 84 7 349 3 53 1 200 1 231 1 6 1 149 3 248 1 176 1 9 1 
72 1 25 1 347 1 95 1 271 2 180 1 74 1 184 1 349 1 158 1 76 2 230 4 134 2 5 2 56 1 257 1 136 1 306 1 194 1 259 1 237 1 335 1 15 1 81 1 316 1 84 1 362 1 43 2 200 1 145 2 87 1 149 1 90 2 152 1 47 2 176 1 
91 1 323 4 179 1 270 2 95 1 271 1 180 1 274 1 183 1 184 1 185 1 134 1 189 2 190 1 193 1 138 2 236 2 238 1 199 1 15 1 283 2 245 1 284 1 146 5 147 1 246 2 247 1 108 1 24 1 155 2 154 1 207 1 74 1 349 2 157 1 352 2 161 2 164 1 257 1 166 2 259 1 308 1 213 2 124 1 84 1 46 1 175 2 
25 1 347 1 95 2 299 1 65 1 74 2 84 2 349 2 200 1 304 1 164 1 149 2 176 1 
25 1 199 1 347 1 296 1 95 4 74 4 84 4 349 1 338 1 149 1 307 1 59 1 176 1 
25 1 325 1 347 1 95 2 74 2 84 2 67 1 349 1 200 1 287 1 6 1 149 2 45 1 9 1 
25 1 44 1 199 1 149 1 3 1 95 1 278 1 265 1 84 1 74 1 
109 1 25 1 347 1 95 2 74 2 84 2 349 1 53 1 231 1 149 1 176 1 
25 2 199 1 347 2 131 1 296 1 240 1 95 4 74 5 84 5 349 3 231 1 338 1 149 2 45 1 307 1 176 1 
334 1 25 2 199 1 347 2 296 1 240 1 95 4 74 5 84 5 349 3 231 1 338 1 149 2 45 1 307 1 176 1 
237 1 25 1 347 1 199 1 123 1 15 1 95 1 180 1 271 2 74 1 84 1 349 1 158 1 200 1 134 2 165 1 149 1 259 1 
25 1 98 1 347 1 95 1 65 1 74 1 84 1 349 1 200 1 6 1 149 2 45 1 9 1 
222 1 285 1 117 1 348 1 
243 1 263 1 348 1 
222 1 285 1 117 1 348 2 
243 1 222 1 285 1 117 1 161 1 99 1 263 1 46 1 175 1 348 2 
55 1 69 1 14 1 33 1 
55 1 69 1 346 1 97 1 262 1 33 1 356 1 
346 1 116 1 295 1 
97 1 346 3 262 3 252 1 17 1 255 1 55 1 126 2 69 1 77 1 33 1 356 1 
181 1 55 1 69 1 346 2 97 1 262 2 33 1 356 1 101 1 
55 1 44 1 346 1 97 1 122 1 262 1 319 1 356 1 252 1 3 1 202 1 
55 1 346 1 97 1 262 1 33 1 356 1 252 1 
69 1 346 1 97 1 262 1 33 2 356 1 252 1 
97 2 346 2 79 1 262 2 252 1 351 1 55 1 33 1 356 2 289 1 
97 1 346 3 262 3 252 1 101 2 69 1 55 2 172 1 330 1 33 1 319 1 356 1 169 1 
324 1 97 1 346 2 122 1 262 2 252 1 3 2 41 1 101 1 55 1 69 1 44 1 33 1 356 1 278 1 
97 2 346 4 262 4 252 1 101 2 181 1 69 1 55 2 330 1 163 1 33 1 319 1 356 2 
55 1 69 1 346 1 97 1 262 1 33 1 356 1 252 1 
153 1 346 4 97 1 262 4 17 1 101 2 255 1 126 1 69 2 55 3 330 1 33 2 319 1 356 1 
97 1 346 2 262 2 252 1 300 1 101 1 55 1 69 1 209 1 118 1 33 1 356 1 
97 1 346 3 262 3 252 1 17 2 255 1 55 1 126 2 69 1 33 1 356 1 290 1 
55 2 277 2 206 1 212 1 
129 1 346 1 97 1 262 1 356 1 252 1 
55 1 69 1 346 2 97 1 172 1 262 2 33 1 356 1 252 1 101 1 
80 1 
55 1 69 1 346 1 97 1 262 1 33 1 356 1 252 1 
55 1 69 1 126 1 346 3 97 1 172 1 262 3 33 1 356 1 252 1 101 1 
153 1 55 1 330 1 319 1 
55 1 33 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 134 (294,339) (294,339) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 134 (294,339) (294,339) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 134 (294,339) (294,339) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (64,263) 66 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (64,263) 66 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 3 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 182 166 241 298 115 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 186 151 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 367 28 298 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 182 166 241 298 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 182 166 241 298 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 182 166 241 298 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 182 166 241 298 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 182 166 241 298 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 182 166 241 298 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 55 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 1370 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1921 | return null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | RETURN | 5800 | return null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
209 2 263 1 76 2 339 1 227 1 35 2 134 1 332 1 136 3 72 1 40 4 121 7 58 2 9 7 111 3 345 1 294 1 30 1 88 1 206 2 347 2 286 1 64 1 48 1 47 2 
263 1 209 2 76 2 339 1 227 1 35 2 134 1 332 1 136 3 72 1 40 4 121 7 58 2 9 7 111 3 345 1 294 1 30 1 88 1 206 2 347 2 286 1 64 1 48 1 47 2 
263 1 209 2 76 2 339 1 227 1 35 2 134 1 332 1 136 3 72 1 40 4 121 7 58 2 9 7 111 3 345 1 294 1 30 1 88 1 206 2 347 2 286 1 64 1 48 1 47 2 
76 2 227 1 332 1 121 7 58 2 9 7 30 1 206 2 286 1 64 1 98 1 99 1 209 2 263 1 339 1 35 2 134 1 136 3 72 1 40 4 294 1 345 1 111 4 88 1 347 2 47 2 48 1 
209 1 76 1 35 1 134 1 332 1 136 2 231 1 121 4 40 3 58 1 9 4 345 1 111 3 206 1 347 1 286 2 98 1 99 1 
50 1 76 1 35 1 213 1 72 1 121 2 58 1 9 2 111 1 345 1 347 1 157 1 98 1 48 1 47 1 99 1 
76 2 35 2 136 1 121 3 40 1 9 3 345 1 111 2 206 1 64 1 98 1 47 1 99 1 
121 1 76 1 9 1 345 1 35 1 360 1 64 1 66 1 
121 1 76 1 9 1 345 1 35 1 360 1 64 1 66 1 
71 1 55 1 283 1 
71 1 217 2 170 1 
335 2 163 1 141 2 93 1 330 2 260 2 181 2 348 2 
141 2 117 1 93 1 330 2 146 1 354 1 253 1 312 2 178 1 335 2 201 1 257 1 124 1 202 2 96 1 180 1 305 1 260 3 181 2 235 1 63 1 362 2 261 1 317 1 210 1 83 1 341 1 244 1 163 1 75 2 187 1 370 2 138 1 113 1 348 3 278 1 192 1 
335 1 21 1 141 1 93 1 330 1 260 1 181 1 348 1 
350 1 141 1 283 1 303 1 17 1 71 1 73 1 122 1 86 1 44 1 260 1 348 1 127 1 128 1 
350 1 141 1 330 1 283 1 17 1 71 1 73 1 335 1 122 1 44 1 260 1 181 1 127 2 348 1 128 2 
143 1 218 1 127 1 128 1 100 1 
71 1 143 1 283 1 80 1 127 2 128 2 100 1 184 1 
127 1 128 1 100 1 
141 1 143 1 93 1 175 1 330 1 335 1 21 1 260 1 181 1 127 1 348 1 128 1 
71 1 
71 1 143 1 139 1 283 1 127 2 128 2 100 1 184 1 
288 2 289 1 171 2 143 2 340 1 239 1 250 1 103 1 283 1 118 1 184 1 71 1 109 1 357 1 275 1 295 2 127 5 128 5 100 2 
55 1 163 1 
141 2 330 1 38 1 255 1 335 1 163 2 260 2 181 1 348 2 
77 1 319 1 24 1 
210 1 117 1 53 1 354 1 312 1 341 1 257 1 163 1 370 1 260 1 113 1 305 1 348 1 63 1 362 1 192 1 
335 3 163 1 141 3 330 3 260 3 181 1 348 3 214 1 
335 1 279 1 141 1 44 1 330 1 260 1 348 1 
38 1 255 1 335 1 141 1 44 1 330 1 260 1 181 1 348 1 
350 1 141 3 117 1 195 1 93 1 330 3 146 1 354 1 253 1 312 1 178 1 255 1 335 3 201 1 257 1 122 1 202 2 96 1 180 1 305 1 11 1 260 4 181 2 127 1 63 1 128 1 362 1 261 1 317 1 210 1 17 1 214 1 73 1 341 1 163 1 75 1 44 1 370 1 138 1 113 1 190 1 348 4 278 1 192 1 
335 1 342 1 163 1 141 2 330 1 260 2 303 1 348 2 214 1 
350 1 82 1 141 3 195 1 330 3 17 1 214 2 255 1 71 1 73 1 335 3 122 1 44 1 260 3 181 1 127 1 348 3 190 1 128 1 
77 1 141 2 319 1 330 2 214 1 255 1 335 2 260 2 181 1 348 2 
210 1 117 1 354 1 312 1 341 1 257 1 163 1 370 1 260 1 113 1 305 1 348 1 63 1 362 1 192 1 
210 1 117 1 354 1 312 1 257 1 163 1 74 1 370 1 260 1 113 1 305 1 348 1 63 1 362 1 67 1 
77 2 146 1 253 1 178 2 201 1 202 2 124 2 203 1 180 1 182 1 316 1 261 1 12 1 317 1 262 1 265 1 319 2 107 1 75 4 165 1 296 1 24 2 
335 1 141 1 44 1 276 1 330 1 260 1 17 1 348 1 
210 1 141 1 319 1 117 1 195 1 330 1 354 1 312 1 214 1 335 1 341 1 257 1 370 1 305 1 113 1 260 2 348 2 63 1 362 1 192 1 
223 1 141 4 195 1 322 1 330 4 214 2 255 1 335 4 163 1 44 1 204 1 260 4 181 1 348 4 
335 2 279 1 141 2 44 1 276 1 330 2 260 2 348 2 
307 1 140 1 
307 1 140 1 
150 1 349 1 
150 1 349 1 
150 1 349 1 
307 1 140 1 284 1 
307 1 140 1 284 1 
137 1 307 1 140 1 
70 1 150 1 307 2 309 1 349 1 140 2 
307 1 140 1 284 1 
307 1 372 1 140 1 
307 1 372 1 140 1 
307 1 372 1 140 1 
49 2 194 1 70 1 307 2 104 1 197 2 353 1 254 1 71 1 334 2 7 2 43 1 154 3 32 1 236 2 127 2 326 1 140 2 128 2 
49 1 194 1 141 2 226 1 330 2 197 1 335 2 334 1 232 1 358 1 154 1 260 2 156 1 236 1 127 1 128 1 307 1 267 1 293 1 137 1 163 1 344 1 348 2 140 1 
209 1 58 1 347 1 
58 1 347 1 213 1 
209 2 58 3 212 1 114 1 338 1 213 1 
209 1 58 2 280 1 212 1 114 1 213 1 
209 1 58 2 212 2 114 1 213 1 
171 1 143 4 144 1 174 1 283 1 313 1 8 2 357 1 358 1 203 1 156 1 287 1 127 4 182 1 128 4 316 1 288 1 101 1 340 3 323 1 18 1 71 1 109 1 344 1 217 1 166 1 247 1 296 1 295 1 
141 1 143 5 93 1 330 1 335 1 336 3 203 1 152 1 260 1 100 3 101 1 340 3 71 3 21 1 109 1 344 2 217 3 218 3 166 1 348 1 170 1 171 2 174 1 282 1 175 1 118 1 283 1 357 2 181 1 127 6 182 1 287 2 128 6 316 1 288 2 318 1 323 2 247 1 295 2 296 1 
171 1 141 1 143 2 144 1 93 1 174 1 330 1 175 1 283 1 118 1 335 1 8 1 357 2 203 1 260 1 181 1 127 3 182 1 287 1 128 3 288 1 101 1 340 1 323 1 18 1 71 2 21 1 344 1 217 2 166 1 295 1 348 1 170 1 
171 1 143 1 144 1 174 1 94 1 118 1 8 1 357 2 203 1 287 1 127 2 182 1 128 2 288 1 101 1 340 1 323 1 18 1 71 1 344 1 217 2 166 1 295 1 170 1 
55 1 290 1 
186 1 117 1 
258 1 
117 1 305 1 
210 1 290 2 352 1 117 3 305 1 147 1 
210 1 117 1 305 1 
117 1 243 1 
306 1 351 1 311 1 54 1 178 3 230 1 325 1 56 1 185 2 124 4 75 7 203 1 274 1 273 1 205 2 296 1 81 3 
306 1 351 1 311 1 54 1 178 3 230 1 325 1 56 1 185 2 124 4 75 7 203 1 274 1 273 1 205 2 296 1 81 3 
306 1 351 1 311 1 54 1 178 3 230 1 325 1 56 1 355 1 185 2 124 4 75 7 203 1 274 1 273 1 205 2 296 1 81 3 
281 1 146 1 311 1 253 1 304 1 54 1 178 3 230 1 56 1 27 1 28 1 124 3 202 2 10 1 205 1 81 2 261 1 317 1 306 2 367 1 185 1 75 6 371 1 273 1 
351 1 281 1 198 1 146 2 311 1 253 2 230 1 178 4 56 1 202 4 124 5 203 1 234 1 205 3 81 4 261 2 317 2 306 1 325 1 185 2 75 9 273 1 274 1 296 1 
2 1 76 1 173 1 52 1 354 1 252 1 312 1 121 2 356 1 257 1 58 2 9 2 315 1 31 1 338 1 98 1 362 1 99 1 209 1 183 1 35 1 211 1 36 1 213 1 40 1 111 1 345 1 370 1 347 1 47 1 
76 1 52 1 354 1 252 1 120 1 312 1 121 3 79 1 356 1 257 1 58 2 9 3 315 1 31 1 338 1 98 1 362 1 99 1 209 1 183 1 35 1 211 1 36 1 213 1 84 1 40 2 111 1 370 1 347 1 47 1 
52 1 354 1 252 1 120 1 312 1 121 2 257 1 58 2 9 2 315 1 31 1 338 1 98 1 362 1 99 1 209 1 211 1 36 1 213 1 84 1 40 2 111 1 370 1 347 1 47 1 
76 1 34 1 52 2 117 1 35 1 211 2 354 1 252 2 312 1 95 1 79 1 121 1 257 1 9 1 346 1 370 1 61 1 305 1 189 1 63 1 47 2 362 1 248 1 
76 1 173 1 52 1 354 1 252 1 120 1 312 1 121 1 356 1 257 1 58 2 9 1 315 1 31 1 338 1 362 1 209 1 183 1 35 1 211 1 36 1 213 1 345 1 370 1 347 1 47 1 
160 1 
300 2 1 1 91 1 92 1 141 1 142 2 331 1 303 1 148 2 256 1 149 2 257 1 305 1 260 1 63 2 97 1 100 6 264 2 13 1 340 2 17 1 105 1 71 2 20 2 73 1 108 2 269 1 109 1 217 2 346 1 348 1 170 2 171 1 350 1 117 1 174 1 283 1 354 1 312 2 122 1 357 2 361 1 127 5 128 5 362 2 288 1 131 1 321 4 184 3 86 1 44 1 46 1 370 2 295 1 189 1 
300 1 1 1 350 1 91 1 141 1 321 2 17 1 303 1 184 1 256 1 73 1 122 1 269 1 86 1 44 1 139 1 260 1 127 3 348 1 128 3 97 1 100 2 
1 1 350 1 91 1 141 1 283 1 303 1 256 1 122 1 260 1 127 3 97 1 128 3 100 1 321 3 17 1 184 1 73 1 71 1 108 1 269 1 86 1 44 1 139 1 348 1 
1 1 300 1 350 1 91 1 141 1 283 1 303 1 256 1 122 1 260 1 127 3 97 1 128 3 100 2 321 3 17 1 184 1 73 1 20 1 71 1 108 1 269 1 86 1 44 1 139 1 348 1 
1 1 300 4 171 1 328 1 350 1 91 1 141 1 142 2 196 1 331 1 251 1 283 5 303 1 199 1 148 2 256 1 149 2 122 1 357 1 260 1 127 5 97 1 128 5 100 7 288 1 264 2 340 1 321 6 364 1 17 1 184 3 71 5 73 1 20 4 108 4 269 1 86 1 109 1 44 1 46 1 139 1 295 1 348 1 170 2 
1 1 300 2 91 1 141 1 142 2 331 1 303 1 148 2 256 1 149 2 260 1 97 1 100 4 264 2 340 1 17 1 73 1 20 2 71 2 108 2 269 1 109 1 217 2 348 1 170 2 171 1 350 1 283 1 122 1 357 1 127 4 128 4 288 1 131 1 321 4 184 2 86 1 44 1 46 1 295 1 
300 2 1 1 171 1 328 1 350 1 91 1 141 1 142 2 283 1 331 1 303 1 199 1 148 2 256 1 149 2 122 1 357 1 260 1 127 4 97 1 128 4 100 4 288 1 264 2 340 1 321 4 364 1 17 1 184 2 71 1 20 2 73 1 108 2 269 1 86 1 109 1 44 1 46 1 295 1 348 1 170 2 
300 2 1 1 171 1 328 1 350 1 91 1 141 1 142 2 283 1 331 1 303 1 199 1 148 2 256 1 149 2 122 1 357 1 260 1 127 4 97 1 128 4 100 4 288 1 264 2 340 1 321 4 364 1 17 1 184 2 71 1 20 2 73 1 108 2 269 1 86 1 109 1 44 1 46 1 295 1 348 1 170 2 
1 1 3 1 350 1 91 1 141 1 321 2 17 1 303 1 324 1 256 1 73 1 122 1 269 1 86 1 44 1 260 1 127 2 348 1 128 2 97 1 
1 1 300 3 171 1 328 1 350 1 91 1 141 1 142 2 283 1 331 1 251 1 303 1 199 1 148 2 256 1 149 2 122 1 357 1 260 1 127 4 97 1 128 4 100 5 288 1 264 2 340 1 321 5 364 1 17 1 184 2 71 1 73 1 20 3 108 3 269 1 86 1 109 1 44 1 46 1 295 1 348 1 170 2 
1 1 300 3 171 1 328 1 350 1 91 1 141 1 142 2 283 1 331 1 251 1 303 1 199 1 148 2 256 1 149 2 122 1 357 1 260 1 127 4 97 1 128 4 100 5 288 1 264 2 340 1 321 5 364 1 17 1 184 2 71 1 73 1 20 3 108 3 269 1 86 1 109 1 44 1 46 1 295 1 348 1 170 2 
1 1 300 2 90 2 91 1 141 1 303 1 148 2 256 1 260 1 97 1 100 4 264 2 16 2 340 1 17 1 73 1 20 2 71 1 108 2 269 1 109 1 217 2 348 1 171 1 350 1 225 1 283 1 122 1 357 1 127 4 128 4 288 1 131 1 321 4 184 2 86 1 44 1 46 1 295 1 
325 1 317 1 55 1 351 1 201 1 202 2 165 1 180 1 146 1 253 1 261 1 
223 1 77 2 146 2 253 2 178 5 56 1 201 1 202 4 124 7 203 2 180 2 81 1 259 1 182 2 316 1 261 2 317 2 132 1 319 6 367 2 244 1 163 1 75 12 44 1 110 1 45 1 371 2 112 1 166 2 138 1 296 1 89 1 24 6 
77 1 4 1 141 1 117 1 195 1 53 1 330 1 354 1 146 1 253 1 312 1 178 1 335 1 257 1 201 1 202 2 124 1 180 1 305 1 260 2 63 1 362 1 261 1 317 1 210 1 365 1 214 1 341 1 244 1 163 1 75 2 370 1 23 1 138 1 113 1 89 1 348 2 192 1 
141 1 195 1 330 1 146 2 253 2 335 1 201 2 257 1 202 4 96 1 203 1 205 1 260 2 305 1 63 1 207 1 261 2 210 1 214 1 341 1 75 5 166 1 113 1 348 2 24 2 222 1 77 2 117 1 354 1 26 1 312 1 178 2 124 3 180 2 81 1 182 1 362 1 317 2 237 1 319 2 366 1 370 1 138 1 89 1 192 1 
51 1 2 1 141 1 117 3 5 1 330 1 354 2 146 2 120 1 253 2 312 8 178 1 335 1 257 2 201 2 202 4 124 1 180 2 125 1 260 1 305 2 63 2 362 8 261 2 317 2 68 1 102 1 214 1 244 1 216 1 75 2 272 1 165 1 346 1 370 7 187 2 138 1 189 1 348 1 
77 1 141 1 330 1 146 1 253 1 178 2 255 1 335 1 201 1 202 2 124 1 203 1 180 1 205 1 81 1 260 1 181 1 182 1 261 1 316 1 317 1 319 1 75 3 369 1 166 1 89 1 296 1 24 1 348 1 
317 1 265 1 77 1 319 1 146 1 253 1 201 1 75 2 202 2 124 2 165 1 203 1 180 1 24 1 182 1 261 1 
317 1 77 1 319 1 146 1 253 1 107 1 178 2 201 1 75 2 202 2 165 1 180 1 205 1 81 1 296 1 24 1 261 1 316 1 
317 1 77 1 319 1 146 1 253 1 201 1 75 2 202 2 124 2 165 1 203 1 180 1 166 1 24 1 182 1 261 1 
317 1 265 1 77 1 319 1 146 1 253 1 201 1 216 1 75 2 202 2 124 2 203 1 180 1 24 1 182 1 261 1 
317 1 77 1 319 1 146 1 253 1 107 1 178 2 201 1 216 1 75 2 202 2 180 1 205 1 81 1 296 1 24 1 261 1 316 1 
317 1 77 1 319 1 146 1 253 1 201 1 216 1 75 2 202 2 124 2 203 1 180 1 166 1 24 1 182 1 261 1 
317 1 77 1 319 1 146 1 253 1 201 1 202 2 124 2 75 2 203 1 180 1 166 1 24 1 182 1 261 1 
117 1 354 1 146 1 253 1 312 1 178 1 257 1 201 1 124 1 202 2 96 1 180 1 305 1 260 1 63 1 362 1 261 1 317 1 210 1 341 1 244 1 163 1 75 2 370 1 138 1 113 1 348 1 192 1 
117 1 354 1 146 1 253 1 312 1 178 1 257 1 201 1 124 1 202 2 29 1 180 1 305 1 260 1 63 1 362 1 67 1 261 1 317 1 210 1 244 1 163 1 74 1 75 2 370 1 138 1 113 1 348 1 
317 1 77 1 319 1 146 1 253 1 201 1 75 2 202 2 124 2 203 1 180 1 166 1 89 1 24 1 182 1 261 1 
2 1 77 1 117 1 354 1 146 1 26 1 253 1 312 1 257 1 201 1 124 2 202 2 96 1 203 1 180 1 305 1 260 1 182 1 362 1 261 1 317 1 210 1 319 1 341 1 75 2 370 1 166 1 113 1 24 1 348 1 192 1 
141 1 330 1 146 1 253 1 178 1 255 1 335 1 201 1 202 2 124 2 203 1 180 1 260 1 181 1 182 1 261 1 316 1 317 1 319 1 75 3 166 1 296 1 89 1 348 1 24 1 191 1 
115 1 146 2 253 2 229 3 178 6 28 2 202 4 124 9 60 1 203 2 234 1 359 1 285 1 182 2 261 2 317 2 159 1 367 2 39 1 343 1 42 1 75 15 45 1 371 3 166 2 298 1 
249 1 115 2 281 1 146 2 253 2 229 2 178 6 123 1 202 4 124 9 28 2 203 2 234 1 285 1 205 1 81 1 182 2 33 1 261 2 317 2 241 1 367 2 39 1 42 2 75 15 371 2 166 2 298 1 
115 1 146 2 253 2 229 4 178 9 28 2 202 4 124 10 203 2 234 1 359 1 285 1 182 2 316 1 261 2 317 2 159 1 292 1 367 2 39 1 343 1 42 1 75 19 45 1 371 3 166 2 296 1 298 1 
115 1 146 2 253 2 229 4 178 9 28 2 202 4 124 10 203 2 234 1 359 1 285 1 182 2 316 1 261 2 317 2 159 1 292 1 367 2 39 1 343 1 42 1 75 19 45 1 371 3 166 2 296 1 298 1 
249 1 115 1 351 3 281 1 311 3 146 2 253 2 229 4 178 19 56 2 123 1 28 2 202 4 124 24 203 7 359 1 234 1 205 4 285 1 81 6 182 4 33 1 316 2 261 2 317 2 292 1 241 1 325 3 185 3 367 2 39 1 343 1 42 1 75 43 45 1 274 3 273 3 371 3 166 4 296 5 298 1 
49 1 334 1 43 1 70 1 307 1 197 1 353 1 297 1 236 1 140 1 
137 1 232 1 
0 1 49 1 310 1 334 1 307 1 197 1 236 1 169 1 140 1 
49 1 194 1 70 1 307 1 197 1 353 1 254 1 71 1 334 1 7 1 43 1 154 2 32 1 127 1 236 1 326 1 128 1 140 1 
49 1 194 1 70 1 307 1 197 1 353 1 254 1 71 1 334 1 7 1 43 1 154 2 32 1 127 1 236 1 326 1 128 1 140 1 
49 1 194 1 70 1 307 1 197 1 353 1 254 1 71 1 334 1 7 1 43 1 154 2 32 1 127 1 236 1 326 1 128 1 140 1 
41 1 309 1 284 1 
41 1 309 1 284 1 
372 1 106 1 
372 1 309 1 106 1 
226 1 267 1 
49 1 141 2 143 1 226 1 197 1 330 2 254 1 7 1 334 1 335 2 232 1 358 1 260 2 154 1 126 1 156 1 127 1 236 1 128 1 307 1 267 1 293 1 137 1 163 1 344 1 348 2 140 1 
41 1 284 1 
372 1 309 1 106 1 
51 1 116 1 141 2 117 1 354 1 146 1 253 1 312 2 178 1 257 1 201 1 314 1 202 2 124 1 180 1 233 1 305 1 260 2 362 2 261 1 317 1 68 1 244 1 368 1 75 2 187 2 370 2 138 1 89 1 277 1 348 2 
209 1 2 1 301 1 211 1 354 1 120 1 312 2 213 1 257 1 356 1 58 2 315 1 370 2 31 1 347 1 155 1 338 1 362 2 299 1 
209 1 301 1 211 1 354 1 120 1 312 1 213 1 270 1 356 1 257 1 58 2 315 1 370 1 31 1 347 1 338 1 362 1 
117 1 211 1 354 1 312 1 95 1 257 1 346 1 370 1 167 1 305 1 189 1 63 1 362 1 299 1 
209 1 301 1 211 1 354 1 120 1 312 1 213 1 356 1 257 1 58 2 315 1 370 1 31 1 347 1 155 1 338 1 362 1 299 1 
69 1 
55 1 289 1 239 1 
171 1 142 1 331 1 283 1 149 1 357 1 127 1 128 1 100 1 288 1 340 1 184 1 71 2 109 1 217 1 295 1 170 1 
288 1 210 1 171 1 329 1 352 1 117 1 354 2 312 1 257 1 186 1 109 1 151 1 370 1 305 1 295 1 63 1 362 1 
288 1 171 1 340 1 323 1 367 1 71 1 109 1 28 1 357 1 217 2 371 1 295 1 287 1 170 1 298 1 
171 1 141 1 93 1 175 1 330 1 302 2 311 1 119 1 335 1 179 1 357 2 203 2 260 1 181 1 127 1 128 1 288 1 340 2 364 1 21 1 109 1 273 1 274 1 295 1 296 1 348 1 
288 1 171 1 289 1 239 1 340 1 283 1 71 1 109 1 357 1 295 1 
323 1 71 1 357 2 217 2 203 1 166 1 182 1 287 1 170 1 
71 1 283 1 127 1 128 1 100 1 184 1 
171 2 92 1 117 1 174 2 118 1 354 1 228 1 312 4 257 1 357 2 305 1 361 2 63 2 127 3 362 4 128 3 208 1 100 4 288 2 320 2 340 2 105 1 184 2 109 1 164 1 346 1 370 4 295 2 189 1 
141 2 117 1 93 1 330 2 146 1 354 1 253 1 312 1 178 1 335 2 257 1 201 1 202 2 96 1 180 1 260 3 305 1 181 2 63 1 362 1 261 1 317 1 210 1 341 1 163 1 75 1 370 1 138 1 113 1 348 3 278 1 192 1 
288 1 171 1 174 1 340 1 283 2 323 2 185 1 71 4 109 1 217 4 357 2 295 1 361 1 287 2 170 2 
327 1 334 1 236 1 
327 1 334 1 236 1 
334 1 226 1 353 1 200 1 236 1 
327 1 334 1 236 1 
334 1 14 1 236 1 
334 1 14 1 236 1 
334 1 14 1 236 1 
334 1 236 1 
307 1 140 1 
317 2 351 1 281 1 146 2 311 1 253 2 178 4 325 1 185 1 56 1 75 8 124 4 202 4 203 1 274 1 273 1 205 2 296 1 81 3 261 2 
325 1 55 1 351 1 
317 1 146 1 253 1 161 1 202 2 124 2 75 2 203 1 166 1 182 1 261 1 
367 1 124 1 75 2 28 1 371 1 178 1 
351 1 281 1 311 2 146 1 253 1 178 10 56 4 179 1 124 13 202 2 203 5 205 4 259 1 81 8 182 2 316 1 261 1 317 1 132 1 325 1 185 1 367 2 75 23 45 1 274 2 273 2 166 2 371 2 296 4 
75 1 371 1 178 1 
367 1 75 1 124 1 
366 1 178 3 56 1 75 6 124 3 203 1 166 1 81 1 296 1 182 1 316 1 
249 1 281 1 146 2 253 2 178 5 56 1 123 1 28 1 202 4 124 6 203 2 234 1 205 1 81 2 182 2 33 1 316 1 261 2 317 2 241 1 367 1 75 11 371 1 166 2 296 1 298 1 
311 1 178 3 56 1 124 3 75 6 203 1 274 1 273 1 205 1 296 1 81 2 
317 1 351 1 281 1 311 1 146 1 253 1 178 2 325 1 56 1 124 1 75 3 202 2 10 1 273 1 205 1 81 2 261 1 
317 1 146 1 311 2 253 1 178 5 56 2 179 1 202 2 124 5 75 10 203 2 273 2 274 1 234 1 205 3 81 5 296 2 261 1 
317 1 146 1 253 1 202 2 124 2 75 2 203 1 234 1 182 1 261 1 
317 1 146 1 253 1 202 2 124 2 75 2 203 1 166 1 234 1 182 1 261 1 
159 1 317 3 281 1 146 3 311 1 253 3 178 2 56 1 75 3 202 6 124 1 10 1 273 1 234 1 205 1 81 2 261 3 
351 1 281 1 146 4 311 2 253 4 304 1 178 8 56 3 179 1 28 1 202 8 124 7 203 2 10 1 234 1 205 3 81 6 261 4 159 1 317 4 161 1 325 1 367 1 75 15 274 1 371 1 273 2 296 2 
249 1 317 2 281 1 146 2 253 2 241 1 178 3 367 1 123 1 124 6 202 4 28 1 75 9 203 2 166 2 371 1 234 1 205 1 81 1 182 2 33 1 298 1 261 2 
249 1 317 3 281 1 146 3 253 3 241 1 161 1 178 3 367 1 123 1 124 6 202 6 28 1 75 9 203 2 166 2 371 1 234 1 205 1 81 1 182 2 33 1 298 1 261 3 
249 1 351 1 281 1 311 1 146 3 253 3 178 8 56 1 123 1 28 1 202 6 124 9 203 3 234 1 205 3 81 4 182 2 33 1 316 1 261 3 317 3 241 1 161 1 325 1 185 1 367 1 75 17 274 1 273 1 371 1 166 2 296 2 298 1 
249 1 317 2 281 1 146 2 253 2 241 1 178 3 367 1 123 1 124 6 202 4 28 1 75 9 203 2 166 2 371 1 234 1 205 1 81 1 182 2 33 1 298 1 261 2 
249 1 317 2 281 1 146 2 253 2 241 1 178 3 367 1 123 1 124 6 202 4 28 1 75 9 203 2 166 2 371 1 234 1 205 1 81 1 182 2 33 1 298 1 261 2 
249 1 281 1 146 2 253 2 178 5 56 1 123 1 28 1 202 4 124 6 203 2 234 1 205 1 81 2 182 2 33 1 316 1 261 2 317 2 241 1 367 1 75 11 371 1 166 2 296 1 298 1 
249 1 317 3 281 1 146 3 253 3 241 1 161 1 178 3 367 1 123 1 124 6 202 6 28 1 75 9 203 2 166 2 371 1 234 1 205 1 81 1 182 2 33 1 298 1 261 3 
249 1 281 2 146 4 253 4 178 5 56 3 123 1 28 1 202 8 124 9 203 3 234 1 205 2 81 5 182 3 33 1 316 1 261 4 317 4 159 1 241 1 367 1 75 14 371 1 166 3 296 1 298 1 
351 2 311 3 178 4 325 1 56 3 75 7 124 3 203 1 273 3 274 1 205 3 296 1 81 6 
249 1 159 1 317 3 281 1 146 3 253 3 241 1 178 3 367 1 123 1 124 6 202 6 28 1 75 9 203 2 166 2 371 1 234 1 205 1 81 1 182 2 33 1 298 1 261 3 
342 1 163 1 141 1 22 1 260 1 303 1 348 1 
193 1 141 1 133 1 303 1 333 1 342 1 163 1 22 1 188 1 260 1 168 1 348 1 
55 1 346 1 370 1 312 1 63 1 362 1 
210 1 141 1 117 1 330 1 354 1 312 1 214 1 335 1 257 1 163 1 370 1 305 1 113 1 260 2 348 2 63 1 362 1 192 1 
210 2 350 1 363 1 141 2 117 3 320 1 330 1 354 1 17 1 312 1 243 1 214 1 335 2 257 1 163 1 44 1 370 1 305 2 113 1 260 2 348 2 362 1 192 1 
350 1 141 2 117 3 78 1 330 1 354 1 312 2 335 2 257 1 260 2 305 2 362 2 210 2 363 1 320 1 17 1 243 1 214 1 163 1 74 1 44 1 370 2 113 1 348 2 
117 4 78 1 354 1 283 1 312 3 257 1 122 1 62 1 305 1 127 2 63 1 362 3 128 2 100 1 210 1 290 1 363 1 320 1 243 1 71 1 245 1 186 1 370 3 
210 1 363 1 290 1 117 4 78 1 320 1 240 1 283 1 354 1 312 3 243 1 71 1 122 1 257 1 186 1 370 3 305 1 63 1 127 2 128 2 362 3 100 1 
257 1 272 1 370 1 354 1 312 1 362 1 
51 1 2 1 210 1 352 1 117 3 102 1 5 1 354 3 120 1 176 1 177 1 312 7 257 2 246 1 272 1 187 1 370 6 125 1 305 2 63 2 362 7 
2 1 351 1 77 1 141 1 117 1 330 1 311 1 354 1 146 2 253 2 26 1 312 1 178 3 335 1 257 1 201 2 124 3 202 4 96 1 203 1 180 2 205 2 81 2 305 1 260 2 362 1 207 1 261 2 317 2 210 1 319 1 214 1 325 1 185 1 341 1 163 2 75 6 368 1 274 1 273 1 370 1 296 1 113 1 89 1 24 1 348 2 192 1 
171 2 143 1 117 2 283 1 312 1 122 1 357 1 63 1 127 3 362 1 128 3 129 1 100 2 288 2 130 1 289 1 290 1 340 1 239 1 240 1 184 1 37 1 71 1 109 2 164 1 186 1 370 1 295 2 
210 1 329 1 290 1 352 1 117 1 354 2 312 1 257 1 272 1 370 1 258 1 305 1 362 1 
2 1 117 1 78 1 354 1 312 4 215 1 257 1 346 1 370 4 305 1 189 1 63 1 362 4 
158 1 210 1 117 1 320 1 354 2 177 1 242 1 312 2 308 1 257 1 246 1 370 2 305 1 362 2 
257 1 58 1 370 1 31 1 347 1 354 1 312 1 63 1 213 1 362 1 
51 1 2 1 257 1 117 1 370 2 233 1 354 1 305 1 120 1 312 2 362 2 
51 1 2 1 117 3 320 1 5 1 354 2 312 5 215 1 257 2 346 1 370 4 125 1 305 2 189 1 63 1 362 5 
51 1 2 1 117 3 320 1 354 2 312 5 215 1 257 2 346 1 370 4 153 1 125 1 305 2 189 1 63 1 362 5 
210 1 141 1 117 1 330 1 354 1 312 1 214 1 335 1 257 1 163 1 74 1 370 1 305 1 113 1 260 2 348 2 63 1 362 1 
210 1 352 1 117 1 320 1 354 2 176 1 177 1 312 1 257 1 246 1 370 1 305 1 362 1 
314 1 57 1 266 1 116 1 141 1 260 1 277 1 135 1 348 1 
19 1 57 1 65 1 
266 1 57 1 163 1 337 1 135 1 
350 1 266 2 143 1 25 1 283 1 17 1 135 2 71 1 19 1 73 1 122 1 57 1 163 1 44 1 337 2 127 2 65 1 190 1 128 2 
55 1 98 1 99 1 
121 1 76 1 9 1 111 1 35 1 98 1 99 1 
9 1 52 1 47 1 
76 1 291 1 35 1 6 1 85 1 72 2 121 3 9 3 111 1 345 1 98 1 99 1 
40 1 121 2 76 1 9 2 111 1 35 1 286 1 98 1 99 1 
209 1 76 1 35 1 332 1 136 1 121 1 58 1 9 1 345 1 111 1 347 1 
121 1 76 1 9 1 111 1 345 1 35 1 99 1 
121 1 76 1 9 1 345 1 35 1 98 1 99 2 
221 1 76 2 224 1 35 2 121 2 9 2 111 1 345 1 87 1 99 1 
40 2 121 3 76 1 9 3 111 2 345 1 227 1 35 1 30 1 206 1 136 1 98 1 99 1 
209 1 76 1 172 1 35 1 213 1 121 2 40 1 58 2 9 2 111 1 345 1 347 1 338 1 98 1 99 1 
40 2 231 1 121 4 76 2 9 4 111 2 345 1 35 2 206 1 286 1 136 1 98 1 99 1 
121 1 76 1 9 1 111 1 345 1 35 1 98 1 99 1 
76 1 291 1 35 1 136 1 268 1 72 1 85 1 40 2 121 4 9 4 111 3 206 1 98 2 99 2 
76 1 15 1 35 1 268 1 121 1 162 1 9 1 345 1 360 1 98 1 99 1 
76 1 291 1 35 1 85 2 72 2 121 3 9 3 111 1 345 1 220 1 98 1 99 1 
111 2 271 1 238 1 145 2 
121 1 76 1 9 1 345 1 35 1 219 1 
40 1 121 2 76 1 9 2 111 1 345 1 35 1 30 1 98 1 99 1 
59 1 
121 1 76 1 9 1 111 1 345 1 35 1 98 1 99 1 
76 1 35 1 72 1 40 1 121 3 9 3 345 1 111 1 30 1 98 1 99 1 
121 1 40 1 9 1 111 1 206 1 136 1 
111 1 99 1 

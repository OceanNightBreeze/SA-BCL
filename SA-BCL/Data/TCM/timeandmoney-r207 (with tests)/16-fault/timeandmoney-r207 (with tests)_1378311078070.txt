#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 82 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 361 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 353 251 44 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 82 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
295 1 0 2 207 6 6 2 30 1 324 2 274 1 138 5 215 1 190 1 233 3 193 9 235 9 170 1 306 1 308 1 356 1 101 2 199 2 221 1 81 4 244 2 359 1 21 1 225 1 180 1 48 1 366 2 
295 1 0 2 207 6 6 2 324 2 30 1 274 1 138 5 215 1 190 1 233 3 193 9 235 9 170 1 306 1 308 1 356 1 101 2 199 2 221 1 81 4 244 2 359 1 21 1 225 1 180 1 48 1 366 2 
295 1 0 2 207 7 6 2 324 2 30 1 274 1 138 6 215 1 190 1 233 4 193 10 235 10 170 1 306 1 308 1 356 1 101 2 199 2 221 1 81 5 244 2 359 1 21 1 225 1 180 1 48 1 366 2 
295 1 0 2 207 4 6 2 324 2 30 1 274 1 138 4 215 1 190 1 233 2 193 7 235 7 170 1 306 1 308 1 356 1 101 2 199 1 221 1 81 3 244 2 359 1 21 1 180 1 48 1 366 2 
0 1 308 1 207 3 6 1 324 1 274 1 199 2 138 3 221 1 81 2 190 1 244 1 233 1 193 4 235 4 170 1 225 1 366 1 
123 1 0 1 6 1 101 1 274 1 214 1 138 1 190 1 359 1 244 1 193 2 235 2 170 1 171 1 306 1 366 1 
207 1 6 2 101 1 274 1 138 2 81 1 190 1 21 1 233 1 193 3 235 3 170 1 366 2 
295 1 207 7 0 1 6 2 324 1 274 1 138 5 190 1 233 3 193 9 235 9 170 1 308 1 356 1 101 1 199 2 19 1 81 4 221 1 21 1 244 1 203 1 225 1 366 2 
295 1 207 7 0 1 6 2 324 1 274 1 138 5 190 1 233 3 193 9 235 9 170 1 308 1 356 1 101 1 199 2 19 1 81 4 221 1 21 1 244 1 203 1 225 1 366 2 
57 1 314 1 82 1 
314 1 12 2 15 1 
284 2 103 2 89 1 232 1 72 2 282 2 266 2 27 2 
322 1 230 1 114 1 52 1 348 1 89 1 232 1 72 3 166 1 234 1 192 1 35 2 77 1 282 2 146 2 352 1 79 1 261 1 284 2 17 2 240 1 149 1 127 1 336 1 102 1 103 3 151 1 153 1 339 2 157 1 42 2 315 1 247 1 228 1 158 1 266 2 27 2 
284 1 89 1 103 1 72 1 105 1 92 1 282 1 266 1 27 1 
57 1 103 1 72 1 104 1 34 1 360 1 303 1 106 1 84 1 314 1 280 1 282 1 351 1 14 1 
57 1 284 1 103 1 72 1 104 1 34 1 360 2 303 1 106 1 84 1 314 1 282 1 266 1 14 2 27 1 
3 1 70 1 14 1 326 1 360 1 
57 1 128 1 314 1 355 1 70 1 14 2 326 1 360 2 
14 1 326 1 360 1 
284 1 70 1 89 1 103 1 90 1 72 1 105 1 360 1 92 1 282 1 266 1 14 1 27 1 
314 1 
57 1 314 1 355 1 188 1 70 1 14 2 326 1 360 2 
39 1 124 2 57 1 355 1 345 1 70 2 275 1 222 1 360 5 326 2 313 1 314 1 291 1 293 1 363 2 37 2 14 5 111 1 307 1 
232 1 82 1 
284 1 103 2 72 2 232 1 276 1 84 1 290 1 282 2 96 1 266 1 27 1 
163 1 297 1 269 1 
149 1 52 1 127 1 103 1 102 1 232 1 72 1 153 1 339 1 234 1 42 1 315 1 349 1 146 1 352 1 79 1 
52 1 149 1 297 1 127 1 102 1 103 2 72 2 153 1 234 1 339 1 75 1 42 1 194 1 315 1 282 1 266 1 146 1 79 1 352 1 27 1 
284 1 103 3 72 3 232 1 276 1 84 1 75 2 290 1 194 1 282 3 266 3 27 3 
92 1 103 1 72 1 282 1 266 1 27 1 
75 1 284 1 103 3 232 1 72 3 282 3 266 3 27 3 
92 1 103 1 72 1 282 1 266 1 27 1 
284 1 103 1 72 1 84 1 290 1 282 1 266 1 96 1 27 1 
322 1 114 1 52 1 348 1 89 1 232 1 72 4 34 1 234 1 303 1 192 1 75 1 35 2 194 1 77 1 282 3 14 1 146 1 79 1 352 1 284 2 17 1 240 1 149 1 148 1 127 1 336 1 102 1 103 4 153 1 104 1 360 1 106 1 84 1 339 1 157 1 290 1 42 1 315 1 247 1 158 1 266 3 205 1 27 3 
239 1 75 1 280 1 103 2 232 1 72 2 282 2 266 1 27 1 
284 1 148 1 323 1 103 3 72 3 34 1 104 1 360 1 84 1 303 1 106 1 290 1 75 2 314 1 194 1 282 3 266 3 14 1 27 3 
284 1 163 1 297 1 103 2 72 2 75 1 290 1 282 2 266 2 27 2 
149 1 52 1 127 1 103 1 102 1 232 1 72 1 153 1 339 1 234 1 42 1 315 1 146 1 352 1 79 1 
249 1 52 1 103 1 102 1 232 1 72 1 153 1 339 1 234 1 42 1 315 1 342 1 146 1 352 1 79 1 
68 1 17 2 240 2 322 1 163 1 210 1 347 1 297 1 348 1 336 1 189 1 157 1 35 2 278 1 109 1 77 1 158 1 269 1 305 1 
107 1 103 1 72 1 282 1 266 1 27 1 84 1 106 1 
362 1 329 1 
362 1 329 1 
301 1 61 1 
301 1 61 1 
301 1 61 1 
362 1 329 1 216 1 
362 1 329 1 216 1 
209 1 362 1 329 1 
213 1 310 1 362 2 329 2 301 1 61 1 
362 1 329 1 216 1 
362 1 329 1 98 1 
362 1 329 1 98 1 
362 1 329 1 98 1 
136 1 209 1 272 1 232 1 72 2 118 1 254 1 257 1 258 1 282 2 329 1 14 1 122 1 103 2 360 1 289 1 86 1 130 1 87 1 362 1 266 2 50 1 51 1 27 2 
285 1 213 1 272 1 223 1 22 1 360 2 85 2 245 1 314 1 254 2 86 2 87 2 62 1 362 2 329 2 50 2 14 2 122 3 364 1 
0 1 324 1 244 1 
0 1 171 1 244 1 
324 2 181 1 341 1 171 1 244 3 252 1 
324 1 181 1 341 1 171 1 311 1 244 2 
324 1 181 1 341 2 171 1 244 2 
248 1 68 1 136 1 347 1 346 1 70 4 298 1 326 1 236 2 78 1 304 1 12 3 93 2 37 1 258 1 14 5 15 1 124 1 39 3 57 1 147 1 80 2 355 1 222 2 176 1 360 5 177 1 314 2 293 1 363 1 267 1 51 1 
68 3 136 4 3 5 347 3 70 7 32 5 300 1 167 1 326 6 236 6 78 2 304 3 12 9 93 6 37 2 95 1 14 9 15 3 124 2 39 8 57 1 263 1 147 3 355 1 222 6 176 3 360 9 177 1 156 1 314 5 291 1 110 1 293 1 363 2 267 2 
68 1 136 1 347 1 346 1 70 2 298 1 236 2 78 1 304 1 37 1 93 2 12 4 14 3 15 2 124 1 39 3 57 1 80 1 147 1 222 2 360 3 176 1 314 3 291 1 363 1 267 1 
68 2 136 2 347 2 346 1 70 3 298 1 167 1 236 4 78 1 304 2 12 7 93 4 37 1 14 4 15 3 124 1 39 5 57 1 263 1 80 2 147 2 222 4 360 4 176 2 314 4 291 1 110 1 363 1 267 1 
179 1 102 1 82 1 
296 1 102 1 
237 1 
315 1 102 1 234 1 
100 1 102 1 
102 1 234 1 
354 1 102 3 224 1 234 1 237 1 315 1 179 2 
68 3 8 2 117 2 189 5 325 1 73 1 17 14 240 6 242 1 83 1 175 2 176 3 109 4 227 1 228 8 88 2 294 1 343 1 
68 3 8 2 117 2 189 7 325 1 73 1 17 14 240 6 242 3 83 1 175 2 176 3 109 4 227 1 228 8 88 2 294 1 343 1 
68 3 8 2 117 2 189 5 325 1 73 1 10 1 17 14 240 6 242 1 83 1 175 2 176 3 109 4 228 8 227 1 88 2 294 1 343 1 
68 6 161 4 322 1 347 3 8 3 348 1 164 1 117 3 325 1 189 14 251 1 327 1 73 2 35 2 77 1 304 3 120 1 97 1 38 1 353 3 17 40 147 3 240 19 242 7 83 1 175 3 176 6 109 7 47 1 227 1 228 21 158 1 88 2 294 1 343 2 
68 3 322 2 348 2 8 2 9 1 164 1 117 2 325 1 189 7 73 1 35 4 77 2 17 16 240 7 242 2 83 1 175 2 176 3 43 1 109 5 228 9 227 1 158 2 88 2 343 1 
320 1 207 1 0 1 6 1 271 1 324 1 274 1 138 1 71 1 190 1 252 1 193 2 235 2 170 1 94 1 171 1 331 1 146 1 56 1 352 1 79 1 101 1 244 2 339 1 42 1 246 1 340 1 49 1 186 1 366 1 
320 1 0 1 207 2 6 1 271 1 29 1 324 1 31 1 138 1 71 1 190 1 252 1 193 3 235 3 170 1 94 1 171 1 331 1 146 1 55 1 56 1 352 1 79 1 101 1 244 2 339 1 42 1 246 1 49 1 366 1 
320 1 207 2 0 1 31 1 324 1 138 1 71 1 190 1 252 1 193 2 235 2 170 1 94 1 171 1 331 1 146 1 55 1 56 1 352 1 79 1 101 1 244 2 339 1 42 1 246 1 
112 1 6 1 29 1 299 1 191 1 234 1 193 1 235 1 54 1 350 1 146 1 331 2 79 1 56 2 352 1 197 1 101 2 102 1 153 1 339 1 42 1 246 2 366 1 
320 1 0 1 6 1 271 1 324 1 31 1 274 1 71 1 252 1 193 1 235 1 94 1 171 1 331 1 146 1 56 1 352 1 79 1 101 1 244 2 339 1 42 1 246 1 49 1 186 1 366 1 
187 1 
229 2 326 6 234 1 280 1 279 1 54 1 12 2 282 1 14 5 146 2 15 2 57 1 197 1 286 2 58 1 102 1 103 1 153 2 104 1 287 1 338 2 202 1 339 2 106 1 292 2 293 1 159 1 162 1 69 1 250 4 72 1 165 1 34 1 303 1 255 1 37 1 351 1 352 1 79 1 39 2 124 1 125 2 309 1 355 3 222 2 360 5 84 1 42 2 314 2 317 1 132 1 363 1 267 1 185 2 365 2 
188 1 162 1 250 2 72 1 165 1 34 1 326 2 303 1 280 1 279 1 282 1 351 1 14 3 58 1 355 1 103 1 104 1 338 1 360 3 106 1 84 1 159 1 
229 1 188 1 162 1 250 3 72 1 165 1 34 1 326 1 303 1 280 1 279 1 282 1 351 1 14 3 57 1 58 1 355 1 103 1 104 1 360 3 106 1 84 1 314 1 159 1 
229 1 188 1 162 1 250 3 72 1 165 1 34 1 326 2 303 1 280 1 279 1 282 1 351 1 14 3 57 1 355 1 58 1 103 1 104 1 338 1 360 3 106 1 84 1 314 1 159 1 365 1 
229 2 188 1 89 1 90 1 326 7 279 1 280 1 92 1 282 2 14 5 15 2 284 1 57 1 332 1 58 1 286 2 103 2 105 1 104 1 338 4 106 1 292 2 293 1 159 1 27 1 206 1 67 1 162 1 250 4 69 1 72 2 165 1 34 1 303 1 255 1 37 1 351 1 124 1 39 1 173 1 125 2 355 3 222 1 360 5 84 1 314 1 131 1 363 1 266 1 185 2 365 4 
229 2 326 4 279 1 280 1 12 2 282 1 14 4 15 2 57 1 58 1 286 2 103 1 104 1 338 2 106 1 292 2 293 1 159 1 162 1 250 4 69 1 72 1 165 1 34 1 303 1 255 1 37 1 351 1 124 1 39 1 125 2 355 2 222 1 360 4 84 1 314 2 317 1 363 1 185 2 365 2 
229 2 89 1 90 1 326 4 279 1 280 1 92 1 282 2 14 4 15 2 284 1 57 1 58 1 286 2 103 2 105 1 104 1 338 2 106 1 292 2 293 1 159 1 27 1 67 1 206 1 162 1 250 4 69 1 72 2 165 1 34 1 303 1 255 1 37 1 351 1 124 1 39 1 173 1 125 2 355 2 222 1 360 4 84 1 314 1 363 1 266 1 185 2 365 2 
229 2 89 1 90 1 326 4 279 1 280 1 92 1 282 2 14 4 15 2 284 1 57 1 58 1 286 2 103 2 105 1 104 1 338 2 106 1 292 2 293 1 159 1 27 1 67 1 206 1 162 1 250 4 69 1 72 2 165 1 34 1 303 1 255 1 37 1 351 1 124 1 39 1 173 1 125 2 355 2 222 1 360 4 84 1 314 1 363 1 266 1 185 2 365 2 
229 2 89 1 90 1 326 4 142 2 279 1 280 1 92 1 12 2 282 2 14 4 284 1 57 1 58 1 103 2 243 2 105 1 104 1 338 2 106 1 108 1 292 2 25 1 293 1 159 1 27 1 162 1 250 4 69 1 72 2 165 1 34 1 303 1 37 1 351 1 124 1 39 1 173 1 125 2 355 2 222 1 360 4 84 1 314 1 363 1 135 1 266 1 365 2 
229 3 89 1 90 1 326 5 279 1 280 1 92 1 282 2 14 4 15 2 284 1 57 1 58 1 286 2 103 2 105 1 104 1 338 3 106 1 292 2 293 1 159 1 27 1 206 1 67 1 162 1 250 5 69 1 72 2 165 1 34 1 303 1 255 1 37 1 351 1 124 1 39 1 173 1 125 2 355 2 222 1 360 4 84 1 314 1 131 1 363 1 266 1 185 2 365 3 
229 3 89 1 90 1 326 5 279 1 280 1 92 1 282 2 14 4 15 2 284 1 57 1 58 1 286 2 103 2 105 1 104 1 338 3 106 1 292 2 293 1 159 1 27 1 206 1 67 1 162 1 250 5 69 1 72 2 165 1 34 1 303 1 255 1 37 1 351 1 124 1 39 1 173 1 125 2 355 2 222 1 360 4 84 1 314 1 131 1 363 1 266 1 185 2 365 3 
229 2 326 4 142 2 279 1 280 1 12 2 282 1 14 4 57 1 58 1 103 1 243 2 104 1 338 2 106 1 108 1 292 2 293 1 159 1 162 1 250 4 69 1 72 1 165 1 34 1 303 1 37 1 351 1 124 1 39 1 125 2 355 2 222 1 360 4 84 1 314 1 317 1 363 1 365 2 
68 1 17 5 240 2 322 1 8 1 348 1 336 1 117 1 232 2 189 2 82 1 83 1 175 1 176 1 157 1 35 2 109 2 77 1 228 3 227 1 158 1 88 1 305 1 
161 4 322 2 163 3 212 1 348 2 297 12 232 1 166 1 189 2 251 1 192 1 35 4 77 2 119 1 304 3 97 2 353 3 17 15 147 3 240 5 242 2 336 2 176 3 157 1 46 1 64 1 228 10 158 2 184 1 269 12 
322 1 163 1 348 1 232 1 72 1 166 1 276 1 75 1 169 1 192 1 35 2 194 1 77 1 282 1 330 1 17 2 240 1 264 1 336 1 103 1 84 1 157 1 46 1 228 1 266 1 158 1 27 1 
322 1 348 1 33 1 72 1 302 1 75 1 192 1 35 2 194 1 77 1 282 1 146 1 17 2 240 2 336 1 103 1 153 1 361 1 339 1 157 1 204 1 42 1 46 1 266 1 158 1 27 1 
4 1 322 2 230 2 31 1 348 2 72 1 166 1 53 1 91 1 234 2 75 1 192 1 76 1 35 4 77 2 54 1 282 1 260 1 146 8 305 1 79 2 352 2 17 2 197 1 240 1 103 1 102 3 336 2 153 2 154 1 24 1 339 7 157 2 42 8 340 1 228 1 266 1 158 2 27 1 
68 1 113 1 322 1 163 1 347 1 297 1 348 1 72 1 189 1 35 2 77 1 304 1 282 1 284 1 147 1 17 3 240 2 336 1 103 1 176 1 290 1 157 1 109 1 46 1 228 1 266 1 158 1 269 1 27 1 
17 2 322 1 163 1 297 1 348 1 242 1 336 1 189 1 176 1 157 1 35 2 77 1 304 1 228 2 158 1 121 1 269 1 305 1 
68 1 17 2 322 1 240 2 163 1 347 1 297 1 348 1 336 1 189 1 157 1 35 2 278 1 109 1 77 1 158 1 269 1 305 1 
68 1 322 1 163 2 347 1 348 1 297 2 189 2 35 2 77 1 304 1 305 1 147 1 17 4 240 2 242 1 336 1 176 1 157 1 109 1 228 2 158 1 269 2 
17 2 322 1 163 1 297 1 348 1 242 1 336 1 189 1 53 1 176 1 157 1 35 2 77 1 304 1 228 2 158 1 121 1 269 1 
68 1 17 2 322 1 240 2 163 1 347 1 297 1 348 1 336 1 189 1 53 1 157 1 35 2 278 1 109 1 77 1 158 1 269 1 
17 2 147 1 322 1 163 1 297 1 348 1 242 1 336 1 189 1 53 1 176 1 157 1 35 2 77 1 304 1 228 2 158 1 269 1 
147 1 17 2 322 1 163 1 297 1 348 1 242 1 336 1 189 1 176 1 157 1 35 2 77 1 304 1 228 2 158 1 269 1 
322 1 52 1 348 1 232 1 72 1 166 1 234 1 192 1 35 2 77 1 146 1 79 1 352 1 17 2 240 1 149 1 127 1 102 1 103 1 336 1 153 1 339 1 157 1 42 1 315 1 247 1 228 1 158 1 
249 1 322 1 52 1 348 1 232 1 72 1 166 1 234 1 192 1 35 2 77 1 146 1 79 1 352 1 17 2 240 1 102 1 103 1 336 1 153 1 20 1 339 1 157 1 42 1 315 1 342 1 228 1 158 1 
17 2 147 1 322 1 163 1 297 1 348 1 242 1 336 1 189 1 176 1 157 1 35 2 46 1 77 1 304 1 228 2 158 1 269 1 
322 1 163 1 52 1 297 1 348 1 72 1 189 1 234 1 35 2 77 1 304 1 146 1 79 1 352 1 17 2 147 1 149 1 242 1 127 1 102 1 103 1 336 1 176 1 339 1 157 1 42 1 45 1 340 1 315 1 247 1 228 2 158 1 269 1 
322 1 7 1 163 1 348 1 297 1 72 1 189 1 35 2 77 1 304 1 282 1 284 1 147 1 17 2 242 1 336 1 103 1 176 1 290 1 157 1 46 1 228 2 266 1 158 1 269 1 27 1 
68 3 161 4 208 3 322 2 347 3 348 2 9 1 189 3 251 2 35 4 256 1 77 2 304 3 13 1 97 2 353 2 40 1 17 24 147 3 240 13 242 1 358 1 288 1 176 3 178 1 44 1 109 2 63 1 228 11 158 2 160 1 
68 3 161 4 208 3 322 2 347 3 348 2 9 1 189 3 251 2 35 4 256 1 77 2 304 3 13 1 97 2 353 2 40 1 17 24 147 3 240 13 242 1 358 1 288 1 176 3 178 1 44 1 109 2 63 1 228 11 158 2 160 1 
68 6 161 3 208 3 322 1 347 3 8 3 348 1 9 1 117 3 189 8 251 2 35 2 256 1 77 1 119 1 304 3 13 1 97 1 353 3 40 1 17 39 147 3 240 18 242 3 358 1 175 3 83 3 288 1 176 6 178 1 44 1 109 5 63 1 227 3 228 21 158 1 88 3 
68 3 161 4 208 3 322 2 347 3 348 2 9 1 189 4 251 2 35 4 256 1 11 1 77 2 304 3 13 1 97 2 353 2 40 1 17 24 147 3 240 13 242 1 358 1 288 1 176 3 44 1 109 3 63 1 228 11 158 2 160 1 
68 1 161 1 208 1 322 1 347 1 348 1 9 1 251 1 35 2 256 1 77 1 304 1 13 1 353 1 17 8 147 1 240 4 358 1 288 2 176 1 178 1 63 2 228 4 158 1 
322 1 230 2 348 1 72 2 166 1 234 1 192 1 35 2 77 1 143 1 282 2 260 1 146 2 79 1 352 1 17 2 240 1 174 1 102 1 336 1 337 1 103 2 154 1 339 2 157 1 42 2 46 1 316 1 26 1 228 1 158 1 
0 1 271 1 59 1 324 1 31 1 18 1 152 1 71 1 244 2 252 1 339 2 42 2 340 1 171 1 94 1 146 2 331 1 79 1 352 1 
0 1 5 1 271 1 324 1 31 1 152 1 71 1 244 2 252 1 339 1 42 1 171 1 94 1 146 1 331 1 352 1 79 1 
197 1 18 1 102 1 153 1 139 1 234 1 339 1 42 1 54 1 350 1 146 1 331 1 79 1 352 1 
0 1 271 1 59 1 324 1 31 1 18 1 152 1 71 1 244 2 252 1 339 1 42 1 171 1 94 1 146 1 331 1 79 1 352 1 
273 1 
39 1 57 1 314 1 275 1 82 1 222 1 313 1 
326 1 255 1 37 1 12 1 14 1 15 1 39 1 124 1 57 1 286 1 355 1 222 1 360 1 314 2 293 1 363 1 185 1 
68 1 28 1 1 1 137 1 347 1 296 2 34 1 326 2 234 1 236 3 304 1 12 6 93 3 37 2 328 1 14 2 145 1 146 1 15 3 352 1 79 2 99 1 124 2 39 4 147 1 355 1 219 1 102 3 153 1 222 3 176 1 361 1 360 2 224 1 339 1 42 1 314 3 315 1 293 2 363 2 267 1 66 1 
353 1 124 1 39 1 161 1 222 1 251 1 314 1 44 1 236 1 293 1 363 1 37 1 93 1 12 2 15 1 
67 1 68 1 28 2 8 1 89 1 72 1 90 1 325 1 92 1 37 1 282 1 14 1 124 1 39 2 284 1 103 1 105 1 175 1 222 2 360 1 176 2 293 1 133 1 363 1 266 1 88 1 27 1 
124 1 39 1 57 1 275 1 222 1 313 1 314 1 293 1 363 1 37 1 
68 2 39 5 28 2 147 2 347 2 222 5 361 1 176 2 314 5 236 5 304 2 133 1 93 5 12 10 15 5 
57 1 314 1 355 1 14 1 360 1 326 1 
321 1 326 4 168 1 234 1 195 1 54 1 37 2 14 3 146 4 79 1 352 1 124 2 39 2 309 1 197 1 355 2 60 2 102 1 153 2 222 2 202 2 360 3 339 4 42 4 291 1 132 1 293 1 363 2 267 2 
322 1 114 1 52 1 348 1 89 1 232 1 72 3 234 1 192 1 35 2 77 1 282 2 146 1 352 1 79 1 284 2 17 1 240 1 149 1 127 1 103 3 102 1 336 1 153 1 339 1 157 1 42 1 315 1 247 1 158 1 266 2 27 2 
124 1 39 1 57 2 117 1 222 2 202 1 314 4 236 2 293 1 93 2 12 4 363 1 37 1 267 1 15 2 
262 1 86 1 50 1 
262 1 86 1 50 1 
285 1 257 1 86 1 334 1 50 1 
262 1 86 1 50 1 
86 1 200 1 50 1 
86 1 200 1 50 1 
86 1 200 1 50 1 
86 1 50 1 
362 1 329 1 
68 3 161 1 322 1 348 1 8 2 9 1 117 1 325 1 189 5 251 1 35 2 77 1 353 1 17 15 240 7 242 1 83 1 175 2 176 3 44 1 109 4 228 8 227 1 158 1 88 2 
68 3 161 2 322 2 8 2 348 2 9 1 117 1 325 1 189 6 251 1 35 4 77 2 304 1 97 1 353 1 17 18 147 1 240 8 242 2 175 2 83 1 176 4 44 1 109 4 227 1 228 10 158 2 88 2 65 1 
68 5 161 1 322 3 347 2 8 2 115 1 348 3 211 1 9 1 164 1 117 1 325 1 189 7 251 1 74 1 35 6 77 3 304 2 353 1 17 26 147 2 240 13 242 2 175 2 83 1 176 5 44 1 109 5 134 1 227 1 228 13 158 3 88 2 65 1 
68 4 161 1 322 3 347 1 8 2 348 3 211 1 115 1 164 1 9 1 117 1 325 1 189 9 251 1 74 1 35 6 77 3 304 2 353 1 17 24 147 2 240 10 242 4 175 2 83 1 176 5 44 1 109 5 134 1 227 1 228 14 158 3 88 2 65 1 
68 3 161 1 322 1 348 1 8 2 9 1 117 1 325 1 189 5 251 1 35 2 77 1 353 1 17 15 240 7 242 1 83 1 175 2 176 3 44 1 109 4 228 8 227 1 158 1 88 2 
68 2 161 1 322 1 347 2 348 1 211 1 115 1 9 1 189 2 251 1 74 1 35 2 77 1 304 2 353 1 17 12 147 2 240 6 242 1 176 2 44 1 109 1 134 1 228 6 158 1 
68 4 161 1 322 4 347 1 8 2 115 1 348 4 211 1 9 1 164 2 117 1 325 1 189 7 251 1 74 1 35 8 77 4 304 2 353 1 17 25 147 2 240 11 242 2 175 2 83 1 176 5 44 1 109 5 134 1 227 1 228 14 158 4 88 2 65 1 
68 2 161 1 322 4 347 2 115 1 348 4 211 1 9 1 164 2 189 6 251 1 74 1 35 8 77 4 304 3 353 1 17 16 147 3 240 7 242 3 176 3 44 1 109 3 134 1 228 9 158 4 160 1 
68 1 17 7 240 4 8 3 242 3 189 6 83 1 175 3 176 1 109 3 227 2 228 3 88 1 
68 4 161 1 322 4 347 1 8 2 115 1 348 4 211 1 9 1 164 2 117 1 325 1 189 7 251 1 74 1 35 8 77 4 304 2 353 1 17 25 147 2 240 11 242 2 175 2 83 1 176 5 44 1 109 5 134 1 227 1 228 14 158 4 88 2 160 1 
68 3 322 2 8 2 348 2 164 1 117 1 325 1 189 7 35 4 77 2 17 17 240 8 242 3 175 2 83 1 176 3 109 4 227 1 228 9 158 2 88 2 
68 1 17 5 240 2 8 1 117 1 189 2 82 1 83 1 175 1 176 1 109 2 227 1 228 3 88 1 
68 1 147 1 17 4 240 2 322 1 347 1 348 1 242 1 189 2 176 1 35 2 109 1 77 1 304 1 228 2 158 1 65 1 
68 1 353 1 161 2 17 7 147 1 240 4 347 1 242 1 189 2 251 1 176 1 109 1 304 1 228 3 97 1 
68 5 161 2 322 1 347 2 8 2 212 1 348 1 164 1 117 1 325 1 189 7 35 2 77 1 304 2 119 1 97 1 353 2 147 2 17 25 240 12 242 2 175 2 83 1 176 5 109 5 227 1 228 13 158 1 88 2 
161 1 17 1 240 1 
353 1 17 1 228 1 
68 1 17 6 147 1 322 1 240 3 347 1 348 1 242 1 189 3 361 1 176 1 35 2 109 2 77 1 304 1 228 3 158 1 65 1 
68 2 161 1 322 1 347 2 348 1 211 1 115 1 9 1 189 2 251 1 74 1 35 2 77 1 304 2 353 1 17 12 147 2 240 6 242 1 176 2 44 1 109 1 134 1 228 6 158 1 
68 1 17 6 240 3 8 1 242 1 189 2 175 1 176 1 109 1 228 3 88 1 
17 3 240 2 322 1 8 1 348 1 242 1 164 1 335 1 189 2 175 1 83 1 35 2 109 1 77 1 228 1 227 1 158 1 
68 2 17 10 322 1 240 5 348 1 8 2 9 1 242 2 325 1 189 5 175 2 176 2 35 2 109 3 77 1 228 5 158 1 88 1 
17 2 322 1 348 1 9 1 242 1 189 1 176 1 35 2 77 1 304 1 228 2 158 1 
68 1 147 1 17 4 240 2 322 1 347 1 348 1 9 1 242 1 189 2 176 1 35 2 109 1 77 1 304 1 228 2 158 1 
17 3 240 2 322 3 348 3 8 1 164 1 9 1 242 1 335 1 189 2 175 1 35 6 109 1 77 3 228 1 158 3 160 1 
68 5 161 3 322 4 347 2 8 2 348 4 164 1 9 1 117 1 325 1 189 9 251 1 327 1 35 8 77 4 304 2 38 1 353 3 17 31 147 2 240 15 242 4 175 2 83 1 176 5 109 5 47 1 227 1 228 16 158 4 88 2 65 1 160 1 
239 1 280 1 41 1 103 1 232 1 72 1 282 1 
239 1 41 1 218 1 241 1 103 1 232 1 72 1 141 1 253 1 129 1 280 1 282 1 
42 1 197 1 54 1 102 1 153 1 82 1 146 1 79 1 352 1 234 1 339 1 
52 1 127 1 102 1 103 2 232 1 72 2 153 1 234 1 339 1 75 1 42 1 315 1 282 1 266 1 146 1 79 1 27 1 352 1 
52 1 232 1 72 2 234 2 303 1 75 1 282 2 146 1 352 1 79 1 100 1 127 1 60 1 103 2 102 3 339 1 106 1 84 1 42 1 315 2 183 1 266 1 27 2 
249 1 52 1 232 1 72 2 234 2 303 1 75 1 282 2 146 2 352 1 79 1 100 1 333 1 60 1 103 2 102 3 339 2 106 1 84 1 42 2 315 2 183 1 266 1 27 2 
296 1 34 1 326 1 234 1 14 2 146 3 352 1 79 1 283 1 57 1 100 1 333 1 217 1 102 4 60 1 153 1 360 2 339 3 42 3 314 1 179 1 315 1 183 1 
296 1 89 1 72 1 90 1 34 1 326 1 92 1 328 1 282 1 14 2 146 1 57 1 284 1 103 1 102 1 60 1 105 1 360 2 339 1 42 1 314 1 266 1 27 1 
42 1 146 1 79 1 352 1 91 1 339 1 
196 1 230 1 4 1 31 1 198 1 102 3 153 2 154 1 91 1 224 1 24 1 339 6 234 2 76 1 42 7 340 1 315 1 146 7 172 1 352 2 79 3 
68 2 322 1 8 1 348 1 232 1 72 1 189 3 325 1 276 1 302 1 75 1 35 2 77 1 282 1 146 1 17 8 240 4 242 1 336 1 337 1 103 1 175 1 83 1 176 2 84 1 339 1 157 1 42 1 340 1 109 2 46 1 228 4 227 1 266 1 158 1 88 1 27 1 
321 1 1 1 137 1 8 1 89 1 275 1 90 1 325 1 326 2 92 1 328 1 282 1 145 1 14 3 146 1 57 2 284 1 102 1 103 1 153 1 105 1 339 1 293 2 27 1 68 2 28 2 296 1 70 1 72 1 34 1 37 2 124 2 39 4 355 1 222 5 175 1 360 3 176 2 313 1 42 1 314 2 133 1 363 2 266 1 88 1 
219 1 102 2 91 1 224 1 339 2 234 1 42 2 340 1 179 1 315 1 146 2 352 1 79 2 
333 1 197 1 102 1 153 1 277 1 339 4 234 1 42 4 340 1 54 1 146 4 79 1 352 1 
196 1 126 1 60 1 116 1 102 1 339 2 234 1 42 2 315 1 238 1 146 2 172 1 352 1 79 2 
42 1 0 1 171 1 71 1 153 1 244 1 146 1 79 1 352 1 339 1 
42 2 340 1 31 1 143 1 102 1 154 1 146 2 79 1 352 1 234 1 339 2 
197 1 4 1 60 1 102 3 153 1 154 1 277 1 339 4 24 1 234 2 42 5 340 1 54 1 146 5 352 2 79 2 
197 1 4 1 60 1 102 3 231 1 153 1 154 1 277 1 339 4 234 2 42 5 340 1 54 1 146 5 352 2 79 2 
249 1 52 1 102 1 103 2 232 1 72 2 153 1 234 1 339 1 75 1 42 1 315 1 282 1 266 1 146 1 79 1 27 1 352 1 
196 1 198 1 60 1 102 1 224 1 339 1 234 1 42 1 315 1 146 1 172 1 352 1 79 2 
357 1 144 1 232 1 268 1 16 1 
57 1 148 1 357 2 70 1 232 1 201 1 34 1 104 1 360 2 23 1 84 1 106 1 303 1 314 1 144 1 259 1 268 2 14 2 16 2 
316 1 174 1 357 1 144 1 103 1 72 1 282 1 26 1 268 1 
144 1 201 1 23 1 
170 1 138 1 82 1 190 1 
193 1 235 1 170 1 6 1 138 1 190 1 366 1 
193 1 246 1 101 1 
193 3 235 3 170 1 6 1 274 1 281 1 138 1 318 1 190 1 359 2 140 1 366 1 
193 2 207 1 235 2 170 1 6 1 199 1 138 1 190 1 366 1 
0 1 6 1 324 1 274 1 138 1 221 1 81 1 244 1 193 1 235 1 366 1 
193 1 235 1 170 1 6 1 274 1 138 1 366 1 
193 1 235 1 170 2 6 1 274 1 190 1 366 1 
344 1 193 2 235 2 170 1 6 2 274 1 226 1 138 1 366 2 270 1 
295 1 207 2 6 1 356 1 274 1 138 2 81 1 190 1 233 1 193 3 235 3 170 1 366 1 
0 1 207 1 6 1 324 1 274 1 220 1 138 1 190 1 244 2 252 1 193 2 235 2 170 1 171 1 366 1 
207 2 6 2 274 1 199 1 138 2 81 1 190 1 233 1 193 4 235 4 170 1 225 1 366 2 
193 1 235 1 170 1 6 1 274 1 138 1 190 1 366 1 
207 2 6 1 138 3 81 1 359 1 190 2 155 1 140 1 233 1 193 4 235 4 170 2 281 1 366 1 
207 1 6 1 274 1 138 1 19 1 312 1 190 1 193 2 235 2 170 1 36 1 366 1 
6 1 274 1 138 1 359 2 190 1 140 1 193 3 235 3 170 1 182 1 281 2 366 1 
265 1 138 1 319 1 
193 1 235 1 2 1 6 1 274 1 366 1 
193 2 207 1 235 2 170 1 6 1 356 1 274 1 138 1 190 1 366 1 
150 1 
193 1 235 1 170 1 6 1 274 1 138 1 190 1 366 1 
207 1 6 1 356 1 274 1 138 1 359 1 190 1 193 3 235 3 170 1 366 1 
193 1 235 1 207 1 138 1 81 1 233 1 
170 1 138 1 

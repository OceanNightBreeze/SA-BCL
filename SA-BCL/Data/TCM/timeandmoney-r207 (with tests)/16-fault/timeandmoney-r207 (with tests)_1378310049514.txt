#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (11,150) 67 (158,270) (158,270) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (11,150) 67 (158,270) (158,270) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (11,150) 67 (158,270) (158,270) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (11,150) 67 (158,270) (158,270) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 1 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 102 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (126,248) (126,248) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 172 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 18 103 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 116 84 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 303 2 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 294 256 98 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 256 98 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 294 256 283 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 303 2 129 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 303 2 129 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 294 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 153 24 241 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 153 24 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 153 24 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 153 24 241 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 153 24 241 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 177 309 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 312 22 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (47,53) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (28,46) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 207 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 199 (210,277) (210,277) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
212 1 90 1 213 1 231 1 150 1 52 1 38 1 158 1 270 1 67 1 4 1 
212 1 90 1 213 1 231 1 150 1 52 1 38 1 158 1 270 1 67 1 4 1 
212 1 90 1 213 1 231 1 150 1 52 1 38 1 158 1 270 1 67 1 4 1 
212 1 90 1 213 1 231 1 150 1 52 1 38 1 158 1 270 1 67 1 4 1 
90 1 231 1 213 1 73 1 52 4 299 1 277 1 76 1 101 1 151 1 4 4 105 2 199 2 308 2 183 1 210 1 34 1 113 1 250 3 
90 1 212 1 231 1 213 1 52 2 277 1 38 1 168 1 4 2 26 1 124 1 183 1 208 1 210 1 34 1 113 1 
90 1 231 2 213 2 52 3 277 1 38 1 76 1 4 3 199 1 308 1 11 1 210 1 113 1 250 1 
275 1 231 2 73 1 277 1 38 1 76 3 151 1 4 9 199 4 11 1 210 1 250 7 90 1 213 2 52 9 299 1 137 1 101 1 105 2 308 4 110 1 183 1 319 1 34 1 113 1 
275 1 231 2 73 1 277 1 38 1 76 3 151 1 4 9 199 4 11 1 210 1 250 7 90 1 213 2 52 9 299 1 137 1 101 1 105 2 308 4 110 1 183 1 319 1 34 1 113 1 
207 1 
251 1 49 1 51 1 278 1 74 1 239 1 20 1 315 1 14 1 32 1 320 1 
251 1 49 1 51 1 95 1 278 1 74 2 239 1 289 1 64 1 315 1 32 1 320 1 
74 1 85 1 
74 1 85 1 
74 1 
74 1 85 1 
74 1 85 1 
175 1 74 2 235 1 85 1 236 1 162 1 
207 1 56 1 
251 2 95 1 56 2 239 2 289 1 30 1 291 1 64 1 315 2 
265 1 262 1 225 1 
46 1 274 1 91 1 92 1 117 1 56 1 138 1 79 2 239 1 305 1 82 1 121 1 201 2 10 1 315 1 112 2 318 1 114 1 16 1 
251 5 289 4 95 1 232 1 181 1 43 1 291 1 64 4 56 1 315 5 80 1 239 5 15 2 20 1 
251 2 289 2 278 1 136 1 266 1 64 2 315 2 239 2 
251 1 46 1 91 1 92 1 117 1 80 1 79 1 305 1 239 2 82 1 289 1 201 1 225 1 64 1 315 2 112 1 318 1 15 1 114 1 16 1 
251 3 289 3 95 1 64 3 56 1 315 3 15 1 239 3 
251 1 289 1 278 1 266 1 64 1 315 1 239 1 
251 1 289 1 278 1 95 1 30 1 64 1 291 1 315 1 239 1 
251 2 35 1 49 1 1 1 51 1 278 1 95 1 74 1 80 1 239 2 289 2 64 2 291 1 315 2 32 1 15 1 320 1 
251 2 289 1 232 1 64 1 56 1 315 2 239 2 15 1 20 1 
251 1 35 1 49 1 51 1 278 1 74 1 80 1 239 1 282 1 289 1 64 1 315 1 32 1 15 1 320 1 
251 2 95 1 239 2 289 2 265 1 291 1 64 2 225 1 315 2 15 1 
46 1 92 1 91 1 117 1 56 1 79 1 239 1 305 1 82 1 201 1 315 1 112 1 318 1 16 1 114 1 
91 1 53 1 117 1 56 1 79 1 239 1 305 1 82 1 201 1 315 1 112 1 318 1 186 1 16 1 114 1 
188 2 119 1 122 4 244 2 8 1 161 1 86 1 128 1 87 1 163 2 94 1 131 1 54 1 302 1 100 1 171 1 104 1 259 1 108 1 262 2 265 2 225 2 142 1 144 1 
251 1 289 1 49 1 278 1 136 1 64 1 315 1 239 1 
230 1 169 1 
230 1 169 1 
132 1 184 1 
132 1 184 1 
132 1 184 1 
230 1 48 1 169 1 
230 2 132 1 169 2 3 1 184 1 68 1 
230 1 130 1 169 1 
230 1 48 1 169 1 
230 1 48 1 169 1 
230 1 255 1 169 1 
230 1 255 1 169 1 
230 1 255 1 169 1 
230 1 251 1 71 1 74 1 169 1 102 1 239 1 307 1 106 1 107 1 289 1 159 1 64 1 315 1 317 1 
230 2 71 2 74 2 169 2 307 2 106 2 107 2 290 1 179 1 159 1 248 1 126 1 317 2 
183 1 101 1 34 1 
183 1 124 1 34 1 
42 1 124 1 101 2 152 1 229 1 34 3 
42 1 124 1 101 1 152 1 240 1 34 2 
42 1 124 1 101 1 152 2 34 2 
23 1 74 1 85 1 
172 1 36 1 74 2 85 2 44 1 
133 1 74 2 18 1 235 1 39 1 236 1 286 1 175 1 31 1 85 1 162 1 
133 1 74 1 18 1 235 1 39 1 236 1 103 1 286 1 175 1 31 1 162 1 
207 1 305 1 222 1 
177 1 305 1 
37 1 
91 1 305 1 114 1 
166 1 305 1 
305 1 114 1 
91 1 292 1 209 1 305 3 222 2 114 1 
70 1 94 1 131 4 188 3 78 1 238 1 221 2 259 2 122 6 8 1 111 1 267 1 12 2 247 1 295 1 271 2 163 3 
70 1 94 1 131 4 188 3 78 1 238 1 221 2 259 2 122 6 8 1 111 1 267 1 12 2 247 1 295 1 271 2 163 3 
70 1 94 1 131 4 188 3 78 1 238 1 221 2 259 2 173 1 122 6 8 1 111 1 267 1 12 2 247 1 295 1 271 2 163 3 
70 1 0 1 276 1 188 3 190 1 119 1 198 1 122 6 244 2 12 1 247 1 295 1 163 3 131 2 54 1 171 1 221 1 57 1 259 1 108 1 224 1 111 2 312 1 271 1 
70 1 188 4 78 1 238 1 119 2 122 8 244 4 8 1 12 2 247 1 88 1 163 4 94 1 131 4 54 2 257 1 171 2 221 1 57 1 259 3 108 2 111 1 267 1 271 2 
231 1 277 1 38 1 191 1 194 1 79 1 4 2 120 1 82 1 285 1 41 1 201 1 156 1 124 1 210 1 250 1 90 1 213 1 52 2 99 1 101 1 219 1 60 1 183 1 112 1 318 1 143 1 229 1 34 2 113 1 
231 1 277 1 38 1 191 1 79 1 4 3 120 1 82 1 284 1 41 1 243 1 201 1 155 1 156 1 124 1 210 1 250 2 213 1 52 3 99 1 101 1 219 1 60 1 183 1 112 1 318 1 229 1 143 1 34 2 113 1 
277 1 38 1 191 1 79 1 4 2 120 1 82 1 284 1 201 1 155 1 156 1 124 1 210 1 250 2 52 2 99 1 101 1 219 1 183 1 112 1 318 1 143 1 229 1 34 2 113 1 
231 1 213 1 52 1 38 2 117 1 97 1 214 1 99 2 79 1 305 1 4 1 82 1 120 2 243 1 201 1 27 1 109 1 156 2 263 1 66 1 112 1 318 1 114 1 
231 1 38 1 191 1 194 1 79 1 4 1 120 1 82 1 41 1 201 1 155 1 156 1 124 1 90 1 213 1 52 1 99 1 101 1 219 1 60 1 183 1 112 1 318 1 143 1 229 1 34 2 
5 1 
116 1 133 1 74 1 117 1 235 1 39 1 236 1 79 1 201 1 175 1 84 1 314 1 112 1 
251 1 49 1 51 1 278 1 74 2 303 1 239 1 20 1 242 1 123 1 310 1 125 1 315 1 14 1 32 1 320 1 249 1 
251 1 49 1 51 1 278 1 74 2 239 1 20 1 242 1 123 1 310 1 62 1 125 1 315 1 14 1 32 1 320 1 249 1 
251 1 49 1 51 1 278 1 2 1 74 2 303 1 239 1 20 1 242 1 123 1 310 1 125 1 315 1 14 1 32 1 320 1 249 1 
74 1 
147 1 278 1 74 2 279 1 235 1 236 1 239 1 83 1 242 1 287 1 123 1 205 1 125 1 294 1 14 1 249 1 251 1 49 1 51 1 133 1 20 1 175 1 310 1 314 1 315 1 32 1 320 1 
147 1 278 1 74 2 279 1 235 1 236 1 239 1 83 1 242 1 287 1 123 1 9 1 205 1 125 1 294 1 14 1 249 1 251 1 49 1 51 1 133 1 256 1 98 1 20 1 175 1 310 1 315 1 314 1 32 1 320 1 
147 1 278 1 74 2 279 1 235 1 236 1 239 1 83 1 242 1 287 1 123 1 9 1 205 1 125 1 294 1 14 1 249 1 251 1 49 1 51 1 133 1 256 1 98 1 20 1 175 1 310 1 315 1 314 1 32 1 320 1 
147 1 278 1 74 2 75 1 279 1 235 1 236 1 239 1 40 1 283 1 242 1 123 1 205 1 125 1 294 1 14 1 249 1 251 1 49 1 51 1 133 1 256 1 20 1 175 1 310 1 182 1 315 1 314 1 32 1 320 1 
251 1 129 1 49 1 51 1 278 1 2 1 74 2 303 1 239 1 20 1 242 1 123 1 310 1 125 1 315 1 14 1 32 1 320 1 249 1 
251 1 129 1 49 1 51 1 278 1 2 1 74 2 303 1 239 1 20 1 242 1 123 1 310 1 125 1 315 1 14 1 32 1 320 1 249 1 
147 1 278 1 74 2 279 1 235 1 236 1 239 1 40 1 242 1 123 1 205 1 125 1 294 1 14 1 249 1 251 1 49 1 51 1 133 1 20 1 175 1 310 1 182 1 314 1 315 1 32 1 320 1 
94 1 131 2 188 3 54 1 56 2 78 1 171 1 238 1 119 1 122 5 259 2 244 2 108 1 8 1 267 1 207 1 12 2 86 1 142 1 87 1 163 2 271 2 
278 1 188 5 276 2 233 1 234 1 196 2 119 2 198 2 122 12 244 4 8 2 86 1 163 7 298 1 131 1 94 1 252 1 54 2 302 2 100 1 56 1 171 2 258 1 259 1 108 2 262 8 265 2 61 1 180 1 225 8 65 1 142 2 273 1 
115 1 188 1 117 1 77 1 234 1 79 1 80 1 239 2 82 1 119 1 121 1 122 2 201 1 289 1 244 2 86 1 15 1 163 1 16 1 89 1 251 1 46 1 298 1 91 1 92 1 54 1 56 1 171 1 305 1 108 1 265 1 61 1 64 1 112 1 315 2 318 1 142 1 114 1 
146 2 234 1 78 1 79 3 80 1 238 1 239 3 82 2 155 1 244 6 7 2 8 3 12 2 86 3 15 1 163 9 16 2 251 1 164 2 93 2 92 2 91 2 94 3 96 1 100 2 171 3 259 4 108 3 29 2 262 6 265 6 267 1 112 3 271 2 114 2 188 10 117 1 280 1 196 2 119 3 122 19 201 3 289 1 298 1 46 2 131 8 54 3 55 1 302 2 56 2 305 2 221 4 61 1 64 1 225 6 315 3 142 3 318 2 
72 1 188 1 117 2 193 1 79 8 239 1 82 2 119 2 285 1 122 2 155 1 289 1 201 8 244 4 245 1 86 2 87 1 15 1 163 1 251 1 298 1 50 1 54 2 254 1 170 1 215 1 138 2 171 2 305 3 108 2 27 1 263 1 61 1 64 1 315 1 112 7 318 2 142 2 114 2 
188 2 234 1 239 1 196 1 119 1 122 3 289 1 244 2 8 1 291 1 86 1 163 1 251 1 131 1 94 1 95 1 54 1 302 1 100 1 171 1 259 1 108 1 265 1 262 1 225 1 64 1 315 1 142 1 69 1 
131 1 54 1 302 1 171 1 221 1 119 1 122 2 244 2 108 1 265 1 262 1 8 1 225 1 86 1 142 1 128 1 87 1 163 2 
131 1 94 1 54 1 188 2 100 1 171 1 104 1 119 1 259 1 122 2 244 2 108 1 265 1 262 1 225 1 86 1 142 1 87 1 
188 2 196 1 119 1 122 4 244 2 8 1 86 1 87 1 163 2 131 2 94 1 54 1 302 1 100 1 171 1 221 1 259 1 108 1 262 2 265 2 225 2 142 1 
131 1 54 1 215 1 302 1 171 1 221 1 119 1 122 2 244 2 108 1 265 1 262 1 8 1 225 1 86 1 142 1 128 1 163 2 
131 1 94 1 54 1 188 2 215 1 100 1 171 1 104 1 119 1 259 1 122 2 244 2 108 1 265 1 262 1 225 1 86 1 142 1 
188 2 196 1 119 1 122 4 244 2 8 1 86 1 163 2 131 2 94 1 54 1 302 1 215 1 100 1 171 1 221 1 259 1 108 1 262 2 265 2 225 2 142 1 
188 2 196 1 119 1 122 4 244 2 8 1 86 1 163 2 131 2 94 1 54 1 302 1 100 1 171 1 221 1 259 1 108 1 262 2 265 2 225 2 142 1 
146 1 188 1 117 1 79 1 239 1 82 1 119 1 122 2 201 1 244 2 86 1 163 1 16 1 298 1 46 1 91 1 92 1 54 1 56 1 171 1 305 1 108 1 61 1 112 1 315 1 318 1 142 1 114 1 
188 1 117 1 79 1 239 1 82 1 119 1 122 2 201 1 244 2 86 1 163 1 16 1 298 1 297 1 91 1 53 1 54 1 56 1 171 1 305 1 108 1 61 1 112 1 315 1 318 1 142 1 114 1 186 1 
188 2 234 1 196 1 119 1 122 4 244 2 8 1 86 1 163 2 131 2 94 1 54 1 302 1 100 1 171 1 221 1 259 1 108 1 262 2 265 2 225 2 142 1 
146 1 188 2 79 1 239 1 196 1 82 1 119 1 285 1 122 4 201 1 244 2 8 1 86 1 163 2 16 1 164 1 46 1 91 1 92 1 94 1 131 2 54 1 302 1 100 1 171 1 305 1 221 1 259 1 108 1 265 2 262 2 225 2 112 1 315 1 318 1 142 1 114 1 
188 1 234 1 239 1 196 1 119 1 122 3 289 1 244 2 203 1 8 1 291 1 86 1 163 2 251 1 94 1 131 1 95 1 54 1 302 1 100 1 171 1 221 1 108 1 262 1 265 1 64 1 225 1 315 1 142 1 
148 2 188 10 276 2 118 1 195 1 196 2 153 1 119 2 198 2 241 1 122 19 244 4 8 2 88 1 163 9 131 2 94 2 54 2 300 1 135 1 302 2 100 2 171 2 221 1 57 1 24 1 22 1 259 1 108 2 312 2 313 1 33 1 
148 2 188 8 276 2 118 1 195 2 196 2 153 1 119 3 198 2 241 1 122 18 244 6 8 2 88 1 163 10 131 2 94 1 54 3 300 1 135 1 302 2 100 1 171 3 221 1 57 2 24 2 22 1 259 1 108 3 312 2 313 1 33 1 
148 2 188 10 276 2 118 1 195 1 196 2 153 1 119 2 198 2 241 1 122 19 244 4 8 2 88 1 163 9 131 2 94 2 54 2 300 1 135 1 302 2 100 2 171 2 221 1 57 1 24 1 22 1 259 1 108 2 312 2 313 1 33 1 
148 2 188 10 276 2 118 1 195 1 196 2 153 1 119 2 198 2 241 1 122 19 244 4 8 2 88 1 163 9 131 2 94 2 54 2 300 1 135 1 302 2 100 2 171 2 221 1 57 1 24 1 22 1 259 1 108 2 312 2 313 1 33 1 
148 2 188 10 276 2 118 1 195 1 196 2 153 1 119 2 198 2 241 1 122 19 244 4 8 2 88 1 163 9 131 2 94 2 54 2 300 1 135 1 302 2 100 2 171 2 221 1 57 1 24 1 22 1 259 1 108 2 312 2 313 1 33 1 
187 1 188 1 192 1 234 1 79 2 239 2 82 1 119 1 122 2 201 2 244 2 86 1 160 1 163 1 251 2 298 1 50 1 54 1 254 1 138 2 171 1 305 1 223 1 58 1 108 1 61 1 315 2 112 2 318 1 142 1 114 1 
99 1 101 1 219 1 79 2 82 1 21 1 285 1 41 1 155 1 201 2 178 1 183 1 124 1 112 2 227 1 318 1 229 1 143 1 34 2 
99 1 101 1 219 1 79 1 281 1 82 1 41 1 155 1 201 1 178 1 183 1 124 1 112 1 318 1 229 1 143 1 34 2 
117 1 97 1 99 1 79 1 305 1 82 1 21 1 25 1 201 1 27 1 263 1 112 1 318 1 114 1 
99 1 101 1 219 1 79 1 21 1 82 1 41 1 155 1 201 1 178 1 183 1 124 1 112 1 227 1 318 1 229 1 143 1 34 2 
261 1 
59 1 157 1 207 1 
287 1 175 1 133 1 205 1 235 1 314 1 236 1 83 1 
91 1 117 1 235 1 236 1 79 1 305 1 82 1 306 1 201 1 177 1 175 1 309 1 314 1 112 1 318 1 209 1 114 1 
22 1 175 1 276 1 133 1 205 1 312 1 235 1 314 1 236 1 198 1 
94 1 133 1 74 1 235 1 236 1 304 2 238 1 260 1 175 1 8 2 9 1 205 2 12 1 314 1 228 1 271 1 
59 1 175 1 235 1 314 1 236 1 
94 1 133 1 8 1 205 1 302 1 100 1 196 1 
201 1 117 1 112 1 79 1 
175 1 133 1 205 1 235 1 314 1 39 1 236 1 139 1 
174 1 107 1 317 1 
107 1 134 1 13 1 317 1 272 1 
174 1 107 1 317 1 
174 1 107 1 317 1 
107 1 317 1 211 1 
107 1 317 1 211 1 
107 1 317 1 211 1 
107 1 317 1 
230 1 169 1 
94 1 131 4 188 5 54 2 78 1 171 2 238 1 221 2 119 2 57 1 122 9 259 2 244 4 108 2 8 1 267 1 12 2 163 4 271 2 
131 2 94 1 188 3 78 1 238 1 259 2 122 5 8 1 267 1 207 1 12 2 271 2 163 2 
94 1 131 2 188 2 54 1 302 1 100 1 171 1 196 1 119 1 221 1 259 1 122 4 288 1 244 2 108 1 8 1 163 2 
122 2 276 1 188 1 312 1 163 1 198 1 
276 2 188 12 233 1 78 1 238 2 196 2 119 1 198 2 122 22 244 2 8 4 12 4 163 10 94 4 131 9 54 1 302 2 100 2 171 1 221 5 57 1 259 4 260 1 108 1 180 1 267 1 65 1 271 4 
122 1 188 1 198 1 
122 1 276 1 163 1 
131 3 94 1 54 1 188 3 302 1 100 1 171 1 196 1 119 1 221 1 122 6 259 2 244 2 288 1 108 1 7 1 8 1 163 3 
276 1 188 6 118 1 196 2 119 1 198 1 122 12 244 2 8 2 88 1 163 6 94 2 131 2 54 1 300 1 135 1 302 2 100 2 171 1 221 1 22 1 259 1 108 1 312 1 313 1 
94 1 131 1 188 2 238 1 122 4 259 1 8 1 12 1 163 2 271 1 
0 1 131 2 188 2 54 1 78 1 171 1 221 1 119 1 57 1 259 1 122 3 244 2 108 1 267 1 12 1 163 1 271 1 
131 2 94 1 188 3 238 1 259 2 122 5 260 1 8 1 12 2 271 2 163 2 
131 1 54 1 302 1 171 1 119 1 221 1 122 2 244 2 108 1 8 1 88 1 163 2 
94 1 131 2 188 2 54 1 302 1 100 1 171 1 196 1 119 1 221 1 259 1 122 4 244 2 108 1 8 1 88 1 163 2 
0 1 131 2 188 2 54 3 171 3 119 3 221 1 57 1 122 3 259 1 244 6 108 3 12 1 296 1 88 1 271 1 163 1 
0 1 188 8 276 1 78 1 238 1 119 4 198 1 122 14 288 1 244 8 8 1 12 3 296 1 88 1 163 6 94 1 131 6 54 4 171 4 221 3 57 1 259 3 260 1 108 4 224 1 312 1 267 1 271 3 
276 1 188 10 118 1 78 1 238 2 196 2 119 2 198 1 122 21 244 4 8 4 12 4 88 1 163 11 94 3 131 10 54 2 300 1 135 1 302 2 100 1 171 2 221 5 57 1 22 1 259 5 260 1 108 2 267 1 312 1 313 1 271 4 
188 7 276 1 118 1 78 1 238 1 196 2 119 3 198 1 122 16 244 6 288 1 8 3 12 2 88 1 163 9 94 2 131 4 54 3 300 1 135 1 302 2 100 1 171 3 221 1 57 1 22 1 259 3 108 3 267 1 312 1 313 1 271 2 
276 1 188 10 118 1 78 1 238 1 196 2 119 3 198 1 122 18 288 1 244 6 8 3 12 2 88 1 163 8 94 3 131 4 54 3 300 1 135 1 302 2 100 2 171 3 221 1 22 1 57 1 259 3 108 3 267 1 312 1 313 1 271 2 
276 1 188 7 118 1 78 1 238 1 196 2 119 3 198 1 122 16 288 1 244 6 8 3 12 2 88 1 163 9 94 2 131 6 54 3 300 1 135 1 302 2 100 1 171 3 221 3 57 1 22 1 259 3 108 3 267 1 312 1 313 1 271 2 
276 1 188 10 118 1 78 1 238 2 196 2 119 2 198 1 122 21 244 4 8 4 12 4 88 1 163 11 94 3 131 10 54 2 300 1 135 1 302 2 100 1 171 2 221 5 57 1 22 1 259 5 260 1 108 2 267 1 312 1 313 1 271 4 
276 1 188 6 118 1 196 2 119 1 198 1 122 12 244 2 8 2 88 1 163 6 94 2 131 2 54 1 300 1 135 1 302 2 100 2 171 1 221 1 22 1 259 1 108 1 312 1 313 1 
188 8 276 1 118 1 78 1 238 1 196 2 119 4 198 1 122 17 288 1 244 8 8 3 12 2 88 1 163 9 94 2 131 6 54 4 300 1 135 1 302 2 100 1 171 4 221 3 22 1 57 2 259 3 108 4 267 1 312 1 313 1 271 2 
188 7 276 1 118 1 196 3 119 4 198 1 122 16 244 8 8 3 88 1 296 1 163 9 94 2 131 6 54 4 300 1 135 1 302 3 100 2 171 4 221 3 22 1 57 2 259 3 108 4 312 1 313 1 
94 1 131 4 188 4 78 1 238 1 221 2 122 7 259 2 8 1 267 2 12 2 271 2 163 3 
188 8 276 1 118 1 78 1 238 1 196 2 119 4 198 1 122 17 244 8 8 3 12 2 88 1 296 1 163 9 94 2 131 4 54 4 300 1 135 1 302 2 100 1 171 4 221 1 22 1 57 2 259 3 108 4 267 1 312 1 313 1 271 2 
251 1 149 1 232 1 56 1 315 1 239 1 20 1 
251 1 149 1 232 1 56 1 216 1 237 1 239 1 20 1 202 1 63 1 315 1 185 1 
201 1 27 1 263 1 117 1 207 1 112 1 318 1 79 1 305 1 82 1 114 1 
251 1 46 1 91 1 117 1 56 1 79 1 305 1 239 2 82 1 289 1 201 1 64 1 315 2 112 1 318 1 15 1 114 1 16 1 
251 2 46 1 91 2 49 1 166 1 51 1 278 1 56 1 79 1 305 3 239 2 220 1 82 1 289 1 201 1 64 2 315 2 112 1 318 1 15 1 17 1 114 2 16 1 
251 2 91 2 49 1 166 1 51 1 278 1 53 1 56 1 79 2 305 3 239 2 220 1 82 1 289 1 201 2 264 1 64 2 315 2 112 2 318 1 15 1 17 1 114 2 16 1 
47 1 201 1 177 1 74 1 112 1 79 1 305 1 220 1 
201 1 177 1 28 1 74 1 112 1 79 1 305 1 220 1 
201 1 245 1 112 1 318 1 79 1 82 1 
91 1 72 1 117 2 254 1 193 1 170 1 138 1 79 7 305 3 82 2 285 1 155 1 201 7 245 1 246 1 112 6 127 1 209 1 318 3 114 2 145 1 
146 1 188 3 234 1 78 1 79 1 238 1 239 2 82 1 119 2 285 1 122 5 289 1 244 4 201 1 8 1 12 2 86 2 15 1 163 2 16 1 251 1 164 1 46 1 91 1 93 1 92 1 94 1 131 2 54 2 56 2 171 2 305 1 223 1 259 2 108 2 267 1 64 1 315 2 112 1 318 1 142 2 271 2 114 1 
74 1 85 1 
91 1 37 1 79 1 305 1 222 1 306 1 82 1 201 1 245 1 112 1 209 1 318 1 114 1 
117 1 79 4 305 1 82 1 285 1 140 1 201 4 27 1 264 1 263 1 112 4 318 1 114 1 
91 1 96 1 301 1 79 2 220 1 305 1 82 1 201 2 206 1 112 2 127 1 318 2 114 1 145 1 
201 1 117 1 183 1 124 1 112 1 219 1 318 1 79 1 34 1 82 1 
58 1 155 1 201 2 254 1 112 2 318 1 79 2 305 1 82 1 114 1 285 1 
72 1 117 1 254 1 193 1 79 5 220 1 305 3 82 2 285 1 140 1 201 5 27 1 263 1 112 4 318 2 114 2 
117 1 253 1 254 1 193 1 79 5 220 1 305 3 82 2 285 1 140 1 201 5 27 1 263 1 112 4 318 2 114 2 
251 1 91 1 53 1 117 1 56 1 79 1 305 1 239 2 82 1 289 1 201 1 64 1 315 2 112 1 318 1 15 1 114 1 16 1 
91 1 79 1 220 1 305 1 82 1 201 1 246 1 112 1 127 1 209 1 318 2 114 1 145 1 
311 1 189 1 56 1 269 1 226 1 
35 1 165 1 49 1 51 1 278 1 189 1 74 2 19 1 56 1 154 1 311 2 85 1 226 2 269 2 32 1 320 1 
251 1 187 1 189 1 192 1 315 1 269 1 226 1 160 1 239 1 
165 1 189 1 19 1 
277 1 207 1 210 1 
213 1 231 1 52 1 277 1 4 1 210 1 113 1 
38 1 4 1 120 1 
90 1 231 1 213 1 52 2 167 1 277 1 168 1 4 2 200 1 210 1 113 1 
231 1 213 1 52 2 277 1 4 2 105 1 210 1 113 1 250 1 
90 1 213 1 231 1 308 1 299 1 52 1 183 1 101 1 4 1 34 1 199 1 
90 1 213 1 231 1 52 1 4 1 210 1 
90 1 213 1 231 1 52 1 277 1 4 1 210 1 199 1 
90 1 213 2 231 2 204 1 52 2 268 1 217 1 4 2 210 1 
90 1 231 1 213 1 52 3 277 1 76 1 137 1 4 3 199 1 308 1 210 1 319 1 113 1 250 2 
90 1 231 1 213 1 52 2 277 1 101 1 4 2 197 1 124 1 183 1 229 1 210 1 34 2 113 1 250 1 
90 1 231 1 213 1 52 3 73 1 277 1 76 1 4 3 105 1 199 1 308 1 210 1 113 1 250 2 
90 1 231 1 213 1 52 1 277 1 4 1 210 1 113 1 
231 1 213 1 52 3 277 1 76 1 4 3 199 1 308 1 210 1 113 2 250 2 
90 1 231 1 213 1 275 1 52 2 277 1 4 2 81 1 293 1 210 1 113 1 250 1 
90 1 231 1 213 1 52 2 167 1 277 1 168 1 4 2 6 1 210 1 113 1 
176 1 141 2 218 1 199 2 
90 1 213 1 231 1 52 1 316 1 4 1 
90 1 231 1 213 1 52 2 277 1 4 2 319 1 210 1 113 1 250 1 
45 1 
90 1 231 1 213 1 52 1 277 1 4 1 210 1 113 1 
90 1 231 1 213 1 52 2 277 1 168 1 4 2 210 1 113 1 
308 1 76 1 113 1 199 1 
210 1 

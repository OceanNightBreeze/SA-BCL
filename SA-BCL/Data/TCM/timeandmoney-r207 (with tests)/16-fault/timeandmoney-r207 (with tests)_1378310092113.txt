#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 94 161 149 104 260 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 230 29 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 223 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 223 203 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 200 154 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 204 200 154 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 224 204 200 132 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 200 154 354 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 200 154 354 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 283 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 230 29 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 94 161 149 104 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9719 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
138 1 17 1 341 1 371 1 167 1 252 1 
138 1 17 1 341 1 371 1 167 1 252 1 
138 1 17 1 341 1 371 1 167 1 252 1 
138 1 17 1 341 1 371 1 167 1 252 1 
68 1 344 1 345 1 213 1 148 3 263 1 252 1 138 4 17 1 219 1 276 1 165 1 313 2 371 4 167 1 114 3 234 2 41 1 
332 1 213 1 148 1 25 1 227 1 263 1 252 1 138 2 17 1 244 1 219 1 152 1 371 2 167 1 64 1 41 1 
344 1 213 1 148 2 227 1 263 1 252 2 138 3 17 1 229 1 371 3 167 2 234 1 114 1 
68 1 344 3 345 1 227 1 252 2 138 9 229 1 276 1 165 1 167 2 234 4 191 1 213 1 148 5 263 1 194 1 17 1 219 1 197 1 313 2 371 9 127 1 114 7 41 1 
68 1 344 3 345 1 227 1 252 2 138 9 229 1 276 1 165 1 167 2 234 4 191 1 213 1 148 5 263 1 194 1 17 1 219 1 197 1 313 2 371 9 127 1 114 7 41 1 
38 1 271 1 297 1 
38 1 39 1 224 2 
168 2 237 2 98 1 131 2 302 2 340 1 34 2 178 2 
343 1 266 1 69 1 21 2 131 2 160 1 226 2 202 1 319 1 351 1 98 1 255 2 302 2 281 1 48 1 305 1 8 1 168 3 237 2 238 2 169 1 86 1 308 1 34 2 193 1 105 2 262 1 90 1 290 1 174 1 340 1 221 1 178 3 63 1 342 1 67 1 316 1 
103 1 168 1 237 1 98 1 131 1 302 1 34 1 178 1 240 1 40 1 
168 1 103 1 158 1 271 1 321 1 336 1 302 1 189 1 178 1 62 1 293 1 38 1 47 1 265 1 
168 1 103 1 237 1 131 1 158 1 34 1 271 1 321 1 336 2 302 1 189 1 178 1 293 2 38 1 47 1 
336 1 232 1 293 1 58 1 150 1 
103 1 168 1 237 1 131 1 34 1 240 1 58 1 271 1 150 1 98 1 336 1 277 1 302 1 355 1 178 1 81 1 293 1 38 1 40 1 
336 1 293 1 58 1 
103 1 168 1 237 1 131 1 34 1 240 1 150 1 336 1 98 1 277 1 302 1 178 1 293 1 40 1 
38 1 
103 1 168 1 237 1 131 1 34 1 240 1 58 1 271 1 150 1 98 1 336 1 277 1 302 1 178 1 81 1 293 1 38 1 40 1 10 1 
19 1 155 2 131 1 348 1 26 1 1 2 318 1 271 2 98 1 187 5 164 2 277 1 302 1 324 1 326 2 81 1 304 1 82 2 31 1 190 1 103 1 168 1 237 1 51 2 85 1 34 1 240 1 15 4 58 2 150 2 336 4 311 1 178 1 293 4 38 2 40 1 315 1 129 1 
340 1 297 1 
331 1 168 2 237 1 131 1 211 1 302 2 340 2 34 1 178 2 
159 1 206 1 214 1 
168 1 266 1 238 1 169 1 21 1 308 1 202 1 351 1 174 1 255 1 340 1 221 1 178 1 280 1 281 1 316 1 
168 3 237 3 131 3 286 1 302 3 340 1 34 1 178 3 
103 1 168 1 237 1 131 1 302 1 178 1 40 1 
103 1 168 1 331 1 237 1 211 1 131 1 302 1 34 1 178 1 
343 1 266 1 69 1 21 1 131 3 158 1 160 1 226 2 202 1 319 1 351 1 321 1 98 1 255 1 302 3 189 1 281 1 47 1 305 1 8 1 236 1 331 1 168 4 103 1 237 3 169 1 238 1 308 1 286 1 34 2 105 1 262 1 289 1 174 1 336 1 340 1 221 1 178 4 293 1 63 1 342 1 66 1 67 1 316 1 
168 2 237 1 131 1 192 1 302 2 286 1 340 1 178 2 265 1 
331 1 103 1 168 3 237 3 131 3 158 1 286 2 34 1 321 1 336 1 6 1 302 3 189 1 178 3 293 1 38 1 47 1 66 1 236 1 
331 1 168 2 237 2 131 2 286 1 159 1 34 1 302 2 178 2 206 1 
168 1 266 1 238 1 169 1 21 1 308 1 202 1 351 1 174 1 255 1 340 1 221 1 178 1 281 1 316 1 
168 1 238 1 169 1 21 1 308 1 202 1 174 1 322 1 255 1 340 1 221 1 178 1 281 1 180 1 316 1 
343 1 155 1 159 2 160 1 94 1 226 2 72 1 319 1 301 1 206 2 8 1 102 1 86 2 51 1 360 1 53 1 105 4 214 2 262 1 59 1 242 1 195 1 63 1 67 2 
103 1 168 1 237 1 131 1 302 1 189 1 178 1 113 1 
168 2 266 1 237 1 169 1 238 1 21 1 131 1 308 1 286 1 202 1 351 1 174 1 255 1 302 1 221 1 206 1 178 2 281 1 66 1 316 1 
168 5 331 1 237 4 84 1 131 4 192 1 286 2 34 1 228 1 302 5 340 1 178 5 265 1 66 1 
103 1 168 2 237 2 131 2 302 2 178 2 40 1 113 1 
241 1 2 1 
241 1 2 1 
334 1 264 1 
334 1 264 1 
334 1 264 1 
241 1 273 1 2 1 
282 1 241 1 2 1 
33 1 334 1 207 1 264 1 241 2 2 2 
241 1 273 1 2 1 
241 1 273 1 2 1 
241 1 2 1 3 1 
241 1 2 1 3 1 
241 1 2 1 3 1 
145 2 22 2 54 1 182 1 185 2 241 2 2 2 44 3 173 2 336 2 254 1 177 2 369 1 257 1 293 2 38 1 207 1 233 1 328 1 
115 1 168 2 237 2 317 1 22 1 131 2 123 1 185 1 241 1 2 1 44 1 173 1 243 1 336 1 177 1 302 2 340 1 178 2 257 1 293 1 282 1 179 1 209 1 284 1 
219 1 345 1 41 1 
219 1 64 1 41 1 
42 1 345 2 24 1 106 1 64 1 41 3 
345 1 24 1 106 1 64 1 372 1 41 2 
345 1 24 2 106 1 64 1 41 2 
317 1 155 1 181 1 94 1 72 1 1 1 161 1 271 1 118 1 187 1 164 1 256 1 326 1 304 1 81 1 46 1 357 1 209 1 11 1 51 1 123 1 216 1 58 1 15 3 150 4 337 1 336 4 153 2 293 4 38 1 224 1 
155 3 181 2 248 1 94 3 26 1 72 3 1 2 161 3 271 1 187 6 164 2 231 1 101 1 326 2 232 5 81 1 304 1 46 2 357 1 11 6 51 3 123 4 57 1 58 6 15 8 150 7 337 6 336 8 292 1 247 1 92 5 293 8 38 5 39 3 224 9 
155 1 181 1 94 1 26 1 72 1 1 1 271 1 161 1 118 1 187 2 164 1 326 1 46 1 11 2 51 1 123 1 216 1 15 3 150 2 336 3 337 2 153 1 293 3 38 3 39 2 224 4 
155 2 181 1 94 2 26 1 72 2 1 1 271 1 161 2 118 1 187 4 164 1 231 1 101 1 326 1 46 1 11 4 51 2 123 2 57 1 216 1 15 5 150 3 337 4 336 4 153 2 293 4 38 4 39 3 224 7 
285 1 281 1 297 1 
120 1 281 1 
146 1 
281 1 202 1 
285 2 212 1 281 3 202 1 135 1 316 1 
281 1 202 1 316 1 
281 1 327 1 
155 3 71 1 348 2 274 1 119 1 301 4 31 2 190 2 330 1 86 7 51 3 56 1 105 13 16 1 172 1 195 3 311 1 67 6 
155 3 71 1 348 2 274 1 119 1 301 6 31 2 190 2 330 3 86 7 51 3 56 1 105 13 16 1 172 1 195 3 311 1 67 6 
155 3 71 1 348 2 274 1 139 1 119 1 301 4 31 2 330 1 190 2 86 7 51 3 56 1 105 13 16 1 172 1 195 3 311 1 67 6 
155 2 51 1 86 7 225 1 149 1 94 2 71 1 104 1 56 1 105 11 72 1 260 1 161 2 172 2 91 1 195 1 176 2 301 2 198 2 330 1 67 4 
343 2 155 3 71 1 226 4 348 2 319 2 352 1 301 6 119 1 31 2 8 2 330 2 190 2 49 1 51 3 86 8 56 1 105 15 16 1 172 1 36 1 195 4 311 1 63 2 67 7 
42 1 21 1 345 1 27 1 227 1 162 1 252 1 138 2 255 1 323 1 205 1 78 1 30 1 167 1 358 1 238 1 213 1 308 1 148 1 87 1 263 1 17 1 219 1 367 1 221 1 371 2 222 1 64 1 114 1 41 2 
42 1 21 1 345 1 249 1 227 1 162 1 252 1 138 3 255 1 323 1 205 1 78 1 30 1 142 1 167 1 358 1 238 1 213 1 308 1 148 1 87 1 263 1 108 1 219 1 367 1 221 1 371 3 64 1 114 2 41 2 
42 1 21 1 345 1 249 1 227 1 162 1 138 2 255 1 323 1 205 1 78 1 30 1 238 1 213 1 308 1 148 1 263 1 108 1 367 1 219 1 221 1 371 2 64 1 114 2 41 2 
21 1 298 1 95 1 202 1 227 2 272 1 162 2 252 1 138 1 255 1 205 2 80 1 142 1 281 1 167 1 122 1 238 1 308 1 174 1 367 2 221 1 312 1 371 1 
42 1 21 1 345 1 227 1 162 1 252 1 138 1 255 1 323 1 205 1 78 1 30 1 167 1 358 1 238 1 308 1 87 1 108 1 17 1 219 1 367 1 221 1 371 1 222 1 64 1 41 2 
362 1 
238 1 21 1 1 1 58 1 174 1 187 1 336 1 164 1 255 1 230 1 45 1 29 1 326 1 81 1 304 1 293 1 
267 1 130 1 158 1 321 1 278 1 302 1 189 1 81 1 47 1 9 1 10 1 168 1 103 1 12 1 58 2 336 2 111 2 178 1 62 1 293 2 223 1 265 1 
267 1 130 1 158 1 271 1 321 1 278 1 302 1 189 1 81 1 47 1 9 1 10 1 168 1 103 1 12 1 58 1 336 2 111 3 37 1 178 1 62 1 293 2 38 1 265 1 
267 1 130 1 158 1 203 1 321 1 278 1 302 1 189 1 81 1 47 1 9 1 10 1 168 1 103 1 12 1 58 2 336 2 111 3 37 1 178 1 62 1 293 2 223 1 265 1 
336 1 81 1 293 1 58 1 10 1 
267 1 268 2 130 1 70 2 158 1 203 1 1 1 299 1 204 1 321 1 187 1 164 1 278 1 302 1 79 2 326 1 189 1 81 1 304 1 47 1 9 1 32 1 168 1 103 1 12 1 58 2 15 1 336 2 111 3 37 1 124 1 178 1 62 1 293 2 223 1 39 1 224 1 265 1 
267 1 268 2 130 1 70 2 158 1 200 1 203 1 1 1 299 1 204 1 321 1 117 1 187 1 164 1 278 1 302 1 79 2 189 1 326 1 81 1 304 1 47 1 9 1 168 1 103 1 12 1 58 2 15 1 336 2 111 3 37 1 124 1 178 1 62 1 293 2 154 1 223 1 39 1 265 1 
267 1 268 1 130 1 70 1 158 1 200 1 203 1 1 1 299 1 204 1 321 1 117 1 187 1 164 1 278 1 302 1 79 1 189 1 326 1 81 1 304 1 47 1 9 1 168 1 103 1 12 1 58 2 15 1 336 2 111 2 124 1 178 1 62 1 293 2 154 1 223 1 39 1 265 1 
267 1 130 1 70 1 158 1 200 1 132 1 1 1 204 1 28 1 75 1 321 1 187 1 164 1 278 1 302 1 79 1 189 1 326 1 304 1 47 1 9 1 168 1 103 1 12 1 15 1 336 2 111 2 178 1 62 1 293 2 294 1 224 1 265 1 
267 1 268 2 130 1 70 2 158 1 200 1 1 1 203 2 299 1 204 1 117 1 321 1 187 1 354 1 164 1 278 1 302 1 79 2 326 1 189 1 81 1 304 1 47 1 9 1 168 1 103 1 12 1 15 1 58 3 336 2 111 4 37 2 124 1 178 1 62 1 293 2 154 1 223 2 39 1 265 1 
267 1 268 2 130 1 70 2 158 1 200 1 1 1 203 2 299 1 204 1 117 1 321 1 187 1 354 1 164 1 278 1 302 1 79 2 326 1 189 1 81 1 304 1 47 1 9 1 168 1 103 1 12 1 15 1 58 3 336 2 111 4 37 2 124 1 178 1 62 1 293 2 154 1 223 2 39 1 265 1 
267 1 130 1 70 2 158 1 203 1 1 1 133 1 204 1 75 2 321 1 187 1 164 1 278 1 302 1 79 2 326 1 189 1 81 1 304 1 47 1 9 1 32 1 168 1 103 1 12 1 58 2 15 1 336 2 111 3 37 1 178 1 62 1 293 2 223 1 294 1 224 1 265 1 
102 1 343 1 155 1 51 1 86 2 160 1 226 2 348 1 105 4 262 1 319 1 16 1 195 1 301 1 119 1 340 1 63 1 31 1 190 1 8 1 67 2 297 1 
343 2 155 2 347 1 225 1 159 4 160 2 94 2 226 4 72 1 319 2 161 2 301 2 141 1 206 11 330 1 8 2 86 8 51 1 193 1 105 14 214 11 262 1 91 1 195 1 176 3 339 1 340 1 125 1 112 1 63 2 198 3 342 1 67 6 
266 1 343 1 21 1 131 1 159 1 160 1 226 2 202 1 351 1 319 1 255 1 302 1 356 1 280 1 281 1 8 1 168 2 237 1 169 1 238 1 86 1 308 1 286 1 55 1 105 2 193 1 262 1 174 1 291 1 340 1 221 1 178 2 112 1 63 1 342 1 66 1 316 1 67 1 
266 2 131 1 94 2 226 6 319 3 7 1 281 2 330 1 190 2 8 3 103 1 237 1 238 1 51 5 286 1 193 1 105 26 16 1 195 5 245 2 340 2 112 1 63 3 342 1 65 2 66 1 67 13 343 3 155 5 21 1 159 6 160 3 348 2 202 2 72 2 351 2 161 2 255 1 119 1 301 6 302 1 206 6 31 2 305 2 168 3 169 2 86 13 308 2 259 1 214 6 310 1 262 3 364 2 365 2 174 1 311 1 221 2 178 3 316 2 
343 2 21 8 131 1 160 2 298 1 226 4 201 1 27 1 202 2 319 2 255 8 302 1 281 3 208 1 8 2 329 1 210 1 102 1 168 1 237 1 258 1 238 7 86 1 286 1 308 2 193 1 105 2 262 2 60 1 174 2 290 2 108 1 220 1 221 2 312 1 178 1 63 2 342 1 67 1 
343 1 155 1 131 1 159 1 160 1 94 1 226 2 72 1 319 1 161 1 301 1 302 1 206 1 8 1 331 1 83 1 168 1 237 1 86 1 51 1 34 1 105 3 214 1 262 1 195 1 178 1 112 1 63 1 67 2 
102 1 343 1 155 1 86 2 159 1 160 1 94 1 226 2 105 2 214 1 262 1 319 1 242 1 301 1 206 1 63 1 330 1 8 1 
102 1 343 1 51 1 159 1 160 1 226 2 105 2 214 1 72 1 262 1 319 1 59 1 195 1 301 1 206 1 63 1 8 1 67 2 
343 1 155 1 159 2 94 1 160 1 226 2 72 1 319 1 161 1 301 2 206 2 8 1 330 1 102 1 86 2 51 1 105 4 214 2 262 1 195 1 63 1 67 2 
343 1 155 1 86 2 159 1 160 1 94 1 226 2 105 2 214 1 262 1 319 1 242 1 301 1 206 1 63 1 330 1 329 1 8 1 
343 1 51 1 159 1 160 1 226 2 105 2 214 1 72 1 262 1 319 1 59 1 195 1 301 1 206 1 63 1 329 1 8 1 67 2 
343 1 155 1 159 2 94 1 160 1 226 2 72 1 319 1 161 1 301 2 206 2 8 1 329 1 330 1 86 2 51 1 105 4 214 2 262 1 195 1 63 1 67 2 
343 1 155 1 159 2 94 1 160 1 226 2 72 1 319 1 161 1 301 2 206 2 8 1 330 1 86 2 51 1 105 4 214 2 262 1 195 1 63 1 67 2 
266 1 343 1 21 1 160 1 226 2 202 1 351 1 319 1 255 1 281 1 305 1 8 1 168 1 169 1 238 1 86 1 308 1 193 1 105 2 262 1 174 1 340 1 221 1 178 1 63 1 342 1 316 1 67 1 
343 1 21 1 160 1 226 2 202 1 319 1 322 1 255 1 325 1 281 1 8 1 168 1 169 1 238 1 86 1 308 1 193 1 105 2 262 1 174 1 340 1 221 1 178 1 63 1 342 1 180 1 316 1 67 1 
343 1 155 1 159 2 94 1 160 1 226 2 72 1 319 1 161 1 301 2 206 2 8 1 330 1 86 2 51 1 105 4 214 2 262 1 195 1 112 1 63 1 67 2 
266 1 343 1 155 1 21 1 159 2 94 1 160 1 226 2 27 1 202 1 72 1 351 1 319 1 161 1 255 1 301 2 206 2 281 1 305 1 330 1 8 1 168 1 169 1 238 1 51 1 86 2 308 1 105 4 214 2 262 1 365 1 195 1 221 1 178 1 63 1 67 2 316 1 
343 1 155 1 131 1 159 1 160 1 94 1 226 2 72 1 319 1 161 1 301 1 302 1 206 1 121 1 330 1 8 1 331 1 168 1 237 1 51 1 86 2 34 1 105 3 214 1 262 1 178 1 112 1 63 1 67 1 
343 2 155 3 225 1 94 3 226 4 183 2 72 3 319 2 161 3 353 1 4 1 163 1 301 6 143 1 8 2 330 3 49 1 306 1 86 9 51 3 170 1 105 19 91 1 195 3 175 2 176 1 63 2 198 2 296 1 67 10 
343 3 155 3 94 3 350 1 226 6 183 1 72 2 319 3 270 1 161 3 352 2 353 1 4 2 253 1 301 4 279 1 330 2 8 3 49 1 306 1 51 2 86 14 170 1 105 26 363 1 35 1 91 2 195 2 175 4 176 2 63 3 198 2 296 2 67 12 
343 3 155 5 225 1 94 4 348 1 350 1 226 6 183 1 72 4 270 1 319 3 161 4 352 1 353 1 4 1 253 1 119 1 301 8 279 1 143 1 31 1 190 1 8 3 330 4 49 1 306 1 86 19 51 5 170 1 105 40 363 1 16 1 89 1 35 1 91 3 195 4 175 4 176 3 63 3 198 4 296 2 67 21 
343 4 155 5 225 1 94 4 348 1 350 1 226 8 183 1 72 3 270 1 319 4 161 4 352 2 353 1 4 1 253 1 119 1 301 7 279 1 143 1 31 1 190 1 8 4 330 3 49 1 306 1 86 19 51 4 170 1 105 37 363 1 16 1 89 1 35 1 91 3 195 4 175 4 176 3 63 4 198 4 296 2 67 18 
343 2 155 8 225 2 94 7 348 1 350 1 226 4 183 1 72 7 270 1 319 2 161 7 352 1 353 1 4 1 253 1 119 1 301 14 279 1 31 1 190 1 8 2 330 7 49 1 306 1 86 26 51 8 170 1 105 51 363 1 16 1 35 1 91 2 195 7 175 4 176 4 125 2 63 2 198 4 296 1 67 25 
43 1 22 1 309 1 184 1 185 1 320 1 241 1 2 1 173 1 177 1 
282 1 284 1 
107 1 338 1 177 1 22 1 185 1 241 1 235 1 2 1 173 1 
145 1 22 1 54 1 182 1 185 1 241 1 2 1 44 2 173 1 336 1 254 1 177 1 257 1 293 1 38 1 207 1 233 1 328 1 
145 1 22 1 54 1 182 1 185 1 241 1 2 1 44 2 173 1 336 1 254 1 177 1 257 1 293 1 38 1 207 1 233 1 328 1 
145 1 22 1 54 1 182 1 185 1 241 1 2 1 44 2 173 1 336 1 254 1 177 1 257 1 293 1 38 1 207 1 233 1 328 1 
33 1 275 1 273 1 
33 1 275 1 273 1 
3 1 136 1 
33 1 3 1 136 1 
115 1 179 1 
115 1 317 1 22 1 131 2 185 1 2 1 44 1 302 2 282 1 328 1 209 1 284 1 168 2 145 1 237 2 123 1 150 1 241 1 173 1 243 1 336 1 177 1 340 1 178 2 293 1 126 1 179 1 
275 1 273 1 
33 1 3 1 136 1 
343 1 21 2 160 1 226 2 202 1 269 1 319 1 255 2 77 1 302 2 188 1 281 1 208 1 8 1 168 2 238 2 86 1 308 1 193 1 105 2 262 1 290 2 61 1 220 1 221 1 178 2 112 1 63 1 342 1 199 1 67 1 
42 1 238 2 21 2 345 1 308 1 27 1 87 1 14 1 162 1 366 1 108 1 219 1 255 2 100 1 221 1 78 1 30 1 64 1 41 2 
42 1 238 1 21 1 345 1 308 1 87 1 14 1 288 1 162 1 108 1 219 1 255 1 78 1 30 1 221 1 64 1 41 2 
238 1 21 1 308 1 298 1 202 1 95 1 162 1 174 1 255 1 100 1 221 1 312 1 281 1 166 1 
42 1 238 1 21 1 345 1 308 1 87 1 14 1 162 1 366 1 108 1 219 1 255 1 100 1 221 1 78 1 30 1 64 1 41 2 
5 1 
187 1 85 1 38 1 318 1 15 1 271 1 297 1 
268 1 1 1 299 1 271 1 58 1 15 1 187 1 164 1 124 1 326 1 81 1 304 1 38 1 39 1 224 1 
238 1 21 1 212 1 308 1 202 1 1 1 74 1 174 1 164 1 255 1 120 1 221 2 326 1 304 1 281 2 283 1 316 1 
155 2 94 2 1 1 72 2 270 1 161 2 271 1 253 1 187 4 164 1 279 1 326 1 81 1 304 1 82 1 11 5 51 2 363 1 58 1 15 7 35 1 91 1 337 5 176 1 38 4 128 1 198 1 39 3 224 6 
19 1 155 2 131 1 348 1 1 1 117 1 187 2 98 1 164 1 277 1 302 1 326 1 304 1 82 2 31 1 190 1 103 1 168 1 237 1 51 1 34 1 240 1 15 2 311 1 336 1 178 1 293 1 40 1 
85 1 1 1 318 1 271 1 15 1 187 1 164 1 326 1 304 1 38 1 
19 1 155 2 11 5 51 2 94 2 72 2 161 2 15 5 364 1 187 5 337 5 38 5 82 2 39 5 224 10 
103 1 168 1 237 1 131 1 34 1 240 1 58 1 271 1 98 1 277 1 302 1 178 1 81 1 38 1 40 1 
238 1 21 1 1 1 58 1 174 1 187 1 255 1 164 1 230 1 45 1 370 1 29 1 326 1 81 1 304 1 
343 1 266 1 69 1 21 1 131 2 160 1 226 2 202 1 319 1 351 1 98 1 255 1 302 2 281 1 305 1 8 1 168 3 237 2 238 1 169 1 308 1 34 2 105 1 262 1 174 1 340 1 221 1 178 3 63 1 342 1 67 1 316 1 
11 2 181 1 56 1 1 1 15 1 271 2 337 2 187 2 164 1 45 1 326 1 304 1 38 4 39 2 224 4 
177 1 215 1 173 1 
0 1 177 1 233 1 179 1 173 1 
177 1 215 1 173 1 
177 1 215 1 173 1 
177 1 116 1 173 1 
177 1 116 1 173 1 
177 1 116 1 173 1 
177 1 173 1 
241 1 2 1 
343 2 155 3 51 3 86 8 226 4 348 2 105 16 319 2 352 1 16 1 195 3 311 1 301 6 119 1 63 2 31 2 330 3 8 2 190 2 67 8 
155 1 86 2 51 1 348 1 105 4 16 1 195 1 119 1 301 1 31 1 190 1 67 2 297 1 
343 1 155 1 51 1 86 2 94 1 226 2 105 4 72 1 319 1 161 1 195 1 301 2 314 1 63 1 8 1 330 1 67 2 
155 1 51 1 86 3 225 1 94 1 105 7 72 1 161 1 91 1 195 1 176 1 301 2 198 2 330 1 67 4 
343 1 155 5 225 1 347 1 94 2 348 2 226 2 72 2 319 1 161 2 352 1 119 1 301 6 31 2 190 2 330 2 8 1 51 5 86 12 105 24 16 1 195 4 311 1 176 2 125 1 63 1 198 2 67 12 
105 1 198 1 67 1 
176 1 86 1 105 1 
343 1 155 1 86 3 51 1 94 1 226 2 105 6 72 1 319 1 161 1 364 1 195 2 301 3 63 1 314 1 8 1 330 1 67 3 
343 1 155 2 94 2 226 2 72 2 319 1 270 1 161 2 253 1 301 2 279 1 330 1 8 1 49 1 86 6 51 2 105 12 363 1 35 1 91 1 195 1 176 1 63 1 198 1 67 6 
195 1 155 1 301 2 51 1 86 3 348 1 105 6 31 1 330 1 190 1 67 3 
343 1 86 1 348 1 226 2 13 1 105 3 319 1 16 1 352 1 195 1 301 2 119 1 63 1 330 1 190 1 8 1 67 2 
155 2 86 6 51 2 348 2 105 12 195 3 311 1 301 6 31 1 190 2 330 3 67 6 
49 1 343 1 155 1 86 2 94 1 226 2 105 2 319 1 301 1 63 1 8 1 330 1 
49 1 343 1 155 1 51 1 86 2 94 1 226 2 105 4 72 1 319 1 161 1 195 1 301 2 63 1 8 1 330 1 67 2 
49 1 343 3 86 1 226 6 348 1 13 1 105 3 319 3 352 1 195 1 301 2 143 1 63 3 8 3 190 1 330 1 67 2 
49 1 343 3 155 1 86 4 94 1 149 1 104 1 226 6 105 5 319 3 161 1 91 1 176 2 143 1 63 3 314 1 198 1 8 3 67 1 
343 1 155 3 226 2 348 2 319 1 119 1 301 4 31 2 330 1 8 1 190 2 49 1 51 3 86 7 105 14 16 1 35 1 91 1 195 3 311 1 176 1 63 1 198 1 67 7 
343 2 155 4 225 1 94 1 348 2 226 4 319 2 161 1 119 1 301 5 31 2 190 2 8 2 330 2 49 1 51 3 86 9 105 17 16 1 35 1 91 1 195 3 311 1 176 1 63 2 314 1 198 2 67 8 
343 3 155 5 94 2 348 2 226 6 72 2 319 3 270 1 161 2 352 1 253 1 119 1 301 6 279 1 31 2 190 2 330 2 8 3 49 1 86 12 51 5 105 25 363 1 16 1 35 1 91 1 195 4 311 1 176 1 314 1 63 3 198 1 67 13 
343 3 155 5 94 2 348 2 226 6 72 1 319 3 270 1 161 2 352 1 253 1 119 1 301 8 279 1 31 2 190 2 330 4 8 3 49 1 86 13 51 4 105 23 363 1 16 1 35 1 91 1 195 4 311 1 176 1 314 1 63 3 198 1 67 10 
343 1 155 3 226 2 348 2 319 1 119 1 301 4 31 2 330 1 8 1 190 2 49 1 51 3 86 7 105 14 16 1 35 1 91 1 195 3 311 1 176 1 63 1 198 1 67 7 
343 1 155 2 94 2 226 2 72 2 319 1 270 1 161 2 253 1 301 2 279 1 330 1 8 1 49 1 86 6 51 2 105 12 363 1 35 1 91 1 195 1 176 1 63 1 198 1 67 6 
343 4 155 5 94 2 348 2 226 8 72 1 319 4 270 1 161 2 352 2 253 1 119 1 301 6 279 1 31 2 190 2 330 2 8 4 49 1 86 13 51 4 105 24 363 1 16 1 35 1 91 1 195 4 311 1 176 1 314 1 63 4 198 1 67 11 
343 4 155 3 94 3 226 8 72 2 319 4 270 1 161 3 352 2 253 1 301 6 279 1 143 1 330 3 8 4 49 1 86 9 51 2 105 16 363 1 35 1 91 1 195 3 176 1 63 4 198 1 67 7 
155 1 51 1 86 3 348 3 105 7 16 2 195 3 119 1 301 6 31 1 190 3 330 3 67 4 
343 4 155 5 94 2 348 2 226 8 72 1 319 4 270 1 161 2 352 2 253 1 119 1 301 6 279 1 143 1 31 2 190 2 330 2 8 4 49 1 86 13 51 4 105 24 363 1 16 1 35 1 91 1 195 4 311 1 176 1 63 4 198 1 67 11 
168 1 302 1 192 1 340 1 178 1 88 1 265 1 
168 1 50 1 157 1 192 1 88 1 73 1 99 1 368 1 302 1 340 1 178 1 265 1 
174 1 238 1 21 1 255 1 308 1 298 1 221 1 312 1 281 1 202 1 297 1 
168 2 237 1 169 1 238 1 21 1 131 1 286 1 308 1 202 1 351 1 174 1 255 1 302 1 340 1 221 1 178 2 281 1 316 1 
103 1 168 2 237 2 169 1 238 1 21 1 158 1 131 1 286 1 308 1 361 1 202 2 351 1 97 1 255 1 302 2 340 1 189 1 221 1 178 2 281 3 327 1 316 2 
21 2 131 1 158 1 202 2 97 1 255 2 302 2 189 1 281 3 327 1 168 2 103 1 237 2 238 2 169 1 308 1 286 1 239 1 361 1 340 1 221 1 178 2 180 1 316 2 
21 1 131 1 271 1 97 1 98 1 255 1 140 1 277 1 302 1 120 1 281 1 103 1 168 1 237 1 238 1 34 1 240 1 336 1 178 1 293 1 38 1 40 1 
285 1 238 3 21 3 308 1 239 1 361 1 202 1 271 1 58 1 186 1 174 1 321 1 97 1 336 2 255 3 120 1 221 1 293 2 281 4 38 1 327 1 316 1 
238 1 21 1 255 1 308 1 221 1 201 1 
258 1 238 6 21 7 23 1 212 1 308 2 251 1 201 1 27 1 202 2 261 1 60 1 290 1 174 2 108 1 220 1 255 7 221 3 281 3 210 1 316 1 
266 1 131 1 226 4 319 2 281 1 330 1 8 2 190 2 103 1 237 1 238 1 51 3 286 1 105 12 16 1 195 3 245 1 340 2 112 1 63 2 199 1 67 6 343 2 155 3 21 1 160 2 348 2 27 1 202 1 351 1 255 1 119 1 301 4 302 1 305 1 31 2 168 2 169 1 86 6 308 1 259 1 262 2 365 1 311 1 221 1 178 2 316 1 
131 1 1 2 318 1 271 2 186 1 321 1 187 5 98 1 277 1 326 2 281 2 144 1 190 1 103 1 285 1 237 1 238 1 51 2 240 1 58 2 15 4 335 1 150 1 336 2 293 2 19 1 155 2 21 1 250 1 348 1 164 2 255 1 302 1 120 1 81 1 304 2 82 2 31 1 168 1 85 1 34 1 174 1 311 1 370 1 178 1 38 2 40 1 
285 1 238 2 21 2 212 1 308 1 27 1 201 1 202 1 74 1 255 2 221 2 281 2 316 1 
238 4 21 4 308 1 147 1 239 1 298 1 27 1 202 1 174 1 255 4 221 1 312 1 281 1 
238 2 359 1 21 2 23 1 308 1 202 1 261 1 96 1 97 1 255 2 221 2 281 1 295 1 316 1 
174 1 219 1 238 1 21 1 255 1 308 1 221 1 30 1 64 1 41 1 
108 1 61 1 238 2 220 1 21 2 255 2 308 1 221 1 27 1 281 1 202 1 
238 4 21 5 308 2 147 1 298 1 27 1 202 2 60 1 97 1 174 1 255 5 220 1 312 1 221 2 281 3 210 1 
238 4 156 1 21 5 308 2 147 1 298 1 27 1 202 2 97 1 174 1 255 5 220 1 312 1 221 2 281 3 210 1 
168 2 237 1 169 1 238 1 21 1 131 1 286 1 308 1 202 1 174 1 255 1 302 1 340 1 221 1 178 2 281 1 180 1 316 1 
238 1 21 1 23 1 212 1 308 1 251 1 202 1 261 1 97 1 255 1 221 2 281 1 316 1 
168 1 109 1 77 1 346 1 302 1 188 1 178 1 269 1 300 1 
20 1 300 1 137 1 
196 1 109 1 346 1 340 1 300 1 
103 1 20 1 158 1 346 2 271 1 300 1 150 1 137 1 321 1 196 2 336 2 109 2 246 1 340 1 189 1 293 2 38 1 47 1 236 1 
213 1 148 1 263 1 297 1 
138 1 213 1 148 1 371 1 167 1 263 1 252 1 
138 1 205 1 227 1 
307 1 213 1 148 1 287 1 263 1 252 1 138 3 17 1 110 1 152 2 371 3 167 1 
138 2 213 1 148 1 313 1 371 2 167 1 263 1 114 1 252 1 
68 1 138 1 17 1 219 1 345 1 148 1 371 1 167 1 234 1 41 1 252 1 
138 1 17 1 213 1 148 1 371 1 167 1 252 1 
138 1 17 1 213 2 371 1 167 1 263 1 252 1 
138 2 17 1 333 1 213 1 148 1 349 1 371 2 167 2 134 1 252 2 
344 1 213 1 148 2 263 1 252 1 138 3 17 1 197 1 371 3 167 1 191 1 114 2 234 1 
42 1 345 1 213 1 148 1 217 1 263 1 252 1 138 2 17 1 219 1 371 2 64 1 167 1 114 1 41 2 
344 1 213 1 148 2 263 1 252 2 138 4 17 1 165 1 313 1 371 4 167 2 114 2 234 1 
138 1 17 1 213 1 148 1 371 1 167 1 263 1 252 1 
344 1 307 1 213 2 148 3 218 1 263 2 252 1 138 4 110 1 152 1 371 4 167 1 114 2 234 1 
213 1 93 1 148 1 263 1 252 1 138 2 17 1 76 1 371 2 167 1 127 1 114 1 
307 1 213 1 148 1 263 1 252 1 138 3 17 1 110 2 152 2 371 3 167 1 18 1 
151 2 148 2 171 1 373 1 
138 1 17 1 52 1 371 1 167 1 252 1 
138 2 17 1 213 1 148 1 197 1 371 2 167 1 263 1 114 1 252 1 
303 1 
138 1 17 1 213 1 148 1 371 1 167 1 263 1 252 1 
213 1 148 1 263 1 252 1 138 3 17 1 152 1 197 1 371 3 167 1 114 1 
344 1 148 1 218 1 234 1 
213 1 148 1 

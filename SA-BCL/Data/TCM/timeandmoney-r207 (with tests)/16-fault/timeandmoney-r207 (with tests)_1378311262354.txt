#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (22,193) 44 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (87,263) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (0,52,101) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (87,263) (87,263) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 29 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (87,263) (87,263) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (87,263) (87,263) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) (16,247) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (16,247) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) (16,247) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (34,59,132,240) (34,59,132,240) (34,59,132,240) 28 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 29 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 134 303 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (22,193) (22,193) (90,179) 237 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (22,193) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (22,193) (22,193) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (87,263) (87,263) 50 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (22,193) 44 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 31 (10,83) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 31 (10,83) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 31 (104,302) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (87,263) (87,263) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 31 (104,302) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 57 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONSTANT | 1198 | 0 -> 1
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1007 | = null
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 28 1 59 1 240 1 
111 1 29 1 285 1 
106 1 
251 2 14 2 47 1 
191 1 88 2 22 1 79 2 251 1 222 1 33 1 44 1 118 1 46 2 47 1 14 1 
251 1 87 1 14 1 47 1 
0 1 190 1 49 1 101 1 210 1 52 1 111 1 7 1 235 1 301 1 94 1 280 1 283 1 285 1 
101 1 251 1 14 1 
0 1 243 1 235 1 143 1 68 1 
111 1 25 1 0 2 243 1 235 2 261 1 285 1 143 1 
0 1 235 1 143 1 
0 1 243 1 251 1 87 1 235 1 14 1 47 1 263 1 
285 1 
111 1 0 2 243 1 235 2 261 1 285 1 143 1 78 1 
0 5 243 2 192 1 1 1 75 1 213 1 108 1 111 1 6 1 26 1 235 5 203 2 276 2 183 2 185 1 261 1 285 1 142 1 143 2 
79 1 251 1 88 1 300 1 51 1 46 1 118 1 
29 1 
264 1 190 1 49 1 210 1 109 1 251 1 206 1 279 1 283 1 14 1 
251 3 300 1 14 1 
251 1 
264 1 251 1 206 1 14 1 
264 1 251 2 300 1 51 1 14 1 
190 1 170 1 49 1 210 1 109 1 251 1 300 1 301 1 283 1 
251 1 300 1 51 1 
264 1 251 1 14 1 
79 1 88 1 46 1 118 1 
79 1 88 1 46 1 118 1 
241 1 189 1 146 1 9 1 103 1 181 1 257 1 84 2 
251 1 262 1 
264 1 190 1 49 1 170 1 210 1 267 1 51 1 109 1 251 4 236 1 300 2 301 1 283 1 14 1 
251 1 
204 1 58 1 
204 1 58 1 
168 1 188 1 
168 1 188 1 
168 1 188 1 
204 1 23 1 58 1 
168 1 188 1 265 1 204 2 211 1 58 2 
92 1 204 1 58 1 
204 1 23 1 58 1 
204 1 23 1 58 1 
204 1 172 1 58 1 
204 1 172 1 58 1 
204 1 172 1 58 1 
0 2 72 2 265 1 148 3 56 1 130 1 58 2 175 1 157 2 180 2 235 2 204 2 30 1 224 1 66 1 65 2 97 2 281 1 285 1 
0 1 72 1 244 1 148 1 38 1 58 1 251 2 235 1 180 1 92 1 30 1 204 1 278 1 95 1 115 1 140 1 65 1 164 1 97 1 
266 1 296 1 156 1 
266 1 73 1 296 1 
266 3 73 1 182 1 153 1 156 2 272 1 
266 2 73 1 126 1 153 1 156 1 272 1 
266 2 73 1 153 1 156 1 272 2 
0 5 229 1 147 1 38 1 106 3 80 2 6 1 111 1 8 1 203 1 235 5 11 1 276 1 115 1 43 1 285 2 86 1 169 2 243 4 290 1 212 1 26 3 298 2 135 1 137 1 256 1 183 1 95 1 185 2 227 1 261 1 143 1 
0 6 147 1 106 3 155 1 271 1 80 2 111 1 6 1 8 1 203 1 235 6 11 1 276 1 207 1 115 2 43 1 285 3 47 1 14 1 86 1 243 5 87 1 290 1 248 3 26 3 298 2 251 1 135 1 137 1 183 1 185 2 227 1 261 1 143 4 68 3 263 1 
0 3 229 1 147 1 1 1 106 3 111 1 80 2 8 1 203 1 235 3 276 1 11 1 115 1 14 1 47 1 285 2 86 1 169 1 243 2 87 1 290 1 26 3 251 1 298 2 135 1 256 1 137 1 183 1 185 2 227 1 263 1 
0 3 229 1 147 1 269 1 105 1 106 3 1 1 80 2 8 1 203 1 235 3 276 1 11 1 115 2 285 1 86 1 169 1 243 2 290 1 26 3 91 1 298 2 135 1 256 1 137 1 183 1 185 2 227 1 
29 1 253 1 40 1 
223 1 40 1 
194 1 
76 1 40 1 
69 1 102 1 253 2 159 1 76 1 40 3 
102 1 76 1 40 1 
17 1 40 1 
70 1 19 2 53 1 174 1 293 7 4 1 216 1 198 1 8 1 299 2 255 4 277 1 64 3 225 1 13 3 227 1 48 1 
70 1 19 2 53 1 174 1 293 7 4 1 216 1 198 1 8 1 299 2 255 4 277 1 64 3 225 1 13 3 227 1 48 1 
70 1 19 2 53 1 174 1 293 7 4 1 216 1 198 1 8 1 299 2 277 1 255 4 64 3 225 1 13 3 227 1 85 1 48 1 
70 1 189 1 146 1 36 3 35 1 149 1 195 1 198 2 4 5 275 1 8 4 11 3 277 1 84 2 13 15 48 1 19 5 290 3 53 1 54 1 293 31 174 2 216 2 299 3 181 1 255 16 137 3 257 1 305 1 64 10 225 2 259 4 227 4 98 1 
70 1 189 2 146 2 35 1 74 1 198 1 4 1 8 1 277 1 84 4 13 4 48 1 19 3 293 9 174 1 129 1 216 1 299 2 181 2 257 2 255 5 64 4 225 1 227 1 
71 1 34 1 28 1 59 1 240 1 
71 1 34 1 59 1 247 1 240 1 
71 1 132 1 59 1 16 1 
71 1 34 1 59 1 247 1 240 1 
71 1 34 1 28 1 59 1 240 1 
60 1 
0 3 76 1 3 1 6 1 79 2 7 1 235 3 82 1 161 1 162 1 165 2 163 1 86 1 18 1 88 2 24 1 249 1 250 1 26 2 27 1 254 1 183 1 94 1 185 2 261 1 190 1 101 1 37 1 106 1 40 1 203 1 276 1 280 1 118 2 46 2 282 1 283 1 285 1 288 1 49 1 210 1 291 1 52 1 128 1 215 1 217 1 135 1 301 1 226 1 143 2 
0 3 190 1 49 1 101 1 245 1 210 1 291 1 52 1 78 1 7 1 217 1 235 3 301 1 94 1 161 1 162 1 280 1 261 1 163 1 165 2 283 1 143 2 
0 3 190 1 49 1 101 1 210 1 291 1 52 1 78 1 111 1 7 1 217 1 235 3 112 1 301 1 94 1 161 1 162 1 280 1 261 1 163 1 165 3 283 1 285 1 143 1 
0 3 190 1 101 1 78 1 111 1 7 1 235 3 112 1 162 1 161 1 280 1 283 1 165 3 163 1 285 1 49 1 210 1 245 1 52 1 291 1 214 1 217 1 301 1 94 1 261 1 143 2 
0 5 151 1 3 2 78 1 6 1 7 1 235 5 81 1 161 1 162 1 163 1 165 6 86 2 245 4 24 2 26 1 250 1 32 2 183 1 94 1 185 1 261 3 190 1 101 1 37 1 111 5 203 1 112 4 276 1 280 1 117 1 283 1 285 5 120 1 49 1 210 1 291 1 52 1 214 4 215 2 217 1 301 1 139 1 143 7 
0 2 190 1 101 1 37 1 106 1 3 1 6 1 7 1 203 1 235 2 276 1 162 1 161 1 280 1 283 1 165 2 163 1 285 1 86 1 49 1 210 1 52 1 291 1 215 1 24 1 250 1 26 1 217 1 301 1 183 1 94 1 226 1 185 1 
0 4 190 1 101 1 37 1 151 1 3 2 111 1 6 1 7 1 235 4 203 1 112 2 276 1 81 1 162 1 161 1 117 1 280 1 283 1 165 4 163 1 285 1 86 2 49 1 245 2 210 1 52 1 291 1 214 2 215 2 24 2 250 1 26 1 217 1 301 1 32 2 183 1 94 1 185 1 261 2 143 4 
0 4 190 1 101 1 37 1 151 1 3 2 111 1 6 1 7 1 235 4 203 1 112 2 276 1 81 1 162 1 161 1 117 1 280 1 283 1 165 4 163 1 285 1 86 2 49 1 245 2 210 1 52 1 291 1 214 2 215 2 24 2 250 1 26 1 217 1 301 1 32 2 183 1 94 1 185 1 261 2 143 4 
0 4 190 1 101 1 106 2 152 1 77 1 111 1 6 1 7 1 235 4 203 1 112 2 113 2 276 1 238 1 162 1 161 1 117 1 280 1 283 1 165 4 163 1 285 1 242 2 49 1 245 2 210 1 52 1 291 1 214 2 215 2 24 2 250 1 26 1 217 1 301 1 183 1 94 1 185 1 261 2 143 4 
0 4 190 1 101 1 37 1 151 1 3 2 111 1 6 1 7 1 203 1 235 4 276 1 81 1 112 3 162 1 161 1 117 1 280 1 283 1 165 5 163 1 285 1 120 1 86 2 49 1 210 1 245 3 52 1 291 1 215 2 214 3 24 2 250 1 26 1 217 1 301 1 32 2 183 1 94 1 185 1 261 2 143 5 
0 4 190 1 101 1 37 1 151 1 3 2 111 1 6 1 7 1 203 1 235 4 276 1 81 1 112 3 162 1 161 1 117 1 280 1 283 1 165 5 163 1 285 1 120 1 86 2 49 1 210 1 245 3 52 1 291 1 215 2 214 3 24 2 250 1 26 1 217 1 301 1 32 2 183 1 94 1 185 1 261 2 143 5 
0 4 77 1 6 1 7 1 235 4 161 1 162 1 163 1 165 4 242 2 245 2 24 2 26 1 250 1 183 1 94 1 185 1 261 2 190 1 101 1 106 2 111 1 203 1 276 1 113 2 112 2 280 1 283 1 285 1 49 1 210 1 291 1 52 1 215 2 214 2 217 1 301 1 226 1 143 4 
241 1 70 1 189 1 146 1 19 1 103 1 293 2 216 1 29 1 299 1 9 1 181 1 255 2 257 1 277 1 64 1 84 2 225 1 227 1 48 1 
189 1 36 1 146 1 103 1 293 2 55 1 134 1 9 1 181 1 303 1 255 1 257 1 84 2 259 1 13 1 
189 1 146 1 103 1 51 1 246 1 293 2 55 1 110 1 251 1 300 1 9 1 181 1 255 1 257 1 84 2 13 1 119 1 100 1 
189 1 146 1 88 1 103 1 193 1 51 1 293 1 55 1 22 1 90 1 79 1 251 1 300 1 9 1 181 1 237 1 257 1 84 2 13 1 46 1 118 1 100 1 
228 1 189 1 146 1 88 1 103 1 293 1 107 1 79 1 9 1 181 1 255 1 257 1 84 2 119 1 118 1 46 1 
264 1 189 1 146 1 103 1 9 1 8 1 11 1 84 2 13 1 14 1 15 1 290 1 55 1 293 2 251 1 181 1 257 1 137 1 255 1 227 1 
241 1 189 1 146 1 103 1 268 1 293 1 9 1 181 1 11 1 257 1 255 1 84 2 227 1 
241 1 189 1 146 1 103 1 290 1 293 1 202 1 9 1 8 1 181 1 257 1 84 2 13 1 
241 1 189 1 146 1 103 1 290 1 293 2 8 1 9 1 181 1 11 1 257 1 137 1 255 1 84 2 13 1 227 1 
228 1 189 1 146 1 103 1 268 1 293 1 9 1 181 1 11 1 257 1 255 1 84 2 227 1 
228 1 189 1 146 1 103 1 290 1 293 1 202 1 9 1 8 1 181 1 257 1 84 2 13 1 
228 1 189 1 146 1 103 1 290 1 293 2 8 1 9 1 181 1 11 1 257 1 137 1 255 1 84 2 13 1 227 1 
189 1 146 1 103 1 290 1 293 2 8 1 9 1 181 1 11 1 257 1 137 1 255 1 84 2 13 1 227 1 
79 1 88 1 22 1 46 1 118 1 
79 1 88 1 124 1 46 1 118 1 
189 1 146 1 103 1 290 1 293 2 55 1 8 1 9 1 181 1 11 1 257 1 137 1 255 1 84 2 13 1 227 1 
79 1 289 1 88 1 193 1 22 1 46 1 
264 1 189 1 146 1 230 1 103 1 9 1 8 1 11 1 84 2 13 1 14 1 290 1 55 1 293 2 251 1 181 1 257 1 137 1 255 1 227 1 
189 2 146 2 36 1 195 1 4 1 273 1 274 1 275 1 8 1 11 1 239 1 84 4 13 5 171 1 19 1 290 1 173 1 293 9 294 1 129 1 131 1 181 2 93 1 257 2 255 4 137 1 64 2 259 2 227 1 
189 2 146 2 36 1 195 1 4 1 273 1 274 1 275 1 8 1 11 1 239 1 84 4 13 5 171 1 19 1 290 1 173 1 293 9 294 1 129 1 131 1 181 2 93 1 257 2 255 4 137 1 64 2 259 2 227 1 
70 1 144 1 189 2 35 1 146 2 36 4 195 2 39 1 4 7 273 1 274 3 275 2 234 1 8 7 11 6 277 1 12 1 84 4 13 22 48 1 121 1 171 1 19 6 290 6 173 1 293 46 294 1 129 1 216 1 131 1 297 2 220 1 299 1 181 2 93 1 257 2 255 24 137 6 64 13 225 1 259 4 227 7 
189 2 146 2 36 1 195 1 4 1 201 1 273 1 274 1 275 1 8 1 11 1 239 1 84 4 13 5 171 1 19 1 290 1 173 1 293 9 294 1 129 1 131 1 181 2 257 2 255 4 137 1 64 2 259 2 227 1 
144 1 189 2 35 1 146 2 36 2 39 1 4 1 273 1 274 3 275 2 8 1 234 1 11 2 12 1 84 4 13 8 121 1 171 1 19 1 290 1 173 2 293 19 294 1 129 1 131 2 220 1 181 2 93 1 257 2 255 11 137 2 64 2 259 2 227 2 
187 1 189 1 146 1 191 2 103 1 76 1 107 1 270 1 40 1 79 2 232 1 9 1 205 1 84 2 13 1 282 1 46 2 283 2 119 1 284 1 49 2 88 2 210 2 55 1 293 2 181 1 254 1 257 1 255 1 306 1 100 1 
289 1 122 1 266 2 88 2 73 1 89 1 296 1 156 1 199 1 79 2 41 1 233 1 254 1 63 1 182 1 184 1 258 1 282 1 46 2 
122 1 266 2 88 1 73 1 89 1 296 1 156 1 5 1 199 1 79 1 63 1 254 1 182 1 184 1 258 1 46 1 282 1 
288 1 88 1 128 1 76 1 40 1 79 1 158 1 233 1 221 1 254 1 184 1 282 1 118 1 46 1 
122 1 266 2 88 1 73 1 89 1 296 1 156 1 199 1 79 1 41 1 233 1 254 1 63 1 182 1 184 1 258 1 46 1 282 1 
176 1 
111 1 26 1 192 1 29 1 185 1 213 1 285 1 
86 1 37 1 106 1 3 1 6 1 26 1 203 1 276 1 183 1 185 1 285 1 
69 1 0 5 76 1 6 3 79 1 80 6 235 5 8 2 11 2 83 2 86 6 18 1 88 1 21 2 26 8 179 2 253 2 254 2 183 3 94 2 185 7 96 2 260 2 261 3 102 1 106 12 40 6 200 1 111 1 203 3 276 3 282 1 118 1 46 1 45 2 285 7 123 1 290 2 295 2 298 6 135 2 304 1 223 3 137 2 227 2 143 5 
144 1 36 1 106 6 39 1 80 5 6 1 275 1 203 1 234 1 8 2 276 1 11 2 285 3 121 1 86 3 290 2 21 1 26 6 220 1 298 5 137 2 183 1 259 1 185 4 227 2 
0 1 87 1 50 1 21 2 216 1 6 1 26 2 251 1 8 1 235 1 203 1 81 1 276 1 183 1 185 1 225 1 227 1 14 1 47 1 263 1 48 1 
192 1 213 1 6 1 111 1 26 1 203 1 276 1 183 1 185 1 285 1 
86 1 290 1 106 3 80 2 26 2 298 2 8 1 11 1 137 1 185 2 227 1 285 1 
111 1 0 1 235 1 261 1 285 1 143 1 
0 3 1 1 76 1 40 1 6 1 79 4 203 2 235 3 276 2 82 1 282 1 46 4 118 2 286 1 287 2 288 1 88 4 18 2 128 1 27 1 26 2 135 2 254 1 183 2 185 2 141 1 186 1 261 2 143 4 
79 1 251 1 88 1 22 1 44 1 46 1 118 1 14 1 47 1 
86 2 18 1 106 4 80 2 6 1 111 2 26 1 298 2 299 1 203 1 135 1 276 1 183 1 185 2 285 4 
180 1 196 1 97 1 
180 1 224 1 278 1 166 1 97 1 
180 1 196 1 97 1 
180 1 196 1 97 1 
61 1 180 1 97 1 
61 1 180 1 97 1 
61 1 180 1 97 1 
180 1 97 1 
204 1 58 1 
70 1 189 1 36 1 146 1 39 1 275 1 8 1 277 1 84 2 13 4 48 1 19 2 293 8 129 1 216 1 299 1 181 1 257 1 255 4 64 2 259 1 225 1 227 1 
70 1 189 2 146 2 36 1 195 1 39 1 4 1 275 1 8 1 11 1 277 1 84 4 13 5 48 1 19 2 20 1 293 11 129 1 216 1 299 1 181 2 257 2 255 6 137 1 64 3 225 1 259 2 227 2 
144 1 189 2 36 1 146 2 39 1 4 1 275 1 234 1 8 2 11 2 84 4 13 6 121 1 19 1 290 2 20 1 293 12 129 1 220 1 181 2 257 2 255 6 137 2 64 2 259 1 227 2 
70 1 144 1 189 3 35 1 36 1 146 3 39 1 4 2 275 1 234 1 8 2 11 2 277 1 84 6 13 7 48 1 121 1 19 2 290 1 20 1 293 17 129 1 216 1 220 1 299 1 181 3 257 3 255 10 137 2 64 4 225 1 259 1 227 3 
70 1 189 1 36 1 146 1 39 1 275 1 8 1 277 1 84 2 13 4 48 1 19 2 293 8 129 1 216 1 299 1 181 1 257 1 255 4 64 2 259 1 225 1 227 1 
144 1 189 1 36 1 146 1 39 1 4 1 275 1 234 1 8 2 11 2 84 2 13 6 121 1 290 2 293 12 129 1 220 1 181 1 257 1 255 6 137 2 64 1 259 1 227 2 
144 1 189 3 35 1 146 3 36 1 39 1 4 1 275 1 234 1 8 1 11 2 84 6 13 4 121 1 19 1 290 1 20 1 293 11 129 1 220 1 181 3 257 3 255 7 137 2 64 2 259 1 227 2 
144 1 189 4 146 4 36 1 35 2 39 1 4 3 275 1 234 1 8 2 11 3 84 8 239 1 13 7 121 1 19 3 290 2 293 16 129 1 220 1 181 4 257 4 255 9 137 3 64 6 259 1 227 3 
70 1 19 3 293 7 216 3 4 3 8 1 277 2 255 3 64 6 225 3 13 4 227 1 48 1 
70 1 144 1 189 4 146 4 36 1 35 2 39 1 4 1 275 1 234 1 8 2 11 2 277 1 84 8 239 1 13 8 48 1 121 1 19 4 290 1 293 18 129 1 216 1 220 1 299 1 181 4 257 4 255 10 137 2 64 5 225 1 259 1 227 3 
70 1 189 2 146 2 35 1 19 2 293 8 4 1 216 1 299 1 8 1 181 2 255 4 257 2 277 1 64 3 84 4 225 1 227 1 13 4 48 1 
70 1 19 2 293 6 216 1 29 1 299 1 8 1 277 1 255 3 64 2 225 1 13 3 227 1 48 1 
189 1 146 1 19 1 290 1 20 1 293 4 4 1 8 1 181 1 11 1 257 1 137 1 255 2 64 2 84 2 13 2 227 1 
36 1 19 1 290 1 293 7 195 1 4 1 275 1 8 1 11 1 255 3 137 1 64 2 259 2 13 4 227 1 
70 1 189 2 36 2 35 2 146 2 195 1 4 4 8 3 11 2 277 1 84 4 13 12 48 1 19 5 290 2 293 23 216 2 297 1 177 1 134 1 299 1 181 2 137 2 255 11 257 2 64 9 225 2 259 2 227 3 
293 1 259 1 13 1 
36 1 293 1 255 1 
189 1 146 1 19 2 290 1 20 1 293 6 4 1 8 1 181 1 11 1 257 1 137 1 255 3 64 3 84 2 260 1 13 3 227 1 
144 1 189 1 36 1 146 1 39 1 4 1 275 1 234 1 8 2 11 2 84 2 13 6 121 1 19 1 290 2 293 12 129 1 220 1 181 1 257 1 255 6 137 2 64 2 259 1 227 2 
19 1 293 6 216 1 4 1 8 1 255 3 64 2 225 1 227 1 13 3 48 1 
70 1 189 1 35 1 146 1 19 1 293 3 4 1 216 1 177 1 181 1 255 1 277 1 257 1 64 2 225 1 84 2 13 2 
189 1 146 1 50 1 19 3 293 10 129 1 216 2 4 2 8 2 181 1 257 1 255 5 64 5 84 2 225 2 13 5 227 2 48 1 
189 1 146 1 293 2 129 1 4 1 181 1 11 1 257 1 255 2 64 1 84 2 227 1 
189 1 146 1 19 1 290 1 293 4 129 1 4 1 8 1 181 1 11 1 257 1 137 1 255 2 64 2 84 2 13 2 227 1 
189 3 35 1 146 3 19 1 293 3 129 1 216 1 4 1 177 1 181 3 257 3 255 1 64 2 239 1 84 6 225 1 13 2 
70 1 189 5 35 2 146 5 36 3 195 1 4 5 275 1 8 5 11 3 277 1 239 1 84 10 13 18 48 2 19 7 290 3 54 1 20 1 293 34 129 1 216 3 177 1 299 1 181 5 257 5 255 16 137 3 305 1 64 12 225 3 259 4 227 5 98 1 
49 1 170 1 210 1 301 1 114 1 279 1 283 1 
219 1 178 1 150 1 231 1 154 1 
79 1 288 1 29 1 88 1 254 1 128 1 76 1 282 1 46 1 118 1 40 1 
79 1 251 1 102 1 88 1 10 1 300 1 31 1 254 1 76 1 282 1 46 1 118 1 40 1 
79 1 287 1 251 1 102 1 88 1 10 1 300 1 31 1 254 1 76 1 282 1 46 1 40 1 
79 1 287 1 251 1 102 1 88 1 300 1 31 1 104 1 254 1 76 1 282 1 46 1 40 1 
0 2 102 1 76 1 40 4 79 2 111 1 235 2 118 1 282 1 46 2 14 1 47 1 285 1 287 1 87 1 17 1 88 2 251 1 133 1 62 1 253 1 302 1 254 1 223 1 94 1 263 1 143 1 
0 2 287 1 17 1 102 1 88 3 76 1 40 4 111 1 79 3 133 1 235 2 253 1 254 1 223 1 83 1 94 1 209 1 118 1 46 3 282 1 285 1 143 1 
79 1 88 1 254 1 208 1 282 1 46 1 
69 1 88 1 102 1 2 1 127 1 76 1 40 1 79 1 254 2 118 1 46 1 282 1 167 1 
251 1 300 1 
0 3 192 1 40 2 111 1 79 1 6 2 203 2 235 3 276 2 83 1 118 1 46 1 45 1 285 1 243 1 88 1 213 1 26 1 179 1 253 1 223 1 183 2 94 1 185 1 96 1 186 1 261 1 143 2 
69 1 289 1 88 2 123 1 102 1 76 1 40 2 79 2 253 1 254 2 208 1 46 2 282 1 
79 4 288 1 289 1 88 4 254 1 128 1 76 1 209 1 67 1 282 1 46 4 118 1 40 1 
88 1 102 1 125 1 2 1 127 1 76 1 40 1 79 1 136 1 254 2 160 1 46 1 282 1 
79 1 266 1 88 1 73 1 254 1 258 1 282 1 46 1 118 1 296 1 
289 1 88 2 76 1 40 1 79 2 232 1 205 1 63 1 254 1 46 2 282 1 
287 1 288 1 145 1 289 1 88 5 128 1 76 2 40 3 79 4 232 1 252 1 254 2 67 1 118 1 46 5 282 2 
287 1 288 1 289 1 88 5 128 1 76 2 40 3 79 4 232 1 252 1 42 1 254 2 67 1 118 1 46 5 282 2 
79 1 251 1 102 1 88 1 300 1 31 1 104 1 254 1 76 1 282 1 46 1 118 1 40 1 
69 1 287 1 88 1 102 1 2 1 127 1 76 1 40 1 79 1 254 2 46 1 282 1 167 1 
292 1 138 1 116 1 99 1 
0 1 243 1 218 1 235 1 292 1 138 1 197 1 57 1 116 1 99 1 
187 1 49 1 210 1 270 1 138 1 306 1 116 1 283 1 99 1 
197 1 57 1 116 1 

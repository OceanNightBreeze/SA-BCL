#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (35,39,149,190,253) (293,360) (293,360) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (35,39,149,190,253) (293,360) (293,360) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (35,39,149,190,253) (293,360) (293,360) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (35,39,149,190,253) (293,360) (293,360) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 300 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (35,39,149,190,253) (13,102) (13,102) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 300 111 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 300 111 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (163,302) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 206 (32,46,138) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (26,54,275,350) (26,54,275,350) (130,155,157) (130,155,157) (130,155,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (26,54,275,350) (26,54,275,350) (130,155,157) (130,155,157) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (26,54,275,350) (26,54,275,350) (130,155,157) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (26,54,275,350) (26,54,275,350) (130,155,157) (130,155,157) (130,155,157) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 357 278 284 150 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 333 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (26,54,275,350) (26,54,275,350) 56 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2116 | = null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 3006 | stmt -> ;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z | CONDITION | 1270 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
190 1 293 1 86 1 275 1 192 1 237 1 20 1 328 1 360 1 42 1 350 1 231 1 81 1 26 1 
190 1 293 1 86 1 275 1 192 1 237 1 20 1 328 1 360 1 42 1 350 1 231 1 81 1 26 1 
190 1 293 1 86 1 275 1 192 1 237 1 20 1 328 1 360 1 42 1 350 1 231 1 81 1 26 1 
190 1 293 1 86 1 275 1 192 1 237 1 20 1 328 1 360 1 42 1 350 1 231 1 81 1 26 1 
74 1 86 1 334 1 275 1 237 2 54 1 327 1 20 1 140 1 350 2 300 1 81 1 26 1 59 1 
190 1 86 1 275 1 192 1 237 1 140 1 315 1 42 1 350 1 102 1 81 1 26 1 13 1 
74 2 89 1 275 2 29 1 237 3 54 1 327 1 42 1 350 3 317 1 81 1 26 2 235 1 
137 1 332 1 74 3 86 1 334 1 313 1 275 2 29 1 237 7 54 5 327 3 20 1 140 1 111 1 42 1 350 7 300 1 317 2 81 1 26 2 59 1 
137 1 332 1 74 3 86 1 334 1 313 1 275 2 29 1 237 7 54 5 327 3 20 1 140 1 111 1 42 1 350 7 300 1 317 2 81 1 26 2 59 1 
333 1 344 1 274 1 
274 1 357 2 370 1 
18 2 358 2 214 2 141 1 240 2 3 1 4 2 97 2 
354 1 203 1 3 1 4 2 174 1 97 3 297 1 226 2 358 2 229 1 250 1 10 1 230 2 128 1 299 1 301 2 208 1 234 1 364 1 233 1 105 1 135 1 136 1 214 3 84 1 261 1 15 1 88 1 18 2 374 2 41 1 141 1 112 1 240 2 167 1 143 2 24 1 
18 1 358 1 169 1 214 1 141 1 240 1 4 1 97 1 
214 1 16 1 274 1 4 1 97 1 31 1 207 1 290 1 43 1 344 1 127 1 44 1 151 1 258 1 
214 1 16 1 274 1 4 1 97 1 358 1 18 1 207 2 43 2 240 1 344 1 127 1 44 1 151 1 258 1 
207 1 365 1 309 1 43 1 379 1 
169 1 365 1 214 1 49 1 4 1 62 1 274 1 97 1 18 1 358 1 207 2 309 1 141 1 240 1 43 2 344 1 198 1 
207 1 309 1 43 1 
169 1 365 1 214 1 62 1 4 1 97 1 207 1 358 1 18 1 141 1 43 1 240 1 
274 1 
169 1 365 1 214 1 4 1 62 1 274 1 97 1 40 1 18 1 358 1 207 2 309 1 141 1 240 1 43 2 344 1 198 1 
169 1 4 1 274 1 247 1 97 1 358 1 207 5 344 1 316 1 129 1 153 4 318 1 107 1 365 2 366 1 214 1 189 2 38 2 62 1 285 2 286 1 347 1 91 1 18 1 193 4 288 2 309 2 141 1 240 1 43 5 241 1 291 2 142 2 353 1 198 1 331 1 
333 1 3 1 
214 2 3 2 76 1 4 2 97 2 358 1 18 1 240 1 133 1 
163 1 170 1 296 1 
214 1 261 1 15 1 3 1 174 1 97 1 226 1 112 1 299 1 301 1 143 1 364 1 233 1 24 1 48 1 135 1 
214 2 261 1 15 1 4 1 174 1 97 2 226 1 163 1 18 1 112 1 240 1 299 1 301 1 115 1 143 1 364 1 24 1 233 1 57 1 135 1 
214 5 61 1 3 1 76 1 4 5 97 5 161 1 18 4 358 1 290 1 240 4 115 2 57 1 145 1 
18 2 194 1 214 2 240 2 127 1 4 2 175 1 97 2 
358 1 18 3 214 3 240 3 3 1 115 1 4 3 97 3 
18 1 194 1 214 1 240 1 127 1 4 1 97 1 
18 1 358 1 214 1 240 1 127 1 76 1 4 1 133 1 97 1 
354 1 203 1 3 1 76 1 174 1 4 3 97 4 226 1 358 2 207 1 277 1 229 1 250 1 10 1 230 2 128 1 299 1 127 1 151 1 301 1 208 1 234 1 364 1 233 1 57 1 258 1 105 1 135 1 214 4 261 1 15 1 88 1 16 1 18 3 374 1 112 1 141 1 240 3 43 1 44 1 115 1 143 1 24 1 116 1 
18 1 214 2 61 1 290 1 240 1 3 1 115 1 4 2 97 2 
214 3 191 1 16 1 76 1 274 1 4 3 97 3 358 1 207 1 18 3 43 1 240 3 127 1 151 1 44 1 115 2 57 1 116 1 258 1 
214 2 76 1 4 2 296 1 97 2 358 1 18 2 163 1 240 2 115 1 
214 1 261 1 15 1 3 1 174 1 97 1 226 1 112 1 299 1 301 1 143 1 233 1 24 1 364 1 135 1 
214 1 60 1 15 1 3 1 97 1 226 1 112 1 299 1 301 1 143 1 233 1 24 1 364 1 104 1 135 1 
37 1 302 1 
18 1 214 1 240 1 127 1 44 1 4 1 175 1 97 1 
138 1 319 1 
138 1 319 1 
46 1 206 1 
46 1 206 1 
46 1 206 1 
126 1 138 1 319 1 
138 1 46 1 319 1 206 1 
32 1 138 1 319 1 
126 1 138 1 319 1 
126 1 138 1 319 1 
138 1 319 1 371 1 
138 1 319 1 371 1 
138 1 319 1 371 1 
271 1 72 1 294 1 3 1 244 1 4 2 97 2 248 1 207 1 32 1 123 1 181 1 80 1 185 1 319 1 214 2 138 1 324 1 348 1 18 2 240 2 43 1 94 1 199 1 
271 2 169 1 294 1 4 1 97 1 207 2 358 1 249 1 341 1 181 2 152 1 131 1 185 2 319 2 214 1 138 2 216 1 323 1 62 1 348 2 18 1 141 1 240 1 43 2 199 2 270 1 312 1 
20 1 140 1 86 1 
140 1 315 1 86 1 
20 2 125 1 315 1 86 3 369 1 71 1 
20 1 315 1 86 2 369 1 71 1 162 1 
20 1 315 1 86 2 369 2 71 1 
72 1 222 1 274 2 357 3 248 1 227 1 207 5 34 2 344 1 182 1 153 3 103 1 134 1 365 4 189 1 38 1 285 1 370 1 91 1 193 2 288 1 309 1 67 2 376 1 43 5 195 2 291 1 94 1 168 1 200 1 198 1 292 1 
169 1 274 1 4 1 97 1 207 2 358 1 359 1 344 1 365 2 282 1 214 1 62 1 63 1 18 1 309 1 141 1 43 2 240 1 379 1 
72 1 222 1 274 3 357 4 247 1 207 3 227 1 34 2 344 1 153 3 103 1 134 1 365 2 189 1 38 1 285 1 370 2 193 2 288 1 376 1 67 2 43 3 195 1 291 1 168 1 292 1 
72 2 222 1 274 4 357 7 247 1 207 4 227 2 342 1 34 4 344 1 153 5 103 2 134 2 365 3 189 2 109 1 38 1 368 1 285 1 370 3 193 4 288 1 67 4 376 1 43 4 195 2 291 2 168 1 292 1 
82 1 333 1 364 1 
364 1 144 1 
8 1 
299 1 364 1 24 1 
262 1 364 1 
364 1 24 1 
82 2 349 1 299 1 364 3 24 1 378 1 
136 4 366 1 189 1 83 1 346 3 283 1 64 1 374 7 65 1 10 3 22 2 220 1 241 1 221 1 291 1 47 2 331 1 
136 4 366 1 189 1 83 1 346 3 283 1 64 1 374 7 65 1 10 3 22 2 220 1 241 1 221 1 291 1 47 2 331 1 
136 4 366 1 189 1 83 1 346 3 283 1 64 1 374 7 65 1 10 3 22 2 220 1 241 1 221 1 291 1 352 1 47 2 331 1 
1 1 147 3 203 1 51 1 176 1 98 1 227 3 229 1 230 2 10 15 255 1 234 1 103 3 105 1 134 3 136 16 366 1 36 4 83 2 189 4 346 10 283 5 217 1 64 1 374 31 238 1 65 2 22 5 220 1 221 1 241 2 291 4 47 3 331 2 
272 1 203 1 229 1 230 2 10 6 316 1 234 1 105 1 136 8 366 2 83 1 189 3 346 4 283 1 374 14 65 1 22 3 113 1 220 1 221 1 241 2 291 3 47 2 331 2 
118 1 171 1 245 1 275 1 226 1 177 1 54 1 125 1 315 1 301 1 130 1 233 1 81 1 14 1 345 1 155 1 157 1 86 2 237 1 20 1 140 1 42 1 112 1 350 2 68 1 143 1 26 1 
118 1 171 1 245 1 275 1 226 1 177 1 54 2 125 1 315 1 301 1 130 1 233 1 14 1 155 1 85 1 86 2 237 2 20 1 140 1 219 1 42 1 239 1 112 1 350 3 68 1 143 1 26 1 
118 1 171 1 85 1 86 2 245 1 237 1 226 1 177 1 54 2 20 1 140 1 125 1 315 1 112 1 239 1 42 1 350 2 301 1 68 1 130 1 143 1 233 1 
119 1 245 2 275 1 226 1 177 2 228 1 301 1 233 1 364 1 154 1 15 1 237 1 287 1 219 1 42 2 112 1 350 1 93 1 68 2 143 1 24 1 26 1 27 1 
118 1 171 1 245 1 275 1 226 1 177 1 54 1 125 1 315 1 301 1 130 1 233 1 81 1 14 1 155 1 157 1 85 1 86 2 237 1 20 1 140 1 42 1 112 1 350 2 68 1 143 1 26 1 
55 1 
335 1 4 1 97 1 207 4 9 1 298 1 11 2 301 2 254 1 151 1 153 2 256 1 257 1 258 1 212 3 108 1 214 1 15 2 16 1 309 4 112 1 166 2 268 1 24 1 269 1 222 1 119 1 274 1 28 1 357 2 122 2 226 2 31 1 127 1 278 1 364 1 233 1 363 1 184 1 321 1 38 1 285 1 370 2 91 1 193 2 288 1 92 1 43 4 290 1 93 1 44 1 143 2 198 2 330 1 
108 1 214 1 335 1 16 1 4 1 97 1 31 1 207 2 9 1 309 1 298 1 43 2 290 1 127 1 151 1 44 1 254 1 363 1 258 1 212 2 
108 1 214 1 335 1 16 1 274 1 4 1 97 1 40 1 31 1 207 3 309 1 298 1 92 1 43 3 290 1 344 1 127 1 151 1 44 1 254 1 363 1 198 1 258 1 212 3 
108 1 214 1 335 1 16 1 4 1 97 1 31 1 207 2 9 1 309 1 298 1 43 2 290 1 127 1 151 1 44 1 254 1 363 1 330 1 258 1 212 2 
169 1 335 1 274 1 4 2 97 2 31 1 358 1 207 3 9 1 298 1 344 1 127 1 254 1 151 1 363 1 258 1 212 3 108 1 214 2 16 1 139 1 62 1 40 1 18 1 309 2 141 1 240 1 92 1 290 1 43 3 44 1 198 1 330 1 
335 1 4 1 97 1 207 3 9 1 298 1 11 2 344 1 151 1 254 1 153 1 258 1 212 3 108 1 214 1 16 1 309 2 166 2 268 1 28 1 274 2 357 2 31 1 122 2 127 1 278 1 363 1 184 1 38 1 285 1 370 2 91 1 193 1 288 1 290 1 43 3 92 1 44 1 198 1 330 1 
335 1 274 1 4 1 314 1 97 1 122 2 31 1 207 4 9 2 298 1 11 2 344 1 127 1 278 1 254 1 151 1 153 1 363 1 184 2 258 1 212 4 108 1 214 1 259 1 16 1 284 1 38 1 285 1 370 2 91 1 193 1 288 1 309 4 92 2 290 1 43 4 166 2 44 1 268 1 198 2 330 2 
335 1 4 2 97 2 207 4 9 2 298 1 11 2 344 1 151 1 254 1 153 1 258 1 212 4 108 1 259 1 214 2 16 1 62 1 18 1 309 4 166 2 268 1 169 1 314 1 274 1 31 1 122 2 358 1 127 1 278 1 363 1 184 2 38 1 284 1 285 1 370 2 91 1 193 1 288 1 141 1 240 1 43 4 290 1 92 2 44 1 198 2 330 2 
335 1 4 1 357 1 97 1 31 1 207 2 298 1 11 1 150 1 127 1 278 1 254 1 151 1 153 1 363 1 258 1 212 2 108 1 214 1 236 1 16 1 284 1 38 1 285 1 91 1 193 1 288 1 164 1 290 1 43 2 166 1 44 1 197 1 
335 1 337 1 4 2 97 2 207 4 9 3 298 1 11 2 344 1 151 1 254 1 153 1 258 1 212 4 108 1 259 1 214 2 16 1 62 1 18 1 309 5 166 2 268 1 169 1 314 1 274 1 31 1 122 2 358 1 127 1 278 1 363 1 184 2 38 1 284 1 285 1 370 2 91 1 193 1 288 1 141 1 240 1 43 4 290 1 92 2 44 1 198 2 330 3 
335 1 337 1 4 2 97 2 207 4 9 3 298 1 11 2 344 1 151 1 254 1 153 1 258 1 212 5 108 1 259 1 214 2 16 1 62 1 18 1 309 5 166 2 268 1 169 1 314 1 274 1 31 1 122 2 358 1 127 1 278 1 363 1 184 2 38 1 284 1 285 1 370 2 91 1 193 1 288 1 141 1 240 1 92 3 43 4 290 1 44 1 198 2 330 3 
335 1 4 2 97 2 207 4 9 2 298 1 11 2 344 1 151 1 254 1 153 1 258 1 212 4 108 1 214 2 16 1 62 1 18 1 309 4 166 2 169 1 28 1 274 1 357 2 31 1 358 1 127 1 278 1 363 1 236 1 38 1 285 1 372 2 91 1 193 1 288 1 141 1 240 1 290 1 43 4 92 2 44 1 197 2 198 2 330 2 
333 1 37 1 
170 13 203 2 147 3 3 1 296 4 98 2 227 3 229 2 10 7 230 4 101 1 79 1 128 1 208 2 255 1 234 2 103 3 105 2 134 1 136 10 36 4 189 3 346 2 158 1 283 1 88 1 163 13 374 17 289 1 22 1 291 1 167 1 242 1 
172 1 203 1 295 1 3 1 174 1 4 1 296 1 97 2 226 1 229 1 230 2 10 1 101 1 299 1 128 1 301 1 208 1 364 1 233 1 234 1 57 1 105 1 135 1 136 1 214 2 261 1 15 1 88 1 326 1 18 1 374 2 112 1 240 1 115 1 143 1 167 1 24 1 48 1 
203 3 3 2 4 1 97 3 52 2 296 7 10 10 101 1 299 2 301 3 208 3 57 1 103 2 105 3 214 3 260 2 261 2 346 8 15 1 264 2 18 1 163 7 308 2 22 4 112 2 220 1 221 1 114 1 115 1 167 1 24 2 354 2 170 7 174 2 226 3 227 2 229 3 230 6 128 3 234 3 233 2 364 2 134 2 135 2 280 1 136 10 366 1 189 3 85 1 283 4 88 1 90 1 374 20 240 1 241 1 291 3 143 3 47 1 331 1 
243 1 203 1 119 1 336 1 4 1 276 1 97 1 226 7 229 1 230 2 10 1 128 1 301 8 208 1 233 2 364 3 234 1 105 1 345 1 136 1 214 1 84 2 85 1 37 1 15 2 88 1 110 1 18 1 374 2 266 1 112 2 240 1 93 1 115 1 351 1 143 8 167 1 24 2 45 1 
170 1 203 1 76 1 4 1 296 1 97 1 358 1 227 1 229 1 179 1 230 2 10 2 101 1 128 1 208 1 234 1 103 1 105 1 134 1 136 1 214 1 189 1 346 1 163 1 18 1 374 3 22 1 240 1 291 1 
37 1 
37 1 
37 1 
170 1 136 2 189 1 346 1 203 1 283 1 224 1 296 1 163 1 227 1 374 2 229 1 266 1 230 2 128 1 208 1 234 1 105 1 
170 1 346 1 203 1 296 1 163 1 374 2 229 1 266 1 230 2 10 2 22 1 128 1 291 1 208 1 196 1 234 1 105 1 134 1 
170 2 203 1 296 2 227 1 229 1 230 2 10 2 128 1 208 1 234 1 103 1 105 1 134 1 136 2 189 1 346 2 283 1 163 2 374 4 266 1 22 1 291 1 
170 2 203 1 296 2 227 1 229 1 230 2 10 2 128 1 208 1 234 1 103 1 105 1 134 1 136 2 189 1 346 2 283 1 163 2 374 4 22 1 291 1 
354 1 203 1 3 1 174 1 97 1 226 1 229 1 230 2 10 1 299 1 128 1 301 1 208 1 233 1 364 1 234 1 105 1 135 1 136 1 214 1 261 1 15 1 88 1 374 2 112 1 167 1 143 1 24 1 
203 1 3 1 97 1 226 1 229 1 230 2 10 1 299 1 128 1 301 1 208 1 233 1 364 1 234 1 104 1 105 1 135 1 279 1 136 1 60 1 214 1 15 1 88 1 374 2 112 1 167 1 143 1 24 1 
170 2 203 1 296 2 227 1 229 1 230 2 10 2 101 1 128 1 208 1 234 1 103 1 105 1 134 1 136 2 189 1 346 2 283 1 163 2 374 4 22 1 291 1 
354 1 170 2 203 1 174 1 296 2 97 1 226 1 227 1 229 1 10 2 230 2 299 1 128 1 301 1 208 1 233 1 364 1 234 1 103 1 134 1 105 1 135 1 345 1 136 2 189 1 214 1 346 2 261 1 260 1 283 1 163 2 374 4 22 1 112 1 291 1 143 1 24 1 
170 1 203 1 76 1 4 1 97 1 296 1 358 1 227 1 229 1 10 1 230 2 101 1 128 1 208 1 234 1 103 1 134 1 105 1 136 2 215 1 214 1 189 1 346 1 283 1 18 1 163 1 374 3 240 1 291 1 
202 1 355 1 75 1 203 2 147 1 5 2 98 1 227 3 229 2 230 4 10 10 33 1 255 1 234 2 103 3 105 2 134 3 136 9 322 1 36 2 189 3 346 6 283 3 263 1 374 19 22 3 267 2 113 1 291 3 201 1 
202 1 355 1 73 1 203 3 147 2 5 1 176 2 30 1 99 1 227 3 124 1 229 3 10 12 230 6 33 1 255 2 234 3 103 3 304 1 105 3 134 2 136 14 36 2 189 3 346 4 283 2 263 2 374 26 22 2 165 1 267 4 113 1 291 2 201 2 
202 1 147 3 203 3 5 1 98 2 99 1 10 22 255 3 103 5 105 3 304 1 346 8 263 2 22 4 165 1 113 1 267 4 220 1 221 1 355 1 73 1 75 1 225 1 176 1 30 1 227 5 229 3 124 1 230 6 33 1 234 3 134 4 136 22 366 1 189 6 36 5 283 4 374 44 241 1 291 5 201 1 47 1 331 1 
202 1 73 1 355 1 75 1 203 4 147 3 225 1 5 1 176 2 30 1 98 2 99 1 227 5 124 1 229 4 230 8 10 21 33 1 255 3 234 4 103 5 304 1 105 4 134 4 136 22 366 1 36 5 189 6 346 8 283 3 263 2 374 43 165 1 22 5 220 1 267 4 113 1 241 1 221 1 291 5 47 1 201 1 331 1 
202 1 73 1 355 1 203 2 147 4 5 1 176 1 30 1 98 2 99 1 227 7 124 1 229 2 230 4 10 25 33 1 255 2 234 2 103 7 304 1 105 2 134 7 136 27 366 1 36 4 189 8 346 14 283 7 263 1 374 52 165 1 22 7 220 1 267 4 113 1 241 1 221 1 291 8 47 1 201 1 242 2 331 1 
271 1 21 1 138 1 181 1 70 1 246 1 185 1 199 1 319 1 53 1 
32 1 324 1 
271 1 138 1 181 1 17 1 185 1 6 1 199 1 319 1 146 1 
126 1 356 1 
377 1 371 1 211 1 
271 1 169 1 294 1 4 1 97 1 207 1 358 1 249 1 341 1 181 1 152 1 131 1 185 1 319 1 214 1 138 1 216 1 323 1 62 1 348 2 18 1 141 1 240 1 43 1 199 1 270 1 312 1 
271 1 169 1 294 1 4 1 97 1 207 1 358 1 249 1 341 1 181 1 152 1 131 1 185 1 319 1 214 1 138 1 216 1 323 1 62 1 348 2 18 1 141 1 240 1 43 1 199 1 270 1 312 1 
271 1 169 1 294 1 4 1 97 1 207 1 358 1 249 1 341 1 181 1 152 1 131 1 185 1 319 1 214 1 138 1 216 1 323 1 62 1 348 2 18 1 141 1 240 1 43 1 199 1 270 1 312 1 
126 1 377 1 356 1 
126 1 377 1 356 1 
371 1 211 1 
377 1 371 1 211 1 
123 1 80 1 
271 1 72 1 3 1 244 1 4 2 97 2 248 1 207 1 32 1 123 1 181 1 80 1 152 1 185 1 319 1 365 1 214 2 138 1 324 1 348 1 18 2 375 1 43 1 240 2 94 1 199 1 270 1 
203 1 336 1 4 2 148 1 97 2 226 2 7 1 229 1 230 2 10 1 101 1 128 1 301 2 208 1 233 1 364 1 234 1 132 1 105 1 136 1 187 1 214 2 84 2 88 1 160 1 374 2 112 1 351 1 143 2 167 1 24 1 
118 1 171 1 173 1 339 1 226 2 177 1 125 1 315 1 301 2 233 1 14 1 345 1 85 1 86 2 20 1 140 1 112 1 143 2 69 1 
186 1 118 1 171 1 85 1 86 2 226 1 177 1 20 1 140 1 125 1 315 1 112 1 301 1 143 1 69 1 233 1 14 1 
15 1 119 1 339 1 226 1 177 1 112 1 93 1 301 1 143 1 209 1 233 1 364 1 24 1 27 1 
118 1 171 1 85 1 173 1 86 2 339 1 226 1 177 1 20 1 140 1 125 1 315 1 112 1 301 1 143 1 233 1 69 1 14 1 
306 1 
333 1 129 1 318 1 
274 2 357 1 122 1 207 1 344 1 153 1 184 1 38 1 285 1 370 1 91 1 193 1 288 1 309 1 43 1 268 1 198 1 
50 1 96 1 338 1 52 1 207 2 299 1 301 1 151 1 153 4 12 1 103 1 15 1 159 1 309 2 112 1 67 3 24 1 222 1 274 3 357 6 120 1 226 1 227 1 34 3 233 2 364 4 134 1 82 1 367 1 189 1 38 2 285 2 370 3 91 2 193 3 288 2 43 2 291 1 142 1 143 1 144 2 378 1 198 1 
147 1 4 1 97 1 207 1 99 1 344 2 255 1 153 8 103 2 304 1 214 1 62 1 347 1 18 1 309 1 165 1 67 5 117 1 169 1 222 1 73 1 273 1 274 5 357 6 30 1 227 2 358 1 34 5 321 1 134 2 189 2 36 1 38 2 285 2 370 3 91 2 193 5 288 2 141 1 240 1 43 1 291 2 142 2 198 1 
169 1 314 1 4 1 97 1 207 1 358 1 316 1 153 2 366 1 214 1 189 2 38 1 62 1 285 1 347 1 91 1 193 2 18 1 288 1 141 1 43 1 240 1 241 1 142 2 291 1 331 1 
288 1 129 1 38 1 285 1 91 1 
189 2 274 5 357 10 370 5 347 1 52 1 227 2 193 5 67 5 34 5 142 2 291 2 153 5 103 2 134 2 
169 1 214 1 4 1 274 1 62 1 97 1 18 1 358 1 207 1 309 1 141 1 240 1 43 1 344 1 198 1 
222 1 119 1 247 1 121 1 226 2 207 2 343 1 299 1 301 2 153 1 233 3 364 2 257 1 321 1 213 1 188 1 281 1 15 2 38 2 285 2 91 1 193 1 288 2 309 2 112 2 43 2 93 1 143 2 24 2 269 1 198 1 
354 1 203 1 3 1 4 2 174 1 97 3 226 1 358 2 229 1 250 1 10 1 230 2 299 1 128 1 301 1 208 1 234 1 233 1 364 1 105 1 135 1 214 3 261 1 15 1 88 1 18 2 374 1 141 1 112 1 240 2 143 1 24 1 
222 1 38 1 274 4 357 4 285 1 370 2 91 1 193 2 288 1 67 2 34 2 344 2 153 1 47 1 321 1 
271 1 307 1 199 1 
271 1 100 1 123 1 70 1 199 1 
271 1 307 1 199 1 
271 1 307 1 199 1 
271 1 252 1 199 1 
271 1 252 1 199 1 
271 1 252 1 199 1 
271 1 199 1 
138 1 319 1 
136 4 366 1 189 1 346 3 203 2 283 1 176 1 374 8 229 2 10 4 230 4 22 2 220 1 221 1 241 1 291 1 234 2 47 1 105 2 331 1 
136 3 366 1 189 1 346 2 333 1 374 6 10 3 22 2 220 1 221 1 241 1 291 1 47 1 331 1 
136 2 189 1 346 2 203 1 283 1 205 1 227 1 374 4 229 1 10 2 230 2 22 1 291 1 234 1 103 1 134 1 105 1 
136 3 36 2 189 1 346 2 147 1 283 1 98 1 227 1 374 7 10 4 22 1 291 1 255 1 103 1 134 1 
147 2 203 2 176 2 98 1 227 2 229 2 10 12 230 4 79 1 234 2 103 2 134 2 105 2 136 11 366 1 189 3 36 2 346 9 283 4 265 1 374 23 22 5 220 1 241 2 221 1 291 3 47 1 242 1 331 2 
374 1 10 1 36 1 
374 1 136 1 147 1 
136 3 189 1 346 3 203 1 283 1 52 1 205 1 227 1 374 6 229 1 230 2 10 3 22 2 291 1 234 1 103 1 105 1 134 1 
73 1 147 1 203 1 30 1 227 2 99 1 229 1 10 6 230 2 255 1 234 1 103 2 105 1 134 2 304 1 136 6 36 1 189 2 346 2 283 1 374 12 165 1 22 1 113 1 291 2 
136 3 366 1 189 1 346 2 283 1 374 6 10 3 22 1 241 1 291 1 331 1 
136 1 346 2 203 1 283 1 265 1 176 1 374 3 229 1 10 2 230 2 22 1 220 1 241 1 221 1 234 1 105 1 331 1 
136 5 366 1 189 2 346 5 203 1 283 2 374 10 229 1 230 2 10 5 22 3 113 1 316 1 241 2 291 2 234 1 105 1 331 2 
136 2 189 1 346 1 203 1 283 1 227 1 374 2 229 1 230 2 113 1 234 1 105 1 
136 2 189 1 346 2 203 1 283 1 227 1 374 4 229 1 10 2 230 2 22 1 113 1 291 1 234 1 103 1 134 1 105 1 
136 1 346 2 75 1 203 3 283 1 265 1 176 1 374 3 229 3 10 2 230 6 22 1 113 1 241 1 234 3 105 3 331 1 
1 1 75 1 203 5 147 3 176 2 98 1 205 1 227 3 229 5 10 18 230 10 255 1 234 5 103 3 105 5 134 3 136 16 366 2 36 4 189 5 346 12 283 5 265 1 217 1 374 34 238 1 22 7 220 1 113 1 241 3 221 1 291 5 47 1 331 3 
73 1 147 1 203 1 98 1 227 1 229 1 10 5 230 2 255 1 234 1 103 1 105 1 136 6 366 1 36 2 189 2 346 2 374 11 22 2 113 1 220 1 241 1 221 1 291 1 47 1 331 1 
73 1 203 2 147 1 98 1 205 1 227 1 229 2 10 5 230 4 255 1 234 2 103 1 105 2 136 6 366 1 36 2 189 2 346 3 283 1 374 11 22 2 220 1 113 1 241 1 221 1 291 1 47 1 331 1 
73 1 147 1 203 3 176 1 30 1 205 1 99 1 227 2 229 3 10 10 230 6 255 1 234 3 103 2 105 3 134 2 304 1 136 9 366 1 36 1 189 3 346 4 283 1 374 19 165 1 22 3 220 1 113 1 241 1 221 1 291 3 47 1 331 1 
73 1 147 1 203 3 176 1 30 1 205 1 227 2 99 1 229 3 10 7 230 6 255 1 234 3 103 2 105 3 134 1 304 1 136 10 366 1 36 1 189 3 346 5 283 2 374 17 165 1 22 3 220 1 113 1 241 1 221 1 291 2 47 1 331 1 
73 1 147 1 203 1 98 1 227 1 229 1 10 5 230 2 255 1 234 1 103 1 105 1 136 6 366 1 36 2 189 2 346 2 374 11 22 2 113 1 220 1 241 1 221 1 291 1 47 1 331 1 
73 1 147 1 203 1 30 1 227 2 99 1 229 1 10 6 230 2 255 1 234 1 103 2 105 1 134 2 304 1 136 6 36 1 189 2 346 2 283 1 374 12 165 1 22 1 113 1 291 2 
73 1 203 4 147 1 176 2 30 1 205 1 99 1 227 2 229 4 10 8 230 8 255 1 234 4 103 2 304 1 105 4 134 1 136 10 366 1 36 1 189 3 346 5 283 2 374 18 165 1 22 3 220 1 113 1 241 1 221 1 291 2 47 1 331 1 
73 1 203 4 75 1 147 1 176 2 30 1 99 1 227 3 229 4 10 7 230 8 255 1 234 4 103 3 304 1 105 4 134 2 136 9 36 1 189 3 346 6 283 3 374 16 165 1 22 3 113 1 291 2 
136 3 366 1 189 1 346 6 283 3 374 7 10 4 22 3 220 1 221 2 241 3 291 1 331 3 
73 1 203 4 75 1 147 1 176 2 30 1 99 1 227 2 229 4 10 8 230 8 255 1 234 4 103 2 304 1 105 4 134 1 136 10 366 1 36 1 189 3 346 4 283 1 374 18 165 1 22 3 220 1 113 1 241 1 221 1 291 2 47 1 331 1 
214 1 61 1 290 1 3 1 310 1 4 1 97 1 
156 1 214 1 61 1 2 1 3 1 87 1 4 1 77 1 97 1 290 1 310 1 58 1 
112 1 333 1 119 1 93 1 15 1 301 1 143 1 233 1 364 1 24 1 226 1 
214 2 261 1 15 1 3 1 4 1 97 2 226 1 18 1 112 1 240 1 299 1 301 1 115 1 143 1 364 1 24 1 233 1 135 1 
214 2 261 1 262 1 3 1 4 2 97 2 226 1 18 1 112 1 240 2 127 1 299 2 362 1 44 1 301 1 115 1 143 1 364 3 24 2 233 1 95 1 258 1 135 1 
3 1 4 2 204 1 97 2 226 2 299 2 127 1 301 2 362 1 233 1 364 3 258 1 104 1 135 1 214 2 262 1 18 1 112 1 240 2 44 1 115 1 143 2 24 2 95 1 
169 1 4 1 274 1 97 1 226 1 178 1 358 1 207 2 299 1 344 1 301 1 362 1 151 1 364 4 233 1 82 1 214 1 262 1 62 1 18 1 309 1 141 1 112 1 240 1 43 2 311 1 143 1 144 1 24 1 95 1 
169 1 4 1 274 1 97 1 226 1 358 1 207 2 299 1 344 1 301 1 362 1 151 1 364 4 233 1 82 1 214 1 159 1 262 1 62 1 18 1 309 1 141 1 112 1 240 1 43 2 143 1 144 1 24 1 95 1 
112 1 301 1 143 1 233 1 45 1 226 1 
345 1 213 1 188 1 84 1 85 1 243 1 15 2 336 1 110 1 276 1 226 6 112 2 361 1 299 1 301 7 143 7 24 2 364 3 233 3 45 1 378 1 
203 2 3 2 4 1 296 1 97 2 10 3 101 1 299 1 301 1 208 2 105 2 345 1 214 2 261 1 260 1 346 2 18 1 163 1 308 1 112 1 22 2 220 1 221 1 115 1 24 1 354 1 170 1 174 1 226 1 229 2 230 4 128 2 234 2 233 1 364 1 132 1 135 1 136 3 366 1 189 1 374 6 240 1 241 1 291 1 143 1 47 1 331 1 
50 1 96 1 4 1 97 1 207 3 344 1 151 1 301 1 153 4 214 1 159 1 15 1 62 1 347 1 18 1 309 2 169 1 274 1 121 1 226 1 358 1 316 1 129 1 364 2 318 1 365 1 82 1 366 1 367 1 189 2 38 2 285 2 91 2 193 4 288 2 141 1 43 3 240 1 241 1 142 2 291 2 143 1 144 1 198 1 331 1 
345 1 82 1 226 2 112 1 299 1 301 2 143 2 12 1 24 1 364 2 233 2 45 1 378 1 
345 1 15 1 119 1 204 1 226 4 112 1 93 1 301 4 143 4 210 1 233 1 24 1 364 1 
213 1 188 1 281 1 226 2 343 1 112 1 299 1 301 2 114 1 143 2 24 1 364 1 233 2 95 1 
171 1 15 1 86 1 226 1 140 1 112 1 315 1 301 1 143 1 233 1 
345 1 85 1 336 1 160 1 226 2 112 1 301 2 143 2 24 1 364 1 233 1 
345 1 119 1 15 1 336 1 110 1 276 1 226 4 112 2 93 1 301 5 143 5 210 1 24 2 364 3 233 2 95 1 
345 1 119 1 15 1 336 1 110 1 226 4 373 1 112 2 93 1 301 5 143 5 210 1 24 2 364 3 233 2 95 1 
214 2 15 1 3 1 4 1 97 2 226 1 18 1 112 1 240 1 299 1 301 1 115 1 143 1 364 1 24 1 233 1 104 1 135 1 
213 1 188 1 226 1 112 1 361 1 299 1 301 1 143 1 24 1 364 1 233 2 378 1 95 1 
187 1 214 1 4 1 148 1 97 1 78 1 7 1 218 1 303 1 
78 1 183 1 340 1 
78 1 218 1 3 1 232 1 303 1 
365 1 3 1 16 1 274 1 340 1 78 1 207 2 251 1 218 2 43 2 344 1 127 1 151 1 44 1 232 2 183 1 303 2 258 1 116 1 
74 1 333 1 89 1 235 1 
74 1 350 1 89 1 275 1 26 1 237 1 235 1 
42 1 68 1 237 1 
74 1 190 2 350 3 253 1 89 1 275 1 81 1 39 1 26 1 35 1 237 3 235 1 
54 1 74 1 350 2 89 1 275 1 26 1 59 1 237 2 235 1 
74 1 86 1 334 1 275 1 237 1 327 1 20 1 140 1 350 1 81 1 26 1 
74 1 350 1 275 1 81 1 26 1 237 1 235 1 
350 1 89 1 275 1 81 1 26 1 237 1 235 2 
74 1 275 2 325 1 237 2 66 1 350 2 23 1 81 1 26 2 235 1 
332 1 74 2 89 1 313 1 275 1 237 3 54 2 327 1 350 3 317 1 81 1 26 1 235 1 
54 1 20 1 140 1 125 1 56 1 315 1 350 2 86 2 275 1 81 1 26 1 237 1 
74 2 89 1 275 2 237 4 54 2 327 1 350 4 317 1 81 1 26 2 305 1 59 1 235 1 
74 1 350 1 89 1 275 1 81 1 26 1 237 1 235 1 
74 3 190 1 89 2 275 1 39 1 237 4 54 2 327 1 350 4 317 1 26 1 35 1 320 1 235 2 
137 1 74 1 89 1 275 1 237 2 54 1 350 2 329 1 81 1 26 1 235 1 106 1 
74 1 190 2 89 1 275 1 39 2 149 1 237 3 350 3 81 1 26 1 35 1 235 1 
0 1 74 2 223 1 180 2 
350 1 275 1 25 1 81 1 26 1 237 1 
54 1 74 1 332 1 350 2 89 1 275 1 81 1 26 1 237 2 235 1 
19 1 
74 1 350 1 89 1 275 1 81 1 26 1 237 1 235 1 
74 1 332 1 190 1 89 1 275 1 237 3 54 1 350 3 81 1 26 1 235 1 
327 1 74 1 317 1 320 1 
74 1 235 1 

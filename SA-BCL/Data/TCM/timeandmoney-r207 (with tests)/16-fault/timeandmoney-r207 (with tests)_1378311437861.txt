#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 372 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 106 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 277 188 78 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 203 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 27 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 275 96 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 367 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 353 (196,210) (196,210) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10911 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
137 1 357 4 278 1 210 1 321 1 301 1 340 1 211 2 142 2 14 1 215 2 103 1 104 2 47 2 369 6 272 1 195 1 196 1 350 1 26 1 82 1 198 9 313 1 242 3 111 2 353 4 202 1 250 2 115 9 
137 1 357 4 278 1 210 1 321 1 301 1 340 1 211 2 142 2 14 1 215 2 103 1 104 2 47 2 369 6 272 1 195 1 196 1 350 1 26 1 82 1 198 9 313 1 242 3 111 2 353 4 202 1 250 2 115 9 
137 1 357 4 278 1 210 1 321 1 301 1 340 1 211 2 142 2 14 1 215 2 103 1 104 2 47 2 369 6 272 1 195 1 196 1 350 1 26 1 82 1 198 9 313 1 242 3 111 2 353 4 202 1 250 2 115 9 
137 1 357 3 278 1 210 1 321 1 301 1 340 1 211 2 142 2 14 1 215 2 104 2 47 1 369 4 272 1 195 1 196 1 350 1 26 1 82 1 198 7 313 1 242 2 111 2 353 3 202 1 250 2 115 7 
357 2 137 1 210 1 301 1 211 1 215 1 103 1 104 1 47 2 369 3 350 1 196 1 82 1 198 4 242 1 111 1 353 2 250 1 115 4 
137 1 104 1 279 1 210 1 196 1 82 1 211 1 198 2 285 1 202 1 142 1 214 1 14 1 215 1 250 1 115 2 
137 1 357 1 210 1 369 1 196 1 82 1 211 2 198 3 313 1 242 1 353 1 142 1 250 2 115 3 
137 1 357 4 163 1 210 1 228 1 301 1 211 2 142 1 215 1 103 1 104 1 47 2 369 7 272 1 195 1 196 1 350 1 82 1 198 9 313 1 242 3 353 4 111 1 250 2 115 9 
137 1 357 4 163 1 210 1 228 1 301 1 211 2 142 1 215 1 103 1 104 1 47 2 369 7 272 1 195 1 196 1 350 1 82 1 198 9 313 1 242 3 353 4 111 1 250 2 115 9 
367 1 
12 2 56 1 166 1 
150 2 70 1 290 2 264 2 140 2 5 1 6 2 220 2 
116 1 359 1 209 1 254 1 33 2 140 2 5 1 6 3 187 1 97 2 364 1 70 1 284 1 231 1 341 1 39 1 232 2 264 3 342 1 72 2 41 1 150 2 270 1 125 1 194 1 368 1 290 2 348 1 220 2 177 1 130 2 158 1 53 1 247 1 159 1 249 1 57 1 
8 1 150 1 70 1 290 1 345 1 264 1 140 1 94 1 6 1 220 1 
117 1 34 1 361 1 140 1 94 1 6 2 8 2 70 1 264 2 216 1 327 1 328 1 288 1 150 1 290 2 345 1 220 1 128 1 332 1 54 1 56 1 
288 2 150 1 117 1 34 1 290 1 140 1 220 1 6 1 128 2 8 1 54 1 264 1 56 1 216 1 327 1 
128 1 179 1 200 1 288 1 255 1 
128 2 179 1 200 1 288 2 117 1 312 1 360 1 56 1 
128 1 179 1 288 1 
288 1 150 1 345 1 290 1 140 1 94 1 220 1 6 1 128 1 200 1 8 1 70 1 332 1 264 1 
56 1 
128 2 179 1 200 1 288 2 227 1 117 1 360 1 56 1 
298 1 117 2 360 1 257 1 140 1 165 1 94 1 63 1 6 1 67 2 98 1 99 1 8 1 70 1 264 1 366 1 310 1 267 2 236 2 20 1 288 5 150 1 105 4 45 2 290 1 345 1 330 2 176 2 220 1 178 1 128 5 131 1 179 2 200 2 332 1 113 1 135 5 56 2 
367 1 
150 1 290 2 140 1 5 2 6 2 220 1 201 1 191 1 264 2 
203 1 91 1 2 1 
8 1 319 1 296 1 5 1 
359 1 150 1 209 1 91 1 290 1 348 1 140 1 65 1 6 2 177 1 97 1 130 1 38 1 341 1 39 1 159 1 264 2 342 1 72 1 57 1 
150 3 38 1 290 3 264 3 140 3 5 1 220 1 6 3 
8 1 150 1 290 1 264 1 140 1 94 1 6 1 
8 1 150 1 201 1 290 1 191 1 264 1 140 1 6 1 220 1 
116 1 359 1 209 1 33 2 34 1 140 3 5 1 6 4 65 1 97 1 364 1 8 1 70 1 284 1 38 1 341 1 39 1 232 1 192 1 191 1 264 4 342 1 216 1 72 1 327 1 288 1 150 3 125 1 194 1 368 1 290 3 348 1 220 2 177 1 197 1 128 1 130 1 158 1 54 1 53 1 159 1 247 1 249 1 57 1 
328 1 150 1 290 2 140 1 62 1 5 1 6 2 8 1 38 1 296 1 264 2 
288 1 150 3 34 1 290 3 302 1 140 3 220 1 65 1 6 3 128 1 8 1 38 2 54 1 191 1 192 1 264 3 56 1 216 1 327 1 
203 1 150 2 91 1 290 2 140 2 220 1 6 2 38 1 191 1 264 2 
359 1 209 1 348 1 5 1 6 1 177 1 97 1 130 1 39 1 341 1 159 1 264 1 72 1 342 1 57 1 
359 1 5 1 6 1 177 1 97 1 130 1 244 1 39 1 341 1 159 1 264 1 72 1 342 1 145 1 57 1 
203 1 116 1 173 1 125 2 194 1 91 1 2 1 33 2 45 1 368 1 238 1 346 1 186 1 364 1 284 1 232 2 249 1 55 1 326 1 
8 1 150 1 184 1 34 1 290 1 264 1 140 1 6 1 
328 1 150 4 139 1 290 5 62 1 140 4 5 1 65 1 6 5 220 1 8 1 38 2 191 1 296 1 264 5 147 1 
8 1 150 2 184 1 290 2 264 2 140 2 94 1 6 2 
235 1 32 1 
235 1 32 1 
226 1 308 1 
226 1 308 1 
226 1 308 1 
235 1 11 1 32 1 
235 1 10 1 32 1 
235 2 226 1 241 1 365 1 308 1 32 2 
235 1 11 1 32 1 
235 1 11 1 32 1 
343 1 235 1 32 1 
343 1 235 1 32 1 
343 1 235 1 32 1 
235 2 43 2 288 2 60 2 46 1 126 1 3 3 92 2 81 2 95 1 128 2 241 1 212 1 141 1 83 1 316 2 56 1 32 2 148 1 
60 1 3 1 92 1 140 2 4 1 5 1 95 1 6 2 323 1 10 1 262 1 264 2 235 1 43 1 288 1 150 2 290 2 292 1 128 1 29 1 245 1 316 1 86 1 32 1 
104 1 111 1 215 1 
104 1 279 1 215 1 
363 1 104 3 111 2 279 1 136 1 15 1 
104 2 111 1 279 1 136 1 167 1 15 1 
104 2 111 1 279 1 136 2 15 1 
205 1 117 1 1 2 164 1 320 2 360 1 186 1 166 1 67 1 98 1 189 1 71 1 12 3 19 2 267 1 288 5 105 3 329 1 45 1 330 1 176 1 331 1 128 5 179 1 200 4 29 1 245 1 373 1 135 2 86 1 56 2 114 1 
298 1 336 1 206 1 58 1 117 1 1 6 164 1 255 5 360 1 186 3 166 3 66 1 67 2 98 1 189 3 71 2 261 5 12 9 16 1 19 6 267 2 268 1 288 9 105 8 45 3 330 3 176 2 331 3 128 9 179 6 200 7 29 4 135 6 56 5 114 2 
205 1 298 1 117 1 1 2 320 1 186 1 166 2 67 1 189 1 71 1 12 4 267 1 19 2 288 3 105 3 45 1 330 1 176 1 128 3 331 1 200 2 29 1 373 1 135 2 56 3 114 1 
298 1 205 1 206 1 117 1 1 4 320 2 186 2 166 3 66 1 67 1 189 2 71 1 12 7 16 1 19 4 267 1 288 4 105 5 45 2 330 2 176 1 128 4 331 2 200 3 29 2 373 1 135 4 56 4 114 1 
367 1 
259 1 341 1 
338 1 
341 1 39 1 
295 1 341 3 39 1 342 1 146 2 64 1 
341 1 39 1 342 1 
341 1 375 1 
20 1 125 3 45 1 254 4 185 1 238 2 257 1 330 1 165 1 281 1 362 1 109 1 36 2 333 1 232 7 326 3 224 1 
20 1 125 3 45 1 254 4 185 1 238 2 257 1 330 1 165 1 281 1 362 1 109 1 36 2 333 1 232 7 326 3 224 1 
20 1 76 1 125 3 45 1 254 4 185 1 238 2 257 1 330 1 165 1 281 1 362 1 109 1 36 2 333 1 232 7 326 3 224 1 
358 1 162 2 125 4 45 1 254 4 238 1 186 1 330 1 331 1 294 1 109 1 36 1 189 1 372 1 314 1 333 2 84 1 232 8 326 2 224 1 
364 1 36 1 109 1 284 1 194 1 106 1 33 2 254 1 368 1 333 1 232 1 280 1 
137 1 359 1 300 1 279 1 210 1 229 1 97 1 211 1 363 1 260 1 121 1 123 1 142 1 172 1 215 1 72 1 104 2 152 1 240 1 369 1 196 1 82 1 130 1 222 1 198 2 111 1 159 1 112 1 250 1 115 2 
137 1 359 1 300 1 279 1 210 1 229 1 97 1 211 1 363 1 260 1 121 1 123 1 142 1 172 1 215 1 72 1 311 1 104 2 152 1 175 1 369 2 196 1 129 1 130 1 198 3 111 1 159 1 112 1 250 1 115 3 
137 1 359 1 300 1 279 1 210 1 97 1 363 1 142 1 121 1 123 1 172 1 72 1 215 1 104 2 152 1 175 1 369 2 196 1 129 1 130 1 198 2 111 1 159 1 112 1 115 2 
102 1 160 1 311 1 359 1 152 2 155 1 177 1 97 1 211 1 198 1 130 1 282 1 182 1 341 1 39 1 142 2 123 2 121 2 159 1 286 1 72 1 250 1 115 1 
359 1 300 1 279 1 229 1 97 1 211 1 363 1 260 1 121 1 123 1 142 1 172 1 215 1 72 1 104 2 152 1 240 1 82 1 129 1 130 1 198 1 111 1 159 1 112 1 250 1 115 1 
73 1 
204 1 117 1 61 1 166 2 305 1 6 1 67 1 168 2 8 1 169 2 341 1 12 2 264 1 72 2 216 1 267 1 344 2 22 1 219 2 127 1 176 1 177 2 128 5 130 2 179 6 132 2 354 1 135 2 359 1 90 2 277 1 34 1 360 3 361 1 322 1 98 1 97 2 282 1 39 1 233 4 193 1 327 1 328 1 288 5 105 2 290 1 108 1 155 1 157 2 199 1 54 1 159 1 56 2 335 1 114 1 
204 1 227 1 34 1 361 1 360 1 61 1 322 1 6 1 8 1 264 1 233 2 216 1 327 1 328 1 288 3 22 1 219 1 290 1 108 1 128 3 179 2 54 1 
204 1 328 1 344 1 288 2 22 1 34 1 290 1 108 1 361 1 61 1 322 1 6 1 128 2 8 1 54 1 233 3 264 1 216 1 327 1 
204 1 227 1 34 1 360 1 361 1 61 1 322 1 6 1 8 1 169 1 264 1 233 3 216 1 327 1 328 1 288 3 344 1 22 1 219 1 290 1 108 1 128 3 179 2 54 1 
204 1 117 2 61 1 166 2 6 2 67 1 168 2 8 2 70 1 169 4 122 1 264 2 216 1 267 1 344 3 22 1 77 1 219 4 345 1 176 1 220 1 128 5 179 7 132 2 135 1 31 1 227 1 277 1 90 2 34 1 360 3 361 1 140 1 322 1 94 1 98 1 188 1 233 5 193 1 327 1 328 1 288 5 150 1 289 1 105 1 290 2 108 1 157 2 332 1 54 1 56 2 
204 1 117 1 61 1 166 2 6 1 67 1 168 2 8 1 169 2 12 2 264 1 216 1 267 1 344 2 22 1 219 2 176 1 128 4 179 4 132 2 135 1 277 1 90 2 34 1 361 1 360 2 322 1 98 1 193 1 233 4 327 1 328 1 288 4 105 1 290 1 108 1 157 2 54 1 56 2 335 1 
204 1 117 1 90 2 277 1 34 1 360 2 361 1 61 1 166 2 322 1 6 1 67 1 98 1 168 2 188 1 8 1 169 2 193 1 264 1 233 4 216 1 327 1 328 1 267 1 344 2 288 4 289 1 105 1 22 1 219 2 290 1 108 1 176 1 157 2 128 4 179 4 132 2 54 1 135 1 31 1 56 1 
204 1 117 1 90 2 277 1 34 1 360 2 361 1 61 1 166 2 322 1 6 1 67 1 98 1 168 2 188 1 8 1 169 2 193 1 264 1 233 4 216 1 327 1 328 1 267 1 344 2 288 4 289 1 105 1 22 1 219 2 290 1 108 1 176 1 157 2 128 4 179 4 132 2 54 1 135 1 31 1 56 1 
204 1 90 1 277 1 34 1 361 1 61 1 322 1 6 1 8 1 188 1 264 1 233 2 216 1 327 1 328 1 288 2 22 1 78 1 290 1 108 1 128 2 157 1 54 1 
204 1 117 1 61 1 166 2 6 2 67 1 168 2 8 2 70 1 169 3 264 2 216 1 267 1 344 3 77 1 22 1 219 3 345 1 176 1 220 1 128 4 179 5 132 2 135 1 31 1 277 1 90 2 34 1 361 1 360 2 140 1 322 1 94 1 98 1 188 1 233 5 193 1 327 1 328 1 288 4 150 1 289 1 105 1 290 2 108 1 157 2 332 1 54 1 56 1 
204 1 117 1 61 1 166 2 6 2 67 1 168 2 8 2 70 1 169 3 264 2 216 1 267 1 344 3 77 1 22 1 219 3 345 1 176 1 220 1 128 4 179 5 132 2 135 1 31 1 277 1 90 2 34 1 361 1 360 2 140 1 322 1 94 1 98 1 188 1 233 5 193 1 327 1 328 1 288 4 150 1 289 1 105 1 290 2 108 1 157 2 332 1 54 1 56 1 
253 2 204 1 207 1 117 1 90 2 277 1 34 1 360 2 361 1 61 1 322 1 6 1 67 1 98 1 8 1 169 2 12 2 264 1 233 4 40 2 216 1 327 1 267 1 328 1 344 2 288 4 22 1 219 2 290 1 108 1 176 1 157 2 128 4 179 4 54 1 135 1 56 1 335 1 
116 1 364 1 284 1 194 1 33 2 368 1 249 1 346 1 367 1 
116 1 203 3 162 4 33 4 2 12 91 12 254 10 5 1 187 1 364 2 284 2 189 3 232 15 326 2 237 1 75 1 125 5 194 2 368 2 330 3 331 3 294 1 158 1 52 1 315 1 314 2 84 3 249 2 297 1 224 2 
203 1 116 1 59 1 319 1 33 2 254 1 140 1 5 1 6 1 65 1 187 1 364 1 284 1 38 1 100 1 232 2 264 1 150 1 194 1 125 1 368 1 290 1 156 1 158 1 315 1 249 1 
116 1 33 2 140 1 303 1 6 1 65 1 97 1 364 1 284 1 38 1 232 2 264 1 72 1 150 1 194 1 125 2 153 1 368 1 290 1 177 1 27 1 130 1 158 1 315 1 249 1 252 1 
116 2 138 1 88 1 359 2 33 4 254 1 140 1 6 1 97 7 187 1 364 2 282 1 284 2 38 1 231 2 341 3 39 2 232 2 234 1 264 1 72 8 18 1 150 1 194 2 125 1 368 2 290 1 346 1 239 1 155 1 293 1 177 2 129 1 222 1 130 8 158 1 159 2 249 2 334 1 
203 1 116 1 91 1 2 1 33 2 254 1 186 1 140 1 6 1 325 1 364 1 284 1 189 1 191 1 232 3 264 1 326 1 150 1 194 1 125 2 45 1 368 1 290 1 238 1 330 1 220 1 331 1 315 1 249 1 
203 1 116 1 208 1 194 1 91 1 2 1 33 2 254 2 368 1 346 1 330 1 364 1 284 1 189 1 232 2 249 1 326 1 224 1 
203 1 116 1 173 1 194 1 125 2 91 1 2 1 33 2 45 1 368 1 238 1 346 1 186 1 364 1 284 1 232 2 249 1 326 1 
116 1 203 2 254 2 33 2 2 2 91 2 186 1 364 1 189 1 284 1 232 4 326 2 194 1 125 2 45 1 368 1 346 1 238 1 330 1 331 1 249 1 224 1 
203 1 116 1 208 1 194 1 91 1 2 1 33 2 254 2 368 1 239 1 330 1 364 1 284 1 189 1 232 2 249 1 326 1 224 1 
203 1 116 1 173 1 194 1 125 2 91 1 2 1 33 2 45 1 368 1 238 1 239 1 186 1 364 1 284 1 232 2 249 1 326 1 
203 1 116 1 194 1 91 1 2 1 33 2 254 2 368 1 239 1 330 1 331 1 364 1 284 1 189 1 232 2 249 1 326 1 224 1 
203 1 116 1 194 1 91 1 2 1 33 2 254 2 368 1 330 1 331 1 364 1 284 1 189 1 249 1 232 2 326 1 224 1 
116 1 359 1 209 1 254 1 33 2 5 1 6 1 187 1 97 1 364 1 284 1 39 1 341 1 232 2 264 1 342 1 72 1 194 1 125 1 368 1 348 1 177 1 130 1 158 1 159 1 247 1 249 1 57 1 
318 1 116 1 359 1 254 1 33 2 5 1 6 1 187 1 97 1 364 1 284 1 39 1 341 1 232 2 264 1 342 1 72 1 145 1 194 1 125 1 368 1 177 1 130 1 244 1 158 1 159 1 249 1 57 1 
203 1 116 1 194 1 91 1 2 1 33 2 254 2 368 1 330 1 331 1 364 1 284 1 189 1 315 1 232 2 249 1 326 1 224 1 
203 1 116 1 359 1 209 1 91 1 2 1 254 2 33 2 6 1 97 1 364 1 189 1 284 1 213 1 39 1 341 1 232 2 264 1 326 1 342 1 72 1 194 1 368 1 330 1 348 1 331 1 130 1 222 1 159 1 247 1 249 1 224 1 57 1 
116 1 203 1 33 2 254 2 2 1 91 1 140 1 6 1 364 1 284 1 189 1 191 1 232 2 264 1 326 1 150 1 194 1 368 1 174 1 290 1 330 1 220 1 331 1 315 1 249 1 224 1 
162 2 0 1 118 1 33 4 254 9 280 1 186 3 307 1 364 2 9 1 284 2 189 3 232 19 326 6 194 2 125 10 79 2 45 3 368 2 238 3 347 1 330 3 331 3 294 1 243 1 314 1 248 1 84 1 317 2 224 3 
162 2 0 1 33 6 254 14 280 1 186 2 307 2 364 3 284 3 189 3 171 1 232 26 326 4 17 1 125 12 194 3 79 1 45 2 368 3 291 1 238 2 347 1 330 3 28 1 331 3 294 2 243 2 248 1 84 2 134 1 374 2 274 1 317 4 224 2 
162 4 0 1 118 1 254 20 257 1 165 1 307 2 171 1 17 1 20 1 125 21 79 1 347 1 28 1 314 1 84 3 134 1 274 1 317 4 224 4 33 6 185 1 186 4 280 1 281 1 230 1 364 3 36 1 189 4 284 3 232 41 326 8 194 3 45 5 368 3 291 1 238 4 330 5 331 4 294 3 243 1 248 1 374 1 
162 4 0 1 118 1 33 8 254 20 185 1 257 1 280 1 186 3 165 1 281 1 230 1 307 2 36 1 364 4 284 4 189 4 171 1 232 38 326 7 17 1 20 1 194 4 125 18 79 1 45 4 368 4 291 1 238 4 347 1 330 5 28 1 331 4 294 3 243 1 314 1 248 1 84 3 134 1 374 2 274 1 317 4 224 3 
162 4 0 1 33 4 254 27 185 1 257 1 280 1 186 7 165 1 281 1 307 1 36 1 364 2 284 2 189 7 171 1 232 52 326 14 17 1 20 1 75 2 194 2 125 25 79 1 45 8 368 2 291 1 238 7 347 1 330 8 28 1 331 7 294 2 243 1 314 2 248 1 84 4 134 1 374 1 274 1 317 4 224 7 
235 1 241 1 141 1 43 1 352 1 60 1 46 1 316 1 92 1 32 1 
10 1 262 1 
235 1 181 1 43 1 371 1 60 1 316 1 92 1 32 1 370 1 
235 1 288 1 43 1 60 1 46 1 126 1 3 2 92 1 81 1 95 1 128 1 241 1 212 1 141 1 316 1 56 1 32 1 148 1 
235 1 288 1 43 1 60 1 46 1 126 1 3 2 92 1 81 1 95 1 128 1 241 1 212 1 141 1 316 1 56 1 32 1 148 1 
235 1 288 1 43 1 60 1 46 1 126 1 3 2 92 1 81 1 95 1 128 1 241 1 212 1 141 1 316 1 56 1 32 1 148 1 
299 1 365 1 11 1 
299 1 365 1 11 1 
343 1 151 1 
343 1 151 1 365 1 
292 1 4 1 
60 1 3 1 92 1 4 1 140 2 5 1 6 2 323 1 10 1 262 1 264 2 235 1 288 1 43 1 150 2 126 1 290 2 292 1 81 1 128 1 200 1 29 1 245 1 316 1 86 1 32 1 251 1 
299 1 11 1 
343 1 151 1 365 1 
116 1 138 1 88 1 359 1 33 2 254 1 304 1 6 2 258 1 187 1 97 2 364 1 284 1 231 2 341 1 39 1 232 2 143 1 264 2 309 1 72 2 269 1 194 1 125 1 368 1 290 2 130 2 158 1 315 1 159 1 249 1 
359 1 104 2 152 1 279 1 273 1 129 1 97 2 130 2 222 1 363 1 260 1 111 1 159 1 112 1 85 1 172 1 215 1 72 2 287 1 
337 1 359 1 104 2 152 1 279 1 273 1 129 1 97 1 130 1 363 1 260 1 111 1 159 1 112 1 172 1 215 1 72 1 
359 1 152 1 155 1 177 1 97 1 120 1 130 1 282 1 182 1 341 1 39 1 159 1 72 1 287 1 
359 1 104 2 152 1 279 1 273 1 129 1 97 1 130 1 363 1 260 1 111 1 159 1 112 1 85 1 172 1 215 1 72 1 287 1 
266 1 
367 1 
117 1 360 1 166 1 67 1 98 1 168 1 12 1 193 1 267 1 288 1 105 1 176 1 128 1 179 1 132 1 135 1 56 2 
117 2 1 6 256 1 166 6 63 1 64 1 306 1 67 4 259 3 341 10 170 2 12 12 342 3 72 3 267 4 19 6 349 2 176 4 177 1 178 1 27 2 351 1 128 5 222 1 130 3 131 2 179 5 354 1 135 8 355 1 87 2 89 1 359 4 360 3 186 2 98 4 97 3 189 2 39 3 146 2 327 2 236 2 288 5 105 9 44 2 45 2 330 2 50 2 331 2 110 2 159 3 56 8 375 2 114 2 
162 1 117 2 1 5 360 1 186 2 166 3 67 2 98 2 189 2 171 1 12 6 17 1 19 5 267 2 236 2 288 1 124 1 105 8 45 2 291 1 330 2 176 2 25 1 28 1 128 1 331 2 131 1 294 1 179 1 354 1 84 1 135 5 274 1 56 5 114 1 
257 1 165 1 140 1 94 1 6 1 67 1 98 1 8 1 70 1 264 1 366 1 267 1 236 2 20 1 288 1 150 1 105 2 45 1 345 1 290 1 330 2 176 1 220 1 128 1 131 1 332 1 135 2 31 1 
267 1 117 1 105 1 63 1 176 1 67 1 178 1 98 1 135 1 56 1 
19 5 236 2 1 5 105 5 45 2 186 2 330 2 166 5 27 1 331 2 131 1 189 2 135 5 12 10 56 5 
128 1 179 1 288 1 117 1 360 1 56 1 
298 1 161 1 89 2 359 1 360 2 256 1 305 1 67 2 98 1 97 4 282 1 341 1 39 1 13 1 72 4 267 2 288 3 105 2 127 1 155 1 176 2 177 2 128 3 130 4 179 4 354 2 159 1 135 2 114 2 
116 1 359 1 209 1 33 2 140 2 5 1 6 3 97 1 364 1 70 1 284 1 39 1 341 1 232 1 264 3 72 1 342 1 150 2 125 1 194 1 368 1 290 2 348 1 177 1 220 2 130 1 158 1 53 1 247 1 159 1 249 1 57 1 
19 2 267 1 117 2 1 2 105 1 166 2 176 1 67 1 98 1 36 1 354 1 12 4 135 2 56 4 114 1 
21 1 316 1 92 1 
141 1 292 1 316 1 92 1 356 1 
21 1 316 1 92 1 
21 1 316 1 92 1 
154 1 316 1 92 1 
154 1 316 1 92 1 
154 1 316 1 92 1 
316 1 92 1 
235 1 32 1 
20 1 125 4 194 2 45 1 254 4 33 4 368 2 185 1 238 2 257 1 330 1 165 1 281 1 36 1 364 2 284 2 232 8 374 1 326 3 224 1 
367 1 
125 2 194 1 45 1 33 2 254 2 368 1 238 1 186 1 330 1 331 1 364 1 284 1 189 1 246 1 232 4 326 2 224 1 
162 2 125 4 45 1 254 3 238 1 186 1 330 1 331 1 294 1 189 1 314 1 84 1 232 7 326 2 224 1 
162 2 254 11 33 4 185 1 257 2 186 2 165 1 281 1 36 1 364 2 189 2 284 2 232 23 326 9 20 2 237 1 75 1 125 12 194 2 45 3 368 2 238 5 330 3 331 2 314 1 84 2 374 2 224 4 183 1 
162 1 125 1 232 1 
254 1 84 1 232 1 
194 1 125 3 33 2 254 3 45 1 368 1 238 2 186 1 330 1 27 1 331 1 364 1 284 1 189 1 246 1 232 6 326 3 224 1 
162 1 33 2 254 6 280 1 186 2 364 1 284 1 189 2 171 1 232 12 326 2 17 1 125 6 194 1 45 2 368 1 291 1 238 1 330 2 331 2 28 1 294 1 84 1 274 1 224 1 
20 1 125 3 254 3 45 1 238 1 257 1 165 1 330 1 232 6 326 2 224 1 
20 1 125 2 194 1 254 1 33 2 185 1 368 1 238 1 257 1 281 1 364 1 284 1 232 3 374 1 326 2 224 1 183 1 
20 2 194 1 125 5 33 2 254 5 45 2 368 1 238 3 280 1 257 2 165 1 330 2 364 1 284 1 232 10 366 1 326 5 224 2 
194 1 33 2 254 2 368 1 280 1 330 1 364 1 284 1 189 1 232 2 326 1 224 1 
125 2 194 1 45 1 33 2 254 2 368 1 238 1 186 1 280 1 330 1 331 1 364 1 284 1 189 1 232 4 326 2 224 1 
20 1 118 1 125 2 194 3 33 6 254 1 368 3 238 1 280 1 257 1 364 3 284 3 232 3 374 1 326 2 224 1 183 1 
358 1 162 1 118 1 33 6 254 6 185 1 280 1 257 1 165 1 281 1 364 3 284 3 232 12 366 1 326 4 20 1 125 6 194 3 45 2 368 3 238 2 330 2 294 1 246 1 84 1 224 2 
162 1 33 2 254 4 185 1 280 1 257 1 165 1 281 1 36 1 364 1 284 1 232 8 326 2 20 1 125 4 194 1 45 1 368 1 291 1 238 2 330 1 294 1 84 1 
162 2 33 4 254 6 185 1 257 1 280 1 165 1 281 1 36 1 364 2 284 2 189 1 232 11 326 3 20 1 125 5 194 2 45 1 368 2 291 1 238 2 330 2 331 1 294 1 246 1 314 1 84 1 224 1 
162 1 33 6 254 9 185 1 257 1 280 1 186 2 165 1 281 1 36 1 364 3 284 3 189 2 171 1 232 19 326 4 17 1 20 1 125 10 194 3 45 3 368 3 291 1 238 3 330 3 331 2 28 1 294 1 246 1 84 1 374 1 274 1 224 1 
162 1 33 6 254 10 185 1 257 1 280 1 186 1 165 1 281 1 36 1 364 3 284 3 189 2 171 1 232 17 326 5 17 1 20 1 125 7 194 3 45 2 368 3 291 1 238 3 330 3 331 2 28 1 294 1 246 1 84 1 374 1 274 1 224 2 
162 1 33 2 254 4 185 1 280 1 257 1 165 1 281 1 36 1 364 1 284 1 232 8 326 2 20 1 125 4 194 1 45 1 368 1 291 1 238 2 330 1 294 1 84 1 
162 1 33 2 254 6 280 1 186 2 364 1 284 1 189 2 171 1 232 12 326 2 17 1 125 6 194 1 45 2 368 1 291 1 238 1 330 2 331 2 28 1 294 1 84 1 274 1 224 1 
162 1 33 8 254 10 185 1 257 1 280 1 186 1 165 1 281 1 36 1 364 4 284 4 189 2 171 1 232 18 326 5 17 1 20 1 125 8 194 4 45 2 368 4 291 1 238 3 330 3 28 1 331 2 294 1 246 1 84 1 374 2 274 1 224 2 
162 1 118 1 33 8 254 9 280 1 186 2 364 4 284 4 189 3 171 1 232 16 326 6 17 1 125 7 194 4 45 2 368 4 291 1 238 3 330 3 28 1 331 3 294 1 84 1 374 2 274 1 224 3 
20 3 125 4 45 1 254 3 185 2 238 3 257 3 165 1 330 1 281 1 232 7 326 6 224 3 
162 1 118 1 33 8 254 10 185 1 257 1 280 1 186 1 165 1 281 1 36 1 364 4 284 4 189 2 171 1 232 18 326 4 17 1 20 1 125 8 194 4 45 2 368 4 291 1 238 3 330 3 28 1 331 2 294 1 84 1 374 2 274 1 224 1 
328 1 23 1 290 1 62 1 5 1 6 1 8 1 264 1 296 1 
42 1 328 1 218 1 23 1 24 1 290 1 62 1 5 1 6 1 8 1 283 1 190 1 296 1 264 1 
97 1 130 1 367 1 72 1 177 1 
359 1 150 1 290 1 140 1 348 1 5 1 6 2 177 1 97 1 130 1 38 1 341 1 39 1 159 1 264 2 342 1 72 1 57 1 
359 1 150 2 89 1 34 1 290 2 349 1 140 1 348 1 5 1 6 2 97 1 130 1 8 1 54 1 38 1 341 3 39 2 159 1 264 2 342 2 72 1 375 1 57 1 
89 1 359 1 34 1 140 1 5 1 6 2 97 2 8 1 38 1 39 2 341 3 101 1 264 2 72 2 342 2 145 1 150 2 290 2 349 1 130 2 54 1 159 1 375 1 57 1 
288 2 359 1 89 1 117 1 339 1 349 1 177 1 128 2 97 3 130 3 179 1 259 1 39 1 341 4 159 1 101 1 56 1 342 1 72 3 375 1 327 1 225 1 146 1 
288 2 359 1 89 1 117 1 349 1 177 1 128 2 97 3 130 3 179 1 259 1 39 1 341 4 170 1 159 1 101 1 56 1 342 1 72 3 375 1 327 1 146 1 
97 1 130 1 359 1 159 1 234 1 72 1 
18 1 138 1 359 3 271 1 48 1 293 1 177 2 64 1 129 1 97 6 222 1 130 7 180 1 231 1 39 2 341 3 159 2 234 1 334 1 72 7 342 1 
116 1 254 4 33 2 185 1 257 1 165 1 140 1 5 1 281 1 6 1 97 1 8 1 364 1 284 1 38 1 232 8 366 1 143 1 264 1 326 3 72 1 20 1 150 1 125 4 194 1 45 2 368 1 290 1 238 2 330 2 222 1 130 1 315 1 249 1 296 1 224 1 252 1 
87 1 117 1 360 1 256 1 63 1 67 2 97 1 98 2 259 1 341 2 170 1 72 1 146 1 327 1 267 2 288 3 105 1 44 1 176 2 177 1 178 1 128 3 130 1 200 1 179 2 110 1 135 1 56 1 
359 2 64 1 97 2 351 1 222 1 130 2 39 1 341 2 159 1 234 1 72 2 342 1 146 1 
359 1 155 1 93 1 177 1 97 4 130 4 222 1 282 1 39 1 341 1 159 1 101 1 72 4 
89 1 359 2 48 1 119 1 97 2 68 1 130 2 180 1 39 1 341 1 159 1 263 1 72 2 342 1 
97 1 130 1 359 1 104 1 279 1 159 1 172 1 215 1 72 1 177 1 
138 1 359 1 97 2 129 1 222 1 130 2 39 1 341 1 159 1 309 1 72 2 
18 1 138 1 89 1 359 2 155 1 93 1 177 1 293 1 97 4 130 5 222 1 282 1 39 2 341 3 159 2 72 5 
138 1 89 1 359 2 155 1 93 1 177 1 293 1 97 4 130 5 222 1 221 1 282 1 39 2 341 3 159 2 72 5 
359 1 150 1 290 1 140 1 5 1 6 2 177 1 97 1 130 1 38 1 341 1 39 1 159 1 264 2 342 1 72 1 57 1 145 1 
89 1 359 2 271 1 48 1 64 1 97 1 130 1 180 1 39 1 341 1 159 1 72 1 342 1 
275 1 276 1 258 1 7 1 
223 1 96 1 7 1 
275 1 276 1 258 1 7 2 
128 1 149 1 275 1 200 1 288 1 276 1 223 1 258 1 96 1 7 2 
367 1 
137 1 198 1 211 1 210 1 250 1 196 1 115 1 
142 1 121 1 115 1 
137 1 217 1 210 1 196 1 82 1 211 1 198 2 30 1 202 1 250 1 115 2 
137 1 210 1 47 1 369 1 196 1 211 1 198 2 250 1 115 2 
357 1 198 1 211 1 104 1 111 1 353 1 301 1 215 1 250 1 115 1 82 1 
198 1 211 1 210 1 250 1 115 1 82 1 
198 1 211 1 353 1 210 1 250 1 196 1 115 1 82 1 
210 1 49 1 82 1 51 1 211 2 198 2 265 1 250 2 115 2 
137 1 357 1 210 1 272 1 369 2 195 1 196 1 82 1 211 1 198 3 242 1 353 1 250 1 115 3 
137 1 104 2 279 1 210 1 369 1 196 1 82 1 211 1 198 2 363 1 111 1 215 1 250 1 74 1 115 2 
137 1 357 1 103 1 210 1 47 1 369 2 196 1 82 1 211 1 198 3 242 1 353 1 250 1 115 3 
137 1 198 1 211 1 210 1 250 1 196 1 115 1 82 1 
137 2 357 1 210 1 369 2 196 1 198 3 211 1 242 1 353 1 250 1 115 3 
137 1 210 1 228 1 369 1 80 1 196 1 82 1 35 1 211 1 198 2 250 1 115 2 
137 1 217 1 107 1 210 1 196 1 82 1 211 1 198 2 202 1 250 1 115 2 
133 1 37 2 353 2 144 1 
69 1 198 1 211 1 250 1 115 1 82 1 
137 1 210 1 272 1 369 1 196 1 82 1 211 1 198 2 250 1 115 2 
324 1 
137 1 198 1 211 1 210 1 250 1 196 1 115 1 82 1 
137 1 198 2 211 1 202 1 210 1 250 1 196 1 115 2 82 1 
137 1 357 1 242 1 353 1 
210 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (221,273) (7,287) (7,287) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (221,273) (7,287) (7,287) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (221,273) (7,287) (7,287) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (221,273) (7,287) (7,287) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (221,273) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (221,273) 28 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (221,273) 28 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (260,299) 258 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (6,11) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (110,138,205) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (6,11) (6,11) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (271,276) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (271,276) 0 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (271,276) 0 158 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 129 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 129 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (110,138,205) (110,138,205) 115 39 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 163 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 155 284 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (260,299) (260,299) (73,135) 15 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 209 113 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 209 215 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 209 113 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 209 215 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 209 113 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 209 113 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (260,299) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 72 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 209 113 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (260,299) (260,299) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 209 113 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 209 113 207 121 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 199 286 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (260,299) 258 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 253 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 253 188 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 3 (167,243) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 3 (167,243) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 3 (185,279) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 3 (185,279) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 21
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
36 1 269 1 7 1 287 1 106 1 166 1 273 1 254 1 239 1 221 1 67 2 196 1 307 1 180 1 308 1 34 2 
36 1 269 1 7 1 287 1 106 1 166 1 273 1 254 1 239 1 221 1 67 2 196 1 307 1 180 1 308 1 34 2 
36 1 269 1 7 1 287 1 106 1 166 1 273 1 254 1 239 1 221 1 67 2 196 1 307 1 180 1 308 1 34 2 
36 1 269 1 7 1 287 1 106 1 166 1 273 1 254 1 239 1 221 1 67 2 196 1 307 1 180 1 308 1 34 2 
208 1 235 2 272 1 106 1 254 1 239 1 170 2 27 2 67 4 196 1 198 1 178 1 180 1 308 1 34 4 77 3 
4 1 210 1 269 1 106 1 166 1 254 1 239 1 27 1 67 2 300 1 262 1 18 1 307 1 180 1 308 1 34 2 
67 1 106 1 273 1 34 1 308 1 254 1 
28 1 67 2 127 1 106 1 273 1 77 1 34 2 308 1 254 1 
28 1 67 2 127 1 106 1 273 1 77 1 34 2 308 1 254 1 
124 1 163 1 120 1 
124 1 109 2 136 1 
256 2 182 2 58 1 31 2 309 2 43 2 63 2 
230 1 234 2 58 1 182 1 81 1 289 1 63 1 43 1 87 1 256 1 45 2 260 1 258 1 31 1 303 2 309 1 
256 1 182 1 58 1 6 1 31 1 309 1 43 1 63 1 
145 1 205 1 110 1 31 1 309 1 43 1 
205 1 256 1 182 1 31 1 309 1 43 1 63 1 
220 1 29 1 138 1 236 1 282 1 
124 1 220 2 29 1 138 2 216 1 52 1 120 1 282 1 
220 1 138 1 282 1 
220 1 256 1 29 1 182 1 58 1 6 1 138 1 31 1 11 1 309 1 43 1 63 1 
124 1 
124 1 220 2 29 1 138 2 280 1 216 1 120 1 282 1 
124 1 250 1 165 1 213 1 216 1 120 1 24 2 150 2 220 5 29 2 69 2 138 5 70 1 30 1 96 1 141 1 55 1 75 1 282 2 
163 1 
256 1 285 1 182 1 31 2 98 1 63 1 309 2 43 2 
256 3 118 1 182 1 31 3 309 3 43 3 63 3 
256 1 31 1 309 1 43 1 63 1 
256 1 285 1 182 1 31 1 98 1 309 1 43 1 63 1 
256 2 118 1 182 1 31 2 301 1 98 1 309 2 43 2 63 2 
145 1 256 1 118 1 101 1 31 2 309 2 43 2 63 1 
256 1 118 1 31 1 301 1 309 1 43 1 63 1 
256 1 182 1 31 1 98 1 309 1 43 1 63 1 
45 1 234 1 81 1 303 1 
45 1 234 1 81 1 303 1 
47 1 222 2 183 1 128 1 149 1 263 1 274 1 85 1 
256 1 31 1 309 1 43 1 63 1 218 1 
256 1 45 1 118 1 234 1 81 1 31 1 301 1 303 1 309 1 43 1 63 1 
145 1 118 2 182 1 101 1 63 4 43 5 255 1 108 1 256 4 31 5 301 1 98 1 309 5 
256 1 31 1 309 1 43 1 63 1 
276 1 107 1 
276 1 107 1 
66 1 271 1 
66 1 271 1 
66 1 271 1 
276 1 107 1 
276 1 107 1 
276 1 107 1 
276 1 107 1 
276 1 107 1 
276 1 107 1 
276 1 107 1 
276 1 107 1 
0 1 276 1 147 1 107 1 
0 1 220 1 276 1 147 1 138 1 107 1 158 1 
239 1 196 1 180 1 
239 1 4 1 180 1 
1 1 4 1 196 2 23 1 49 1 180 3 
1 1 4 1 196 1 23 1 9 1 180 2 
1 2 4 1 196 1 23 1 180 2 
124 1 129 1 216 1 120 1 62 1 168 1 132 1 220 4 29 3 138 4 93 1 282 1 
124 1 249 1 126 1 236 1 129 1 216 1 120 1 132 1 220 4 193 1 29 3 138 4 282 2 
144 1 38 1 120 1 150 1 153 1 245 1 278 1 93 1 124 2 209 1 129 1 165 3 213 1 24 1 62 1 168 1 220 3 295 1 109 2 29 2 69 1 68 1 136 1 138 3 30 1 113 1 
144 1 38 2 120 1 240 1 150 1 153 2 245 2 278 2 93 2 124 2 209 2 129 1 165 5 213 2 24 1 62 1 168 1 220 4 295 2 109 3 69 1 29 3 68 2 136 1 138 4 30 1 179 1 113 2 142 1 
163 1 37 1 140 1 
140 1 187 1 
290 1 
140 1 143 1 
37 2 137 1 223 1 140 3 302 1 143 1 
137 1 140 1 143 1 
156 1 140 1 
56 1 160 1 40 1 214 4 169 2 238 2 242 1 14 1 68 1 197 1 277 1 174 1 199 1 92 1 51 3 74 1 
56 1 160 1 40 1 214 4 238 2 169 3 242 1 14 1 68 1 197 1 277 1 174 2 199 1 92 1 51 3 74 1 
56 1 160 1 40 1 214 4 169 2 238 2 242 1 14 1 68 1 197 1 277 1 174 1 199 1 92 1 51 3 16 1 74 1 
233 1 183 1 38 2 40 2 238 3 85 1 274 1 242 4 14 3 195 1 277 1 197 3 199 2 92 1 51 8 99 1 56 2 160 11 209 2 286 1 128 1 105 3 214 12 169 26 295 3 297 1 222 2 68 5 174 15 71 1 176 1 74 1 114 3 113 2 
56 1 160 2 22 1 183 2 128 2 40 1 214 5 86 1 238 2 169 5 85 2 274 2 242 1 297 1 14 1 222 4 68 1 197 1 277 1 174 3 199 1 92 1 51 4 
4 1 234 1 82 1 239 1 13 1 241 1 154 1 45 1 194 1 122 1 196 1 48 1 49 1 210 1 106 1 166 1 254 1 27 1 257 1 67 2 300 1 303 1 225 1 227 1 306 1 305 1 180 2 77 1 34 2 308 1 
4 1 234 1 82 1 239 1 241 1 45 1 194 1 122 1 196 1 48 1 49 1 283 1 210 1 211 1 166 1 254 1 27 1 257 1 67 3 300 1 303 1 225 1 264 1 227 1 306 1 305 1 180 2 34 3 308 1 77 2 
4 1 234 1 239 1 241 1 45 1 122 1 48 1 196 1 49 1 283 1 210 1 211 1 166 1 27 1 257 1 67 2 300 1 303 1 225 1 227 1 306 1 305 1 180 2 34 2 77 2 
234 1 81 1 12 1 45 1 157 1 54 1 17 1 166 2 254 1 291 1 257 2 67 1 112 1 140 1 303 1 225 1 264 1 305 1 306 2 227 2 34 1 308 1 143 1 
4 1 234 1 82 1 239 1 241 1 154 1 45 1 194 1 122 1 196 1 48 1 49 1 283 1 106 1 166 1 254 1 257 1 67 1 303 1 225 1 227 1 306 1 305 1 180 2 34 1 308 1 
226 1 
145 1 144 1 234 2 81 2 39 1 43 1 150 1 89 1 45 2 90 1 53 1 17 1 282 2 205 1 165 1 213 1 216 1 24 1 291 1 220 2 65 1 110 1 69 1 138 2 31 1 140 1 225 1 303 2 115 1 141 1 305 1 309 1 229 1 143 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 39 1 216 1 43 1 220 2 89 1 110 1 138 2 31 1 280 1 115 1 282 1 309 1 229 1 
145 1 205 1 39 1 24 1 43 1 150 1 220 1 89 1 69 1 110 1 138 1 31 1 141 1 115 1 309 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 220 1 89 1 110 1 138 1 31 1 39 1 115 1 309 1 43 1 229 1 
145 1 205 1 39 1 24 1 43 1 150 1 220 1 89 1 69 1 110 1 138 1 31 1 141 1 115 1 309 1 229 1 
160 1 183 1 163 1 128 1 214 2 149 1 238 1 169 3 85 1 274 1 295 1 47 1 14 1 222 2 68 1 277 1 197 1 174 2 199 1 92 1 51 2 263 1 
35 1 160 1 284 1 183 1 128 1 105 1 169 2 85 1 274 1 47 1 155 1 222 2 174 1 263 1 114 1 
35 1 160 1 118 1 162 1 183 1 59 1 128 1 169 2 63 1 43 1 85 1 274 1 25 1 256 1 47 1 222 2 174 1 31 1 301 1 202 1 263 1 309 1 
35 1 118 1 234 1 183 1 81 1 274 1 85 1 43 1 47 1 45 1 15 1 59 1 128 1 169 1 63 1 256 1 135 1 222 2 260 1 299 1 174 1 31 1 301 1 303 1 263 1 309 1 
160 1 234 1 162 1 183 1 268 1 81 1 128 1 84 1 169 1 85 1 274 1 47 1 45 1 222 2 303 1 263 1 
35 1 160 2 209 1 183 1 182 1 128 1 169 2 43 1 63 1 85 1 274 1 256 1 47 1 222 2 68 1 31 1 263 1 304 1 113 1 98 1 309 1 
160 2 209 1 183 1 128 1 149 1 215 1 169 2 85 1 274 1 47 1 222 2 68 1 263 1 
80 1 183 1 38 1 128 1 149 1 169 1 85 1 274 1 295 1 47 1 222 2 174 1 263 1 
160 2 209 1 183 1 128 1 149 1 169 2 85 1 274 1 47 1 222 2 68 1 263 1 113 1 
160 2 209 1 183 1 268 1 128 1 215 1 169 2 85 1 274 1 47 1 222 2 68 1 263 1 
80 1 183 1 268 1 38 1 128 1 169 1 85 1 274 1 295 1 47 1 222 2 174 1 263 1 
160 2 209 1 183 1 268 1 128 1 169 2 85 1 274 1 47 1 222 2 68 1 263 1 113 1 
160 2 209 1 47 1 222 2 68 1 183 1 128 1 263 1 113 1 169 2 274 1 85 1 
45 1 260 1 234 1 81 1 303 1 
45 1 234 1 81 1 303 1 72 1 
35 1 160 2 209 1 183 1 128 1 169 2 85 1 274 1 47 1 222 2 68 1 263 1 113 1 
13 1 45 1 260 1 234 1 299 1 303 1 
35 1 160 2 209 1 183 1 182 1 128 1 169 2 43 1 63 1 85 1 274 1 171 1 256 1 47 1 222 2 68 1 31 1 263 1 113 1 98 1 309 1 
183 2 38 2 119 1 274 2 85 2 151 1 91 1 195 1 244 1 51 2 22 1 160 4 209 2 161 1 103 1 128 2 105 1 214 2 61 1 169 11 219 1 295 2 222 4 68 2 174 7 261 1 114 2 113 2 
232 1 183 2 184 1 38 3 274 2 85 2 151 1 121 1 91 4 195 2 51 1 203 1 22 1 160 10 207 1 209 3 161 1 103 1 128 2 214 1 105 2 61 2 169 24 26 1 64 1 295 3 297 1 222 4 68 3 174 14 261 2 114 2 113 3 
183 2 38 2 274 2 85 2 151 1 91 2 195 1 244 1 51 1 203 1 22 1 160 5 209 2 161 1 103 1 128 2 105 1 214 1 61 1 169 13 219 1 295 2 222 4 68 2 174 8 261 1 114 2 113 2 
183 2 38 2 274 2 85 2 151 1 91 2 195 1 244 1 51 1 203 1 22 1 160 5 209 2 161 1 103 1 128 2 105 1 214 1 61 1 169 13 219 1 295 2 222 4 68 2 174 8 261 1 114 2 113 2 
232 1 183 1 184 1 38 7 238 1 274 1 85 1 121 1 151 1 275 2 14 1 91 3 195 2 197 1 277 1 199 1 92 1 51 7 203 1 207 1 22 1 160 16 209 7 161 1 103 1 128 1 105 4 214 7 61 1 169 39 26 1 64 1 219 2 295 7 222 2 68 8 174 23 261 1 114 4 113 7 
212 1 31 2 266 1 309 2 43 2 228 1 
283 1 4 1 5 1 234 2 251 1 82 1 239 1 13 1 241 1 44 1 45 2 196 1 48 1 49 1 225 1 303 2 180 2 305 1 227 1 
283 1 4 1 206 1 234 1 82 1 239 1 241 1 44 1 45 1 196 1 48 1 49 1 303 1 225 1 180 2 227 1 305 1 
78 1 234 1 251 1 81 1 291 1 45 1 157 1 140 1 225 1 303 1 17 1 305 1 227 1 143 1 
283 1 4 1 5 1 234 1 251 1 82 1 239 1 241 1 44 1 45 1 196 1 48 1 49 1 303 1 225 1 180 2 305 1 227 1 
8 1 
124 1 163 1 70 1 165 1 213 1 120 1 96 1 
237 1 120 1 150 1 152 1 50 1 282 1 124 2 213 1 165 1 216 1 24 1 220 1 109 1 69 1 136 1 138 1 141 1 
144 1 234 1 37 1 81 1 41 1 187 2 150 2 243 1 45 1 282 2 20 1 125 1 165 1 216 1 24 2 220 2 69 2 172 1 138 2 137 1 223 1 32 1 139 1 140 4 303 1 225 1 73 1 141 2 305 2 143 1 
124 2 207 1 209 1 213 3 165 2 105 1 24 1 64 1 150 1 121 1 153 3 109 4 195 1 68 1 69 1 245 3 136 2 113 1 141 1 114 1 
286 1 165 2 213 2 24 1 150 1 220 1 295 1 46 1 14 1 68 1 69 1 197 1 138 1 199 1 141 1 76 1 
124 1 213 1 165 1 24 1 120 1 150 1 69 1 70 1 96 1 141 1 
124 1 209 1 38 1 213 1 165 2 153 1 295 1 46 1 109 2 68 1 245 1 136 1 113 1 
124 1 220 1 138 1 216 1 120 1 282 1 
144 1 79 1 234 3 81 2 10 1 150 2 45 3 90 1 246 1 53 1 17 1 282 2 57 1 102 1 165 1 213 1 216 1 130 1 24 2 291 1 220 2 296 1 65 1 69 2 137 1 138 2 30 1 140 2 225 2 303 3 141 1 305 3 143 2 
234 1 58 1 182 1 81 1 63 1 43 1 256 1 45 1 260 1 258 1 31 1 303 1 309 1 
144 1 120 1 238 1 150 1 153 2 46 1 90 1 245 2 124 3 165 2 213 1 24 1 109 4 69 1 136 2 141 1 
94 1 148 1 191 1 
175 1 83 1 94 1 201 1 191 1 
94 1 148 1 191 1 
94 1 148 1 191 1 
252 1 94 1 191 1 
252 1 94 1 191 1 
252 1 94 1 191 1 
94 1 191 1 
276 1 107 1 
160 2 183 2 128 2 214 3 238 1 169 4 85 2 274 2 242 1 297 1 222 4 14 1 68 1 277 1 197 1 174 2 199 1 92 1 51 2 
160 1 14 1 68 1 197 1 277 1 163 1 174 1 199 1 92 1 214 2 51 2 238 1 169 2 
160 1 209 1 183 1 38 1 128 1 214 1 217 1 85 1 274 1 169 3 295 1 222 2 68 1 174 2 51 1 113 1 
160 2 209 1 38 1 214 1 105 1 169 6 219 1 295 1 195 1 68 1 174 4 51 1 114 2 113 1 
183 2 38 2 238 1 85 2 274 2 275 1 88 1 242 2 155 1 14 2 197 2 277 1 199 1 92 1 51 5 160 7 209 2 128 2 105 2 214 7 169 17 219 1 295 2 297 2 222 4 68 3 174 10 113 2 114 2 
174 1 114 1 169 1 
160 1 105 1 169 1 
160 2 209 1 183 1 38 1 128 1 214 2 217 1 274 1 85 1 189 1 169 5 295 1 222 2 68 1 174 3 51 2 113 1 
232 1 183 1 38 2 274 1 85 1 121 1 195 1 51 1 22 1 160 4 207 1 209 2 128 1 105 1 214 1 169 10 64 1 26 1 295 2 222 2 68 2 174 6 114 1 113 2 
160 1 68 1 199 1 169 1 
160 1 183 1 128 1 214 2 169 3 85 1 274 1 88 1 242 1 297 1 14 1 222 2 197 1 277 1 174 2 92 1 51 1 
160 2 286 1 214 3 169 4 295 1 242 1 14 1 68 2 197 1 174 2 199 1 51 2 
22 1 160 1 209 1 183 1 128 1 85 1 274 1 169 1 222 2 68 1 
22 1 160 1 209 1 183 1 38 1 128 1 214 1 85 1 274 1 169 3 295 1 222 2 68 1 174 2 51 1 113 1 
22 1 160 1 183 3 128 3 214 2 169 3 85 3 274 3 88 1 242 1 297 1 222 6 14 1 244 1 197 1 174 2 51 1 
233 1 183 5 38 3 238 1 274 5 85 5 88 1 242 2 14 2 195 1 244 1 197 2 277 1 199 2 92 1 51 4 99 1 22 1 160 10 209 3 128 5 105 3 214 6 217 1 169 24 219 1 295 3 297 2 222 10 68 5 174 14 71 1 114 4 113 3 
183 1 238 1 274 1 85 1 121 1 195 1 14 1 277 1 197 1 92 1 199 1 51 2 22 1 160 2 128 1 105 1 214 2 169 4 222 2 68 1 174 2 114 1 
232 1 183 2 38 4 274 2 85 2 121 1 275 1 195 1 51 3 22 1 160 7 207 1 209 4 128 2 105 2 214 3 217 1 169 18 26 1 64 1 219 1 295 4 222 4 68 4 174 11 114 2 113 4 
232 1 183 3 38 2 238 1 274 3 85 3 121 1 14 1 195 1 197 1 277 1 199 1 92 1 51 3 22 1 160 5 207 1 209 2 128 3 105 1 214 3 217 1 169 13 26 1 64 1 295 2 297 1 222 6 68 3 174 8 114 1 113 2 
232 1 183 2 38 2 274 2 85 2 121 1 195 1 51 1 22 1 160 4 207 1 209 2 128 2 105 1 214 1 217 1 169 10 64 1 26 1 295 2 222 4 68 2 174 6 114 1 113 2 
183 1 238 1 274 1 85 1 121 1 195 1 14 1 277 1 197 1 92 1 199 1 51 2 22 1 160 2 128 1 105 1 214 2 169 4 222 2 68 1 174 2 114 1 
232 1 183 1 38 2 274 1 85 1 121 1 195 1 51 1 22 1 160 4 207 1 209 2 128 1 105 1 214 1 169 10 64 1 26 1 295 2 222 2 68 2 174 6 114 1 113 2 
232 1 183 3 38 2 274 3 85 3 121 1 195 1 51 1 22 1 160 4 207 1 209 2 128 3 105 1 214 1 217 1 169 11 26 1 64 1 295 2 297 1 222 6 68 2 174 7 114 1 113 2 
232 1 183 3 38 2 274 3 85 3 121 1 195 1 244 1 51 2 22 1 160 4 207 1 209 2 128 3 105 1 214 2 169 11 26 1 64 1 295 2 297 1 222 6 68 2 174 7 114 1 113 2 
160 3 286 1 214 7 238 1 169 5 295 1 242 3 14 2 68 3 277 1 197 2 174 2 92 1 199 2 51 4 
232 1 183 3 38 2 274 3 85 3 121 1 195 1 244 1 51 1 22 1 160 4 207 1 209 2 128 3 105 1 214 1 169 11 26 1 64 1 295 2 297 1 222 6 68 2 174 7 114 1 113 2 
253 1 
117 1 298 1 164 1 104 1 253 1 188 1 
291 1 45 1 234 1 163 1 81 1 140 1 225 1 303 1 17 1 305 1 143 1 
3 1 118 1 234 1 81 1 167 1 63 1 43 1 256 1 45 1 137 1 31 1 140 1 303 1 225 1 305 1 143 1 309 1 
3 1 118 1 234 1 130 1 167 1 63 1 43 1 256 1 45 1 137 1 31 1 140 1 303 1 225 1 305 1 143 1 309 1 
3 1 118 1 234 1 130 1 63 1 43 1 256 1 45 1 137 1 31 1 279 1 140 1 303 1 225 1 305 1 143 1 309 1 
234 3 37 1 81 1 185 1 120 1 187 1 42 1 45 3 156 1 282 1 204 1 21 1 124 1 130 1 220 2 138 2 137 1 140 4 139 1 225 1 303 3 305 1 143 1 
21 1 124 1 234 3 81 1 37 1 130 1 120 1 187 1 220 2 45 3 243 1 156 1 137 1 138 2 139 1 140 4 303 3 225 1 204 1 305 1 282 1 143 1 
45 1 181 1 234 1 225 1 303 1 305 1 
181 1 234 5 81 2 186 1 45 6 246 1 95 1 97 1 283 1 57 1 289 1 133 1 137 1 223 1 140 3 225 2 303 6 305 3 265 1 143 2 
256 1 118 1 31 1 309 1 43 1 63 1 
234 1 81 1 37 1 120 1 187 1 150 2 45 1 243 1 96 1 282 2 124 1 125 1 102 1 165 1 213 1 216 1 24 2 220 3 69 2 29 1 172 1 138 3 70 1 140 2 139 1 303 1 73 1 141 2 
181 1 234 2 37 1 13 1 45 2 137 1 32 1 223 1 140 2 303 2 225 1 305 2 143 1 
21 1 267 1 234 4 81 1 291 1 13 1 45 4 140 1 303 4 225 1 17 1 305 1 143 1 
79 1 57 1 234 2 130 1 293 1 45 2 296 1 137 1 140 1 246 1 303 2 225 1 305 2 143 1 
239 1 241 1 4 1 45 1 234 1 81 1 225 1 303 1 180 1 305 1 
192 1 283 1 13 1 45 2 234 2 140 1 225 1 95 1 303 2 305 1 143 1 
267 1 234 4 81 1 186 1 130 1 291 1 13 1 133 1 45 5 140 3 303 5 95 1 225 2 17 1 305 2 143 2 
159 1 267 1 234 4 81 1 130 1 291 1 13 1 133 1 45 5 140 3 303 5 95 1 225 2 17 1 305 2 143 2 
3 1 118 1 234 1 81 1 63 1 43 1 256 1 45 1 137 1 31 1 279 1 140 1 303 1 225 1 305 1 143 1 309 1 
57 1 234 1 130 1 45 1 137 1 223 1 140 1 246 1 303 1 225 1 97 1 305 2 143 1 
212 1 288 1 43 1 224 1 31 1 177 1 228 1 266 1 309 1 
134 1 100 1 288 1 
173 1 224 1 177 1 288 1 
220 1 2 1 134 1 100 1 29 1 173 1 138 1 224 1 177 1 288 1 
27 1 210 1 163 1 300 1 
27 1 210 1 67 1 300 1 34 1 308 1 254 1 
67 1 166 1 306 1 
146 1 210 1 60 1 106 1 254 1 27 1 67 2 259 1 300 1 281 1 307 1 308 1 34 2 
170 1 27 1 210 1 67 2 300 1 77 1 34 2 308 1 254 1 
235 1 272 1 106 1 254 1 239 1 27 1 67 1 196 1 180 1 308 1 34 1 
27 1 67 1 300 1 106 1 34 1 308 1 254 1 
210 1 67 1 300 2 106 1 34 1 308 1 254 1 
270 1 106 1 131 1 254 2 27 1 67 2 300 1 308 2 34 2 248 1 
210 1 235 1 106 1 254 1 27 2 67 3 111 1 198 1 300 1 308 1 34 3 123 1 77 2 
4 1 210 1 106 1 254 1 239 1 27 1 294 1 67 2 196 1 49 1 300 1 180 2 308 1 34 2 77 1 
208 1 210 1 235 1 106 1 254 2 170 1 27 2 67 4 198 1 300 1 308 2 34 4 77 2 
27 1 210 1 67 1 300 1 106 1 34 1 308 1 254 1 
146 1 210 2 60 1 235 1 254 1 27 3 67 4 259 1 198 1 300 2 307 1 77 2 34 4 308 1 
27 1 210 1 67 2 127 1 300 1 200 1 106 1 116 1 77 1 34 2 308 1 254 1 
146 2 210 1 60 1 106 1 254 1 27 1 67 3 300 1 247 1 307 2 308 1 34 3 
292 1 27 2 33 2 190 1 
231 1 67 1 106 1 34 1 308 1 254 1 
27 1 210 1 67 2 300 1 106 1 77 1 123 1 34 2 308 1 254 1 
19 1 
27 1 210 1 67 1 300 1 106 1 34 1 308 1 254 1 
210 1 106 1 254 1 27 1 67 3 300 1 307 1 77 1 308 1 34 3 123 1 
27 1 259 1 198 1 235 1 
27 1 300 1 

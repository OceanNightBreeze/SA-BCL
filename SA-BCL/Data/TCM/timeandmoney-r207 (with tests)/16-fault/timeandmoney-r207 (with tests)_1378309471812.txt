#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (8,220) (8,220) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (8,220) (8,220) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (8,220) (8,220) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (8,220) (8,220) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 36 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 36 99 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 36 99 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 29 140 264 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 29 140 264 45 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 29 140 264 (47,74) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 29 140 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 75 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 29 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 132 273 202 188 232 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 29 270 101 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 75 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 29 140 264 45 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 132 273 202 188 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 29 89 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 29 89 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 29 89 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 29 140 264 (47,74) (47,74) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 29 89 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 29 89 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 316 (70,234) (70,234) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | RETURN | 873 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
111 1 88 1 220 1 79 1 104 1 193 1 118 1 302 1 8 1 290 1 190 1 
111 1 88 1 220 1 79 1 104 1 193 1 118 1 302 1 8 1 290 1 190 1 
111 1 88 1 220 1 79 1 104 1 193 1 118 1 302 1 8 1 290 1 190 1 
111 1 88 1 220 1 79 1 104 1 193 1 118 1 302 1 8 1 290 1 190 1 
279 3 94 2 280 1 191 1 193 1 79 4 120 1 316 2 288 1 88 1 32 1 104 1 240 2 36 1 16 1 190 4 
191 1 193 1 79 2 234 1 70 1 288 1 290 1 88 1 239 1 327 1 104 1 243 1 205 1 302 1 190 2 
279 1 94 1 280 1 193 1 79 3 234 1 316 1 70 1 290 1 88 2 104 2 34 1 190 3 
279 7 94 4 191 1 280 3 193 1 79 9 158 1 120 1 99 1 316 4 288 1 12 1 290 1 88 2 32 1 104 2 240 2 183 1 34 1 36 1 16 1 190 9 
279 7 94 4 191 1 280 3 193 1 79 9 158 1 120 1 99 1 316 4 288 1 12 1 290 1 88 2 32 1 104 2 240 2 183 1 34 1 36 1 16 1 190 9 
103 1 281 1 115 1 
230 1 115 1 304 2 
29 1 264 1 140 1 
29 1 45 1 264 1 140 1 
29 1 264 1 47 1 140 1 
173 1 115 1 318 1 324 1 260 1 235 1 103 1 178 1 71 1 147 1 151 1 76 1 306 1 210 1 
29 1 140 1 
173 1 122 1 272 1 9 1 235 1 
103 1 173 2 115 1 315 1 122 1 9 1 133 1 235 2 
173 1 122 1 235 1 
29 1 264 1 47 1 173 1 74 1 9 1 140 1 235 1 
115 1 
103 1 173 2 115 1 315 1 122 1 9 1 109 1 235 2 
47 1 48 1 282 1 159 1 115 2 285 1 122 2 287 1 9 2 85 1 235 5 165 2 204 1 207 1 131 1 308 1 311 2 173 5 315 1 215 2 140 1 29 1 30 4 103 2 264 1 33 2 226 3 74 1 75 1 42 2 189 1 
227 1 317 1 
227 1 317 1 
237 1 277 1 
237 1 277 1 
237 1 277 1 
5 1 227 1 317 1 
227 1 256 1 317 1 
237 1 56 1 254 1 227 2 317 2 277 1 
5 1 227 1 317 1 
5 1 227 1 317 1 
22 1 227 1 317 1 
22 1 227 1 317 1 
22 1 227 1 317 1 
171 1 192 2 80 2 173 2 115 1 317 2 320 2 289 2 235 2 216 1 87 1 143 1 223 1 56 1 241 1 269 3 331 2 227 2 38 1 
29 1 192 1 143 1 80 1 173 1 269 1 227 1 317 1 320 1 289 1 235 1 
191 1 16 1 288 1 
191 1 239 1 288 1 
136 1 191 3 239 1 7 1 203 1 16 2 
154 1 191 2 239 1 7 1 203 1 16 1 
191 2 239 1 203 1 7 2 16 1 
230 1 3 1 112 1 282 1 4 2 115 2 122 1 9 4 235 5 165 1 303 1 132 1 304 3 170 1 311 1 98 2 173 5 251 2 315 1 215 1 177 1 102 1 30 3 103 1 72 1 328 1 225 1 226 2 273 1 40 1 42 1 189 1 
47 1 173 2 115 1 122 1 9 2 140 1 235 2 259 1 29 1 103 1 264 1 74 1 169 1 272 1 41 1 
230 2 3 1 112 1 282 1 115 3 4 2 9 2 235 3 165 1 303 1 132 1 304 4 308 1 311 1 173 3 251 1 98 2 215 1 102 1 30 3 103 1 72 1 328 1 226 2 273 1 42 1 
230 3 3 2 112 2 282 2 115 4 4 4 9 3 196 1 235 4 165 1 303 1 93 1 132 2 304 7 308 1 311 1 98 4 173 4 251 2 215 2 102 1 30 5 103 1 72 1 328 1 226 4 273 2 44 1 42 1 
238 1 222 1 281 1 39 1 258 1 
222 1 298 1 
184 1 
222 1 160 1 
96 1 222 3 194 1 186 1 160 1 39 2 
222 1 194 1 160 1 
293 1 222 1 
135 7 309 1 282 1 250 4 159 1 283 1 285 1 215 1 326 1 265 2 201 3 181 3 129 1 168 2 204 1 187 1 228 1 
135 7 309 1 282 1 250 4 159 1 283 1 285 1 215 1 326 1 265 2 201 3 181 3 129 1 168 2 204 1 187 1 228 1 
135 7 309 1 282 1 250 4 159 1 283 1 285 1 215 1 326 1 265 2 201 3 164 1 181 3 129 1 168 2 204 1 187 1 228 1 
135 11 3 1 282 2 250 7 232 1 215 1 326 1 161 2 265 1 200 2 201 2 181 4 202 1 129 1 35 1 128 1 168 1 273 2 132 2 188 1 228 2 
2 2 282 1 49 2 159 1 195 1 285 1 201 4 299 1 129 1 168 2 204 1 135 9 60 1 309 1 250 5 215 1 28 4 261 2 326 1 265 3 181 4 149 2 187 1 228 1 
279 1 229 1 78 1 191 2 79 2 193 1 81 1 231 2 119 1 234 1 83 2 288 1 290 1 236 1 291 1 53 1 88 1 239 1 14 2 16 1 57 1 246 1 136 1 249 1 23 1 70 1 104 1 329 1 190 2 152 1 
279 2 78 1 191 2 79 3 81 1 119 1 231 1 234 1 83 1 288 1 290 1 291 1 292 1 53 1 88 1 239 1 14 1 16 1 246 1 209 1 136 1 249 1 23 1 70 1 180 1 104 1 329 1 190 3 152 1 
279 2 136 1 78 1 191 2 249 1 23 1 79 2 231 1 119 1 234 1 83 1 70 1 288 1 290 1 53 1 291 1 239 1 180 1 14 1 16 1 246 1 152 1 209 1 190 2 
0 1 78 1 59 1 23 1 79 1 119 2 231 1 160 1 83 1 290 2 86 1 292 1 291 2 88 1 221 1 222 1 104 1 91 1 14 1 58 1 246 2 43 1 190 1 
136 1 78 1 229 1 191 2 249 1 23 1 193 1 79 1 81 1 231 1 119 1 83 1 288 1 290 1 53 1 291 1 88 1 239 1 180 1 329 1 104 1 14 1 16 1 246 1 152 1 190 1 
244 1 
78 1 230 2 231 2 160 1 83 2 84 1 235 5 86 2 165 1 166 1 14 2 19 1 20 2 21 2 23 1 173 5 26 1 257 1 260 1 30 2 103 1 178 1 107 2 189 1 42 1 115 2 122 6 123 2 124 1 198 2 199 1 54 1 58 1 304 2 306 1 210 1 307 1 59 1 311 1 212 1 313 4 314 2 66 1 315 3 318 1 323 1 324 1 141 2 72 1 71 1 222 1 147 1 226 2 151 1 76 1 
122 2 84 1 235 3 199 1 54 1 19 1 306 1 210 1 307 1 21 1 173 3 313 2 315 1 318 1 260 1 324 1 178 1 71 1 147 1 151 1 76 1 109 1 
115 1 122 1 84 1 235 3 199 1 54 1 19 1 306 1 210 1 307 1 173 3 313 3 314 1 315 1 318 1 260 1 324 1 178 1 103 1 71 1 147 1 151 1 76 1 109 1 
115 1 122 2 84 1 235 3 199 1 54 1 19 1 306 1 210 1 307 1 21 1 173 3 313 3 314 1 315 1 318 1 260 1 324 1 178 1 103 1 71 1 147 1 107 1 151 1 76 1 109 1 
230 2 84 1 235 5 165 1 19 1 20 2 21 4 173 5 27 1 260 1 29 1 30 1 103 1 178 1 264 1 268 1 107 4 109 1 189 1 42 1 47 1 115 1 122 7 123 2 199 1 198 2 54 1 55 1 206 1 306 1 210 1 307 1 311 1 313 4 314 2 66 1 315 3 68 1 318 1 140 1 323 1 324 1 141 2 71 1 147 1 226 1 74 1 151 1 76 1 
230 2 84 1 235 4 165 1 166 1 19 1 20 2 21 2 173 4 260 1 30 1 178 1 103 1 107 2 189 1 42 1 115 2 122 4 123 2 199 1 198 2 54 1 306 1 304 2 210 1 307 1 311 1 313 4 314 2 66 1 315 2 318 1 323 1 324 1 141 2 71 1 147 1 226 1 151 1 76 1 
230 2 115 1 122 4 123 2 84 1 235 4 198 2 199 1 54 1 55 1 165 1 206 1 19 1 306 1 20 2 210 1 307 1 21 2 311 1 173 4 313 4 314 2 66 1 315 2 68 1 318 1 323 1 260 1 324 1 141 2 30 1 103 1 178 1 71 1 147 1 226 1 107 2 151 1 76 1 189 1 42 1 
230 2 115 1 122 4 123 2 84 1 235 4 198 2 199 1 54 1 55 1 165 1 206 1 19 1 306 1 20 2 210 1 307 1 21 2 311 1 173 4 313 4 314 2 66 1 315 2 68 1 318 1 323 1 260 1 324 1 141 2 30 1 103 1 178 1 71 1 147 1 226 1 107 2 151 1 76 1 189 1 42 1 
46 2 115 1 122 4 286 1 84 1 52 2 235 4 199 1 54 1 165 1 300 1 19 1 304 2 306 1 20 2 210 1 307 1 21 2 311 1 173 4 313 4 314 2 66 1 315 2 68 1 67 1 318 1 260 1 324 1 141 2 30 1 103 1 178 1 71 1 147 1 226 1 107 2 151 1 76 1 189 1 42 1 
230 2 84 1 235 4 165 1 19 1 20 2 21 3 173 4 260 1 29 1 30 1 178 1 103 1 264 1 268 1 107 3 189 1 42 1 47 1 115 1 122 5 123 2 199 1 198 2 54 1 55 1 206 1 306 1 210 1 307 1 311 1 313 5 314 3 66 1 68 1 315 2 318 1 140 1 323 1 324 1 141 2 71 1 147 1 226 1 74 1 151 1 76 1 
230 2 84 1 235 4 165 1 19 1 20 2 21 3 173 4 260 1 29 1 30 1 178 1 103 1 264 1 268 1 107 3 189 1 42 1 47 1 115 1 122 5 123 2 199 1 198 2 54 1 55 1 206 1 306 1 210 1 307 1 311 1 313 5 314 3 66 1 68 1 315 2 318 1 140 1 323 1 324 1 141 2 71 1 147 1 226 1 74 1 151 1 76 1 
84 1 235 4 165 1 166 1 19 1 20 2 21 2 173 4 260 1 30 1 178 1 103 1 107 2 189 1 42 1 46 2 115 1 122 4 52 2 199 1 54 1 306 1 304 2 210 1 307 1 311 1 313 4 314 2 66 1 67 1 315 2 318 1 324 1 141 2 71 1 147 1 226 1 151 1 76 1 
2 2 3 3 49 2 282 3 116 2 82 1 161 2 200 1 201 6 127 1 299 1 128 1 129 3 130 2 132 3 134 1 135 19 137 1 62 1 250 9 24 1 215 3 28 4 261 2 265 3 181 10 267 1 35 1 149 2 273 3 
2 3 3 2 156 1 49 3 113 1 282 3 116 4 195 2 82 1 161 2 294 1 200 2 201 4 297 1 129 2 299 1 130 1 15 1 132 3 134 2 135 26 137 1 62 2 250 14 215 2 28 6 261 3 265 2 181 12 267 1 35 2 149 3 150 1 273 3 
2 3 3 4 156 1 113 1 49 3 282 5 159 1 116 4 195 1 82 1 285 1 161 4 294 1 200 3 201 8 127 1 297 1 92 1 299 1 128 1 129 4 130 1 168 1 15 1 204 1 132 4 134 1 135 41 137 1 309 1 62 2 250 20 215 5 28 6 261 3 265 4 181 21 267 1 35 3 149 3 150 1 273 4 187 1 
2 4 3 3 156 1 113 1 49 4 282 5 159 1 116 4 195 2 82 1 285 1 161 4 294 1 200 3 201 7 127 1 297 1 92 1 299 1 128 1 129 3 130 1 168 1 15 1 204 1 132 4 134 1 135 38 137 1 309 1 62 2 250 20 215 4 28 8 261 4 265 4 181 18 267 1 35 3 149 4 150 1 273 4 187 1 
2 2 3 7 156 1 113 1 49 2 282 8 159 1 116 4 195 1 82 1 285 1 161 4 294 1 200 4 201 14 297 1 299 1 128 2 129 7 130 1 168 1 15 1 204 1 132 7 134 1 211 2 135 52 137 1 309 1 62 1 250 27 215 8 28 4 261 2 265 7 181 25 267 1 35 2 149 2 150 1 273 7 187 1 
171 1 263 1 192 1 223 1 80 1 56 1 227 1 317 1 320 1 289 1 
182 1 256 1 
192 1 145 1 80 1 224 1 227 1 51 1 317 1 320 1 289 1 
171 1 192 1 80 1 173 1 115 1 317 1 320 1 289 1 235 1 216 1 87 1 143 1 223 1 56 1 241 1 269 2 331 1 227 1 
171 1 192 1 80 1 173 1 115 1 317 1 320 1 289 1 235 1 216 1 87 1 143 1 223 1 56 1 241 1 269 2 331 1 227 1 
171 1 192 1 80 1 173 1 115 1 317 1 320 1 289 1 235 1 216 1 87 1 143 1 223 1 56 1 241 1 269 2 331 1 227 1 
179 1 5 1 254 1 
179 1 5 1 254 1 
1 1 22 1 
1 1 22 1 254 1 
65 1 214 1 
192 1 112 1 80 1 173 1 65 1 214 1 256 1 317 1 9 1 101 1 320 1 289 1 177 1 235 1 216 1 29 1 182 1 225 1 269 1 331 1 270 1 227 1 
179 1 5 1 
1 1 22 1 254 1 
78 1 2 1 49 1 231 2 160 1 83 2 14 2 242 1 57 2 306 2 210 2 135 2 23 1 61 1 97 1 250 1 100 1 255 1 324 2 28 2 325 1 261 1 262 1 219 1 222 1 106 1 181 1 149 1 271 1 274 1 110 1 
136 1 78 1 191 2 249 1 23 1 117 1 231 2 119 1 83 2 288 1 236 1 239 1 180 1 329 1 14 2 37 1 301 1 16 1 152 1 
136 1 78 1 191 2 249 1 23 1 117 1 231 1 119 1 83 1 288 1 239 1 180 1 329 1 14 1 16 1 108 1 152 1 
0 1 78 1 59 1 23 1 231 1 119 1 160 1 83 1 86 1 222 1 14 1 37 1 58 1 245 1 
136 1 78 1 191 2 249 1 23 1 117 1 231 1 119 1 83 1 288 1 239 1 180 1 329 1 14 1 37 1 301 1 16 1 152 1 
138 1 
30 1 103 1 281 1 115 1 226 1 207 1 131 1 
230 1 115 2 122 1 123 1 235 1 198 1 165 1 304 1 311 1 173 1 315 1 323 1 30 1 103 1 226 1 42 1 189 1 
78 3 230 6 3 2 4 6 231 3 160 3 83 3 86 1 235 5 236 1 165 4 14 3 167 2 247 1 96 1 23 4 173 5 98 6 174 2 26 1 30 9 103 2 33 2 273 2 39 2 189 4 42 4 282 2 114 2 194 3 115 8 284 1 121 1 122 5 293 2 295 1 298 3 207 1 131 1 132 2 304 12 311 4 310 2 213 1 312 2 315 3 215 2 321 2 72 2 144 2 222 10 73 2 226 8 151 2 
230 3 3 2 156 1 113 1 282 2 4 5 115 5 50 1 122 1 235 1 161 1 200 1 297 1 165 2 15 1 132 2 304 6 172 1 311 2 173 1 98 5 26 1 315 1 215 2 30 8 103 2 72 1 144 1 33 2 35 1 226 5 150 1 273 2 42 2 189 2 
47 1 282 1 311 1 173 1 159 1 285 1 215 1 140 1 235 1 29 1 30 2 264 1 165 1 33 2 226 1 206 1 204 1 74 1 75 1 189 1 42 1 
311 1 115 1 30 1 103 1 165 1 226 1 207 1 131 1 189 1 42 1 
230 5 3 2 282 2 98 5 4 5 115 5 215 2 321 1 30 5 144 1 33 2 226 5 273 2 132 2 304 10 
103 1 173 1 115 1 315 1 122 1 235 1 
78 1 231 4 160 1 83 4 122 4 11 1 124 1 86 2 235 3 295 1 163 1 165 2 14 4 58 1 59 1 308 1 23 1 311 2 213 2 173 3 26 2 315 2 257 1 30 2 72 2 222 1 226 2 42 2 189 1 
29 1 45 1 264 1 140 1 
230 2 311 1 98 2 4 2 115 4 26 1 30 1 103 2 72 1 165 1 168 1 226 2 304 4 189 1 42 1 
80 1 330 1 320 1 
162 1 223 1 80 1 65 1 320 1 
80 1 330 1 320 1 
80 1 330 1 320 1 
95 1 80 1 320 1 
95 1 80 1 320 1 
95 1 80 1 320 1 
80 1 320 1 
227 1 317 1 
135 8 2 2 309 1 282 1 49 2 250 4 159 1 195 1 285 1 215 1 28 4 261 2 265 2 201 3 181 4 129 1 168 1 149 2 204 1 187 1 
135 6 309 1 281 1 282 1 250 3 159 1 285 1 215 1 265 2 201 2 181 3 168 1 204 1 187 1 
135 4 2 1 3 1 49 1 282 1 250 2 233 1 215 1 28 2 261 1 265 1 201 2 181 2 129 1 149 1 273 1 132 1 
135 7 3 1 282 1 250 3 215 1 161 2 265 1 200 1 201 2 181 4 35 1 128 1 129 1 273 1 132 1 
153 1 2 2 3 2 282 3 49 2 159 2 195 2 285 1 161 2 200 2 201 9 129 4 128 1 168 1 204 2 132 2 135 23 211 1 309 1 63 1 250 11 215 3 28 4 261 2 265 5 181 12 149 2 273 2 187 1 
135 1 161 1 181 1 
135 1 200 1 250 1 
135 6 2 1 3 1 49 1 282 1 250 3 233 1 215 1 321 1 28 2 261 1 265 2 201 3 181 3 129 1 149 1 273 1 132 1 
2 1 3 2 113 1 49 1 282 2 156 1 161 1 200 1 201 2 297 1 129 1 299 1 15 1 132 2 135 12 250 6 215 2 28 2 261 1 265 1 181 6 35 1 149 1 150 1 273 2 
135 6 282 1 250 3 159 1 285 1 215 1 265 1 201 2 181 3 129 1 204 1 
135 3 2 1 309 1 63 1 49 1 250 1 159 1 195 1 28 2 261 1 265 1 201 2 181 2 129 1 204 1 149 1 187 1 
135 10 2 1 49 1 282 2 250 5 159 2 285 1 215 2 28 2 261 1 265 3 201 5 181 5 299 1 129 2 149 1 204 2 75 1 
135 2 2 1 49 1 282 1 250 2 28 2 261 1 201 1 299 1 129 1 149 1 132 1 
135 4 2 1 3 1 49 1 282 1 250 2 215 1 28 2 261 1 265 1 201 2 181 2 299 1 129 1 149 1 273 1 132 1 
135 3 2 3 63 1 49 3 250 1 159 1 195 1 28 6 261 3 265 1 201 2 127 1 181 2 299 1 129 1 149 3 204 1 
135 5 2 3 282 1 49 3 250 4 233 1 28 6 261 3 161 1 200 2 127 1 181 1 202 1 299 1 35 1 149 3 273 1 132 1 188 1 
2 1 282 1 113 1 49 1 159 1 285 1 161 1 200 1 201 2 299 1 168 1 204 1 135 8 309 1 250 4 215 1 28 2 261 1 265 2 181 4 35 1 149 1 187 1 
2 2 113 1 49 2 282 2 159 1 285 1 233 1 161 2 200 1 201 3 299 1 128 1 129 1 168 1 204 1 132 1 135 11 309 1 250 6 215 1 28 4 261 2 265 2 181 5 35 1 149 2 273 1 187 1 
2 3 3 2 113 1 49 3 282 3 156 1 159 1 195 1 285 1 233 1 161 1 200 1 201 4 297 1 129 1 299 1 168 1 15 1 204 1 132 2 135 19 309 1 250 9 215 3 28 6 261 3 265 3 181 10 35 1 149 3 150 1 273 2 187 1 
2 3 3 1 113 1 49 3 282 3 156 1 159 1 195 1 285 1 233 1 161 1 200 1 201 5 297 1 129 2 299 1 168 1 15 1 204 1 132 2 135 17 309 1 250 10 215 2 28 6 261 3 265 3 181 7 35 1 149 3 150 1 273 2 187 1 
2 1 282 1 113 1 49 1 159 1 285 1 161 1 200 1 201 2 299 1 168 1 204 1 135 8 309 1 250 4 215 1 28 2 261 1 265 2 181 4 35 1 149 1 187 1 
2 1 3 2 113 1 49 1 282 2 156 1 161 1 200 1 201 2 297 1 129 1 299 1 15 1 132 2 135 12 250 6 215 2 28 2 261 1 265 1 181 6 35 1 149 1 150 1 273 2 
2 4 3 1 156 1 113 1 49 4 282 3 159 1 195 2 285 1 233 1 161 1 200 1 201 5 297 1 129 2 299 1 168 1 15 1 204 1 132 2 135 18 309 1 250 10 215 2 28 8 261 4 265 3 181 8 35 1 149 4 150 1 273 2 187 1 
2 4 3 2 156 1 113 1 49 4 282 3 195 2 161 1 200 1 201 6 127 1 297 1 129 3 299 1 15 1 132 3 135 16 250 9 215 2 28 8 261 4 265 3 181 7 35 1 149 4 150 1 273 3 
135 7 309 2 282 1 250 3 159 3 285 1 215 1 265 3 201 6 181 4 129 3 204 3 187 1 
2 4 3 1 156 1 113 1 49 4 282 3 159 1 195 2 285 1 161 1 200 1 201 4 127 1 297 1 129 1 299 1 168 1 15 1 204 1 132 2 135 18 309 1 250 10 215 2 28 8 261 4 265 3 181 8 35 1 149 4 150 1 273 2 187 1 
31 1 25 1 276 1 306 1 76 1 324 1 210 1 
155 1 64 1 175 1 25 1 324 1 217 1 31 1 276 1 208 1 76 1 306 1 210 1 
78 1 59 1 23 1 222 1 281 1 14 1 231 1 160 1 58 1 83 1 86 1 
29 1 89 1 
29 1 89 1 
29 1 89 1 
47 1 173 1 213 1 115 1 231 1 83 1 140 1 235 1 29 1 103 1 264 1 222 1 146 1 298 1 14 1 74 1 
78 1 23 1 310 1 194 1 173 2 213 1 115 1 174 1 231 3 160 1 83 3 122 1 86 1 235 2 293 1 103 1 296 1 222 4 298 1 14 3 151 1 39 1 
78 1 23 1 14 1 231 1 83 1 10 1 
78 2 96 1 23 3 194 1 231 6 69 1 83 5 160 2 139 1 86 2 236 1 142 1 219 1 180 1 222 3 13 1 14 6 185 1 57 1 305 1 
29 1 89 1 
114 1 115 1 231 1 83 1 122 2 9 1 86 1 235 3 295 1 165 2 298 1 14 1 207 1 131 1 311 2 173 3 312 1 174 1 315 1 30 1 103 1 222 2 226 1 73 1 39 1 151 1 42 2 189 2 
78 1 96 1 23 2 194 1 231 2 83 2 160 1 10 1 236 1 222 2 14 2 39 1 247 1 
59 1 78 1 23 1 231 4 83 4 160 1 86 1 236 1 296 1 222 1 14 4 17 1 58 1 
78 1 23 2 213 1 194 1 253 1 231 2 69 1 83 2 160 1 222 1 13 1 14 2 275 1 278 1 
78 1 191 1 239 1 23 1 14 1 231 1 83 1 288 1 152 1 86 1 
325 1 236 1 78 1 219 1 23 1 180 1 222 1 14 2 231 2 160 1 83 2 
59 1 78 2 23 2 213 1 231 5 83 4 160 2 86 1 236 1 219 1 222 3 14 5 185 1 17 1 58 1 305 1 
59 1 78 2 23 2 213 1 231 5 83 4 160 2 86 1 236 1 125 1 219 1 222 3 14 5 17 1 58 1 305 1 
29 1 89 1 
78 1 96 1 23 2 213 1 194 1 231 1 69 1 83 1 160 1 142 1 222 1 13 1 14 1 
281 1 234 1 70 1 
88 1 79 1 104 1 234 1 70 1 190 1 
291 1 79 1 290 1 
197 1 88 1 157 1 79 3 104 1 193 1 234 1 205 2 176 1 70 1 190 3 
279 1 88 1 79 2 104 1 240 1 234 1 70 1 190 2 
94 1 191 1 193 1 79 1 120 1 316 1 288 1 88 1 104 1 16 1 190 1 
88 1 79 1 104 1 193 1 234 1 190 1 
88 1 79 1 104 1 193 1 234 1 316 1 70 1 190 1 
88 2 90 1 79 2 104 2 193 1 6 1 234 1 322 1 190 2 
279 2 94 1 280 1 193 1 79 3 158 1 234 1 316 1 70 1 12 1 88 1 104 1 190 3 
279 1 136 1 191 2 193 1 79 2 234 1 70 1 288 1 88 1 239 1 126 1 104 1 16 1 190 2 
279 2 94 1 280 1 193 1 79 4 234 1 316 1 70 1 88 2 32 1 104 2 240 1 190 4 
88 1 79 1 104 1 193 1 234 1 70 1 190 1 
279 2 94 1 280 1 157 1 79 4 234 2 176 1 316 1 70 2 88 1 105 1 104 1 205 1 190 4 
279 1 218 1 88 1 79 2 104 1 193 1 183 1 234 1 70 1 18 1 190 2 
88 1 157 2 79 3 104 1 193 1 234 1 205 2 176 1 70 1 77 1 190 3 
266 1 148 1 316 2 319 2 
88 1 79 1 104 1 193 1 252 1 190 1 
279 1 88 1 79 2 104 1 193 1 158 1 234 1 70 1 190 2 
248 1 
88 1 79 1 104 1 193 1 234 1 70 1 190 1 
279 1 88 1 79 3 104 1 193 1 158 1 234 1 205 1 70 1 190 3 
94 1 280 1 105 1 316 1 
234 1 

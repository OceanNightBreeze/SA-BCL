#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (63,273) (63,273) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (63,273) (63,273) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (63,273) (63,273) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (63,273) (63,273) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException (297,319) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 329 13 313 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 25 237 238 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 25 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 287 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (297,319) 164 51 50 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 153 141 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 329 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 51 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 329 13 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 329 332 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6018 | = null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | STATEMENT | 3650 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
361 1 148 1 157 1 119 1 276 1 273 1 63 1 88 1 317 1 
361 1 148 1 157 1 119 1 276 1 273 1 63 1 88 1 317 1 
361 1 148 1 157 1 119 1 276 1 273 1 63 1 88 1 317 1 
361 1 148 1 157 1 119 1 276 1 273 1 63 1 88 1 317 1 
148 4 10 1 276 1 31 1 78 2 205 3 291 1 279 1 57 2 308 1 312 1 119 1 177 1 120 1 88 4 367 1 317 1 334 1 
148 2 276 1 61 1 31 1 79 1 82 1 279 1 312 1 361 1 157 1 119 1 120 1 88 2 317 1 47 1 334 1 
148 3 276 1 205 1 279 1 57 1 312 1 157 1 119 2 112 1 120 1 88 3 367 1 317 2 
10 1 148 9 274 1 276 1 31 1 78 2 291 1 205 7 279 1 57 4 308 1 312 1 157 1 119 2 112 1 177 1 120 1 87 1 353 1 88 9 367 3 368 1 317 2 334 1 
10 1 148 9 274 1 276 1 31 1 78 2 291 1 205 7 279 1 57 4 308 1 312 1 157 1 119 2 112 1 177 1 120 1 87 1 353 1 88 9 367 3 368 1 317 2 334 1 
35 1 287 1 22 1 
35 1 357 1 75 2 
105 2 277 2 18 2 226 1 346 2 280 2 326 1 264 2 
147 1 181 1 265 1 124 2 105 3 226 1 62 1 326 1 272 1 190 1 86 1 192 2 252 2 9 1 115 1 116 1 136 1 134 1 277 2 337 1 90 2 340 1 198 1 307 1 139 1 280 3 118 1 257 1 101 1 281 1 18 2 345 1 220 2 282 1 346 2 222 1 264 2 
84 1 105 1 277 1 18 1 226 1 346 1 125 1 128 1 280 1 264 1 
105 1 137 1 22 1 280 1 109 1 73 1 24 1 84 1 210 1 346 1 315 1 35 1 49 1 301 1 
277 1 105 1 137 2 22 1 280 1 109 1 24 2 73 1 84 1 210 1 18 1 346 1 35 1 264 1 301 1 
24 1 306 1 149 1 52 1 137 1 
24 2 306 1 52 1 117 1 137 2 35 1 22 1 20 1 
24 1 306 1 137 1 
277 1 105 1 2 1 226 1 52 1 125 1 137 1 128 1 280 1 24 1 84 1 18 1 346 1 264 1 
35 1 
24 2 305 1 306 1 52 1 137 2 35 1 22 1 20 1 
266 1 123 2 182 1 105 1 226 1 2 1 76 2 125 1 128 1 22 2 290 5 207 1 292 1 325 1 189 2 24 5 84 1 132 1 294 1 350 1 254 1 48 4 277 1 71 2 306 2 91 1 52 2 32 1 137 5 199 2 280 1 100 1 18 1 346 1 35 2 264 1 180 2 20 1 
287 1 326 1 
105 2 277 1 280 2 326 2 18 1 346 2 103 1 146 1 264 1 
164 1 320 1 297 1 
116 1 181 1 134 1 265 1 124 1 105 1 90 1 62 1 340 1 280 1 326 1 345 1 282 1 222 1 299 1 252 1 
116 1 181 1 134 1 265 1 124 1 336 1 105 2 90 1 62 1 340 1 280 2 58 1 345 1 18 1 282 1 346 1 297 1 222 1 252 1 264 1 
277 1 336 1 105 3 18 3 346 3 280 3 326 1 264 3 
84 1 105 1 18 1 346 1 128 1 280 1 264 1 
84 1 105 1 277 1 18 1 346 1 103 1 146 1 280 1 264 1 
147 1 181 1 265 1 124 1 105 4 226 1 62 1 326 1 109 1 24 1 272 1 84 1 210 1 190 1 86 1 192 2 252 1 301 1 115 1 116 1 136 1 134 1 277 2 336 1 90 1 137 1 340 1 198 1 307 1 280 4 58 1 118 1 73 1 101 1 345 1 18 3 220 1 282 1 346 3 222 1 260 1 241 1 146 1 264 3 
105 2 336 1 18 1 346 2 280 2 326 1 49 1 188 1 264 1 
277 1 336 2 105 3 137 1 280 3 58 1 109 1 24 1 73 1 210 1 84 1 18 3 295 1 346 3 35 1 260 1 146 1 264 3 301 1 
336 1 277 1 105 2 320 1 280 2 18 2 346 2 297 1 146 1 264 2 
116 1 134 1 265 1 181 1 124 1 105 1 90 1 62 1 340 1 280 1 326 1 345 1 282 1 222 1 252 1 
134 1 181 1 124 1 105 1 90 1 62 1 340 1 280 1 326 1 362 1 345 1 282 1 222 1 298 1 252 1 
319 1 228 1 
84 1 105 1 142 1 18 1 346 1 280 1 301 1 264 1 
336 2 105 5 277 1 280 5 309 1 326 1 58 1 188 1 18 4 346 5 146 1 38 1 49 1 264 4 
84 1 142 1 105 2 18 2 346 2 128 1 280 2 264 2 
185 1 218 1 
185 1 218 1 
356 1 333 1 
356 1 333 1 
356 1 333 1 
234 1 185 1 218 1 
234 1 185 1 218 1 
234 1 185 1 218 1 
55 1 185 1 218 1 
271 1 356 1 333 1 185 2 28 1 218 2 
185 1 162 1 218 1 
185 1 162 1 218 1 
185 1 162 1 218 1 
105 1 349 1 2 1 226 1 125 1 127 1 128 1 185 2 321 1 64 1 209 1 24 2 156 2 84 1 5 2 212 2 161 1 11 2 335 1 277 1 137 2 359 1 280 1 218 2 18 1 346 1 144 1 348 2 35 1 264 1 285 1 
105 2 106 1 127 1 185 1 326 1 156 1 24 1 65 1 328 1 5 1 212 1 11 1 303 1 137 1 55 1 280 2 218 1 311 1 172 1 18 2 219 1 346 2 348 1 264 2 
31 1 291 1 334 1 
31 1 79 1 334 1 
79 1 291 2 248 1 163 1 114 1 334 3 
79 1 160 1 291 1 248 1 114 1 334 2 
79 1 291 1 248 1 114 2 334 2 
123 1 182 1 106 1 76 1 22 1 290 2 269 1 245 2 152 1 208 1 189 1 270 1 24 5 113 2 159 1 296 1 67 1 48 3 303 1 306 1 52 4 137 5 357 1 199 1 360 2 219 1 35 2 178 1 263 1 75 3 180 1 20 1 
39 4 123 2 182 1 226 1 2 1 76 3 125 1 128 1 269 3 189 3 270 3 84 1 191 1 48 8 277 1 52 6 53 1 137 8 199 2 341 1 280 1 100 1 18 1 346 1 20 1 105 1 149 4 204 1 22 1 290 6 152 1 245 6 23 1 24 8 159 3 67 2 165 1 306 5 357 3 360 6 219 4 35 5 263 2 264 1 180 2 75 9 
123 1 76 1 22 1 269 1 290 2 245 2 208 1 189 1 270 1 24 3 113 1 159 1 67 1 48 3 52 2 137 3 357 2 199 1 360 2 100 1 219 1 35 3 178 1 263 1 180 1 75 4 
123 1 76 2 2 1 226 1 125 1 128 1 269 2 270 2 189 2 84 1 191 1 48 5 277 1 52 2 137 3 53 1 199 1 341 1 280 1 100 1 18 1 346 1 105 1 22 1 290 4 245 4 208 1 24 3 113 1 159 2 67 1 357 3 360 4 219 2 35 4 178 1 263 1 180 1 75 7 264 1 
181 1 287 1 140 1 
181 1 153 1 
66 1 
181 1 282 1 
181 3 282 1 314 1 340 1 240 1 140 2 
181 1 282 1 340 1 
181 1 283 1 
115 3 266 1 0 1 338 3 76 1 42 1 92 1 130 1 108 2 16 2 235 1 292 1 189 1 132 1 281 4 220 7 213 1 
115 3 266 1 0 1 338 3 76 1 42 1 92 1 130 1 108 2 16 2 235 1 292 1 189 1 132 1 281 4 220 7 213 1 
115 3 266 1 0 1 338 3 76 1 42 1 92 1 130 1 108 2 235 1 16 2 292 1 189 1 217 1 132 1 281 4 220 7 213 1 
43 1 115 1 0 2 13 1 313 1 281 2 329 1 92 1 220 3 16 1 121 1 
147 2 0 1 266 1 76 1 77 1 42 1 184 1 130 1 108 3 292 1 189 1 132 1 190 2 192 4 115 4 12 1 338 4 92 1 198 2 307 2 16 2 235 1 281 5 220 9 
148 2 124 1 183 1 243 1 62 1 79 1 289 1 205 1 291 1 157 1 214 1 354 1 88 2 252 1 251 1 89 1 163 1 334 2 275 1 276 1 90 1 31 1 279 1 312 1 344 1 119 1 345 1 120 1 317 1 369 1 
148 3 124 1 1 1 62 1 79 1 289 1 291 1 205 2 157 1 214 1 354 1 88 3 252 1 251 1 163 1 89 1 334 2 275 1 90 1 31 1 279 1 312 1 344 1 119 1 345 1 175 1 120 1 224 1 317 1 369 1 
148 2 124 1 62 1 79 1 205 2 291 1 157 1 214 1 354 1 88 2 252 1 251 1 89 1 163 1 334 2 275 1 90 1 31 1 279 1 312 1 344 1 345 1 175 1 120 1 224 1 
148 1 104 1 181 1 124 1 1 1 62 1 268 1 157 2 211 1 330 1 354 2 88 1 252 1 46 1 275 2 134 1 90 1 236 1 344 2 119 1 345 1 282 1 317 1 
148 1 124 1 243 1 62 1 79 1 289 1 291 1 157 1 214 1 354 1 88 1 252 1 251 1 89 1 163 1 334 2 275 1 276 1 90 1 31 1 344 1 119 1 345 1 175 1 317 1 369 1 
293 1 
267 1 123 1 181 1 182 1 124 2 227 1 186 1 327 2 84 1 46 1 48 2 49 1 134 2 135 1 90 2 137 5 94 1 197 1 138 1 199 1 99 2 280 1 59 1 345 1 282 1 346 1 20 3 105 1 21 2 62 1 288 2 22 1 244 1 290 2 247 1 109 1 24 5 210 1 25 1 211 1 252 2 255 2 301 1 69 4 306 6 357 2 73 1 173 1 315 1 35 2 316 2 223 2 263 1 75 2 180 1 
69 2 135 1 305 1 105 1 306 2 137 3 94 1 244 1 138 1 247 1 280 1 109 1 73 1 24 3 210 1 84 1 346 1 315 1 255 1 20 1 301 1 49 1 
69 3 135 1 305 1 105 1 306 1 137 3 94 1 22 1 244 1 138 1 247 1 99 1 280 1 109 1 73 1 24 3 210 1 84 1 346 1 315 1 35 1 20 1 301 1 49 1 
105 1 244 1 22 1 247 1 109 1 24 3 84 1 210 1 255 1 49 1 301 1 69 3 135 1 305 1 306 2 94 1 137 3 138 1 280 1 99 1 73 1 346 1 315 1 316 1 35 1 20 1 
123 1 182 1 327 2 84 1 49 1 48 1 135 1 137 5 94 1 138 1 199 1 280 1 99 4 237 1 346 1 102 1 20 3 105 1 21 2 288 2 244 1 22 5 290 1 247 1 109 1 24 5 210 1 25 1 250 1 255 4 300 1 301 1 355 1 69 6 305 1 306 7 357 2 73 1 173 1 315 1 316 4 35 5 223 2 180 1 
123 1 182 1 327 2 84 1 49 1 48 1 135 1 137 4 94 1 197 1 138 1 199 1 280 1 99 2 346 1 20 2 105 1 21 2 288 2 244 1 22 1 290 1 247 1 109 1 24 4 210 1 25 1 255 2 301 1 69 4 306 4 357 2 73 1 173 1 315 1 316 2 35 2 223 2 180 1 75 2 
123 1 182 1 105 1 21 2 288 2 22 1 244 1 290 1 247 1 327 2 109 1 24 4 84 1 210 1 25 1 250 1 255 2 48 1 49 1 301 1 69 4 135 1 306 4 94 1 137 4 138 1 357 2 199 1 99 2 280 1 73 1 237 1 173 1 346 1 315 1 35 1 316 2 102 1 223 2 20 2 180 1 
123 1 182 1 105 1 21 2 288 2 22 1 244 1 290 1 247 1 327 2 109 1 24 4 84 1 210 1 25 1 250 1 255 2 48 1 49 1 301 1 69 4 135 1 306 4 94 1 137 4 138 1 357 2 199 1 99 2 280 1 73 1 237 1 173 1 346 1 315 1 35 1 316 2 102 1 223 2 20 2 180 1 
123 1 182 1 105 1 21 1 288 1 244 1 290 1 151 1 247 1 109 1 110 1 24 2 84 1 210 1 25 1 48 1 49 1 301 1 69 2 135 1 94 1 137 2 138 1 199 1 280 1 73 1 171 1 237 1 346 1 238 1 315 1 180 1 
123 1 182 1 105 1 21 2 288 2 22 1 244 1 290 1 247 1 327 2 109 1 24 4 84 1 210 1 25 1 250 1 255 3 48 1 49 1 301 1 355 1 69 5 135 1 306 5 94 1 137 4 138 1 357 2 199 1 280 1 99 3 73 1 237 1 173 1 346 1 315 1 35 1 316 3 102 1 223 2 20 2 180 1 
123 1 182 1 105 1 21 2 288 2 22 1 244 1 290 1 247 1 327 2 109 1 24 4 84 1 210 1 25 1 250 1 255 3 48 1 49 1 301 1 355 1 69 5 135 1 306 5 94 1 137 4 138 1 357 2 199 1 280 1 99 3 73 1 237 1 173 1 346 1 315 1 35 1 316 3 102 1 223 2 20 2 180 1 
123 1 182 1 105 1 21 1 288 1 244 1 290 1 247 1 109 1 24 2 110 1 84 1 210 1 25 1 48 1 49 1 301 1 69 2 135 1 94 1 137 2 138 1 199 1 280 1 73 1 171 1 346 1 315 1 180 1 
287 1 228 1 
147 1 115 1 136 1 50 1 51 1 164 3 198 1 307 1 43 1 272 1 281 1 190 1 220 2 297 3 192 2 121 1 370 1 
147 1 181 1 265 1 124 1 105 2 62 1 150 1 320 1 326 1 272 1 190 1 192 2 252 1 299 1 45 1 116 1 115 1 134 1 136 1 336 1 90 1 340 1 198 1 307 1 280 2 139 1 58 1 118 1 34 1 281 1 345 1 18 1 282 1 346 1 220 2 222 1 370 1 264 1 
266 1 265 2 181 2 124 1 76 2 320 4 130 1 269 1 323 2 326 2 270 1 189 2 132 1 272 3 190 3 86 2 192 6 193 1 134 1 136 3 195 1 338 3 336 1 90 1 340 2 198 3 16 1 235 1 139 1 280 3 58 1 281 7 18 1 345 2 346 1 282 2 147 3 105 3 62 2 108 3 292 1 27 2 159 1 297 4 252 1 115 7 116 2 164 4 307 3 118 1 220 14 176 1 222 2 261 1 264 1 370 1 
318 1 147 1 181 3 124 7 105 1 183 1 62 2 228 1 272 1 111 1 211 1 4 1 190 1 192 2 252 8 46 1 9 2 29 1 115 1 134 2 136 1 336 1 90 8 198 1 307 1 168 1 280 1 139 1 118 1 281 1 18 1 345 2 175 1 346 1 347 1 220 2 282 2 203 1 264 1 
147 1 105 1 76 1 320 1 269 1 108 1 270 1 189 1 272 1 190 1 159 1 297 1 192 2 115 2 136 1 338 1 277 1 164 1 198 1 307 1 280 1 170 1 281 1 18 1 346 1 220 3 146 1 264 1 370 1 
228 1 
228 1 
228 1 
147 1 136 1 338 1 42 1 164 1 76 1 320 1 198 1 307 1 270 1 272 1 190 1 281 2 220 2 347 1 44 1 297 1 192 2 
147 1 115 2 136 1 338 1 164 1 320 1 198 1 307 1 108 1 83 1 189 1 272 1 190 1 220 2 347 1 159 1 297 1 192 2 
147 1 76 1 42 1 320 2 269 1 108 1 270 1 189 1 272 1 190 1 159 1 192 2 297 2 115 2 136 1 338 2 164 2 198 1 307 1 281 2 347 1 220 4 
115 2 147 1 136 1 338 2 42 1 164 2 76 1 320 2 198 1 269 1 307 1 108 1 189 1 270 1 272 1 190 1 281 2 159 1 220 4 297 2 192 2 
147 1 265 1 181 1 124 1 105 1 62 1 326 1 272 1 190 1 86 1 192 2 252 1 116 1 115 1 134 1 136 1 90 1 340 1 198 1 307 1 139 1 280 1 118 1 281 1 345 1 220 2 282 1 222 1 
147 1 181 1 124 1 105 1 62 1 322 1 326 1 272 1 190 1 192 2 298 1 252 1 115 1 134 1 136 1 90 1 340 1 198 1 307 1 139 1 280 1 118 1 281 1 362 1 345 1 220 2 282 1 222 1 
147 1 76 1 42 1 320 2 269 1 108 1 270 1 189 1 272 1 190 1 159 1 192 2 297 2 115 2 136 1 338 2 164 2 198 1 307 1 281 2 220 4 370 1 
147 1 265 1 181 1 124 1 105 1 42 1 76 1 183 1 62 1 320 2 269 1 108 1 323 1 189 1 270 1 272 1 190 1 159 1 86 1 297 2 192 2 252 1 115 2 116 1 136 1 338 2 164 2 90 1 340 1 198 1 307 1 280 1 281 2 345 1 220 4 282 1 222 1 
147 1 105 1 42 1 76 1 320 1 269 1 189 1 3 1 270 1 272 1 190 1 159 1 192 2 297 1 115 1 136 1 338 1 277 1 164 1 198 1 307 1 280 1 281 2 18 1 346 1 220 3 146 1 264 1 370 1 
147 2 77 1 76 2 42 2 80 2 269 2 108 2 155 1 270 2 189 2 26 1 190 2 159 2 192 4 115 6 194 2 338 4 198 2 307 2 169 1 96 1 258 1 281 6 174 1 220 12 19 1 
147 1 77 1 76 1 80 2 269 1 155 2 270 1 189 1 26 2 190 1 159 1 192 2 115 4 194 1 198 1 307 1 281 4 258 1 174 1 220 8 19 1 
147 2 77 1 76 1 42 1 80 2 269 1 155 1 270 1 189 1 26 2 190 2 159 1 192 4 115 4 194 1 338 1 339 1 198 2 307 2 169 1 281 4 258 1 174 1 220 8 19 1 
147 2 77 1 76 1 42 1 80 2 269 1 108 1 155 1 270 1 189 1 26 2 190 2 159 1 192 4 115 4 194 1 338 2 339 1 198 2 307 2 169 1 281 4 258 1 174 1 220 8 19 1 
147 1 266 2 42 1 77 1 76 3 80 2 269 1 130 2 108 3 292 2 270 1 155 1 189 3 132 2 26 1 190 1 159 1 192 2 194 1 115 8 338 4 198 1 307 1 235 2 16 2 258 1 281 10 174 1 220 18 19 1 
11 1 185 1 321 1 359 1 209 1 218 1 156 1 144 1 348 1 212 1 225 1 
172 1 55 1 
11 1 156 1 93 1 14 1 278 1 212 1 348 1 185 1 218 1 
105 1 349 1 2 1 226 1 125 1 127 1 128 1 185 1 321 1 64 1 209 1 156 1 24 1 84 1 5 2 212 1 161 1 11 1 335 1 277 1 137 1 359 1 280 1 218 1 18 1 346 1 144 1 348 1 35 1 264 1 285 1 
105 1 349 1 2 1 226 1 125 1 127 1 128 1 185 1 321 1 64 1 209 1 156 1 24 1 84 1 5 2 212 1 161 1 11 1 335 1 277 1 137 1 359 1 280 1 218 1 18 1 346 1 144 1 348 1 35 1 264 1 285 1 
105 1 349 1 2 1 226 1 125 1 127 1 128 1 185 1 321 1 64 1 209 1 156 1 24 1 84 1 5 2 212 1 161 1 11 1 335 1 277 1 137 1 359 1 280 1 218 1 18 1 346 1 144 1 348 1 35 1 264 1 285 1 
40 1 234 1 28 1 
40 1 234 1 28 1 
365 1 162 1 
365 1 162 1 28 1 
65 1 311 1 
105 2 106 1 185 1 326 1 24 1 156 1 65 1 328 1 212 1 5 1 161 1 11 1 335 1 303 1 52 1 137 1 55 1 280 2 218 1 311 1 172 1 143 1 219 1 18 2 346 2 348 1 264 2 
40 1 234 1 
365 1 162 1 28 1 
105 1 346 1 351 1 280 1 
124 2 90 2 31 1 183 1 79 1 62 1 291 1 206 1 344 1 345 1 175 1 74 1 214 1 252 2 366 1 251 1 163 1 369 1 334 2 
124 1 90 1 31 1 79 1 62 1 291 1 206 1 33 1 344 1 345 1 175 1 214 1 252 1 251 1 163 1 369 1 334 2 
181 1 134 1 124 1 90 1 62 1 236 1 344 1 211 1 345 1 282 1 252 1 366 1 46 1 8 1 
124 1 90 1 31 1 79 1 62 1 291 1 206 1 344 1 345 1 175 1 74 1 214 1 252 1 366 1 251 1 163 1 369 1 334 2 
37 1 
35 1 287 1 22 1 290 1 254 1 325 1 48 1 
123 1 182 1 22 1 290 1 327 1 24 1 48 1 306 1 137 1 357 1 199 1 173 1 35 2 223 1 180 1 75 1 20 1 
181 1 123 1 134 1 182 1 124 1 90 1 216 1 62 1 340 1 153 1 199 1 141 1 345 1 282 1 240 1 252 1 180 1 
267 1 123 2 182 2 76 2 107 1 22 2 290 5 269 2 81 1 245 5 270 2 189 2 24 1 43 1 329 1 159 2 332 1 48 8 256 1 71 2 306 1 32 1 137 1 95 1 56 1 199 2 357 3 15 1 360 5 35 5 263 1 121 1 20 1 75 6 180 2 
266 1 123 1 182 1 105 1 76 2 2 1 226 1 125 1 128 1 207 1 290 2 292 1 189 1 24 1 84 1 132 1 48 2 71 2 277 1 32 1 137 1 199 1 280 1 18 1 346 1 102 1 180 1 264 1 
123 1 182 1 22 1 290 1 199 1 325 1 35 1 254 1 180 1 48 1 
71 2 76 2 32 1 269 2 290 5 245 5 357 5 360 5 270 2 189 2 176 1 159 2 35 5 75 10 48 5 
24 1 306 1 137 1 35 1 22 1 20 1 
181 1 123 2 267 2 182 1 124 4 62 1 129 2 227 1 290 2 24 3 211 1 252 4 46 1 48 2 134 2 90 4 306 4 72 1 137 3 199 2 98 1 100 1 59 1 201 1 345 1 282 1 263 2 180 2 20 2 
147 1 265 1 181 1 124 1 105 3 226 1 62 1 326 1 272 1 190 1 86 1 192 2 252 1 115 1 116 1 134 1 136 1 277 2 90 1 340 1 198 1 307 1 280 3 118 1 101 1 18 2 345 1 220 1 346 2 282 1 222 1 264 2 
123 1 267 1 182 1 22 2 290 2 245 2 357 2 199 1 16 1 360 2 35 4 263 1 75 4 180 1 48 1 
11 1 212 1 249 1 
11 1 212 1 249 1 
11 1 212 1 249 1 
343 1 11 1 196 1 212 1 311 1 
11 1 158 1 212 1 
11 1 158 1 212 1 
11 1 158 1 212 1 
11 1 212 1 
185 1 218 1 
115 4 147 2 266 1 338 3 76 1 42 1 184 1 198 2 130 1 307 2 16 1 108 2 235 1 292 1 189 1 132 1 281 4 190 2 220 8 192 4 
115 3 266 1 338 2 76 1 287 1 130 1 16 1 235 1 108 2 292 1 189 1 132 1 281 3 220 6 
115 2 147 1 338 2 76 1 42 1 198 1 269 1 307 1 108 1 189 1 270 1 190 1 281 2 159 1 220 4 364 1 192 2 
43 1 115 1 281 1 329 1 220 2 121 1 
43 1 115 1 51 1 281 1 220 2 121 1 
115 1 220 1 121 1 
43 1 281 1 220 1 
147 1 115 3 338 3 76 1 42 1 198 1 269 1 307 1 108 2 270 1 189 1 190 1 281 3 176 1 220 6 159 1 364 1 192 2 
147 1 115 1 77 1 198 1 307 1 43 1 281 1 190 1 329 1 220 2 332 1 192 2 121 1 
115 3 266 1 338 2 76 1 42 1 108 1 292 1 189 1 132 1 281 3 220 6 
115 2 147 1 266 1 338 2 30 1 42 1 184 1 198 1 130 1 307 1 108 1 235 1 292 1 281 1 190 1 220 3 192 2 
147 1 115 5 266 2 338 5 77 1 42 2 76 2 198 1 207 1 307 1 108 3 292 2 189 2 132 1 190 1 281 5 220 10 192 2 
147 1 338 1 77 1 76 1 42 1 198 1 307 1 270 1 190 1 281 2 220 2 192 2 
115 2 147 1 338 2 77 1 76 1 42 1 198 1 269 1 307 1 108 1 189 1 270 1 190 1 281 2 159 1 220 4 192 2 
115 2 147 3 266 1 30 1 338 2 77 1 42 1 184 1 198 3 307 3 169 1 108 1 292 1 190 3 281 1 220 3 192 6 
147 3 115 1 13 1 77 1 198 3 307 3 169 1 43 1 281 1 190 3 329 1 220 2 364 1 192 6 121 1 
147 1 115 1 77 1 198 1 307 1 43 1 281 1 190 1 329 1 220 2 332 1 192 2 121 1 
147 2 115 1 77 1 198 2 307 2 43 1 281 1 190 2 329 1 220 2 364 1 332 1 192 4 121 1 
147 3 266 1 42 1 77 1 76 3 184 1 107 1 130 1 269 2 108 3 292 1 270 2 189 3 43 1 132 1 190 3 329 1 159 2 332 1 192 6 115 10 256 1 338 4 95 1 198 3 307 3 16 1 235 1 15 1 281 9 220 19 364 1 121 1 
147 1 115 1 77 1 198 1 307 1 43 1 281 1 190 1 329 1 220 2 332 1 192 2 121 1 
147 1 115 1 77 1 198 1 307 1 43 1 281 1 190 1 329 1 220 2 332 1 192 2 121 1 
147 1 42 1 77 1 76 2 107 1 269 2 108 1 270 2 189 2 43 1 190 1 329 1 159 2 332 1 192 2 115 6 256 1 338 2 95 1 198 1 307 1 15 1 281 6 220 12 121 1 
147 2 115 1 77 1 198 2 307 2 43 1 281 1 190 2 329 1 220 2 364 1 332 1 192 4 121 1 
147 2 115 1 77 1 198 2 307 2 169 1 43 1 281 1 190 2 329 1 220 2 332 1 192 4 121 1 
115 4 266 3 338 6 42 3 76 1 130 1 235 2 108 3 292 3 189 1 132 1 281 3 220 7 
147 2 115 1 77 1 198 2 307 2 169 1 43 1 281 1 190 2 329 1 220 2 332 1 192 4 121 1 
105 1 346 1 239 1 280 1 326 1 49 1 188 1 
233 1 105 1 346 1 352 1 221 1 239 1 6 1 97 1 280 1 326 1 49 1 188 1 
181 1 134 1 211 1 124 1 345 1 90 1 282 1 62 1 287 1 252 1 46 1 
116 1 181 1 134 1 124 1 336 1 105 2 90 1 62 1 340 1 280 2 326 1 345 1 18 1 282 1 346 1 222 1 252 1 264 1 
116 1 181 3 124 1 336 1 105 2 90 1 62 1 340 2 129 1 280 2 326 1 73 1 84 1 345 1 18 2 282 2 346 2 202 1 222 1 283 1 252 1 301 1 264 1 
181 3 124 2 336 1 105 2 90 2 126 1 62 1 340 2 129 1 280 2 326 1 73 1 84 1 345 1 18 2 282 2 346 2 202 1 222 1 298 1 283 1 252 2 301 1 264 1 
134 1 181 4 124 3 90 3 306 1 126 1 137 2 62 1 22 1 340 1 129 1 153 1 140 1 24 2 210 1 363 1 345 1 282 1 133 1 35 1 202 1 283 1 252 3 
134 1 181 4 124 3 90 3 306 1 126 1 137 2 62 1 22 1 340 1 129 1 167 1 153 1 140 1 24 2 210 1 345 1 282 1 35 1 202 1 283 1 252 3 
29 1 124 1 345 1 90 1 62 1 252 1 
29 1 318 1 122 1 134 2 181 3 124 6 304 1 242 1 90 7 183 1 62 2 340 1 168 1 4 1 345 3 175 1 282 2 240 1 252 7 203 1 9 1 
147 2 266 1 181 1 265 1 124 1 105 2 76 1 183 1 62 1 320 1 130 1 108 2 323 1 326 2 292 1 189 1 132 1 272 2 190 2 27 1 86 1 297 1 192 4 215 1 252 1 115 3 116 1 136 2 338 2 336 1 164 1 90 1 340 1 198 2 307 2 16 1 235 1 280 2 281 3 345 1 18 1 220 6 282 1 346 1 222 1 370 1 264 1 
123 2 181 2 124 1 182 2 22 1 290 1 153 1 154 1 325 1 24 3 210 1 252 1 254 1 48 1 302 1 134 1 90 1 306 2 52 1 137 3 199 2 167 1 98 1 140 1 60 1 35 1 180 2 20 1 
29 1 181 1 124 1 90 1 216 1 62 1 340 1 140 1 345 1 282 1 66 1 240 1 252 1 
232 1 134 1 181 1 124 4 90 4 126 1 183 1 62 1 211 1 345 1 282 1 252 4 46 1 
122 1 181 1 124 2 242 1 90 2 62 1 129 1 340 1 342 1 85 1 345 2 282 1 331 1 252 2 
134 1 124 1 345 1 90 1 31 1 79 1 62 1 214 1 252 1 334 1 
181 1 124 2 345 1 90 2 282 1 175 1 183 1 62 1 259 1 252 2 203 1 
232 1 318 1 134 1 181 3 124 4 90 5 183 1 62 2 129 1 168 1 211 1 345 2 282 2 252 5 46 1 203 1 
232 1 318 1 134 1 181 3 124 4 70 1 90 5 183 1 62 2 129 1 211 1 345 2 282 2 252 5 46 1 203 1 
181 1 134 1 124 1 336 1 105 2 90 1 62 1 340 1 280 2 326 1 345 1 18 1 282 1 346 1 222 1 298 1 252 1 264 1 
122 1 181 1 124 1 304 1 242 1 90 1 62 1 129 1 340 1 345 2 282 1 240 1 252 1 
54 1 68 1 324 1 326 1 231 1 
41 1 52 1 137 2 54 2 22 1 358 1 324 1 326 1 109 1 73 1 24 2 210 1 84 1 35 1 145 1 68 2 260 1 301 1 231 2 
351 1 54 1 324 1 231 1 
41 1 145 1 324 1 
312 1 120 1 287 1 279 1 
312 1 148 1 119 1 120 1 88 1 279 1 317 1 
157 1 354 1 88 1 
148 3 276 1 82 2 279 1 310 1 312 1 119 1 120 1 88 3 284 1 7 1 317 1 
312 1 148 2 119 1 78 1 120 1 205 1 88 2 279 1 317 1 
148 1 119 1 276 1 31 1 291 1 88 1 57 1 308 1 317 1 334 1 
312 1 148 1 119 1 276 1 120 1 88 1 317 1 
148 1 119 1 276 1 120 2 88 1 279 1 317 1 
148 2 276 1 286 1 187 1 312 1 119 2 120 1 36 1 88 2 317 2 
148 3 276 1 205 2 279 1 57 1 312 1 119 1 120 1 353 1 88 3 367 1 368 1 317 1 
148 2 276 1 31 1 79 1 166 1 291 1 205 1 279 1 312 1 119 1 120 1 88 2 163 1 317 1 334 2 
148 4 276 1 78 1 205 2 279 1 57 1 312 1 119 2 177 1 120 1 88 4 367 1 317 2 
312 1 148 1 119 1 276 1 120 1 88 1 279 1 317 1 
148 4 205 2 82 1 279 2 57 1 310 1 312 2 119 1 230 1 120 2 88 4 367 1 7 1 317 1 
148 2 274 1 276 1 205 1 246 1 279 1 312 1 119 1 120 1 88 2 253 1 317 1 
148 3 276 1 82 2 279 1 310 1 312 1 119 1 120 1 88 3 7 2 317 1 179 1 
312 2 17 2 200 1 131 1 
148 1 119 1 276 1 88 1 262 1 317 1 
312 1 148 2 119 1 276 1 120 1 205 1 353 1 88 2 279 1 317 1 
229 1 
312 1 148 1 119 1 276 1 120 1 88 1 279 1 317 1 
148 3 276 1 205 1 82 1 279 1 312 1 119 1 120 1 353 1 88 3 317 1 
148 1 205 1 88 1 367 1 57 1 
312 1 120 1 

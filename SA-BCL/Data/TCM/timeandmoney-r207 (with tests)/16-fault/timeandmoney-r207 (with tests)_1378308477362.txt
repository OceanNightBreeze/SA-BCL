#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 134 98 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 134 98 296 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 134 98 296 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 173 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 173 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
237 1 244 1 24 1 181 1 354 1 186 1 
237 1 244 1 24 1 181 1 354 1 186 1 
237 1 244 1 24 1 181 1 354 1 186 1 
237 1 244 1 24 1 181 1 354 1 186 1 
251 1 237 1 133 1 134 1 244 1 159 1 24 2 271 1 316 1 354 1 307 1 186 2 98 1 
237 1 333 1 0 1 310 1 183 1 186 2 20 1 240 1 133 1 134 1 244 1 188 1 232 1 24 2 354 1 84 1 
237 2 251 1 183 1 184 1 186 3 20 1 244 2 232 1 24 3 159 1 354 1 249 1 84 1 
237 2 251 3 45 1 183 1 296 1 184 2 186 7 41 1 61 1 133 1 134 1 244 2 24 7 159 5 271 1 316 1 354 1 307 1 249 1 98 1 
237 2 251 3 45 1 183 1 296 1 184 2 186 7 41 1 61 1 133 1 134 1 244 2 24 7 159 5 271 1 316 1 354 1 307 1 249 1 98 1 
29 1 73 1 173 1 
29 1 347 2 10 1 
257 2 40 2 280 2 46 2 281 1 292 2 169 2 211 1 
280 2 46 2 281 1 100 1 195 1 150 1 198 1 200 1 288 1 103 1 289 1 177 1 267 1 338 1 292 2 77 1 245 1 51 2 342 2 318 2 37 2 162 1 40 3 17 1 297 1 228 2 211 1 60 1 255 1 217 1 257 3 121 1 169 2 123 1 331 1 236 1 43 1 
257 1 40 1 280 1 46 1 292 1 169 1 79 1 211 1 19 1 116 1 
29 1 40 1 238 1 46 1 324 1 364 1 165 1 366 1 229 1 73 1 257 1 118 1 79 1 226 1 
29 1 280 1 40 1 238 2 46 1 324 1 364 1 165 2 229 1 73 1 257 1 118 1 169 1 292 1 79 1 
256 1 363 1 238 1 165 1 248 1 
29 1 363 1 238 2 129 1 110 1 165 2 248 1 73 1 
238 1 165 1 248 1 
363 1 238 1 280 1 40 1 46 1 263 1 211 1 165 1 19 1 116 1 257 1 169 1 292 1 79 1 
29 1 
29 1 363 1 238 2 269 1 110 1 165 2 248 1 73 1 
29 2 280 1 238 5 46 1 263 1 73 2 152 1 131 1 292 1 7 2 339 1 358 2 9 5 79 1 36 1 224 2 80 1 110 1 248 2 11 1 52 2 319 2 363 2 40 1 227 4 211 1 141 1 165 5 19 1 166 1 116 1 216 1 257 1 367 2 169 1 189 1 190 1 220 1 
280 1 40 2 355 1 46 1 100 1 297 1 228 1 198 1 150 1 288 1 257 2 267 1 292 1 123 1 258 1 245 1 318 1 37 1 39 1 162 1 
281 1 173 1 
40 2 280 1 46 2 281 2 86 1 31 1 257 2 169 1 292 1 
204 1 185 1 39 1 
40 1 281 1 100 1 297 1 365 1 228 1 150 1 198 1 288 1 257 1 267 1 123 1 245 1 318 1 37 1 162 1 
257 3 40 3 280 3 46 3 281 1 169 1 292 3 258 1 
257 1 40 1 280 1 46 1 292 1 79 1 116 1 
257 1 40 1 280 1 46 1 292 1 169 1 86 1 79 1 31 1 
280 3 238 1 355 1 46 3 281 1 100 1 195 1 198 1 150 1 103 1 221 1 288 1 289 1 177 1 267 1 155 1 338 1 292 3 77 1 245 1 51 1 79 1 342 2 318 1 37 1 162 1 40 4 324 1 86 1 364 1 297 1 228 1 211 1 165 1 229 1 255 1 217 1 257 4 118 1 169 2 123 1 258 1 331 1 236 1 
257 2 40 2 280 1 241 1 46 2 281 1 292 1 258 1 366 1 
29 1 238 1 280 3 40 3 355 1 46 3 324 1 86 1 364 1 312 1 165 1 229 1 221 1 257 3 118 1 169 1 292 3 258 2 79 1 
257 2 40 2 280 2 46 2 292 2 169 1 86 1 258 1 185 1 39 1 
40 1 281 1 100 1 297 1 228 1 150 1 198 1 288 1 257 1 267 1 123 1 245 1 318 1 37 1 162 1 
281 1 228 1 288 1 79 1 318 1 343 1 370 1 37 1 
194 1 289 1 154 1 177 1 75 1 338 1 204 2 358 1 77 1 51 4 359 1 342 2 52 1 39 2 17 2 298 1 185 2 302 1 217 1 234 1 97 1 331 1 26 1 236 2 
257 1 40 1 280 1 46 1 324 1 292 1 79 1 139 1 
280 4 40 5 355 1 46 5 281 1 86 1 366 1 257 5 241 1 94 1 292 4 169 1 258 2 96 1 
257 2 40 2 280 2 46 2 292 2 79 1 139 1 116 1 
95 1 89 1 
95 1 89 1 
350 1 351 1 
350 1 351 1 
350 1 351 1 
168 1 95 1 89 1 
168 1 95 1 89 1 
337 1 95 1 89 1 
93 1 95 2 350 1 89 2 351 1 144 1 
168 1 95 1 89 1 
95 1 89 1 145 1 
95 1 89 1 145 1 
95 1 89 1 145 1 
29 1 238 2 112 1 89 2 58 2 165 2 167 2 213 1 336 1 265 1 144 1 266 1 178 2 291 2 277 1 120 1 95 2 138 2 28 3 
280 2 238 1 46 2 281 1 239 1 178 1 337 1 292 2 272 1 138 1 344 1 273 1 40 2 321 1 322 1 253 1 89 1 58 1 165 1 167 1 257 2 120 1 95 1 28 1 
133 1 134 1 307 1 
333 1 133 1 134 1 
333 1 179 1 133 3 303 1 307 2 38 1 
333 1 179 1 133 2 307 1 38 1 332 1 
333 1 179 1 133 2 307 1 38 2 
29 2 238 5 261 2 30 1 287 1 73 1 154 1 135 2 7 1 358 1 9 2 247 1 224 1 110 1 10 1 248 1 209 1 52 1 344 1 273 1 363 4 140 1 321 1 347 3 56 2 227 3 141 1 165 5 367 1 26 1 260 1 371 1 
29 1 363 2 40 1 280 1 238 2 46 1 263 1 18 1 211 1 165 2 19 1 73 1 116 1 256 1 257 1 105 1 292 1 169 1 146 1 79 1 248 1 
29 3 238 3 261 1 73 1 287 1 154 1 7 1 135 2 358 1 9 2 224 1 80 1 10 2 209 1 344 1 52 1 363 2 140 1 347 4 227 3 56 2 165 3 367 1 260 1 26 1 371 1 
29 4 238 4 261 2 73 1 287 1 154 2 135 4 7 1 358 2 9 4 78 1 207 1 224 1 80 1 10 3 182 1 209 2 344 2 52 2 140 1 363 3 347 7 56 4 227 5 165 4 367 1 260 1 26 2 371 1 
149 1 297 1 173 1 
297 1 278 1 
85 1 
100 1 297 1 
100 1 149 2 297 3 369 1 47 1 162 1 
100 1 297 1 162 1 
68 1 297 1 
101 1 151 1 152 2 131 1 132 1 358 2 206 1 51 9 210 1 52 2 17 5 326 1 298 3 166 2 234 4 190 1 42 1 236 4 
101 1 151 1 152 2 132 3 131 1 358 2 206 1 51 9 210 1 52 2 17 5 326 1 298 3 166 2 234 6 190 1 42 1 236 4 
101 1 151 1 152 2 132 1 131 1 358 2 206 1 51 9 210 1 52 2 17 5 326 1 298 3 166 2 304 1 234 4 190 1 42 1 236 4 
17 1 206 2 51 1 326 1 293 1 151 1 210 1 
101 1 71 1 289 2 152 2 131 1 177 2 132 2 338 2 76 1 358 2 206 1 51 11 342 4 52 2 210 1 323 1 17 6 326 1 298 4 166 2 190 1 234 6 42 1 331 2 236 5 
237 1 333 1 128 1 32 1 150 1 198 1 180 1 133 2 134 1 244 1 159 1 318 1 81 1 295 1 37 1 84 1 183 1 349 1 228 1 300 1 186 2 20 1 119 1 303 1 232 1 24 2 354 1 219 1 307 1 172 1 
237 1 333 1 128 1 264 1 32 1 285 1 150 1 198 1 180 1 133 2 134 1 244 1 159 2 318 1 295 1 37 1 84 1 183 1 349 1 228 1 300 1 186 3 20 1 303 1 232 1 24 3 305 1 219 1 307 1 172 1 
333 1 128 1 264 1 32 1 285 1 150 1 198 1 180 1 133 2 134 1 159 2 318 1 295 1 37 1 84 1 183 1 349 1 228 1 300 1 186 2 20 1 303 1 232 1 24 2 307 1 
237 1 99 1 100 1 198 1 32 2 150 1 5 1 288 1 315 1 180 2 222 1 244 1 318 1 37 1 183 2 349 2 297 1 228 1 301 1 186 1 115 1 24 1 305 1 
237 1 333 1 128 1 264 1 32 1 150 1 198 1 180 1 133 2 134 1 244 1 318 1 295 1 37 1 183 1 349 1 228 1 300 1 186 1 119 1 303 1 24 1 354 1 219 1 307 1 172 1 
243 1 
238 2 99 1 100 2 148 1 198 3 150 2 48 1 288 2 202 1 203 1 7 1 222 1 8 1 9 1 224 1 340 1 110 1 318 2 248 2 37 2 162 1 140 1 252 1 297 2 228 2 227 1 141 1 165 2 367 1 
238 3 46 1 3 1 269 1 136 1 79 1 110 1 248 2 360 1 226 1 40 1 54 1 324 1 364 1 87 2 165 3 366 1 229 1 117 1 257 1 118 1 218 1 
29 1 238 3 46 1 3 1 102 1 73 1 269 1 79 1 110 1 248 1 360 1 226 1 40 1 54 1 324 1 364 1 87 3 165 3 229 1 366 1 117 1 257 1 118 1 218 1 
29 1 238 3 46 1 3 1 102 1 73 1 269 1 136 1 79 1 110 1 248 2 360 1 226 1 40 1 54 1 324 1 364 1 87 3 165 3 229 1 366 1 117 1 257 1 118 1 218 1 171 1 
29 1 280 1 238 3 46 2 263 1 3 1 73 1 269 1 292 1 136 2 79 2 110 1 248 3 360 1 82 1 226 1 40 2 54 1 324 1 364 1 87 2 211 1 165 3 19 1 366 1 229 1 116 1 117 1 257 2 118 1 169 1 306 1 218 1 171 2 
238 4 46 1 334 1 3 1 102 2 7 1 9 1 294 1 110 2 10 2 248 4 54 1 347 2 113 2 165 4 117 1 257 1 118 1 218 1 171 2 67 2 29 2 73 1 34 2 136 2 79 1 224 1 360 1 226 1 40 1 324 1 364 1 87 4 227 1 141 1 229 1 366 1 328 1 230 2 367 1 
29 1 238 4 46 1 3 1 102 2 73 1 34 2 7 1 136 2 9 1 79 1 110 2 294 1 341 1 224 1 248 4 10 2 360 1 226 1 40 1 54 1 324 1 364 1 113 2 87 4 227 1 141 1 165 4 229 1 366 1 328 1 230 2 92 1 117 1 257 1 21 1 118 1 367 1 171 2 218 1 67 2 
29 1 238 4 46 1 3 1 102 2 73 1 34 2 7 1 136 2 9 1 79 1 110 2 294 1 341 1 224 1 248 4 10 2 360 1 226 1 40 1 54 1 324 1 364 1 113 2 87 4 227 1 141 1 165 4 229 1 366 1 328 1 230 2 92 1 117 1 257 1 21 1 118 1 367 1 171 2 218 1 67 2 
29 1 238 4 46 1 3 1 102 2 73 1 270 1 157 2 34 2 7 1 136 2 9 1 158 1 79 1 110 2 317 2 294 1 224 1 248 4 360 1 226 1 40 1 54 1 347 2 324 1 364 1 113 2 87 4 227 1 141 1 165 4 229 1 366 1 91 1 117 1 257 1 21 1 118 1 367 1 171 2 218 1 
29 1 238 4 46 1 3 1 102 3 73 1 34 2 7 1 9 1 136 3 79 1 110 2 294 1 224 1 341 1 10 2 248 5 360 1 226 1 40 1 54 1 324 1 364 1 113 2 87 5 227 1 141 1 165 4 229 1 366 1 328 1 230 2 92 1 117 1 257 1 21 1 118 1 367 1 218 1 306 1 171 3 67 2 
29 1 238 4 46 1 3 1 102 3 73 1 34 2 7 1 9 1 136 3 79 1 110 2 294 1 224 1 341 1 10 2 248 5 360 1 226 1 40 1 54 1 324 1 364 1 113 2 87 5 227 1 141 1 165 4 229 1 366 1 328 1 230 2 92 1 117 1 257 1 21 1 118 1 367 1 218 1 306 1 171 3 67 2 
238 4 46 1 334 1 3 1 102 2 157 2 7 1 9 1 294 1 110 2 248 4 54 1 347 2 113 2 165 4 117 1 257 1 118 1 218 1 171 2 29 1 73 1 270 1 34 2 136 2 79 1 224 1 317 2 360 1 226 1 40 1 324 1 364 1 87 4 227 1 141 1 229 1 366 1 367 1 
298 1 101 1 166 1 152 1 289 1 302 1 177 1 217 1 338 1 77 1 234 1 342 2 42 1 331 1 173 1 
281 1 195 1 283 1 289 2 177 2 154 1 338 2 204 8 77 2 358 1 35 1 51 12 79 1 342 4 209 2 52 2 39 8 53 1 17 7 298 1 90 1 185 2 60 1 217 1 22 2 368 1 234 1 191 2 370 1 27 1 331 2 26 2 236 5 
280 1 355 1 46 1 69 1 281 1 100 1 195 1 283 1 198 1 150 1 199 1 288 1 289 1 177 1 267 1 338 1 292 1 77 1 245 1 51 2 318 1 342 2 37 1 162 1 40 2 17 1 297 1 228 1 365 1 185 1 60 1 352 1 217 1 257 2 123 1 258 1 331 1 236 1 
280 1 46 1 281 1 100 2 195 1 283 1 101 1 150 2 198 2 288 1 103 2 152 2 289 3 154 2 338 3 292 1 204 6 245 2 51 22 108 2 342 6 209 2 52 4 161 1 162 2 17 11 297 2 298 5 166 2 60 1 257 3 217 3 122 2 123 2 258 1 124 2 26 2 355 1 132 1 131 1 177 3 267 2 77 3 358 4 79 1 318 1 37 1 39 6 40 3 228 1 325 2 185 6 142 1 190 1 234 6 42 1 370 1 331 3 236 11 
280 1 46 1 99 1 100 2 195 1 264 1 286 1 198 2 150 2 288 2 200 2 289 2 177 2 338 2 292 1 222 1 77 2 51 2 318 8 342 4 81 1 37 8 345 1 40 1 14 1 17 1 297 3 228 7 59 1 60 1 302 1 257 1 217 2 258 1 170 1 259 1 331 2 308 1 236 1 
280 1 46 1 283 1 289 1 177 1 154 1 338 1 204 1 292 1 77 1 358 1 51 3 342 2 209 1 52 1 39 1 40 1 163 1 17 1 86 1 298 1 185 1 217 1 257 1 169 1 234 1 331 1 26 1 236 2 
17 2 185 1 289 1 132 1 302 1 177 1 217 1 338 1 204 1 77 1 51 2 234 1 342 2 97 1 331 1 26 1 52 1 39 1 
298 1 185 1 289 1 302 1 177 1 154 1 217 1 338 1 204 1 77 1 358 1 51 2 234 1 359 1 342 2 331 1 39 1 236 2 
289 1 177 1 132 1 154 1 338 1 204 2 77 1 358 1 51 4 342 2 209 1 52 1 39 2 17 2 298 1 185 2 302 1 217 1 234 2 26 1 331 1 236 2 
17 2 185 1 289 1 132 1 177 1 217 1 338 1 204 1 77 1 51 2 234 1 342 2 97 1 308 1 331 1 26 1 52 1 39 1 
298 1 185 1 289 1 177 1 154 1 217 1 338 1 204 1 77 1 358 1 51 2 234 1 359 1 342 2 308 1 331 1 39 1 236 2 
289 1 177 1 132 1 154 1 338 1 204 2 77 1 358 1 51 4 342 2 209 1 52 1 39 2 17 2 298 1 185 2 217 1 234 2 26 1 331 1 308 1 236 2 
289 1 177 1 132 1 154 1 338 1 204 2 77 1 358 1 51 4 342 2 209 1 52 1 39 2 17 2 298 1 185 2 217 1 234 2 26 1 331 1 236 2 
281 1 100 1 195 1 198 1 150 1 103 1 288 1 289 1 177 1 267 1 338 1 77 1 245 1 51 2 318 1 342 2 37 1 162 1 40 1 17 1 297 1 228 1 60 1 257 1 217 1 123 1 331 1 236 1 
127 1 281 1 195 1 228 1 288 1 289 1 177 1 217 1 338 1 77 1 51 1 79 1 318 1 342 2 370 1 343 1 37 1 331 1 236 1 
283 1 289 1 177 1 132 1 154 1 338 1 204 2 77 1 358 1 51 4 342 2 209 1 52 1 39 2 17 2 298 1 185 2 217 1 234 2 26 1 331 1 236 2 
100 1 198 1 150 1 103 1 289 1 154 1 132 1 177 1 267 1 338 1 204 2 358 1 77 1 245 1 51 4 318 1 342 2 81 1 209 1 52 1 37 1 39 2 162 1 40 1 17 2 297 1 228 1 298 1 185 2 257 1 217 1 123 1 124 1 234 2 26 1 331 1 236 2 
280 1 46 1 283 1 289 1 154 1 132 1 177 1 338 1 292 1 204 1 358 1 77 1 51 3 342 2 209 1 52 1 39 1 40 1 17 2 86 1 185 1 214 1 217 1 257 1 169 1 234 1 331 1 26 1 236 1 
2 3 70 4 356 1 4 1 289 3 314 1 132 1 177 3 290 1 154 2 338 3 76 1 358 2 160 1 51 24 137 1 342 6 209 2 52 2 323 1 17 11 57 1 88 1 298 2 231 2 62 1 22 3 234 3 235 1 191 3 331 3 26 2 236 13 193 1 
2 2 70 4 356 1 4 1 289 3 314 1 177 3 290 1 154 2 338 3 76 1 358 2 160 1 51 22 137 1 342 6 209 2 52 2 323 1 17 10 88 1 298 1 231 1 62 1 22 2 234 1 235 1 191 2 331 3 26 2 236 12 193 1 
2 2 70 4 356 1 289 2 314 1 132 1 177 2 290 1 154 2 338 2 76 1 358 2 160 1 51 22 137 1 342 4 209 2 52 2 323 1 17 10 88 1 298 3 231 1 62 1 22 2 234 4 235 1 191 2 331 2 26 2 236 12 193 1 
2 2 70 3 356 1 4 1 289 3 314 1 177 3 290 1 154 2 338 3 76 1 358 2 160 1 51 20 137 1 342 6 209 2 52 2 323 1 17 9 88 1 298 2 231 1 22 2 25 1 234 2 235 1 191 2 331 3 26 2 236 11 193 1 
2 2 70 4 356 1 289 2 314 1 132 1 177 2 290 1 154 2 338 2 76 1 358 2 160 2 51 22 137 1 342 4 209 2 52 2 323 1 17 10 88 1 298 1 231 2 62 1 22 2 234 2 235 1 191 2 331 2 26 2 236 12 193 1 
266 1 178 1 106 1 95 1 89 1 58 1 138 1 167 1 265 1 144 1 
337 1 239 1 
178 1 95 1 89 1 58 1 114 1 138 1 167 1 104 1 33 1 
29 1 238 1 112 1 89 1 165 1 58 1 167 1 213 1 265 1 144 1 266 1 178 1 291 1 277 1 120 1 95 1 138 1 28 2 
29 1 238 1 112 1 89 1 165 1 58 1 167 1 213 1 265 1 144 1 266 1 178 1 291 1 277 1 120 1 95 1 138 1 28 2 
29 1 238 1 112 1 89 1 165 1 58 1 167 1 213 1 265 1 144 1 266 1 178 1 291 1 277 1 120 1 95 1 138 1 28 2 
168 1 93 1 147 1 
168 1 93 1 147 1 
205 1 145 1 
93 1 205 1 145 1 
253 1 272 1 
238 1 280 2 46 2 281 1 239 1 291 1 178 1 337 1 292 2 272 1 138 1 344 1 363 1 273 1 40 2 112 1 321 1 322 1 253 1 89 1 165 1 58 1 167 1 257 2 23 1 95 1 28 1 
168 1 147 1 
93 1 205 1 145 1 
46 2 100 1 282 1 195 1 283 1 198 1 150 1 200 2 289 1 177 1 156 1 338 1 77 1 51 2 318 2 342 2 37 2 40 2 16 1 17 1 297 1 228 2 60 1 217 1 257 2 329 1 279 1 170 1 259 1 331 1 236 1 
333 1 128 1 349 1 228 2 264 1 300 1 198 1 150 1 49 1 74 1 133 2 303 1 134 1 318 2 219 1 307 1 81 1 37 2 362 1 
333 1 128 1 349 1 228 1 264 1 300 1 150 1 198 1 143 1 74 1 133 2 303 1 134 1 318 1 219 1 307 1 37 1 
99 1 100 1 349 1 297 1 228 1 198 1 150 1 313 1 288 1 315 1 222 1 318 1 37 1 362 1 
333 1 128 1 349 1 228 1 264 1 300 1 198 1 150 1 49 1 74 1 133 2 303 1 134 1 318 1 219 1 307 1 37 1 362 1 
125 1 
29 1 216 1 9 1 227 1 189 1 73 1 173 1 
29 2 238 1 73 1 7 1 9 1 224 1 110 1 10 1 248 1 347 1 227 1 141 1 165 1 328 1 230 1 367 1 67 1 
238 5 100 2 149 2 335 2 198 3 150 2 47 1 288 1 153 1 154 2 7 4 9 8 339 2 108 2 340 1 110 3 111 1 248 5 10 6 209 2 52 2 162 2 250 1 346 1 347 12 348 2 297 7 56 6 299 1 165 5 216 1 118 2 26 2 29 8 311 2 130 2 73 2 135 6 358 2 224 4 318 3 81 1 37 3 319 2 140 2 227 9 228 3 141 4 327 1 367 4 278 3 189 1 330 2 
29 5 238 1 2 1 356 1 73 2 290 1 154 1 135 4 7 2 339 1 9 3 358 1 340 1 110 1 224 2 248 1 10 3 209 1 52 1 319 2 140 1 347 6 56 4 227 6 141 2 165 1 367 2 63 1 22 1 191 1 66 1 26 1 193 1 
238 1 280 1 46 1 263 1 152 1 131 1 7 1 292 1 339 1 9 2 358 1 79 1 224 1 52 2 319 2 40 1 227 2 141 1 211 1 165 1 19 1 166 1 116 1 92 1 257 1 367 1 169 1 190 1 
29 1 227 1 141 1 73 1 216 1 367 1 7 1 9 1 189 1 224 1 
29 5 347 10 56 5 227 5 154 2 135 5 339 1 9 5 358 2 108 1 10 5 209 2 26 2 52 2 319 2 
29 1 238 1 165 1 110 1 248 1 73 1 
238 1 99 1 100 2 148 1 198 3 150 2 48 1 288 2 202 1 203 1 7 1 222 1 8 1 9 1 224 1 340 1 110 1 318 2 248 2 37 2 162 1 140 1 252 1 297 2 228 2 227 1 141 1 165 1 327 1 367 1 
280 2 46 2 281 1 100 1 195 1 150 1 198 1 288 1 103 1 289 1 177 1 267 1 338 1 292 2 77 1 245 1 51 1 342 2 318 1 37 1 162 1 40 3 297 1 228 1 211 1 255 1 257 3 217 1 169 2 123 1 331 1 236 1 
140 1 29 4 347 4 326 1 56 2 227 1 141 1 73 2 367 1 135 2 7 1 9 2 224 1 340 1 10 2 
178 1 246 1 58 1 
178 1 246 1 58 1 
178 1 253 1 58 1 192 1 265 1 
178 1 246 1 58 1 
178 1 242 1 58 1 
178 1 242 1 58 1 
178 1 242 1 58 1 
178 1 58 1 
95 1 89 1 
2 1 356 1 289 1 290 1 177 1 154 1 338 1 76 1 358 1 51 7 342 2 209 1 52 1 17 3 298 1 22 1 234 1 191 1 331 1 26 1 236 4 193 1 
2 1 356 1 289 2 290 1 177 2 154 1 268 1 76 1 338 2 358 1 51 7 342 4 209 1 52 1 17 3 298 1 22 1 234 1 191 1 331 2 26 1 236 4 193 1 
2 1 356 1 101 1 152 2 289 3 132 1 131 1 290 1 177 3 154 1 268 1 338 3 76 1 358 3 51 16 342 6 209 1 52 3 323 1 17 7 298 4 166 2 22 1 190 1 234 5 42 1 191 1 331 3 26 1 236 9 193 1 
2 1 356 1 289 2 290 1 177 2 154 1 268 1 338 2 76 1 358 1 51 7 342 4 209 1 52 1 17 3 298 1 22 1 234 1 191 1 331 2 26 1 236 4 193 1 
2 1 356 1 289 1 290 1 177 1 154 1 338 1 76 1 358 1 51 7 342 2 209 1 52 1 17 3 298 1 22 1 234 1 191 1 331 1 26 1 236 4 193 1 
2 1 356 1 289 1 290 1 177 1 154 1 338 1 76 1 358 1 51 7 342 2 209 1 52 1 17 3 298 1 22 1 234 1 191 1 331 1 26 1 236 4 193 1 
2 1 356 1 289 3 290 1 177 3 154 1 268 1 338 3 76 1 358 1 51 8 342 6 209 1 52 1 323 1 17 3 298 1 22 1 234 1 191 1 331 3 26 1 236 5 193 1 
2 1 356 1 4 1 289 3 290 1 177 3 154 1 76 1 338 3 358 1 51 8 342 6 209 1 52 1 323 1 17 3 298 2 22 1 234 2 191 1 331 3 26 1 236 5 193 1 
17 2 298 3 101 1 166 3 152 3 131 1 132 3 358 1 51 5 234 6 190 1 42 1 52 1 236 3 
2 1 356 1 4 1 289 3 290 1 177 3 154 1 76 1 338 3 358 1 51 8 342 6 209 1 52 1 323 1 17 3 298 1 22 1 234 1 191 1 331 3 26 1 236 5 193 1 
101 1 152 2 289 2 177 2 132 3 131 1 338 2 358 2 51 12 342 4 52 2 323 1 17 6 298 3 166 2 234 6 190 1 42 1 331 2 236 6 
298 1 234 1 101 1 42 1 166 1 152 1 173 1 
17 2 298 1 289 1 154 1 177 1 132 1 268 1 338 1 358 1 51 4 234 2 342 2 209 1 331 1 26 1 52 1 236 2 
2 1 17 1 22 1 51 2 191 1 236 1 
101 1 152 2 289 1 131 1 154 2 132 2 177 1 338 1 358 4 51 20 35 1 342 2 209 2 52 4 53 1 323 1 17 10 298 4 90 1 166 2 22 2 190 1 234 6 42 1 191 2 26 2 331 1 236 10 
22 1 51 1 236 1 
17 1 51 1 191 1 
17 3 298 2 289 1 177 1 132 1 154 1 268 1 338 1 358 1 51 6 108 1 234 3 342 2 209 1 331 1 26 1 52 1 236 3 
2 1 356 1 289 1 290 1 177 1 154 1 338 1 76 1 358 1 51 7 342 2 209 1 52 1 17 3 298 1 22 1 234 1 191 1 331 1 26 1 236 4 193 1 
17 3 298 1 166 1 152 1 131 1 132 1 358 1 51 6 234 2 52 1 236 3 
323 1 17 1 298 1 101 1 166 1 72 1 152 1 289 1 132 1 177 1 338 1 51 3 234 2 42 1 342 2 331 1 236 2 
17 5 298 3 166 2 289 1 152 2 177 1 132 2 131 1 338 1 76 1 358 2 51 10 190 1 234 5 342 2 331 1 52 2 236 5 
17 2 289 1 177 1 132 1 76 1 338 1 51 2 234 1 342 2 331 1 26 1 52 1 
17 2 298 1 289 1 154 1 177 1 132 1 76 1 338 1 358 1 51 4 234 2 342 2 209 1 331 1 26 1 52 1 236 2 
323 1 17 1 4 1 298 1 72 1 166 1 289 3 152 1 177 3 132 1 76 1 338 3 51 3 234 2 342 6 331 3 236 2 
2 1 4 1 101 1 72 1 289 4 152 3 131 2 132 4 201 1 177 4 268 1 338 4 76 1 358 3 51 22 342 8 52 3 323 1 17 11 326 1 298 4 166 3 22 1 190 1 234 8 191 1 42 1 331 4 236 11 
257 1 40 1 187 1 46 1 241 1 281 1 366 1 
174 1 40 1 262 1 15 1 164 1 46 1 281 1 366 1 187 1 257 1 241 1 107 1 
99 1 100 1 222 1 297 1 228 1 318 1 198 1 150 1 37 1 288 1 173 1 
280 1 40 2 46 1 281 1 100 1 297 1 228 1 198 1 150 1 288 1 257 2 267 1 292 1 123 1 258 1 318 1 37 1 162 1 
280 1 46 2 281 1 100 2 150 1 198 1 267 1 292 2 79 2 318 1 37 1 162 2 346 1 40 2 324 1 364 1 297 2 228 1 299 1 257 2 123 1 258 1 370 1 
280 1 46 2 281 1 100 2 150 1 198 1 292 2 79 2 318 1 37 1 162 2 346 1 40 2 274 1 324 1 364 1 297 2 228 1 299 1 257 2 123 1 258 1 370 1 
29 1 280 1 44 1 238 2 46 1 263 1 100 1 149 1 197 1 150 1 198 1 73 1 292 1 79 1 248 1 318 1 37 1 162 1 346 1 40 1 297 3 228 1 211 1 299 1 165 2 19 1 116 1 257 1 118 1 169 1 278 1 
29 1 280 1 238 2 46 1 263 1 100 1 149 1 130 1 150 1 198 1 73 1 292 1 79 1 248 1 318 1 37 1 162 1 346 1 40 1 297 3 228 1 211 1 299 1 165 2 19 1 116 1 257 1 118 1 169 1 278 1 
14 1 228 1 318 1 198 1 150 1 37 1 
14 1 252 1 100 2 297 3 228 6 264 1 59 1 286 1 150 2 198 3 47 1 200 1 288 2 202 1 259 1 109 1 318 7 81 1 37 7 162 1 345 1 
280 1 46 1 281 1 282 1 100 1 283 1 101 1 150 1 198 1 103 1 289 2 152 2 338 2 292 1 245 1 51 8 342 4 52 2 162 1 17 4 297 1 298 3 166 2 257 2 217 2 123 1 124 1 258 1 132 1 177 2 131 1 267 1 77 2 358 2 79 1 318 1 81 1 37 1 40 2 325 1 228 1 234 4 190 1 42 1 370 1 331 2 236 4 
29 1 238 3 149 1 335 1 130 1 73 1 288 1 7 2 9 1 224 2 110 1 318 1 248 2 37 1 363 1 348 1 297 2 227 1 228 1 141 2 165 3 327 1 216 1 118 1 367 2 278 1 189 1 330 1 
14 1 100 1 149 1 297 2 228 2 150 1 198 2 47 1 318 2 111 1 81 1 37 2 162 1 
1 1 99 1 100 1 297 1 228 4 284 1 198 1 150 1 288 1 222 1 318 4 81 1 37 4 
252 1 100 1 148 1 297 1 228 2 299 1 196 1 150 1 198 2 48 1 202 1 318 2 37 2 162 1 
333 1 133 1 134 1 228 1 300 1 318 1 198 1 150 1 37 1 288 1 
16 1 100 1 297 1 228 2 264 1 150 1 198 1 259 1 318 2 81 1 37 2 
1 1 99 1 100 2 297 3 228 4 299 1 150 2 198 2 286 1 288 1 222 1 259 1 318 5 81 1 37 5 345 1 
1 1 99 1 100 2 297 3 228 4 299 1 275 1 150 2 198 2 286 1 288 1 222 1 259 1 318 5 81 1 37 5 
280 1 40 2 46 1 274 1 281 1 100 1 297 1 228 1 198 1 150 1 288 1 257 2 292 1 123 1 258 1 318 1 37 1 162 1 
252 1 100 1 297 1 228 1 299 1 150 1 198 2 47 1 202 1 109 1 318 1 37 1 162 1 
13 1 6 1 281 1 64 1 126 1 
29 1 363 1 13 2 238 2 281 1 324 1 364 1 165 2 229 1 73 1 221 1 6 2 118 1 64 2 79 1 223 1 65 1 208 1 126 1 
13 1 257 1 40 1 6 1 329 1 46 1 156 1 279 1 126 1 
223 1 208 1 126 1 
232 1 20 1 84 1 173 1 
237 1 244 1 232 1 24 1 186 1 20 1 84 1 
183 1 24 1 32 1 
237 1 0 2 212 1 186 3 20 1 50 1 244 1 232 1 24 3 354 1 225 1 84 1 
237 1 244 1 232 1 159 1 24 2 316 1 186 2 20 1 84 1 
251 1 237 1 133 1 134 1 244 1 24 1 271 1 354 1 307 1 186 1 
237 1 244 1 232 1 24 1 354 1 186 1 20 1 
237 1 244 1 24 1 354 1 186 1 20 2 84 1 
237 2 320 1 186 2 176 1 20 1 353 1 244 2 232 1 24 2 354 1 
237 1 251 1 45 1 184 1 186 3 41 1 20 1 244 1 232 1 24 3 159 2 354 1 84 1 
333 1 237 1 175 1 186 2 20 1 133 2 303 1 134 1 244 1 232 1 24 2 159 1 354 1 307 1 84 1 
237 2 251 1 254 1 184 1 186 4 20 1 244 2 232 1 24 4 159 2 316 1 354 1 84 1 
237 1 244 1 232 1 24 1 354 1 186 1 20 1 84 1 
237 1 251 1 0 1 184 1 212 1 186 4 20 2 244 1 232 2 159 2 24 4 83 1 225 1 84 2 
237 1 186 2 20 1 61 1 244 1 232 1 24 2 159 1 233 1 354 1 361 1 84 1 
237 1 0 2 212 1 186 3 20 1 244 1 232 1 24 3 354 1 12 1 225 2 84 1 
215 2 357 1 232 2 309 1 
237 1 244 1 24 1 354 1 186 1 276 1 
237 1 244 1 232 1 159 1 24 2 354 1 186 2 41 1 20 1 84 1 
55 1 
237 1 244 1 232 1 24 1 354 1 186 1 20 1 84 1 
237 1 0 1 186 3 41 1 20 1 244 1 159 1 24 3 232 1 354 1 84 1 
251 1 24 1 159 1 184 1 186 1 
232 1 20 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException 328 (20,208,273) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException 328 218 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException 328 218 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 32 75 275 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 32 75 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 328 (20,208,273) 60 99 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 8 38 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 8 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 8 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 8 171 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 8 171 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 216 124 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 25 14 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 32 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 328 218 131 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 328 218 131 217 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | CONDITION | 739 | if (x) -> if (!x)
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2703 | = null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 2 27 1 210 1 133 1 154 1 18 1 159 1 245 1 162 2 321 1 112 2 167 3 283 3 
287 1 45 1 210 2 133 1 52 1 134 1 90 1 18 1 139 2 146 1 149 2 27 4 268 1 30 1 196 2 154 1 311 2 244 1 159 1 245 6 319 2 162 2 321 3 277 1 112 5 326 1 167 9 283 9 
287 1 45 1 210 2 133 1 52 1 134 1 90 1 18 1 139 2 146 1 149 2 27 4 268 1 30 1 196 2 154 1 311 2 244 1 159 1 245 6 319 2 162 2 321 3 277 1 112 5 326 1 167 9 283 9 
287 1 45 1 210 2 133 1 52 1 134 1 90 1 18 1 139 2 146 1 149 2 27 5 268 1 30 1 196 2 154 1 311 2 244 1 159 1 245 7 319 2 162 2 321 4 277 1 112 6 326 1 167 10 283 10 
287 1 45 1 210 2 133 1 134 1 90 1 18 1 139 2 146 1 149 2 27 3 268 1 30 1 196 1 154 1 311 2 244 1 159 1 245 4 319 2 162 2 321 2 277 1 112 4 326 1 167 7 283 7 
149 1 45 1 27 2 133 1 196 2 52 1 154 1 311 1 18 1 244 1 245 3 139 1 319 1 321 1 162 1 112 3 167 4 283 4 
149 1 287 1 210 1 133 1 154 1 311 1 241 1 18 1 71 1 319 1 162 1 112 1 225 1 167 2 146 1 283 2 
45 1 210 1 133 1 52 1 18 1 139 1 224 1 149 2 27 4 268 1 196 2 154 1 311 1 244 1 159 1 245 7 319 1 321 3 162 2 277 1 163 1 112 5 167 9 283 9 
45 1 210 1 133 1 52 1 18 1 139 1 224 1 149 2 27 4 268 1 196 2 154 1 311 1 244 1 159 1 245 7 319 1 321 3 162 2 277 1 163 1 112 5 167 9 283 9 
62 1 65 1 266 1 46 1 195 1 15 1 273 1 257 1 155 1 318 1 165 1 145 1 92 1 327 1 
272 1 
273 2 265 1 318 1 253 1 272 1 302 1 195 2 312 1 
120 2 3 4 46 1 125 1 127 1 15 1 174 1 257 1 302 2 145 1 92 1 62 1 65 1 265 1 266 1 231 2 151 1 152 1 29 2 272 2 195 5 198 1 312 2 242 1 273 5 155 1 246 2 108 5 160 1 318 2 247 1 165 1 278 1 166 1 116 2 327 1 43 1 331 2 
272 1 117 1 312 1 
270 1 
155 2 257 1 62 2 72 1 266 2 145 2 92 2 327 2 
1 1 284 1 290 1 82 1 5 1 83 2 86 2 254 2 56 1 135 1 257 1 256 2 58 1 221 1 300 1 144 1 145 2 92 3 95 1 62 2 266 3 192 1 191 1 234 1 193 1 102 1 309 1 239 1 105 1 155 2 72 1 320 2 161 1 204 1 74 1 280 1 327 2 
62 1 65 1 266 1 46 1 257 1 155 1 165 1 145 1 92 1 327 1 
20 1 328 1 
208 1 46 1 9 1 15 1 257 1 145 2 92 2 62 2 65 2 266 2 269 1 272 1 195 2 240 1 312 1 273 2 155 2 165 1 327 2 
273 1 318 1 211 1 302 1 195 1 
273 2 265 1 64 1 318 1 272 1 302 1 195 2 312 1 
273 1 302 1 195 1 
62 1 65 1 123 1 266 2 16 1 155 1 72 1 145 2 92 2 185 1 327 1 
323 1 128 1 68 1 
284 1 285 1 266 1 5 1 191 1 102 1 309 1 86 1 254 1 56 1 256 1 58 1 72 1 204 1 92 1 280 1 
284 1 62 1 266 2 5 1 191 1 102 1 84 1 309 1 86 1 254 1 56 1 256 1 58 1 298 1 204 1 323 1 145 1 280 1 92 2 327 1 
72 1 117 1 
61 1 62 4 150 1 266 4 84 2 16 1 218 1 155 1 72 1 298 1 145 4 92 4 328 1 327 4 
62 1 65 1 266 1 46 1 145 1 92 1 327 1 
155 1 62 3 72 1 266 3 84 1 145 3 92 3 327 3 
62 1 65 1 266 1 46 1 145 1 92 1 327 1 
62 1 65 1 266 1 16 1 155 1 145 1 92 1 327 1 185 1 
1 1 284 1 208 1 290 1 82 1 5 1 83 2 84 1 9 1 12 1 86 1 254 1 16 1 56 1 257 1 256 1 58 1 138 1 298 1 221 1 144 1 145 3 92 4 95 1 62 3 65 1 266 4 269 1 192 1 191 1 234 1 102 1 309 1 195 1 239 1 240 1 273 1 155 2 72 1 320 1 161 1 204 1 280 1 327 3 
218 1 62 1 266 1 84 1 145 1 92 1 328 1 327 1 
208 1 62 3 65 1 266 3 269 1 272 1 84 2 308 1 195 1 9 1 12 1 16 1 240 1 273 1 155 1 298 1 145 3 92 3 327 3 
62 2 266 2 84 1 128 1 16 1 155 1 323 1 145 2 92 2 327 2 
284 1 266 1 5 1 191 1 102 1 309 1 86 1 254 1 56 1 256 1 58 1 72 1 204 1 92 1 280 1 
266 1 5 1 191 1 85 1 102 1 309 1 86 1 254 1 56 1 256 1 58 1 72 1 204 1 182 1 92 1 
251 1 290 1 82 1 6 1 83 2 128 2 132 1 221 2 263 1 95 1 98 1 231 1 192 1 234 1 236 1 68 2 197 1 105 2 274 1 161 1 320 4 205 1 323 2 116 1 
62 1 65 1 266 1 269 1 322 1 145 1 92 1 327 1 
314 1 44 1 330 1 
44 2 141 1 7 1 42 1 53 1 330 2 
44 1 330 1 
44 1 330 1 
141 1 42 1 
141 1 42 1 
141 1 42 1 
44 1 118 1 330 1 
44 1 118 1 330 1 
44 1 118 1 330 1 
44 1 202 1 330 1 
44 1 202 1 330 1 
44 1 202 1 330 1 
273 1 156 1 44 1 275 1 276 1 32 1 75 1 195 1 330 1 
156 1 44 1 276 1 32 1 75 1 330 1 
241 1 288 1 139 1 271 2 311 2 
139 1 319 1 311 1 
241 1 319 1 311 1 
241 1 158 1 288 1 139 2 271 1 311 3 
241 1 288 1 139 1 271 1 126 1 311 2 
3 1 46 1 15 1 257 1 178 1 222 1 181 1 302 1 145 1 92 1 62 1 65 1 265 1 66 2 231 1 266 1 305 1 29 1 28 1 270 1 272 1 195 5 197 1 312 1 242 1 243 1 273 5 155 1 108 2 199 1 246 1 316 1 318 4 165 1 166 1 325 1 327 1 331 1 
2 1 3 1 209 1 46 1 211 2 15 1 257 1 178 1 222 1 302 3 145 1 92 1 62 1 265 1 65 1 231 1 266 1 305 1 29 1 28 1 270 1 272 1 195 5 197 1 312 1 242 1 243 1 273 5 155 1 108 2 199 1 246 1 318 4 165 1 39 2 166 1 325 1 327 1 331 1 
3 1 46 1 15 1 174 1 257 1 57 1 178 1 222 1 181 1 145 1 92 1 62 1 65 1 66 1 266 1 231 1 29 1 305 1 270 2 272 2 195 3 197 1 312 1 273 3 243 1 155 1 316 1 246 1 199 1 108 2 318 2 165 1 325 1 327 1 331 1 
0 1 3 1 291 1 174 1 57 2 178 2 222 1 181 1 66 2 231 2 29 1 305 2 270 4 272 3 195 4 197 2 312 1 70 1 273 4 243 2 246 1 316 1 199 1 108 4 318 3 325 2 331 1 
186 1 
204 1 143 1 117 1 
204 1 216 1 
58 1 5 1 204 1 
204 1 119 1 
58 1 204 1 
121 1 58 1 5 1 204 3 143 2 91 1 
207 1 251 3 231 1 267 1 230 1 6 2 125 1 214 1 11 2 36 1 104 1 295 1 105 4 221 3 160 1 320 7 278 1 116 1 
207 5 251 8 290 2 6 3 125 2 83 4 50 1 11 3 13 4 55 1 295 1 296 1 258 1 221 12 263 1 95 2 94 1 229 4 267 1 230 2 231 5 67 1 305 4 234 2 36 1 197 4 104 2 105 19 37 2 160 2 317 1 320 31 161 2 278 1 116 2 249 1 
251 4 207 1 290 2 6 3 125 1 83 4 294 1 11 2 295 1 221 4 95 2 231 1 230 1 267 1 306 1 234 2 104 1 105 5 37 1 160 1 161 2 320 9 278 1 116 1 
207 1 251 3 231 1 230 1 267 1 6 2 125 1 11 2 36 1 104 1 295 1 105 4 221 3 160 1 320 7 278 1 116 1 
207 1 251 3 231 1 230 1 267 1 6 2 125 1 11 2 36 1 104 1 295 1 105 4 221 3 160 1 320 7 278 1 116 1 
79 2 149 1 252 1 210 2 190 1 292 2 191 1 309 1 130 1 86 1 254 1 56 1 136 1 256 1 58 1 203 1 204 1 162 1 223 1 24 1 167 1 250 2 283 1 
79 1 292 1 210 1 254 1 86 1 18 1 256 1 139 1 301 1 148 1 303 1 149 1 26 1 153 1 191 1 309 1 311 2 241 1 158 1 110 1 319 1 248 1 162 1 250 1 167 1 283 1 
79 1 292 1 210 1 133 1 254 1 86 1 18 1 256 1 139 1 140 1 301 1 148 1 303 1 149 1 26 1 191 1 309 1 154 1 311 2 241 1 158 1 245 1 110 1 319 1 248 1 162 1 112 1 250 1 167 2 283 2 
79 1 78 1 292 1 210 1 133 1 254 1 86 1 256 1 139 1 148 1 303 1 149 1 26 1 190 1 153 1 191 1 309 1 154 1 311 2 241 1 158 1 245 2 110 1 319 1 248 1 162 1 112 1 250 1 167 3 283 3 
79 1 78 1 210 1 292 1 133 1 254 1 86 1 256 1 139 1 303 1 153 1 191 1 309 1 154 1 311 2 241 1 158 1 245 2 110 1 248 1 319 1 112 1 250 1 167 2 283 2 
187 1 
3 1 130 1 254 2 86 2 56 2 297 1 256 2 58 1 20 1 260 1 222 1 302 2 223 1 60 1 265 1 99 1 29 1 191 1 34 1 309 1 195 2 242 1 315 1 273 2 246 1 108 1 204 1 328 1 331 1 329 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 2 265 1 20 1 99 1 253 1 34 1 302 1 195 2 328 1 60 1 
99 1 29 1 34 1 195 1 242 1 273 1 315 1 246 1 20 1 328 1 60 1 331 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
315 1 273 1 20 1 99 1 34 1 195 1 328 1 60 1 
99 1 29 1 34 1 195 1 242 1 273 1 315 1 246 1 20 1 328 1 60 1 331 1 
80 1 290 2 82 2 83 4 84 1 130 1 51 1 254 8 86 7 56 2 135 1 256 8 19 1 58 2 140 1 221 1 300 2 180 1 144 1 223 1 145 1 92 1 188 1 95 2 62 1 266 1 153 1 100 1 191 2 192 2 194 1 234 2 309 2 105 1 274 1 161 2 320 2 204 3 327 1 
168 1 290 1 82 1 83 2 16 1 145 1 92 1 226 1 95 1 62 1 266 1 231 1 305 1 192 1 234 1 197 1 105 1 155 1 161 1 320 1 327 1 
251 2 290 1 82 1 6 2 125 1 83 2 128 1 11 1 295 1 221 3 95 1 267 1 231 1 192 1 234 1 68 1 105 3 274 1 72 2 160 1 161 1 320 6 323 1 278 1 116 1 117 1 
251 1 207 1 290 2 82 1 47 1 83 4 128 3 13 3 296 1 135 1 221 6 179 1 144 1 263 1 226 1 95 2 229 3 231 2 305 2 192 2 234 2 68 11 197 2 105 8 157 1 72 1 317 1 161 2 320 14 323 11 116 1 249 1 
284 1 285 1 82 1 290 1 5 1 83 2 84 1 128 1 173 1 254 1 86 1 56 1 176 1 135 1 256 1 58 1 298 1 221 1 144 1 145 1 92 2 226 1 95 1 62 1 266 2 232 1 191 1 192 1 102 1 234 1 309 1 105 1 72 1 161 1 320 2 204 1 280 1 327 1 
251 3 82 3 6 2 5 2 83 6 84 1 254 1 86 1 256 1 92 3 262 1 95 3 97 2 267 1 266 3 192 3 191 2 102 2 197 2 105 11 204 2 278 1 115 2 206 2 116 2 280 2 207 1 284 2 122 1 123 1 290 3 125 1 128 4 295 1 56 1 135 1 58 2 298 1 221 7 144 1 145 1 226 1 62 1 65 1 152 1 231 4 305 2 234 3 309 2 68 4 310 2 239 2 72 1 160 1 161 3 320 18 323 4 327 1 
251 1 207 1 95 1 231 1 82 1 290 1 192 1 83 2 234 1 128 1 68 1 132 1 197 1 105 2 274 1 320 2 161 1 323 1 
251 1 95 1 98 1 82 1 290 1 6 1 192 1 83 2 234 1 128 1 68 1 274 1 221 2 320 2 161 1 323 1 116 1 263 1 
95 1 231 1 82 1 290 1 305 1 192 1 83 2 234 1 128 1 68 1 197 1 105 2 274 1 320 2 161 1 323 1 
251 1 207 1 188 1 95 1 231 1 82 1 290 1 192 1 83 2 234 1 128 1 68 1 132 1 197 1 105 2 320 2 161 1 323 1 
251 1 188 1 95 1 98 1 82 1 290 1 6 1 192 1 83 2 234 1 128 1 68 1 221 2 320 2 161 1 323 1 116 1 263 1 
188 1 95 1 231 1 82 1 290 1 305 1 192 1 83 2 234 1 128 1 68 1 197 1 105 2 320 2 161 1 323 1 
95 1 231 1 82 1 290 1 305 1 192 1 83 2 234 1 128 1 68 1 197 1 105 2 161 1 320 2 323 1 
284 1 82 1 290 1 5 1 83 2 254 1 86 1 56 1 135 1 256 1 58 1 221 1 144 1 92 1 95 1 266 1 191 1 192 1 102 1 234 1 309 1 239 1 105 1 72 1 320 2 161 1 204 1 280 1 
82 1 290 1 5 1 83 2 85 1 254 1 86 1 175 1 56 1 135 1 256 1 58 1 221 1 144 1 182 1 92 1 95 1 266 1 191 1 192 1 102 1 234 1 309 1 105 1 72 1 320 2 161 1 204 1 
226 1 95 1 231 1 82 1 290 1 305 1 192 1 83 2 234 1 128 1 68 1 197 1 105 2 320 2 161 1 323 1 
284 1 82 1 290 1 5 1 83 2 128 1 254 1 86 1 256 1 58 1 140 1 92 1 95 1 231 1 266 1 305 1 191 1 192 1 102 1 234 1 309 1 68 1 197 1 239 1 310 1 105 2 320 2 161 1 204 1 323 1 280 1 
290 1 82 1 83 2 16 1 221 1 145 1 92 1 263 1 226 1 95 1 62 1 266 1 231 1 305 1 192 1 234 1 68 1 197 1 105 2 155 1 109 1 161 1 320 3 323 1 116 1 327 1 
207 7 251 8 286 1 81 1 290 3 6 1 125 1 83 6 293 3 8 1 294 1 11 1 14 1 13 4 295 1 17 1 296 2 255 1 221 13 263 1 25 1 95 3 229 4 267 1 231 7 305 6 234 3 197 6 313 1 37 1 105 25 160 1 317 2 201 1 161 3 320 38 38 1 164 1 278 1 114 1 116 2 249 2 281 1 
251 1 207 1 81 1 290 2 171 1 83 4 293 3 8 1 294 1 13 2 14 1 17 1 296 2 255 1 221 8 263 1 25 1 95 2 229 2 231 2 305 2 234 2 197 2 313 2 37 1 105 11 201 2 161 2 320 19 164 1 114 1 116 1 281 1 
207 7 251 8 286 1 81 1 290 3 6 1 125 1 171 1 83 6 293 3 8 1 294 1 11 1 14 1 13 4 295 1 17 1 296 2 255 1 221 13 263 1 25 1 95 3 229 4 267 1 231 7 305 6 234 3 197 6 313 1 37 1 105 25 160 1 317 2 201 1 161 3 320 38 164 1 278 1 114 1 116 2 249 2 281 1 
207 7 251 8 286 1 81 1 290 3 6 1 125 1 171 1 83 6 293 3 8 1 294 1 11 1 14 1 13 4 295 1 17 1 296 2 255 1 221 13 263 1 25 1 95 3 229 4 267 1 231 7 305 6 234 3 197 6 313 1 37 1 105 25 160 1 317 2 201 1 161 3 320 38 164 1 278 1 114 1 116 2 249 2 281 1 
207 6 251 7 81 1 290 2 6 1 125 1 171 1 83 4 293 3 8 1 294 1 11 1 14 1 13 4 295 1 17 1 296 2 255 1 221 12 263 1 25 1 95 2 229 4 267 1 231 7 305 6 234 2 197 6 313 1 37 1 105 24 160 1 317 2 201 1 161 2 320 36 164 1 278 1 114 1 116 2 249 2 281 1 
80 1 82 1 290 1 83 2 49 1 254 2 86 2 135 1 256 2 58 1 221 1 300 2 144 1 145 2 92 2 226 1 227 1 95 1 63 1 266 2 100 1 31 1 191 1 192 1 234 1 309 1 105 1 161 1 320 2 204 1 279 1 
56 1 79 1 256 1 58 1 220 1 289 1 203 1 204 1 191 1 223 1 309 1 130 1 254 1 86 1 
148 1 303 1 79 1 289 1 153 1 191 1 309 1 86 1 254 1 87 1 311 2 241 1 256 1 158 1 139 1 319 1 248 1 147 1 
148 1 303 1 79 1 289 1 153 1 191 1 309 1 86 2 254 2 87 1 311 2 241 1 256 2 158 1 139 1 140 1 319 1 248 1 147 1 
148 1 303 1 79 1 153 1 191 1 309 1 86 1 254 1 311 2 241 1 256 1 158 1 139 1 319 1 248 1 23 1 147 1 
219 1 
3 1 151 1 29 1 272 1 312 1 242 1 246 1 108 1 43 1 331 1 
108 2 231 1 178 1 305 1 270 1 166 1 325 1 197 1 
273 1 265 1 272 1 302 1 195 1 312 1 
3 2 172 1 130 1 10 1 254 4 86 4 174 1 56 2 297 1 256 4 58 1 260 1 222 2 302 4 223 1 183 1 265 2 29 2 191 1 35 2 309 1 195 3 242 1 273 3 246 2 108 2 204 1 331 2 329 2 
3 1 108 1 151 1 272 1 117 1 43 1 312 1 
3 1 57 1 21 1 302 1 265 1 29 1 270 1 272 1 235 1 195 1 312 1 242 1 273 1 108 1 246 1 77 1 331 1 
5 1 29 1 124 1 191 1 309 1 86 1 254 1 216 1 242 1 56 1 256 1 58 1 246 1 204 1 73 1 91 1 331 1 
3 2 229 1 81 1 231 2 305 2 29 1 270 2 197 2 13 1 14 1 242 1 296 1 255 1 108 5 246 1 178 3 164 1 325 3 25 1 331 1 
120 2 3 2 46 1 125 1 15 1 257 1 145 1 92 1 62 1 65 1 266 1 152 1 231 2 189 1 29 1 195 1 242 1 273 1 155 1 246 1 108 2 160 1 165 1 278 1 166 1 116 1 327 1 331 1 
1 1 284 1 290 1 82 1 5 1 83 2 254 1 86 1 56 1 256 1 257 1 58 1 221 1 144 1 145 2 92 3 95 1 62 2 266 3 191 1 192 1 234 1 102 1 309 1 239 1 155 2 72 1 320 1 161 1 204 1 280 1 327 2 
3 1 29 1 270 2 272 2 11 1 312 2 242 1 108 2 246 1 178 2 222 1 325 2 331 1 329 1 
276 1 32 1 
276 1 32 1 
276 1 32 1 
276 1 32 1 
276 1 32 1 
276 1 32 1 
276 1 32 1 
276 1 32 1 
44 1 330 1 
251 5 207 2 95 1 152 1 231 2 290 1 6 3 125 2 83 2 234 1 294 1 105 5 160 2 221 5 161 1 320 10 278 1 116 2 
207 1 251 1 95 1 231 1 290 1 83 2 234 1 294 1 197 1 105 2 161 1 320 2 
251 1 207 1 95 1 231 1 290 1 305 1 83 2 234 1 294 1 197 1 105 2 221 2 161 1 320 4 116 1 263 1 
251 2 207 1 95 3 286 1 290 3 6 1 125 1 83 6 234 3 294 1 37 1 105 1 258 1 221 2 160 1 320 3 161 3 
207 6 251 10 286 1 290 5 6 4 125 3 83 10 294 1 11 1 13 4 55 1 295 1 296 1 258 1 221 19 263 3 94 1 95 5 229 4 267 1 231 6 67 1 305 4 234 5 197 4 37 2 105 20 160 3 317 1 161 5 320 39 278 2 249 1 116 5 41 1 
207 1 251 3 95 2 231 1 267 1 290 2 6 2 125 1 83 4 234 2 11 1 295 1 105 4 37 1 221 4 160 1 320 8 161 2 278 1 116 1 
251 2 267 1 231 1 6 2 125 1 11 1 295 1 105 3 221 3 160 1 320 6 278 1 116 1 117 1 
95 1 231 1 290 1 305 1 83 2 234 1 197 1 105 2 161 1 320 2 41 1 
207 2 251 2 229 2 231 2 305 2 13 2 197 2 296 1 105 6 317 1 221 2 320 8 249 1 
251 10 207 5 290 2 6 5 125 4 83 4 11 1 13 2 295 1 258 1 221 12 95 2 229 2 152 1 231 4 267 1 305 2 234 2 197 2 105 14 37 2 157 1 160 4 317 1 320 26 161 2 278 2 116 2 249 1 
229 1 221 1 320 1 
105 1 320 1 13 1 
207 1 251 1 231 1 305 1 197 1 105 3 221 1 320 4 206 1 
207 2 251 2 81 1 290 2 83 4 294 1 13 1 14 1 296 1 255 1 221 2 25 1 95 2 229 1 231 2 305 2 234 2 197 2 105 7 37 1 320 9 161 2 164 1 
207 1 251 2 105 3 231 1 160 1 221 3 6 1 320 6 125 1 278 1 116 1 
207 1 251 2 95 1 267 1 290 1 6 1 125 1 83 2 234 1 295 1 105 1 37 1 258 1 160 1 221 2 320 3 161 1 
251 2 290 1 6 2 125 1 83 2 294 1 11 1 13 1 14 1 295 1 296 1 221 4 95 1 229 1 231 1 267 1 234 1 105 4 160 1 320 8 161 1 278 1 116 1 
207 3 251 5 81 1 290 3 6 2 125 1 83 6 294 1 11 1 14 1 13 2 295 1 296 1 255 1 221 12 263 3 25 1 95 3 229 2 267 1 231 5 305 4 234 3 197 4 37 1 105 15 160 1 317 1 320 27 161 3 164 1 278 1 249 1 116 4 41 1 
207 5 251 8 81 1 290 3 6 3 125 2 83 6 294 1 11 1 13 1 14 1 295 1 296 1 255 1 221 8 25 1 95 3 229 1 152 1 267 1 231 5 305 2 234 3 197 2 105 14 37 1 160 2 320 22 161 3 164 1 278 2 116 3 41 1 
207 2 251 4 81 1 290 3 6 2 125 1 83 6 294 1 11 1 13 1 14 1 295 1 296 1 255 1 221 7 263 1 25 1 95 3 229 1 267 1 231 3 305 2 234 3 197 2 37 1 105 10 160 1 320 17 161 3 164 1 278 1 116 2 41 1 
251 2 290 1 6 2 125 1 83 2 294 1 11 1 13 1 14 1 295 1 296 1 221 4 95 1 229 1 231 1 267 1 234 1 105 4 160 1 320 8 161 1 278 1 116 1 
207 2 251 2 81 1 290 2 83 4 294 1 13 1 14 1 296 1 255 1 221 2 25 1 95 2 229 1 231 2 305 2 234 2 197 2 105 7 37 1 320 9 161 2 164 1 
251 1 207 1 81 1 290 3 83 6 294 1 14 1 13 1 296 1 255 1 221 4 263 1 25 1 95 3 229 1 231 2 305 2 234 3 197 2 37 1 105 7 320 11 161 3 164 1 116 1 41 1 
207 2 251 2 286 1 81 1 290 3 83 6 294 1 14 1 13 1 296 1 255 1 221 4 263 1 25 1 95 3 229 1 231 2 305 2 234 3 197 2 37 1 105 7 320 11 161 3 164 1 116 1 
251 6 207 3 267 2 231 1 6 3 125 3 295 1 105 3 221 4 160 3 320 7 278 1 116 1 
251 1 207 1 286 1 81 1 290 3 83 6 294 1 14 1 13 1 296 1 255 1 221 4 263 1 25 1 95 3 229 1 231 2 305 2 234 3 197 2 37 1 105 7 320 11 161 3 164 1 116 1 
218 1 131 1 328 1 
218 1 217 1 259 1 33 1 103 1 131 1 328 1 238 1 
96 1 191 1 309 1 130 1 86 4 254 4 56 1 256 4 58 1 140 1 204 1 40 1 223 1 
5 1 170 1 191 2 35 1 309 1 69 1 86 2 254 2 107 1 256 2 137 1 58 1 204 1 93 1 
241 1 56 1 256 1 319 1 248 1 191 1 309 1 254 1 86 1 311 1 
153 1 100 1 191 1 309 1 86 2 254 2 256 2 58 1 140 1 204 1 279 1 
100 1 191 2 35 1 309 2 130 1 86 4 254 5 51 1 56 1 256 5 19 1 58 2 140 1 204 3 40 1 223 1 
100 1 191 2 35 1 309 2 130 1 86 4 254 5 51 1 56 1 256 5 58 2 140 1 204 3 40 1 223 1 264 1 
56 1 256 1 58 1 204 1 191 1 223 1 309 1 130 1 117 1 254 1 86 1 
62 1 266 2 5 1 191 1 102 1 84 1 309 1 86 1 254 1 56 1 256 1 58 1 72 1 204 1 145 1 92 2 280 1 327 1 
123 1 5 2 84 1 213 1 9 1 254 1 86 1 256 1 58 2 145 2 92 2 62 1 65 2 266 2 269 1 191 1 102 1 309 1 35 1 72 1 204 3 280 1 327 2 119 1 
123 1 5 2 85 1 84 1 213 1 9 1 254 1 86 1 256 1 58 2 145 2 92 2 62 1 65 2 266 2 269 1 191 1 102 1 309 1 35 1 72 1 204 3 327 2 119 1 
96 1 5 1 212 1 191 1 272 1 213 1 195 2 35 1 309 1 86 3 254 3 312 1 240 1 89 1 216 1 56 1 273 2 256 3 58 1 204 4 302 1 143 1 119 1 
96 1 4 1 5 1 191 1 272 1 213 1 195 2 35 1 309 1 86 3 254 3 312 1 240 1 216 1 56 1 273 2 256 3 58 1 204 4 302 1 143 1 119 1 
256 1 191 1 180 1 309 1 254 1 86 1 
5 1 153 1 100 1 170 1 191 3 194 1 309 2 51 1 69 1 86 6 254 7 56 2 256 7 19 1 58 2 140 1 300 1 204 3 180 1 113 1 91 1 
251 2 284 1 82 2 290 2 6 2 5 1 125 1 83 4 84 1 128 1 11 1 86 1 254 1 295 1 256 1 58 1 221 3 140 1 145 1 92 2 226 1 95 2 63 1 62 1 97 1 231 1 267 1 266 2 191 1 192 2 102 1 234 2 309 1 68 1 310 1 239 1 105 3 72 2 160 1 320 6 161 2 204 1 323 1 278 1 116 1 280 1 327 1 
3 1 4 1 169 1 254 1 86 1 54 1 216 1 56 1 256 1 302 2 143 1 183 1 265 1 151 1 29 2 272 1 195 3 312 1 240 1 242 2 273 3 108 1 246 2 318 1 204 2 43 1 282 1 331 2 
5 1 191 1 309 1 86 1 254 1 256 1 58 1 204 1 180 1 73 1 143 1 91 1 186 1 
62 1 266 2 5 1 191 1 102 1 84 1 85 1 309 1 86 1 254 1 56 1 256 1 58 1 72 1 204 1 145 1 92 2 327 1 
5 1 170 1 191 2 35 1 309 1 69 1 86 1 254 1 256 1 58 1 204 1 113 1 91 1 
227 1 65 1 123 1 266 1 31 1 49 1 88 1 72 1 261 2 22 1 145 1 92 1 
208 1 46 1 49 1 9 1 215 1 12 1 15 1 88 1 257 1 22 1 261 2 145 2 92 2 227 1 62 1 65 2 304 1 266 2 269 1 31 1 272 1 307 1 195 2 312 1 240 1 273 2 155 1 318 1 165 1 327 1 
22 1 88 1 
304 1 261 1 215 1 
149 1 18 1 162 1 112 1 133 1 167 1 154 1 283 1 
149 1 287 1 27 1 133 2 154 2 106 1 245 2 200 1 142 1 162 1 321 1 112 3 167 4 283 4 
177 1 149 1 18 1 245 1 162 1 112 1 224 1 324 1 133 1 167 2 154 1 283 2 
149 1 18 1 106 1 287 2 200 2 162 1 112 1 129 1 133 1 167 3 154 1 283 3 
299 1 111 1 112 2 237 2 
149 1 18 1 162 1 233 1 167 1 283 1 
149 1 18 1 245 1 268 1 162 1 112 1 133 1 167 2 154 1 283 2 
48 1 
149 1 18 1 162 1 112 1 133 1 167 1 154 1 283 1 
112 1 133 1 117 1 154 1 
149 1 162 1 112 1 133 1 167 1 154 1 283 1 
210 1 292 1 167 1 
149 1 18 1 106 1 287 2 200 1 162 1 112 1 76 1 133 1 167 3 154 1 283 3 
149 1 245 1 162 1 112 1 133 1 196 1 167 2 154 1 283 2 
149 1 18 1 45 1 139 1 27 1 319 1 162 1 112 1 167 1 311 1 283 1 
149 1 18 1 162 1 112 1 133 1 167 1 283 1 
149 1 18 1 162 1 133 2 167 1 154 1 283 1 
149 2 228 1 133 1 18 1 162 2 112 1 59 1 167 2 184 1 283 2 
149 1 27 1 268 1 133 1 154 1 18 1 245 2 162 1 277 1 321 1 112 2 167 3 283 3 
149 1 101 1 133 1 154 1 311 2 241 1 18 1 158 1 139 1 245 1 319 1 162 1 112 1 167 2 283 2 
149 2 27 1 133 1 196 1 52 1 154 1 18 1 245 2 162 2 321 1 112 2 167 4 283 4 
149 1 18 1 287 1 245 1 268 1 162 1 112 1 133 1 167 3 154 1 283 3 
27 1 142 1 321 1 112 1 
112 1 133 1 

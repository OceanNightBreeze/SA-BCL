#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (51,241) 247 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (6,174) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (8,106,194) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (6,174) (6,174) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 190 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 59 175 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (8,106,194) (8,106,194) 80 218 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 190 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 82 172 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (51,241) (51,241) (21,271) 112 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 187 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (51,241) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 210 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (51,241) (51,241) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 157 43 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 157 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 157 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 157 43 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 157 43 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 204 254 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 216 5 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 59 175 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (51,241) 247 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 190 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 78 (86,131) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 78 (86,131) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 78 (201,255) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 78 (201,255) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 193 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 4067 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
281 1 245 3 81 1 123 2 293 1 292 9 127 2 252 2 85 2 15 1 90 1 91 1 25 2 266 1 304 4 93 6 267 1 142 1 313 1 144 1 146 9 149 2 234 1 200 5 36 1 240 1 77 1 76 2 
281 1 245 3 81 1 123 2 293 1 292 9 127 2 252 2 85 2 15 1 90 1 91 1 25 2 266 1 304 4 93 6 267 1 142 1 313 1 144 1 146 9 149 2 234 1 200 5 36 1 240 1 77 1 76 2 
281 1 245 4 81 1 123 2 293 1 292 10 127 2 252 2 85 2 15 1 90 1 91 1 25 2 266 1 304 5 93 7 267 1 142 1 313 1 144 1 146 10 149 2 234 1 200 6 36 1 240 1 77 1 76 2 
281 1 245 2 81 1 123 2 293 1 292 7 127 2 252 2 85 2 15 1 90 1 91 1 25 2 266 1 304 3 93 4 142 1 313 1 144 1 146 7 149 2 234 1 200 4 36 1 240 1 77 1 76 1 
281 1 93 3 266 1 304 2 245 1 267 1 142 1 123 1 146 4 292 4 127 1 252 1 85 1 90 1 200 3 77 1 76 2 25 1 
96 1 311 1 142 1 144 1 123 1 146 2 292 2 127 1 252 1 149 1 85 1 89 1 200 1 90 1 240 1 77 1 
304 1 93 1 245 1 81 1 142 1 146 3 292 3 252 2 149 1 85 2 90 1 200 2 77 1 
281 1 245 3 286 1 81 1 123 1 292 9 125 1 127 1 252 2 85 2 15 1 90 1 25 1 304 4 93 7 266 1 267 1 142 1 313 1 146 9 149 1 200 5 77 1 76 2 
281 1 245 3 286 1 81 1 123 1 292 9 125 1 127 1 252 2 85 2 15 1 90 1 25 1 304 4 93 7 266 1 267 1 142 1 313 1 146 9 149 1 200 5 77 1 76 2 
320 1 203 1 190 1 
320 1 44 2 263 1 
223 2 102 2 20 2 129 2 211 2 219 2 41 1 
120 2 223 1 211 1 247 1 60 1 87 2 170 2 102 1 20 1 129 1 219 1 241 1 324 1 41 1 160 1 26 1 
223 1 102 1 20 1 129 1 211 1 174 1 219 1 41 1 
223 1 102 1 310 1 106 1 219 1 8 1 
223 1 102 1 20 1 129 1 211 1 219 1 8 1 
114 1 194 1 47 1 116 1 147 1 
114 1 194 2 47 1 320 1 203 1 327 1 303 1 147 2 
114 1 194 1 147 1 
194 1 47 1 223 1 102 1 20 1 129 1 211 1 174 1 219 1 6 1 41 1 147 1 
320 1 
114 1 194 2 47 1 320 1 276 1 203 1 327 1 147 2 
114 2 206 2 182 2 164 1 165 1 140 1 315 1 147 5 99 2 194 5 230 1 46 1 47 2 320 1 104 1 277 1 203 1 221 1 327 1 
190 1 
223 2 102 2 152 1 20 1 129 1 211 1 219 2 249 1 
223 3 102 3 20 1 129 3 211 3 219 3 161 1 
223 1 102 1 129 1 211 1 219 1 
223 1 102 1 152 1 20 1 129 1 211 1 219 1 249 1 
223 2 102 2 20 1 129 2 211 2 219 2 202 1 249 1 161 1 
223 2 102 2 310 1 129 1 211 1 219 2 75 1 161 1 
223 1 102 1 129 1 211 1 219 1 202 1 161 1 
223 1 102 1 20 1 129 1 211 1 219 1 249 1 
87 1 170 1 120 1 160 1 
87 1 170 1 120 1 160 1 
265 1 94 1 176 1 178 1 167 2 73 1 134 1 113 1 
223 1 102 1 287 1 129 1 211 1 219 1 
87 1 170 1 120 1 223 1 102 1 129 1 211 1 219 1 202 1 160 1 161 1 
223 5 102 5 310 1 20 1 129 4 211 4 202 1 219 5 109 1 111 1 75 1 249 1 161 2 
223 1 102 1 129 1 211 1 219 1 
139 1 159 1 
139 1 159 1 
158 1 264 1 
158 1 264 1 
158 1 264 1 
139 1 159 1 215 1 
128 1 139 2 158 1 24 1 159 2 264 1 
181 1 139 1 159 1 
181 1 139 1 159 1 
181 1 139 1 159 1 
139 1 92 1 159 1 
139 1 92 1 159 1 
139 1 92 1 159 1 
79 1 139 2 290 1 168 1 61 2 147 2 294 1 12 1 318 1 295 2 194 2 320 1 297 2 199 3 103 2 258 1 24 1 159 2 260 2 
183 1 309 1 223 2 227 1 139 1 211 2 121 1 248 1 215 1 61 1 147 1 194 1 295 1 48 1 102 2 297 1 199 1 129 2 219 2 110 1 258 1 159 1 260 1 
127 1 123 1 25 1 
127 1 311 1 123 1 
127 3 274 1 251 1 307 1 311 1 25 2 
127 2 274 1 307 1 311 1 299 1 25 1 
127 2 274 2 307 1 311 1 25 1 
114 1 7 1 100 1 147 4 194 4 231 1 47 3 320 1 40 1 203 1 327 1 302 1 
114 2 116 1 100 1 147 4 192 1 194 4 64 1 47 3 320 1 40 1 203 1 132 1 327 1 
206 1 115 2 164 1 44 4 7 1 248 1 47 2 302 1 135 1 263 2 179 1 182 1 188 1 315 2 62 1 99 1 147 3 231 1 194 3 320 3 104 3 155 2 203 1 40 1 74 1 162 1 
206 1 115 4 44 7 164 1 212 1 7 2 248 2 47 3 302 1 135 2 263 3 179 2 182 1 188 2 315 4 62 1 99 1 147 4 194 4 231 1 195 1 320 4 104 5 153 1 155 4 203 1 40 1 74 2 162 2 
196 1 11 1 190 1 
196 1 204 1 
225 1 
196 1 130 1 
196 3 18 1 130 1 185 1 11 2 191 1 
196 1 130 1 191 1 
196 1 275 1 
244 1 180 1 246 1 222 3 184 1 56 2 216 1 14 4 232 1 151 1 256 2 53 1 301 1 205 3 179 1 329 1 
244 1 180 1 246 1 222 3 184 1 56 2 216 1 14 4 232 1 151 1 256 2 53 1 301 1 205 3 179 1 329 1 
244 1 180 1 246 1 222 3 184 1 56 2 216 1 272 1 14 4 232 1 151 1 256 2 53 1 301 1 205 3 179 1 329 1 
243 3 244 5 246 1 2 1 285 1 167 2 124 4 216 1 14 28 256 5 176 1 53 13 134 1 301 2 179 4 135 3 265 1 180 2 306 1 308 1 184 2 94 1 222 10 56 3 188 3 232 2 151 1 238 1 38 1 278 1 74 3 205 15 162 3 329 1 
244 1 246 1 167 4 214 1 216 1 14 6 50 1 256 3 176 2 53 2 134 2 301 1 179 1 265 2 180 1 94 2 222 4 184 1 56 2 232 1 151 1 278 1 205 4 
3 1 120 1 289 1 123 1 292 2 127 2 252 1 251 1 85 1 87 1 170 1 19 1 88 1 90 1 52 1 25 1 54 1 93 1 138 1 311 1 142 1 229 1 145 1 32 1 146 2 319 1 149 1 200 1 77 1 328 1 
282 1 208 1 3 1 120 1 289 1 123 1 292 3 127 2 251 1 252 1 85 1 87 1 170 1 19 1 88 1 52 1 25 1 54 1 93 2 311 1 142 1 229 1 145 1 146 3 319 1 149 1 200 1 69 1 77 1 328 1 
282 1 208 1 3 1 120 1 289 1 123 1 292 2 127 2 251 1 87 1 170 1 19 1 88 1 52 1 25 1 93 2 311 1 142 1 229 1 145 1 146 2 319 1 149 1 200 1 77 1 
120 1 289 2 10 1 122 1 292 1 252 1 85 1 87 1 170 1 19 2 130 2 177 1 257 1 136 1 189 1 145 1 98 1 229 2 146 1 316 1 191 1 319 2 149 2 65 1 196 2 235 1 68 1 237 1 69 1 160 1 
208 1 3 1 120 1 289 1 123 1 292 1 127 2 252 1 251 1 85 1 87 1 170 1 19 1 88 1 90 1 52 1 25 1 54 1 138 1 311 1 229 1 145 1 146 1 319 1 149 1 328 1 
148 1 
114 1 206 1 182 1 120 1 59 1 62 1 147 1 99 1 194 1 46 1 170 1 87 1 104 1 175 1 160 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
114 1 223 1 310 1 80 1 8 1 147 2 194 2 218 1 102 1 276 1 106 1 70 1 154 1 219 1 327 1 
206 1 182 1 223 1 310 1 80 1 8 1 147 1 99 1 194 1 218 1 46 1 102 1 106 1 219 1 70 1 154 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
218 1 194 1 223 1 102 1 310 1 106 1 80 1 219 1 154 1 70 1 8 1 147 1 
206 1 182 1 223 1 310 1 80 1 8 1 147 1 99 1 194 1 218 1 46 1 102 1 106 1 219 1 70 1 154 1 
265 1 246 1 180 1 222 1 184 1 94 1 56 1 167 2 190 1 216 1 14 3 151 1 256 1 176 1 178 1 53 1 73 1 205 2 113 1 134 1 135 1 179 1 
265 1 243 1 117 1 94 1 167 2 82 1 124 1 14 2 172 1 176 1 178 1 73 1 53 1 205 1 134 1 
265 1 284 1 117 1 223 1 94 1 211 1 167 2 250 1 14 2 197 1 102 1 67 1 129 1 202 1 219 1 176 1 178 1 53 1 73 1 205 1 134 1 161 1 
117 1 120 1 211 1 167 2 250 1 14 1 170 1 87 1 51 1 129 1 176 1 219 1 178 1 53 1 134 1 265 1 94 1 223 1 271 1 102 1 202 1 73 1 241 1 112 1 161 1 160 1 
265 1 284 1 94 1 120 1 312 1 187 1 167 2 14 1 170 1 87 1 176 1 178 1 73 1 205 1 134 1 160 1 
117 1 211 1 167 2 249 1 14 2 84 1 20 1 129 1 176 1 219 1 178 1 53 1 134 1 179 1 135 1 265 1 94 1 223 1 188 1 102 1 73 1 74 1 205 1 162 1 
265 1 94 1 167 2 14 1 236 1 176 1 178 1 73 1 74 1 113 1 134 1 205 1 179 1 
265 1 94 1 167 2 14 1 176 1 178 1 73 1 53 1 279 1 113 1 134 1 162 1 135 1 
265 1 94 1 167 2 188 1 14 2 176 1 178 1 53 1 73 1 74 1 162 1 113 1 134 1 205 1 135 1 179 1 
265 1 94 1 312 1 167 2 14 1 236 1 176 1 178 1 73 1 74 1 134 1 205 1 179 1 
265 1 94 1 312 1 167 2 14 1 176 1 178 1 73 1 53 1 279 1 134 1 162 1 135 1 
265 1 94 1 312 1 167 2 188 1 14 2 176 1 178 1 53 1 73 1 74 1 162 1 134 1 205 1 135 1 179 1 
265 1 94 1 167 2 188 1 14 2 176 1 178 1 53 1 73 1 74 1 162 1 134 1 205 1 135 1 179 1 
87 1 170 1 120 1 241 1 160 1 
87 1 170 1 120 1 210 1 160 1 
265 1 117 1 94 1 167 2 188 1 14 2 176 1 178 1 53 1 73 1 74 1 162 1 134 1 205 1 135 1 179 1 
87 1 170 1 120 1 51 1 241 1 32 1 
117 1 211 1 167 2 249 1 14 2 20 1 129 1 176 1 219 1 178 1 53 1 134 1 179 1 135 1 265 1 94 1 223 1 188 1 102 1 107 1 73 1 74 1 205 1 162 1 
265 1 0 1 94 1 43 1 50 1 176 1 157 1 167 2 134 1 
265 1 0 1 94 1 43 1 50 1 176 1 157 1 167 2 134 1 
265 1 0 1 94 1 43 1 50 1 176 1 157 1 167 2 134 1 
265 1 0 1 94 1 43 1 50 1 176 1 157 1 167 2 134 1 
265 1 0 1 94 1 43 1 50 1 176 1 157 1 167 2 134 1 
12 1 79 1 295 1 297 1 139 1 24 1 260 1 159 1 61 1 317 1 
121 1 215 1 
295 1 119 1 297 1 139 1 30 1 213 1 260 1 159 1 61 1 
79 1 139 1 290 1 168 1 61 1 147 1 12 1 318 1 194 1 295 1 320 1 297 1 199 2 103 1 258 1 24 1 159 1 260 1 
79 1 139 1 290 1 168 1 61 1 147 1 12 1 318 1 194 1 295 1 320 1 297 1 199 2 103 1 258 1 24 1 159 1 260 1 
79 1 139 1 290 1 168 1 61 1 147 1 12 1 318 1 194 1 295 1 320 1 297 1 199 2 103 1 258 1 24 1 159 1 260 1 
27 1 128 1 181 1 
27 1 128 1 181 1 
118 1 92 1 
128 1 118 1 92 1 
183 1 110 1 
211 2 121 1 248 1 215 1 295 1 47 1 48 1 297 1 173 1 129 2 219 2 260 1 183 1 223 2 309 1 227 1 139 1 61 1 147 1 318 1 194 1 102 2 103 1 199 1 110 1 159 1 
27 1 181 1 
128 1 118 1 92 1 
1 1 223 2 102 2 298 1 321 1 219 2 
208 1 3 1 120 2 29 1 311 1 123 1 145 1 229 1 32 1 127 2 251 1 170 2 87 2 19 1 88 1 220 1 300 1 328 1 25 1 
208 1 3 1 120 1 29 1 311 1 123 1 229 1 145 1 127 2 251 1 170 1 87 1 19 1 88 1 35 1 328 1 25 1 
120 1 122 1 10 1 87 1 170 1 19 2 130 2 177 1 220 1 136 1 229 1 145 1 316 1 191 1 65 1 196 2 235 1 237 1 42 1 160 1 
208 1 3 1 120 1 29 1 311 1 123 1 229 1 145 1 127 2 251 1 170 1 87 1 19 1 88 1 220 1 300 1 328 1 25 1 
72 1 
320 1 104 1 165 1 315 1 203 1 221 1 190 1 
114 1 206 1 209 1 44 1 46 1 263 1 182 1 143 1 315 1 99 1 147 1 194 1 198 1 320 2 104 1 203 1 327 1 
206 1 182 1 120 1 288 1 145 1 191 1 99 1 46 1 196 1 170 1 87 1 18 1 19 2 254 1 130 1 204 1 160 1 
114 1 243 1 206 2 115 5 285 1 44 6 291 1 124 1 217 1 253 1 46 2 263 3 179 2 135 2 305 1 182 2 28 1 314 2 315 5 188 2 269 1 62 1 147 1 99 2 194 1 101 1 320 5 105 1 104 8 323 1 155 5 74 2 203 2 327 1 162 2 
206 1 180 1 182 1 5 1 184 1 315 2 314 1 216 1 147 1 99 1 63 1 194 1 46 1 104 2 135 1 179 1 
206 1 182 1 165 1 315 1 99 1 46 1 320 1 104 1 203 1 221 1 
163 1 115 5 44 10 314 2 188 2 315 5 253 1 320 5 104 5 155 5 74 2 162 2 179 2 263 5 135 2 
194 1 114 1 320 1 203 1 327 1 147 1 
114 1 206 1 182 1 120 1 59 1 62 1 99 1 46 1 170 1 87 1 104 1 175 1 156 1 160 1 
87 1 170 1 120 1 223 1 102 1 20 1 129 1 211 1 219 1 247 1 241 1 41 1 160 1 
206 1 115 2 182 1 56 1 44 4 315 2 62 1 99 1 46 1 320 4 104 1 105 1 155 2 203 2 263 2 
79 1 295 1 110 1 260 1 261 1 
295 1 39 1 260 1 
295 1 39 1 260 1 
295 1 39 1 260 1 
295 1 260 1 242 1 
295 1 260 1 242 1 
295 1 260 1 242 1 
295 1 260 1 
139 1 159 1 
265 2 244 1 246 1 180 1 222 3 94 2 184 1 56 1 167 4 216 1 14 5 151 1 256 2 176 2 53 2 278 1 205 3 134 2 179 1 
14 3 180 1 151 1 246 1 222 2 184 1 56 1 256 2 53 1 190 1 205 2 179 1 216 1 
265 1 244 1 222 2 94 1 167 2 188 1 14 4 45 1 256 1 176 1 53 2 74 1 162 1 134 1 205 2 135 1 179 1 
243 1 244 1 285 1 222 2 188 1 124 2 14 7 256 1 238 1 53 4 74 1 162 1 205 3 135 1 179 1 
243 2 244 4 246 1 166 1 167 4 82 1 124 2 216 1 14 20 256 5 176 2 53 10 134 2 179 3 135 2 265 2 180 2 184 2 222 9 94 2 56 1 188 2 150 1 151 1 238 1 278 2 74 2 205 10 162 2 
14 1 53 1 124 1 
14 1 243 1 205 1 
265 1 244 1 163 1 94 1 222 3 167 2 188 1 14 6 45 1 256 2 176 1 53 3 74 1 134 1 205 3 162 1 179 1 135 1 
243 1 244 1 285 1 291 1 167 2 124 1 14 12 50 1 256 1 176 1 53 6 134 1 179 2 135 2 265 1 94 1 28 1 222 2 188 2 269 1 101 1 323 1 74 2 205 6 162 2 
14 1 205 1 179 1 216 1 
265 1 244 1 180 1 246 1 222 2 184 1 94 1 167 2 14 3 150 1 151 1 256 1 176 1 53 2 278 1 205 1 134 1 
265 1 244 2 180 1 5 1 94 1 184 1 222 4 167 2 216 1 14 7 50 1 256 2 176 1 53 3 134 1 205 4 179 2 135 1 
265 1 244 1 94 1 222 1 167 2 14 2 50 1 176 1 74 1 134 1 205 2 179 1 
265 1 244 1 222 2 94 1 167 2 188 1 14 4 50 1 256 1 176 1 53 2 74 1 162 1 134 1 205 2 135 1 179 1 
265 3 244 1 180 1 94 3 184 1 222 2 167 6 33 1 14 3 150 1 50 1 256 1 176 3 278 1 53 2 134 3 205 1 
243 3 244 5 246 1 2 1 285 1 167 10 124 4 216 2 14 28 45 1 50 1 256 6 176 5 53 14 134 5 179 5 135 3 265 5 180 2 306 1 184 2 94 5 222 11 56 1 188 3 33 1 150 1 151 1 238 1 38 1 278 2 74 3 205 14 162 3 
243 1 246 1 285 1 291 1 167 2 124 1 216 1 14 5 50 1 256 2 176 1 53 2 134 1 179 1 265 1 180 1 94 1 184 1 222 2 56 1 151 1 205 3 
243 1 244 1 246 1 285 1 291 1 167 4 124 2 216 1 14 8 45 1 50 1 256 2 176 2 53 3 134 2 179 2 265 2 180 1 184 1 94 2 222 3 56 1 188 1 151 1 238 1 74 1 205 5 
243 1 244 1 246 1 285 1 291 1 167 6 124 1 216 1 14 16 45 1 50 1 256 3 176 3 53 8 134 3 179 3 135 2 265 3 180 1 184 1 94 3 28 1 222 4 56 1 188 2 269 1 101 1 151 1 323 1 278 1 74 2 205 8 162 2 
243 1 244 2 246 1 285 1 291 1 167 6 124 1 216 1 14 14 45 1 50 1 256 3 176 3 53 5 134 3 179 3 135 1 265 3 180 1 184 1 94 3 28 1 222 5 56 1 188 2 269 1 101 1 151 1 323 1 278 1 74 2 205 9 162 1 
243 1 246 1 285 1 291 1 167 2 124 1 216 1 14 5 50 1 256 2 176 1 53 2 134 1 179 1 265 1 180 1 94 1 184 1 222 2 56 1 151 1 205 3 
243 1 244 1 285 1 291 1 167 2 124 1 14 12 50 1 256 1 176 1 53 6 134 1 179 2 135 2 265 1 94 1 28 1 222 2 188 2 269 1 101 1 323 1 74 2 205 6 162 2 
243 1 244 2 246 1 285 1 291 1 167 8 124 1 216 1 14 15 45 1 50 1 256 3 176 4 53 6 134 4 179 3 135 1 265 4 180 1 184 1 94 4 28 1 222 5 56 1 188 2 269 1 101 1 151 1 323 1 278 2 74 2 205 9 162 1 
243 1 244 3 285 1 291 1 167 8 124 1 14 16 50 1 256 3 176 4 53 7 134 4 179 3 135 2 265 4 94 4 28 1 222 6 188 3 269 1 33 1 101 1 323 1 278 2 74 3 205 9 162 2 
244 3 246 1 180 2 5 1 184 2 222 7 56 1 216 2 14 7 151 1 256 4 53 2 205 5 135 1 179 3 
243 1 244 1 246 1 285 1 291 1 167 8 124 1 216 1 14 15 50 1 256 3 176 4 53 6 134 4 179 3 135 1 265 4 180 1 184 1 94 4 28 1 222 4 56 1 188 2 269 1 33 1 101 1 151 1 323 1 278 2 74 2 205 9 162 1 
223 1 102 1 310 1 219 1 239 1 75 1 
223 1 224 1 310 1 228 1 34 1 296 1 102 1 219 1 259 1 239 1 75 1 
65 1 196 1 87 1 170 1 120 1 130 1 316 1 190 1 160 1 
223 1 120 1 211 1 145 1 191 1 196 1 170 1 87 1 19 1 102 1 130 1 129 1 219 1 131 1 78 1 161 1 160 1 
223 1 120 1 211 1 145 1 191 1 196 1 170 1 87 1 19 1 102 1 49 1 130 1 129 1 219 1 131 1 78 1 161 1 
223 1 120 1 211 1 145 1 191 1 196 1 170 1 87 1 19 1 102 1 49 1 130 1 129 1 219 1 201 1 78 1 161 1 
114 1 120 3 57 1 186 1 11 1 145 1 191 1 147 2 194 2 17 1 320 1 275 1 170 3 87 3 196 4 19 1 49 1 255 1 130 1 203 1 204 1 160 1 262 1 
114 1 120 3 57 1 11 1 145 1 191 1 147 2 194 2 86 1 17 1 320 1 275 1 170 3 87 3 196 4 19 1 49 1 130 1 203 1 204 1 160 1 262 1 
87 1 170 1 19 1 120 1 145 1 133 1 
136 1 208 1 137 1 120 7 97 1 145 2 32 1 60 1 191 1 273 1 233 1 170 6 87 7 18 1 196 3 19 3 130 2 177 1 133 1 160 2 326 1 
223 1 102 1 129 1 211 1 219 1 161 1 
114 2 206 2 120 1 165 1 11 1 169 1 86 1 46 2 47 1 87 1 170 1 21 1 23 1 221 1 262 1 182 2 315 1 99 2 147 3 194 3 320 1 196 2 104 1 156 1 203 1 204 1 160 1 327 1 
120 1 225 1 288 1 11 1 145 1 191 1 170 1 87 1 18 1 196 1 19 2 130 1 133 1 
136 1 120 2 10 1 145 1 32 1 316 1 191 1 65 1 170 2 87 2 196 2 19 2 237 1 130 2 177 1 160 1 
136 1 4 1 120 2 10 1 145 1 191 1 170 2 87 2 196 1 49 1 19 2 237 1 130 1 177 1 
127 1 87 1 170 1 19 1 120 1 88 1 311 1 123 1 145 1 160 1 
208 1 196 1 87 2 170 2 19 1 120 2 97 1 130 1 145 1 325 1 32 1 
120 3 10 1 87 3 170 2 19 3 130 3 177 1 136 1 97 1 145 2 32 1 316 1 191 1 273 1 65 1 233 1 196 4 237 1 160 1 
120 3 10 1 87 3 170 2 19 3 130 3 177 1 136 1 97 1 145 2 32 1 316 1 191 1 273 1 65 1 196 4 237 1 71 1 160 1 
223 1 120 1 211 1 145 1 191 1 196 1 170 1 87 1 19 1 102 1 130 1 129 1 219 1 201 1 78 1 161 1 160 1 
136 1 120 1 145 1 191 1 170 1 87 1 18 1 196 1 49 1 19 2 130 1 177 1 326 1 
1 1 223 1 102 1 298 1 321 1 219 1 141 1 22 1 126 1 
193 1 322 1 141 1 22 1 58 1 126 1 
141 1 22 1 58 1 126 1 
193 1 194 1 47 1 322 1 37 1 147 1 126 1 
200 1 142 1 190 1 77 1 
252 1 85 1 200 1 142 1 292 1 146 1 77 1 
149 1 289 1 292 1 
142 1 144 2 146 3 292 3 270 1 252 1 85 1 171 1 200 1 90 1 108 1 77 1 
252 1 93 1 85 1 200 1 142 1 292 2 146 2 77 1 76 1 
266 1 304 1 123 1 146 1 292 1 127 1 252 1 85 1 90 1 200 1 25 1 
252 1 85 1 200 1 90 1 292 1 146 1 77 1 
252 1 85 1 90 1 142 1 292 1 146 1 77 2 
226 1 9 1 146 2 292 2 13 1 252 2 85 2 200 1 90 1 77 1 
93 2 304 1 245 1 142 1 313 1 146 3 292 3 252 1 85 1 15 1 90 1 200 2 77 1 
93 1 55 1 311 1 142 1 123 1 146 2 292 2 127 2 252 1 251 1 85 1 200 1 90 1 77 1 25 1 
93 2 304 1 245 1 267 1 142 1 146 4 292 4 252 2 85 2 90 1 200 2 77 1 76 1 
252 1 85 1 200 1 90 1 142 1 292 1 146 1 77 1 
283 1 93 2 304 1 245 1 142 2 144 1 146 4 292 4 270 1 252 1 85 1 171 1 200 3 77 2 
93 1 286 1 142 1 31 1 146 2 292 2 252 1 83 1 85 1 200 1 90 1 77 1 
142 1 144 2 146 3 292 3 270 2 252 1 85 1 66 1 171 1 200 1 90 1 77 1 
16 1 207 1 200 2 268 2 
280 1 252 1 85 1 90 1 292 1 146 1 
252 1 93 1 85 1 200 1 90 1 142 1 313 1 292 2 146 2 77 1 
95 1 
252 1 85 1 200 1 90 1 142 1 292 1 146 1 77 1 
93 1 142 1 313 1 144 1 146 3 292 3 252 1 85 1 90 1 200 1 77 1 
283 1 304 1 245 1 200 1 
200 1 77 1 

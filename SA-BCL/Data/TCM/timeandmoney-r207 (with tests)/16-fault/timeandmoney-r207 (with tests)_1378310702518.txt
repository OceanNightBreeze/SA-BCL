#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver2()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 172 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 274 261 156 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 212 347 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 212 347 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 212 347 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 212 347 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 212 347 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.IllegalArgumentException 274 138 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 117 348 285 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.IllegalArgumentException 274 261 156 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.IllegalArgumentException 274 138 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.IllegalArgumentException 274 261 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.IllegalArgumentException 274 64 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 65 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 65 99 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 267 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 237 (127,162) (127,162) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4918 | > -> <
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V | CONDITION | 6304 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
14 2 178 1 269 3 105 1 0 9 296 1 110 1 324 1 280 1 162 1 352 2 60 4 134 6 206 2 163 1 164 1 137 1 44 2 359 2 74 1 237 4 10 2 195 1 238 1 264 1 127 1 315 1 51 9 86 2 
14 2 178 1 269 3 105 1 0 9 296 1 110 1 324 1 280 1 162 1 352 2 60 4 134 6 206 2 163 1 164 1 137 1 44 2 359 2 74 1 237 4 10 2 195 1 238 1 264 1 127 1 315 1 51 9 86 2 
14 2 178 1 269 3 105 1 0 9 296 1 110 1 324 1 280 1 162 1 352 2 60 4 134 6 206 2 163 1 164 1 137 1 44 2 359 2 74 1 237 4 10 2 195 1 238 1 264 1 127 1 315 1 51 9 86 2 
14 2 178 1 269 2 0 7 296 1 110 1 324 1 280 1 162 1 352 2 60 3 134 4 206 2 163 1 164 1 137 1 44 2 359 2 74 1 237 3 10 2 195 1 238 1 264 1 127 1 315 1 51 7 86 1 
14 1 269 1 0 4 105 1 296 1 324 1 280 1 352 1 60 2 134 3 162 1 206 1 44 1 237 2 10 1 195 1 51 4 127 1 86 2 
14 1 359 1 178 1 0 2 316 1 255 1 322 1 110 1 324 1 10 1 162 1 206 1 195 1 44 1 127 1 51 2 
14 2 359 1 269 1 0 3 237 1 324 1 162 1 60 1 134 1 206 2 195 1 238 1 127 1 51 3 
14 2 269 3 34 1 0 9 105 1 296 1 324 1 280 1 162 1 60 4 134 7 352 1 206 2 163 1 44 1 66 1 359 1 237 4 10 1 238 1 195 1 264 1 127 1 51 9 86 2 
14 2 269 3 34 1 0 9 105 1 296 1 324 1 280 1 162 1 60 4 134 7 352 1 206 2 163 1 44 1 66 1 359 1 237 4 10 1 238 1 195 1 264 1 127 1 51 9 86 2 
267 1 
182 2 365 1 52 1 
143 2 246 2 169 1 89 2 281 2 112 1 256 2 38 2 
89 2 318 1 319 2 92 1 320 1 349 2 38 3 160 1 300 2 133 2 59 1 41 1 302 1 246 2 63 1 281 2 112 1 331 1 356 1 141 1 355 1 70 1 143 2 169 1 119 1 21 1 256 3 235 1 173 1 122 1 149 1 263 2 125 1 240 1 314 1 84 1 177 1 
143 1 307 1 246 1 194 1 89 1 281 1 112 1 295 1 256 1 38 1 
118 1 90 1 309 1 256 1 16 1 38 1 236 1 365 1 287 1 194 1 175 1 369 1 281 1 185 1 
143 1 118 1 89 1 256 1 16 2 38 1 236 1 365 1 287 1 246 1 194 1 175 1 369 1 281 1 185 2 
153 1 185 1 16 1 71 1 85 1 
42 1 369 1 230 1 153 1 185 2 16 2 365 1 85 1 
153 1 185 1 16 1 
307 1 143 1 89 1 231 1 295 1 256 1 16 1 38 1 246 1 194 1 281 1 112 1 185 1 85 1 
365 1 
42 1 369 1 254 1 153 1 185 2 16 2 365 1 85 1 
89 1 295 1 275 4 202 2 93 1 36 1 16 5 38 1 57 1 244 1 246 1 42 1 329 1 281 1 112 1 185 5 114 1 187 1 67 1 143 1 307 1 72 2 360 1 231 1 256 1 9 1 47 1 101 2 78 2 365 2 174 1 340 2 194 1 24 5 369 2 153 2 343 2 85 2 
267 1 
143 1 169 2 89 1 100 1 256 2 38 2 246 1 281 2 313 1 
25 1 69 1 279 1 
169 1 92 1 320 1 256 1 107 1 38 1 300 1 133 1 59 1 173 1 122 1 263 1 125 1 240 1 355 1 70 1 
89 1 271 1 92 1 320 1 256 2 38 2 300 1 133 1 279 1 59 1 173 1 246 1 122 1 125 1 263 1 281 1 370 1 240 1 355 1 70 1 
143 1 246 3 169 1 89 3 271 1 281 3 256 3 38 3 
246 1 194 1 89 1 281 1 295 1 256 1 38 1 
143 1 246 1 194 1 89 1 281 1 313 1 100 1 256 1 38 1 
89 3 271 1 319 2 92 1 320 1 349 1 16 1 38 4 300 1 133 1 59 1 41 1 302 1 246 3 209 1 281 3 112 1 331 1 185 1 356 1 355 1 141 1 70 1 143 2 46 1 169 1 118 1 21 1 256 4 235 1 236 1 287 1 173 1 194 1 122 1 175 1 149 1 125 1 263 1 370 1 240 1 313 1 314 1 84 1 
246 1 169 1 89 1 271 1 281 2 309 1 256 2 276 1 38 2 
143 1 118 1 89 3 271 2 256 3 16 1 38 3 236 1 365 1 287 1 246 3 194 1 175 1 209 1 281 3 370 1 313 1 185 1 4 1 
143 1 89 2 271 1 256 2 38 2 279 1 246 2 281 2 313 1 69 1 
169 1 92 1 320 1 256 1 38 1 300 1 133 1 59 1 173 1 122 1 263 1 125 1 240 1 355 1 70 1 
169 1 92 1 256 1 38 1 300 1 133 1 59 1 173 1 205 1 122 1 263 1 125 1 240 1 167 1 70 1 
54 1 179 1 319 2 202 1 349 4 279 2 58 1 41 1 302 1 63 2 2 1 208 1 354 1 331 1 356 1 69 2 252 1 21 1 75 1 235 1 262 1 25 2 314 2 343 1 
246 1 194 1 175 1 89 1 281 1 139 1 256 1 38 1 
143 1 169 1 89 4 271 2 309 1 256 5 203 1 276 1 38 5 246 4 281 5 370 1 313 1 266 1 
246 2 194 1 89 2 139 1 281 2 295 1 256 2 38 2 
362 1 345 1 
362 1 345 1 
82 1 108 1 
82 1 108 1 
82 1 108 1 
362 1 345 1 146 1 
362 1 345 1 98 1 
39 1 362 2 345 2 165 1 82 1 108 1 
362 1 345 1 146 1 
362 1 345 1 146 1 
150 1 362 1 345 1 
150 1 362 1 345 1 
150 1 362 1 345 1 
268 2 55 1 200 2 345 2 362 2 321 1 16 2 223 1 204 1 365 1 39 1 249 2 154 3 185 2 371 1 83 1 155 1 188 2 13 2 
268 1 169 1 89 2 345 1 362 1 76 1 256 2 16 1 77 1 38 2 223 1 23 1 95 1 245 1 246 2 281 2 249 1 154 1 250 1 176 1 185 1 98 1 188 1 13 1 
352 1 44 1 10 1 
316 1 44 1 10 1 
352 2 316 1 91 1 189 1 292 1 10 3 
352 1 316 1 91 1 142 1 292 1 10 2 
352 1 316 1 91 1 292 2 10 2 
179 1 202 1 182 3 275 3 16 5 42 1 328 1 327 1 2 1 330 1 250 1 185 5 113 1 67 1 72 1 215 1 190 1 76 1 77 1 78 1 363 1 79 2 365 2 340 1 24 2 369 1 49 2 153 1 343 1 52 1 31 2 85 4 
179 3 202 3 182 9 275 8 16 9 42 1 328 3 2 3 304 5 185 9 113 2 187 1 67 1 71 5 72 2 144 1 215 2 76 4 258 1 311 1 218 1 78 2 363 1 79 6 365 5 339 1 340 2 24 6 369 1 153 6 291 1 343 3 52 3 31 6 85 7 
179 1 202 1 275 3 182 4 16 3 327 1 328 1 2 1 330 1 185 3 113 1 187 1 72 1 215 1 76 1 78 1 365 3 79 2 340 1 369 1 24 2 49 1 343 1 52 2 85 2 31 2 
179 2 202 2 182 7 275 5 16 4 327 1 328 2 2 2 330 1 185 4 113 1 187 1 72 1 144 1 215 1 76 2 218 1 78 1 365 4 79 4 340 1 369 1 24 4 49 2 291 1 343 2 52 3 31 4 85 3 
267 1 
173 1 239 1 
277 1 
173 1 59 1 
325 2 173 3 70 1 219 1 59 1 81 1 
173 1 70 1 59 1 
173 1 248 1 
344 1 273 1 233 1 202 1 93 1 349 7 47 1 103 1 63 4 326 1 354 3 104 2 314 3 114 1 343 1 5 1 252 2 
344 1 273 1 233 1 202 1 93 1 349 7 47 1 103 1 63 4 326 1 354 3 104 2 314 3 114 1 343 1 5 1 252 2 
344 1 273 1 233 1 202 1 93 1 349 7 47 1 103 1 96 1 63 4 326 1 354 3 104 2 314 3 114 1 343 1 5 1 252 2 
73 1 179 3 273 2 317 1 233 1 298 1 202 3 286 4 349 20 132 1 172 1 193 1 366 1 103 3 63 10 328 3 2 3 354 4 104 1 314 10 343 3 128 3 252 1 
344 1 273 1 319 2 202 2 93 1 349 9 247 1 41 1 302 1 63 5 329 1 354 3 114 1 5 1 252 2 214 1 233 1 21 1 235 1 47 1 103 1 104 1 314 4 343 2 
14 1 199 1 88 1 0 2 316 1 130 1 300 1 350 1 133 1 324 1 17 1 162 1 134 1 352 1 206 1 135 1 303 1 44 1 115 1 189 1 359 1 80 1 10 2 122 1 263 1 195 1 240 1 290 1 127 1 51 2 
14 1 88 1 0 3 316 1 130 1 300 1 350 1 133 1 324 1 17 1 162 1 352 1 134 2 61 1 206 1 226 1 303 1 44 1 115 1 189 1 359 1 335 1 80 1 10 2 122 1 263 1 240 1 290 1 127 1 51 3 
88 1 0 2 316 1 130 1 300 1 350 1 133 1 324 1 162 1 134 2 352 1 61 1 226 1 303 1 44 1 189 1 359 1 80 1 10 2 122 1 263 1 240 1 290 1 127 1 51 2 
14 1 359 2 88 2 335 1 0 1 35 1 92 1 171 1 300 1 133 1 80 2 206 1 263 1 290 2 51 1 7 1 30 1 
14 1 359 1 88 1 316 1 0 1 130 1 350 1 300 1 133 1 80 1 10 2 17 1 352 1 61 1 135 1 206 1 122 1 263 1 195 1 240 1 303 1 44 1 115 1 290 1 51 1 189 1 
341 1 
33 2 90 1 92 2 182 2 275 2 38 1 224 1 133 2 278 1 42 3 281 1 185 5 283 1 333 1 229 1 236 1 287 1 48 1 147 1 340 1 194 1 152 1 196 1 153 6 240 1 197 1 52 2 294 1 297 1 16 5 300 2 243 2 59 1 210 2 18 1 113 1 67 1 20 2 72 1 118 1 253 4 309 1 256 1 78 1 365 2 173 1 123 2 122 1 175 1 369 1 24 2 263 2 27 2 220 2 265 1 
33 1 118 1 253 2 254 1 90 1 309 1 297 1 256 1 16 3 38 1 236 1 224 1 287 1 147 1 42 1 194 1 175 1 18 1 281 1 153 2 185 3 197 1 
118 1 253 3 254 1 90 1 309 1 297 1 256 1 16 3 38 1 236 1 224 1 365 1 287 1 147 1 42 1 194 1 175 1 369 1 18 1 281 1 153 1 185 3 197 1 20 1 
33 1 118 1 253 3 254 1 90 1 309 1 297 1 256 1 16 3 38 1 236 1 224 1 365 1 287 1 147 1 42 1 194 1 123 1 175 1 369 1 18 1 281 1 153 2 185 3 197 1 20 1 
33 4 90 1 275 1 38 1 224 1 42 3 281 1 185 5 284 1 236 1 287 1 48 1 147 1 340 1 194 1 196 1 153 7 197 1 52 2 159 1 297 1 16 5 243 2 301 1 207 1 18 1 210 2 67 1 20 4 72 1 118 1 253 6 254 1 309 1 256 1 78 1 365 5 123 4 175 1 369 5 24 1 27 2 220 2 32 1 
33 2 90 1 275 1 182 2 38 1 224 1 42 2 281 1 185 4 236 1 287 1 48 1 147 1 340 1 194 1 196 1 153 4 197 1 52 2 294 1 297 1 16 4 243 2 18 1 210 2 67 1 20 2 72 1 118 1 253 4 309 1 256 1 78 1 365 2 175 1 123 2 24 1 369 1 27 2 220 2 
33 2 90 1 297 1 275 1 16 4 38 1 224 1 243 2 301 1 42 2 207 1 210 2 281 1 18 1 185 4 67 1 20 2 284 1 72 1 118 1 253 4 309 1 256 1 78 1 236 1 365 1 287 1 48 1 147 1 340 1 194 1 123 2 175 1 369 1 24 1 196 1 153 4 27 2 220 2 197 1 52 2 
33 2 90 1 297 1 275 1 16 4 38 1 224 1 243 2 301 1 42 2 207 1 210 2 281 1 18 1 185 4 67 1 20 2 284 1 72 1 118 1 253 4 309 1 256 1 78 1 236 1 365 1 287 1 48 1 147 1 340 1 194 1 123 2 175 1 369 1 24 1 196 1 153 4 27 2 220 2 197 1 52 2 
33 2 90 1 297 1 182 2 275 1 16 4 38 1 224 1 301 1 40 1 42 2 97 2 210 2 281 1 18 1 185 4 211 1 67 1 20 2 72 1 308 2 118 1 253 4 309 1 256 1 78 1 236 1 365 1 287 1 147 1 312 1 340 1 194 1 123 2 175 1 369 1 24 1 196 1 153 4 27 2 197 1 
33 3 90 1 159 1 297 1 275 1 16 4 38 1 224 1 243 2 301 1 42 2 207 1 210 2 281 1 18 1 185 4 67 1 20 3 284 1 72 1 118 1 253 5 309 1 256 1 78 1 236 1 365 1 287 1 48 1 147 1 340 1 194 1 175 1 123 3 369 1 24 1 196 1 27 2 153 5 220 2 197 1 52 2 
33 3 90 1 159 1 297 1 275 1 16 4 38 1 224 1 243 2 301 1 42 2 207 1 210 2 281 1 18 1 185 4 67 1 20 3 284 1 72 1 118 1 253 5 309 1 256 1 78 1 236 1 365 1 287 1 48 1 147 1 340 1 194 1 175 1 123 3 369 1 24 1 196 1 27 2 153 5 220 2 197 1 52 2 
33 2 294 1 90 1 297 1 182 2 275 1 16 4 38 1 224 1 42 2 97 2 210 2 18 1 281 1 185 4 67 1 211 1 20 2 72 1 308 2 118 1 253 4 309 1 256 1 78 1 236 1 365 1 287 1 147 1 340 1 194 1 123 2 175 1 369 1 24 1 196 1 153 4 27 2 197 1 
267 1 41 1 302 1 319 2 331 1 356 1 21 1 235 1 58 1 
319 4 349 4 299 1 279 3 41 2 302 2 63 1 331 2 356 1 168 1 357 1 169 1 286 1 21 2 235 2 194 1 260 1 148 1 11 1 149 1 25 3 314 3 128 1 
89 1 271 1 129 1 318 1 92 1 319 2 320 1 107 1 349 2 38 2 300 1 133 1 59 1 246 1 302 1 41 1 63 1 281 1 331 1 355 1 356 1 69 1 70 1 169 1 213 1 21 1 256 2 310 1 235 1 173 1 148 1 122 1 125 1 263 1 149 1 370 1 240 1 314 1 
89 1 271 1 179 2 318 1 92 1 319 6 320 2 93 1 38 3 133 1 279 7 41 3 328 2 2 2 281 1 331 3 5 1 47 1 235 3 103 1 148 1 149 1 104 1 289 2 240 2 343 3 293 1 344 1 242 2 202 3 349 20 300 1 59 2 62 1 302 3 246 1 63 10 354 5 356 3 355 2 114 1 69 7 70 2 252 4 169 2 216 2 256 3 21 3 173 2 122 2 263 1 125 2 25 7 370 1 314 10 84 2 29 2 
199 1 89 1 271 1 318 1 274 1 92 2 319 4 1 1 349 2 38 1 300 4 133 4 351 1 58 1 183 1 59 3 246 1 41 2 302 2 63 1 281 1 331 2 356 2 283 1 333 1 70 1 256 1 21 2 235 2 173 3 288 1 261 1 122 3 263 4 149 1 240 2 314 1 28 1 156 1 177 1 87 1 
89 1 179 1 319 2 202 1 349 3 38 1 279 1 41 1 302 1 246 1 63 1 328 1 2 1 281 1 354 1 140 1 331 1 356 1 69 1 252 1 143 1 21 1 256 1 235 1 148 1 25 1 313 1 314 2 343 1 
179 1 319 2 21 1 349 2 235 1 279 1 58 1 103 1 302 1 41 1 63 2 262 1 25 1 354 1 331 1 356 1 343 1 69 1 
54 1 319 2 21 1 202 1 349 2 235 1 279 1 58 1 302 1 41 1 2 1 25 1 354 1 331 1 356 1 314 2 69 1 252 1 
179 1 319 2 202 1 349 4 279 2 58 1 41 1 302 1 63 2 328 1 2 1 354 2 331 1 356 1 69 2 252 1 21 1 235 1 103 1 25 2 314 2 343 1 
179 1 319 2 21 1 349 2 235 1 279 1 183 1 103 1 302 1 41 1 63 2 262 1 25 1 354 1 331 1 356 1 343 1 69 1 
54 1 319 2 21 1 202 1 349 2 235 1 279 1 183 1 302 1 41 1 2 1 25 1 354 1 331 1 356 1 314 2 69 1 252 1 
179 1 319 2 202 1 349 4 279 2 183 1 41 1 302 1 63 2 328 1 2 1 354 2 331 1 356 1 69 2 252 1 21 1 235 1 103 1 25 2 314 2 343 1 
179 1 319 2 202 1 349 4 279 2 41 1 302 1 63 2 328 1 2 1 354 2 331 1 356 1 69 2 252 1 21 1 235 1 103 1 25 2 314 2 343 1 
318 1 92 1 319 2 320 1 349 2 38 1 300 1 133 1 59 1 302 1 41 1 63 1 331 1 355 1 356 1 70 1 169 1 256 1 21 1 235 1 173 1 122 1 125 1 263 1 149 1 240 1 314 1 84 1 
318 1 92 1 319 2 349 2 38 1 300 1 133 1 111 1 59 1 302 1 41 1 63 1 205 1 331 1 167 1 356 1 70 1 169 1 256 1 21 1 235 1 173 1 122 1 125 1 263 1 149 1 240 1 314 1 
179 1 319 2 202 1 349 4 279 2 41 1 302 1 63 2 328 1 2 1 354 2 331 1 356 1 69 2 252 1 21 1 235 1 103 1 148 1 25 2 314 2 343 1 
199 1 179 1 319 2 320 1 202 1 349 4 38 1 300 1 133 1 279 2 59 1 302 1 41 1 63 2 328 1 2 1 354 2 331 1 355 1 356 1 69 2 70 1 252 1 256 1 21 1 235 1 173 1 103 1 122 1 125 1 263 1 25 2 240 1 314 2 84 1 343 1 29 1 
89 1 179 1 319 2 202 1 349 3 38 1 279 1 41 1 302 1 246 1 63 2 328 1 2 1 281 1 354 1 331 1 356 1 69 1 143 1 21 1 256 1 235 1 103 1 148 1 25 1 313 1 314 1 343 1 198 1 
41 1 302 1 214 1 180 1 319 2 347 1 21 1 109 1 235 1 212 1 
41 1 302 1 214 1 180 1 319 2 347 1 21 1 109 1 235 1 212 1 
41 1 302 1 214 1 180 1 319 2 347 1 21 1 109 1 235 1 212 1 
41 1 302 1 214 1 180 1 319 2 347 1 21 1 109 1 235 1 212 1 
41 1 302 1 214 1 180 1 319 2 347 1 21 1 109 1 235 1 212 1 
39 1 268 1 55 1 362 1 345 1 249 1 371 1 13 1 188 1 334 1 
245 1 98 1 
268 1 124 1 362 1 345 1 249 1 131 1 192 1 13 1 188 1 
268 1 55 1 200 1 345 1 362 1 321 1 16 1 223 1 204 1 365 1 39 1 249 1 154 2 185 1 371 1 83 1 188 1 13 1 
268 1 55 1 200 1 345 1 362 1 321 1 16 1 223 1 204 1 365 1 39 1 249 1 154 2 185 1 371 1 83 1 188 1 13 1 
268 1 55 1 200 1 345 1 362 1 321 1 16 1 223 1 204 1 365 1 39 1 249 1 154 2 185 1 371 1 83 1 188 1 13 1 
225 1 165 1 146 1 
225 1 165 1 146 1 
94 1 150 1 
94 1 150 1 165 1 
23 1 95 1 
268 1 89 2 200 1 345 1 16 1 38 2 204 1 95 1 245 1 246 2 281 2 249 1 185 1 250 1 332 1 98 1 188 1 169 1 362 1 256 2 76 1 77 1 23 1 154 1 176 1 13 1 85 1 
225 1 146 1 
94 1 150 1 165 1 
318 1 274 1 241 1 319 2 1 1 349 2 38 2 300 2 133 2 351 1 59 2 302 1 41 1 63 1 138 1 281 2 331 1 356 1 70 1 120 1 170 1 256 2 21 1 235 1 173 2 338 1 288 1 148 1 122 2 263 2 149 1 240 1 314 1 28 1 177 2 87 1 
199 1 316 1 346 1 130 1 300 2 133 2 22 1 80 1 10 2 352 1 61 1 122 1 263 2 240 1 303 1 282 1 44 1 115 1 189 1 
316 1 346 1 130 1 300 1 133 1 80 1 10 2 352 1 61 1 122 1 263 1 303 1 240 1 44 1 19 1 115 1 189 1 
263 1 92 1 282 1 300 1 157 1 133 1 80 1 30 1 
316 1 346 1 130 1 300 1 133 1 22 1 80 1 10 2 352 1 61 1 122 1 263 1 303 1 240 1 282 1 44 1 115 1 189 1 
121 1 
267 1 
275 1 182 1 16 1 243 1 42 1 185 1 67 1 72 1 78 1 365 2 48 1 340 1 24 1 369 1 153 1 220 1 52 1 
222 2 179 2 92 1 275 9 182 12 133 3 323 2 325 2 42 3 328 2 2 2 185 5 45 1 234 1 336 2 101 2 337 1 287 2 340 4 152 1 153 5 239 3 240 3 343 2 158 1 52 6 199 1 201 2 106 1 242 2 202 2 16 5 300 3 244 1 59 3 248 2 113 2 67 4 70 3 72 4 360 3 217 2 78 4 219 1 364 2 79 6 365 8 174 1 173 10 122 4 369 2 263 3 24 8 31 6 
179 3 317 1 298 1 348 1 182 12 275 10 202 3 16 1 161 1 42 1 328 3 2 3 185 1 67 2 117 1 358 1 72 2 285 1 286 2 78 2 101 3 102 1 79 7 365 6 340 2 369 1 24 6 12 1 153 1 343 3 52 7 128 2 31 7 
89 1 295 1 93 1 202 1 275 2 16 1 38 1 246 1 207 1 329 1 281 1 112 1 185 1 114 1 67 1 307 1 143 1 72 1 360 1 231 1 256 1 101 2 78 1 47 1 340 1 194 1 24 2 343 2 
72 1 275 1 78 1 365 1 244 1 174 1 340 1 24 1 369 1 67 1 
328 2 2 2 24 5 179 2 360 1 242 1 275 5 202 2 182 10 343 2 101 2 365 5 52 5 79 5 31 5 
42 1 369 1 153 1 185 1 16 1 365 1 
92 2 275 2 16 3 300 4 133 4 278 1 59 1 42 2 185 3 113 2 187 1 67 1 283 1 333 1 45 2 72 2 234 1 259 1 78 2 173 1 340 2 368 1 122 1 263 4 152 2 24 2 153 4 240 1 265 1 
89 2 319 2 92 1 320 1 349 1 38 3 300 1 133 1 59 1 41 1 302 1 246 2 281 2 112 1 331 1 141 1 355 1 356 1 70 1 143 2 169 1 21 1 256 3 235 1 173 1 122 1 149 1 263 1 125 1 240 1 314 1 84 1 
72 1 182 4 275 1 78 1 79 2 365 4 340 1 24 2 369 2 152 1 104 1 113 1 67 1 52 2 31 2 
151 1 249 1 13 1 
23 1 166 1 249 1 371 1 13 1 
151 1 249 1 13 1 
151 1 249 1 13 1 
53 1 249 1 13 1 
53 1 249 1 13 1 
53 1 249 1 13 1 
249 1 13 1 
362 1 345 1 
344 1 319 2 93 1 202 2 349 10 41 1 302 1 63 5 329 1 354 4 114 1 5 1 252 2 21 1 235 1 47 1 193 1 103 2 314 5 343 2 
267 1 
179 1 319 2 202 1 21 1 349 4 235 1 302 1 41 1 103 1 63 2 328 1 2 1 354 2 314 2 343 1 6 1 252 1 
179 1 317 1 298 1 202 1 286 2 349 7 103 1 63 3 328 1 2 1 354 2 314 4 343 1 128 1 252 1 
344 1 93 1 202 2 349 11 299 1 63 5 329 1 354 3 114 1 5 1 252 2 286 1 47 1 193 1 103 1 11 1 314 6 343 2 128 1 
314 1 286 1 349 1 
63 1 349 1 128 1 
179 1 319 2 242 1 21 1 202 1 349 6 235 1 41 1 302 1 103 2 63 3 328 1 2 1 354 4 314 3 343 1 6 1 252 2 
179 2 317 1 319 2 202 2 348 1 349 12 41 1 302 1 63 6 328 2 2 2 354 2 117 1 252 1 358 1 285 1 214 1 286 1 21 1 235 1 102 1 103 1 314 6 343 2 128 1 
202 1 93 1 349 6 47 1 103 1 63 3 354 2 314 3 114 1 343 1 252 1 
193 1 11 1 314 1 349 1 
214 1 319 2 21 1 93 2 202 2 349 10 235 1 47 1 41 1 302 1 103 2 63 5 329 1 354 5 314 5 114 2 343 2 252 3 
214 1 179 1 319 2 21 1 349 2 235 1 302 1 41 1 103 1 63 2 354 1 343 1 
214 1 179 1 319 2 202 1 21 1 349 4 235 1 302 1 41 1 103 1 63 2 328 1 2 1 354 2 314 2 343 1 252 1 
214 1 319 4 21 2 93 1 349 3 235 2 193 1 367 1 302 2 41 2 103 1 11 1 63 1 354 2 314 2 114 1 252 1 
344 1 179 2 317 1 319 6 93 1 202 4 349 24 132 1 41 3 302 3 63 12 328 2 329 1 2 2 354 6 114 1 5 1 6 1 252 3 73 1 214 1 286 3 21 3 47 1 235 3 193 1 366 1 367 1 103 3 314 12 343 4 128 3 
344 1 317 1 319 2 202 1 93 1 349 8 41 1 302 1 63 4 354 2 114 1 5 1 252 2 285 1 214 1 286 1 21 1 235 1 47 1 104 1 314 4 343 1 128 1 
344 1 179 1 317 1 319 4 298 1 202 1 93 1 349 11 41 2 302 2 63 6 328 1 354 3 114 1 5 1 6 1 252 2 285 1 214 1 286 2 21 2 47 1 235 2 103 1 104 1 314 5 343 2 128 1 
179 2 317 1 319 4 202 2 348 1 349 13 41 2 302 2 63 6 328 2 2 2 354 2 6 1 117 1 252 1 358 1 285 1 214 1 286 1 21 2 235 2 102 1 193 1 103 1 314 7 343 2 128 1 
179 2 317 1 319 4 202 1 348 1 349 11 41 2 302 2 63 7 328 2 2 1 354 2 6 1 117 1 252 1 358 1 285 1 214 1 286 1 21 2 235 2 102 1 193 1 103 1 314 4 343 2 128 1 
344 1 317 1 319 2 202 1 93 1 349 8 41 1 302 1 63 4 354 2 114 1 5 1 252 2 285 1 214 1 286 1 21 1 235 1 47 1 104 1 314 4 343 1 128 1 
179 2 317 1 319 2 202 2 348 1 349 12 41 1 302 1 63 6 328 2 2 2 354 2 117 1 252 1 358 1 285 1 214 1 286 1 21 1 235 1 102 1 103 1 314 6 343 2 128 1 
179 2 317 1 319 4 348 1 202 1 349 12 41 2 302 2 63 7 328 2 2 1 354 2 6 1 117 1 252 1 358 1 285 1 214 1 286 1 21 2 235 2 102 1 193 2 103 1 314 5 343 2 128 1 
179 2 317 1 319 4 348 1 202 1 349 12 41 2 302 2 63 7 328 2 2 1 354 4 117 1 252 2 358 1 285 1 214 1 286 1 21 2 235 2 102 1 193 2 103 2 367 1 314 5 343 2 128 1 
344 1 202 1 93 3 349 7 47 1 103 3 63 3 354 6 314 4 114 3 5 2 343 1 252 3 
179 2 317 1 319 4 348 1 202 1 349 12 41 2 302 2 63 7 328 2 2 1 354 2 117 1 252 1 358 1 285 1 214 1 286 1 21 2 235 2 102 1 193 2 103 1 367 1 314 5 343 2 128 1 
169 1 281 1 309 1 256 1 257 1 38 1 276 1 
169 1 309 1 181 1 257 1 256 1 276 1 38 1 353 1 26 1 281 1 342 1 116 1 
267 1 263 1 92 1 300 1 133 1 
169 1 89 1 271 1 92 1 320 1 256 2 38 2 300 1 133 1 59 1 173 1 246 1 122 1 125 1 263 1 281 1 240 1 70 1 
169 1 89 1 271 1 320 1 336 1 256 2 38 2 236 1 300 1 133 1 59 2 173 3 248 1 246 2 194 1 175 1 122 1 125 1 263 1 281 2 240 1 70 2 45 1 
169 1 89 1 271 1 336 1 256 2 56 1 38 2 236 1 300 2 133 2 59 2 173 3 248 1 246 2 194 1 175 1 122 1 125 1 263 2 281 2 240 1 167 1 70 2 45 1 
92 1 56 1 16 2 300 3 133 3 59 1 325 1 248 1 185 2 70 1 45 1 305 1 306 1 336 1 287 1 365 1 173 4 122 1 263 3 369 1 153 1 240 1 239 1 
201 1 92 1 336 1 56 1 16 2 300 3 133 3 365 1 287 1 59 1 173 4 325 1 248 1 122 1 369 1 263 3 153 1 185 2 239 1 240 1 70 1 45 1 
122 1 263 1 43 1 240 1 300 1 133 1 
199 1 274 1 92 2 1 2 300 3 133 3 219 1 351 1 59 3 173 3 288 2 261 1 122 4 263 3 227 1 240 2 28 1 156 1 70 2 
199 1 89 1 344 1 271 1 319 4 320 1 202 1 93 1 349 6 38 2 300 1 133 1 279 1 59 1 246 1 302 2 41 2 63 3 281 1 354 2 331 2 356 2 355 1 114 1 5 1 69 1 70 1 252 2 169 2 120 1 216 1 21 2 256 2 47 1 235 2 173 1 148 1 122 1 125 1 263 1 25 1 104 1 240 1 314 3 84 1 343 1 29 1 
222 1 201 1 92 1 275 1 16 3 300 1 133 1 244 1 325 1 42 1 185 3 67 2 72 2 217 1 234 1 78 2 365 1 364 1 287 1 174 1 173 2 340 2 369 1 24 1 263 1 153 2 239 1 85 1 
199 1 300 2 337 1 133 2 219 1 59 1 325 1 173 2 122 2 263 2 43 1 240 1 70 1 
173 1 199 1 122 1 263 4 240 1 92 1 37 1 56 1 283 1 333 1 300 4 133 4 59 1 
1 1 300 2 133 2 351 1 59 1 173 1 288 1 122 2 263 2 240 1 50 1 28 1 70 1 45 1 
122 1 263 1 316 1 240 1 303 1 92 1 44 1 300 1 133 1 10 1 
199 1 274 1 1 1 300 2 133 2 59 2 351 1 173 2 288 1 61 1 122 2 263 2 138 1 240 1 28 1 70 1 
199 1 92 1 274 1 1 1 300 2 133 2 59 2 351 1 173 2 288 1 122 2 261 1 263 2 240 1 28 1 70 1 
199 1 92 1 274 1 1 1 300 2 133 2 59 2 351 1 173 2 288 1 122 2 263 2 64 1 240 1 28 1 70 1 
169 1 89 1 271 1 92 1 256 2 38 2 300 1 133 1 59 1 173 1 246 1 122 1 125 1 263 1 281 1 240 1 167 1 70 1 
1 1 300 1 133 1 219 1 59 1 173 1 288 1 122 2 263 1 227 1 240 1 70 1 45 1 
270 2 65 1 241 1 145 1 
136 1 270 2 99 1 65 1 241 1 185 1 145 1 186 1 16 1 85 1 
270 1 65 1 241 1 145 1 
136 1 270 1 99 1 
267 1 
14 1 0 1 324 1 162 1 206 1 51 1 127 1 
359 1 88 1 0 1 
14 1 221 1 0 2 8 1 110 1 324 1 162 1 206 1 195 1 51 2 127 1 
14 1 0 2 324 1 134 1 162 1 206 1 51 2 127 1 86 1 
14 1 0 1 237 1 280 1 10 1 60 1 352 1 206 1 195 1 44 1 51 1 
14 1 206 1 0 1 195 1 127 1 51 1 
162 1 14 1 206 1 0 1 195 1 127 1 51 1 237 1 
14 1 206 1 3 1 0 1 195 1 126 1 51 1 
14 1 269 1 0 3 237 1 324 1 162 1 134 2 60 1 206 1 163 1 195 1 264 1 127 1 51 3 
14 1 316 1 0 2 361 1 324 1 10 2 162 1 352 1 134 1 206 1 195 1 44 1 127 1 51 2 189 1 
14 1 269 1 0 3 105 1 237 1 324 1 162 1 134 2 60 1 206 1 195 1 127 1 51 3 86 1 
14 1 0 1 324 1 162 1 206 1 195 1 51 1 127 1 
14 1 269 1 0 3 237 1 324 2 162 1 134 2 60 1 206 1 127 1 51 3 
14 1 15 1 0 2 34 1 191 1 324 1 134 1 162 1 206 1 195 1 127 1 51 2 
14 1 221 1 0 2 232 1 110 1 324 1 162 1 206 1 195 1 51 2 127 1 
184 1 251 2 68 1 237 2 
14 1 206 1 0 1 195 1 228 1 51 1 
14 1 0 2 324 1 134 1 162 1 206 1 195 1 264 1 51 2 127 1 
272 1 
14 1 0 1 324 1 162 1 206 1 195 1 51 1 127 1 
14 1 0 2 110 1 324 1 162 1 206 1 195 1 51 2 127 1 
60 1 269 1 237 1 324 1 
127 1 

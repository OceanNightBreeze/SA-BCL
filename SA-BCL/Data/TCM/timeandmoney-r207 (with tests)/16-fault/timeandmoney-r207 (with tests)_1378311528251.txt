#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 311 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (102,156,175,356) (102,156,175,356) (46,57,177,291) 255 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (102,156,175,356) (102,156,175,356) (46,57,177,291) 255 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (139,371) (139,371) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (48,297,333) (48,297,333) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (48,297,333) (48,297,333) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (48,297,333) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (48,297,333) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 45 359 219 49 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 12 230 254 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 12 230 254 95 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (102,156,175,356) (102,156,175,356) (46,57,177,291) (46,57,177,291) (46,57,177,291) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 5921 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 906 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 3884 | return null
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
356 1 150 1 315 1 202 1 300 1 337 1 102 2 175 2 287 2 156 3 214 1 241 3 327 1 
311 1 102 1 175 1 156 1 241 1 327 1 
311 1 102 1 175 1 156 1 241 1 327 1 
311 1 102 1 175 1 156 1 241 1 327 1 
311 1 102 1 175 1 156 1 241 1 327 1 
267 1 102 1 202 2 175 1 136 1 287 3 327 1 85 1 164 2 356 3 150 1 315 1 177 1 300 1 156 4 241 4 199 1 157 1 
267 1 92 1 102 1 175 1 287 1 327 1 328 1 85 1 150 1 315 1 178 1 337 1 156 2 241 2 266 1 279 1 
356 1 46 1 255 1 102 1 175 1 156 2 241 1 327 1 
356 1 46 1 255 1 102 1 175 1 156 2 241 1 327 1 
11 1 293 1 310 1 370 1 107 1 191 1 151 1 31 1 221 1 167 1 335 1 338 1 9 1 90 1 
86 1 
340 1 11 1 86 1 187 1 131 1 42 1 335 2 107 2 
340 1 0 1 11 2 119 2 341 1 304 1 107 5 247 1 373 2 218 1 375 1 86 1 187 1 361 1 335 5 131 2 23 1 56 1 155 2 
340 1 86 1 326 1 
86 1 170 1 45 2 
151 2 293 2 221 1 370 2 9 2 338 2 253 1 90 2 
118 1 348 1 26 1 258 1 237 2 29 1 123 1 125 1 151 2 221 1 33 1 98 1 9 2 338 2 58 2 179 2 60 1 339 1 83 1 135 1 293 2 268 1 370 3 103 1 105 1 38 1 232 1 316 1 299 2 275 2 253 1 172 1 233 1 117 1 25 1 280 1 90 3 
151 1 31 1 293 1 221 1 310 1 370 1 9 1 338 1 90 1 191 1 
212 1 256 1 191 1 355 1 151 1 31 1 221 1 335 1 9 2 338 1 340 1 12 1 293 1 310 2 370 2 342 1 107 1 86 1 167 1 116 1 90 2 
212 1 256 1 191 1 355 1 151 2 31 1 221 1 335 2 9 2 338 2 340 1 293 2 310 2 370 2 107 2 86 1 167 1 116 1 90 2 
176 1 11 1 131 1 335 1 107 1 
340 1 11 1 86 1 187 1 131 1 335 2 107 2 17 1 
131 1 335 1 107 1 
83 1 159 1 258 1 370 2 163 1 38 1 123 1 125 1 232 1 151 1 152 1 316 1 299 1 338 1 9 1 58 1 179 1 233 1 172 1 90 2 
189 1 293 1 370 2 374 1 151 1 9 2 338 1 253 2 90 2 
295 1 152 1 314 1 
83 1 258 1 370 1 123 1 38 1 125 1 232 1 274 1 299 1 316 1 58 1 179 1 253 1 172 1 233 1 90 1 
326 1 253 1 
159 1 151 3 293 1 370 3 9 3 338 3 253 1 90 3 
151 1 31 1 310 1 370 1 9 1 338 1 90 1 
189 1 374 1 151 1 293 1 310 1 370 1 9 1 338 1 90 1 
237 1 151 3 96 1 335 1 98 1 58 1 338 3 9 3 60 1 159 1 293 2 103 1 163 1 107 1 106 1 105 1 299 1 70 1 116 1 172 1 253 1 212 1 256 1 26 1 258 1 29 1 123 1 355 1 125 1 221 1 33 1 179 1 83 1 135 1 310 2 370 4 268 1 38 1 374 1 232 1 316 1 275 2 233 1 90 4 280 1 
159 1 12 1 151 1 370 2 9 2 338 1 253 1 230 1 90 2 
212 1 159 2 256 1 293 1 310 1 370 3 163 1 107 1 355 1 374 1 86 1 151 3 331 1 96 1 335 1 338 3 9 3 116 1 90 3 
159 1 293 1 370 2 295 1 374 1 151 2 152 1 338 2 9 2 90 2 
83 1 258 1 370 1 123 1 38 1 125 1 232 1 299 1 316 1 58 1 179 1 253 1 172 1 233 1 90 1 
99 1 310 1 123 1 299 1 70 1 58 1 179 1 253 1 
26 2 75 1 51 1 237 4 122 1 29 1 54 1 152 2 33 1 222 1 59 1 60 1 34 1 339 2 363 1 268 1 105 1 314 2 269 1 295 2 275 2 345 1 43 1 280 1 
355 1 151 1 310 1 370 1 240 1 9 1 338 1 90 1 
159 2 12 1 183 1 293 1 370 5 163 1 230 1 374 1 151 4 166 1 338 4 9 5 253 1 90 5 
151 2 31 1 310 1 370 2 240 1 9 2 338 2 90 2 
6 1 344 1 286 1 
6 2 285 1 286 2 154 1 278 1 133 1 
6 1 286 1 
6 1 286 1 
285 1 278 1 
285 1 278 1 
285 1 278 1 
6 1 272 1 286 1 
6 1 272 1 286 1 
6 1 272 1 286 1 
6 1 286 1 44 1 
6 1 286 1 44 1 
6 1 286 1 44 1 
284 1 366 2 27 1 227 3 286 2 76 1 107 2 16 2 186 1 30 1 6 2 7 2 86 1 129 1 335 2 207 2 142 2 133 1 321 1 
181 1 366 1 161 1 370 2 227 1 286 1 238 1 107 1 270 1 30 1 6 1 7 1 151 2 67 1 360 1 344 1 335 1 207 1 142 1 9 2 338 2 253 1 346 1 90 2 
267 2 92 1 336 2 318 1 157 1 
267 1 157 1 85 1 
267 1 92 1 85 1 
267 3 92 1 336 1 318 1 52 1 157 2 
267 2 92 1 87 1 336 1 318 1 157 1 
0 1 119 1 323 2 51 1 238 1 122 1 330 1 55 1 361 2 131 1 335 5 222 1 155 1 59 1 340 1 134 2 11 4 181 1 364 1 62 1 107 5 270 1 231 1 373 1 375 3 86 2 187 1 69 1 277 1 170 1 45 3 211 2 
0 1 119 2 323 6 304 1 51 3 122 3 192 1 176 5 55 1 361 6 131 6 335 9 222 3 155 2 59 3 340 1 182 1 134 6 181 4 11 7 101 1 62 3 107 9 231 2 373 2 108 5 109 1 375 8 86 5 187 1 277 2 319 1 170 3 252 1 45 9 
119 1 323 2 304 1 51 1 122 1 330 1 361 2 335 3 222 1 155 1 59 1 340 1 11 2 181 1 134 2 62 1 107 3 231 1 373 1 375 3 86 3 69 1 277 1 170 2 45 4 211 1 
119 1 323 4 304 1 51 2 122 2 192 1 330 1 361 4 335 4 222 2 155 1 59 2 340 1 134 4 181 2 11 3 62 2 107 4 231 1 373 1 109 1 375 5 86 4 69 1 277 1 319 1 170 3 45 7 211 2 
196 1 
83 1 326 1 158 1 
83 1 104 1 
83 1 258 1 
83 3 47 1 316 1 258 1 158 2 313 1 
83 1 316 1 258 1 
83 1 41 1 
282 1 339 4 223 1 26 2 324 1 28 1 121 1 51 1 203 1 237 6 353 1 260 1 53 1 54 2 113 1 345 3 222 1 308 2 
339 1 309 1 26 1 324 1 28 1 237 2 353 2 54 1 345 1 308 1 
282 1 91 1 26 4 324 1 325 1 51 1 237 8 29 1 353 1 260 1 53 2 54 4 222 1 60 1 308 1 339 4 223 1 160 1 268 1 105 1 113 1 275 2 345 6 209 1 
282 1 339 4 223 1 26 2 324 1 28 1 51 1 203 1 237 6 353 1 260 1 53 1 54 2 113 1 345 3 222 1 308 2 
282 1 339 4 223 1 26 3 324 1 28 1 51 1 203 1 237 7 353 1 260 1 53 1 54 2 113 1 345 3 222 1 308 2 
102 1 175 1 236 2 371 1 123 1 139 1 299 1 198 1 337 2 156 1 58 1 179 1 241 1 320 1 
146 1 48 1 299 1 333 1 337 1 102 1 175 1 236 1 179 1 58 1 156 1 241 1 327 1 
48 1 299 1 333 1 337 1 102 1 292 1 175 1 236 1 179 1 58 1 156 1 241 1 327 1 
146 1 14 1 102 1 175 1 236 1 356 1 299 1 333 1 198 1 337 1 156 2 58 1 179 1 241 2 
146 1 356 1 297 1 299 1 14 1 337 1 236 1 179 1 58 1 156 1 241 1 
63 1 
0 1 93 1 148 1 335 4 155 1 58 2 100 1 15 1 64 2 107 4 165 2 299 2 21 1 170 2 119 1 73 2 258 1 213 2 123 2 306 1 125 1 357 2 359 1 361 2 130 1 131 6 179 2 362 2 83 1 224 1 36 1 367 1 229 2 372 2 373 1 375 2 86 1 187 3 277 1 188 1 233 1 45 2 
187 1 367 1 21 1 42 1 131 2 335 2 229 1 107 2 306 1 
367 1 21 1 335 1 362 1 107 1 372 1 306 1 
367 1 107 2 229 1 372 1 306 1 165 1 187 1 21 1 335 2 131 2 42 1 362 1 
0 1 149 1 191 1 151 1 335 4 155 1 338 1 9 1 340 2 293 1 162 1 64 2 107 4 165 4 21 1 167 1 168 1 170 2 347 1 119 1 73 2 213 2 306 1 219 1 357 2 31 1 359 1 221 1 361 1 130 1 131 7 362 3 367 1 310 1 370 1 229 4 372 3 373 1 375 1 86 2 187 3 42 1 90 1 
0 1 119 1 73 2 213 2 306 1 357 2 359 1 130 1 361 1 131 4 335 3 362 2 155 1 340 1 36 1 367 1 64 2 229 2 107 3 372 2 373 1 375 1 86 2 165 2 187 2 21 1 170 2 45 2 
0 1 73 2 119 1 213 2 149 1 306 1 219 1 357 2 359 1 130 1 361 1 131 4 335 3 362 2 155 1 340 1 367 1 162 1 64 2 229 2 107 3 372 2 373 1 375 1 86 1 165 2 187 2 21 1 170 2 
0 1 73 2 119 1 213 2 149 1 306 1 219 1 357 2 359 1 130 1 361 1 131 4 335 3 362 2 155 1 340 1 367 1 162 1 64 2 229 2 107 3 372 2 373 1 375 1 86 1 165 2 187 2 21 1 170 2 
0 1 119 1 367 1 49 1 213 1 107 1 306 1 373 1 357 1 219 1 273 1 375 1 40 1 359 1 21 1 361 1 334 1 335 1 155 1 45 1 
0 1 73 2 119 1 213 2 149 1 306 1 357 2 219 1 359 1 130 1 361 1 131 5 335 3 362 3 155 1 340 1 367 1 162 1 64 2 229 3 107 3 372 3 373 1 375 1 86 1 165 3 187 2 21 1 168 1 170 2 
0 1 73 2 119 1 213 2 149 1 306 1 357 2 219 1 359 1 130 1 361 1 131 5 335 3 362 3 155 1 340 1 367 1 162 1 64 2 229 3 107 3 372 3 373 1 375 1 86 1 165 3 187 2 21 1 168 1 170 2 
0 1 119 1 213 2 306 1 357 2 359 1 361 1 334 1 335 3 131 4 362 2 155 1 340 1 36 1 367 1 184 2 229 2 107 3 372 2 373 1 375 1 86 1 165 2 40 2 187 2 21 1 45 2 
146 1 348 1 26 1 93 1 258 2 190 1 237 2 29 2 123 2 329 1 125 2 151 1 261 1 33 2 292 1 9 1 338 1 179 8 58 8 60 2 34 1 159 1 83 3 339 1 224 1 370 1 268 2 103 1 246 1 105 2 343 1 65 1 248 1 299 7 275 4 233 2 117 2 90 1 280 2 
72 1 26 2 51 1 237 3 122 1 29 1 54 1 151 1 152 1 33 1 222 1 338 1 9 1 60 1 59 1 339 1 62 1 293 1 268 1 370 1 105 1 314 1 295 1 374 1 141 1 275 2 345 1 280 1 90 1 
282 1 26 2 326 1 51 1 237 5 29 1 260 1 54 1 152 1 33 1 222 1 60 1 34 1 308 1 339 3 223 1 268 1 203 1 105 1 314 1 295 1 113 1 275 2 345 1 253 2 280 1 
348 1 26 6 50 1 237 14 51 2 122 2 29 2 53 1 54 1 152 11 262 3 127 3 33 2 132 1 222 1 60 2 59 1 339 8 62 2 268 2 103 1 105 2 314 11 110 1 295 4 141 1 275 4 345 2 249 1 208 1 143 1 253 1 280 1 
1 1 26 1 348 1 258 1 237 2 29 1 123 1 354 1 125 1 151 1 33 1 179 1 58 1 9 1 338 1 60 1 83 1 159 1 339 1 268 1 370 2 103 1 245 1 163 1 105 1 38 1 295 1 232 1 141 1 274 1 316 1 299 1 275 2 253 1 233 1 172 1 280 1 90 2 
146 1 282 1 2 1 237 19 51 3 288 1 53 4 54 3 151 1 152 7 98 2 58 3 338 1 9 1 60 3 59 2 159 1 339 10 62 2 103 1 203 1 163 1 105 3 296 2 295 7 113 1 299 3 250 2 345 7 253 2 172 2 301 2 348 1 26 9 303 1 258 2 122 2 29 3 123 1 260 1 125 2 33 3 222 3 179 3 308 1 83 2 223 1 226 2 370 3 268 3 314 7 38 2 232 2 141 1 316 2 275 6 233 2 90 3 280 3 
339 2 268 1 237 2 51 1 105 1 122 1 314 1 29 1 269 1 53 1 295 1 152 1 275 2 33 1 345 1 60 1 34 1 280 1 
26 2 268 1 237 2 105 1 314 1 29 1 54 1 295 1 152 1 275 2 33 1 345 1 222 1 43 1 60 1 59 1 34 1 280 1 
26 2 51 1 237 4 122 1 29 1 53 1 54 1 152 2 33 1 222 1 60 1 59 1 34 1 339 2 62 1 268 1 105 1 314 2 295 2 275 2 345 2 280 1 
339 2 268 1 237 2 246 1 51 1 105 1 122 1 314 1 29 1 269 1 53 1 295 1 152 1 275 2 33 1 345 1 60 1 280 1 
26 2 268 1 237 2 246 1 105 1 314 1 29 1 54 1 295 1 152 1 275 2 33 1 345 1 222 1 43 1 60 1 59 1 280 1 
26 2 51 1 237 4 122 1 29 1 53 1 54 1 152 2 33 1 222 1 60 1 59 1 339 2 62 1 268 1 246 1 105 1 314 2 295 2 275 2 345 2 280 1 
339 2 26 2 62 1 268 1 51 1 237 4 105 1 122 1 314 2 29 1 53 1 54 1 295 2 152 2 275 2 33 1 345 2 222 1 59 1 60 1 280 1 
348 1 26 1 258 1 237 2 29 1 123 1 125 1 33 1 98 1 179 1 58 1 60 1 339 1 83 1 370 1 268 1 103 1 105 1 38 1 232 1 316 1 299 1 275 2 253 1 233 1 172 1 90 1 280 1 
99 1 26 1 310 1 268 1 103 1 237 1 105 1 29 1 123 1 20 1 299 1 275 2 33 1 70 1 58 1 179 1 253 1 60 1 280 1 
26 2 51 1 237 4 122 1 29 1 53 1 54 1 152 2 33 1 222 1 60 1 59 1 339 2 62 1 268 1 105 1 314 2 295 2 141 1 275 2 345 2 280 1 
26 2 258 1 237 4 51 1 122 1 29 1 53 1 125 1 54 1 152 2 33 1 222 1 98 1 292 1 179 1 58 1 59 1 60 1 339 2 83 1 62 1 370 1 268 1 105 1 314 2 38 1 295 2 296 1 232 1 316 1 299 1 275 2 345 2 233 1 172 1 90 1 280 1 
257 1 26 1 51 1 237 3 122 1 29 1 53 1 151 1 152 1 33 1 222 1 338 1 9 1 59 1 60 1 339 2 62 1 293 1 268 1 370 1 105 1 314 1 374 1 295 1 141 1 275 2 345 1 280 1 90 1 
91 1 235 2 26 10 174 2 237 19 51 3 122 3 29 2 53 3 54 3 262 2 127 1 97 1 222 3 60 2 59 3 82 1 339 9 243 1 62 3 268 2 105 2 275 4 22 1 206 1 249 1 345 6 143 1 144 1 210 1 
91 1 26 8 235 2 325 2 174 1 237 18 51 2 122 2 29 1 77 1 53 1 54 1 262 2 127 2 222 1 60 1 59 1 35 1 339 10 243 2 62 2 365 1 268 1 228 1 105 1 312 1 275 2 22 1 345 2 206 1 143 2 144 2 210 1 322 1 
91 1 235 3 26 17 325 1 174 1 237 32 51 4 122 4 77 1 29 2 53 3 54 2 262 4 127 3 222 4 60 2 59 4 82 1 35 1 339 15 243 2 62 4 365 1 268 2 228 1 105 2 312 1 275 4 22 1 206 1 249 1 345 5 143 3 144 1 210 1 145 1 322 1 
91 1 235 3 26 15 325 2 174 1 237 31 51 4 122 4 77 1 29 2 53 3 54 3 262 4 127 3 222 3 60 2 59 3 82 1 35 1 339 16 243 2 62 4 365 1 268 2 228 1 105 2 312 1 275 4 22 1 206 1 249 1 345 6 143 3 144 1 210 1 145 1 322 1 
282 1 91 1 235 3 26 25 325 1 174 1 50 2 237 51 51 8 122 7 77 1 29 1 260 1 53 7 54 8 262 4 127 4 222 8 60 1 59 7 308 1 35 1 339 26 223 1 243 1 62 7 365 1 268 1 228 1 203 1 105 1 312 1 113 1 275 2 22 1 206 1 249 2 345 15 143 2 144 1 210 1 322 1 
284 1 6 1 7 1 366 1 27 1 286 1 89 1 142 1 207 1 133 1 
344 1 161 1 
6 1 7 1 366 1 286 1 244 1 142 1 207 1 24 1 352 1 
284 1 366 1 27 1 227 2 286 1 107 1 16 1 186 1 30 1 6 1 7 1 86 1 129 1 335 1 207 1 142 1 133 1 321 1 
284 1 366 1 27 1 227 2 286 1 107 1 16 1 186 1 30 1 6 1 7 1 86 1 129 1 335 1 207 1 142 1 133 1 321 1 
284 1 366 1 27 1 227 2 286 1 107 1 16 1 186 1 30 1 6 1 7 1 86 1 129 1 335 1 207 1 142 1 133 1 321 1 
272 1 8 1 154 1 
272 1 8 1 154 1 
44 1 124 1 
154 1 44 1 124 1 
360 1 346 1 
286 1 238 1 6 1 7 1 151 2 360 1 335 1 338 2 9 2 11 1 181 1 366 1 161 1 370 2 227 1 16 1 107 1 186 1 270 1 18 1 67 1 344 1 142 1 207 1 253 1 346 1 90 2 
272 1 8 1 
154 1 44 1 124 1 
348 1 26 1 349 1 258 1 190 1 237 2 217 1 29 1 125 1 33 1 179 2 58 2 9 2 60 1 83 1 339 1 225 1 268 1 370 2 103 1 105 1 343 1 111 1 141 1 66 1 299 2 275 2 233 1 117 2 280 1 90 2 
83 1 224 1 93 1 258 1 351 1 215 1 123 1 125 1 195 1 299 1 81 1 58 1 179 1 233 1 
146 1 267 2 92 1 37 1 52 1 351 1 85 1 125 1 138 1 39 1 80 1 290 1 299 1 81 1 58 1 179 1 157 1 233 1 
146 1 267 2 92 1 37 1 52 1 351 1 85 1 125 1 138 1 39 1 80 1 290 1 299 2 81 1 292 1 58 2 179 2 157 1 233 1 
146 1 267 2 92 1 52 1 85 1 138 1 125 1 39 1 80 1 290 1 299 1 81 1 58 1 179 1 157 1 171 1 233 1 
298 1 
0 1 340 1 119 1 373 1 375 1 86 1 361 1 23 1 56 1 155 1 
134 5 62 2 323 5 51 2 122 2 126 1 375 5 86 5 220 2 361 5 222 2 170 5 59 2 301 1 45 10 
340 1 86 1 187 1 335 1 131 1 107 1 
0 1 119 2 234 2 93 1 148 1 74 1 258 1 304 1 123 2 125 1 361 2 131 4 335 3 155 2 179 4 58 4 83 1 224 1 15 1 107 3 137 1 373 2 375 2 187 2 19 1 299 4 277 2 188 2 233 1 
340 1 375 1 86 1 361 1 23 1 326 1 56 1 
0 1 119 1 73 1 361 1 130 1 131 1 335 1 155 1 340 1 64 1 107 1 373 1 375 1 86 2 187 1 170 1 45 1 
212 1 47 1 0 2 119 2 323 3 258 1 51 1 122 1 216 1 123 1 125 2 79 1 220 1 361 3 263 1 335 2 131 2 222 1 179 1 58 1 155 2 59 1 158 1 242 1 83 4 134 3 62 1 104 2 107 2 185 1 373 2 375 4 86 3 187 1 299 1 316 1 277 1 170 3 233 1 45 6 301 1 281 1 71 1 
0 2 119 2 302 1 323 5 51 2 122 2 77 1 126 1 239 1 220 2 262 1 127 1 361 5 335 1 131 1 222 2 155 2 59 2 340 2 134 5 62 2 365 1 228 1 107 1 312 1 373 2 375 8 86 5 187 1 277 1 188 1 143 1 170 3 45 6 322 1 
0 1 119 1 149 1 51 1 191 1 126 1 151 1 220 2 31 1 221 1 361 1 335 1 222 1 155 1 338 1 9 1 223 1 160 1 293 1 310 1 370 1 107 1 373 1 375 2 113 1 167 1 90 1 
26 1 258 1 237 1 29 1 123 1 125 1 151 2 221 1 33 1 98 1 179 1 58 1 9 2 338 2 60 1 83 1 135 1 293 2 370 3 268 1 103 1 105 1 38 1 232 1 299 1 316 1 275 2 253 1 172 1 233 1 90 3 280 1 
0 1 119 1 323 2 220 1 361 2 155 1 308 1 340 2 134 2 373 1 375 2 86 4 277 1 188 1 170 2 45 4 
284 1 193 1 366 1 142 1 346 1 
366 1 265 1 142 1 
366 1 265 1 142 1 
366 1 265 1 142 1 
366 1 142 1 350 1 
366 1 142 1 350 1 
366 1 142 1 350 1 
366 1 142 1 
6 1 286 1 
91 1 339 3 223 1 160 1 26 3 268 1 237 6 51 1 105 1 29 1 53 2 54 2 113 1 275 2 345 4 222 1 60 1 
91 1 339 2 268 1 51 1 237 2 105 1 122 1 29 1 53 1 275 2 345 1 60 1 
91 1 339 2 26 2 62 1 268 1 51 1 237 4 105 1 122 1 29 1 53 1 54 1 275 2 345 2 222 1 59 1 60 1 
82 1 91 1 339 1 223 1 26 2 325 1 268 2 237 3 105 2 29 2 53 1 54 1 358 1 113 1 275 4 345 2 60 2 
282 1 91 1 26 10 325 1 237 20 51 3 122 2 29 3 260 1 53 3 54 3 289 1 262 3 127 3 222 3 60 3 59 2 82 1 339 10 223 1 160 1 62 2 368 1 268 3 105 3 113 1 317 1 275 6 276 1 345 6 143 1 
282 1 91 1 26 3 51 1 237 7 29 1 260 1 54 1 262 1 127 1 222 1 60 1 308 1 339 4 223 1 365 1 268 1 203 1 105 1 113 1 275 2 345 1 143 1 
282 1 91 1 26 4 237 10 51 2 122 1 29 2 260 1 53 1 54 1 262 2 127 1 222 1 60 2 308 1 339 6 223 1 62 1 365 1 268 2 203 1 105 2 113 1 275 4 276 1 249 1 345 2 143 1 
91 1 26 7 325 1 237 13 51 2 122 2 29 2 77 1 53 1 54 1 262 1 127 1 222 2 60 2 59 2 339 6 62 2 365 1 268 2 228 1 105 2 312 1 275 4 276 1 345 2 143 1 322 1 
91 1 26 4 325 1 237 11 51 2 122 2 29 2 77 1 53 1 54 1 262 1 127 1 222 1 60 2 59 1 339 7 62 2 365 1 268 2 228 1 105 2 312 1 275 4 276 1 345 2 143 1 322 1 
282 1 91 1 26 3 51 1 237 7 29 1 260 1 54 1 262 1 127 1 222 1 60 1 308 1 339 4 223 1 365 1 268 1 203 1 105 1 113 1 275 2 345 1 143 1 
91 1 26 6 237 12 51 2 122 2 29 1 77 1 53 1 54 1 262 1 127 1 222 2 60 1 59 2 339 6 62 2 365 1 268 1 228 1 105 1 312 1 275 2 345 2 143 1 322 1 
91 1 26 5 325 2 237 12 51 2 122 2 29 2 77 1 53 1 54 1 262 1 127 1 222 1 60 2 59 1 339 7 62 2 365 1 268 2 228 1 105 2 312 1 275 4 276 1 345 2 143 1 322 1 
91 1 26 5 325 2 237 12 51 2 122 2 29 2 77 1 53 2 54 2 262 1 127 1 222 1 60 2 59 1 82 1 339 7 62 2 365 1 268 2 228 1 105 2 312 1 275 4 345 4 143 1 322 1 
282 1 339 3 223 3 26 4 237 7 203 1 51 1 260 2 53 3 54 3 113 3 345 6 222 1 
91 1 26 5 325 2 237 12 51 2 122 2 29 2 77 1 53 1 54 1 262 1 127 1 222 1 60 2 59 1 82 1 339 7 62 2 365 1 268 2 228 1 105 2 312 1 275 4 345 2 143 1 322 1 
282 1 26 3 325 1 237 6 51 1 29 1 260 1 53 2 54 2 222 1 60 1 339 3 223 1 160 1 268 1 105 1 113 1 275 2 345 4 
260 1 282 1 339 3 54 1 223 1 26 2 113 1 345 1 326 1 222 1 237 5 51 1 203 1 308 1 
339 2 26 2 62 1 268 1 51 1 237 4 105 1 122 1 29 1 53 1 54 1 275 2 276 1 345 2 222 1 59 1 60 1 
339 3 26 4 62 1 237 7 51 1 122 1 53 1 54 1 262 2 127 1 249 1 345 2 222 1 143 1 59 1 
282 1 26 8 325 1 50 1 51 3 237 16 122 2 260 1 53 2 54 3 262 2 127 2 222 3 59 2 339 8 223 1 160 1 62 2 113 1 249 1 345 5 208 1 
26 1 262 1 237 1 
339 1 127 1 237 1 
339 3 26 3 62 1 268 1 237 6 51 1 105 1 122 1 29 1 53 1 54 2 275 2 276 1 345 3 222 1 60 1 59 1 301 1 
91 1 26 6 237 12 51 2 122 2 29 1 77 1 53 1 54 1 262 1 127 1 222 2 60 1 59 2 339 6 62 2 365 1 268 1 228 1 105 1 312 1 275 2 345 2 143 1 322 1 
339 3 223 1 26 3 203 1 51 1 237 6 53 1 54 1 113 1 345 2 222 1 
26 1 358 1 325 1 237 1 
254 1 12 1 230 1 
254 1 283 1 12 1 68 1 95 1 369 1 251 1 230 1 
83 1 224 1 93 1 94 1 258 1 123 1 78 1 125 1 299 4 292 1 58 4 179 4 233 1 
83 1 2 1 234 1 3 1 258 1 5 1 125 2 299 2 316 1 128 1 264 1 58 2 179 2 233 1 
267 1 125 1 92 1 80 1 299 1 179 1 58 1 233 1 85 1 123 1 
146 1 83 1 258 1 190 1 125 1 66 1 299 2 292 1 58 2 179 2 233 1 
83 3 234 1 224 1 93 1 94 1 258 2 190 1 123 1 329 1 125 2 248 1 299 4 292 1 58 5 179 5 233 2 
83 3 234 1 224 1 93 1 13 1 94 1 258 2 190 1 123 1 125 2 248 1 299 4 292 1 58 5 179 5 233 2 
125 1 83 1 224 1 93 1 299 1 258 1 326 1 179 1 58 1 233 1 123 1 
83 1 159 1 258 1 370 2 123 1 38 1 125 1 232 1 151 1 316 1 299 1 338 1 9 1 58 1 179 1 253 1 233 1 90 2 
256 1 234 1 258 2 305 1 355 1 125 1 151 1 179 1 58 1 9 2 338 2 159 1 83 3 310 1 370 2 38 1 232 1 299 1 316 2 41 1 253 1 233 1 90 2 
256 1 234 1 258 2 305 1 355 1 78 1 125 1 151 1 32 1 179 2 58 2 9 2 338 2 159 1 83 3 310 1 370 2 232 1 299 2 316 2 41 1 253 1 233 1 90 2 
212 1 234 1 258 1 305 1 191 1 125 1 151 1 153 1 31 1 221 1 332 1 131 1 335 2 9 1 338 1 179 1 58 1 158 1 83 4 340 1 293 1 310 1 370 1 104 1 107 2 86 1 299 1 316 1 41 1 167 1 233 1 90 1 
212 1 234 1 258 1 305 1 191 1 125 1 151 1 31 1 221 1 131 1 335 2 9 1 338 1 179 1 58 1 158 1 83 4 340 1 293 1 310 1 370 1 104 1 185 1 107 2 86 1 299 1 316 1 41 1 167 1 233 1 90 1 
125 1 65 1 299 1 179 1 58 1 233 1 
146 1 47 1 83 3 258 2 190 1 123 2 329 1 125 3 65 1 248 1 261 1 299 6 316 1 128 1 264 1 292 1 58 7 179 7 233 2 117 1 200 1 
282 1 51 1 237 5 54 1 151 1 152 1 98 1 292 1 58 1 338 1 9 1 60 2 159 1 339 3 203 1 105 2 295 1 296 1 113 1 299 1 250 1 345 1 172 1 253 2 26 2 258 1 29 2 217 1 260 1 125 1 33 2 222 1 179 1 308 1 83 1 223 1 370 2 268 2 314 1 38 1 232 1 141 1 316 1 275 4 233 1 90 2 280 2 
0 2 51 1 191 1 151 1 335 3 56 1 155 2 58 1 338 1 9 1 158 1 340 1 11 1 160 1 293 1 104 1 107 3 113 1 299 1 167 1 23 1 212 1 119 2 216 1 123 1 126 1 220 2 31 1 221 1 263 1 361 3 131 2 222 1 179 1 83 2 223 1 310 1 370 1 185 1 137 1 373 2 375 2 86 1 187 1 281 1 90 1 
242 1 47 1 83 2 258 1 125 2 65 1 299 2 316 1 292 1 58 2 179 2 158 1 233 1 
83 1 159 1 258 1 370 2 123 1 125 1 232 1 151 1 316 1 299 1 32 1 338 1 9 1 58 1 179 1 253 1 233 1 90 2 
47 1 83 1 234 1 258 1 125 2 299 1 316 1 128 1 264 1 58 1 179 1 233 1 200 1 
307 1 115 1 88 1 253 1 180 1 
212 1 256 1 4 1 191 1 307 1 355 1 151 1 31 1 221 1 96 1 335 2 197 1 9 1 338 1 180 1 201 1 340 1 11 1 293 1 310 2 370 1 107 2 86 1 115 1 167 1 88 1 116 1 90 1 
111 1 349 1 225 1 115 1 370 1 88 1 9 1 180 1 90 1 
201 1 88 1 4 1 
150 1 315 1 102 1 175 1 287 1 156 1 241 1 327 1 
147 1 61 1 102 1 202 1 175 1 287 3 356 2 150 2 204 1 315 2 300 1 156 4 241 4 266 1 
356 1 46 1 291 1 102 1 175 1 57 1 156 2 241 1 327 1 
147 1 61 2 102 1 175 1 287 1 327 1 150 1 315 1 156 3 241 3 266 2 376 1 
271 1 120 2 287 2 259 1 
114 1 102 1 175 1 156 1 241 1 327 1 
356 1 150 1 315 1 102 1 169 1 175 1 287 1 156 2 241 2 327 1 
140 1 
150 1 315 1 102 1 175 1 287 1 156 1 241 1 327 1 
150 1 315 1 326 1 287 1 
150 1 315 1 102 1 175 1 287 1 156 1 241 1 
337 1 84 1 241 1 
147 1 61 1 102 1 175 1 287 1 327 1 194 1 150 1 315 1 156 3 241 3 266 2 
356 1 164 1 150 1 315 1 102 1 175 1 287 1 156 2 241 2 
267 1 177 1 202 1 102 1 175 1 287 1 156 1 157 1 241 1 327 1 85 1 
150 1 102 1 175 1 287 1 156 1 241 1 327 1 
150 2 315 1 102 1 175 1 156 1 241 1 327 1 
173 1 102 2 175 2 287 1 327 1 294 1 150 1 205 1 156 2 241 2 
356 2 150 1 315 1 202 1 300 1 102 1 169 1 175 1 287 2 10 1 156 3 241 3 327 1 
267 2 92 1 102 1 175 1 287 1 52 1 327 1 85 1 356 1 150 1 112 1 315 1 156 2 241 2 157 1 
356 2 164 1 150 1 315 1 202 1 300 1 102 2 175 2 287 2 136 1 156 4 241 4 327 1 
356 1 150 1 315 1 102 1 169 1 175 1 287 1 156 3 241 3 266 1 327 1 
204 1 202 1 300 1 287 1 
150 1 287 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (267,295) (267,295) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (267,295) (267,295) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (267,295) (267,295) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (267,295) (267,295) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (104,180) (104,180) 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 313 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 313 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 313 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 313 92 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 350 324 237 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 319 214 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 263 213 342 91 141 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 263 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 263 213 342 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 263 213 342 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 263 213 342 91 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 263 213 342 91 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (43,303) 177 40 172 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 350 289 52 280 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 350 289 52 280 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 350 289 52 280 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 350 289 52 280 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 350 29 52 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 246 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 259 (110,312) 331 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (104,180) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 319 214 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 350 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 350 29 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 350 324 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (104,180) (104,180) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V | STATEMENT | 3335 | stmt -> ;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9794 | == -> !=
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1908 | 0 -> -1
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
13 1 87 1 315 1 164 1 316 1 167 1 219 1 295 1 234 1 267 1 154 1 
13 1 87 1 315 1 164 1 316 1 167 1 219 1 295 1 234 1 267 1 154 1 
13 1 87 1 315 1 164 1 316 1 167 1 219 1 295 1 234 1 267 1 154 1 
13 1 87 1 315 1 164 1 316 1 167 1 219 1 295 1 234 1 267 1 154 1 
13 4 51 1 170 1 24 1 53 1 73 1 155 1 234 1 205 3 262 3 315 1 195 1 61 2 316 1 117 1 17 2 322 1 154 4 
13 2 134 1 186 1 73 1 234 1 205 1 87 1 315 1 128 1 195 1 316 1 164 1 89 1 117 1 322 1 154 2 
13 3 73 1 234 2 155 1 205 2 262 1 315 1 127 1 61 1 316 2 164 1 117 1 154 3 
144 1 51 1 24 1 53 1 205 5 315 1 61 4 127 1 164 1 316 2 322 1 154 9 13 9 281 1 170 1 73 1 155 3 234 2 262 7 330 1 195 1 117 1 197 1 17 2 
144 1 51 1 24 1 53 1 205 5 315 1 61 4 127 1 164 1 316 2 322 1 154 9 13 9 281 1 170 1 73 1 155 3 234 2 262 7 330 1 195 1 117 1 197 1 17 2 
353 1 157 1 246 1 
7 2 157 1 75 1 
150 2 8 2 160 2 112 2 290 1 343 1 206 2 125 2 
2 1 160 3 146 2 22 2 247 1 343 1 26 1 206 2 125 2 56 1 150 2 251 1 8 2 183 1 294 2 253 1 32 1 64 2 35 1 229 1 210 1 37 1 69 1 283 1 112 3 232 1 114 1 217 1 194 1 98 1 159 1 142 1 118 1 290 1 77 2 336 1 119 1 
308 1 160 1 112 1 343 1 125 1 206 1 150 1 8 1 185 1 106 1 
80 1 308 1 160 2 343 1 125 1 206 1 150 1 88 1 8 2 185 2 106 1 66 1 112 2 113 1 94 1 353 1 157 1 196 1 140 1 178 1 305 1 
80 1 308 1 160 2 343 1 206 2 125 2 150 2 8 2 185 2 106 1 66 1 112 2 113 1 94 2 353 1 157 1 196 1 140 1 178 2 
86 1 23 1 178 1 188 1 94 1 
86 1 353 1 157 1 298 1 163 1 178 2 188 1 94 2 
86 1 178 1 94 1 
80 1 308 1 160 1 112 1 188 1 343 1 94 1 125 1 206 1 150 1 8 1 185 1 178 1 106 1 
157 1 
86 1 353 1 157 1 298 1 178 2 188 1 355 1 94 2 
70 1 180 1 298 1 188 2 301 1 272 2 104 1 94 5 235 1 149 2 86 2 353 1 332 1 152 1 157 1 178 5 321 1 296 1 292 2 
246 1 290 1 
282 1 160 2 112 2 147 1 125 1 206 1 150 1 8 2 290 2 
243 1 303 1 177 1 
160 1 112 1 22 1 232 1 56 1 194 1 183 1 253 1 294 1 32 1 209 1 229 1 210 1 118 1 290 1 77 1 
160 2 112 2 232 1 22 1 125 1 206 1 56 1 194 1 8 1 183 1 32 1 253 1 294 1 303 1 153 1 229 1 210 1 118 1 211 1 77 1 
150 1 8 3 160 3 153 1 112 3 290 1 206 3 125 3 
308 1 8 1 160 1 185 1 112 1 206 1 125 1 
282 1 150 1 8 1 160 1 185 1 112 1 147 1 206 1 125 1 
160 4 146 1 22 1 247 1 343 1 26 1 206 3 125 3 56 1 150 2 183 1 8 3 32 1 253 1 294 1 153 1 185 1 64 2 229 1 35 1 210 1 211 1 66 1 282 1 283 1 112 4 232 1 72 1 42 1 113 1 114 1 94 1 217 1 194 1 98 1 196 1 140 1 142 1 118 1 178 1 290 1 77 1 336 1 119 1 
88 1 8 2 160 2 112 2 153 1 325 1 290 1 206 1 125 1 
282 1 160 3 112 3 123 1 72 1 113 1 94 1 125 3 206 3 150 1 157 1 196 1 8 3 140 1 185 1 153 2 178 1 211 1 66 1 
282 1 150 1 8 1 160 1 303 1 112 1 206 1 125 1 
160 1 112 1 22 1 232 1 194 1 56 1 183 1 253 1 294 1 32 1 229 1 210 1 118 1 290 1 77 1 
160 1 112 1 22 1 194 1 56 1 348 1 253 1 294 1 32 1 229 1 210 1 118 1 254 1 290 1 77 1 
243 1 283 1 310 1 3 1 231 1 146 2 245 1 43 1 247 2 114 1 96 1 217 1 98 1 303 1 64 2 142 1 177 1 241 1 336 1 
339 1 160 1 112 1 125 1 206 1 8 1 185 1 66 1 
282 1 255 1 160 5 112 5 325 1 327 1 125 4 206 4 150 1 88 1 8 5 153 2 290 1 211 1 
308 1 8 1 160 1 185 1 112 1 206 1 125 1 
57 1 218 1 
57 1 218 1 
63 1 139 1 
63 1 139 1 
63 1 139 1 
57 1 165 1 218 1 
57 1 218 1 5 1 
309 1 57 2 63 1 139 1 225 1 218 2 
57 1 165 1 218 1 
57 1 165 1 218 1 
57 1 218 1 199 1 
57 1 218 1 199 1 
57 1 218 1 199 1 
351 2 341 1 225 1 203 2 94 2 54 2 215 1 115 1 250 2 302 1 157 1 57 2 105 1 100 3 101 1 218 2 178 2 320 1 143 2 
1 1 160 2 5 1 206 2 125 2 54 1 250 1 57 1 58 1 182 1 8 2 317 1 351 1 112 2 326 1 94 1 215 1 100 1 218 1 178 1 143 1 47 1 290 1 307 1 
195 1 24 1 322 1 
195 1 128 1 322 1 
128 1 21 1 304 1 24 2 322 3 74 1 
128 1 158 1 304 1 24 1 322 2 74 1 
128 1 304 1 24 1 322 2 74 2 
268 1 298 1 188 3 313 1 272 1 94 4 85 1 208 1 86 1 149 1 353 1 157 1 31 1 178 4 321 1 10 1 296 1 292 1 
340 1 298 1 50 1 23 1 188 3 313 1 272 1 94 4 85 1 149 1 86 2 353 1 157 1 31 1 178 4 321 1 296 1 292 1 79 1 
268 1 188 1 313 1 272 1 94 2 149 1 152 1 31 1 178 2 321 1 10 1 292 1 
268 1 92 1 313 1 272 1 94 1 149 1 152 1 31 1 178 1 321 1 10 1 292 1 
56 1 41 1 246 1 
30 1 56 1 
168 1 
56 1 118 1 
56 3 41 2 210 1 118 1 354 1 126 1 
56 1 210 1 118 1 
56 1 6 1 
223 1 231 2 146 4 245 1 271 1 247 1 248 1 96 3 193 1 287 1 173 1 176 1 65 1 37 3 78 1 220 1 130 2 
223 1 231 2 146 4 245 1 271 1 247 1 248 1 96 3 193 1 287 1 173 1 176 1 65 1 37 3 78 1 220 1 130 2 
223 1 231 2 146 4 245 1 271 1 247 1 189 1 248 1 96 3 193 1 287 1 173 1 176 1 65 1 37 3 78 1 220 1 130 2 
237 1 324 1 129 1 146 3 247 1 37 2 248 1 78 2 350 1 130 1 297 1 
223 1 146 6 245 1 247 2 248 1 226 1 64 4 65 1 37 4 130 2 283 2 39 1 231 3 114 2 96 4 217 2 193 1 287 1 173 1 176 1 142 2 78 1 220 1 121 1 
21 1 22 1 24 1 162 1 124 1 344 1 205 1 315 1 128 1 316 1 164 1 294 1 229 1 322 2 154 2 12 1 131 1 13 2 73 1 234 1 262 1 156 1 45 1 194 1 195 1 117 1 306 1 77 1 49 1 337 1 
102 1 21 1 22 1 24 1 162 1 344 1 59 1 274 1 128 1 316 1 164 1 294 1 229 1 322 2 154 2 12 1 131 1 13 2 234 1 262 1 191 1 156 1 45 1 194 1 195 1 77 1 49 1 337 1 
102 1 294 1 22 1 77 1 162 1 191 1 
19 1 22 1 162 2 56 1 274 1 316 1 164 2 294 1 253 1 229 1 154 1 13 1 71 1 300 1 93 1 234 1 156 2 194 1 45 2 76 1 334 1 118 1 77 1 
21 1 22 1 24 1 162 1 344 1 315 1 128 1 316 1 164 1 294 1 229 1 322 2 154 1 12 1 131 1 13 1 234 1 191 1 156 1 45 1 194 1 195 1 306 1 77 1 49 1 337 1 
151 1 
22 1 214 1 272 1 94 1 149 1 31 1 253 1 294 1 319 1 178 1 321 1 77 1 296 1 292 1 
244 1 160 1 345 1 86 2 88 1 8 1 185 1 66 1 298 1 212 1 112 1 113 1 169 1 328 2 94 3 353 1 157 1 138 1 196 1 264 1 140 1 305 1 178 3 355 1 
244 1 133 1 212 1 160 1 112 1 113 1 328 3 94 2 345 1 353 1 138 1 157 1 88 1 196 1 8 1 140 1 264 1 185 1 178 2 305 1 66 1 
244 1 160 1 345 1 86 2 88 1 8 1 185 1 228 1 66 1 133 1 298 1 212 1 112 1 113 1 169 1 328 3 94 3 353 1 157 1 138 1 196 1 264 1 140 1 305 1 178 3 355 1 
244 1 160 1 342 1 293 1 272 1 345 1 149 1 86 3 88 1 8 1 185 1 228 2 91 1 321 1 66 1 296 1 256 1 257 1 298 1 212 1 213 1 112 1 169 2 113 1 328 2 94 3 332 1 353 1 157 1 138 1 196 1 263 1 264 1 140 1 141 1 305 1 178 3 265 1 355 1 266 1 292 1 
244 1 160 1 293 1 272 1 345 1 149 1 88 1 8 1 185 1 321 1 66 1 296 1 256 1 257 1 212 1 112 1 113 1 328 2 94 2 332 1 353 1 138 1 157 1 196 1 263 1 264 1 140 1 305 1 178 2 266 1 292 1 
244 1 160 1 342 1 293 1 272 1 345 1 149 1 88 1 8 1 185 1 321 1 66 1 296 1 256 1 257 1 212 1 213 1 112 1 113 1 328 2 94 2 332 1 353 1 157 1 138 1 196 1 263 1 264 1 140 1 305 1 178 2 265 1 266 1 292 1 
244 1 160 1 342 1 293 1 272 1 345 1 149 1 88 1 8 1 185 1 321 1 66 1 296 1 256 1 257 1 212 1 213 1 112 1 113 1 328 2 94 2 332 1 353 1 157 1 138 1 196 1 263 1 264 1 140 1 305 1 178 2 265 1 266 1 292 1 
244 1 145 1 160 1 293 2 272 1 345 1 148 1 86 4 7 2 149 1 273 2 88 1 8 1 185 1 228 2 278 2 321 1 66 1 296 1 256 2 133 2 298 2 212 1 213 1 112 1 169 2 113 1 328 4 94 4 332 1 353 2 238 1 157 2 138 1 196 1 263 1 264 1 140 1 305 1 178 4 292 1 
244 1 160 1 342 1 293 1 272 1 345 1 149 1 86 1 88 1 8 1 185 1 228 1 91 1 321 1 66 1 296 1 256 1 257 1 133 1 212 1 213 1 112 1 113 1 169 1 328 3 94 2 332 1 353 1 157 1 138 1 196 1 263 1 264 1 140 1 305 1 178 2 265 1 266 1 292 1 
244 1 160 1 342 1 293 1 272 1 345 1 149 1 86 1 88 1 8 1 185 1 228 1 91 1 321 1 66 1 296 1 256 1 257 1 133 1 212 1 213 1 112 1 113 1 169 1 328 3 94 2 332 1 353 1 157 1 138 1 196 1 263 1 264 1 140 1 305 1 178 2 265 1 266 1 292 1 
272 1 149 1 7 2 273 2 8 1 185 1 228 2 318 1 278 2 66 1 321 1 112 1 113 1 328 4 332 1 157 2 238 1 196 1 292 1 244 1 160 1 293 2 345 1 86 4 88 1 296 1 256 2 133 2 298 2 212 1 169 2 94 4 353 2 138 1 140 1 264 1 263 1 178 4 305 1 
283 1 231 2 146 3 245 1 246 1 247 1 114 1 96 2 217 1 193 1 287 1 98 1 173 1 176 1 64 2 142 1 65 1 290 1 37 2 241 1 336 1 130 1 220 1 
243 2 283 1 40 1 146 2 247 1 114 1 172 1 346 1 217 1 98 1 129 1 303 3 64 2 142 1 177 3 37 1 336 1 297 1 
243 1 2 1 160 1 146 2 247 1 206 1 125 1 314 1 346 1 8 1 153 1 34 1 64 2 211 1 37 1 283 1 112 1 114 1 217 1 98 1 142 1 336 1 119 1 
160 2 146 1 22 1 312 1 247 1 26 1 206 1 125 1 346 1 56 1 183 1 8 1 32 1 253 1 294 1 153 1 229 1 64 4 210 1 211 1 283 2 112 2 232 1 136 1 114 2 260 1 137 1 217 2 194 1 98 2 142 2 118 1 77 1 336 2 119 1 
19 1 0 1 221 1 2 1 146 2 22 2 247 1 56 2 294 2 253 1 229 2 64 2 210 1 37 1 109 1 69 1 283 1 187 1 114 1 93 1 217 1 194 3 98 1 116 1 142 1 118 2 77 2 336 1 338 1 119 1 
243 1 3 1 160 1 146 3 245 1 247 2 125 1 206 1 346 1 150 1 60 1 8 1 184 1 64 2 37 1 282 1 283 1 231 1 112 1 285 1 114 1 96 1 217 1 193 1 98 1 303 1 142 1 177 1 336 1 
223 1 243 1 283 1 224 1 146 2 114 1 96 1 217 1 193 1 98 1 303 1 184 1 64 2 142 1 177 1 37 2 241 1 336 1 
243 1 283 1 310 1 3 1 231 1 146 2 245 1 247 2 114 1 96 1 217 1 98 1 303 1 64 2 142 1 177 1 241 1 336 1 
243 2 223 1 3 1 146 4 245 1 247 2 60 1 184 1 64 2 37 2 283 1 231 1 114 1 96 2 217 1 193 1 98 1 303 2 142 1 177 2 336 1 241 1 
223 1 243 1 283 1 224 1 146 2 187 1 114 1 96 1 217 1 193 1 98 1 303 1 184 1 64 2 142 1 177 1 37 2 336 1 
243 1 283 1 310 1 3 1 231 1 146 2 245 1 187 1 247 2 114 1 96 1 217 1 98 1 303 1 64 2 142 1 177 1 336 1 
223 1 243 1 283 1 146 2 187 1 114 1 96 1 217 1 193 1 98 1 60 1 303 1 184 1 64 2 142 1 177 1 37 2 336 1 
223 1 243 1 283 1 146 2 114 1 96 1 217 1 193 1 98 1 60 1 303 1 184 1 64 2 142 1 177 1 37 2 336 1 
2 1 160 1 146 2 22 1 247 1 26 1 56 1 183 1 32 1 294 1 253 1 229 1 64 2 210 1 37 1 283 1 112 1 232 1 114 1 217 1 194 1 98 1 142 1 118 1 290 1 77 1 336 1 119 1 
2 1 160 1 146 2 22 1 247 1 181 1 56 1 348 1 32 1 294 1 253 1 229 1 64 2 210 1 254 1 37 1 283 1 112 1 114 1 217 1 194 1 98 1 142 1 118 1 290 1 77 1 336 1 119 1 
223 1 243 1 283 1 146 2 114 1 96 1 346 1 217 1 193 1 98 1 60 1 303 1 184 1 64 2 142 1 177 1 37 2 336 1 
223 1 243 1 160 1 146 2 22 1 26 1 124 1 56 1 60 1 183 1 32 1 294 1 184 1 229 1 64 2 210 1 37 2 283 1 112 1 232 1 114 1 260 1 96 1 217 1 193 1 194 1 98 1 303 1 142 1 177 1 118 1 77 1 336 1 
223 1 243 1 311 1 160 1 146 2 125 1 206 1 346 1 150 1 60 1 8 1 184 1 64 2 37 2 282 1 283 1 112 1 114 1 96 1 217 1 193 1 98 1 303 1 142 1 177 1 336 1 
283 1 201 1 146 4 52 1 233 1 247 2 114 1 217 1 129 1 64 2 142 1 289 1 37 2 280 1 350 1 297 1 121 1 
283 1 201 1 146 4 52 1 233 1 247 2 114 1 217 1 129 1 64 2 142 1 289 1 37 2 280 1 350 1 297 1 121 1 
283 1 201 1 146 4 52 1 233 1 247 2 114 1 217 1 129 1 64 2 142 1 289 1 37 2 280 1 350 1 297 1 121 1 
283 1 201 1 146 4 52 1 233 1 247 2 114 1 217 1 129 1 64 2 142 1 289 1 37 2 280 1 350 1 297 1 121 1 
283 1 201 1 146 8 52 2 233 2 247 4 114 1 29 1 217 1 129 2 64 2 142 1 289 2 37 4 350 2 280 1 297 2 121 1 
250 1 302 1 57 1 351 1 101 1 225 1 218 1 349 1 143 1 54 1 
1 1 5 1 
250 1 57 1 202 1 351 1 218 1 108 1 143 1 27 1 54 1 
351 1 341 1 225 1 203 1 94 1 215 1 54 1 115 1 250 1 302 1 157 1 57 1 105 1 100 2 101 1 218 1 178 1 143 1 
351 1 341 1 225 1 203 1 94 1 215 1 54 1 115 1 250 1 302 1 157 1 57 1 105 1 100 2 101 1 218 1 178 1 143 1 
351 1 341 1 225 1 203 1 94 1 215 1 54 1 115 1 250 1 302 1 157 1 57 1 105 1 100 2 101 1 218 1 178 1 143 1 
309 1 165 1 171 1 
309 1 165 1 171 1 
84 1 199 1 
84 1 309 1 199 1 
317 1 326 1 
1 1 160 2 5 1 203 1 125 2 206 2 54 1 55 1 250 1 105 1 57 1 58 1 182 1 8 2 317 1 351 1 112 2 326 1 188 1 94 1 100 1 218 1 178 1 143 1 47 1 290 1 307 1 
165 1 171 1 
84 1 309 1 199 1 
2 1 160 2 146 2 22 2 247 1 204 1 346 1 56 1 276 1 8 2 294 2 33 1 229 1 64 2 37 1 69 2 283 1 284 1 112 2 114 1 352 1 217 1 194 1 98 1 16 1 142 1 118 1 77 2 336 1 338 1 119 1 
21 1 14 1 22 2 24 1 124 1 191 1 156 1 194 1 195 1 128 1 288 1 294 2 229 1 322 2 77 2 337 1 198 1 12 1 131 1 
111 1 21 1 14 1 22 1 24 1 191 1 156 1 194 1 195 1 128 1 294 1 229 1 322 2 77 1 337 1 12 1 131 1 
19 1 22 1 300 1 93 1 261 1 156 1 194 1 56 1 288 1 253 1 294 1 229 1 118 1 77 1 
21 1 14 1 22 1 24 1 191 1 156 1 194 1 195 1 128 1 288 1 294 1 229 1 322 2 77 1 337 1 198 1 12 1 131 1 
333 1 
353 1 332 1 157 1 180 1 246 1 321 1 104 1 
257 1 149 1 332 1 321 1 272 1 296 1 266 1 292 1 
110 1 259 1 22 1 272 1 126 1 331 1 30 1 149 1 194 2 56 2 31 1 253 1 294 1 229 1 210 1 118 1 107 1 321 1 77 1 296 1 292 1 
29 1 149 1 332 1 129 1 321 1 272 1 296 1 350 1 292 1 297 1 
323 1 245 1 272 1 94 1 97 2 149 1 332 2 193 2 287 1 178 1 65 1 321 1 265 1 335 1 296 1 220 1 292 1 
149 1 353 1 332 1 157 1 321 1 272 1 296 1 104 1 292 1 
230 1 3 1 245 1 75 1 7 2 193 1 332 2 60 1 157 1 184 1 321 1 120 1 
86 1 353 1 157 1 298 1 178 1 94 1 
122 1 22 1 214 1 272 1 149 1 31 1 253 1 294 1 319 1 321 1 77 1 296 1 292 1 
160 3 146 1 22 1 247 1 343 1 26 1 206 2 125 2 150 2 56 1 8 2 183 1 294 1 253 1 32 1 64 2 35 1 229 1 210 1 283 1 112 3 232 1 114 1 217 1 194 1 98 1 142 1 118 1 290 1 77 1 336 1 119 1 
80 1 308 1 160 1 343 1 272 1 125 1 206 1 149 1 150 1 31 1 8 1 185 1 106 1 321 1 296 1 112 1 353 1 157 1 292 1 
351 1 36 1 54 1 
351 1 317 1 101 1 67 1 54 1 
351 1 36 1 54 1 
351 1 36 1 54 1 
351 1 18 1 54 1 
351 1 18 1 54 1 
351 1 18 1 54 1 
351 1 54 1 
57 1 218 1 
283 1 146 2 247 1 114 1 217 1 29 1 129 1 64 2 142 1 37 1 350 1 121 1 297 1 
283 2 146 2 247 1 114 2 217 2 29 1 129 1 64 4 9 1 142 2 37 1 350 1 297 1 121 1 
223 1 269 1 3 2 146 16 245 3 247 8 226 1 29 1 60 2 129 1 184 2 64 6 9 1 65 1 90 1 37 8 130 1 350 1 297 1 283 3 231 3 286 1 114 3 44 1 96 4 217 3 287 1 193 3 173 1 176 1 142 3 220 1 121 1 
283 1 146 2 247 1 114 1 217 1 29 1 129 1 64 2 142 1 37 1 350 1 121 1 297 1 
283 1 146 2 247 1 114 1 217 1 29 1 129 1 64 2 142 1 37 1 350 1 121 1 297 1 
223 1 269 1 3 2 146 12 245 2 247 6 29 1 60 2 129 1 184 2 64 2 90 1 37 6 350 1 297 1 283 1 231 1 286 1 114 1 44 1 96 2 217 1 193 2 142 1 121 1 
283 2 146 2 247 1 114 2 217 2 29 1 129 1 64 4 142 2 9 1 37 1 350 1 297 1 121 1 
283 2 146 2 247 1 114 2 217 2 29 1 175 1 129 1 64 4 142 2 37 1 350 1 297 1 121 1 
223 2 231 3 146 5 245 1 247 2 96 5 287 2 193 1 173 1 176 2 65 2 37 3 130 1 220 1 
283 2 146 2 247 1 114 2 217 2 29 1 175 1 129 1 64 4 142 2 37 1 350 1 297 1 121 1 
223 1 283 2 231 2 146 5 245 1 247 2 114 2 226 1 96 3 217 2 193 1 287 1 173 1 176 1 64 4 142 2 65 1 37 3 130 1 220 1 
231 2 146 3 245 1 246 1 247 1 96 2 287 1 193 1 173 1 176 1 65 1 37 2 130 1 220 1 
283 1 223 1 3 1 231 1 146 4 245 1 247 2 114 1 96 2 217 1 193 1 60 1 184 1 64 2 9 1 142 1 37 2 
129 1 146 2 247 1 37 1 350 1 297 1 
40 1 129 1 146 2 247 1 37 1 297 1 
129 1 146 1 247 1 
146 1 37 1 297 1 
283 1 222 1 223 1 3 1 231 2 146 6 245 1 247 3 114 1 96 3 217 1 193 1 60 1 184 1 64 2 142 1 9 1 37 3 
283 1 146 2 247 1 114 1 217 1 29 1 129 1 64 2 142 1 37 1 350 1 121 1 297 1 
193 1 146 2 245 1 247 1 37 1 220 1 
223 1 83 1 283 1 231 1 146 3 247 2 114 1 226 1 96 2 217 1 287 1 173 1 176 1 64 2 142 1 65 1 37 1 
283 1 223 2 231 2 146 8 245 2 247 4 114 1 96 4 217 1 287 1 193 2 64 2 142 1 65 1 335 1 37 4 220 1 121 1 
96 1 217 1 223 1 193 1 283 1 146 2 184 1 64 2 142 1 37 2 114 1 121 1 
283 1 223 1 3 1 231 1 146 4 245 1 247 2 114 1 96 2 217 1 193 1 60 1 184 1 64 2 142 1 37 2 121 1 
83 1 283 3 223 1 231 1 146 3 247 2 114 3 226 1 96 2 217 3 287 1 175 1 64 6 142 3 65 1 37 1 121 1 
283 3 324 1 146 2 247 1 114 3 217 3 175 1 129 1 64 6 142 3 9 1 37 1 350 1 297 1 121 1 
88 1 8 1 160 1 277 1 112 1 325 1 290 1 
81 1 160 1 112 1 325 1 135 1 25 1 95 1 88 1 8 1 277 1 290 1 68 1 
19 1 194 1 56 1 294 1 253 1 229 1 22 1 118 1 246 1 93 1 77 1 
160 2 112 2 22 1 232 1 125 1 206 1 56 1 194 1 8 1 32 1 253 1 294 1 153 1 229 1 210 1 118 1 290 1 77 1 
160 2 22 1 161 1 6 1 206 2 125 1 56 3 8 2 294 1 32 1 153 1 185 1 229 1 210 2 66 1 11 1 112 2 232 1 113 1 194 1 118 2 290 1 77 1 
160 2 22 2 161 1 6 1 206 2 125 1 56 3 348 1 8 2 294 2 32 1 153 1 185 1 229 1 210 2 66 1 11 1 112 2 113 1 194 1 118 2 290 1 77 2 240 1 
41 1 22 3 161 1 6 1 94 2 207 1 30 1 86 1 353 1 194 1 56 4 157 1 253 1 140 1 294 3 239 1 229 1 210 1 118 1 178 2 77 3 240 1 11 1 
80 1 179 1 308 1 160 1 22 1 343 1 125 1 206 1 86 1 30 1 56 2 150 1 8 1 294 1 185 1 106 1 11 1 112 1 41 1 94 2 353 1 157 1 140 1 178 2 77 1 
194 1 294 1 229 1 22 1 77 1 291 1 
0 1 200 1 221 1 22 6 103 1 352 1 124 1 126 1 191 1 249 1 56 3 194 3 253 2 294 7 229 2 210 1 118 2 166 1 77 7 291 1 69 1 
160 2 146 3 22 1 245 1 312 1 247 1 124 1 26 1 206 1 125 1 346 1 56 1 276 1 8 1 183 1 32 1 294 1 153 1 229 1 64 4 210 1 65 1 37 2 130 1 283 2 231 2 112 2 232 1 114 2 260 1 96 2 217 2 193 1 287 1 194 1 173 1 98 2 176 1 142 2 118 1 290 1 77 1 336 2 220 1 
179 1 180 1 122 1 22 1 272 2 104 1 149 2 30 1 86 2 56 2 253 1 294 1 321 1 296 2 110 1 259 1 298 1 41 1 188 1 94 3 353 1 332 1 157 1 140 1 178 3 48 1 77 1 292 2 
41 1 22 2 124 1 126 1 56 2 194 2 294 2 229 1 210 1 107 1 118 1 77 2 291 1 
19 1 22 4 93 1 124 1 194 1 56 1 275 1 253 1 294 4 229 1 118 1 77 4 240 1 
0 1 221 1 22 2 56 1 194 2 252 1 116 1 294 2 229 1 210 1 118 1 77 2 11 1 109 1 
194 1 195 1 128 1 294 1 253 1 229 1 22 1 322 1 77 1 337 1 
22 2 124 1 352 1 191 1 56 1 194 1 294 2 16 1 229 1 118 1 77 2 
19 1 22 4 103 1 93 1 124 1 352 1 249 1 56 3 194 2 275 1 253 1 294 5 229 2 118 2 77 5 11 1 
19 1 22 4 103 1 93 1 124 1 352 1 216 1 56 3 194 2 275 1 253 1 294 5 229 2 118 2 77 5 11 1 
160 2 112 2 22 1 125 1 206 1 56 1 194 1 8 1 348 1 32 1 253 1 294 1 153 1 229 1 210 1 118 1 290 1 77 1 
0 1 200 1 221 1 22 1 126 1 56 1 194 2 294 1 229 1 210 1 118 1 77 1 11 1 
329 1 290 1 242 1 190 1 279 1 
80 1 308 1 160 1 343 1 28 1 206 1 125 1 150 1 62 1 8 1 185 2 106 1 66 1 279 1 112 1 72 1 113 1 329 1 188 1 190 1 94 2 15 1 353 1 157 1 196 1 140 1 178 2 242 1 
284 1 160 1 112 1 190 1 204 1 8 1 33 1 242 1 279 1 
62 1 28 1 279 1 
117 1 246 1 73 1 205 1 
13 1 316 1 117 1 73 1 234 1 205 1 154 1 
45 1 164 1 154 1 
13 3 82 1 270 1 134 2 234 1 73 1 205 1 192 1 315 1 316 1 117 1 154 3 
13 2 316 1 117 1 17 1 73 1 234 1 205 1 262 1 154 2 
13 1 170 1 24 1 234 1 205 1 315 1 61 1 195 1 316 1 322 1 154 1 
13 1 315 1 316 1 117 1 234 1 205 1 154 1 
13 1 315 1 316 1 117 2 73 1 234 1 154 1 
13 2 234 2 205 1 236 1 315 1 347 1 316 2 117 1 38 1 154 2 
13 3 281 1 73 1 234 1 155 1 205 2 262 2 315 1 61 1 316 1 117 1 197 1 154 3 
13 2 20 1 21 1 24 1 73 1 234 1 205 1 262 1 315 1 128 1 195 1 316 1 117 1 322 2 154 2 
13 4 53 1 73 1 234 2 155 1 205 2 262 2 315 1 61 1 316 2 117 1 17 1 154 4 
13 1 315 1 316 1 117 1 73 1 234 1 205 1 154 1 
13 4 82 1 134 1 73 2 234 1 155 1 205 3 262 2 192 1 59 1 61 1 316 1 117 2 154 4 
13 2 315 1 316 1 46 1 227 1 117 1 73 1 234 1 205 1 262 1 330 1 154 2 
13 3 192 1 82 2 134 2 315 1 99 1 316 1 117 1 73 1 234 1 205 1 154 3 
299 2 4 1 205 2 132 1 
13 1 258 1 315 1 316 1 234 1 154 1 
13 2 315 1 316 1 117 1 197 1 73 1 234 1 205 1 262 1 154 2 
174 1 
13 1 315 1 316 1 117 1 73 1 234 1 205 1 154 1 
13 3 134 1 234 1 73 1 205 1 262 1 315 1 316 1 117 1 197 1 154 3 
59 1 61 1 155 1 205 1 
117 1 205 1 

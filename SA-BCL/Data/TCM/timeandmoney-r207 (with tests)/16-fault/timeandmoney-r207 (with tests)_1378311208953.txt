#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (59,133) (59,133) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (59,133) (59,133) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (59,133) (59,133) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (59,133) (59,133) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (122,237) 269 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (122,237) 269 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (122,237) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 140 82 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 140 82 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 140 82 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 140 340 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 140 82 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 1 166 2 37 1 101 1 27 1 225 2 266 1 276 1 132 1 59 1 34 1 133 1 97 1 214 1 63 1 
122 1 166 2 37 1 101 1 27 1 225 2 266 1 276 1 132 1 59 1 34 1 133 1 97 1 214 1 63 1 
122 1 166 2 37 1 101 1 27 1 225 2 266 1 276 1 132 1 59 1 34 1 133 1 97 1 214 1 63 1 
122 1 166 2 37 1 101 1 27 1 225 2 266 1 276 1 132 1 59 1 34 1 133 1 97 1 214 1 63 1 
166 4 261 1 295 3 44 1 373 2 101 1 27 1 225 4 216 1 69 1 266 1 130 3 9 2 132 1 34 1 79 1 369 1 214 1 
166 2 261 1 37 1 205 1 67 1 27 1 225 2 69 1 266 1 276 1 130 1 277 1 132 1 34 1 214 1 62 1 63 1 
166 2 377 1 237 1 295 1 269 1 34 1 225 2 27 1 266 1 
166 2 377 1 237 1 295 1 269 1 34 1 225 2 27 1 266 1 
166 1 237 1 34 1 225 1 27 1 266 1 
184 1 41 1 239 1 
198 1 184 1 134 2 
18 1 24 2 117 2 137 1 85 2 96 2 200 2 42 2 
306 2 24 3 99 2 25 1 263 1 359 1 3 1 102 1 28 1 29 1 335 1 194 1 104 1 197 1 32 1 76 1 200 2 201 1 137 1 84 1 85 2 176 1 177 1 298 1 274 1 208 1 299 1 114 2 18 1 117 3 94 1 281 1 256 2 96 2 326 2 185 1 42 2 
18 1 24 1 117 1 253 1 85 1 96 1 200 1 42 1 46 1 128 1 
24 2 265 1 46 1 128 1 239 1 30 1 368 1 200 1 158 1 345 1 85 2 16 1 164 1 18 1 182 1 117 2 253 2 325 1 184 1 96 1 42 1 
24 2 265 1 46 1 239 1 128 1 30 2 200 2 368 1 158 1 345 1 85 2 16 2 18 1 117 2 253 2 325 1 96 2 184 1 42 2 
80 1 221 1 233 1 30 1 16 1 
80 1 184 1 127 1 112 1 239 1 233 1 30 2 16 2 
80 1 30 1 16 1 
24 1 85 1 46 1 128 1 30 1 16 1 18 1 117 1 253 1 96 1 368 1 200 1 42 1 233 1 
184 1 
80 1 231 1 184 1 127 1 239 1 233 1 30 2 16 2 
23 1 80 2 147 2 86 1 215 1 127 1 287 1 239 1 7 1 206 1 30 5 16 5 180 1 151 2 71 1 184 1 260 1 233 2 305 2 
137 1 41 1 
24 2 85 2 137 2 117 2 96 1 200 1 78 1 42 1 245 1 
17 1 161 1 129 1 
306 1 24 1 99 1 137 1 3 1 102 1 28 1 177 1 335 1 298 1 299 1 117 1 104 1 281 1 256 1 330 1 
306 1 357 1 24 2 99 1 168 1 85 1 161 1 3 1 102 1 28 1 177 1 298 1 335 1 299 1 104 1 117 2 281 1 256 1 96 1 42 1 
357 2 24 5 246 1 168 1 85 5 137 1 164 1 278 1 117 5 199 1 96 4 200 1 42 4 245 1 
24 2 117 2 253 1 85 2 96 2 42 2 238 1 128 1 
357 1 24 3 117 3 137 1 85 3 96 3 200 1 42 3 
24 1 117 1 253 1 85 1 96 1 42 1 128 1 
24 1 117 1 253 1 85 1 96 1 200 1 78 1 42 1 245 1 
99 1 100 1 3 1 102 1 335 1 194 1 104 1 201 1 200 2 158 1 245 1 345 1 298 1 16 1 299 1 114 2 18 1 117 4 253 2 256 1 306 1 357 1 24 4 25 1 168 1 263 1 265 1 28 1 29 1 30 1 315 1 32 1 85 3 84 1 137 1 177 1 176 1 274 1 281 1 325 1 96 3 142 1 185 1 326 1 42 3 
164 1 357 1 24 2 117 2 137 1 85 2 199 1 96 1 42 1 
357 2 24 3 168 1 345 1 85 3 265 1 149 1 30 1 16 1 117 3 253 1 325 1 184 1 96 3 200 1 142 1 42 3 158 1 245 1 
357 1 24 2 85 2 161 1 129 1 117 2 96 2 200 1 42 2 245 1 
306 1 24 1 99 1 137 1 3 1 102 1 177 1 28 1 335 1 298 1 299 1 117 1 104 1 281 1 256 1 
306 1 24 1 99 1 137 1 3 1 177 1 28 1 335 1 298 1 196 1 117 1 116 1 104 1 281 1 256 1 
25 1 286 1 29 2 194 1 129 2 363 1 32 1 152 1 76 2 219 1 173 1 223 1 84 1 83 1 347 1 161 2 176 1 323 1 114 2 17 2 185 1 326 4 232 1 236 1 
24 1 117 1 253 1 85 1 265 1 96 1 42 1 238 1 
318 1 186 1 
318 1 186 1 
153 1 379 1 
153 1 379 1 
153 1 379 1 
318 1 341 1 186 1 
318 1 341 1 186 1 
318 1 341 1 186 1 
318 1 186 1 209 1 
109 1 318 2 153 1 228 1 186 2 379 1 
318 1 367 1 186 1 
318 1 367 1 186 1 
318 1 367 1 186 1 
24 2 126 1 4 1 311 1 30 1 365 1 159 1 370 1 136 1 137 1 318 1 85 2 227 1 15 1 16 1 209 1 139 1 181 1 252 1 117 2 96 2 42 2 186 1 304 1 
24 1 123 1 264 1 4 1 311 2 46 1 128 1 30 2 150 1 365 2 339 1 75 1 368 1 200 1 159 2 85 1 318 2 348 1 88 1 16 2 181 2 18 1 117 1 253 1 96 1 42 1 186 2 304 2 
132 1 101 1 214 1 
132 1 205 1 214 1 
372 1 254 1 101 2 205 1 331 1 214 3 
372 1 254 1 101 1 205 1 172 1 214 2 
372 2 254 1 101 1 205 1 214 2 
23 2 65 1 147 1 334 1 215 3 127 1 239 1 30 5 151 1 241 2 364 1 198 1 291 2 270 2 219 1 134 3 80 1 371 1 223 1 54 1 87 1 15 1 206 1 323 1 16 5 139 1 376 1 252 1 184 2 232 1 233 4 305 1 
147 1 334 1 46 1 239 1 151 1 10 1 241 2 198 1 291 2 200 1 202 3 206 1 16 6 18 1 117 1 253 1 305 1 23 2 24 1 65 1 215 3 127 1 312 1 128 1 30 6 364 1 219 1 368 1 134 3 221 3 80 4 223 1 85 1 178 1 323 1 139 2 376 1 96 1 184 3 232 1 42 1 233 5 
23 2 65 1 147 1 215 3 239 1 30 3 151 1 364 1 241 2 198 2 291 2 270 1 219 1 134 4 223 1 86 1 87 1 54 1 323 1 16 3 139 1 376 1 184 3 232 1 233 2 305 1 
147 1 46 1 239 1 151 1 241 2 198 2 291 2 200 1 54 1 16 3 18 1 117 1 253 1 302 1 305 1 23 2 24 1 65 1 124 1 215 3 128 1 30 3 364 1 270 1 219 1 134 4 368 1 223 1 85 1 86 1 87 1 323 1 139 2 376 1 184 3 96 1 232 1 144 1 42 1 233 2 
81 1 41 1 28 1 
28 1 328 1 
292 1 
104 1 281 1 28 1 
111 1 28 1 
281 1 28 1 
104 1 81 2 281 1 28 3 55 1 48 1 
356 1 223 1 309 1 170 1 56 1 138 1 29 3 8 1 323 1 229 2 152 3 76 4 155 1 271 1 326 7 173 2 21 1 
356 1 223 1 309 1 170 1 56 1 138 1 29 3 8 1 323 1 229 2 152 3 76 4 155 1 271 1 326 7 173 2 21 1 
356 1 223 1 309 1 170 1 56 1 138 1 29 3 8 1 323 1 229 2 152 3 76 4 155 1 271 1 326 7 173 2 21 1 121 1 
356 1 309 1 29 3 194 1 337 1 31 1 32 1 152 2 76 3 271 1 173 1 220 1 51 1 110 1 84 1 113 1 138 2 176 1 56 1 275 1 114 2 229 1 326 6 21 1 
356 1 309 1 170 1 29 4 193 1 8 1 194 2 31 1 32 2 152 4 76 5 155 1 271 1 173 3 223 1 250 1 84 2 176 2 138 1 56 1 323 1 114 4 229 2 326 9 
306 1 1 1 166 2 261 1 99 1 101 1 3 1 27 1 69 1 266 1 130 1 72 1 171 1 132 1 218 1 34 1 160 1 295 1 205 1 350 1 90 1 225 2 298 1 276 1 300 1 230 1 378 1 256 1 214 2 331 1 
306 1 1 1 166 3 261 1 99 1 167 1 101 1 125 1 3 1 27 1 69 1 130 1 72 1 171 1 132 1 218 1 34 1 160 1 295 2 205 1 350 1 225 3 298 1 276 1 300 1 378 1 165 1 256 1 331 1 214 2 
306 1 1 1 166 2 261 1 99 1 167 1 101 1 125 1 3 1 69 1 130 1 72 1 171 1 132 1 218 1 295 2 205 1 350 1 225 2 298 1 276 1 300 1 256 1 214 2 331 1 
306 1 166 1 99 1 3 1 27 1 28 1 335 1 47 1 72 2 218 2 12 1 34 1 225 1 298 1 273 1 115 1 276 2 300 2 281 1 165 1 256 1 355 1 120 1 
306 1 1 1 166 1 99 1 101 1 125 1 3 1 27 1 266 1 72 1 171 1 132 1 218 1 34 1 160 1 205 1 350 1 225 1 298 1 276 1 300 1 230 1 378 1 256 1 214 2 331 1 
244 1 
0 1 99 2 2 2 147 1 3 1 6 2 191 1 335 2 239 3 289 2 151 1 103 2 198 2 12 1 342 1 158 1 108 2 294 1 345 1 298 1 206 1 16 5 164 1 353 1 211 1 117 1 253 1 256 2 305 1 23 2 306 2 24 1 65 1 265 1 215 2 127 3 28 1 30 5 268 1 73 1 33 2 134 2 317 1 175 1 80 6 319 1 85 1 320 4 273 1 93 1 182 1 281 1 183 2 325 1 184 4 
24 1 2 1 265 1 127 1 239 2 30 3 268 1 73 1 158 1 317 1 175 1 80 2 345 1 85 1 320 2 16 3 164 1 182 1 117 1 211 1 231 1 253 1 325 1 184 2 
24 1 345 1 320 3 85 1 265 1 239 2 30 2 16 2 164 1 182 1 211 1 268 1 117 1 73 1 253 1 325 1 33 1 184 2 317 1 158 1 175 1 
24 1 2 1 265 1 127 1 239 3 30 3 103 1 268 1 73 1 33 1 158 1 317 1 175 1 80 2 345 1 85 1 320 3 16 3 164 1 182 1 117 1 211 1 231 1 253 1 325 1 184 3 
2 2 333 1 147 1 46 1 239 3 151 1 103 2 105 1 200 1 342 1 158 1 345 1 206 1 16 3 164 1 18 1 117 2 211 1 253 2 305 1 23 1 24 2 358 1 265 1 215 1 127 1 128 1 30 3 268 1 73 1 368 1 317 1 175 1 80 3 320 2 85 2 182 1 231 1 325 1 184 3 96 1 42 1 187 1 
2 2 147 1 191 1 6 2 239 3 151 1 289 2 103 2 198 2 342 1 158 1 108 2 345 1 206 1 16 4 164 1 117 1 211 1 253 1 305 1 23 1 24 1 265 1 215 1 127 2 30 4 268 1 73 1 33 2 134 2 317 1 175 1 80 4 320 4 85 1 182 1 93 1 325 1 183 2 184 4 
23 1 24 2 333 1 147 1 265 1 215 1 46 1 128 1 239 3 30 2 151 1 268 1 73 1 105 1 200 1 368 1 342 1 158 1 317 1 175 1 345 1 85 2 320 2 206 1 16 2 18 1 164 1 182 1 117 2 211 1 253 2 325 1 96 1 184 3 42 1 305 1 
23 1 24 2 333 1 147 1 265 1 215 1 46 1 128 1 239 3 30 2 151 1 268 1 73 1 105 1 200 1 368 1 342 1 158 1 317 1 175 1 345 1 85 2 320 2 206 1 16 2 18 1 164 1 182 1 117 2 211 1 253 2 325 1 96 1 184 3 42 1 305 1 
23 1 145 1 24 1 64 2 2 2 147 1 265 1 215 1 127 2 6 2 191 1 239 3 30 4 289 2 151 1 103 2 268 1 73 1 33 2 134 2 13 1 158 1 317 1 107 1 175 1 80 4 345 1 85 1 320 4 206 1 16 4 164 1 182 1 117 1 211 1 280 2 95 1 253 1 325 1 184 3 305 1 
2 1 333 1 147 1 46 1 239 3 151 1 103 1 105 1 200 1 342 1 158 1 345 1 206 1 16 2 164 1 18 1 211 1 117 2 253 2 305 1 23 1 24 2 358 1 265 1 215 1 128 1 30 2 268 1 73 1 33 1 368 1 317 1 175 1 80 1 320 3 85 2 182 1 325 1 184 3 96 1 42 1 
2 1 333 1 147 1 46 1 239 3 151 1 103 1 105 1 200 1 342 1 158 1 345 1 206 1 16 2 164 1 18 1 211 1 117 2 253 2 305 1 23 1 24 2 358 1 265 1 215 1 128 1 30 2 268 1 73 1 33 1 368 1 317 1 175 1 80 1 320 3 85 2 182 1 325 1 184 3 96 1 42 1 
145 1 2 2 147 1 191 1 6 2 239 3 151 1 289 2 103 2 158 1 345 1 206 1 16 4 164 1 117 1 211 1 253 1 305 1 23 1 24 1 64 2 265 1 215 1 127 2 30 4 268 1 73 1 33 2 134 2 317 1 175 1 80 4 320 4 85 1 182 1 93 1 280 2 325 1 184 3 
356 1 25 1 309 1 170 1 29 3 8 1 129 1 194 1 363 1 32 1 152 2 155 1 76 3 173 2 223 1 84 1 137 2 161 1 176 1 323 1 114 2 229 1 17 1 41 1 185 1 326 6 
25 2 148 1 29 9 194 2 129 6 364 4 152 4 32 2 76 13 219 4 156 1 173 2 50 2 203 1 51 1 223 4 137 1 84 2 161 16 56 2 113 4 176 2 274 1 57 1 275 4 208 1 323 2 114 4 17 16 185 1 326 22 232 2 22 2 
306 1 357 1 99 1 24 2 25 1 168 1 3 1 102 1 28 1 335 1 29 1 129 1 194 1 104 1 32 1 76 1 203 1 248 1 137 1 85 1 84 1 177 1 176 1 298 1 274 1 299 1 208 1 114 2 117 2 281 1 256 1 96 1 185 1 326 2 143 1 42 1 329 1 330 1 
332 1 99 3 3 2 102 2 335 1 8 1 194 3 104 2 152 8 155 1 106 1 203 1 161 7 56 4 298 2 208 1 299 2 114 6 17 7 117 3 301 2 255 2 256 3 258 1 306 3 356 1 357 1 24 3 25 3 168 1 263 2 125 1 309 1 170 1 28 2 29 10 129 7 364 2 366 2 32 3 219 2 76 10 173 4 223 3 137 2 84 3 85 1 322 2 176 3 177 2 274 1 323 3 229 1 281 2 96 1 185 3 326 20 232 2 42 1 
306 8 357 1 24 1 99 8 25 2 359 2 360 1 125 1 3 2 310 1 28 3 335 2 29 1 194 2 363 1 314 1 32 2 12 1 243 1 76 1 344 1 85 1 84 2 297 1 90 1 176 2 298 2 274 1 273 1 208 1 114 4 117 1 118 1 281 2 256 7 96 1 185 2 326 2 42 1 
24 1 25 1 29 2 129 1 194 1 364 1 152 1 32 1 219 1 76 1 200 1 173 1 245 1 203 1 223 1 84 1 85 1 161 1 162 1 176 1 323 1 114 2 17 1 117 1 96 1 185 1 326 3 232 1 42 1 
25 1 223 1 84 1 161 1 286 1 56 1 176 1 129 1 194 1 363 1 114 2 17 1 152 1 32 1 219 1 76 2 326 2 185 1 
25 1 84 1 161 1 176 1 29 2 129 1 194 1 323 1 363 1 114 2 17 1 152 1 32 1 326 2 185 1 173 1 232 1 236 1 
25 1 29 2 194 1 129 2 363 1 364 1 32 1 152 2 76 2 219 1 173 1 223 1 84 1 161 2 176 1 56 1 323 1 114 2 17 2 185 1 326 4 232 1 
25 1 223 1 84 1 161 1 286 1 56 1 176 1 129 1 194 1 114 2 17 1 152 1 32 1 219 1 76 2 326 2 185 1 344 1 
25 1 84 1 161 1 176 1 29 2 129 1 194 1 323 1 114 2 17 1 152 1 32 1 326 2 185 1 173 1 232 1 344 1 236 1 
25 1 29 2 194 1 129 2 364 1 32 1 152 2 76 2 219 1 173 1 344 1 223 1 84 1 161 2 176 1 56 1 323 1 114 2 17 2 185 1 326 4 232 1 
25 1 29 2 194 1 129 2 364 1 32 1 152 2 76 2 219 1 173 1 223 1 84 1 161 2 176 1 56 1 323 1 114 2 17 2 326 4 185 1 232 1 
306 1 99 1 24 1 25 1 263 1 3 1 102 1 28 1 335 1 29 1 194 1 104 1 32 1 76 1 137 1 84 1 177 1 176 1 298 1 274 1 208 1 299 1 114 2 117 1 281 1 256 1 326 2 185 1 
306 1 99 1 24 1 25 1 3 1 28 1 335 1 29 1 194 1 196 1 104 1 32 1 76 1 137 1 84 1 177 1 176 1 298 1 179 1 274 1 208 1 114 2 116 1 117 1 281 1 256 1 326 2 185 1 
25 1 29 2 194 1 129 2 364 1 32 1 152 2 76 2 219 1 173 1 203 1 223 1 84 1 161 2 176 1 56 1 323 1 114 2 17 2 185 1 326 4 232 1 
306 1 99 1 24 1 25 1 263 1 3 1 102 1 28 1 29 2 129 2 194 1 364 1 104 1 152 2 32 1 76 2 219 1 173 1 223 1 84 1 161 2 90 1 56 1 177 1 176 1 298 1 323 1 299 1 114 2 17 2 117 1 301 1 281 1 256 1 326 4 185 1 232 1 
24 1 25 1 29 1 194 1 129 1 364 1 152 1 32 1 219 1 76 2 200 1 245 1 203 1 223 1 84 1 85 1 161 1 375 1 56 1 176 1 323 1 114 2 17 1 117 1 96 1 185 1 326 3 232 1 42 1 
356 1 188 1 190 1 309 1 45 1 170 1 29 14 8 1 193 1 194 4 338 1 364 2 31 2 217 1 152 5 32 4 155 1 76 15 219 2 173 2 157 1 222 1 51 2 204 1 82 1 223 3 53 1 84 4 56 3 113 2 176 4 275 2 323 3 114 8 229 1 210 1 140 1 326 29 232 2 60 3 61 1 
356 1 188 1 190 1 309 1 45 1 170 1 29 14 8 1 193 1 194 4 338 1 364 2 31 2 217 1 152 5 32 4 155 1 76 15 219 2 173 2 157 1 222 1 51 2 204 1 82 1 223 3 53 1 84 4 56 3 113 2 176 4 275 2 323 3 114 8 229 1 210 1 140 1 326 29 232 2 60 3 61 1 
356 1 188 1 309 1 45 1 170 1 29 17 8 1 193 1 194 3 338 1 364 4 31 2 217 1 32 3 152 8 155 1 76 19 219 4 173 5 157 1 50 1 222 1 51 2 204 1 82 1 223 5 53 1 84 3 56 3 113 3 176 3 275 3 323 4 114 6 229 1 210 1 140 1 326 36 232 3 60 3 22 1 61 1 
356 1 188 1 190 1 309 1 45 1 170 1 29 14 8 1 193 1 194 4 338 1 364 2 31 2 217 1 152 5 32 4 340 1 155 1 76 15 219 2 173 2 157 1 222 1 51 2 204 1 223 3 53 1 84 4 56 3 113 2 176 4 275 2 323 3 114 8 229 1 210 1 140 1 326 29 232 2 60 3 61 1 
188 1 45 1 29 19 193 1 194 3 338 2 364 6 31 2 217 1 152 6 32 3 76 21 219 6 173 3 157 2 50 2 222 1 51 2 204 1 82 1 223 6 53 1 84 3 56 3 176 3 113 4 275 4 323 5 114 6 210 1 140 1 326 40 232 5 22 2 60 3 61 1 
181 1 109 1 242 1 285 1 318 1 226 1 311 1 186 1 304 1 159 1 
136 1 209 1 
181 1 262 1 279 1 212 1 318 1 311 1 186 1 304 1 159 1 
341 1 327 1 
367 1 38 1 228 1 
24 1 123 1 264 1 4 1 311 1 46 1 128 1 30 1 150 1 365 2 339 1 75 1 368 1 200 1 159 1 85 1 318 1 348 1 88 1 16 1 181 1 18 1 117 1 253 1 96 1 42 1 186 1 304 1 
24 1 123 1 264 1 4 1 311 1 46 1 128 1 30 1 150 1 365 2 339 1 75 1 368 1 200 1 159 1 85 1 318 1 348 1 88 1 16 1 181 1 18 1 117 1 253 1 96 1 42 1 186 1 304 1 
24 1 123 1 264 1 4 1 311 1 46 1 128 1 30 1 150 1 365 2 339 1 75 1 368 1 200 1 159 1 85 1 318 1 348 1 88 1 16 1 181 1 18 1 117 1 253 1 96 1 42 1 186 1 304 1 
341 1 228 1 327 1 
341 1 228 1 327 1 
367 1 38 1 
367 1 38 1 228 1 
370 1 126 1 
24 2 123 1 126 1 311 1 30 1 365 1 159 1 370 1 136 1 137 1 318 1 85 2 348 1 227 1 15 1 16 1 209 1 139 1 181 1 252 1 117 2 96 2 42 2 233 1 186 1 304 1 98 1 
306 2 99 2 24 2 25 1 359 2 360 1 3 1 310 1 26 1 28 1 29 1 194 1 131 1 32 1 154 1 316 1 76 1 203 1 293 1 85 2 84 1 176 1 298 1 274 1 208 1 114 2 117 2 281 1 256 2 185 1 326 2 
306 2 160 1 99 2 101 1 205 1 125 1 296 1 3 1 68 1 350 1 90 1 298 1 39 1 300 1 171 1 132 1 256 2 331 1 214 2 
306 1 160 1 99 1 101 1 205 1 125 1 68 1 350 1 3 1 298 1 300 1 171 1 132 1 256 1 35 1 331 1 214 2 
306 1 99 1 296 1 3 1 28 1 298 1 335 1 336 1 273 1 300 1 281 1 256 1 12 1 120 1 
306 1 160 1 99 1 101 1 205 1 125 1 296 1 68 1 350 1 3 1 298 1 39 1 300 1 171 1 132 1 256 1 331 1 214 2 
354 1 
23 1 184 1 41 1 215 1 239 1 260 1 180 1 
23 1 147 1 215 1 127 1 239 1 30 1 151 1 198 1 134 1 342 1 108 1 80 1 206 1 16 1 183 1 184 2 305 1 
306 1 99 1 147 1 169 1 3 1 28 2 298 2 335 1 206 1 151 1 48 1 104 1 281 1 11 1 256 1 328 1 305 1 
23 8 65 1 147 2 362 1 215 13 127 1 239 2 313 3 30 1 151 2 70 1 241 8 364 4 217 1 198 5 291 8 219 4 134 10 50 1 80 1 51 1 204 1 223 4 319 1 53 1 113 2 206 2 275 2 16 1 323 4 210 1 119 1 184 7 232 4 22 1 61 1 305 2 
23 2 356 1 24 1 147 1 309 1 215 2 170 1 46 1 128 1 313 2 288 1 30 1 151 1 70 1 105 1 368 1 200 1 223 2 85 1 206 1 16 1 323 1 18 1 117 1 253 1 96 1 42 1 305 1 
306 1 99 1 24 3 25 1 263 1 3 1 102 1 28 1 29 1 335 1 194 1 104 1 32 1 200 2 201 1 137 1 84 1 85 2 177 1 176 1 298 1 274 1 299 1 114 2 18 1 117 3 281 1 256 1 96 2 326 1 185 1 42 2 
23 2 65 1 147 1 319 1 215 1 239 2 206 1 151 1 229 1 241 2 198 2 291 2 184 4 134 4 305 1 
23 1 147 1 215 1 239 1 206 1 180 1 151 1 184 1 260 1 305 1 
23 5 223 2 215 5 313 2 323 2 70 1 364 2 241 5 198 5 255 1 291 5 219 2 184 5 134 10 232 2 
80 1 184 1 127 1 239 1 30 1 16 1 
0 1 306 4 23 2 99 4 65 2 147 2 3 1 215 2 127 2 28 1 335 2 30 3 151 2 49 2 12 1 174 1 80 4 319 2 86 1 374 1 298 1 206 1 273 1 16 3 353 1 281 1 256 4 234 1 305 2 
141 1 311 1 159 1 
141 1 311 1 159 1 
141 1 311 1 159 1 
370 1 285 1 349 1 311 1 159 1 
163 1 311 1 159 1 
163 1 311 1 159 1 
163 1 311 1 159 1 
311 1 159 1 
318 1 186 1 
356 1 223 1 84 2 309 1 170 1 56 1 176 2 29 4 8 1 323 1 194 2 114 4 229 1 31 1 152 3 32 2 76 4 155 1 326 8 173 2 
229 1 356 1 223 1 152 2 76 3 155 1 41 1 326 6 309 1 173 2 170 1 29 3 8 1 323 1 
223 1 84 1 176 1 56 1 29 2 323 1 194 1 114 2 364 1 152 2 32 1 219 1 76 2 20 1 326 4 173 1 232 1 
51 1 223 2 56 1 113 2 29 6 275 2 323 2 364 2 152 2 76 6 219 2 326 12 173 1 232 2 22 1 50 1 
356 2 309 2 170 1 29 12 8 1 194 2 337 1 364 2 31 2 152 9 32 2 155 1 219 2 76 11 173 5 50 1 223 3 84 2 56 4 113 2 176 2 275 2 57 1 323 3 114 4 229 1 326 23 232 2 22 1 
326 1 113 1 29 1 
76 1 326 1 275 1 
223 1 84 1 176 1 56 1 29 3 194 1 323 1 114 2 364 1 32 1 255 1 152 3 219 1 76 3 20 1 326 6 232 1 173 2 
29 11 193 1 194 1 364 4 217 1 32 1 152 4 76 11 219 4 173 2 50 1 51 1 204 1 223 4 53 1 84 1 113 2 176 1 56 2 275 2 323 4 114 2 210 1 326 22 232 4 22 1 61 1 
356 1 223 1 309 1 170 1 56 1 29 3 323 1 152 2 76 3 326 6 173 1 
356 1 84 1 309 1 56 1 176 1 29 2 8 1 194 1 337 1 114 2 31 1 152 2 32 1 76 1 155 1 326 3 173 1 
356 2 309 2 170 2 29 10 288 1 8 1 193 1 194 2 364 2 31 1 217 1 32 2 152 9 155 1 76 14 219 2 173 5 51 1 204 1 223 5 84 2 53 1 56 4 113 1 176 2 275 1 323 4 114 4 229 1 210 1 326 24 232 1 61 1 
356 1 309 1 170 1 29 7 8 1 193 1 194 3 364 2 31 1 217 1 32 3 152 4 155 1 76 10 219 2 173 3 51 1 204 1 223 3 53 1 84 3 56 1 113 1 176 3 275 1 323 2 114 6 229 1 210 1 326 17 20 1 232 1 61 1 
356 1 309 1 170 1 29 15 8 1 193 1 194 3 364 4 31 1 217 1 32 3 152 6 155 1 76 14 219 4 173 4 50 1 51 1 204 1 223 5 53 1 84 3 113 2 176 3 56 2 275 2 323 5 114 6 229 1 210 1 20 1 326 29 232 4 22 1 61 1 
356 1 309 1 170 1 29 12 8 1 193 1 194 3 364 4 31 1 217 1 32 3 152 7 155 1 76 15 219 4 173 4 50 1 51 1 204 1 223 5 53 1 84 3 113 2 176 3 56 3 275 2 323 4 114 6 229 1 210 1 20 1 326 27 232 3 22 1 61 1 
356 2 309 2 170 2 29 10 288 1 8 1 193 1 194 2 364 2 31 1 217 1 32 2 152 9 155 1 76 14 219 2 173 5 51 1 204 1 223 5 84 2 53 1 56 4 113 1 176 2 275 1 323 4 114 4 229 1 210 1 326 24 232 1 61 1 
29 11 193 1 194 1 364 4 217 1 32 1 152 4 76 11 219 4 173 2 50 1 51 1 204 1 223 4 53 1 84 1 113 2 176 1 56 2 275 2 323 4 114 2 210 1 326 22 232 4 22 1 61 1 
356 1 309 1 170 1 29 13 8 1 193 1 194 4 364 4 31 2 217 1 32 4 152 7 155 1 76 15 219 4 173 4 50 1 51 1 204 1 223 5 53 1 84 4 113 2 176 4 56 3 275 2 323 4 114 8 229 1 210 1 326 28 20 1 232 3 22 1 61 1 
190 1 29 8 193 1 194 4 364 3 31 2 217 1 32 4 152 5 76 9 219 3 173 3 50 1 51 1 204 1 223 3 53 1 84 4 56 2 113 2 176 4 275 1 323 2 114 8 210 1 326 17 232 2 61 1 
356 3 223 1 309 3 56 3 170 1 29 4 8 2 323 1 152 6 155 1 76 3 326 7 173 3 
190 1 29 8 193 1 194 4 364 3 31 2 217 1 32 4 152 3 76 9 219 3 173 2 50 1 51 1 204 1 223 3 53 1 84 4 56 1 113 2 176 4 275 1 323 2 114 8 210 1 326 17 232 2 61 1 
356 2 223 2 84 1 309 2 176 1 56 2 170 1 29 5 193 1 288 1 194 1 323 2 114 2 32 1 152 5 76 5 326 10 173 3 
223 1 84 1 176 1 56 1 193 1 194 1 114 2 32 1 152 1 219 1 76 2 326 2 
223 1 84 1 176 1 56 1 29 2 193 1 323 1 194 1 114 2 364 1 152 2 32 1 219 1 76 2 326 4 173 1 232 1 
356 1 84 3 190 1 309 1 176 3 56 1 29 2 193 1 194 3 337 1 114 6 31 1 32 3 152 2 76 1 326 3 173 1 
356 2 190 1 309 2 170 1 29 8 288 1 193 1 8 1 194 4 337 1 31 1 152 6 32 4 76 7 155 1 173 3 51 1 110 1 223 2 84 4 56 3 113 1 176 4 275 1 323 2 114 8 20 1 326 15 
164 1 24 1 117 1 137 1 85 1 199 1 89 1 
24 1 135 1 189 1 137 1 146 1 85 1 251 1 224 1 89 1 164 1 117 1 199 1 
306 1 99 1 281 1 12 1 256 1 3 1 41 1 28 1 298 1 335 1 273 1 
306 1 357 1 24 2 99 1 137 1 85 1 3 1 28 1 177 1 298 1 335 1 299 1 104 1 117 2 281 1 256 1 96 1 42 1 
306 1 357 1 99 1 24 2 3 1 265 1 28 3 104 2 49 1 137 1 85 2 111 1 177 1 298 1 299 1 117 2 324 1 281 2 253 1 325 1 256 1 96 1 42 2 
306 2 357 1 99 2 24 2 3 1 265 1 28 3 104 2 49 1 137 1 85 2 111 1 177 1 298 1 116 1 117 2 324 1 281 2 253 1 325 1 213 1 256 2 96 1 42 2 
306 1 24 1 99 1 66 1 3 1 46 1 28 4 128 1 239 1 30 2 104 1 49 1 200 1 368 1 158 1 80 1 81 1 85 1 111 1 298 1 16 2 18 1 117 1 324 1 253 1 281 1 256 1 96 1 184 1 42 1 328 1 235 1 
306 1 24 1 307 1 99 1 3 1 46 1 28 4 128 1 239 1 30 2 104 1 49 1 200 1 368 1 158 1 80 1 81 1 85 1 111 1 298 1 16 2 18 1 117 1 324 1 253 1 281 1 256 1 96 1 184 1 42 1 328 1 
306 1 99 1 256 1 3 1 243 1 298 1 
306 7 36 1 99 7 359 1 125 1 297 1 321 1 3 2 310 1 90 1 28 3 335 2 298 3 48 1 240 1 314 1 104 1 118 1 281 2 256 6 243 1 
99 1 3 1 102 1 8 1 194 2 104 1 152 2 155 1 203 1 161 1 298 1 299 1 114 4 17 1 117 2 301 1 256 1 306 1 357 1 356 1 24 2 25 2 263 1 309 1 28 1 170 1 29 3 129 1 366 1 32 2 316 1 76 3 173 2 223 1 84 2 85 1 137 2 90 1 176 2 177 1 323 1 229 1 281 1 96 1 185 2 326 6 42 1 
99 1 147 2 46 1 335 1 239 2 288 1 151 2 200 1 158 1 206 2 16 3 18 1 117 1 253 1 256 1 303 1 260 1 305 2 306 1 23 5 356 1 24 1 307 1 309 1 215 4 127 1 28 2 170 1 128 1 313 2 30 3 70 1 368 1 174 1 80 2 81 1 223 2 85 1 323 2 180 1 40 1 184 2 96 1 283 1 42 1 233 1 328 1 
306 2 99 2 81 1 169 1 3 1 90 1 28 2 298 2 48 1 104 1 281 1 256 2 243 1 
306 4 99 4 3 1 90 1 91 1 28 1 298 1 335 1 273 1 281 1 213 1 256 4 12 1 
306 2 332 1 36 1 99 2 321 1 3 1 28 1 192 1 298 2 195 1 104 1 49 1 281 1 256 2 
306 1 99 1 132 1 205 1 256 1 3 1 350 1 298 1 335 1 214 1 
306 2 293 1 99 2 281 1 125 1 256 2 3 1 310 1 90 1 28 1 298 1 
306 5 99 5 3 2 297 1 310 1 90 1 91 1 28 3 335 1 298 2 273 1 49 1 118 1 281 2 12 1 256 4 
306 5 99 5 3 2 297 1 310 1 90 1 91 1 28 3 335 1 298 2 273 1 49 1 281 2 12 1 256 4 343 1 
306 1 357 1 24 2 99 1 137 1 85 1 3 1 28 1 177 1 298 1 335 1 104 1 117 2 116 1 281 1 256 1 96 1 42 1 
306 1 36 1 99 1 321 1 3 1 28 1 298 2 48 1 240 1 104 1 49 1 281 1 256 1 
14 1 137 1 74 1 284 1 352 1 
43 1 24 1 46 1 239 1 128 1 30 1 290 1 368 1 200 1 85 1 351 1 16 1 18 1 117 1 253 1 184 1 96 1 42 1 233 1 284 1 
24 1 85 1 26 1 352 1 117 1 131 1 154 1 74 1 284 1 
43 1 284 1 351 1 
130 1 261 1 41 1 69 1 
130 1 166 1 261 1 34 1 225 1 27 1 69 1 
166 1 218 1 276 1 
130 1 166 3 261 1 37 2 58 1 346 1 77 1 34 1 225 3 27 1 69 1 266 1 
130 1 166 2 261 1 295 1 373 1 34 1 225 2 27 1 69 1 
130 1 9 1 166 1 132 1 101 1 34 1 225 1 27 1 369 1 266 1 214 1 
130 1 166 1 261 1 34 1 225 1 27 1 266 1 
166 1 261 2 34 1 225 1 27 1 69 1 266 1 
130 1 166 2 261 1 361 1 282 1 34 2 5 1 225 2 27 2 266 1 
166 3 261 1 295 2 27 1 225 3 69 1 266 1 130 2 9 1 267 1 34 1 79 1 272 1 
166 2 261 1 295 1 205 1 101 1 27 1 225 2 69 1 266 1 130 1 19 1 132 1 34 1 214 2 331 1 
166 4 261 1 295 2 373 1 27 2 225 4 216 1 69 1 266 1 130 2 9 1 34 2 79 1 
130 1 166 3 267 1 261 1 37 1 295 1 34 1 225 3 27 1 69 1 266 1 
130 1 9 1 67 1 79 1 
130 1 261 1 
130 1 166 1 261 1 34 1 225 1 27 1 69 1 266 1 
166 4 37 1 261 2 295 2 346 1 67 1 225 4 27 1 69 2 130 3 9 1 58 1 34 1 79 1 
166 2 261 1 308 1 295 1 249 1 27 1 225 2 266 1 69 1 130 1 377 1 34 1 
130 1 166 3 261 1 37 2 58 1 346 2 34 1 259 1 225 3 27 1 69 1 266 1 
130 2 52 2 247 1 257 1 
92 1 166 1 34 1 225 1 27 1 266 1 
130 1 166 2 261 1 267 1 295 1 34 1 225 2 27 1 69 1 266 1 
207 1 
130 1 166 1 261 1 34 1 225 1 27 1 69 1 266 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 232 (5,303) (5,303) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 232 (5,303) (5,303) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 232 (5,303) (5,303) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException (18,90) 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 155 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException (18,90) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (8,32) (8,32) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 74 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 282 76 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 97 324 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 138 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 138 251 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 15 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 15 202 167 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 15 202 167 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 15 202 268 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 138 251 267 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 138 251 267 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 15 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 255 295 265 14 67 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 255 295 265 14 67 302 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 255 295 265 14 67 302 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (8,32) (8,32) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (8,32) (8,32) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (8,32) (8,32) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 74 307 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 120 (94,149) 185 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 109 14 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 255 295 265 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 255 295 265 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 255 295 265 14 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (23,278) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (58,139) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 80 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | ASSIGN | 4311 | = null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 758 | = null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | STATEMENT | 3220 | stmt -> ;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
198 4 83 2 298 3 5 1 125 2 47 1 303 1 51 2 55 1 215 1 19 2 314 7 22 2 316 1 27 2 26 1 222 1 147 1 285 1 287 3 232 1 233 2 289 1 237 1 238 7 
19 2 215 1 314 7 316 1 22 2 26 1 198 4 27 2 222 1 298 3 83 2 5 1 47 1 125 2 147 1 303 1 287 3 285 1 51 2 232 1 55 1 233 2 289 1 237 1 238 7 
19 2 215 1 314 7 316 1 22 2 26 1 198 4 27 2 222 1 298 3 83 2 5 1 47 1 125 2 147 1 303 1 287 3 285 1 51 2 232 1 55 1 233 2 289 1 237 1 238 7 
198 4 83 2 298 3 5 1 125 2 47 1 303 1 51 2 55 1 59 1 215 1 19 2 314 7 22 2 316 1 27 2 26 1 222 1 147 1 285 1 287 4 232 1 233 2 235 1 289 1 237 1 238 7 
19 1 215 1 314 4 22 1 198 3 83 1 298 2 125 1 287 3 51 1 232 1 233 1 55 2 235 1 98 1 289 1 59 1 238 4 
215 1 19 1 314 2 195 1 316 1 115 1 22 1 27 1 83 1 88 1 287 1 285 1 233 1 235 1 59 1 238 2 
215 1 314 3 27 1 198 1 222 1 83 2 298 1 125 1 287 2 233 2 235 1 59 1 238 3 
198 7 298 4 83 2 125 3 47 1 51 1 55 2 98 1 59 1 215 1 19 1 314 9 22 1 274 1 27 1 26 1 222 1 287 5 232 1 233 2 235 1 289 1 111 1 238 9 
198 7 298 4 83 2 125 3 47 1 51 1 55 2 98 1 59 1 215 1 19 1 314 9 22 1 274 1 27 1 26 1 222 1 287 5 232 1 233 2 235 1 289 1 111 1 238 9 
80 1 
292 1 315 1 61 1 297 1 42 1 224 1 128 1 89 1 34 1 96 1 290 1 
239 1 294 1 315 1 61 2 42 1 119 1 224 1 128 1 89 1 34 1 96 1 290 1 
61 1 142 1 
61 1 142 1 
61 1 
61 1 142 1 
61 1 142 1 
61 2 21 1 174 1 142 1 192 1 323 1 
80 1 
239 1 315 2 269 1 294 1 42 2 119 1 43 1 224 1 89 2 90 1 190 1 
131 1 296 1 158 1 
315 1 1 1 101 2 177 1 42 1 318 2 139 1 43 1 181 1 280 1 326 1 331 1 171 1 150 1 263 1 13 1 56 2 110 1 313 1 
131 1 1 1 294 1 315 2 101 1 42 2 318 1 139 1 119 1 181 1 280 1 326 1 208 1 89 1 331 1 171 1 263 1 13 1 56 1 193 1 
239 1 315 3 294 3 42 3 89 3 43 1 119 3 193 1 
315 1 294 1 42 1 89 1 119 1 18 1 
239 1 269 1 294 1 315 1 42 1 119 1 224 1 89 1 190 1 
239 1 294 2 315 2 269 1 61 1 155 1 42 2 119 2 85 1 224 1 128 1 208 1 89 2 34 1 290 1 193 1 96 1 
292 1 315 2 294 1 165 1 42 2 89 2 43 1 119 1 193 1 
294 1 315 1 61 1 42 1 119 1 85 1 224 1 128 1 208 1 89 1 34 1 213 1 290 1 193 1 96 1 
131 1 239 1 315 2 294 2 269 1 296 1 42 2 89 2 119 2 193 1 
315 1 101 1 1 1 42 1 318 1 139 1 43 1 181 1 280 1 326 1 263 1 171 1 331 1 13 1 56 1 
315 1 101 1 1 1 23 1 42 1 318 1 43 1 181 1 280 1 50 1 326 1 171 1 331 1 13 1 56 1 
41 1 78 1 296 2 3 2 246 1 159 1 158 2 87 1 253 2 255 1 206 1 262 1 54 4 130 1 100 1 131 2 102 1 319 1 182 1 31 1 229 1 330 1 36 1 332 2 
315 1 294 1 128 1 42 1 89 1 119 1 224 1 29 1 
292 1 239 1 294 4 315 5 269 1 42 5 81 1 119 4 43 1 187 1 165 1 89 5 208 1 193 2 
315 1 294 1 42 1 89 1 119 1 18 1 
188 1 245 1 
188 1 245 1 
0 1 
0 1 
0 1 
188 1 245 1 333 1 
188 1 245 1 334 1 
164 1 0 1 188 1 116 1 245 1 
188 1 245 1 333 1 
188 1 245 1 333 1 
317 1 188 1 245 1 
317 1 188 1 245 1 
317 1 188 1 245 1 
61 2 245 2 105 2 8 1 184 2 32 1 205 1 186 1 188 2 327 2 70 1 39 2 336 2 
315 1 294 1 61 1 42 1 119 1 245 1 105 1 184 1 205 1 188 1 327 1 89 1 74 1 39 1 336 1 
19 1 22 1 51 1 
19 1 22 1 115 1 
19 3 115 1 51 2 288 1 308 1 151 1 
19 2 115 1 51 1 211 1 308 1 151 1 
19 2 115 1 51 1 308 2 151 1 
61 1 142 1 68 1 
33 1 61 2 91 1 142 2 234 1 
61 2 21 1 142 1 44 1 323 1 257 1 282 1 329 1 174 1 192 1 38 1 
61 1 21 1 44 1 323 1 257 1 282 1 329 1 174 1 192 1 38 1 76 1 
80 1 
331 1 40 1 
28 1 
280 1 331 1 
60 1 1 1 28 1 250 1 280 1 189 2 331 1 
1 1 280 1 331 1 
331 1 321 1 
180 1 3 4 136 1 319 2 66 1 159 1 121 1 253 3 145 1 206 1 173 1 54 7 309 2 130 3 236 1 337 1 291 1 
180 1 3 4 136 1 319 2 66 1 159 1 121 1 253 3 145 1 206 1 173 1 54 7 309 2 130 3 236 1 337 1 291 1 
180 1 24 1 3 4 136 1 319 2 66 1 159 1 121 1 253 3 145 1 206 1 173 1 54 7 309 2 130 3 236 1 337 1 291 1 
295 3 3 16 246 1 159 4 121 1 248 1 249 1 87 3 253 15 255 3 124 1 206 4 173 1 262 1 54 31 309 3 130 10 219 3 180 2 136 1 63 4 319 5 66 1 182 1 31 1 145 2 277 1 332 2 191 1 75 1 236 2 109 1 291 2 337 5 
178 1 180 1 136 1 3 5 319 3 246 2 159 1 121 1 182 2 124 1 253 4 145 1 31 2 206 1 127 1 173 1 262 2 332 4 54 9 309 2 130 4 236 1 291 1 337 1 
293 1 197 1 115 1 154 1 198 1 83 1 51 1 13 1 310 1 56 1 59 1 215 1 19 2 101 1 314 2 271 1 22 1 318 1 27 1 65 1 104 1 228 1 325 1 326 1 287 1 288 1 233 1 235 1 335 1 238 2 
293 1 197 1 115 1 154 1 198 2 83 1 256 1 51 1 92 1 13 1 310 1 56 1 59 1 19 2 101 1 314 3 217 1 271 1 22 1 318 1 27 1 65 1 104 1 228 1 326 1 287 1 288 1 233 1 235 1 238 3 
197 1 115 1 154 1 198 2 256 1 51 1 13 1 310 1 56 1 59 1 19 2 101 1 314 2 217 1 271 1 22 1 318 1 27 1 104 1 228 1 326 1 287 1 288 1 235 1 238 2 
314 1 101 1 197 2 318 1 27 2 103 1 181 1 320 1 83 1 143 1 183 1 9 1 228 2 280 1 326 1 92 1 331 1 52 1 13 1 310 2 233 1 56 1 238 1 
293 1 197 1 115 1 154 1 83 1 256 1 51 1 13 1 310 1 56 1 215 1 19 2 101 1 314 1 271 1 22 1 318 1 27 1 65 1 104 1 228 1 325 1 326 1 288 1 233 1 238 1 
114 1 
101 1 61 1 318 1 181 1 44 1 323 1 324 1 257 1 231 1 174 1 192 1 56 1 97 1 
292 1 315 1 61 2 113 1 77 1 297 1 42 1 138 1 140 1 46 1 224 1 128 1 89 1 34 1 12 1 290 1 96 1 
292 1 315 1 61 2 113 1 77 1 297 1 42 1 140 1 141 1 46 1 224 1 128 1 89 1 34 1 12 1 290 1 96 1 
292 1 315 1 61 2 113 1 77 1 297 1 42 1 138 1 140 1 46 1 224 1 251 1 128 1 89 1 34 1 12 1 290 1 96 1 
61 1 
292 1 77 1 113 1 297 1 42 1 157 1 82 1 46 1 44 1 128 1 89 1 12 1 174 1 15 1 96 1 315 1 61 2 179 1 273 1 140 1 323 1 224 1 34 1 231 1 73 1 192 1 290 1 
292 1 77 1 113 1 42 1 297 1 157 1 82 1 202 1 44 1 46 1 254 1 128 1 167 1 89 1 12 1 174 1 15 1 96 1 315 1 61 2 179 1 273 1 140 1 224 1 323 1 34 1 231 1 73 1 192 1 290 1 
292 1 77 1 113 1 42 1 297 1 157 1 82 1 202 1 44 1 46 1 254 1 128 1 167 1 89 1 12 1 174 1 15 1 96 1 315 1 61 2 179 1 273 1 140 1 224 1 323 1 34 1 231 1 73 1 192 1 290 1 
292 1 77 1 113 1 42 1 297 1 157 1 202 1 44 1 46 1 128 1 89 1 12 1 174 1 15 1 96 1 99 1 216 1 268 1 315 1 61 2 179 1 273 1 140 1 224 1 323 1 230 1 34 1 231 1 192 1 290 1 
292 1 315 1 61 2 113 1 77 1 297 1 42 1 138 1 140 1 46 1 224 1 251 1 128 1 89 1 34 1 12 1 290 1 96 1 267 1 
292 1 315 1 61 2 113 1 77 1 297 1 42 1 138 1 140 1 46 1 224 1 251 1 128 1 89 1 34 1 12 1 290 1 96 1 267 1 
292 1 77 1 113 1 297 1 42 1 157 1 46 1 44 1 128 1 89 1 12 1 174 1 15 1 96 1 216 1 315 1 61 2 179 1 273 1 140 1 323 1 224 1 230 1 34 1 231 1 192 1 290 1 
100 1 102 1 80 1 330 1 332 2 262 1 246 1 182 1 31 1 
295 2 296 4 3 8 43 1 201 1 246 2 84 1 158 11 159 1 248 1 87 1 253 6 255 2 206 2 259 1 262 2 54 14 95 1 130 2 100 1 131 11 132 1 219 3 63 3 319 1 137 1 182 2 31 2 227 1 330 2 332 4 109 1 337 1 
294 1 296 1 42 1 3 1 43 1 119 1 246 1 84 1 163 1 253 1 89 1 208 1 90 1 262 1 54 2 95 1 100 1 315 1 224 1 182 1 31 1 227 1 284 1 328 1 330 1 332 2 193 1 
1 2 241 1 3 10 246 3 84 1 159 3 158 7 87 2 256 1 253 10 255 2 89 1 173 1 262 3 263 2 171 2 13 2 95 1 100 3 101 3 181 1 182 3 31 3 280 2 37 2 193 1 291 1 294 1 295 2 296 7 42 3 43 2 119 1 118 2 121 1 206 3 126 2 209 1 208 1 304 2 54 20 309 1 56 3 130 8 131 7 315 3 218 1 318 3 136 1 319 4 139 2 227 1 326 2 330 3 149 2 332 6 331 2 236 1 337 4 
194 1 294 1 42 1 3 1 119 1 246 2 84 1 256 1 253 1 305 1 89 1 262 2 52 1 13 2 54 2 57 1 56 8 95 1 17 1 311 1 100 2 315 1 101 8 102 1 318 7 181 2 143 1 182 2 31 2 69 1 280 2 326 2 283 1 330 2 331 3 332 4 150 2 193 1 335 1 
239 1 294 1 295 1 296 1 42 1 3 1 119 1 246 1 158 1 159 1 87 1 255 1 253 2 206 1 207 1 89 1 262 1 54 3 130 1 131 1 100 1 269 1 315 1 319 1 182 1 31 1 227 1 330 1 332 2 
131 1 100 1 78 1 296 1 102 1 3 2 246 1 158 1 182 1 31 1 255 1 206 1 330 1 262 1 332 2 54 2 130 1 337 1 
131 1 100 1 296 1 102 1 319 1 246 1 158 1 159 1 182 1 87 1 31 1 253 2 330 1 262 1 332 2 36 1 54 2 130 1 
295 1 296 2 3 2 246 1 158 2 159 1 87 1 255 1 253 2 206 1 262 1 54 4 130 2 100 1 131 2 102 1 319 1 182 1 31 1 330 1 332 2 337 1 
131 1 100 1 78 1 296 1 3 2 246 1 158 1 182 1 31 1 255 1 206 1 283 1 330 1 262 1 332 2 54 2 130 1 337 1 
131 1 100 1 296 1 319 1 246 1 158 1 159 1 182 1 87 1 31 1 253 2 283 1 330 1 262 1 332 2 36 1 54 2 130 1 
295 1 296 2 3 2 246 1 158 2 159 1 87 1 255 1 253 2 206 1 262 1 54 4 130 2 100 1 131 2 319 1 182 1 31 1 283 1 330 1 332 2 337 1 
131 2 100 1 295 1 296 2 3 2 319 1 246 1 159 1 158 2 87 1 182 1 253 2 31 1 255 1 206 1 330 1 262 1 332 2 54 4 130 2 337 1 
1 1 42 1 3 1 43 1 118 1 246 1 84 1 253 1 171 1 263 1 262 1 54 2 13 1 56 1 95 1 100 1 101 1 315 1 318 1 139 1 181 1 182 1 31 1 280 1 326 1 330 1 331 1 332 2 
1 1 42 1 3 1 43 1 246 1 84 1 253 1 50 1 171 1 262 1 54 2 13 1 56 1 95 1 100 1 101 1 315 1 23 1 134 1 318 1 181 1 182 1 31 1 280 1 326 1 330 1 331 1 332 2 
295 1 296 2 3 2 246 1 158 2 159 1 87 1 255 1 253 2 206 1 262 1 54 4 130 2 100 1 131 2 319 1 182 1 31 1 227 1 330 1 332 2 337 1 
1 1 295 1 296 2 42 1 3 2 118 1 246 1 159 1 158 2 87 1 253 2 255 1 206 1 304 1 171 1 263 1 262 1 54 4 13 1 56 1 130 2 131 2 100 1 101 1 315 1 318 1 319 1 139 1 182 1 31 1 280 1 326 1 330 1 331 1 332 2 335 1 337 1 
239 1 294 1 295 1 296 1 42 1 3 2 119 1 246 1 159 1 158 1 87 1 253 1 255 1 206 1 89 1 262 1 54 3 130 1 100 1 131 1 269 1 315 1 182 1 31 1 227 1 106 1 330 1 332 2 337 1 
295 3 3 9 244 1 246 2 159 3 248 1 87 3 252 1 253 10 255 3 206 3 127 1 302 1 169 2 260 1 262 2 54 19 130 6 62 1 219 1 63 2 319 3 182 2 146 1 67 1 31 2 332 4 109 1 112 2 337 3 
295 1 176 1 62 1 219 2 63 2 3 6 244 2 246 1 182 1 255 1 31 1 67 2 253 5 206 1 127 1 302 1 262 1 332 2 54 11 265 1 14 1 109 2 112 2 
295 3 3 12 244 2 246 2 159 2 248 1 87 2 252 1 253 12 255 3 206 3 127 1 302 1 169 1 260 1 262 2 54 24 265 1 14 1 130 3 270 1 176 1 62 1 219 3 63 4 319 1 182 2 67 1 31 2 332 4 109 3 112 3 337 2 
295 3 3 12 244 2 246 2 159 2 248 1 87 2 252 1 253 12 255 3 206 3 127 1 302 1 169 1 260 1 262 2 54 24 265 1 14 1 130 4 270 1 176 1 62 1 219 3 63 4 319 2 182 2 67 1 31 2 332 4 109 3 112 3 337 2 
295 7 3 27 243 1 244 1 246 2 159 8 121 1 248 2 87 7 124 1 253 25 255 7 206 8 127 1 302 1 169 1 258 1 260 1 173 1 262 2 54 52 309 1 265 1 14 1 130 14 176 1 132 2 62 1 219 4 136 1 63 4 319 7 182 2 67 1 31 2 35 1 332 4 236 1 109 2 291 1 112 4 337 7 
188 1 327 1 64 1 170 1 53 1 105 1 245 1 160 1 39 1 184 1 
161 1 334 1 
188 1 327 1 93 1 117 1 276 1 105 1 245 1 39 1 184 1 
61 1 245 1 105 1 8 1 184 1 32 1 205 1 186 1 188 1 327 1 70 1 39 1 336 2 
61 1 245 1 105 1 8 1 184 1 32 1 205 1 186 1 188 1 327 1 70 1 39 1 336 2 
61 1 245 1 105 1 8 1 184 1 32 1 205 1 186 1 188 1 327 1 70 1 39 1 336 2 
116 1 333 1 226 1 
116 1 333 1 226 1 
166 1 317 1 
166 1 317 1 116 1 
71 1 129 1 
186 1 61 1 188 1 70 1 327 1 307 1 142 1 105 1 245 1 74 1 39 1 336 1 184 1 
333 1 226 1 
166 1 317 1 116 1 
42 2 3 1 246 1 84 1 122 1 123 1 301 1 253 1 305 1 89 2 262 1 13 1 54 2 56 2 95 1 311 1 100 1 101 2 315 2 318 2 182 1 31 1 227 1 280 1 326 1 281 1 286 1 330 1 331 1 332 2 150 2 
19 2 293 1 101 2 133 1 271 1 22 1 115 1 2 1 154 1 318 2 203 1 256 1 326 1 51 1 288 1 13 1 56 2 310 1 335 1 
19 2 293 1 101 1 133 1 271 1 22 1 115 1 154 1 318 1 256 1 326 1 51 1 108 1 288 1 13 1 56 1 310 1 
101 1 2 1 318 1 181 1 320 1 143 1 280 1 326 1 261 1 331 1 52 1 13 1 56 1 310 1 
19 2 293 1 101 1 133 1 271 1 22 1 115 1 2 1 154 1 318 1 203 1 256 1 326 1 51 1 288 1 13 1 56 1 310 1 
7 1 
80 1 
157 1 82 1 174 1 231 1 73 1 192 1 44 1 323 1 
60 1 1 1 101 1 318 1 181 1 120 1 44 1 323 1 257 1 185 1 10 1 280 1 326 2 94 1 331 2 231 1 174 1 13 1 192 1 56 1 40 1 
219 1 63 1 157 1 174 1 231 1 14 1 192 1 44 1 323 1 109 1 
61 1 157 2 159 1 247 2 44 1 323 1 254 1 206 2 148 1 231 1 174 1 173 1 192 1 236 1 152 1 291 1 
79 1 157 1 174 1 231 1 192 1 323 1 
206 1 295 1 157 1 159 1 44 1 87 1 255 1 
101 1 318 1 181 1 56 1 
257 1 157 1 174 1 231 1 192 1 144 1 44 1 323 1 
105 1 175 1 184 1 
275 1 71 1 53 1 105 1 184 1 
105 1 175 1 184 1 
105 1 175 1 184 1 
156 1 105 1 184 1 
156 1 105 1 184 1 
156 1 105 1 184 1 
105 1 184 1 
188 1 245 1 
3 4 136 1 319 2 246 2 159 1 121 1 182 2 253 4 31 2 124 1 206 1 173 1 262 2 332 4 54 8 309 1 130 3 236 1 337 1 291 1 
80 1 
295 1 3 2 319 1 200 1 246 1 159 1 87 1 182 1 253 2 31 1 255 1 206 1 262 1 332 2 54 4 130 2 337 1 
295 1 219 1 63 2 3 3 319 1 159 1 248 1 87 1 253 4 255 1 206 1 54 7 130 2 109 1 337 1 
295 2 3 11 201 1 246 2 159 3 121 1 248 1 87 2 255 2 253 12 124 2 206 3 306 1 173 1 262 2 54 23 309 1 130 9 132 1 219 2 136 1 63 2 319 5 182 2 31 2 332 4 236 2 291 2 337 4 
63 1 54 1 253 1 
219 1 3 1 54 1 
295 1 3 3 319 2 200 1 246 1 159 1 182 1 87 1 31 1 253 3 255 1 206 1 126 1 332 2 262 1 54 6 130 3 337 1 
295 2 3 6 243 1 246 1 159 2 87 2 253 6 255 2 206 2 127 1 262 1 54 12 14 1 265 1 130 2 176 1 219 1 63 1 319 1 182 1 31 1 332 2 35 1 109 1 337 1 
3 3 319 1 159 1 253 3 206 1 173 1 54 6 130 2 236 1 291 1 337 1 
3 1 136 1 319 1 246 1 121 1 182 1 253 2 124 1 31 1 306 1 262 1 332 2 54 3 130 2 236 1 337 1 291 1 
3 5 319 3 246 1 159 2 182 1 31 1 253 5 206 2 127 1 332 2 262 1 173 1 54 10 130 5 236 2 152 1 291 2 337 2 
3 2 246 1 182 1 31 1 255 1 206 1 127 1 262 1 332 2 54 2 130 1 337 1 
295 1 3 2 319 1 246 1 159 1 87 1 182 1 253 2 31 1 255 1 206 1 127 1 262 1 332 2 54 4 130 2 337 1 
3 1 319 1 246 3 182 3 124 1 252 1 253 2 31 3 127 1 306 1 262 3 332 6 54 3 130 2 236 1 291 1 337 1 
295 3 3 14 200 1 246 4 159 4 121 1 248 1 87 3 124 1 253 15 252 1 255 3 206 4 127 1 173 1 262 4 54 29 309 1 130 10 219 3 136 1 63 4 319 5 182 4 277 1 31 4 332 8 191 1 75 1 236 2 109 1 291 2 337 5 
3 4 246 1 159 1 121 1 253 4 206 1 127 1 262 1 173 1 54 8 309 1 14 1 130 2 219 1 63 1 136 1 319 2 182 1 31 1 332 2 109 1 236 1 291 1 
295 1 3 6 200 1 246 2 159 1 121 1 248 1 253 5 255 1 206 2 127 1 173 1 262 2 54 11 309 1 14 1 130 3 219 1 136 1 63 2 319 2 182 2 31 2 332 4 236 1 109 1 291 1 337 1 
295 1 176 1 219 1 3 3 63 1 246 1 182 1 255 1 31 1 253 2 206 1 127 1 262 1 332 2 54 5 265 1 14 1 109 1 
295 2 3 10 200 1 243 1 246 3 159 2 121 1 87 1 124 1 253 7 255 2 206 3 127 1 173 1 262 3 54 17 309 1 14 1 265 1 130 5 176 1 219 1 136 1 63 1 319 3 182 3 31 3 332 6 35 1 236 1 109 1 291 1 337 2 
3 4 246 1 159 1 121 1 253 4 206 1 127 1 262 1 173 1 54 8 309 1 14 1 130 2 219 1 63 1 136 1 319 2 182 1 31 1 332 2 109 1 236 1 291 1 
295 2 3 6 243 1 246 1 159 2 87 2 253 6 255 2 206 2 127 1 262 1 54 12 14 1 265 1 130 2 176 1 219 1 63 1 319 1 182 1 31 1 332 2 35 1 109 1 337 1 
295 1 176 1 219 1 3 3 63 1 200 1 246 2 182 2 255 1 31 2 253 2 206 1 127 1 262 2 332 4 54 5 265 1 14 1 109 1 
295 3 3 9 243 1 246 4 159 2 87 2 253 7 252 1 255 3 124 2 206 3 127 1 262 4 54 16 14 1 265 1 130 6 176 1 219 1 63 1 319 3 182 4 31 4 35 1 332 8 109 1 337 3 
136 1 3 3 319 3 159 1 121 2 253 4 206 1 173 1 54 7 130 6 236 3 291 3 337 3 
295 1 176 1 219 1 3 3 63 1 246 2 182 2 255 1 252 1 31 2 253 2 206 1 127 1 262 2 332 4 54 5 265 1 14 1 109 1 
292 1 315 1 165 1 42 1 89 1 199 1 43 1 
292 1 315 1 153 1 221 1 42 1 199 1 43 1 4 1 162 1 165 1 168 1 89 1 
101 1 80 1 318 1 181 1 56 1 
1 1 294 1 315 2 101 1 42 2 318 1 139 1 43 1 119 1 181 1 280 1 326 1 89 1 331 1 171 1 13 1 56 1 193 1 
294 2 1 2 42 2 43 1 119 1 128 1 89 2 171 1 13 1 56 1 101 1 315 2 272 1 220 1 318 1 139 1 321 1 224 1 280 2 326 1 34 1 331 3 193 1 
294 2 1 2 42 2 43 1 119 1 128 1 89 2 171 1 13 1 56 2 101 2 315 2 23 1 272 1 220 1 318 2 223 1 321 1 224 1 280 2 326 1 34 1 331 3 193 1 
278 1 101 1 61 1 220 1 318 1 331 1 56 1 40 1 
101 1 61 1 220 1 318 1 331 1 56 1 40 1 58 1 
101 1 69 1 326 1 318 1 13 1 56 1 
194 1 60 1 20 1 101 7 1 1 318 6 181 2 45 1 256 1 69 1 280 2 326 3 305 1 150 1 331 3 13 2 57 1 56 7 17 1 266 1 335 1 
1 1 294 1 296 1 42 2 3 3 43 2 119 1 118 1 246 2 158 1 159 1 121 1 253 3 206 1 89 1 304 1 173 1 171 1 262 2 263 1 54 6 13 1 309 1 56 1 130 2 131 1 100 2 315 2 101 1 318 1 136 1 319 2 139 1 182 2 31 2 227 1 280 1 326 1 286 1 330 2 149 1 331 1 332 4 193 1 236 1 335 1 291 1 
61 1 142 1 
60 1 101 1 1 1 318 1 28 1 69 1 10 1 280 1 326 2 189 1 331 1 13 1 56 1 
101 4 196 1 318 4 181 1 223 1 143 1 280 1 326 1 52 1 331 1 13 1 56 4 335 1 
20 1 101 2 1 1 220 1 241 1 318 2 45 1 279 1 280 1 326 2 331 1 13 1 56 2 264 1 
19 1 101 1 22 1 115 1 326 1 154 1 318 1 181 1 13 1 56 1 
101 2 318 2 122 1 256 1 280 1 326 1 305 1 331 1 13 1 56 2 335 1 
101 5 196 1 220 1 318 4 181 1 143 1 280 2 326 2 305 1 52 1 331 3 13 2 56 5 57 1 17 1 335 1 
101 5 196 1 220 1 318 4 181 1 143 1 280 2 326 2 305 1 52 1 331 3 13 2 56 5 57 1 335 1 312 1 
1 1 294 1 315 2 101 1 23 1 42 2 318 1 43 1 119 1 181 1 280 1 326 1 89 1 331 1 171 1 13 1 56 1 193 1 
60 1 20 1 101 1 1 1 220 1 318 1 45 1 280 1 326 2 331 1 13 1 56 1 266 1 
48 1 43 1 212 1 300 1 322 1 
61 2 43 1 299 1 142 1 300 2 322 2 85 1 224 1 86 1 128 1 48 1 34 1 172 1 212 2 290 1 96 1 
315 1 42 1 300 1 123 1 301 1 48 1 281 1 89 1 212 1 
48 1 299 1 86 1 
80 1 
314 1 287 1 83 1 233 1 235 1 59 1 238 1 
314 1 197 1 27 1 
215 1 314 1 25 1 83 1 107 1 72 1 233 1 235 1 238 1 59 1 
314 2 287 1 198 1 83 1 55 1 233 1 235 1 59 1 238 2 
215 1 19 1 314 1 22 1 83 1 298 1 287 1 51 1 233 1 289 1 238 1 
215 1 314 1 287 1 83 1 233 1 59 1 238 1 
215 1 314 1 83 1 233 1 235 1 59 2 238 1 
215 1 314 2 242 1 83 2 225 1 49 1 287 1 233 2 59 1 238 2 
215 1 314 3 26 1 198 2 83 1 298 1 47 1 125 1 287 2 233 1 235 1 59 1 238 3 
19 2 215 1 314 2 115 1 22 1 198 1 83 1 287 1 51 1 210 1 288 1 233 1 235 1 59 1 238 2 
215 1 314 4 198 2 83 2 298 1 125 1 287 2 233 2 55 1 235 1 98 1 59 1 238 4 
215 1 314 1 287 1 83 1 233 1 235 1 59 1 238 1 
314 3 25 1 198 2 83 1 298 1 125 1 107 1 287 2 72 2 233 1 235 2 59 2 238 3 
215 1 240 1 314 2 274 1 198 1 83 1 6 1 287 1 233 1 235 1 59 1 238 2 
215 1 314 1 25 1 83 1 11 1 72 1 233 1 235 1 238 1 59 1 
135 1 287 2 214 2 30 1 
215 1 314 1 83 1 233 1 204 1 238 1 
47 1 215 1 314 2 287 1 198 1 83 1 233 1 235 1 59 1 238 2 
16 1 
215 1 314 1 287 1 83 1 233 1 235 1 59 1 238 1 
215 1 314 3 316 1 198 1 83 1 47 1 287 1 233 1 235 1 238 3 59 1 
125 1 287 1 72 1 298 1 
287 1 59 1 

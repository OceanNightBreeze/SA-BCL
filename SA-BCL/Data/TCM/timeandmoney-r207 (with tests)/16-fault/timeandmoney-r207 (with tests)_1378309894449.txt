#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (184,362) (184,362) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (184,362) (184,362) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (184,362) (184,362) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (184,362) (184,362) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 368 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 368 261 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 368 261 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (28,94,285) (28,94,285) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (28,94,285) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (28,94,285) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (181,337) (181,337) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (28,94,285) (28,94,285) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (279,300,353) (279,300,353) (279,300,353) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (279,300,353) (279,300,353) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (279,300,353) (279,300,353) (279,300,353) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 314 267 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 282 53 (288,320) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 314 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 136 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2250 | = null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> -1
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
291 1 243 1 328 1 225 1 341 1 184 1 362 1 14 1 131 1 260 1 296 1 234 1 
291 1 243 1 328 1 225 1 341 1 184 1 362 1 14 1 131 1 260 1 296 1 234 1 
291 1 243 1 328 1 225 1 341 1 184 1 362 1 14 1 131 1 260 1 296 1 234 1 
291 1 243 1 328 1 225 1 341 1 184 1 362 1 14 1 131 1 260 1 296 1 234 1 
235 1 291 1 328 1 121 1 225 2 79 1 368 1 81 1 14 2 117 1 296 1 234 1 
328 1 243 1 165 1 14 2 169 1 234 1 291 1 121 1 120 1 225 2 47 1 258 1 131 1 310 1 151 1 262 1 
216 1 328 2 14 3 117 1 234 2 235 1 291 1 4 1 120 1 225 3 121 2 131 1 310 1 
216 1 328 2 81 1 14 7 117 5 15 1 234 2 235 3 291 1 4 2 121 3 225 7 79 1 368 1 131 1 149 1 37 1 296 1 261 1 
216 1 328 2 81 1 14 7 117 5 15 1 234 2 235 3 291 1 4 2 121 3 225 7 79 1 368 1 131 1 149 1 37 1 296 1 261 1 
161 1 63 1 34 1 
39 1 161 1 78 2 
274 2 264 2 105 1 175 2 340 1 339 2 218 2 82 2 
345 2 175 3 270 2 82 2 274 3 105 1 24 1 7 1 259 1 26 2 357 1 8 1 283 1 284 1 309 1 12 1 189 1 264 2 163 1 138 1 114 2 142 1 141 1 164 1 191 1 339 2 218 2 118 1 55 1 56 2 340 1 198 1 252 1 294 1 98 1 325 1 268 1 
274 1 264 1 175 1 340 1 339 1 74 1 218 1 213 1 82 1 122 1 
175 1 20 1 74 1 366 1 82 1 274 1 239 1 159 1 161 1 240 1 63 1 150 1 174 1 298 1 
264 1 175 1 20 1 339 1 218 1 74 1 366 1 82 1 274 1 159 2 161 1 240 2 63 1 174 1 298 1 
355 1 349 1 159 1 240 1 317 1 
355 1 153 1 349 1 159 2 103 1 161 1 240 2 63 1 
355 1 159 1 240 1 
264 1 175 1 339 1 349 1 126 1 74 1 218 1 82 1 274 1 340 1 159 1 213 1 240 1 122 1 
161 1 
355 1 153 1 349 1 159 2 161 1 112 1 240 2 63 1 
86 1 311 1 153 1 349 2 266 1 178 2 233 1 179 1 318 2 172 2 355 2 35 1 307 1 109 1 159 5 161 1 240 5 63 1 85 1 
105 1 34 1 
264 1 175 2 339 1 218 1 82 2 274 2 105 2 106 1 185 1 
65 1 227 1 135 1 
163 1 114 1 175 1 191 1 330 1 270 1 55 1 274 1 105 1 198 1 7 1 357 1 26 1 98 1 284 1 309 1 
65 1 163 1 264 1 114 1 175 2 191 1 339 1 270 1 331 1 82 1 55 1 274 2 321 1 198 1 7 1 357 1 26 1 98 1 284 1 309 1 
264 4 175 5 339 4 218 1 331 2 273 1 82 5 274 5 277 1 105 1 321 1 106 1 150 1 360 1 
274 1 264 1 175 1 339 1 74 1 213 1 62 1 82 1 
274 3 264 3 105 1 175 3 339 3 218 1 331 1 82 3 
274 1 264 1 175 1 339 1 74 1 213 1 82 1 
274 1 264 1 175 1 106 1 339 1 74 1 218 1 185 1 82 1 
345 2 175 4 20 1 204 1 270 1 331 1 82 3 274 4 105 1 106 1 7 1 159 1 357 1 26 1 8 1 240 1 283 1 284 1 309 1 12 1 189 1 163 1 264 3 138 1 139 1 114 1 142 1 191 1 164 1 339 3 218 2 74 1 366 1 55 1 56 1 321 1 340 1 198 1 252 1 98 1 325 1 268 1 174 1 298 1 
274 2 264 1 105 1 175 2 339 1 331 1 150 1 82 2 360 1 
264 3 175 3 20 1 339 3 218 1 74 1 204 1 331 2 366 1 82 3 274 3 321 1 106 1 159 1 161 1 240 1 70 1 174 1 298 1 
65 1 274 2 264 2 175 2 106 1 339 2 218 1 135 1 331 1 82 2 
163 1 114 1 175 1 191 1 270 1 55 1 274 1 105 1 198 1 7 1 357 1 26 1 98 1 284 1 309 1 
163 1 114 1 175 1 191 1 270 1 274 1 320 1 105 1 198 1 7 1 357 1 26 1 84 1 98 1 284 1 
345 2 65 2 40 1 269 1 306 1 183 1 24 2 135 2 8 1 336 1 212 1 283 1 214 1 189 1 12 2 142 1 265 1 76 1 192 1 56 4 227 2 38 1 325 1 268 1 
62 1 
140 1 194 1 
140 1 194 1 
168 1 351 1 
168 1 351 1 
168 1 351 1 
125 1 140 1 194 1 
125 1 140 1 194 1 
0 1 140 2 36 1 168 1 351 1 194 2 
140 1 27 1 194 1 
125 1 140 1 194 1 
200 1 140 1 194 1 
200 1 140 1 194 1 
200 1 140 1 194 1 
175 2 41 1 42 1 1 1 272 1 82 2 274 2 105 1 159 1 240 1 27 1 264 2 242 1 51 1 140 1 339 2 363 1 167 1 247 1 194 1 92 1 97 1 229 1 343 1 
312 2 361 1 140 2 42 2 363 2 177 1 272 2 194 2 276 1 303 1 92 2 251 1 36 1 159 2 281 1 161 1 240 2 229 1 343 3 
296 1 
258 1 169 1 262 1 
217 1 258 1 296 2 262 1 
58 1 258 1 301 1 32 1 365 1 296 1 262 1 
301 1 365 1 58 2 258 1 296 1 262 1 
39 1 19 1 41 1 269 1 153 1 349 4 178 1 255 1 355 1 307 2 159 5 335 1 109 3 240 5 161 2 241 1 308 1 51 1 265 1 30 1 266 1 78 3 90 1 192 1 224 2 145 1 318 1 172 1 196 2 148 2 97 1 38 1 63 1 
39 1 175 1 269 1 126 1 178 1 82 1 274 1 335 1 240 6 287 1 51 2 339 1 192 1 145 1 340 1 196 2 63 1 297 3 19 1 349 5 153 1 255 1 355 4 307 2 159 6 109 3 161 3 213 1 162 1 264 1 265 1 218 1 74 1 30 1 266 1 78 3 224 2 317 3 318 1 172 1 38 1 122 1 231 1 
39 2 19 1 269 1 349 2 178 1 307 2 159 3 335 1 109 3 161 3 240 3 241 1 311 1 51 1 265 1 30 1 90 1 78 4 192 1 224 2 145 1 318 1 172 1 196 2 148 1 63 1 38 1 
39 3 19 2 269 2 349 3 178 1 307 4 159 4 335 1 109 5 161 4 240 4 241 1 311 1 51 2 265 2 30 1 78 7 90 1 192 2 224 4 145 2 250 1 318 1 172 1 196 4 148 2 63 1 38 2 230 1 18 1 
98 1 171 1 34 1 
176 1 98 1 
45 1 
7 1 98 1 284 1 
98 1 302 1 
98 1 284 1 
93 1 7 1 31 1 98 3 171 2 284 1 
299 1 327 1 12 3 40 2 244 1 269 1 76 3 203 1 220 1 89 1 192 1 128 2 56 7 305 1 24 4 280 1 295 1 
299 1 327 1 12 3 40 2 244 1 269 1 76 3 203 1 220 1 89 1 192 1 128 2 56 7 305 1 24 4 280 1 295 1 
299 1 327 1 12 3 40 2 244 1 269 1 76 3 203 1 220 1 89 1 192 1 128 2 354 1 56 7 305 1 24 4 280 1 295 1 
327 1 345 2 123 1 347 1 40 3 269 2 203 1 43 1 128 1 24 8 160 1 280 2 8 1 189 1 12 8 72 1 244 1 265 2 87 2 76 6 220 1 222 1 192 2 145 2 56 16 146 1 228 2 295 3 325 1 268 1 38 2 
299 1 327 1 345 4 12 4 189 2 40 3 269 1 203 1 76 4 220 1 89 1 192 1 128 2 56 9 305 1 146 1 173 1 24 5 280 1 132 1 8 2 295 1 268 2 325 2 
11 1 328 1 114 1 28 1 14 1 270 1 234 1 291 1 225 1 94 1 131 1 186 1 26 1 
113 1 328 1 114 1 28 1 100 1 14 2 117 1 270 1 234 1 225 2 131 1 186 1 26 1 344 1 
113 1 114 1 100 1 225 1 14 1 131 1 270 1 117 1 186 1 26 1 285 1 
181 1 114 1 328 1 225 1 14 1 131 2 88 1 270 1 186 2 26 1 357 1 337 1 234 1 344 1 
328 1 114 1 28 1 100 1 14 1 270 1 234 1 291 1 225 1 94 1 131 1 186 1 26 1 
9 1 
39 2 175 1 270 2 127 2 178 1 82 1 180 2 274 1 46 1 6 1 239 1 335 1 240 5 50 1 284 1 246 1 193 1 290 4 292 1 57 1 198 1 98 1 63 1 150 1 298 1 20 1 153 3 304 2 355 6 307 2 109 2 159 5 111 1 357 2 26 2 211 1 161 2 263 1 163 1 114 2 116 1 166 2 74 1 266 1 221 1 78 2 223 1 316 1 366 1 318 1 119 2 172 1 322 2 371 2 174 1 
263 1 20 1 175 1 116 1 153 1 74 1 366 1 290 2 82 1 180 1 274 1 355 2 6 1 239 1 159 3 111 1 112 1 240 3 50 1 150 1 174 1 298 1 
263 1 20 1 175 1 116 1 153 1 166 1 74 1 366 1 290 3 82 1 274 1 355 1 6 1 239 1 159 3 111 1 112 1 161 1 240 3 50 1 63 1 150 1 174 1 298 1 
175 1 20 1 153 1 82 1 274 1 180 1 304 1 355 2 6 1 239 1 159 3 111 1 112 1 240 3 161 1 50 1 263 1 116 1 74 1 166 1 366 1 290 3 63 1 174 1 150 1 298 1 
39 2 175 1 20 1 153 3 23 1 127 2 178 1 82 1 274 1 180 4 304 4 355 7 307 1 6 1 239 1 109 1 159 5 111 1 211 1 161 5 112 1 240 5 50 1 137 1 263 1 116 1 166 4 74 1 266 1 223 1 248 1 366 1 290 6 249 1 318 1 119 2 172 1 322 2 63 5 371 2 199 1 150 1 174 1 298 1 
39 2 175 1 127 2 178 1 82 1 274 1 180 2 6 1 239 1 240 4 50 1 290 4 57 1 63 1 150 1 298 1 20 1 153 2 304 2 355 4 307 1 159 4 109 1 111 1 211 1 161 2 263 1 116 1 74 1 166 2 266 1 223 1 78 2 366 1 318 1 119 2 172 1 322 2 174 1 371 2 
39 2 175 1 20 1 153 2 127 2 178 1 82 1 180 2 274 1 304 2 355 4 307 1 6 1 239 1 109 1 159 4 111 1 211 1 161 1 240 4 50 1 137 1 263 1 116 1 166 2 74 1 266 1 223 1 366 1 248 1 290 4 318 1 119 2 172 1 322 2 63 1 371 2 174 1 150 1 199 1 298 1 
39 2 175 1 20 1 153 2 127 2 178 1 82 1 180 2 274 1 304 2 355 4 307 1 6 1 239 1 109 1 159 4 111 1 211 1 161 1 240 4 50 1 137 1 263 1 116 1 166 2 74 1 266 1 223 1 366 1 248 1 290 4 318 1 119 2 172 1 322 2 63 1 371 2 174 1 150 1 199 1 298 1 
346 1 175 1 20 1 153 2 127 2 178 1 82 1 180 2 274 1 304 2 182 1 355 4 307 1 6 1 239 1 109 1 159 4 111 1 161 1 240 4 50 1 137 1 263 1 116 1 166 2 74 1 266 1 78 2 223 1 366 1 290 4 318 1 16 2 172 1 17 2 324 1 63 1 371 2 174 1 150 1 298 1 
39 2 175 1 20 1 153 2 23 1 127 2 178 1 82 1 274 1 180 3 304 3 355 5 307 1 6 1 239 1 109 1 159 4 111 1 211 1 161 1 240 4 50 1 137 1 263 1 116 1 74 1 166 3 266 1 223 1 248 1 366 1 290 5 318 1 119 2 172 1 322 2 63 1 371 2 174 1 150 1 199 1 298 1 
39 2 175 1 20 1 153 2 23 1 127 2 178 1 82 1 274 1 180 3 304 3 355 5 307 1 6 1 239 1 109 1 159 4 111 1 211 1 161 1 240 4 50 1 137 1 263 1 116 1 74 1 166 3 266 1 223 1 248 1 366 1 290 5 318 1 119 2 172 1 322 2 63 1 371 2 174 1 150 1 199 1 298 1 
175 1 127 2 178 1 82 1 274 1 180 2 182 1 6 1 239 1 240 4 50 1 290 4 16 2 57 1 17 2 63 1 150 1 298 1 20 1 153 2 304 2 355 4 307 1 159 4 109 1 111 1 161 1 263 1 116 1 74 1 166 2 266 1 223 1 78 2 366 1 318 1 172 1 174 1 371 2 
65 1 327 1 345 2 299 1 40 2 269 1 203 1 128 1 305 1 105 2 24 3 135 1 8 1 283 1 214 1 189 1 12 3 142 1 76 2 89 1 192 1 34 1 56 6 227 1 325 1 268 1 
345 4 65 16 123 1 40 2 347 2 269 2 43 2 105 1 24 13 259 1 135 6 8 2 187 1 283 1 12 9 189 2 138 1 142 2 265 4 87 4 76 4 289 1 315 1 192 4 145 4 56 22 253 1 227 16 295 2 228 4 325 2 268 2 38 2 
345 2 175 2 330 1 270 1 331 1 82 1 274 2 105 1 24 1 7 1 26 1 357 1 135 1 259 1 8 1 284 1 283 1 309 1 163 1 264 1 189 1 12 1 114 1 138 1 52 1 191 1 142 1 339 1 29 1 315 1 55 1 195 1 56 2 321 1 198 1 98 1 268 1 325 1 
327 1 124 2 40 4 175 3 80 2 269 3 270 3 331 1 128 1 82 1 274 3 7 2 135 7 8 3 283 3 284 2 12 10 189 3 138 1 142 3 191 2 339 1 89 1 192 3 145 2 55 2 56 20 198 2 252 2 61 1 98 2 295 4 299 1 345 6 65 7 100 1 202 1 67 2 21 1 203 1 105 2 305 1 24 10 259 1 26 3 357 1 309 2 264 1 163 2 114 3 265 2 76 8 315 1 367 2 321 1 227 7 325 3 268 3 38 2 
345 4 100 1 175 1 270 7 331 1 82 1 237 1 274 1 275 1 356 1 24 1 133 1 48 1 26 8 357 2 259 1 8 2 283 2 284 2 214 1 11 1 264 1 163 2 189 2 12 1 114 8 138 1 73 1 142 2 141 2 339 1 246 1 316 1 56 2 198 2 254 1 98 3 325 2 268 2 
65 1 345 2 40 1 175 1 269 1 82 1 274 1 106 1 24 1 107 1 135 1 8 1 283 1 189 1 264 1 12 2 142 1 265 1 339 1 76 1 218 1 315 1 192 1 145 1 56 3 227 1 325 1 268 1 38 1 
65 1 345 2 189 1 142 1 265 1 76 1 192 1 56 2 24 2 227 1 135 1 8 1 212 1 295 1 283 1 268 1 325 1 214 1 
65 1 345 2 189 1 12 2 40 1 142 1 269 1 76 1 56 2 306 1 227 1 135 1 8 1 283 1 268 1 325 1 38 1 214 1 
345 2 65 2 40 1 269 1 24 2 135 2 8 1 283 1 214 1 189 1 12 2 265 1 142 1 76 2 192 1 145 1 56 4 227 2 295 1 325 1 268 1 38 1 
65 1 345 2 189 1 142 1 265 1 76 1 192 1 275 1 56 2 24 2 227 1 135 1 8 1 212 1 295 1 283 1 268 1 325 1 
65 1 345 2 189 1 12 2 142 1 269 1 275 1 56 2 306 1 227 1 135 1 8 1 283 1 268 1 325 1 38 1 
65 2 345 2 12 2 189 1 142 1 265 1 269 1 192 1 145 1 275 1 56 4 24 2 227 2 135 2 8 1 38 1 283 1 268 1 325 1 
65 2 345 2 12 2 189 1 40 1 142 1 265 1 269 1 76 2 192 1 145 1 56 4 24 2 227 2 135 2 8 1 295 1 38 1 283 1 268 1 325 1 
345 2 175 1 270 1 274 1 105 1 24 1 7 1 259 1 26 1 357 1 8 1 284 1 283 1 309 1 163 1 189 1 12 1 114 1 138 1 191 1 142 1 55 1 56 2 198 1 252 1 98 1 268 1 325 1 
345 2 12 1 189 1 138 1 114 1 142 1 329 1 74 1 270 1 205 1 56 1 105 1 357 1 26 1 8 1 283 1 268 1 325 1 
345 2 65 2 40 1 269 1 24 2 135 2 8 1 283 1 189 1 12 2 265 1 142 1 76 2 192 1 315 1 145 1 56 4 227 2 295 1 325 1 268 1 38 1 
65 2 345 2 40 1 80 1 175 1 269 1 270 1 274 1 24 2 7 1 135 2 26 1 8 1 284 1 283 1 309 1 12 2 163 1 11 1 189 1 114 1 265 1 191 1 142 1 76 2 192 1 145 1 55 1 56 4 198 1 252 1 227 2 98 1 295 1 38 1 268 1 325 1 
345 2 65 1 175 1 269 1 82 1 274 1 106 1 24 2 135 1 8 1 283 1 10 1 12 1 189 1 264 1 142 1 265 1 339 1 76 1 218 1 315 1 192 1 145 1 56 3 227 1 295 1 38 1 325 1 268 1 
299 1 327 1 345 8 201 1 123 2 40 8 347 2 269 8 203 1 101 1 43 2 154 3 352 1 156 1 128 1 3 1 305 1 24 27 108 1 334 1 8 4 286 1 189 4 12 26 265 7 87 4 76 15 89 1 33 1 170 1 192 8 145 7 56 53 146 2 173 1 369 1 96 1 59 1 228 4 295 7 325 4 268 4 38 7 
345 6 201 1 123 2 347 2 40 6 269 6 101 1 43 2 154 4 352 2 156 2 3 1 24 24 108 1 334 1 8 3 12 22 189 3 265 7 87 4 76 10 33 1 170 1 192 7 145 7 56 46 146 2 173 1 293 1 369 1 59 1 295 4 228 4 325 3 268 3 38 6 
327 1 123 2 40 8 269 8 43 2 128 1 3 1 334 1 8 4 12 26 189 4 87 4 89 1 192 8 145 7 56 53 146 2 293 1 59 1 96 1 295 7 345 8 299 1 201 1 347 2 101 1 203 1 156 1 352 1 154 3 305 1 24 27 108 1 265 7 76 15 33 1 170 1 173 1 369 1 228 4 38 7 268 4 325 4 
327 1 123 2 40 8 269 8 43 2 128 1 3 1 334 1 8 4 12 27 189 4 87 4 89 1 192 8 145 7 56 55 146 2 293 1 59 1 96 1 295 7 345 8 299 1 201 1 347 2 101 1 203 1 156 1 352 1 154 4 305 1 24 28 108 1 265 7 76 15 33 1 170 1 173 1 369 1 228 4 38 7 268 4 325 4 
299 1 327 1 345 6 201 1 123 2 40 9 347 2 269 8 203 1 101 1 43 2 154 4 352 1 156 1 128 1 3 1 305 1 24 27 108 1 334 1 8 3 189 3 12 27 265 7 87 4 76 15 89 1 33 1 170 1 192 8 145 7 56 54 146 2 173 1 293 1 369 1 59 1 228 4 295 6 325 3 268 3 38 7 
345 2 175 2 270 2 155 1 82 2 274 2 356 1 24 1 26 2 259 1 8 1 284 1 283 1 215 1 163 1 189 1 12 1 114 2 138 1 142 1 141 2 219 1 315 1 56 2 198 1 323 1 60 1 254 1 98 1 268 1 325 1 
163 1 11 1 114 2 300 1 217 1 100 1 270 2 75 1 364 1 353 1 129 1 333 1 279 1 198 1 258 1 26 2 296 1 262 1 
163 1 114 1 217 1 100 1 270 1 75 1 353 1 129 1 333 1 279 1 198 1 258 1 25 1 26 1 296 1 262 1 
163 1 114 1 115 1 270 1 75 1 232 1 364 1 246 1 316 1 198 1 357 1 26 1 98 1 284 1 
163 1 114 1 300 1 217 1 100 1 270 1 75 1 364 1 353 1 129 1 333 1 279 1 198 1 258 1 26 1 296 1 262 1 
102 1 
35 1 307 1 109 1 161 1 63 1 34 1 85 1 
39 1 153 1 178 1 355 1 307 1 109 1 159 1 211 1 161 2 240 1 266 1 78 1 318 1 119 1 172 1 322 1 63 1 
163 1 114 1 172 1 198 1 270 1 26 1 357 1 266 1 267 1 314 1 178 1 318 1 
39 5 123 1 19 3 347 1 153 1 269 4 101 1 43 1 178 2 69 1 3 1 46 1 355 1 307 8 335 1 159 1 109 13 49 1 240 1 161 7 265 4 87 2 266 2 33 1 78 10 170 1 192 4 224 8 145 4 91 1 318 2 172 2 196 8 59 1 228 2 63 2 38 4 
327 1 299 1 19 2 175 1 269 1 126 1 203 1 178 1 82 1 274 1 307 2 159 1 109 2 49 1 213 1 240 1 264 1 339 1 74 1 218 1 245 1 266 1 192 2 248 1 318 1 172 1 340 1 122 1 
266 1 178 1 318 1 172 1 35 1 307 1 109 1 161 1 63 1 85 1 
39 5 19 2 67 1 265 2 269 2 78 10 192 2 224 5 145 2 196 5 307 5 109 5 49 1 161 5 38 2 
355 1 153 1 159 1 161 1 240 1 63 1 
348 1 153 2 270 4 178 2 355 4 46 2 158 1 210 1 5 1 307 2 7 1 335 2 109 2 159 3 26 4 357 2 240 3 284 2 311 1 71 1 163 3 114 4 221 1 266 1 246 1 193 1 316 1 318 2 172 2 197 2 147 1 198 2 370 1 98 2 
345 2 175 3 270 1 82 2 274 3 105 1 7 1 26 1 357 1 8 1 284 1 283 1 309 1 12 1 189 1 264 2 163 1 138 1 114 1 164 1 191 1 142 1 339 2 218 2 55 1 56 1 340 1 198 1 252 1 98 1 325 1 268 1 
39 2 266 1 78 4 178 1 224 2 128 1 318 1 172 1 46 1 196 2 307 2 335 1 109 1 161 4 63 2 
236 1 363 1 272 1 
236 1 363 1 272 1 
276 1 1 1 363 1 272 1 326 1 
236 1 363 1 272 1 
226 1 363 1 272 1 
226 1 363 1 272 1 
226 1 363 1 272 1 
363 1 272 1 
140 1 194 1 
299 1 345 4 327 1 12 4 189 2 40 2 269 1 76 3 203 1 89 1 192 1 128 1 56 8 305 1 146 1 24 4 8 2 295 1 268 2 325 2 
327 1 299 1 12 3 40 2 269 1 203 1 76 2 89 1 192 1 128 1 34 1 56 6 305 1 24 3 
345 2 12 2 189 1 40 1 265 1 269 1 76 1 192 1 145 1 319 1 56 4 24 2 8 1 268 1 325 1 38 1 
123 1 12 6 40 2 347 1 265 2 87 2 269 2 76 3 43 1 192 2 145 2 56 12 24 6 295 1 228 2 38 2 
299 2 327 4 345 4 347 1 40 7 269 4 203 4 43 1 128 1 305 1 24 14 8 2 12 16 189 2 265 2 87 2 76 12 245 1 89 1 289 1 222 1 192 4 145 2 56 30 146 2 295 5 228 2 38 2 268 2 325 2 
56 1 12 1 228 1 
56 1 24 1 87 1 
345 2 189 1 12 3 40 1 67 1 265 1 269 1 76 3 192 1 145 1 319 1 56 6 24 3 8 1 295 2 325 1 268 1 38 1 
345 2 123 1 347 1 40 2 269 4 101 1 43 1 3 1 24 11 8 1 12 11 189 1 265 4 87 2 76 4 33 1 170 1 192 4 145 4 56 22 173 1 59 1 228 2 295 2 325 1 268 1 38 4 
299 1 327 1 12 3 40 1 269 1 203 1 76 2 192 1 56 6 24 3 295 1 
327 1 345 2 12 2 189 1 40 1 76 2 203 1 89 1 222 1 56 3 305 1 146 1 24 1 8 1 295 1 268 1 325 1 
345 2 327 2 299 1 189 1 12 5 40 3 269 2 203 2 76 5 245 1 192 2 56 10 173 1 24 5 8 1 295 2 325 1 268 1 
345 2 189 1 265 1 76 1 192 1 56 2 173 1 24 2 8 1 295 1 268 1 325 1 
345 2 12 2 189 1 40 1 265 1 269 1 76 2 192 1 145 1 56 4 173 1 24 2 8 1 295 1 38 1 268 1 325 1 
345 6 327 1 12 2 189 3 40 1 203 1 76 2 222 1 56 3 146 1 173 1 24 1 96 1 8 3 295 1 268 3 325 3 
299 1 345 8 327 2 123 1 40 3 269 2 203 2 305 1 24 7 160 1 8 4 12 8 189 4 87 1 76 6 245 1 89 1 222 1 192 2 319 1 56 15 173 1 146 1 96 1 295 3 228 1 325 4 268 4 
299 2 327 2 345 4 123 1 40 4 269 4 203 2 101 1 128 1 3 1 305 1 24 14 8 2 12 10 189 2 265 2 87 1 76 8 245 1 89 1 33 1 170 1 192 5 145 2 56 24 146 1 173 1 59 1 228 1 295 4 325 2 268 2 38 1 
299 1 327 1 345 4 123 1 40 2 347 1 269 1 203 1 128 1 305 1 24 6 8 2 12 5 189 2 265 1 87 1 76 3 89 1 170 1 192 2 145 1 319 1 56 11 173 1 228 2 295 1 325 2 268 2 
299 1 327 1 345 6 123 1 347 1 40 6 269 5 203 1 101 1 43 1 128 1 3 1 305 1 24 14 8 3 12 15 189 3 265 4 87 2 76 8 89 1 33 1 170 1 192 5 145 4 319 1 56 29 146 1 173 1 59 1 228 2 295 2 325 3 268 3 38 4 
299 1 327 1 345 6 123 1 347 1 40 4 269 4 203 1 101 1 43 1 128 1 3 1 305 1 24 15 8 3 12 12 189 3 265 4 87 2 76 7 89 1 33 1 170 1 192 5 145 4 319 1 56 27 146 1 173 1 59 1 228 2 295 3 325 3 268 3 38 3 
299 2 327 2 345 4 123 1 40 4 269 4 203 2 101 1 128 1 3 1 305 1 24 14 8 2 12 10 189 2 265 2 87 1 76 8 245 1 89 1 33 1 170 1 192 5 145 2 56 24 146 1 173 1 59 1 228 1 295 4 325 2 268 2 38 1 
345 2 123 1 347 1 40 3 269 4 101 1 43 1 3 1 24 11 8 1 12 11 189 1 265 4 87 2 76 5 33 1 170 1 192 4 145 4 56 22 173 1 59 1 228 2 295 2 325 1 268 1 38 4 
299 1 327 1 345 8 123 1 347 1 40 5 269 4 203 1 101 1 43 1 128 1 3 1 305 1 24 15 8 4 12 13 189 4 265 4 87 2 76 8 89 1 33 1 170 1 192 5 145 4 319 1 56 28 146 2 173 1 59 1 228 2 295 3 325 4 268 4 38 3 
345 4 123 1 347 1 269 1 43 1 24 6 8 2 12 4 189 2 265 2 87 2 76 1 170 1 192 2 145 2 56 10 173 1 96 1 228 2 295 1 325 2 268 2 38 1 
327 3 299 1 12 4 40 3 269 1 203 3 76 6 89 1 192 1 56 7 305 2 24 3 295 3 
345 4 123 1 347 1 40 1 269 1 43 1 24 6 8 2 12 4 189 2 265 2 87 2 76 2 170 1 192 2 145 2 56 10 173 1 96 1 228 2 295 1 325 2 268 2 38 1 
274 1 105 1 175 1 134 1 82 1 150 1 360 1 
175 1 77 1 206 1 82 1 274 1 105 1 208 1 209 1 257 1 134 1 150 1 360 1 
163 1 114 1 198 1 270 1 26 1 357 1 98 1 246 1 284 1 316 1 34 1 
163 1 264 1 114 1 175 2 191 1 339 1 270 1 331 1 82 1 274 2 105 1 198 1 7 1 357 1 26 1 98 1 284 1 309 1 
163 1 264 2 114 1 20 1 175 2 191 1 339 1 74 1 270 1 331 1 302 1 366 1 82 2 274 2 105 1 197 1 198 1 7 2 26 1 98 3 282 1 284 2 309 1 
175 2 20 1 270 2 331 1 302 1 82 2 274 2 278 1 105 1 7 2 26 2 282 1 284 2 264 2 163 1 114 2 191 1 339 1 74 1 366 1 320 1 197 1 198 1 98 3 
163 1 114 1 288 1 270 1 176 1 171 1 302 1 53 1 197 1 198 1 7 1 159 1 26 1 240 1 98 4 282 1 284 1 
163 1 114 3 152 1 270 3 176 1 171 1 302 1 278 1 355 1 197 1 198 1 7 1 159 2 357 1 26 3 161 1 240 2 98 4 282 1 63 1 284 1 298 1 
163 1 114 1 73 1 198 1 270 1 26 1 
11 1 163 3 114 7 100 1 141 1 73 1 348 1 270 6 31 1 237 1 356 1 147 1 198 2 7 1 133 1 48 1 357 2 26 7 342 1 98 3 284 2 
327 1 80 1 175 2 40 2 269 1 270 1 331 1 82 1 128 1 274 2 7 1 135 1 8 2 283 2 284 1 11 1 189 2 12 3 142 2 191 1 339 1 89 1 192 1 55 1 56 6 198 1 252 1 98 1 345 4 299 1 65 1 203 1 305 1 105 2 24 3 26 1 309 1 264 1 163 1 114 1 76 2 315 1 367 1 227 1 323 1 325 2 268 2 
152 1 349 1 153 1 270 1 68 1 176 1 178 2 355 2 307 1 5 1 109 1 159 3 357 1 26 1 358 1 161 1 240 3 85 1 114 1 266 2 171 1 318 2 172 2 35 1 98 2 63 1 99 1 298 1 
163 1 114 1 73 1 198 1 270 1 26 1 314 1 
163 1 11 1 114 4 270 4 246 1 332 1 316 1 278 1 198 1 357 1 26 4 98 1 284 1 
71 1 163 2 114 2 21 1 348 1 270 2 197 1 147 1 210 1 198 1 7 1 26 2 98 1 284 1 
163 1 129 1 114 1 198 1 258 1 270 1 26 1 357 1 169 1 262 1 
163 1 11 1 114 2 100 1 356 1 198 1 270 2 219 1 26 2 98 1 284 1 
11 1 163 2 114 5 270 4 246 1 332 1 316 1 237 1 197 1 356 1 198 2 133 1 357 1 26 5 98 3 284 2 
11 1 163 2 114 5 270 4 246 1 332 1 316 1 197 1 356 1 198 2 110 1 133 1 357 1 26 5 98 3 284 2 
163 1 264 1 114 1 175 2 191 1 339 1 270 1 331 1 82 1 274 2 320 1 105 1 198 1 7 1 357 1 26 1 98 1 284 1 
163 2 114 1 348 1 270 1 31 1 197 1 147 1 198 1 7 1 26 1 342 1 98 1 284 1 
215 1 175 1 155 1 82 1 2 1 274 1 60 1 338 1 64 1 
256 1 157 1 64 1 
105 1 350 1 2 1 338 1 64 1 
20 1 349 1 74 1 350 2 204 1 104 1 366 1 157 1 2 2 256 1 105 1 159 2 161 1 240 2 63 1 174 1 298 1 64 1 338 2 
121 1 120 1 310 1 34 1 
328 1 121 1 120 1 225 1 14 1 310 1 234 1 
83 1 225 1 131 1 
13 1 328 1 14 3 22 1 165 2 234 1 207 1 291 1 121 1 225 3 120 1 310 1 
328 1 121 1 120 1 225 2 81 1 14 2 117 1 310 1 234 1 
235 1 291 1 328 1 121 1 225 1 79 1 14 1 296 1 234 1 
291 1 328 1 121 1 225 1 14 1 310 1 234 1 
291 1 328 1 120 1 225 1 14 1 310 2 234 1 
328 2 14 2 271 1 234 2 291 1 121 1 225 2 95 1 130 1 310 1 
328 1 14 3 117 2 15 1 234 1 235 1 291 1 4 1 120 1 225 3 121 2 149 1 310 1 
291 1 328 1 217 1 225 1 14 1 258 1 136 1 296 1 234 1 262 1 
328 2 14 4 81 1 117 2 234 2 235 1 291 1 4 1 120 1 225 4 121 2 238 1 310 1 
291 1 328 1 121 1 120 1 225 1 14 1 310 1 234 1 
328 1 165 1 22 1 143 1 14 4 117 2 234 1 207 1 235 1 4 1 120 2 225 4 121 3 310 2 
328 1 66 1 14 2 117 1 234 1 291 1 121 1 225 2 120 1 37 1 359 1 310 1 
328 1 22 1 14 3 165 2 144 1 234 1 207 2 291 1 121 1 225 3 120 1 310 1 
188 1 190 1 121 2 54 2 
291 1 328 1 225 1 14 1 44 1 234 1 
291 1 328 1 121 1 120 1 225 2 14 2 117 1 310 1 15 1 234 1 
313 1 
291 1 328 1 121 1 120 1 225 1 14 1 310 1 234 1 
291 1 328 1 121 1 120 1 225 3 165 1 14 3 117 1 15 1 310 1 234 1 
235 1 4 1 121 1 143 1 
121 1 310 1 

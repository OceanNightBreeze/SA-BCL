#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) (79,187) (79,187) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) (79,187) (79,187) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) (79,187) (79,187) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) (79,187) (79,187) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (77,282) (77,282) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) 238 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (26,358) 238 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (101,164,367) (35,185,283) (35,185,283) (35,185,283) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (101,164,367) (35,185,283) (35,185,283) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (101,164,367) (35,185,283) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (101,164,367) (35,185,283) (35,185,283) (35,185,283) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (101,164,367) (101,164,367) (101,164,367) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (101,164,367) (101,164,367) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (101,164,367) (101,164,367) (101,164,367) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 222 7 20 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (123,257) (123,257) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (123,257) 38 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (123,257) (123,257) 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 100 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6370 | stmt -> ;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2905 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
358 1 92 1 1 1 79 1 194 1 26 1 259 1 60 1 229 1 105 1 260 2 274 2 62 1 174 1 187 1 10 1 
358 1 92 1 1 1 79 1 194 1 26 1 259 1 60 1 229 1 105 1 260 2 274 2 62 1 174 1 187 1 10 1 
358 1 92 1 1 1 79 1 194 1 26 1 259 1 60 1 229 1 105 1 260 2 274 2 62 1 174 1 187 1 10 1 
358 1 92 1 1 1 79 1 194 1 26 1 259 1 60 1 229 1 105 1 260 2 274 2 62 1 174 1 187 1 10 1 
148 1 92 1 1 1 94 3 103 1 212 1 321 1 60 1 105 1 260 4 216 1 274 4 220 2 174 1 252 3 291 1 10 1 90 2 
260 1 274 1 1 1 92 1 194 1 282 1 309 1 229 1 77 1 60 1 
260 1 274 1 1 1 92 1 26 1 60 1 
260 2 274 2 1 1 92 1 238 1 94 1 26 1 126 1 60 1 
260 2 274 2 1 1 92 1 238 1 94 1 26 1 126 1 60 1 
147 1 253 1 41 1 
147 1 267 2 306 1 
270 2 296 2 128 2 287 2 280 1 151 2 36 1 98 2 
348 1 128 2 24 1 150 1 280 1 3 1 214 2 281 1 151 3 61 1 135 1 106 2 219 1 287 3 64 1 29 1 155 1 115 1 296 2 245 1 196 2 15 1 226 2 197 2 268 1 36 1 247 1 122 1 98 2 270 2 230 1 304 1 175 1 204 1 323 1 368 1 207 1 
270 1 169 1 296 1 128 1 287 1 339 1 151 1 36 1 52 1 98 1 
296 1 193 1 179 1 70 1 151 1 84 1 333 1 169 1 147 1 287 1 39 1 250 1 253 1 88 1 
296 1 193 2 128 1 70 1 151 1 84 1 98 1 270 1 169 1 147 1 287 1 39 2 250 1 253 1 88 1 
193 1 202 1 39 1 91 1 234 1 
193 2 147 1 39 2 253 1 264 1 91 1 234 1 189 1 
193 1 39 1 91 1 
296 1 193 1 128 1 339 1 36 1 151 1 98 1 270 1 169 1 39 1 287 1 110 1 234 1 52 1 
147 1 
193 2 147 1 39 2 253 1 91 1 234 1 189 1 44 1 
159 2 102 1 193 5 23 1 32 1 180 1 308 1 152 1 71 1 273 2 147 1 39 5 253 1 65 1 233 2 235 1 234 2 91 2 189 1 
280 1 41 1 
209 1 296 2 128 1 280 2 151 2 98 1 270 1 287 2 136 1 
72 1 361 1 312 1 
24 1 196 1 150 1 161 1 226 1 197 1 15 1 280 1 151 1 247 1 122 1 61 1 287 1 155 1 323 1 207 1 
116 1 296 1 361 1 128 1 24 1 196 1 150 1 15 1 34 1 226 1 197 1 247 1 151 2 122 1 98 1 61 1 287 2 155 1 323 1 207 1 
209 1 116 2 296 5 128 4 34 1 280 1 151 5 120 1 98 4 271 1 270 1 272 1 333 1 287 5 
169 1 296 2 128 2 287 2 151 2 97 1 52 1 98 2 
270 1 116 1 296 3 128 3 287 3 280 1 151 3 98 3 
169 1 296 1 128 1 287 1 151 1 52 1 98 1 
270 1 209 1 169 1 296 1 128 1 287 1 136 1 151 1 98 1 
348 1 209 1 307 1 128 3 24 1 150 1 280 1 3 1 214 2 281 1 151 4 84 1 61 1 106 1 219 1 287 4 64 1 29 1 155 1 88 1 296 3 116 1 193 1 245 1 196 1 15 1 70 1 34 1 226 1 197 1 247 1 36 1 17 1 122 1 98 3 270 2 169 1 230 1 39 1 250 1 304 1 323 1 368 1 207 1 
272 1 333 1 296 2 116 1 128 1 287 2 280 1 151 2 98 1 
209 1 116 2 296 3 193 1 128 3 34 1 70 1 151 3 17 1 84 1 98 3 270 1 169 1 147 1 39 1 287 3 250 1 231 1 88 1 
209 1 116 1 296 2 128 2 361 1 151 2 98 2 270 1 312 1 287 2 
24 1 196 1 150 1 226 1 197 1 15 1 280 1 151 1 247 1 122 1 61 1 287 1 155 1 323 1 207 1 
24 1 196 1 226 1 197 1 15 1 280 1 151 1 122 1 61 1 261 1 201 1 287 1 155 1 323 1 207 1 
348 1 178 1 215 1 214 2 281 1 331 1 133 1 219 2 106 4 312 2 63 1 64 1 221 1 29 1 223 1 361 2 141 1 245 1 363 1 72 2 304 1 204 2 205 1 346 1 
169 1 296 1 128 1 287 1 88 1 151 1 97 1 98 1 
139 1 210 1 
139 1 210 1 
313 1 334 1 
313 1 334 1 
313 1 334 1 
139 1 210 1 173 1 
139 1 210 1 362 1 
139 2 210 2 313 1 334 1 337 1 13 1 
139 1 210 1 173 1 
139 1 210 1 173 1 
139 1 210 1 132 1 
139 1 210 1 132 1 
139 1 210 1 132 1 
53 1 210 1 54 1 128 2 149 1 280 1 151 2 6 1 332 1 354 1 287 2 8 1 265 1 139 1 296 2 193 1 33 1 362 1 98 2 341 1 301 1 39 1 50 1 177 1 
53 2 139 2 210 2 193 2 327 2 163 1 4 1 6 2 301 1 341 3 354 2 154 1 147 1 39 2 277 1 177 2 338 1 13 1 12 1 
105 1 174 1 10 1 
309 1 
309 1 
309 1 
309 1 
128 1 182 1 287 1 91 1 189 1 45 1 296 1 193 5 14 1 339 1 300 1 98 1 147 1 253 1 346 1 52 1 306 2 54 1 56 2 215 1 151 1 308 3 352 2 152 2 221 1 314 1 110 1 159 1 225 1 32 1 267 2 363 1 36 1 270 1 170 1 273 1 169 1 322 2 39 5 233 1 234 4 236 1 
128 1 287 1 91 3 189 1 296 1 193 5 14 1 339 1 300 1 98 1 147 1 202 2 249 2 253 1 346 1 52 1 306 2 54 1 56 2 215 1 151 1 308 3 352 2 152 2 311 1 221 1 314 1 110 1 159 1 225 1 32 1 267 2 363 1 36 1 270 1 170 1 169 1 273 1 39 5 233 1 278 1 234 4 236 1 
54 1 128 1 56 2 215 1 151 1 308 3 352 2 152 2 182 1 287 1 221 1 110 1 65 1 45 1 159 1 296 1 225 1 193 3 14 1 267 2 339 1 363 1 36 1 300 1 98 1 270 1 169 1 170 1 273 1 147 1 322 1 39 3 253 1 233 1 234 2 236 1 52 1 346 1 306 2 
54 1 56 2 215 1 352 2 308 3 152 2 182 1 221 1 65 1 159 1 45 1 225 1 193 2 14 1 267 2 363 1 300 1 170 1 273 1 322 1 39 2 233 1 255 1 236 1 234 1 346 1 306 2 
323 1 41 1 305 1 
323 1 198 1 
213 1 
61 1 15 1 323 1 
323 1 188 1 
15 1 323 1 
61 1 350 1 15 1 323 3 59 1 305 2 
127 1 141 2 130 2 215 1 363 1 144 1 167 1 219 3 106 7 63 3 303 1 27 1 156 1 204 4 51 1 75 1 344 1 
127 1 141 2 130 2 215 1 363 1 144 1 167 1 219 3 106 7 63 3 303 1 27 1 156 1 204 4 51 1 75 1 344 1 
127 1 141 2 130 2 227 1 215 1 363 1 144 1 167 1 219 3 106 7 63 3 303 1 27 1 156 1 204 4 51 1 75 1 344 1 
127 1 348 1 349 1 82 1 130 3 214 2 215 4 7 1 134 1 285 1 219 15 106 31 63 10 27 1 64 1 221 3 29 1 156 5 222 3 266 1 141 5 245 1 47 4 195 1 363 4 144 1 300 3 167 1 303 2 204 16 51 2 75 2 344 2 346 3 
348 2 127 1 326 1 130 2 215 1 214 4 217 1 106 9 219 4 63 4 64 2 27 1 29 2 156 1 141 3 245 2 195 1 363 1 167 1 303 1 204 5 75 1 51 1 344 1 
0 1 92 1 1 1 194 1 196 1 68 1 226 1 197 1 309 1 364 1 35 1 122 1 283 1 60 1 86 1 260 1 274 1 172 1 155 1 185 1 290 1 101 1 
0 1 92 1 1 1 194 1 31 1 94 1 196 1 68 1 226 1 197 1 256 1 309 1 364 1 122 1 283 1 86 1 260 2 274 2 172 1 155 1 185 1 101 1 43 1 
194 1 94 1 196 1 68 1 226 1 197 1 256 1 309 1 364 1 122 1 86 1 260 1 274 1 172 1 155 1 185 1 101 1 43 1 
92 1 1 1 360 1 93 1 194 2 31 1 83 1 68 2 196 1 15 1 226 1 197 1 166 1 122 1 86 2 260 1 274 1 263 1 172 2 155 1 336 1 323 1 207 1 
0 1 92 1 1 1 194 1 196 1 68 1 226 1 197 1 309 1 364 1 35 1 122 1 283 1 60 1 86 1 260 1 274 1 172 1 155 1 185 1 101 1 43 1 
345 1 
179 1 330 1 84 1 87 4 333 1 287 1 336 1 88 1 11 2 91 6 137 1 189 3 190 1 244 1 296 1 46 1 193 5 196 2 15 1 197 2 18 2 147 2 250 1 342 1 253 1 207 2 306 2 351 2 308 2 151 1 58 2 152 2 263 1 107 1 155 1 158 2 159 1 319 1 32 1 267 2 226 2 70 1 320 1 269 2 365 1 122 1 273 1 169 1 39 5 125 2 323 1 233 1 236 1 176 1 369 1 
244 1 296 1 193 3 179 1 70 1 151 1 330 1 84 1 87 2 169 1 333 1 39 3 287 1 342 1 250 1 125 1 88 1 91 2 137 1 189 1 44 1 369 1 
179 1 351 1 151 1 330 1 84 1 87 3 333 1 287 1 88 1 91 1 137 1 44 1 189 1 244 1 296 1 193 3 70 1 169 1 147 1 39 3 250 1 342 1 253 1 369 1 
179 1 351 1 151 1 330 1 84 1 87 3 333 1 287 1 88 1 137 1 91 2 189 1 44 1 244 1 296 1 193 3 70 1 18 1 169 1 147 1 39 3 250 1 342 1 125 1 253 1 369 1 
179 1 330 1 84 1 87 6 333 1 287 1 88 1 91 7 137 1 11 2 44 1 189 3 190 1 244 1 140 1 296 1 193 5 46 1 18 4 147 5 342 1 250 1 251 1 253 5 306 2 351 4 151 1 308 1 152 1 58 2 28 1 67 1 159 1 158 2 32 1 70 1 269 2 169 1 273 1 39 5 125 4 74 1 233 1 369 1 
179 1 330 1 84 1 87 4 333 1 287 1 88 1 137 1 11 2 91 4 190 1 189 2 244 1 296 1 193 4 46 1 18 2 147 2 342 1 250 1 253 1 306 2 351 2 151 1 308 1 152 1 58 2 159 1 158 2 32 1 267 2 70 1 320 1 269 2 169 1 273 1 39 4 125 2 233 1 369 1 
351 2 179 1 308 1 151 1 58 2 152 1 330 1 84 1 87 4 333 1 287 1 28 1 88 1 91 4 11 2 137 1 189 2 190 1 158 2 159 1 244 1 140 1 296 1 46 1 193 4 32 1 70 1 269 2 18 2 169 1 273 1 147 1 39 4 250 1 342 1 125 2 253 1 74 1 233 1 306 2 369 1 
351 2 179 1 308 1 151 1 58 2 152 1 330 1 84 1 87 4 333 1 287 1 28 1 88 1 91 4 11 2 137 1 189 2 190 1 158 2 159 1 244 1 140 1 296 1 46 1 193 4 32 1 70 1 269 2 18 2 169 1 273 1 147 1 39 4 250 1 342 1 125 2 253 1 74 1 233 1 306 2 369 1 
22 1 351 2 179 1 308 1 151 1 58 2 152 1 330 1 84 1 87 4 183 2 333 1 287 1 28 1 88 1 91 4 137 1 189 2 159 1 295 1 244 1 296 1 46 1 193 4 32 1 267 2 70 1 119 2 269 2 18 2 169 1 273 1 147 1 39 4 250 1 342 1 73 1 125 2 253 1 233 1 369 1 
128 1 179 1 351 1 151 2 330 1 84 1 87 3 333 1 287 2 110 1 88 1 137 1 91 1 244 1 296 2 193 2 70 1 339 1 36 1 98 1 270 1 18 1 169 2 147 1 39 2 250 1 342 1 125 1 251 1 253 1 52 1 369 1 
128 1 179 1 351 1 151 2 330 1 84 1 87 3 333 1 287 2 110 1 88 1 137 1 91 1 244 1 296 2 193 2 70 1 339 1 36 1 98 1 270 1 18 1 169 2 147 1 39 2 250 1 342 1 125 1 251 1 253 1 52 1 369 1 
351 2 179 1 308 1 151 1 58 2 152 1 330 1 84 1 87 4 183 2 333 1 287 1 88 1 91 4 137 1 189 2 159 1 244 1 295 1 296 1 46 1 193 4 32 1 267 2 70 1 320 1 119 2 269 2 18 2 273 1 169 1 147 1 39 4 250 1 342 1 125 2 253 1 233 1 369 1 
348 1 127 1 130 1 214 2 215 1 280 2 281 1 41 1 331 1 106 6 219 3 312 1 63 2 27 1 64 1 29 1 361 1 141 2 245 1 363 1 167 1 72 1 303 1 304 1 204 3 51 1 
348 2 82 1 280 1 3 1 214 4 215 1 281 2 7 1 135 1 219 6 106 14 63 2 312 4 64 2 221 2 29 2 156 1 289 1 222 3 191 1 141 1 361 11 245 2 47 3 142 1 363 2 300 2 72 11 304 1 203 1 204 8 40 1 346 1 
348 1 128 1 24 1 150 1 280 1 214 2 3 1 281 1 151 2 353 1 61 1 219 1 106 2 355 1 135 1 312 1 287 2 64 1 155 1 29 1 191 1 296 1 116 1 245 1 196 1 15 1 197 1 226 1 161 1 34 1 247 1 122 1 98 1 366 1 304 1 323 1 204 1 207 1 
127 1 128 1 130 1 131 2 280 2 3 1 281 3 135 1 241 1 287 3 43 1 191 1 294 2 296 1 141 4 245 3 196 3 197 3 15 2 247 2 300 2 98 1 145 1 303 1 304 3 204 10 51 1 207 1 346 2 348 3 24 2 150 2 215 3 214 6 151 3 310 2 61 2 219 10 106 20 312 7 63 8 27 1 64 3 221 2 29 3 155 2 156 4 116 1 361 7 226 3 34 1 363 3 122 2 167 1 72 7 323 2 368 2 279 1 76 2 
348 2 128 1 239 1 214 4 3 1 329 1 151 1 281 2 331 1 135 1 106 2 219 1 263 1 287 1 64 2 155 2 29 2 336 1 290 1 43 1 66 1 296 1 116 1 245 2 196 8 49 1 197 8 226 7 15 2 162 1 268 2 122 2 98 1 275 1 304 2 323 3 204 1 207 2 208 1 
270 1 209 1 296 1 128 1 287 1 129 1 151 1 98 1 
348 1 361 1 245 1 214 2 363 1 281 1 331 1 72 1 106 2 63 1 312 1 64 1 221 1 304 1 29 1 156 1 204 2 223 1 
348 1 178 1 141 1 361 1 245 1 214 2 215 1 281 1 331 1 72 1 106 2 219 2 63 1 312 1 64 1 304 1 29 1 346 1 
348 1 141 1 361 2 245 1 215 1 214 2 363 1 281 1 300 1 331 1 219 2 72 2 106 4 63 2 312 2 64 1 221 1 304 1 29 1 156 1 204 2 346 1 
348 1 361 1 245 1 214 2 363 1 281 1 72 1 106 2 275 1 63 1 312 1 64 1 221 1 304 1 29 1 156 1 204 2 223 1 
348 1 178 1 141 1 361 1 245 1 214 2 215 1 281 1 72 1 106 2 275 1 219 2 63 1 312 1 64 1 304 1 29 1 346 1 
348 1 141 1 361 2 245 1 215 1 214 2 363 1 281 1 300 1 219 2 72 2 106 4 275 1 63 2 312 2 64 1 221 1 304 1 29 1 156 1 204 2 346 1 
348 1 141 1 361 2 245 1 215 1 214 2 363 1 281 1 300 1 219 2 72 2 106 4 63 2 312 2 64 1 221 1 304 1 29 1 156 1 204 2 346 1 
348 1 24 1 150 1 280 1 214 2 3 1 151 1 281 1 61 1 135 1 106 2 219 1 287 1 64 1 155 1 29 1 245 1 196 1 15 1 197 1 226 1 247 1 122 1 304 1 204 1 323 1 368 1 207 1 
348 1 81 1 24 1 280 1 214 2 3 1 151 1 281 1 61 1 261 1 135 1 106 2 219 1 287 1 64 1 155 1 29 1 245 1 196 1 15 1 197 1 226 1 122 1 201 1 304 1 204 1 323 1 207 1 
348 1 141 1 361 2 245 1 215 1 214 2 363 1 281 1 300 1 219 2 72 2 106 4 63 2 312 2 64 1 221 1 304 1 29 1 156 1 204 2 346 1 191 1 
348 1 24 1 150 1 131 1 215 1 214 2 151 1 281 1 61 1 219 2 106 4 63 2 312 2 287 1 221 1 64 1 155 1 29 1 156 1 290 1 141 1 361 2 245 1 196 1 197 1 226 1 15 1 363 1 247 1 122 1 300 1 72 2 304 1 204 2 323 1 368 1 346 1 
209 1 348 1 128 1 215 1 214 2 281 1 151 1 219 1 106 3 63 1 287 1 312 1 64 1 221 1 29 1 156 1 191 1 296 1 361 1 245 1 363 1 300 1 98 1 270 1 302 1 72 1 304 1 204 2 346 1 
348 2 326 1 82 1 214 4 215 3 7 1 284 1 219 10 106 19 286 1 63 6 64 2 221 3 29 2 156 3 186 1 222 1 297 1 141 3 318 2 245 2 47 2 363 3 96 2 300 3 228 1 204 9 343 1 346 3 347 1 
348 1 326 1 215 1 214 2 7 2 284 1 219 8 106 16 286 2 64 1 221 1 29 1 186 1 222 2 318 1 245 1 47 2 363 1 246 1 96 4 300 1 228 2 204 8 20 1 346 1 347 1 
348 2 326 1 82 1 214 4 215 2 7 3 284 1 219 12 106 23 286 1 63 3 64 2 221 2 29 2 156 2 186 1 222 3 297 1 141 1 318 1 245 2 47 4 69 1 363 2 246 1 96 4 300 2 228 2 204 11 20 1 346 2 347 1 
348 2 326 1 82 1 214 4 215 2 7 3 284 1 219 12 106 23 286 1 63 4 64 2 221 2 29 2 156 2 186 1 222 3 297 1 141 2 318 1 245 2 47 4 69 1 363 2 246 1 96 4 300 2 228 2 204 11 20 1 346 2 347 1 
127 3 348 1 326 1 82 2 130 3 214 2 215 8 7 2 284 1 219 24 106 51 286 1 63 13 27 3 64 1 221 5 29 1 156 5 289 2 186 1 222 4 141 8 318 1 245 1 47 4 363 8 246 1 96 4 300 5 167 3 228 1 303 3 204 27 20 1 51 3 346 5 347 1 
139 1 53 1 354 1 210 1 108 1 277 1 177 1 6 1 338 1 13 1 
33 1 362 1 
139 1 53 1 354 1 210 1 335 1 121 1 177 1 206 1 6 1 
146 1 173 1 
262 1 337 1 132 1 
53 1 139 1 210 1 193 1 327 1 163 1 4 1 6 1 301 1 341 2 354 1 147 1 39 1 277 1 177 1 338 1 13 1 12 1 
53 1 139 1 210 1 193 1 327 1 163 1 4 1 6 1 301 1 341 2 354 1 147 1 39 1 277 1 177 1 338 1 13 1 12 1 
53 1 139 1 210 1 193 1 327 1 163 1 4 1 6 1 301 1 341 2 354 1 147 1 39 1 277 1 177 1 338 1 13 1 12 1 
146 1 173 1 337 1 
146 1 173 1 337 1 
262 1 132 1 
262 1 337 1 132 1 
332 1 265 1 
53 1 210 1 54 1 149 1 128 2 327 1 280 1 151 2 6 1 332 1 354 1 287 2 8 1 265 1 12 1 138 1 139 1 296 2 193 1 33 1 362 1 341 1 98 2 39 1 50 1 234 1 177 1 
348 1 55 1 214 2 3 1 329 1 281 1 151 2 135 1 106 2 219 1 287 2 64 1 155 1 29 1 191 1 224 1 296 2 245 1 196 2 15 1 197 2 226 2 268 2 122 1 19 1 124 1 232 1 304 1 323 1 204 1 208 1 
0 1 196 2 68 1 226 2 197 2 309 1 164 1 364 1 122 1 155 1 367 1 111 1 290 1 101 1 43 1 
0 1 196 1 68 1 226 1 197 1 309 1 364 1 122 1 155 1 367 1 316 1 101 1 43 1 
196 1 68 1 15 1 226 1 197 1 166 1 122 1 263 1 155 1 336 1 323 1 111 1 207 1 357 1 
0 1 196 1 68 1 226 1 197 1 309 1 164 1 364 1 122 1 155 1 367 1 111 1 101 1 43 1 
114 1 
71 1 147 1 253 1 308 1 152 1 41 1 235 1 
308 1 152 1 11 1 91 1 190 1 189 1 159 1 158 1 193 1 32 1 267 1 273 1 147 2 39 1 253 1 233 1 306 1 
56 2 352 2 308 2 152 3 59 1 61 1 218 1 221 1 155 1 288 1 113 1 112 1 91 2 356 1 189 1 159 2 193 2 32 2 196 1 197 1 226 1 15 1 16 1 363 1 198 2 300 1 122 2 273 2 39 2 99 1 250 1 323 4 233 2 236 1 76 1 207 1 305 1 
159 1 273 1 56 1 32 1 47 1 222 1 20 1 352 1 308 1 233 1 152 1 7 1 
128 1 215 1 308 2 151 1 152 1 287 1 110 1 159 1 225 1 296 1 117 1 193 1 32 1 363 1 339 1 36 1 98 1 270 1 169 1 170 2 273 1 39 1 303 1 74 1 51 1 233 1 52 1 
159 1 32 1 308 1 152 1 71 1 273 1 147 1 253 1 233 1 235 1 
56 1 221 1 363 1 352 1 152 2 300 1 
193 1 147 1 39 1 253 1 91 1 189 1 
57 1 308 2 152 2 107 2 263 1 242 2 155 1 9 1 336 1 65 1 91 4 189 2 359 1 159 2 193 3 319 1 32 1 196 4 15 1 197 4 226 4 122 1 365 1 273 2 39 3 323 1 233 2 236 2 207 2 
348 1 128 2 24 1 150 1 280 1 3 1 214 2 151 3 281 1 61 1 106 1 219 1 287 3 64 1 155 1 29 1 296 2 245 1 196 1 197 1 226 1 15 1 36 1 247 1 122 1 98 2 270 2 230 1 304 1 323 1 368 1 207 1 
159 1 32 1 352 1 308 1 152 1 273 1 147 1 107 1 253 1 233 1 236 1 
354 1 109 1 177 1 
354 1 276 1 265 1 177 1 338 1 
354 1 109 1 177 1 
354 1 109 1 177 1 
354 1 171 1 177 1 
354 1 171 1 177 1 
354 1 171 1 177 1 
354 1 177 1 
139 1 210 1 
127 1 348 2 141 2 245 2 130 1 195 1 215 1 363 1 214 4 167 1 219 4 106 8 63 3 64 2 27 1 303 1 29 2 204 4 156 1 51 1 
127 1 141 2 130 1 363 1 215 1 41 1 167 1 219 3 106 6 63 2 27 1 303 1 204 3 51 1 
348 1 141 1 245 1 328 1 215 1 214 2 363 1 300 1 219 2 106 4 63 2 64 1 221 1 29 1 204 2 156 1 346 1 
141 1 82 1 47 2 215 1 363 1 7 1 300 1 219 4 106 7 63 2 221 1 204 3 156 1 222 1 346 1 
127 1 348 2 82 1 130 1 215 3 214 4 106 23 219 12 63 9 27 1 221 2 64 2 184 1 29 2 156 4 222 2 289 1 141 5 245 2 47 2 195 2 363 3 300 2 167 1 303 2 203 1 204 11 51 2 346 2 
106 1 219 1 47 1 
106 1 204 1 222 1 
348 1 141 2 245 1 328 1 214 2 363 1 215 1 300 1 219 3 106 6 63 3 64 1 221 1 29 1 204 3 156 1 76 1 346 1 
348 1 326 1 245 1 47 1 214 2 7 1 219 1 106 2 64 1 29 1 204 1 20 1 222 1 
127 1 141 1 363 1 215 1 106 6 219 3 63 2 303 1 204 3 156 1 51 1 
348 1 141 1 245 1 195 1 214 2 167 1 219 2 106 3 63 2 303 1 184 1 64 1 27 1 29 1 204 1 156 1 51 1 
348 1 326 1 117 1 141 2 245 1 214 2 215 1 363 1 106 6 219 3 63 4 64 1 303 1 29 1 156 2 204 3 51 1 
348 1 326 1 245 1 214 2 363 1 106 2 63 1 64 1 221 1 29 1 204 2 156 1 
348 1 326 1 141 1 245 1 215 1 214 2 363 1 300 1 219 2 106 4 63 2 64 1 221 1 29 1 204 2 156 1 346 1 
348 3 326 1 297 1 141 1 245 3 195 1 214 6 219 2 106 3 63 2 184 1 64 3 303 1 29 3 156 1 204 1 51 1 
127 2 348 5 326 1 82 1 130 1 328 1 214 10 215 5 7 1 285 1 134 1 219 18 106 34 63 12 27 1 184 1 64 5 221 3 29 5 156 5 222 3 266 1 297 1 141 7 245 5 195 2 47 4 363 5 300 3 167 1 303 3 204 16 51 3 346 3 
127 1 348 2 326 1 130 1 214 4 215 3 5 1 7 1 106 20 219 8 63 9 27 1 64 2 221 2 29 2 156 4 222 1 157 1 117 1 141 5 245 2 195 1 47 1 363 4 199 1 300 2 167 1 303 2 204 12 20 1 51 2 325 1 346 1 
127 1 348 3 326 1 82 1 130 1 328 1 214 6 215 2 5 1 7 1 106 20 219 8 63 5 27 1 64 3 221 3 29 3 156 2 222 1 157 1 141 3 245 3 195 1 47 2 363 4 199 1 300 3 167 1 303 1 204 12 20 1 51 1 325 1 346 1 
127 1 348 2 326 1 130 1 328 1 215 2 214 4 7 1 106 11 219 5 63 4 64 2 27 1 29 2 156 1 222 1 117 1 141 3 245 2 47 1 363 2 167 1 303 2 204 6 20 1 51 2 
127 1 348 2 326 1 130 1 328 1 215 2 214 4 7 1 106 11 219 5 63 7 64 2 27 1 29 2 156 3 222 1 117 1 141 4 245 2 47 1 363 2 167 1 303 2 204 6 20 1 51 2 
127 1 348 2 326 1 130 1 214 4 215 3 5 1 7 1 106 20 219 8 63 9 27 1 64 2 221 2 29 2 156 4 222 1 157 1 117 1 141 5 245 2 195 1 47 1 363 4 199 1 300 2 167 1 303 2 204 12 20 1 51 2 325 1 346 1 
348 1 326 1 245 1 47 1 214 2 7 1 219 1 106 2 64 1 29 1 204 1 20 1 222 1 
348 2 326 1 245 2 47 1 328 1 214 4 7 1 219 1 106 2 64 2 29 2 204 1 222 1 20 1 
348 2 326 1 297 1 245 2 47 1 214 4 7 1 219 1 106 2 64 2 29 2 204 1 222 1 20 1 
127 1 141 3 215 1 363 1 167 2 219 4 106 7 63 6 27 1 303 3 156 3 204 3 51 3 
348 2 326 1 297 1 245 2 47 1 214 4 7 1 219 1 106 2 64 2 29 2 204 1 222 1 20 1 
272 1 296 1 333 1 287 1 243 1 280 1 151 1 
192 1 2 1 143 1 292 1 104 1 
263 1 155 1 196 1 15 1 336 1 197 1 226 1 323 1 41 1 122 1 207 1 
116 1 296 1 128 1 24 1 196 1 15 1 226 1 197 1 280 1 151 2 247 1 122 1 98 1 61 1 287 2 155 1 323 1 207 1 
116 1 296 2 128 1 24 1 196 1 15 2 226 1 197 1 280 1 151 2 247 1 258 1 84 1 122 1 98 2 61 2 169 1 287 2 242 1 155 1 323 3 88 1 188 1 
237 1 116 1 296 2 128 1 24 1 196 2 15 2 226 2 197 2 280 1 151 2 258 1 84 1 122 1 98 2 61 2 169 1 201 1 287 2 242 1 155 1 323 3 88 1 188 1 
237 1 193 2 196 3 15 1 226 3 197 3 198 1 258 1 122 1 61 1 147 1 39 2 242 1 250 1 155 1 253 1 323 4 315 1 188 1 91 1 207 1 293 1 305 1 
237 1 193 2 196 3 15 1 226 3 197 3 198 1 258 1 122 1 61 1 147 1 39 2 242 1 99 1 250 1 155 1 253 1 323 4 188 1 91 1 207 1 305 1 
155 1 196 1 197 1 226 1 239 1 122 1 
61 1 123 1 155 1 196 1 15 1 197 1 226 1 323 1 257 1 59 1 122 1 207 1 
127 1 128 1 131 1 130 1 280 2 281 2 287 2 290 1 191 1 296 1 141 2 245 2 196 1 197 1 15 1 247 1 98 1 303 1 304 2 204 3 51 1 348 2 55 1 24 1 150 1 214 4 215 1 151 2 310 1 61 1 106 6 219 3 312 1 63 2 64 2 27 1 29 2 155 1 116 1 361 1 226 1 363 1 122 1 167 1 72 1 323 1 368 1 
308 1 152 1 218 1 9 1 112 1 113 1 91 2 189 1 159 2 193 3 32 2 196 1 226 1 197 1 198 1 71 1 273 2 147 1 39 3 99 1 250 1 253 1 323 2 233 2 235 1 234 1 207 1 305 1 
61 1 155 1 196 2 15 1 288 1 197 2 226 2 239 1 323 2 290 1 59 1 122 2 305 1 
237 1 196 4 226 4 197 4 15 1 181 1 122 1 263 1 155 1 336 1 323 1 290 1 207 1 
61 1 123 1 38 1 155 1 196 1 15 1 197 1 226 1 323 1 21 1 122 1 279 1 
155 1 196 1 197 1 226 1 309 1 364 1 122 1 207 1 
124 1 155 1 196 2 15 1 197 2 226 2 323 1 290 1 329 1 122 1 43 1 
196 5 226 4 197 5 49 1 15 2 162 1 329 1 181 1 122 2 263 1 242 1 155 2 336 1 323 3 290 1 207 1 
196 5 226 4 197 5 15 2 162 1 329 1 181 1 37 1 122 2 263 1 242 1 155 2 336 1 323 3 290 1 207 1 
116 1 296 1 128 1 24 1 196 1 15 1 226 1 197 1 280 1 151 2 122 1 98 1 61 1 201 1 287 2 155 1 323 1 207 1 
61 1 123 1 242 1 155 1 196 1 15 1 197 1 226 1 323 1 257 1 59 1 122 1 
80 1 211 1 280 1 42 1 248 1 
193 2 80 2 211 1 48 1 70 1 280 1 17 1 84 1 240 1 248 2 168 1 169 1 147 1 39 2 250 1 253 1 88 1 42 2 234 1 
224 1 296 1 80 1 211 1 151 1 19 1 287 1 232 1 42 1 
211 1 48 1 168 1 
148 1 252 1 291 1 41 1 
148 1 260 1 274 1 1 1 92 1 252 1 291 1 
86 1 274 1 194 1 
148 1 92 1 1 1 200 1 60 1 153 1 260 3 274 3 62 2 252 1 324 1 291 1 
148 1 260 2 274 2 1 1 92 1 94 1 252 1 291 1 90 1 
92 1 1 1 103 1 60 1 105 1 260 1 274 1 220 1 174 1 252 1 10 1 
148 1 260 1 274 1 1 1 92 1 252 1 60 1 
148 2 260 1 274 1 1 1 92 1 291 1 60 1 
148 1 78 1 92 2 1 2 118 1 60 1 260 2 274 2 30 1 252 1 
148 1 92 1 1 1 94 2 321 1 60 1 85 1 260 3 274 3 220 1 252 2 254 1 291 1 
260 1 274 1 1 1 92 1 100 1 309 1 60 1 
148 1 92 2 1 2 94 2 212 1 321 1 60 1 260 4 274 4 220 1 252 2 291 1 90 1 
148 1 260 1 274 1 1 1 92 1 252 1 291 1 60 1 
148 2 92 1 1 1 94 2 321 1 153 1 260 4 274 4 62 1 220 1 324 1 252 3 89 1 291 2 
148 1 260 2 274 2 1 1 92 1 94 1 25 1 252 1 298 1 291 1 126 1 60 1 
148 1 92 1 1 1 340 1 60 1 153 2 260 3 274 3 62 2 324 1 252 1 291 1 
160 1 252 2 95 2 299 1 
260 1 274 1 1 1 92 1 165 1 60 1 
148 1 260 2 274 2 1 1 92 1 94 1 252 1 254 1 291 1 60 1 
317 1 
148 1 260 1 274 1 1 1 92 1 252 1 291 1 60 1 
148 1 260 3 274 3 1 1 92 1 62 1 94 1 252 1 254 1 291 1 60 1 
220 1 252 1 89 1 321 1 
148 1 252 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 324 13 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 324 13 144 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (143,219) 361 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (143,219) 361 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (143,219) 38 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (143,219) 38 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 55 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 58 (86,319) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (86,319) 188 16 (240,315) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
313 2 288 1 103 1 27 9 291 2 2 1 225 1 339 1 316 1 169 6 196 1 228 1 85 2 344 5 33 1 9 2 111 2 14 1 113 2 241 1 328 1 116 9 209 1 354 2 281 1 99 3 182 4 285 1 
313 2 288 1 103 1 27 9 291 2 2 1 225 1 339 1 316 1 169 6 196 1 228 1 85 2 344 5 33 1 9 2 111 2 14 1 113 2 241 1 328 1 116 9 209 1 354 2 281 1 99 3 182 4 285 1 
313 2 288 1 103 1 27 10 291 2 2 1 225 1 339 1 316 1 169 7 196 1 228 1 85 2 344 6 33 1 9 2 111 2 14 1 113 2 241 1 328 1 116 10 209 1 354 2 281 1 99 4 182 5 285 1 
313 2 288 1 103 1 27 7 291 2 2 1 225 1 339 1 316 1 169 4 196 1 228 1 85 2 344 4 9 1 111 2 14 1 113 2 241 1 328 1 116 7 209 1 354 2 281 1 99 2 182 3 285 1 
288 1 313 1 27 4 113 1 241 1 291 1 328 1 116 4 209 1 2 1 169 3 354 1 85 1 344 3 33 1 99 1 182 2 9 2 
288 1 313 1 111 1 103 1 27 2 113 1 241 1 291 1 328 1 339 1 116 2 137 1 54 1 344 1 85 1 147 1 
288 1 313 2 111 1 27 3 241 1 291 2 328 1 116 3 169 1 344 2 99 1 182 1 285 1 
246 1 313 2 288 1 27 9 291 2 316 1 2 1 169 7 196 1 344 5 85 1 254 1 33 1 9 2 111 1 113 1 241 1 328 1 116 9 209 1 354 1 99 3 182 4 285 1 
246 1 313 2 288 1 27 9 291 2 316 1 2 1 169 7 196 1 344 5 85 1 254 1 33 1 9 2 111 1 113 1 241 1 328 1 116 9 209 1 354 1 99 3 182 4 285 1 
73 1 363 1 338 1 
80 1 338 1 250 2 
230 1 6 1 224 2 21 2 329 2 333 2 194 2 126 2 
102 1 79 1 164 1 26 1 192 1 290 2 168 1 224 2 341 1 194 3 126 3 29 1 269 1 31 1 230 1 128 1 255 1 86 1 6 1 172 1 200 1 7 1 367 2 8 1 151 1 349 1 152 1 155 1 178 1 329 2 211 1 284 2 263 2 101 1 21 2 333 2 190 2 
287 1 230 1 253 1 310 1 224 1 21 1 329 1 333 1 194 1 126 1 
287 1 363 1 305 1 338 1 156 1 126 1 194 1 227 1 173 1 21 1 321 1 108 1 89 1 202 1 
287 1 363 1 224 1 338 1 156 2 329 1 126 1 194 1 227 1 21 1 321 1 108 1 202 2 89 1 333 1 
167 1 75 1 350 1 202 1 156 1 
287 1 167 1 363 1 224 1 280 1 353 1 338 1 156 2 329 1 194 1 126 1 230 1 253 1 310 1 75 1 21 1 202 2 333 1 286 1 
75 1 202 1 156 1 
287 1 167 1 224 1 156 1 329 1 126 1 194 1 230 1 253 1 310 1 21 1 202 1 333 1 286 1 
338 1 
348 1 167 1 75 1 363 1 353 1 338 1 202 2 156 2 
0 1 301 2 167 2 112 1 337 1 363 1 353 1 338 1 249 2 156 5 96 1 212 1 158 1 271 1 75 2 217 1 202 5 24 1 334 2 
73 1 6 1 
130 1 287 1 224 1 329 1 126 2 194 2 366 1 6 1 21 2 368 1 333 1 
18 1 148 1 359 1 
79 1 152 1 290 1 168 1 178 1 211 1 194 1 126 1 269 1 86 1 6 1 284 1 200 1 7 1 184 1 367 1 
330 1 6 1 224 3 21 3 333 1 329 3 194 3 126 3 
287 1 253 1 224 1 21 1 329 1 194 1 126 1 
130 1 287 1 224 1 329 1 126 1 194 1 368 1 21 1 333 1 
43 1 102 1 287 2 290 1 194 4 255 1 6 1 7 1 200 1 108 1 8 1 202 1 151 1 349 1 152 1 155 1 156 1 211 1 263 1 21 3 120 1 79 1 168 1 224 3 126 4 29 1 269 1 227 1 230 1 31 1 128 1 86 1 366 1 172 1 367 1 368 1 321 1 89 1 174 1 178 1 329 3 330 1 284 1 333 2 190 2 
287 1 362 1 224 1 305 1 329 1 126 2 194 2 330 1 366 1 6 1 21 2 
43 1 287 1 224 3 338 1 156 1 329 3 126 3 194 3 227 1 330 2 368 1 21 3 321 1 108 1 322 1 120 1 202 1 89 1 333 1 
224 2 329 2 126 2 194 2 18 1 330 1 368 1 21 2 333 1 359 1 
79 1 152 1 290 1 168 1 178 1 211 1 194 1 126 1 269 1 86 1 6 1 284 1 7 1 200 1 367 1 
79 1 152 1 290 1 168 1 178 1 211 1 194 1 126 1 318 1 269 1 6 1 284 1 119 1 200 1 367 1 
102 1 335 1 289 1 341 2 267 1 193 1 105 1 364 1 31 1 255 2 172 1 345 1 148 2 8 1 236 1 149 1 205 1 151 1 239 1 349 1 18 2 263 4 359 2 190 2 
287 1 224 1 329 1 126 1 194 1 100 1 21 1 89 1 
79 1 43 1 152 1 290 1 168 1 224 1 178 1 211 1 329 1 126 2 194 2 269 1 86 1 330 1 284 1 200 1 7 1 21 1 367 1 359 1 
43 1 287 1 224 4 329 4 126 4 194 4 56 1 330 2 366 1 6 1 21 4 368 1 333 1 298 1 
287 1 253 1 224 1 21 1 329 1 194 1 126 1 
347 1 110 1 
347 1 110 1 
136 1 296 1 
136 1 296 1 
136 1 296 1 
347 1 71 1 110 1 
222 1 143 1 136 1 347 2 296 1 110 2 
243 1 347 1 110 1 
243 1 347 1 110 1 
243 1 347 1 110 1 
145 1 347 1 110 1 
145 1 347 1 110 1 
145 1 347 1 110 1 
325 2 326 2 277 2 12 1 49 2 304 1 39 1 338 1 156 2 317 1 146 2 268 3 59 1 244 1 199 1 347 2 202 2 219 1 110 2 
49 1 224 2 125 1 126 2 194 2 268 1 6 1 347 1 202 1 110 1 276 1 277 1 326 1 325 1 327 1 95 1 156 1 329 2 71 1 261 1 244 1 142 1 21 2 78 1 
85 1 113 1 354 1 
85 1 113 1 54 1 
159 1 154 1 113 3 141 1 354 2 54 1 
159 1 113 2 141 1 358 1 354 1 54 1 
159 1 113 2 141 2 354 1 54 1 
80 1 289 1 0 1 167 4 363 1 250 3 249 1 338 2 266 2 125 1 364 1 272 1 345 1 346 1 202 5 239 1 131 1 301 1 257 1 94 1 133 1 353 1 95 1 156 5 96 2 162 2 75 1 262 1 142 1 163 2 217 3 334 1 
197 1 167 1 202 1 156 1 
80 2 289 1 167 2 337 1 363 1 338 3 249 1 250 4 125 1 266 2 364 1 345 1 346 1 202 3 239 1 131 1 301 1 94 1 133 1 156 3 96 2 162 2 262 1 217 3 163 1 334 1 
80 3 289 2 167 3 337 1 363 1 338 4 250 7 249 1 266 4 125 2 292 1 364 2 231 1 345 2 346 2 202 4 239 2 278 1 301 1 131 1 94 1 133 1 156 4 96 4 162 4 262 1 217 5 163 2 334 1 
73 1 258 1 200 1 
46 1 200 1 
81 1 
152 1 200 1 
79 1 308 1 152 1 118 1 258 2 200 3 
79 1 152 1 200 1 
200 1 180 1 
239 1 312 1 221 1 104 1 267 2 341 4 105 3 127 1 70 1 260 2 364 1 343 1 255 3 201 1 263 7 297 1 376 1 
239 1 312 1 221 1 104 1 267 2 341 4 105 3 127 1 70 1 260 2 364 1 343 1 255 3 201 1 263 7 297 1 376 1 
239 1 312 1 336 1 221 1 104 1 267 2 341 4 105 3 127 1 70 1 260 2 364 1 343 1 255 3 201 1 263 7 297 1 376 1 
312 1 221 1 289 3 104 1 124 1 340 1 341 16 267 5 127 2 105 10 226 4 364 4 343 2 31 1 255 15 345 3 201 5 346 3 8 1 297 1 88 1 151 1 239 4 349 1 11 1 153 1 64 3 70 2 260 3 263 31 185 1 22 1 376 2 190 2 
312 1 104 1 248 1 340 1 341 5 267 3 105 4 127 1 364 1 343 1 31 2 255 4 34 1 201 1 8 2 297 1 151 2 239 1 349 2 70 1 260 2 263 9 376 1 190 4 
25 1 122 1 313 1 288 1 27 2 290 1 265 1 1 1 291 1 169 1 54 1 269 1 344 1 85 1 367 1 111 1 256 1 154 1 113 2 241 1 114 1 135 1 328 1 116 2 354 1 211 1 69 1 356 1 284 1 311 1 
25 1 122 1 313 1 27 3 290 1 265 1 1 1 291 1 169 2 54 1 269 1 344 1 85 1 367 1 111 1 256 1 154 1 113 2 241 1 114 1 328 1 116 3 354 1 211 1 69 1 356 1 213 1 181 1 284 1 186 1 
122 1 27 2 290 1 265 1 1 1 169 2 54 1 269 1 344 1 85 1 367 1 111 1 154 1 113 2 241 1 114 1 328 1 116 2 211 1 354 1 69 1 356 1 213 1 181 1 284 1 
111 2 313 1 152 1 27 1 290 1 168 1 114 2 1 2 291 1 116 1 211 1 356 2 269 1 229 1 84 1 140 1 284 1 375 1 200 1 295 1 367 1 186 1 237 1 
25 1 122 1 313 1 288 1 27 1 290 1 265 1 1 1 291 1 54 1 269 1 85 1 367 1 111 1 256 1 154 1 113 2 114 1 116 1 354 1 211 1 69 1 356 1 213 1 284 1 311 1 
45 1 
287 1 0 1 290 2 338 1 250 2 249 1 251 1 194 1 3 2 57 1 295 1 200 1 108 1 202 5 203 1 63 2 152 1 301 1 259 2 303 1 305 1 353 3 156 5 211 1 357 1 74 1 75 6 76 1 20 1 217 2 21 1 220 2 80 2 168 2 126 1 269 1 365 1 227 1 173 1 367 2 321 1 235 4 89 1 35 2 133 1 242 2 40 1 96 2 98 2 282 1 374 1 140 1 284 2 334 1 
287 1 194 1 126 1 227 1 57 1 173 1 321 1 108 1 235 2 202 3 89 1 348 1 63 1 303 1 305 1 353 1 156 3 40 1 357 1 282 1 75 2 21 1 
287 1 363 1 338 1 194 1 126 1 227 1 57 1 173 1 321 1 108 1 235 3 202 3 89 1 35 1 348 1 303 1 305 1 353 1 156 3 40 1 357 1 282 1 75 1 21 1 
63 1 287 1 303 1 305 1 156 2 40 1 126 1 194 1 3 1 357 1 227 1 282 1 57 1 75 1 173 1 21 1 321 1 235 2 108 1 89 1 202 2 
44 1 287 2 0 1 338 1 249 1 251 1 194 2 3 3 253 1 57 1 108 1 202 4 63 3 348 1 301 1 303 1 259 1 305 1 353 2 156 4 157 1 117 1 214 1 357 1 310 1 74 1 75 5 21 2 217 1 220 1 80 1 363 1 224 1 126 2 227 1 230 1 173 1 321 1 235 3 89 1 35 1 92 1 242 1 329 1 40 1 96 1 282 1 98 1 333 1 286 1 334 1 
287 2 0 1 249 1 250 2 338 3 251 1 194 2 3 1 253 1 57 1 108 1 202 3 203 1 63 1 301 1 303 1 259 2 305 1 353 1 156 3 357 1 310 1 74 1 75 2 21 2 217 1 220 2 80 2 363 1 224 1 126 2 227 1 230 1 173 1 321 1 235 3 89 1 35 1 242 2 329 1 40 1 96 1 282 1 98 1 333 1 286 1 334 1 
287 2 0 1 249 1 338 1 251 1 194 2 3 1 253 1 57 1 108 1 202 3 63 1 301 1 303 1 259 1 305 1 353 1 157 1 156 3 214 1 357 1 310 1 74 1 75 2 21 2 217 1 220 1 80 1 363 1 224 1 126 2 227 1 230 1 173 1 321 1 235 3 89 1 35 1 92 1 242 1 329 1 40 1 96 1 282 1 98 1 333 1 286 1 334 1 
287 2 0 1 249 1 338 1 251 1 194 2 3 1 253 1 57 1 108 1 202 3 63 1 301 1 303 1 259 1 305 1 353 1 157 1 156 3 214 1 357 1 310 1 74 1 75 2 21 2 217 1 220 1 80 1 363 1 224 1 126 2 227 1 230 1 173 1 321 1 235 3 89 1 35 1 92 1 242 1 329 1 40 1 96 1 282 1 98 1 333 1 286 1 334 1 
287 2 0 1 48 1 249 1 250 1 338 1 194 2 3 1 253 1 57 1 108 1 202 3 63 1 299 1 301 1 303 1 259 1 305 1 353 1 156 3 357 1 310 1 74 1 75 2 21 2 217 1 121 1 363 1 224 1 126 2 227 1 230 1 87 1 173 1 321 1 235 3 89 1 35 1 92 1 242 1 329 1 40 1 96 1 282 1 332 1 333 1 286 1 334 1 
287 2 0 1 249 1 338 1 251 1 194 2 3 2 253 1 57 1 108 1 202 3 63 2 301 1 303 1 259 1 305 1 353 1 157 1 156 3 214 1 117 1 357 1 310 1 74 1 75 3 21 2 217 1 220 1 80 1 363 1 224 1 126 2 227 1 230 1 173 1 321 1 235 3 89 1 35 1 92 1 242 1 329 1 40 1 96 1 282 1 98 1 333 1 286 1 334 1 
287 2 0 1 249 1 338 1 251 1 194 2 3 2 253 1 57 1 108 1 202 3 63 2 301 1 303 1 259 1 305 1 353 1 157 1 156 3 214 1 117 1 357 1 310 1 74 1 75 3 21 2 217 1 220 1 80 1 363 1 224 1 126 2 227 1 230 1 173 1 321 1 235 3 89 1 35 1 92 1 242 1 329 1 40 1 96 1 282 1 98 1 333 1 286 1 334 1 
287 2 0 1 48 2 249 1 250 2 338 1 194 2 3 2 253 1 57 1 108 1 202 4 203 1 63 2 301 1 303 1 259 2 305 1 353 2 156 4 357 1 310 1 74 1 75 4 21 2 217 1 363 1 224 1 126 2 227 1 230 1 87 1 173 1 321 1 235 3 89 1 35 1 242 2 329 1 40 1 96 1 282 1 332 2 333 1 286 1 334 1 
102 1 335 1 312 1 104 1 267 2 341 3 127 1 105 2 364 1 31 1 255 3 172 1 6 2 148 1 8 1 297 1 151 1 239 1 349 1 260 1 73 1 18 1 263 6 359 1 376 1 190 2 
102 2 289 2 192 1 82 1 28 1 267 1 341 8 105 2 29 1 226 3 364 2 31 2 270 1 255 6 6 1 172 1 345 1 201 1 148 11 346 2 8 2 151 2 239 1 349 2 153 1 11 1 64 3 373 1 18 4 331 1 263 14 359 11 190 4 
79 1 102 1 43 1 192 1 290 1 168 1 224 1 341 1 194 2 126 2 29 1 269 1 30 1 31 1 86 1 255 1 6 1 172 1 200 1 7 1 367 1 8 1 151 1 349 1 300 1 152 1 178 1 211 1 329 1 18 1 330 1 42 1 284 1 331 1 263 2 184 1 21 1 190 2 
43 1 102 3 289 2 192 1 104 1 290 3 341 10 51 1 195 1 194 3 105 8 255 10 6 2 345 2 7 2 200 2 201 4 148 7 346 2 8 3 297 1 10 2 151 3 349 3 152 2 155 2 352 1 211 2 260 1 213 1 215 2 18 7 263 20 21 1 359 7 79 2 312 1 168 1 224 1 267 4 127 1 126 3 29 1 269 2 364 3 31 3 86 2 172 3 367 3 239 3 240 2 178 2 329 1 330 1 284 3 331 1 245 2 376 1 190 6 
102 2 335 1 164 2 192 1 290 8 168 2 224 1 341 1 194 1 126 1 29 1 83 1 269 2 31 2 255 1 172 2 200 3 295 1 367 7 62 1 8 2 204 1 151 2 349 2 152 2 135 1 176 1 306 1 329 1 211 2 307 1 213 1 330 1 284 8 140 1 263 2 21 1 23 1 190 4 
102 1 289 1 224 1 267 1 341 1 105 1 126 1 194 1 364 1 31 1 255 2 172 1 345 1 148 1 368 1 346 1 8 1 151 1 239 1 349 1 93 1 329 1 18 1 331 1 263 3 21 1 333 1 359 1 190 2 
102 1 335 1 151 1 349 1 289 1 341 2 105 1 364 1 31 1 18 1 172 1 201 1 263 2 148 1 8 1 359 1 190 2 205 1 
102 1 335 1 151 1 239 1 349 1 267 1 105 1 31 1 18 1 255 2 172 1 345 1 263 2 148 1 8 1 359 1 190 2 149 1 
102 1 335 1 289 1 341 2 267 1 105 2 364 1 31 1 255 2 172 1 345 1 201 1 346 1 148 2 8 1 151 1 239 1 349 1 18 2 263 4 359 2 190 2 
102 1 151 1 349 1 289 1 341 2 307 1 105 1 364 1 31 1 18 1 172 1 201 1 263 2 148 1 8 1 359 1 190 2 205 1 
102 1 151 1 239 1 349 1 267 1 307 1 105 1 31 1 18 1 255 2 172 1 345 1 263 2 148 1 8 1 359 1 190 2 149 1 
102 1 289 1 341 2 267 1 105 2 364 1 31 1 255 2 172 1 345 1 201 1 346 1 148 2 8 1 151 1 239 1 349 1 307 1 18 2 263 4 359 2 190 2 
102 1 289 1 341 2 267 1 105 2 364 1 31 1 255 2 172 1 345 1 201 1 346 1 148 2 8 1 151 1 239 1 349 1 18 2 263 4 359 2 190 2 
79 1 102 1 192 1 290 1 168 1 341 1 126 1 194 1 29 1 269 1 31 1 86 1 255 1 6 1 172 1 7 1 200 1 367 1 8 1 151 1 349 1 152 1 155 1 178 1 211 1 284 1 263 2 190 2 
102 1 287 1 151 1 349 1 290 1 168 1 29 1 31 1 255 1 366 1 6 1 5 1 172 1 284 1 263 1 367 1 8 1 190 2 
102 1 289 1 341 2 267 1 105 2 364 1 31 1 255 2 172 1 345 1 201 1 346 1 148 2 8 1 151 1 239 1 349 1 18 2 331 1 263 4 359 2 190 2 
79 1 102 1 289 1 290 1 267 1 341 2 105 2 126 1 194 1 269 1 364 1 31 1 255 2 86 1 172 1 345 1 201 1 7 1 200 1 148 2 367 1 346 1 8 1 151 1 239 1 349 1 152 1 135 1 155 1 178 1 211 1 18 2 284 1 263 4 245 1 359 2 190 2 
102 1 289 1 224 1 341 2 105 1 126 1 194 1 364 1 31 1 255 1 172 1 4 1 345 1 201 1 368 1 346 1 148 1 8 1 151 1 239 1 349 1 329 1 18 1 331 1 263 3 21 1 333 1 359 1 190 2 
289 1 144 1 248 1 267 1 341 4 170 1 105 2 226 2 364 1 31 2 255 5 345 1 201 1 234 1 346 1 8 2 151 2 239 1 349 2 153 1 11 1 64 1 13 1 208 1 175 1 68 1 263 9 264 1 190 4 
324 1 151 1 349 1 153 1 144 1 64 1 13 2 175 1 208 2 248 1 341 3 170 2 226 1 31 1 255 3 263 6 8 1 190 2 
289 1 144 1 248 1 267 1 341 4 170 1 52 1 105 2 226 2 364 1 31 2 255 5 345 1 201 1 234 1 346 1 8 2 151 2 239 1 349 2 153 1 11 1 64 1 13 1 208 1 175 1 68 1 263 9 190 4 
289 1 144 1 248 1 267 1 341 4 170 1 52 1 105 2 226 2 364 1 31 2 255 5 345 1 201 1 234 1 346 1 8 2 151 2 239 1 349 2 153 1 11 1 64 1 13 1 208 1 175 1 68 1 263 9 190 4 
312 1 289 2 144 1 104 1 28 1 248 1 267 3 341 11 170 1 127 1 105 5 226 2 364 3 31 1 255 10 345 2 201 2 346 2 8 1 297 1 324 1 151 1 239 3 349 1 153 1 11 1 64 2 13 1 208 2 175 1 260 1 263 21 376 1 190 2 
277 1 326 1 325 1 49 1 304 1 39 1 347 1 323 1 219 1 110 1 
261 1 71 1 
36 1 277 1 326 1 325 1 47 1 49 1 347 1 187 1 110 1 
325 1 326 1 277 1 12 1 49 1 304 1 39 1 338 1 156 1 317 1 146 1 268 2 244 1 199 1 347 1 202 1 219 1 110 1 
325 1 326 1 277 1 12 1 49 1 304 1 39 1 338 1 156 1 317 1 146 1 268 2 244 1 199 1 347 1 202 1 219 1 110 1 
325 1 326 1 277 1 12 1 49 1 304 1 39 1 338 1 156 1 317 1 146 1 268 2 244 1 199 1 347 1 202 1 219 1 110 1 
143 1 361 1 243 1 
143 1 361 1 243 1 
145 1 38 1 
143 1 145 1 38 1 
327 1 78 1 
167 1 49 1 224 2 317 1 125 1 146 1 194 2 126 2 268 1 6 1 347 1 202 1 110 1 276 1 277 1 326 1 325 1 327 1 95 1 156 1 329 2 71 1 41 1 261 1 142 1 78 1 21 2 
361 1 243 1 
143 1 145 1 38 1 
102 1 164 2 165 1 192 1 290 2 341 1 194 2 126 2 29 1 269 1 31 1 255 1 172 1 273 1 233 1 367 2 8 1 151 1 349 1 177 1 211 1 97 1 284 2 331 1 263 2 21 2 23 1 190 2 
191 1 25 1 154 1 290 2 113 2 265 1 135 1 15 1 354 1 211 1 69 1 54 1 356 1 269 1 213 1 85 1 284 2 183 1 367 2 
25 1 154 1 290 1 113 2 265 1 354 1 211 1 69 1 54 1 356 1 269 1 213 1 85 1 19 1 284 1 183 1 367 1 
191 1 152 1 290 1 168 1 351 1 211 1 356 1 269 1 284 1 140 1 200 1 295 1 367 1 237 1 
191 1 25 1 154 1 290 1 113 2 265 1 15 1 354 1 211 1 69 1 54 1 356 1 269 1 213 1 85 1 284 1 183 1 367 1 
32 1 
158 1 73 1 112 1 363 1 217 1 338 1 96 1 
220 1 80 1 0 1 363 1 249 1 250 1 338 2 251 1 202 1 301 1 353 1 156 1 96 1 98 1 75 1 217 1 334 1 
79 1 207 1 152 1 0 1 301 1 46 1 290 1 168 1 249 1 211 1 269 2 55 1 118 1 284 1 200 2 367 1 334 1 
80 3 289 2 166 2 0 2 363 2 250 6 249 2 338 5 266 5 226 1 364 2 171 1 252 1 232 1 345 2 346 2 202 1 369 1 91 1 238 1 239 2 153 1 301 2 64 1 133 1 353 1 156 1 372 1 96 5 162 5 283 1 75 1 20 1 217 8 334 2 
287 1 166 2 0 1 224 1 249 1 194 1 126 1 127 1 364 2 230 1 253 1 202 1 297 1 239 1 301 1 115 1 156 1 329 1 96 2 214 1 310 1 283 1 217 2 21 1 333 1 376 1 334 1 286 1 
0 1 301 1 112 1 363 1 249 1 338 1 96 1 158 1 217 1 334 1 
10 1 80 5 239 2 289 2 166 2 250 10 338 5 266 5 96 5 364 2 162 5 283 1 345 2 346 2 217 5 
75 1 363 1 353 1 338 1 202 1 156 1 
0 1 290 4 337 1 168 2 249 2 269 1 365 1 200 1 295 1 107 1 367 4 202 3 152 1 301 2 133 2 37 1 66 1 353 2 156 3 139 2 211 1 96 2 374 1 75 4 284 4 20 2 140 1 217 2 334 2 
79 1 102 1 290 1 168 1 224 2 194 3 126 3 29 1 269 1 230 1 31 1 128 1 255 1 86 1 6 1 172 1 7 1 200 1 367 1 8 1 151 1 349 1 152 1 155 1 178 1 329 2 211 1 284 1 263 1 21 2 333 2 190 2 
80 2 0 1 301 1 133 1 363 2 250 4 249 1 338 4 266 2 96 2 260 1 162 2 20 1 217 1 334 1 
277 1 327 1 320 1 49 1 304 1 
277 1 49 1 61 1 
277 1 49 1 61 1 
277 1 49 1 61 1 
106 1 277 1 49 1 
106 1 277 1 49 1 
106 1 277 1 49 1 
277 1 49 1 
347 1 110 1 
151 2 239 1 312 1 349 2 104 1 340 1 341 4 267 2 105 3 127 1 260 1 364 1 31 2 255 4 263 8 201 1 8 2 297 1 376 1 190 4 
260 1 364 1 239 1 312 1 73 1 255 3 104 1 263 6 341 3 297 1 267 2 105 2 127 1 376 1 
151 1 239 1 349 1 289 1 67 1 267 1 341 2 105 2 364 1 31 1 255 2 345 1 263 4 201 1 346 1 8 1 190 2 
239 1 289 1 153 1 11 1 64 1 267 1 341 3 105 2 226 2 364 1 255 4 345 1 263 7 201 1 346 1 
312 1 289 2 104 1 28 1 340 2 341 11 267 5 127 2 105 9 364 3 226 2 342 1 31 2 255 12 345 2 201 4 346 2 8 2 297 1 151 2 239 3 349 2 11 1 64 2 373 1 260 1 263 23 376 2 190 4 
226 1 255 1 263 1 
64 1 263 1 341 1 
10 1 151 1 239 1 349 1 289 1 67 1 341 3 267 2 105 3 364 1 31 1 255 3 345 1 263 6 201 1 346 1 8 1 190 2 
289 2 248 1 341 6 267 1 105 2 226 1 364 2 31 1 255 6 232 1 345 2 201 1 346 2 8 1 369 1 91 1 151 1 238 1 239 2 349 1 153 1 64 1 372 1 263 12 190 2 
239 1 341 3 267 1 127 1 105 2 364 1 255 3 263 6 201 1 297 1 376 1 
151 1 312 1 349 1 104 1 340 1 341 1 267 1 105 2 127 1 342 1 31 1 255 2 201 1 263 3 8 1 376 1 190 2 
151 1 239 2 349 1 248 1 115 1 267 3 341 5 127 2 105 5 364 2 31 1 255 5 201 2 263 10 8 1 297 1 376 2 190 2 
151 1 349 1 289 1 248 1 341 2 105 1 364 1 31 1 263 2 201 1 8 1 190 2 
151 1 239 1 349 1 289 1 248 1 267 1 341 2 105 2 364 1 31 1 255 2 345 1 263 4 201 1 346 1 8 1 190 2 
151 3 349 3 248 1 340 1 68 1 267 1 341 1 127 1 105 2 342 1 31 3 255 2 263 3 201 1 8 3 376 1 190 6 
312 1 289 3 104 1 248 1 340 2 124 1 341 16 267 7 127 3 105 12 342 1 226 4 364 5 31 5 255 18 345 3 201 5 346 3 8 5 297 2 88 1 151 5 239 5 349 5 153 1 11 1 64 3 67 1 68 1 260 1 263 34 185 1 376 3 190 10 
312 1 104 1 248 1 341 4 267 2 127 1 105 2 364 1 226 1 31 1 255 4 8 1 297 1 151 1 239 1 238 1 349 1 153 1 64 1 260 1 263 8 376 1 190 2 
312 1 289 1 104 1 248 1 267 2 341 6 127 1 105 3 226 2 364 2 31 2 255 5 201 1 346 1 8 2 297 1 151 2 239 1 238 1 349 2 153 1 11 1 64 1 67 1 260 1 263 11 376 1 190 4 
312 1 289 2 104 1 248 1 340 1 341 9 267 3 127 1 105 4 226 1 364 3 31 3 255 10 232 1 345 2 201 1 346 2 8 3 297 1 369 1 91 1 151 3 238 1 239 3 349 3 153 1 64 1 67 1 372 1 260 1 263 19 376 1 190 6 
312 1 289 2 104 1 248 1 340 1 341 10 267 3 127 1 105 5 226 1 364 3 31 3 255 7 232 1 345 1 201 2 346 2 8 3 297 1 369 1 91 1 151 3 238 1 239 2 349 3 153 1 64 1 67 1 372 1 260 1 263 17 376 1 190 6 
312 1 104 1 248 1 341 4 267 2 127 1 105 2 364 1 226 1 31 1 255 4 8 1 297 1 151 1 239 1 238 1 349 1 153 1 64 1 260 1 263 8 376 1 190 2 
289 2 248 1 341 6 267 1 105 2 226 1 364 2 31 1 255 6 232 1 345 2 201 1 346 2 8 1 369 1 91 1 151 1 238 1 239 2 349 1 153 1 64 1 372 1 263 12 190 2 
312 1 289 2 104 1 248 1 340 2 341 10 267 3 127 1 105 5 226 1 364 3 31 4 255 8 232 1 345 1 201 2 346 2 8 4 297 1 369 1 91 1 151 4 238 1 239 2 349 4 153 1 64 1 67 1 372 1 260 1 263 18 376 1 190 8 
289 3 248 1 340 2 341 9 267 3 105 6 226 1 364 3 31 4 255 7 232 1 345 2 201 3 346 3 8 4 369 1 91 1 151 4 238 1 239 2 349 4 153 1 64 1 68 1 372 1 263 16 190 8 
239 1 312 1 104 2 267 3 341 3 127 3 105 6 364 1 255 4 263 7 201 3 297 1 376 3 
312 1 289 2 104 1 248 1 340 2 341 10 267 3 127 1 105 4 226 1 364 3 31 4 255 8 232 1 345 1 201 1 346 2 8 4 297 1 369 1 91 1 151 4 238 1 239 2 349 4 153 1 64 1 68 1 372 1 260 1 263 18 376 1 190 8 
362 1 6 1 305 1 21 1 194 1 126 1 53 1 
362 1 305 1 17 1 126 1 194 1 53 1 161 1 309 1 293 1 6 1 294 1 21 1 
269 1 73 1 152 1 290 1 168 1 140 1 284 1 200 1 295 1 367 1 211 1 
79 1 152 1 290 1 168 1 224 1 178 1 329 1 211 1 126 2 194 2 269 1 330 1 86 1 6 1 284 1 200 1 21 1 367 1 
79 2 287 2 290 1 224 2 194 2 126 2 269 1 227 1 86 1 58 1 366 1 6 1 200 3 367 1 89 1 152 2 178 1 211 1 139 1 329 1 180 1 330 1 284 1 21 2 
79 2 287 2 290 1 224 2 194 2 126 2 269 1 227 1 58 1 366 1 6 1 200 3 367 1 89 1 152 2 178 1 211 1 139 1 329 1 180 1 330 1 284 1 119 1 21 2 
79 1 152 1 290 3 46 1 258 1 168 1 363 1 50 1 338 1 156 2 139 1 211 1 180 1 269 1 58 1 75 1 284 3 200 4 367 3 108 1 202 2 275 1 129 1 
79 1 152 1 290 1 46 1 258 1 156 1 139 1 211 1 180 1 319 1 269 1 58 1 284 1 200 4 367 1 202 1 
269 1 83 1 290 1 284 1 367 1 211 1 
79 1 164 1 152 2 290 7 168 2 135 1 176 1 306 1 211 2 72 1 83 1 269 3 213 1 118 1 284 7 200 3 367 6 62 1 90 1 204 1 189 1 
79 1 102 2 312 1 104 1 290 1 224 1 341 3 267 2 105 2 127 1 194 2 126 2 269 1 364 1 31 2 255 3 86 1 6 2 172 2 200 1 7 1 148 1 367 1 8 2 297 1 151 2 239 1 349 2 152 1 240 1 135 1 155 1 178 1 211 1 329 1 260 1 97 1 18 1 330 1 284 1 263 6 331 1 21 1 245 1 359 1 376 1 190 4 
0 1 301 1 167 1 258 1 46 1 290 1 168 1 315 1 66 1 16 1 249 1 156 1 319 1 284 1 200 2 367 1 202 1 188 1 334 1 
79 1 207 1 152 1 258 1 290 2 135 1 211 1 83 1 269 2 118 1 284 2 200 2 367 2 
152 1 290 4 168 1 135 1 211 1 355 1 269 1 284 4 140 1 295 1 200 1 367 4 275 1 
79 1 152 1 290 2 370 1 139 1 138 1 211 1 195 1 72 1 269 2 284 2 200 1 367 2 90 1 
269 1 85 1 290 1 113 1 265 1 168 1 284 1 367 1 211 1 54 1 
269 1 213 1 290 2 284 2 135 1 233 1 367 2 211 1 
152 2 290 5 168 1 135 1 176 1 306 1 139 1 211 2 355 1 269 2 140 1 284 5 295 1 200 3 367 4 62 1 
152 2 290 5 168 1 135 1 306 1 139 1 211 2 355 1 269 2 140 1 284 5 77 1 295 1 200 3 367 4 62 1 
79 1 152 1 290 1 168 1 224 1 178 1 329 1 211 1 126 2 194 2 269 1 330 1 6 1 284 1 200 1 119 1 21 1 367 1 
79 1 152 1 290 1 139 1 211 1 72 1 269 2 118 1 284 1 200 1 367 1 90 1 189 1 
165 1 65 1 177 1 126 1 194 1 198 1 273 1 21 1 109 1 
210 1 109 1 360 1 
314 1 198 1 6 1 65 1 109 1 
287 2 314 1 167 1 363 1 224 1 338 1 194 1 126 1 227 1 230 1 253 1 198 1 321 1 108 1 202 2 109 1 89 1 150 1 65 1 210 1 156 2 329 1 310 1 21 1 120 1 333 1 360 1 286 1 
73 1 344 1 241 1 328 1 
313 1 344 1 27 1 241 1 291 1 328 1 116 1 
111 1 27 1 1 1 
288 1 313 1 302 1 27 3 132 1 134 1 241 1 291 1 116 3 339 2 328 1 344 1 
313 1 344 1 27 2 241 1 291 1 328 1 116 2 169 1 9 1 
313 1 288 1 85 1 344 1 27 1 113 1 182 1 291 1 2 1 116 1 354 1 
313 1 288 1 344 1 27 1 241 1 291 1 116 1 
313 1 288 1 27 1 241 2 291 1 328 1 116 1 
206 1 313 1 288 1 27 1 279 1 291 1 116 1 
288 1 313 1 27 3 241 1 291 1 328 1 116 3 316 1 169 2 196 1 344 2 99 1 182 1 
288 1 313 1 27 2 154 1 113 2 241 1 247 1 291 1 328 1 116 2 169 1 354 1 54 1 344 1 85 1 
288 1 313 2 27 4 241 1 291 2 328 1 116 4 169 2 344 2 33 1 99 1 182 1 9 1 
313 1 288 1 344 1 27 1 241 1 291 1 328 1 116 1 
313 1 132 1 27 4 134 1 241 2 291 1 339 1 328 2 116 4 169 2 160 1 344 3 99 1 182 1 
313 1 288 1 344 1 254 1 216 1 27 2 241 1 274 1 291 1 328 1 116 2 169 1 
288 1 313 1 132 1 27 3 134 2 241 1 291 1 116 3 339 2 328 1 371 1 344 1 
344 2 123 1 218 2 179 1 
313 1 288 1 27 1 60 1 291 1 116 1 
196 1 313 1 288 1 344 1 27 2 241 1 291 1 328 1 116 2 169 1 
223 1 
313 1 288 1 344 1 27 1 241 1 291 1 328 1 116 1 
196 1 313 1 288 1 344 1 27 3 241 1 291 1 328 1 339 1 116 3 169 1 
160 1 344 1 99 1 182 1 
344 1 241 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (242,316) 151 (5,268) (5,268) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (242,316) 151 (5,268) (5,268) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (242,316) 151 (5,268) (5,268) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (242,316) 151 (5,268) (5,268) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 285 342 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 285 342 118 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException (127,232) (127,232) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 329 146 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 327 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (73,104) (73,104) (125,238) 41 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 301 61 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 141 83 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 301 61 103 26 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 329 146 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 285 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 327 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 250 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | STATEMENT | 1698 | stmt -> ;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 3927 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
148 1 151 1 27 1 337 1 88 1 5 1 159 1 303 1 242 1 268 1 245 1 
148 1 151 1 27 1 337 1 88 1 5 1 159 1 303 1 242 1 268 1 245 1 
148 1 151 1 27 1 337 1 88 1 5 1 159 1 303 1 242 1 268 1 245 1 
148 1 151 1 27 1 337 1 88 1 5 1 159 1 303 1 242 1 268 1 245 1 
248 1 1 1 165 1 324 1 137 1 289 1 148 4 121 1 199 2 181 1 51 3 27 4 337 1 339 2 76 1 159 1 245 1 106 3 
248 1 165 1 137 1 18 1 88 1 311 1 175 1 148 2 181 1 27 2 337 1 159 1 303 1 106 1 245 1 344 1 
165 1 148 3 316 1 181 1 51 1 27 3 337 2 339 1 159 1 76 1 303 1 245 2 106 2 
1 1 137 1 193 1 148 9 316 1 199 2 51 7 159 1 245 2 106 5 248 1 165 1 324 1 251 1 289 1 170 1 121 1 123 1 181 1 27 9 337 2 339 4 76 3 303 1 
1 1 137 1 193 1 148 9 316 1 199 2 51 7 159 1 245 2 106 5 248 1 165 1 324 1 251 1 289 1 170 1 121 1 123 1 181 1 27 9 337 2 339 4 76 3 303 1 
254 1 75 1 327 1 
249 1 254 1 222 2 
323 2 300 2 281 1 112 2 215 2 255 2 203 2 205 1 
270 1 135 1 189 1 275 1 42 1 87 1 231 1 278 1 236 2 235 1 48 1 200 1 97 1 281 1 57 1 59 2 321 1 203 2 204 1 205 1 107 1 323 3 246 2 108 1 111 1 112 3 253 1 215 2 255 2 216 2 294 1 172 1 120 1 300 2 122 2 219 1 73 1 
315 1 323 1 197 1 300 1 112 1 215 1 32 1 255 1 203 1 205 1 
323 1 80 1 208 1 110 1 112 1 215 1 254 1 279 1 13 1 32 1 75 1 267 1 224 1 244 1 
323 1 208 1 110 2 112 1 215 1 254 1 255 1 300 1 13 1 32 1 75 1 267 2 224 1 203 1 244 1 
110 1 220 1 267 1 14 1 328 1 
17 1 110 2 220 1 254 1 75 1 68 1 267 2 14 1 
110 1 267 1 14 1 
323 1 110 1 112 1 215 1 255 1 315 1 197 1 300 1 220 1 32 1 74 1 267 1 203 1 205 1 
254 1 
17 1 110 2 220 1 254 1 75 1 256 1 267 2 14 1 
17 1 110 5 84 1 4 1 254 1 297 2 145 2 24 1 70 1 52 1 12 1 56 1 220 2 75 1 267 5 14 2 343 1 77 1 284 2 
246 1 231 1 216 1 236 1 78 1 
281 1 327 1 
323 2 112 2 215 2 255 1 143 1 300 1 281 2 186 1 203 1 
262 1 66 1 201 1 
323 1 246 1 108 1 111 1 112 1 211 1 253 1 42 1 231 1 216 1 236 1 235 1 48 1 200 1 281 1 107 1 
323 3 300 3 281 1 112 3 214 1 215 3 255 1 203 3 
315 1 323 1 300 1 112 1 215 1 32 1 203 1 
323 1 300 1 112 1 215 1 32 1 255 1 186 1 143 1 203 1 
323 1 300 1 112 1 215 1 255 1 143 1 203 1 78 1 
323 2 300 1 281 1 112 2 215 2 214 1 241 1 279 1 203 1 
78 1 
323 2 112 2 66 1 214 1 215 2 255 1 143 1 262 1 300 2 203 2 
323 1 246 1 108 1 111 1 112 1 253 1 42 1 231 1 216 1 236 1 235 1 48 1 200 1 281 1 107 1 
323 1 246 1 111 1 112 1 114 1 253 1 42 1 231 1 216 1 236 1 48 1 177 1 200 1 281 1 107 1 
270 1 131 1 135 1 189 2 190 1 275 1 274 1 87 1 142 1 278 1 95 1 153 1 201 1 57 1 59 2 320 1 105 1 66 1 294 1 299 1 262 1 122 3 301 1 38 1 
323 1 300 1 112 1 215 1 32 1 102 1 224 1 203 1 
323 2 112 2 214 1 215 2 255 1 293 1 143 1 300 2 281 1 32 1 78 1 203 2 
315 1 323 2 300 2 112 2 215 2 102 1 32 1 203 2 
209 1 89 1 
209 1 89 1 
16 1 260 1 
16 1 260 1 
16 1 260 1 
209 1 89 1 163 1 
207 1 209 1 89 1 
16 1 260 1 49 1 209 2 180 1 89 2 
209 1 89 1 163 1 
209 1 89 1 163 1 
82 1 209 1 89 1 
82 1 209 1 89 1 
82 1 209 1 89 1 
209 1 89 1 171 1 342 1 285 1 243 1 
110 1 209 1 89 1 171 1 267 1 342 1 118 1 285 1 243 1 
248 1 1 1 137 1 
248 1 137 1 311 1 
286 1 1 2 137 3 311 1 34 1 92 1 
1 1 137 2 333 1 311 1 34 1 92 1 
1 1 137 2 311 1 92 1 34 2 
136 1 194 1 6 1 145 1 280 1 14 1 61 1 284 1 63 1 247 1 166 1 17 1 110 5 254 1 297 1 70 1 28 1 301 1 220 4 33 2 75 1 267 5 341 1 343 1 77 1 38 1 
40 1 309 1 136 1 191 1 6 4 145 2 280 2 9 5 99 1 52 1 50 1 14 6 61 3 284 2 110 9 17 1 254 2 328 5 297 2 70 2 28 2 301 3 220 7 223 1 75 1 267 9 343 3 77 1 38 3 
6 1 145 1 280 1 315 1 197 1 52 1 203 1 284 1 61 1 205 1 323 1 247 1 63 1 110 3 112 1 215 1 254 1 255 1 297 1 70 1 300 1 28 1 220 2 301 1 32 1 74 1 33 1 75 1 267 3 343 1 38 1 
309 1 6 2 145 1 280 1 315 1 197 1 99 1 52 1 203 1 284 1 61 2 205 1 323 1 247 1 63 1 110 4 112 1 215 1 254 1 255 1 297 1 70 1 300 1 28 1 220 3 301 2 32 1 223 1 74 1 33 2 75 1 267 4 343 2 38 2 
111 1 319 1 327 1 
111 1 141 1 
304 1 
111 1 42 1 
325 1 111 3 319 2 42 1 253 1 55 1 
111 1 42 1 253 1 
39 1 111 1 
306 1 139 1 188 1 189 4 229 1 232 1 93 1 314 1 153 2 240 1 320 2 105 3 292 1 294 5 122 9 35 1 127 1 38 2 
306 1 139 1 188 1 189 4 229 1 232 1 93 1 314 2 153 2 240 1 320 2 105 4 292 1 294 5 122 9 35 1 127 1 38 2 
306 1 139 1 188 1 189 4 229 1 232 1 93 1 314 1 153 2 54 1 240 1 320 2 105 3 292 1 294 5 122 9 35 1 127 1 38 2 
0 1 306 1 270 2 3 1 135 2 308 1 188 2 139 2 189 11 192 1 229 2 275 2 85 1 232 1 234 4 93 2 314 3 153 3 57 2 283 1 240 2 59 4 320 2 105 6 61 4 212 4 292 1 252 1 294 16 173 1 25 2 122 27 301 4 35 1 127 1 38 6 
270 1 135 1 188 1 139 1 167 1 229 1 275 1 232 1 93 1 294 1 261 1 122 1 153 1 57 1 240 1 59 2 105 1 127 1 
1 1 272 1 137 2 230 1 311 1 236 1 48 1 148 2 200 1 51 1 98 1 159 1 106 1 245 1 246 1 286 1 248 1 165 1 210 1 116 1 216 1 23 1 181 1 27 2 31 1 337 1 336 1 184 1 303 1 37 1 
1 1 272 1 137 2 230 1 311 1 47 1 236 1 48 1 148 3 200 1 51 2 98 1 106 1 245 1 286 1 246 1 248 1 165 1 210 1 216 1 181 1 27 3 31 1 337 1 336 1 338 1 184 1 36 1 303 1 37 1 
1 1 137 2 230 1 311 1 236 1 48 1 148 2 200 1 51 2 106 1 246 1 286 1 248 1 165 1 210 1 216 1 181 1 27 2 31 1 336 1 338 1 184 1 303 1 36 1 37 1 
230 2 42 1 231 1 277 1 44 1 91 1 47 1 48 1 236 1 148 1 195 1 200 1 245 1 246 1 111 1 288 1 169 1 216 1 27 1 31 2 337 1 184 2 303 2 
1 1 272 1 137 2 230 1 311 1 236 1 48 1 148 1 200 1 98 1 159 1 245 1 246 1 286 1 248 1 210 1 216 1 23 1 27 1 31 1 337 1 336 1 184 1 36 1 303 1 37 1 
71 1 
246 1 17 1 110 2 231 1 216 1 236 1 297 1 145 1 329 1 146 1 29 1 267 2 14 2 343 1 77 1 284 1 
80 1 132 1 86 1 313 1 46 2 279 1 13 1 14 2 244 1 323 1 164 1 17 1 110 3 208 1 112 1 213 1 215 1 256 1 32 1 267 3 224 1 226 1 
80 1 132 1 86 1 313 1 46 3 279 1 13 1 14 1 244 1 323 1 110 3 208 1 17 1 112 1 213 1 215 1 254 1 256 1 124 1 32 1 75 1 267 3 224 1 226 1 
80 1 132 1 86 1 7 1 313 1 46 3 279 1 13 1 14 2 244 1 323 1 164 1 17 1 110 3 208 1 112 1 213 1 215 1 254 1 256 1 124 1 32 1 75 1 267 3 224 1 226 1 
80 1 187 1 86 1 7 2 279 1 197 1 198 1 13 1 14 3 284 1 203 1 205 1 208 1 110 3 17 1 112 2 213 1 113 1 215 2 297 1 300 1 32 2 224 1 226 1 132 1 134 1 233 1 46 2 313 1 145 1 315 1 244 1 323 2 164 2 254 1 255 1 256 1 70 1 74 1 75 1 267 3 77 1 343 1 
80 1 86 1 7 2 279 1 196 2 198 1 13 1 14 4 284 1 208 1 110 4 17 2 112 1 213 1 215 1 297 1 124 2 32 1 222 2 224 1 226 1 132 1 307 2 46 4 313 1 145 1 147 1 317 2 244 1 323 1 62 2 164 2 249 2 254 2 70 1 332 1 75 1 267 4 77 1 343 1 
80 1 132 1 187 1 86 1 313 1 46 2 279 1 145 1 315 1 197 1 198 1 13 1 203 1 284 1 205 1 244 1 323 2 110 2 208 1 112 2 213 1 113 1 215 2 254 1 255 1 297 1 70 1 300 1 32 2 74 1 75 1 267 2 224 1 343 1 77 1 226 1 
80 1 132 1 187 1 86 1 313 1 46 2 279 1 145 1 315 1 197 1 198 1 13 1 203 1 284 1 205 1 244 1 323 2 110 2 208 1 112 2 213 1 113 1 215 2 254 1 255 1 297 1 70 1 300 1 32 2 74 1 75 1 267 2 224 1 343 1 77 1 226 1 
80 1 273 1 132 1 86 1 140 2 7 2 313 1 46 4 279 1 145 1 147 1 196 2 317 2 13 1 14 4 284 1 244 1 323 1 206 1 164 2 17 2 110 4 208 1 112 1 213 1 168 1 215 1 254 1 297 1 70 1 124 2 182 1 221 2 222 2 32 1 75 1 267 4 224 1 343 1 77 1 226 1 
80 1 187 1 86 1 7 1 279 1 197 1 198 1 13 1 14 1 284 1 203 1 205 1 208 1 110 2 112 2 113 1 213 1 215 2 297 1 300 1 124 1 32 2 224 1 226 1 132 1 233 1 46 3 313 1 145 1 315 1 244 1 323 2 164 1 254 1 255 1 70 1 74 1 75 1 267 2 77 1 343 1 
80 1 187 1 86 1 7 1 279 1 197 1 198 1 13 1 14 1 284 1 203 1 205 1 208 1 110 2 112 2 113 1 213 1 215 2 297 1 300 1 124 1 32 2 224 1 226 1 132 1 233 1 46 3 313 1 145 1 315 1 244 1 323 2 164 1 254 1 255 1 70 1 74 1 75 1 267 2 77 1 343 1 
80 1 273 1 86 1 7 2 279 1 196 2 13 1 14 4 284 1 208 1 110 4 17 2 112 1 213 1 215 1 297 1 124 2 221 2 32 1 222 2 224 1 226 1 132 1 140 2 46 4 313 1 145 1 147 1 317 2 244 1 323 1 164 2 254 1 70 1 332 1 75 1 267 4 77 1 343 1 
270 1 135 1 275 1 274 1 57 1 87 1 59 2 232 1 127 1 278 1 327 1 
270 2 3 1 135 2 189 4 275 2 87 2 312 1 278 1 234 3 144 1 97 1 281 1 201 8 154 1 57 2 59 4 283 1 321 1 61 2 212 3 66 8 67 1 252 1 294 6 262 1 122 10 301 2 38 2 
270 1 135 1 189 1 275 1 87 1 294 1 278 1 97 1 122 2 239 1 335 1 154 1 57 1 59 2 321 1 78 1 
246 1 270 1 41 1 135 1 189 1 275 1 87 1 231 1 216 1 278 1 236 1 238 1 122 1 73 1 154 1 104 1 57 1 59 2 321 1 78 1 
270 2 133 1 135 2 228 1 189 1 274 1 275 2 42 2 231 2 87 2 91 1 278 2 48 2 236 7 195 1 200 2 97 1 318 1 100 1 57 2 158 1 59 4 321 1 203 1 15 1 323 1 246 8 111 3 112 1 215 1 214 1 116 1 19 1 216 8 294 1 172 2 300 1 122 2 36 1 
323 1 270 1 135 1 112 1 275 1 215 1 87 1 255 1 143 1 294 2 278 1 300 1 122 2 301 1 266 1 154 1 57 1 59 2 61 1 203 1 38 1 
270 1 135 1 190 1 274 1 275 1 87 1 278 1 294 1 122 1 301 1 57 1 59 2 38 1 
270 1 135 1 189 2 66 1 274 1 275 1 87 1 142 1 278 1 299 1 262 1 122 2 153 1 201 1 57 1 59 2 320 1 105 1 
270 1 135 1 274 1 275 1 87 1 278 1 294 1 122 1 301 1 57 1 59 2 61 1 38 1 
270 1 135 1 190 1 275 1 87 1 278 1 294 1 122 1 318 1 301 1 57 1 59 2 38 1 
270 1 135 1 189 2 66 1 275 1 87 1 142 1 278 1 299 1 262 1 122 2 153 1 318 1 201 1 57 1 59 2 320 1 105 1 
270 1 135 1 275 1 87 1 278 1 294 1 122 1 318 1 301 1 57 1 59 2 61 1 38 1 
270 1 135 1 275 1 87 1 278 1 294 1 122 1 301 1 57 1 59 2 61 1 38 1 
270 1 135 1 189 1 275 1 42 1 231 1 87 1 278 1 48 1 235 1 236 1 200 1 97 1 281 1 57 1 59 2 321 1 107 1 246 1 323 1 108 1 111 1 112 1 253 1 216 1 294 1 122 2 73 1 
270 1 135 1 189 1 275 1 42 1 231 1 87 1 278 1 48 1 236 1 200 1 97 1 281 1 57 1 59 2 321 1 161 1 107 1 246 1 323 1 111 1 112 1 114 1 253 1 216 1 294 1 177 1 122 2 
270 1 135 1 275 1 87 1 278 1 294 1 122 1 154 1 301 1 57 1 59 2 61 1 38 1 
270 1 135 1 275 1 42 1 87 1 278 1 48 1 235 1 236 1 200 1 104 1 57 1 59 2 61 1 107 1 246 1 323 1 108 1 111 1 112 1 253 1 116 1 216 1 294 1 122 1 301 1 73 1 38 1 
270 1 135 1 275 1 87 1 143 1 278 1 154 1 57 1 59 2 203 1 61 1 323 1 112 1 215 1 255 1 294 1 257 1 300 1 122 1 301 1 38 1 
305 1 270 2 3 2 135 2 189 8 275 2 234 4 237 1 150 1 10 1 11 1 156 1 57 2 103 1 59 4 283 2 160 3 162 1 61 7 212 4 252 2 294 15 178 1 331 1 261 1 122 23 26 1 334 1 301 7 340 1 38 7 
305 1 270 2 3 2 135 2 189 8 275 2 234 4 237 1 150 1 10 1 11 1 156 1 57 2 103 1 59 4 283 2 160 3 162 1 61 7 212 4 252 2 294 15 178 1 331 1 261 1 122 23 26 1 334 1 301 7 340 1 38 7 
305 1 270 1 3 2 135 1 189 8 275 1 232 1 234 4 237 1 10 1 11 1 156 1 57 1 103 1 59 2 283 2 160 3 162 1 61 7 212 4 252 2 294 15 178 1 331 1 261 1 122 23 26 1 334 1 301 7 340 1 127 1 38 7 
305 1 270 2 3 2 135 2 189 7 275 2 234 4 237 1 150 1 11 1 156 1 57 2 103 1 59 4 283 2 160 2 162 1 61 7 212 4 252 2 294 14 178 1 331 1 261 1 122 21 26 1 334 1 301 7 183 1 340 1 38 7 
305 1 270 1 3 2 135 1 189 5 275 1 234 2 237 2 10 1 11 1 156 2 57 1 103 1 59 2 160 2 162 1 61 2 212 2 294 7 331 1 178 1 261 1 122 12 26 1 334 1 301 2 340 1 38 2 
270 1 135 1 189 1 275 1 42 1 87 1 43 1 278 1 48 1 236 2 200 1 97 1 154 1 57 1 158 1 59 2 321 1 15 1 246 2 323 2 111 1 112 2 215 2 326 1 216 2 217 1 294 1 258 1 172 2 330 1 122 2 
286 1 246 2 248 1 1 1 2 1 271 1 137 2 210 1 311 1 116 1 216 2 48 1 236 2 179 1 200 1 98 1 336 1 184 1 36 1 
286 1 246 1 248 1 1 1 271 1 137 2 210 1 311 1 216 1 236 1 48 1 200 1 98 1 30 1 336 1 184 1 36 1 
246 1 2 1 111 1 288 1 42 1 231 1 216 1 91 1 48 1 236 1 21 1 195 1 200 1 184 1 
286 1 246 1 248 1 1 1 2 1 271 1 137 2 210 1 311 1 216 1 48 1 236 1 179 1 200 1 98 1 336 1 184 1 36 1 
8 1 
70 1 84 1 56 1 254 1 75 1 343 1 327 1 
62 1 110 1 17 1 307 1 249 1 254 2 297 1 145 1 70 1 198 1 222 1 75 1 267 1 14 1 77 1 284 1 343 1 
246 1 83 1 111 1 290 1 42 1 253 1 231 1 141 1 216 1 48 2 236 1 297 1 145 1 200 1 55 1 77 1 284 1 
322 3 81 3 3 1 249 2 212 1 254 2 234 1 297 1 145 1 178 1 70 2 26 1 301 1 103 1 222 4 61 1 343 3 77 1 284 1 38 1 
306 1 187 1 188 1 139 1 145 1 315 1 197 1 320 1 284 1 203 1 205 1 323 1 109 2 110 1 112 1 215 1 255 1 297 1 176 1 70 2 300 1 32 1 74 1 267 1 35 1 77 1 343 2 38 2 
84 1 254 1 297 1 145 1 70 1 56 1 75 1 77 1 284 1 343 1 
301 1 343 1 61 1 38 1 
110 1 17 1 254 1 75 1 267 1 14 1 
246 1 110 1 17 1 231 1 216 1 295 1 236 1 297 1 145 1 146 1 329 1 29 1 267 1 14 2 343 1 77 1 284 1 
270 1 135 1 189 1 275 1 42 1 231 1 87 1 278 1 236 1 235 1 48 1 200 1 281 1 57 1 59 2 321 1 203 2 205 1 107 1 246 1 323 3 108 1 111 1 112 3 215 2 253 1 255 2 216 1 120 1 300 2 122 1 73 1 
322 2 81 2 249 2 254 4 93 1 297 1 145 1 70 1 28 1 29 1 222 4 75 2 343 2 77 1 284 1 
171 1 285 1 
171 1 285 1 
171 1 285 1 
171 1 285 1 
171 1 285 1 
171 1 285 1 
171 1 285 1 
171 1 285 1 
209 1 89 1 
270 1 306 1 3 1 135 1 189 5 139 1 188 1 275 1 232 1 234 1 314 1 153 2 57 1 59 2 320 2 105 3 212 1 294 5 261 1 122 10 26 1 35 1 127 1 38 2 
270 2 3 1 135 2 189 3 275 2 234 2 149 1 11 1 57 2 103 1 59 4 283 1 61 4 212 2 252 1 294 7 178 1 261 1 122 10 26 1 301 4 340 1 38 4 
270 2 3 1 135 2 189 2 275 2 234 1 149 1 11 1 57 2 103 1 59 4 61 2 212 1 294 4 178 1 261 1 122 6 26 1 301 2 340 1 38 2 
270 2 3 1 135 2 189 2 275 2 234 1 149 1 11 1 57 2 103 1 59 4 61 2 212 1 294 4 178 1 261 1 122 6 26 1 301 2 340 1 38 2 
270 1 306 1 3 1 135 1 189 5 139 1 188 1 275 1 232 1 234 1 314 1 153 2 57 1 59 2 320 2 105 3 212 1 294 5 261 1 122 10 26 1 35 1 127 1 38 2 
270 1 3 1 135 1 189 2 212 1 275 1 294 4 234 1 178 1 261 1 26 1 122 6 11 1 301 2 103 1 57 1 59 2 340 1 61 2 38 2 
270 2 3 1 135 2 189 2 275 2 234 1 149 1 11 1 57 2 103 1 59 4 61 2 212 1 294 4 178 1 261 1 122 6 26 1 301 2 340 1 38 2 
270 2 3 1 135 2 189 2 275 2 234 1 150 1 11 1 57 2 103 1 59 4 61 2 212 1 294 4 178 1 261 1 122 6 26 1 301 2 340 1 38 2 
306 1 189 3 139 2 188 2 232 1 294 2 314 2 122 5 153 2 320 1 35 1 127 1 105 4 38 1 
270 2 3 1 135 2 189 2 275 2 234 1 150 1 11 1 57 2 103 1 59 4 61 2 212 1 294 4 178 1 261 1 122 6 26 1 301 2 340 1 38 2 
270 2 306 1 135 2 139 1 188 1 189 5 275 2 232 1 314 2 153 2 57 2 59 4 320 2 105 4 294 5 25 1 122 10 35 1 127 1 38 2 
232 1 127 1 327 1 
270 1 135 1 275 1 294 1 149 1 122 1 301 1 57 1 59 2 61 1 38 1 
3 1 189 2 212 2 252 1 234 2 294 4 122 6 301 2 283 1 61 2 38 2 
270 1 306 1 135 1 188 1 139 1 189 6 275 1 312 1 232 1 234 2 314 1 153 2 57 1 283 1 59 2 320 2 105 3 61 2 212 2 252 1 294 8 25 1 122 14 301 2 35 1 127 1 38 4 
122 1 189 1 212 1 
122 1 294 1 234 1 
119 1 122 3 189 1 301 1 294 2 61 1 38 1 
270 1 3 1 135 1 189 2 212 1 275 1 294 4 234 1 178 1 261 1 26 1 122 6 11 1 301 2 103 1 57 1 59 2 340 1 61 2 38 2 
189 3 139 1 188 1 294 3 314 1 122 6 153 1 35 1 320 1 105 2 38 1 
0 1 306 1 270 1 135 1 188 1 139 1 189 2 275 1 232 1 294 1 314 1 25 1 122 3 153 1 57 1 59 2 105 2 127 1 
270 1 306 1 135 1 139 2 188 2 189 5 275 1 294 5 314 2 261 1 122 10 153 3 57 1 59 2 35 1 320 2 105 5 38 2 
270 1 135 1 275 1 294 1 261 1 122 1 301 1 57 1 59 2 38 1 
270 1 135 1 275 1 294 1 261 1 122 1 301 1 57 1 59 2 61 1 38 1 
0 1 270 3 135 3 189 2 139 1 188 1 275 3 294 1 314 1 25 1 150 1 261 1 122 3 153 1 57 3 59 6 105 2 
306 1 270 4 3 1 135 4 308 1 188 1 139 1 189 8 275 4 85 1 232 1 234 3 314 2 149 1 150 1 153 2 57 4 59 8 320 2 105 4 61 2 212 3 294 10 173 1 25 1 261 1 122 18 301 2 35 1 127 1 38 4 
323 1 281 1 112 1 65 1 215 1 241 1 279 1 
138 1 264 1 53 1 155 1 20 1 
246 1 195 1 200 1 111 1 42 1 231 1 216 1 91 1 48 1 327 1 236 1 
323 2 246 1 111 1 112 2 42 1 253 1 214 1 215 1 231 1 216 1 48 1 236 1 235 1 300 1 200 1 281 1 203 1 107 1 
323 2 246 1 39 1 111 3 112 2 42 2 253 2 214 1 215 2 115 1 216 1 48 1 236 1 235 1 300 2 200 1 281 1 218 1 32 1 13 1 224 1 203 1 107 1 
39 1 42 2 236 2 48 1 200 1 281 1 58 1 13 1 203 1 107 1 246 2 323 2 111 3 112 2 115 1 215 2 214 1 253 2 216 2 177 1 300 2 218 1 32 1 224 1 
246 3 39 1 208 1 110 2 111 4 42 1 253 1 115 1 231 1 254 1 117 1 141 1 216 3 48 1 236 3 259 1 200 1 218 1 319 1 58 1 75 1 267 2 14 1 
246 3 39 1 208 1 110 2 111 4 42 1 253 1 115 1 231 1 254 1 141 1 216 3 48 1 236 3 200 1 218 1 319 1 58 1 75 1 126 1 267 2 14 1 
246 1 200 1 228 1 216 1 48 1 236 1 
246 7 130 1 133 1 111 3 228 1 253 1 42 2 231 2 116 1 19 1 216 7 236 6 22 1 48 3 172 1 200 2 100 1 55 1 158 1 36 1 269 1 
270 2 188 1 189 4 275 2 87 2 278 2 200 1 281 1 104 1 105 3 203 1 107 1 108 1 111 1 112 2 214 1 215 1 116 1 216 1 293 1 294 4 300 1 122 8 32 1 35 1 127 1 38 2 306 1 135 2 139 1 42 1 232 1 235 1 236 1 48 1 314 1 238 1 153 2 154 1 57 2 59 4 320 2 246 1 323 2 253 1 326 1 73 1 
84 1 231 1 141 1 236 1 145 2 96 1 56 1 319 1 14 2 284 2 246 1 110 3 208 1 17 1 111 2 287 1 254 1 216 1 295 1 297 2 70 1 125 1 220 1 75 1 126 1 267 3 343 1 77 2 
246 1 111 1 228 1 290 1 253 1 42 1 216 1 236 1 48 2 200 1 319 1 55 1 304 1 
246 4 111 1 42 1 231 1 116 1 216 4 91 1 48 1 236 4 195 1 200 1 58 1 128 1 
246 2 129 1 64 1 130 1 111 1 115 1 253 1 42 1 216 2 236 2 48 2 200 1 302 1 269 1 
246 1 248 1 137 1 200 1 210 1 231 1 311 1 216 1 48 1 236 1 
246 2 111 1 42 1 116 1 216 2 236 2 48 1 258 1 200 1 158 1 36 1 
246 5 133 1 111 3 115 1 42 2 231 1 116 1 216 5 91 1 236 4 48 2 195 1 200 2 100 1 158 1 128 1 
246 5 111 3 115 1 42 2 231 1 116 1 216 5 91 1 236 4 48 2 195 1 263 1 200 2 100 1 158 1 128 1 
323 2 246 1 111 1 112 2 42 1 253 1 214 1 215 1 231 1 216 1 48 1 236 1 177 1 300 1 200 1 281 1 203 1 107 1 
246 1 130 1 200 1 111 1 42 1 253 1 55 1 115 1 216 1 48 2 22 1 236 1 269 1 
323 1 79 1 112 1 215 1 43 1 217 1 174 1 330 1 101 1 
250 1 101 1 296 1 
79 1 101 1 45 1 174 1 
79 1 110 1 250 1 101 1 220 1 276 1 45 1 267 1 296 1 174 1 
165 1 181 1 327 1 106 1 
148 1 165 1 181 1 27 1 337 1 106 1 245 1 
148 1 31 1 303 1 
165 1 291 1 18 2 69 1 94 1 148 3 181 1 27 3 337 1 159 1 106 1 245 1 
148 2 165 1 199 1 181 1 51 1 27 2 337 1 106 1 245 1 
1 1 248 1 324 1 137 1 148 1 27 1 337 1 339 1 159 1 245 1 106 1 
148 1 181 1 27 1 337 1 159 1 106 1 245 1 
148 1 165 1 181 2 27 1 337 1 159 1 245 1 
90 1 148 2 72 1 181 1 27 2 202 1 337 2 159 1 106 1 245 2 
165 1 193 1 170 1 148 3 181 1 51 2 27 3 337 1 339 1 159 1 76 1 245 1 106 2 
286 1 1 1 248 1 165 1 137 2 311 1 148 2 181 1 51 1 27 2 337 1 157 1 159 1 106 1 245 1 
165 1 289 1 148 4 199 1 181 1 51 2 27 4 337 2 339 1 159 1 76 1 245 2 106 2 
148 1 165 1 181 1 27 1 337 1 159 1 106 1 245 1 
165 2 18 1 69 1 94 1 298 1 148 4 181 2 51 2 27 4 337 1 339 1 76 1 245 1 106 3 
165 1 251 1 148 2 181 1 265 1 51 1 27 2 337 1 159 1 185 1 106 1 245 1 
165 1 310 1 18 2 69 1 94 2 148 3 181 1 27 3 337 1 159 1 106 1 245 1 
152 1 282 2 225 1 106 2 
148 1 27 1 337 1 159 1 60 1 245 1 
148 2 165 1 181 1 51 1 27 2 193 1 337 1 159 1 106 1 245 1 
227 1 
148 1 165 1 181 1 27 1 337 1 159 1 106 1 245 1 
165 1 193 1 18 1 148 3 51 1 181 1 27 3 337 1 159 1 245 1 106 1 
298 1 339 1 76 1 106 1 
181 1 106 1 

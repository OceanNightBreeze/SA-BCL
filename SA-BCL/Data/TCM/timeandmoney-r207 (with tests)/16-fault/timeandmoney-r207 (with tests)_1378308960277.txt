#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (290,296) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 114 322 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 244 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 244 154 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 332 295 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 165 332 295 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 165 332 210 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 332 295 286 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 332 295 286 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (40,367) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (290,296) 155 180 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 37 202 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 114 322 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 248 134 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (290,296) 155 101 (7,113) (7,113) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 4427 | = null
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1870 | -= -> >>=
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1474 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 9 357 6 33 3 79 1 190 2 94 1 80 2 168 2 361 1 302 1 59 1 147 1 282 1 172 1 212 1 123 2 197 1 340 2 126 9 369 1 182 1 203 5 218 1 372 1 349 1 241 2 269 4 317 2 
135 9 357 6 33 3 79 1 190 2 94 1 80 2 168 2 361 1 302 1 59 1 147 1 282 1 172 1 212 1 123 2 197 1 126 9 340 2 369 1 182 1 203 5 218 1 372 1 349 1 241 2 269 4 317 2 
135 10 357 7 33 4 79 1 190 2 94 1 80 2 168 2 361 1 302 1 59 1 147 1 282 1 172 1 212 1 123 2 197 1 126 10 340 2 369 1 182 1 203 6 218 1 372 1 349 1 241 2 269 5 317 2 
135 7 357 4 33 2 79 1 190 2 94 1 80 2 168 2 361 1 302 1 59 1 147 1 282 1 212 1 123 2 197 1 126 7 340 1 369 1 182 1 203 4 218 1 372 1 349 1 241 2 269 3 317 2 
123 1 135 4 357 3 126 4 340 2 33 1 79 1 190 1 80 1 203 3 372 1 241 1 147 1 282 1 269 2 172 1 212 1 317 1 
135 2 126 2 79 1 190 1 35 1 80 1 168 1 361 1 59 1 203 1 372 1 241 1 185 1 212 1 315 1 317 1 
135 3 357 1 126 3 33 1 79 1 190 2 168 1 302 1 203 2 372 1 269 1 212 1 317 2 
357 7 135 9 33 3 79 1 190 2 94 1 80 1 168 1 302 1 147 1 282 1 172 1 212 1 123 1 126 9 340 2 267 1 203 5 218 1 372 1 241 1 352 1 269 4 317 2 
357 7 135 9 33 3 79 1 190 2 94 1 80 1 168 1 302 1 147 1 282 1 172 1 212 1 123 1 126 9 340 2 267 1 203 5 218 1 372 1 241 1 352 1 269 4 317 2 
346 1 163 1 287 1 
287 1 242 1 221 2 
90 2 183 2 353 2 159 1 160 2 41 1 43 2 42 2 
0 1 90 2 162 2 111 2 225 2 3 2 207 1 227 1 300 1 191 1 8 1 117 1 81 1 330 1 118 2 60 1 11 1 41 1 43 2 42 2 256 1 99 1 198 1 67 1 371 1 107 1 183 2 28 1 353 2 159 1 374 1 160 2 375 1 
90 1 2 1 183 1 119 1 198 1 353 1 159 1 160 1 43 1 42 1 
122 1 75 1 175 1 198 1 287 1 288 1 346 1 229 1 109 1 183 1 281 1 42 1 43 1 133 1 
122 1 90 1 175 2 198 1 287 1 288 1 346 1 229 1 109 1 183 1 281 2 353 1 160 1 42 1 43 1 
192 1 26 1 175 1 281 1 177 1 
90 1 164 1 2 1 119 1 281 1 121 1 42 1 43 1 65 1 175 1 198 1 287 1 177 1 346 1 26 1 183 1 159 1 353 1 160 1 
26 1 175 1 281 1 
90 1 164 1 2 1 175 1 198 1 177 1 183 1 119 1 281 1 159 1 353 1 160 1 42 1 43 1 
287 1 
90 1 164 1 2 1 327 1 119 1 281 1 121 1 42 1 43 1 175 1 198 1 287 1 177 1 346 1 26 1 183 1 159 1 353 1 160 1 
294 1 90 1 164 1 2 1 273 2 76 1 136 2 226 1 55 2 143 1 97 4 209 2 119 1 365 1 281 4 304 1 121 1 284 1 43 1 42 1 152 1 234 2 260 2 175 4 236 1 198 1 200 1 177 2 287 2 20 5 104 1 346 2 183 1 26 2 69 1 353 1 159 1 160 1 
370 1 90 3 183 3 353 3 160 1 41 1 43 3 42 3 
90 1 2 1 183 1 198 1 353 1 43 1 42 1 
90 1 183 1 198 1 353 1 334 1 160 1 228 1 43 1 42 1 
0 1 90 3 162 1 111 1 225 2 137 1 3 1 207 1 227 1 8 1 229 1 81 1 118 1 60 1 281 1 334 1 41 1 43 3 42 3 122 1 256 1 99 1 175 1 198 1 288 1 105 1 67 1 371 1 370 1 107 1 109 1 183 3 350 1 28 1 353 3 159 1 160 2 375 1 
278 1 90 1 370 1 75 1 183 2 353 1 41 1 43 2 42 2 
122 1 90 3 175 1 137 1 198 1 287 1 288 1 144 1 370 2 229 1 109 1 183 3 350 1 281 1 353 3 334 1 160 1 42 3 43 3 
90 2 370 1 40 1 183 2 290 1 353 2 334 1 160 1 42 2 43 2 
162 1 111 1 99 1 3 1 198 1 227 1 300 1 81 1 41 1 
162 1 111 1 45 1 3 1 77 1 227 1 56 1 344 1 181 1 184 1 41 1 366 1 336 1 43 1 42 1 
0 1 296 1 225 2 297 1 53 1 92 1 55 1 207 1 8 1 277 1 251 1 118 4 40 2 60 1 367 1 255 1 234 1 155 2 371 1 107 2 240 1 290 2 28 1 374 2 
229 1 90 1 183 1 198 1 61 1 353 1 43 1 42 1 
163 1 41 1 
90 1 228 1 183 2 353 1 334 1 160 1 41 2 42 2 43 2 
40 1 290 1 155 1 
162 1 111 1 99 1 261 1 3 1 198 1 227 1 300 1 81 1 41 1 
90 1 162 1 99 1 111 1 3 1 227 1 370 1 81 1 183 1 290 1 350 1 353 1 42 1 43 1 
90 4 64 1 198 1 300 1 250 1 370 2 183 4 350 1 353 4 334 1 160 1 41 1 42 4 43 4 
90 2 2 1 183 2 61 1 198 1 353 2 43 2 42 2 
363 1 274 1 220 1 
363 1 274 1 220 1 
363 1 195 1 220 1 
363 1 195 1 220 1 
363 1 195 1 220 1 
363 1 220 1 
363 1 220 1 
36 1 271 1 
36 1 271 1 
36 1 271 1 
363 1 274 1 220 1 
363 1 204 1 220 1 
95 1 36 1 363 2 268 1 271 1 220 2 
161 1 124 2 224 1 306 3 257 1 63 2 245 2 341 2 175 2 287 1 128 2 169 1 363 2 268 1 171 1 130 1 131 1 281 2 220 2 
90 2 245 1 299 1 169 1 362 1 363 1 82 1 364 1 281 1 335 1 41 1 42 2 43 2 124 1 306 1 341 1 175 1 237 1 128 1 86 1 183 2 204 1 353 2 220 1 
123 1 241 1 80 1 
241 1 80 1 315 1 
123 2 223 1 146 1 10 1 80 3 315 1 
123 1 223 1 146 1 351 1 80 2 315 1 
123 1 223 1 146 2 80 2 315 1 
136 1 92 1 55 1 208 1 209 1 97 3 328 1 251 1 170 1 281 4 150 1 335 1 121 1 125 1 234 1 260 1 175 4 177 4 287 1 237 1 178 1 20 1 104 1 239 1 86 1 346 1 26 1 186 1 205 1 132 2 221 1 
136 2 92 3 298 1 55 3 325 1 167 1 208 6 192 5 209 2 97 8 331 1 251 3 170 2 281 8 150 3 335 4 121 1 125 2 234 3 260 2 175 8 177 7 66 1 287 5 20 6 104 1 239 1 157 5 346 1 87 1 26 6 69 1 242 3 205 6 221 9 
90 1 164 1 2 1 136 1 92 1 55 1 208 2 209 1 97 3 328 1 251 1 119 1 170 1 281 3 335 1 150 1 43 1 42 1 125 1 234 1 260 1 175 3 198 1 287 3 177 2 20 2 346 1 183 1 69 1 353 1 159 1 186 1 160 1 242 2 132 1 205 2 221 4 
136 1 92 1 55 1 167 1 208 2 209 1 97 3 328 1 251 1 170 1 281 2 335 1 150 1 125 1 234 1 260 1 175 2 287 2 177 1 20 2 69 1 186 1 242 2 205 2 132 1 221 4 
181 1 336 1 
74 1 307 1 264 1 279 2 181 1 184 1 336 2 
279 1 163 1 336 1 
323 1 336 1 
307 1 
181 1 184 1 336 1 
145 1 336 1 
338 1 234 1 76 1 297 3 113 1 101 2 55 1 201 1 7 1 277 2 143 1 107 3 118 7 333 1 231 1 374 4 304 1 
338 1 234 1 76 1 297 3 113 1 101 2 55 1 201 1 7 1 277 2 143 1 107 3 118 7 333 1 231 1 374 4 304 1 
338 1 234 1 76 1 297 3 113 1 101 2 55 1 201 1 7 1 301 1 277 2 143 1 107 3 118 7 333 1 231 1 374 4 304 1 
0 1 76 5 320 1 225 2 113 1 297 17 92 3 139 1 207 1 55 6 7 1 277 8 143 5 118 37 251 3 60 1 333 2 231 9 150 3 14 1 304 2 17 3 153 1 62 1 338 2 234 6 236 1 176 1 101 2 238 1 201 1 107 18 266 4 28 1 374 19 
0 2 76 1 225 4 297 4 113 1 55 1 207 2 7 1 277 3 143 1 118 9 60 2 333 1 231 1 14 1 304 1 338 1 234 1 18 1 101 2 107 4 28 2 373 1 374 5 
162 1 111 1 357 1 135 2 3 1 138 1 79 1 190 1 80 2 168 1 10 1 253 1 212 1 366 1 15 1 123 1 126 2 310 1 102 1 368 1 179 1 344 1 68 1 203 1 372 1 241 1 88 1 71 1 315 1 317 1 
162 1 111 1 135 3 357 2 3 1 138 1 79 1 190 1 80 2 115 1 168 1 10 1 252 1 196 1 253 1 366 1 15 1 123 1 126 3 310 1 102 1 179 1 344 1 68 1 203 1 372 1 241 1 71 1 315 1 317 1 
162 1 111 1 135 2 357 2 3 1 138 1 79 1 80 2 168 1 115 1 252 1 10 1 253 1 366 1 15 1 123 1 126 2 310 1 102 1 344 1 68 1 203 1 372 1 241 1 315 1 
162 1 110 1 111 1 135 1 3 1 138 2 227 1 190 1 168 2 96 1 196 1 253 2 366 1 336 1 15 2 126 1 259 1 44 1 235 1 344 1 181 1 317 1 318 1 
123 1 162 1 111 1 135 1 126 1 3 1 102 1 310 1 138 1 179 1 368 1 190 1 80 2 344 1 168 1 115 1 68 1 10 1 241 1 253 1 315 1 366 1 71 1 212 1 317 1 15 1 
219 1 
125 1 162 1 111 1 136 1 260 1 175 1 3 1 322 1 54 1 20 1 227 1 114 1 104 1 97 1 209 1 26 2 281 1 121 1 
122 1 188 1 72 1 1 2 75 1 244 1 309 1 175 2 198 1 288 1 229 1 313 1 327 1 109 1 26 2 183 1 280 1 281 2 121 1 42 1 43 1 133 1 
188 1 72 1 75 1 1 3 319 1 229 1 327 1 280 1 281 2 121 1 43 1 42 1 122 1 309 1 175 2 198 1 287 1 288 1 313 1 346 1 109 1 26 1 183 1 133 1 
188 1 122 1 72 1 319 1 1 3 75 1 244 1 154 1 309 1 175 2 198 1 288 1 229 1 313 1 327 1 109 1 26 2 183 1 280 1 281 2 121 1 42 1 43 1 133 1 
327 1 26 1 175 1 281 1 121 1 
188 1 72 1 319 1 165 1 75 1 1 3 244 1 136 1 5 1 116 2 229 1 97 1 209 1 280 1 149 1 281 2 121 1 213 2 42 1 43 1 122 1 154 1 260 1 309 1 175 2 198 1 20 1 343 2 288 1 104 1 313 1 109 1 26 2 183 1 242 1 221 1 133 1 222 1 
188 1 72 1 295 1 319 1 165 1 75 1 1 3 244 1 136 1 116 2 229 1 97 1 209 1 332 1 280 1 149 1 281 2 121 1 213 2 43 1 42 1 122 1 214 1 154 1 260 1 309 1 175 2 198 1 20 1 343 2 288 1 104 1 313 1 109 1 26 2 183 1 242 1 222 1 133 1 
188 1 72 1 295 1 165 1 75 1 1 2 244 1 136 1 116 1 229 1 97 1 209 1 332 1 280 1 149 1 281 2 121 1 213 1 43 1 42 1 122 1 214 1 154 1 260 1 309 1 175 2 198 1 20 1 343 1 288 1 104 1 313 1 109 1 26 2 183 1 242 1 222 1 133 1 
188 1 72 1 165 1 75 1 1 2 244 1 136 1 116 1 229 1 97 1 209 1 210 1 332 1 280 1 281 2 121 1 213 1 43 1 42 1 305 1 122 1 154 1 260 1 309 1 175 2 198 1 20 1 103 1 288 1 104 1 313 1 109 1 26 2 183 1 31 1 316 1 221 1 133 1 
188 1 72 1 295 1 165 1 75 1 1 4 319 2 244 2 136 1 116 2 229 1 97 1 209 1 332 1 280 1 149 1 281 2 121 1 213 2 43 1 42 1 122 1 214 1 260 1 286 1 154 2 309 1 175 2 198 1 20 1 343 2 288 1 104 1 313 1 109 1 183 1 26 3 242 1 222 1 133 1 
188 1 72 1 295 1 165 1 75 1 1 4 319 2 244 2 136 1 116 2 229 1 97 1 209 1 332 1 280 1 149 1 281 2 121 1 213 2 43 1 42 1 122 1 214 1 260 1 286 1 154 2 309 1 175 2 198 1 20 1 343 2 288 1 104 1 313 1 109 1 183 1 26 3 242 1 222 1 133 1 
188 1 72 1 319 1 165 1 75 1 1 3 244 1 136 1 5 1 116 2 229 1 97 1 209 1 280 1 281 2 121 1 213 2 42 1 43 1 122 1 305 1 154 1 260 1 309 1 175 2 198 1 20 1 103 1 288 1 104 1 313 1 109 1 26 2 183 1 31 2 221 1 133 1 
0 1 225 2 297 1 53 1 92 1 155 1 207 1 55 1 8 1 371 1 240 1 40 1 118 2 290 1 60 1 28 1 231 1 374 2 
255 1 0 1 234 1 225 2 297 1 155 1 207 1 8 1 277 1 371 1 107 2 240 1 40 1 118 2 251 1 290 1 60 1 28 1 
0 1 225 2 297 2 92 1 55 1 207 1 8 1 277 1 118 4 40 2 251 1 60 1 231 1 150 1 234 1 155 2 371 1 107 2 240 1 290 2 28 1 374 2 
0 1 225 2 297 1 166 1 53 1 92 1 155 1 207 1 55 1 8 1 371 1 40 1 118 2 290 1 60 1 28 1 231 1 374 2 
255 1 0 1 234 1 225 2 297 1 166 1 155 1 207 1 8 1 277 1 371 1 107 2 40 1 118 2 251 1 290 1 60 1 28 1 
0 1 225 2 297 2 92 1 166 1 55 1 207 1 8 1 277 1 118 4 40 2 251 1 60 1 231 1 150 1 234 1 155 2 371 1 107 2 290 2 28 1 374 2 
0 1 225 2 297 2 92 1 55 1 207 1 8 1 277 1 118 4 40 2 251 1 60 1 231 1 150 1 234 1 155 2 371 1 107 2 290 2 28 1 374 2 
0 1 162 1 111 1 225 2 3 1 207 1 227 1 8 1 300 1 117 1 81 1 118 2 60 1 41 1 256 1 99 1 198 1 371 1 107 1 28 1 374 1 375 1 
162 1 0 1 111 1 225 2 77 1 3 1 207 1 56 1 227 1 249 1 8 1 117 1 118 2 60 1 41 1 366 1 336 1 42 1 43 1 256 1 45 1 344 1 371 1 181 1 107 1 184 1 28 1 374 1 
0 1 225 2 297 2 92 1 55 1 207 1 8 1 277 1 9 1 118 4 40 2 251 1 60 1 231 1 150 1 234 1 155 2 371 1 107 2 290 2 28 1 374 2 
0 1 162 1 111 1 225 2 297 1 3 1 92 1 207 1 55 1 8 1 277 1 81 1 40 1 118 3 251 1 60 1 150 1 99 1 234 1 155 1 215 1 371 1 107 2 290 1 28 1 88 1 374 1 375 1 
0 1 90 1 225 2 297 1 92 1 207 1 55 1 8 1 141 1 9 1 251 1 118 3 40 1 60 1 231 1 334 1 150 1 42 1 43 1 234 1 155 1 371 1 107 1 183 1 290 1 28 1 353 1 160 1 374 2 
163 1 0 1 76 1 225 2 113 1 297 2 207 1 55 1 7 1 8 1 277 2 143 1 40 1 118 6 60 1 304 1 41 2 234 1 101 1 155 1 371 1 107 3 240 1 290 1 28 1 374 3 
0 2 225 4 297 2 92 2 207 2 55 2 8 1 277 1 117 1 9 1 118 14 40 4 251 1 60 2 231 1 150 2 41 1 17 3 256 1 62 1 234 1 47 1 155 11 238 1 216 1 23 1 371 2 107 6 266 3 290 11 28 2 354 1 374 8 
162 1 0 1 90 1 111 1 225 2 91 1 3 1 207 1 227 1 8 1 117 1 81 1 9 1 40 1 118 2 60 1 41 1 43 1 42 1 256 1 99 1 261 1 156 1 217 1 371 1 370 1 107 1 183 1 350 1 28 1 353 1 374 1 
0 2 90 1 162 1 111 1 225 4 297 1 92 1 3 1 55 1 207 2 227 1 8 2 277 1 81 1 9 1 251 1 40 3 118 7 60 2 150 1 43 1 42 1 232 1 256 1 99 1 234 1 339 1 155 3 215 1 263 1 180 1 371 2 370 1 107 4 183 1 290 3 350 1 28 2 353 1 374 3 375 1 
0 2 90 1 225 4 3 7 227 2 191 2 8 2 60 2 194 1 13 1 336 4 19 1 235 1 344 3 22 1 106 1 107 1 240 1 28 2 353 1 355 1 162 7 111 6 112 1 166 1 207 2 115 1 117 1 118 2 366 4 42 1 43 1 256 1 44 1 258 1 85 1 371 2 370 1 181 3 183 1 184 1 88 1 374 1 
0 1 90 1 225 2 297 1 92 1 207 1 55 1 8 1 277 1 9 1 40 1 118 3 251 1 60 1 334 1 150 1 42 1 43 1 234 1 155 1 371 1 158 1 107 2 183 1 290 1 28 1 353 1 160 1 374 1 
243 1 0 2 225 4 247 1 297 6 4 1 92 3 207 2 55 3 142 1 277 3 118 19 251 3 60 2 231 3 98 2 283 2 150 3 17 1 62 1 234 3 18 1 238 1 265 1 107 10 266 2 347 1 28 2 70 1 374 9 
243 1 0 3 225 6 297 4 4 2 92 3 324 1 207 3 55 3 142 1 277 2 118 26 251 2 60 3 231 2 12 1 98 1 14 2 283 4 150 3 17 2 62 2 234 2 18 1 100 1 107 12 266 2 347 2 24 1 28 3 70 1 314 1 29 1 374 14 
0 3 225 6 92 4 4 1 55 5 324 1 7 1 142 1 277 4 143 1 60 3 231 4 12 1 150 4 283 4 14 1 98 1 17 3 62 3 234 5 18 1 100 1 101 1 238 1 107 21 347 2 24 1 28 3 70 1 29 1 243 1 76 1 297 8 113 1 247 1 207 3 251 4 118 41 304 1 48 1 266 4 374 20 314 1 
243 1 0 4 76 1 225 8 247 1 113 1 297 7 4 1 92 4 324 1 207 4 55 5 7 1 142 1 277 4 143 1 118 38 251 3 60 4 12 1 231 3 98 1 14 2 283 4 150 4 304 1 17 3 62 3 234 4 100 1 18 1 101 1 238 1 48 1 107 18 266 4 24 1 347 2 28 4 70 1 314 1 29 1 374 20 
243 1 0 2 76 1 225 4 113 1 297 14 4 1 92 7 324 1 207 2 55 8 7 1 142 1 277 7 143 1 118 52 251 7 60 2 12 1 231 7 98 1 14 1 283 4 150 7 304 1 17 4 62 2 234 8 100 1 18 1 101 1 238 2 216 2 107 25 266 4 24 1 347 1 28 2 70 1 314 1 29 1 374 27 
161 1 124 1 306 2 257 1 63 1 245 1 341 1 175 1 287 1 128 1 169 1 363 1 268 1 171 1 130 1 131 1 281 1 220 1 
161 1 124 1 306 2 257 1 63 1 245 1 341 1 175 1 287 1 128 1 169 1 363 1 268 1 171 1 130 1 131 1 281 1 220 1 
161 1 124 1 306 2 257 1 63 1 245 1 341 1 175 1 287 1 128 1 169 1 363 1 268 1 171 1 130 1 131 1 281 1 220 1 
95 1 84 1 274 1 
95 1 84 1 274 1 
195 1 312 1 
95 1 195 1 312 1 
362 1 299 1 
90 2 245 1 358 1 299 1 362 1 363 1 82 1 364 1 281 1 335 1 41 1 43 2 42 2 124 1 306 1 257 1 63 1 341 1 175 1 177 1 237 1 128 1 86 1 183 2 204 1 353 2 220 1 
161 1 124 1 363 1 341 1 245 1 268 1 171 1 360 1 128 1 220 1 
364 1 204 1 
124 1 363 1 348 1 27 1 341 1 245 1 275 1 128 1 220 1 
84 1 274 1 
95 1 195 1 312 1 
162 2 0 1 356 1 111 2 225 2 3 2 207 1 8 1 276 1 191 2 117 1 9 1 118 2 60 1 211 1 366 1 336 1 43 2 42 2 256 1 285 1 344 1 22 1 129 1 106 1 371 1 181 1 107 1 183 2 28 1 374 1 
123 1 162 2 111 2 3 2 199 1 310 1 102 1 80 2 344 1 115 1 10 1 241 1 292 1 253 1 88 1 315 1 366 1 71 1 187 1 
123 1 162 1 111 1 3 1 78 1 199 1 310 1 102 1 80 2 344 1 115 1 10 1 241 1 253 1 315 1 71 1 366 1 
162 1 111 1 259 1 44 1 3 1 235 1 227 1 344 1 181 1 83 1 253 1 366 1 336 1 187 1 
123 1 162 1 111 1 3 1 199 1 310 1 102 1 80 2 344 1 115 1 10 1 241 1 292 1 253 1 315 1 366 1 71 1 187 1 
73 1 
346 1 163 1 97 1 226 1 287 1 20 1 284 1 
136 1 260 1 287 1 20 1 343 1 104 1 346 1 209 1 97 1 26 1 149 1 121 1 242 1 221 1 222 1 
162 1 111 1 136 1 260 1 3 1 227 1 344 1 104 1 209 1 202 1 37 1 366 1 
90 1 2 1 273 2 136 2 92 2 54 1 55 2 324 1 97 8 193 1 12 1 150 2 17 1 62 1 234 2 100 1 198 1 287 5 20 5 104 2 346 2 24 1 26 1 159 1 353 1 29 1 160 1 242 3 205 5 294 1 164 1 246 1 208 5 209 2 251 2 119 1 121 1 43 1 42 1 125 1 260 2 266 1 183 1 221 6 
294 1 90 1 164 1 2 1 273 2 76 1 136 1 55 2 143 1 209 1 97 2 119 1 281 1 304 1 43 1 42 1 214 1 234 1 260 1 236 1 175 1 198 1 20 2 104 1 183 1 159 1 353 1 160 1 
136 1 260 1 226 1 287 1 20 1 104 1 346 1 209 1 97 1 284 1 
294 1 273 2 234 2 92 2 55 2 287 5 20 5 180 1 208 5 97 5 251 2 150 2 205 5 242 5 221 10 
90 1 164 1 2 1 198 1 287 1 346 1 183 1 26 1 119 1 353 1 159 1 160 1 121 1 43 1 42 1 
125 1 162 1 233 1 111 1 136 1 260 1 3 1 322 1 54 1 20 1 227 1 104 1 114 1 97 1 209 1 26 2 121 1 
162 1 90 2 0 1 111 1 225 2 3 1 207 1 227 1 8 1 81 1 118 1 60 1 41 1 43 2 42 2 256 1 99 1 67 1 371 1 107 1 183 2 28 1 353 2 159 1 160 2 375 1 
125 1 136 1 260 1 101 1 54 1 287 4 20 2 104 1 208 2 346 2 209 1 97 1 205 2 242 2 221 4 
124 1 337 1 341 1 
124 1 337 1 341 1 
124 1 321 1 341 1 
124 1 321 1 341 1 
124 1 321 1 341 1 
124 1 341 1 
363 1 220 1 
124 1 337 1 341 1 
161 1 124 1 362 1 341 1 293 1 
0 2 234 1 76 1 225 4 297 3 113 1 101 1 55 1 207 2 7 1 277 2 143 1 107 4 118 8 60 2 28 2 231 1 374 4 14 1 304 1 
143 1 163 1 107 3 234 1 118 6 76 1 297 2 113 1 101 1 55 1 374 3 304 1 7 1 277 2 
0 1 234 1 225 2 297 2 92 1 207 1 55 1 277 1 107 2 251 1 118 4 60 1 28 1 231 1 150 1 374 2 89 1 
62 1 234 1 297 2 92 1 55 1 238 1 277 1 107 4 266 2 251 1 118 7 231 1 374 3 150 1 17 1 
0 2 76 2 225 4 113 1 297 9 92 2 55 3 207 2 7 1 6 1 277 5 143 2 118 23 251 2 60 2 231 4 150 2 14 2 304 1 17 2 234 3 101 1 47 1 238 1 216 1 107 12 266 2 28 2 374 11 
107 1 266 1 118 1 
118 1 374 1 17 1 
0 1 234 1 225 2 297 3 92 1 207 1 55 1 277 2 180 1 107 3 118 6 251 1 60 1 28 1 231 1 150 1 374 3 89 1 
0 1 225 2 297 2 92 2 207 1 55 2 324 1 277 1 118 12 251 2 60 1 231 1 12 1 150 2 17 1 62 1 234 2 18 1 100 1 107 6 266 1 24 1 28 1 374 6 29 1 
234 1 76 1 297 2 55 1 277 1 143 1 107 3 118 6 231 1 374 3 304 1 
0 1 76 1 225 2 297 2 113 1 207 1 6 1 7 1 277 1 143 1 107 2 118 3 60 1 28 1 231 1 374 1 14 1 
0 1 76 2 234 2 225 2 18 1 297 5 236 1 207 1 55 2 277 3 143 2 107 5 118 10 60 1 28 1 231 2 374 5 304 1 
0 1 225 2 18 1 297 1 92 1 207 1 55 1 118 2 60 1 28 1 231 1 374 2 
0 1 234 1 225 2 18 1 297 2 92 1 207 1 55 1 277 1 107 2 251 1 118 4 60 1 28 1 231 1 150 1 374 2 
0 3 76 1 225 6 18 1 247 1 297 2 207 3 6 1 277 1 143 1 107 2 118 3 60 3 28 3 231 1 14 1 374 1 
0 4 76 2 225 8 113 1 247 1 297 10 92 3 139 1 207 4 55 4 7 1 277 5 143 2 118 27 251 3 60 4 231 5 14 1 150 3 304 1 17 3 153 1 62 1 234 4 18 1 176 1 101 1 238 1 107 14 266 4 28 4 374 13 89 1 
0 1 76 1 225 2 113 1 297 2 55 1 207 1 7 1 277 2 143 1 118 8 60 1 304 1 17 1 62 1 234 1 18 1 101 1 107 4 266 1 24 1 28 1 374 4 
0 2 76 1 225 4 113 1 297 3 92 1 207 2 55 2 7 1 277 2 143 1 118 11 60 2 231 1 150 1 304 1 17 1 62 1 234 1 18 1 101 1 238 1 107 5 266 2 24 1 28 2 374 6 89 1 
0 3 76 1 225 6 113 1 297 4 92 2 324 1 207 3 55 3 7 1 277 3 143 1 118 19 251 2 60 3 231 1 12 1 150 2 14 1 304 1 17 1 62 1 234 3 18 1 100 1 101 1 107 10 266 1 24 1 28 3 374 9 29 1 89 1 
0 3 76 1 225 6 113 1 297 5 92 2 207 3 55 3 324 1 7 1 277 3 143 1 118 17 251 1 60 3 231 2 12 1 14 1 150 2 304 1 17 1 62 1 234 2 18 1 100 1 101 1 107 7 266 1 24 1 28 3 374 10 29 1 89 1 
0 1 76 1 225 2 113 1 297 2 55 1 207 1 7 1 277 2 143 1 118 8 60 1 304 1 17 1 62 1 234 1 18 1 101 1 107 4 266 1 24 1 28 1 374 4 
0 1 225 2 297 2 92 2 207 1 55 2 324 1 277 1 118 12 251 2 60 1 231 1 12 1 150 2 17 1 62 1 234 2 18 1 100 1 107 6 266 1 24 1 28 1 374 6 29 1 
0 4 76 1 225 8 113 1 297 5 92 2 324 1 207 4 55 3 7 1 277 3 143 1 118 18 251 1 60 4 231 2 12 1 150 2 14 2 304 1 17 1 62 1 234 2 18 1 100 1 101 1 107 8 266 1 24 1 28 4 29 1 374 10 89 1 
0 4 225 8 247 1 297 6 92 3 324 1 207 4 55 3 277 3 118 16 251 2 60 4 231 3 12 1 150 3 14 2 17 1 62 1 234 2 18 1 100 1 107 7 266 1 24 1 28 4 29 1 374 9 
234 1 76 3 113 2 297 6 55 1 7 1 277 3 143 3 107 4 118 7 231 3 374 3 304 1 
0 4 76 1 225 8 113 1 247 1 297 4 92 2 324 1 207 4 55 3 7 1 277 3 143 1 118 18 251 1 60 4 231 1 12 1 150 2 14 2 304 1 17 1 62 1 234 2 18 1 100 1 101 1 107 8 266 1 24 1 28 4 29 1 374 10 
278 1 75 1 183 1 248 1 41 1 43 1 42 1 
134 1 46 1 248 1 30 1 49 1 16 1 
163 1 162 1 181 1 111 1 44 1 235 1 3 1 227 1 366 1 344 1 336 1 
90 1 162 1 111 1 99 1 3 1 198 1 227 1 300 1 370 1 183 1 353 1 41 1 42 1 43 1 
90 1 162 1 111 1 99 1 3 1 198 1 300 1 370 1 329 1 183 1 353 1 41 1 42 1 43 1 
162 2 90 2 111 2 3 2 56 1 229 1 145 1 329 1 173 1 41 1 366 1 336 3 43 2 42 2 254 1 45 1 198 1 344 1 370 1 181 2 109 1 183 2 184 2 353 1 
162 3 111 3 175 2 3 3 287 1 323 1 227 1 288 1 344 1 346 1 279 1 145 1 181 1 329 1 26 1 120 1 184 1 281 2 52 1 173 1 366 1 336 4 254 1 
162 3 111 3 175 2 3 3 93 1 287 1 323 1 227 1 288 1 344 1 346 1 279 1 145 1 181 1 329 1 26 1 184 1 281 2 173 1 366 1 336 4 254 1 
50 1 162 1 111 1 3 1 366 1 344 1 
162 6 74 1 111 5 112 1 3 6 227 2 191 1 115 1 194 1 366 3 336 3 258 1 19 1 342 1 344 2 22 1 181 2 184 1 88 1 355 1 
0 2 90 1 162 1 111 1 76 1 225 4 297 1 113 1 3 1 55 1 207 2 7 1 8 2 276 1 277 1 143 1 9 1 81 1 118 5 60 2 41 2 304 1 43 1 42 1 232 1 99 1 234 1 155 1 101 1 215 1 371 2 370 1 107 2 183 1 290 1 28 2 353 1 88 1 374 3 375 1 
90 1 2 1 273 2 136 2 226 1 3 1 93 1 323 1 55 2 227 1 143 1 279 1 97 4 281 2 336 2 284 1 233 1 234 2 236 1 198 1 287 2 20 5 288 1 104 2 346 2 26 2 159 1 353 1 160 1 294 1 162 1 164 1 111 1 76 1 359 1 209 2 119 1 121 1 304 1 43 1 42 1 260 2 127 1 262 1 175 2 177 1 183 1 
50 1 162 1 37 1 111 1 3 1 366 1 344 1 
162 4 111 4 44 1 3 4 235 1 227 1 344 1 181 1 39 1 88 1 173 1 366 1 336 1 
162 2 111 2 258 1 3 2 57 1 85 1 344 1 181 1 329 1 194 1 184 1 13 1 336 1 366 2 
162 1 111 1 241 1 3 1 102 1 227 1 80 1 315 1 366 1 344 1 
162 2 356 1 111 2 3 2 22 1 344 1 115 1 181 1 88 1 336 1 366 1 
162 5 111 4 112 1 44 1 19 1 235 1 3 5 227 1 22 1 344 2 181 2 39 1 329 1 88 1 336 3 366 2 
162 5 111 4 44 1 19 1 235 1 3 5 227 1 22 1 344 2 181 2 39 1 329 1 230 1 88 1 336 3 366 2 
90 1 162 1 111 1 45 1 3 1 56 1 227 1 344 1 370 1 181 1 183 1 184 1 353 1 41 1 336 1 366 1 42 2 43 2 
162 1 111 1 74 1 258 1 3 1 342 1 344 1 181 1 329 1 194 1 184 1 336 1 366 2 
285 1 311 1 326 1 129 1 183 1 211 1 303 1 42 1 43 1 
206 1 289 1 311 1 
41 1 303 1 311 1 151 1 326 1 
122 1 206 1 175 2 137 1 198 1 287 1 177 1 288 1 311 1 326 2 346 1 229 1 109 1 289 1 25 1 281 2 41 1 303 2 151 2 
163 1 203 1 372 1 79 1 
135 1 126 1 203 1 372 1 79 1 190 1 317 1 
135 1 138 1 168 1 
189 1 135 3 126 3 34 1 190 1 79 1 38 1 59 2 203 1 372 1 212 1 317 1 
357 1 135 2 340 1 126 2 203 1 372 1 79 1 190 1 317 1 
123 1 135 1 126 1 190 1 80 1 203 1 147 1 241 1 269 1 212 1 317 1 
135 1 126 1 203 1 372 1 190 1 212 1 317 1 
135 1 126 1 372 2 79 1 190 1 212 1 317 1 
135 2 126 2 203 1 372 1 51 1 21 1 140 1 190 2 212 1 317 2 
135 3 357 2 126 3 33 1 79 1 190 1 94 1 218 1 203 2 372 1 269 1 212 1 317 1 
123 1 135 2 357 1 126 2 79 1 190 1 80 2 345 1 10 1 203 1 372 1 241 1 315 1 212 1 317 1 
135 4 357 2 126 4 340 1 33 1 79 1 190 2 203 2 372 1 269 1 172 1 212 1 317 2 
135 1 126 1 203 1 372 1 79 1 190 1 212 1 317 1 
357 2 135 4 126 4 33 1 34 1 79 2 190 1 108 1 38 1 59 1 203 3 372 2 269 1 317 1 
357 1 32 1 135 2 308 1 126 2 203 1 372 1 352 1 79 1 190 1 212 1 317 1 
38 1 135 3 59 2 126 3 203 1 372 1 291 1 34 2 79 1 190 1 212 1 317 1 
272 1 58 2 203 2 270 1 
174 1 135 1 126 1 190 1 212 1 317 1 
357 1 135 2 126 2 203 1 372 1 79 1 94 1 190 1 212 1 317 1 
148 1 
135 1 126 1 203 1 372 1 79 1 190 1 212 1 317 1 
357 1 135 3 126 3 190 1 79 1 94 1 59 1 203 1 372 1 212 1 317 1 
108 1 203 1 33 1 269 1 
203 1 372 1 

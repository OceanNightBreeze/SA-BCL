#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 312 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 246 271 154 19 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 11 316 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 48 247 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 48 150 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 48 150 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 48 150 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 48 150 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 11 316 101 97 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 123 359 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 243 (79,190) (79,190) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V | STATEMENT | 842 | stmt -> ;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 6199 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
79 1 218 1 353 1 221 2 190 1 356 2 50 3 29 1 228 4 72 2 30 1 304 2 342 1 263 1 203 2 153 6 265 9 64 1 209 1 208 9 162 1 40 2 321 1 298 1 243 4 369 1 134 1 187 2 
79 1 218 1 353 1 221 2 190 1 356 2 50 3 29 1 228 4 30 1 72 2 304 2 342 1 263 1 203 2 153 6 265 9 64 1 209 1 208 9 162 1 40 2 321 1 298 1 243 4 369 1 134 1 187 2 
79 1 218 1 353 1 221 2 190 1 356 2 50 4 29 1 228 5 30 1 72 2 304 2 342 1 263 1 203 2 153 7 265 10 64 1 209 1 208 10 162 1 40 2 321 1 298 1 243 5 369 1 134 1 187 2 
79 1 218 1 353 1 221 2 190 1 356 2 50 2 29 1 228 3 30 1 72 1 304 2 342 1 203 2 153 4 265 7 64 1 209 1 208 7 162 1 40 2 321 1 298 1 243 3 369 1 134 1 187 2 
79 1 263 1 203 1 153 3 265 4 221 1 64 1 190 1 208 4 356 1 50 1 162 1 40 1 228 2 72 2 243 2 369 1 187 1 
79 1 203 1 265 2 63 1 353 1 221 1 64 1 190 1 208 2 356 1 272 1 40 1 29 1 242 1 304 1 
79 1 153 1 265 3 64 1 190 1 208 3 356 2 50 1 40 2 228 1 30 1 304 1 243 1 
79 1 221 1 190 1 191 1 356 2 50 3 228 4 30 1 72 2 304 1 342 1 263 1 203 1 153 7 265 9 64 1 208 9 130 1 162 1 40 2 243 4 134 1 369 1 187 1 
79 1 221 1 190 1 191 1 356 2 50 3 228 4 30 1 72 2 304 1 342 1 263 1 203 1 153 7 265 9 64 1 208 9 130 1 162 1 40 2 243 4 134 1 369 1 187 1 
138 1 173 1 9 1 
246 1 
259 1 16 1 290 2 365 2 0 2 235 2 93 2 147 2 
245 1 328 1 100 2 277 1 0 2 279 2 3 1 330 1 147 3 333 2 70 1 285 2 6 1 54 1 360 1 306 1 307 1 200 1 286 1 259 1 59 1 105 1 288 1 290 3 365 2 235 2 106 2 93 2 318 1 319 1 14 1 160 1 16 1 345 1 241 1 132 1 213 1 
259 1 159 1 290 1 365 1 0 1 83 1 235 1 93 1 341 1 147 1 
138 1 290 1 173 1 313 1 365 1 141 1 69 1 115 1 252 1 147 1 52 1 341 1 362 1 230 1 
138 1 290 1 173 1 0 1 365 1 235 1 141 1 93 1 115 2 252 2 147 1 52 1 341 1 362 1 230 1 
98 1 197 1 47 1 115 1 252 1 
138 1 137 1 173 1 113 1 197 1 47 1 115 2 252 2 
47 1 115 1 252 1 
259 1 290 1 0 1 365 1 235 1 93 1 115 1 252 1 147 1 159 1 83 1 197 1 341 1 56 1 
173 1 
58 1 138 1 173 1 113 1 197 1 47 1 115 2 252 2 
348 2 138 1 152 1 173 1 344 1 113 1 24 1 366 1 314 1 205 1 115 5 47 2 156 1 252 5 238 1 15 1 119 2 178 2 197 2 
16 1 9 1 
23 1 326 1 327 1 290 2 365 2 0 1 235 1 93 1 147 2 16 1 341 1 
102 1 84 1 151 1 
231 1 288 1 290 1 100 1 106 1 279 1 3 1 330 1 147 1 318 1 70 1 16 1 345 1 241 1 360 1 200 1 
16 1 290 3 365 3 0 3 235 1 140 1 93 3 147 3 
290 1 365 1 0 1 83 1 93 1 341 1 147 1 
23 1 327 1 290 1 0 1 365 1 235 1 93 1 147 1 341 1 
275 1 245 1 327 1 100 1 277 1 0 3 140 1 141 1 279 1 3 1 330 1 115 1 252 1 147 4 27 1 333 1 70 1 285 2 6 1 52 1 360 1 307 1 200 1 341 1 362 1 230 1 259 1 59 1 288 1 290 4 365 3 174 1 235 2 106 1 93 3 318 1 319 1 14 1 160 1 16 1 345 1 241 1 132 1 213 1 
282 1 16 1 290 2 365 2 0 1 140 1 93 1 69 1 147 2 
275 1 327 1 290 3 173 1 0 3 365 3 235 1 140 2 174 1 141 1 93 3 115 1 252 1 147 3 193 1 52 1 341 1 230 1 362 1 
327 1 290 2 0 2 365 2 140 1 235 1 93 2 147 2 102 1 151 1 
288 1 290 1 100 1 106 1 279 1 3 1 330 1 147 1 318 1 70 1 16 1 345 1 241 1 360 1 200 1 
288 1 290 1 100 1 106 1 279 1 3 1 188 1 147 1 318 1 70 1 16 1 335 1 241 1 360 1 200 1 
245 1 277 1 281 1 102 1 333 3 285 2 255 1 6 1 84 1 306 1 151 1 57 1 261 1 59 2 7 1 11 1 319 1 128 1 160 1 177 1 18 1 132 1 78 1 109 1 
290 1 0 1 365 1 93 1 147 1 52 1 75 1 341 1 
275 1 288 1 290 2 100 1 0 1 365 1 140 1 106 1 279 1 3 1 330 1 93 1 147 2 318 1 70 1 345 1 241 1 360 1 151 1 200 1 
275 1 327 1 290 5 0 4 365 5 140 2 235 1 93 4 69 1 147 5 282 1 16 1 73 1 32 1 
290 2 365 2 0 2 83 1 75 1 93 2 341 1 147 2 
214 1 144 1 
214 1 144 1 
149 1 358 1 
149 1 358 1 
149 1 358 1 
214 1 220 1 144 1 
214 1 220 1 144 1 
214 1 144 1 199 1 
49 1 149 1 214 2 126 1 358 1 144 2 
214 1 220 1 144 1 
214 1 2 1 144 1 
214 1 2 1 144 1 
214 1 2 1 144 1 
45 1 124 1 325 1 214 2 173 1 249 2 315 2 176 2 144 2 115 2 252 2 37 3 49 1 334 1 68 2 256 1 195 1 340 2 229 1 
214 1 0 2 249 1 250 1 143 1 144 1 115 1 252 1 147 2 223 1 85 1 340 1 229 1 305 1 199 1 290 2 365 2 61 1 93 2 176 1 37 1 16 1 68 1 295 1 
203 1 221 1 187 1 
203 1 242 1 221 1 
268 1 264 1 175 1 242 1 187 2 221 3 
268 1 175 1 242 1 183 1 187 1 221 2 
268 1 175 2 242 1 187 1 221 2 
324 1 0 1 113 1 115 5 47 1 119 1 83 1 341 1 56 1 290 1 173 2 291 1 235 1 344 3 11 1 93 1 237 1 95 1 238 1 128 1 131 2 178 1 348 1 138 1 246 2 143 1 252 5 147 1 148 1 197 4 259 1 261 1 365 1 366 1 206 1 316 1 159 1 320 1 211 1 78 1 
324 1 0 1 113 1 115 5 47 3 119 1 83 1 338 1 341 1 56 1 290 1 173 2 291 1 235 1 344 3 11 1 93 1 237 1 95 1 238 1 128 1 178 1 296 1 98 2 348 1 138 1 246 2 143 1 252 5 147 1 103 2 197 4 259 1 261 1 365 1 366 1 316 1 159 1 320 1 211 1 78 1 
348 1 324 1 138 1 246 2 0 1 143 1 115 3 252 3 147 1 148 1 119 1 83 1 197 2 341 1 56 1 259 1 261 1 290 1 365 1 173 2 291 1 235 1 344 3 314 1 11 1 93 1 206 1 316 1 237 1 95 1 238 1 159 1 128 1 178 1 211 1 131 1 78 1 
324 1 348 1 246 2 143 1 115 2 252 2 148 1 119 1 197 1 312 1 261 1 173 1 291 1 344 3 314 1 11 1 206 1 316 1 237 1 95 1 238 1 128 1 178 1 211 1 131 1 78 1 
318 1 9 1 86 1 
318 1 36 1 
96 1 
318 1 360 1 
146 1 
318 1 288 1 360 1 
318 1 172 1 
111 1 136 1 59 1 123 1 34 1 301 1 253 1 355 1 158 2 333 4 177 2 18 3 67 1 227 1 306 3 78 1 
111 1 136 1 59 1 123 1 34 1 301 1 253 1 355 1 158 2 333 4 177 2 18 3 67 1 227 1 306 3 78 1 
111 1 136 1 276 1 59 1 123 1 34 1 301 1 253 1 355 1 158 2 333 4 177 2 18 3 67 1 227 1 306 3 78 1 
111 1 136 2 215 1 301 1 222 1 253 1 355 1 333 6 225 1 285 2 6 1 227 1 306 3 59 3 89 1 204 1 60 1 319 1 158 1 160 1 177 1 18 2 42 1 132 1 
111 1 136 1 139 1 301 1 253 2 333 7 285 2 6 1 227 2 359 1 306 5 232 1 59 2 261 1 123 2 34 1 319 1 158 2 160 1 177 3 18 4 67 1 132 1 78 3 
79 1 350 1 100 1 279 1 251 1 221 2 354 1 190 1 356 1 304 1 122 1 200 1 262 1 203 1 264 1 153 1 106 1 265 2 94 1 64 1 208 2 274 1 40 1 20 1 212 1 297 1 241 1 242 1 187 1 
79 1 350 1 100 1 299 1 279 1 251 1 221 2 354 1 190 1 356 1 336 1 304 1 122 1 200 1 203 1 264 1 153 2 106 1 265 3 91 1 94 1 208 3 274 1 40 1 212 1 297 1 241 1 242 1 187 1 
79 1 350 1 100 1 299 1 279 1 251 1 221 2 354 1 190 1 336 1 304 1 200 1 264 1 203 1 153 2 106 1 265 2 94 1 208 2 274 1 212 1 241 1 242 1 187 1 
100 1 279 1 217 1 3 1 25 1 356 1 304 2 360 1 200 1 311 1 260 1 234 1 106 1 265 1 91 1 94 2 207 1 208 1 318 1 40 1 274 2 241 1 212 2 
350 1 100 1 299 1 279 1 251 1 221 2 354 1 356 1 304 1 122 1 200 1 262 1 203 1 264 1 106 1 265 1 94 1 64 1 208 1 274 1 40 1 212 1 297 1 241 1 242 1 187 1 
310 1 
348 1 100 2 165 1 279 2 217 1 3 2 113 1 4 1 115 2 47 2 252 2 119 1 360 2 257 1 200 2 288 1 234 1 106 2 344 1 366 1 237 1 318 2 238 1 178 1 241 3 240 1 182 1 44 1 322 1 
347 2 329 1 141 1 113 1 69 1 115 3 47 2 252 3 147 1 170 1 52 1 339 1 198 1 341 1 362 1 230 1 58 1 125 1 290 1 365 1 313 1 66 1 
347 3 138 1 329 1 141 1 113 1 47 1 69 1 115 3 252 3 147 1 170 1 52 1 339 1 341 1 362 1 230 1 58 1 125 1 290 1 365 1 313 1 173 1 66 1 43 1 
347 3 138 1 329 1 141 1 113 1 69 1 115 3 47 2 252 3 147 1 170 1 52 1 339 1 198 1 341 1 308 1 362 1 230 1 58 1 125 1 290 1 365 1 313 1 173 1 66 1 43 1 
0 1 329 1 113 2 115 4 47 5 170 1 118 1 119 1 83 1 52 1 53 1 339 1 341 2 230 1 56 1 58 1 87 1 287 1 125 1 290 2 173 1 235 1 344 1 236 1 93 1 238 1 95 1 66 1 178 1 347 3 348 1 138 1 141 1 69 1 252 4 147 2 104 1 357 1 198 3 308 3 309 1 362 1 259 1 363 1 313 1 365 2 154 1 366 1 271 1 159 1 43 1 
348 1 347 2 246 1 329 1 141 1 115 2 69 1 252 2 147 1 170 1 118 1 119 1 104 1 357 1 52 1 339 1 341 1 362 1 230 1 125 1 290 1 173 1 313 1 365 1 344 1 236 1 366 1 267 1 95 1 238 1 271 1 66 1 178 1 
0 1 329 1 113 1 115 3 47 2 170 1 118 1 119 1 83 1 52 1 339 1 341 2 230 1 56 1 287 1 125 1 290 2 173 1 235 1 344 1 236 1 93 1 238 1 95 1 66 1 178 1 347 3 348 1 138 1 141 1 69 1 252 3 147 2 104 1 357 1 198 1 309 1 308 1 362 1 259 1 363 1 313 1 365 2 154 1 366 1 271 1 159 1 43 1 
0 1 329 1 113 1 115 3 47 2 170 1 118 1 119 1 83 1 52 1 339 1 341 2 230 1 56 1 287 1 125 1 290 2 173 1 235 1 344 1 236 1 93 1 238 1 95 1 66 1 178 1 347 3 348 1 138 1 141 1 69 1 252 3 147 2 104 1 357 1 198 1 309 1 308 1 362 1 259 1 363 1 313 1 365 2 154 1 366 1 271 1 159 1 43 1 
348 1 347 2 246 1 329 1 216 1 141 1 142 1 69 1 115 2 252 2 147 1 170 1 118 1 119 1 52 1 339 1 341 1 362 1 230 1 125 1 290 1 365 1 313 1 154 1 344 1 236 1 366 1 238 1 271 1 66 1 19 1 178 1 163 1 
0 1 329 1 113 1 47 3 115 3 170 1 118 1 119 1 83 1 52 1 339 1 341 2 230 1 56 1 287 1 87 1 125 1 290 2 173 1 235 1 344 1 236 1 93 1 238 1 95 1 66 1 178 1 347 4 348 1 138 1 141 1 69 1 252 3 147 2 104 1 357 1 198 2 308 2 309 1 362 1 259 1 363 1 313 1 365 2 154 1 366 1 271 1 159 1 43 2 
0 1 329 1 113 1 47 3 115 3 170 1 118 1 119 1 83 1 52 1 339 1 341 2 230 1 56 1 287 1 87 1 125 1 290 2 173 1 235 1 344 1 236 1 93 1 238 1 95 1 66 1 178 1 347 4 348 1 138 1 141 1 69 1 252 3 147 2 104 1 357 1 198 2 308 2 309 1 362 1 259 1 363 1 313 1 365 2 154 1 366 1 271 1 159 1 43 2 
348 1 347 2 246 1 329 1 141 1 216 1 113 1 142 1 47 1 115 3 69 1 252 3 147 1 170 1 118 1 119 1 52 1 339 1 341 1 362 1 230 1 125 1 290 1 313 1 365 1 292 1 344 1 236 1 366 1 267 1 238 1 271 1 66 1 178 1 
245 1 277 1 102 1 253 1 333 3 285 2 227 1 6 1 84 1 306 2 151 1 123 1 59 1 34 1 7 1 9 1 319 1 158 1 160 1 177 2 18 2 16 1 67 1 132 1 78 1 
245 2 326 1 215 2 277 1 116 1 222 2 169 1 102 1 333 11 285 4 120 1 6 2 84 7 196 1 307 1 306 4 341 1 171 1 151 7 59 7 261 2 289 1 11 2 316 2 319 2 177 1 160 2 128 2 16 1 18 1 132 2 78 2 
275 1 245 1 100 1 277 1 0 1 140 1 279 1 3 1 330 1 147 2 102 1 70 1 5 1 333 2 285 2 6 1 196 1 360 1 307 1 306 1 200 1 286 1 231 1 59 1 288 1 290 2 365 1 106 1 155 1 93 1 318 1 319 1 160 1 16 1 345 1 241 1 132 1 77 1 
275 1 0 1 277 3 80 2 278 2 279 1 3 1 330 2 333 15 285 6 227 1 6 3 84 5 286 1 55 1 123 1 59 8 288 2 290 3 8 2 11 2 93 1 14 2 239 1 128 2 177 4 16 1 18 4 67 1 345 2 241 2 132 3 245 3 100 1 140 1 147 3 253 1 102 5 70 2 196 1 360 2 307 1 306 7 200 2 151 5 202 2 261 2 34 1 365 1 106 1 316 2 318 2 319 3 158 1 160 3 78 3 
245 2 100 8 0 1 277 2 299 1 140 1 279 8 81 1 217 1 3 2 147 1 333 2 285 4 226 1 28 1 6 2 360 2 306 1 307 1 200 2 286 1 59 1 105 2 290 1 7 1 365 1 234 1 106 7 93 1 157 1 318 3 38 1 319 2 160 2 161 1 20 1 241 2 132 2 110 1 
245 1 327 1 290 1 365 1 0 1 277 1 235 1 11 1 93 1 316 1 147 1 319 1 333 2 273 1 160 1 285 2 6 1 196 1 132 1 306 2 78 1 
245 1 7 1 277 1 11 1 319 1 333 1 160 1 285 2 255 1 6 1 132 1 306 1 78 1 
245 1 261 1 59 2 7 1 277 1 102 1 319 1 333 2 177 1 160 1 128 1 18 1 285 2 84 1 6 1 132 1 151 1 57 1 
245 1 277 1 102 1 333 3 285 2 6 1 84 1 306 1 151 1 261 1 59 2 7 1 11 1 316 1 319 1 160 1 128 1 177 1 18 1 132 1 78 1 
245 1 277 1 81 1 11 1 319 1 333 1 160 1 285 2 255 1 6 1 132 1 306 1 78 1 
245 1 261 1 59 2 277 1 81 1 102 1 319 1 333 2 177 1 160 1 128 1 18 1 285 2 84 1 6 1 132 1 151 1 57 1 
245 1 277 1 81 1 102 1 333 3 285 2 6 1 84 1 306 1 151 1 261 1 59 2 11 1 316 1 319 1 160 1 128 1 177 1 18 1 132 1 78 1 
245 1 277 1 102 1 333 3 285 2 6 1 84 1 306 1 151 1 261 1 59 2 11 1 316 1 319 1 160 1 128 1 177 1 18 1 132 1 78 1 
245 1 100 1 277 1 279 1 3 1 330 1 147 1 333 2 70 1 285 2 6 1 360 1 306 1 307 1 200 1 286 1 59 1 288 1 290 1 106 1 318 1 319 1 14 1 160 1 16 1 345 1 241 1 132 1 
245 1 100 1 277 1 351 1 279 1 3 1 188 1 147 1 333 2 70 1 285 2 335 1 6 1 360 1 306 1 307 1 200 1 286 1 59 1 288 1 290 1 106 1 318 1 319 1 160 1 16 1 241 1 132 1 
245 1 277 1 102 1 333 3 285 2 6 1 84 1 196 1 306 1 151 1 261 1 59 2 11 1 316 1 319 1 160 1 128 1 177 1 18 1 132 1 78 1 
245 1 100 1 277 1 279 1 330 1 147 1 102 1 333 3 70 1 285 2 84 1 6 1 360 1 306 1 151 1 200 1 202 1 59 2 261 1 288 1 290 1 106 1 11 1 316 1 318 1 319 1 14 1 177 1 128 1 160 1 18 1 345 1 20 1 241 1 132 1 78 1 
245 1 327 1 277 1 0 1 147 1 333 2 285 2 6 1 196 1 306 1 261 1 59 1 290 1 365 1 235 1 11 1 93 1 316 1 319 1 13 1 160 1 128 1 132 1 78 1 
244 1 215 2 139 1 247 1 114 1 101 1 48 1 222 2 333 19 285 6 6 3 121 1 194 1 306 8 258 3 261 2 89 2 233 1 59 11 60 1 11 2 316 2 293 1 266 1 319 3 177 1 160 3 128 2 18 1 39 1 97 1 132 3 78 2 346 1 
244 2 139 1 215 2 114 1 101 1 48 1 222 2 333 19 285 4 6 2 194 1 150 1 306 8 258 3 261 2 59 11 233 1 89 2 60 1 11 2 316 2 293 1 266 1 319 2 177 1 160 2 128 2 18 1 39 2 97 1 132 2 78 2 346 1 
244 1 215 2 139 1 114 1 101 1 48 1 222 2 333 19 285 6 6 3 121 1 194 1 150 1 306 8 258 3 261 2 89 2 233 1 59 11 60 1 11 2 316 2 293 1 266 1 319 3 177 1 160 3 128 2 18 1 39 1 97 1 132 3 78 2 346 1 
244 1 215 2 139 1 114 1 101 1 48 1 222 2 333 19 285 6 6 3 121 1 194 1 150 1 306 8 258 3 261 2 89 2 233 1 59 11 60 1 11 2 316 2 293 1 266 1 319 3 177 1 160 3 128 2 18 1 39 1 97 1 132 3 78 2 346 1 
244 1 215 2 139 1 114 1 101 1 48 1 222 2 333 19 285 4 6 2 194 1 150 1 306 8 258 3 261 2 89 2 233 1 59 11 60 1 11 2 316 2 293 1 266 1 319 2 177 2 160 2 128 2 18 2 39 1 97 1 132 2 78 2 346 1 
49 1 334 1 214 1 68 1 256 1 249 1 144 1 176 1 340 1 12 1 
295 1 199 1 
99 1 214 1 117 1 68 1 249 1 168 1 144 1 176 1 340 1 
45 1 325 1 214 1 173 1 249 1 315 1 176 1 144 1 115 1 252 1 37 2 49 1 334 1 68 1 256 1 195 1 229 1 340 1 
45 1 325 1 214 1 173 1 249 1 315 1 176 1 144 1 115 1 252 1 37 2 49 1 334 1 68 1 256 1 195 1 229 1 340 1 
45 1 325 1 214 1 173 1 249 1 315 1 176 1 144 1 115 1 252 1 37 2 49 1 334 1 68 1 256 1 195 1 229 1 340 1 
126 1 17 1 220 1 
126 1 17 1 220 1 
65 1 2 1 
65 1 126 1 2 1 
223 1 305 1 
325 1 214 1 0 2 249 1 250 1 143 1 144 1 115 1 252 1 147 2 223 1 224 1 85 1 197 1 340 1 305 1 199 1 290 2 365 2 61 1 315 1 176 1 93 2 37 1 16 1 68 1 295 1 
17 1 220 1 
65 1 126 1 2 1 
245 1 100 2 277 1 279 2 280 1 331 1 147 2 333 2 285 2 6 1 196 1 306 1 307 1 200 1 286 1 59 1 105 2 33 1 290 2 365 2 106 2 38 1 319 1 160 1 241 1 368 1 132 1 22 1 
100 2 203 1 264 1 299 1 343 1 106 2 279 2 251 1 221 2 354 1 274 1 71 1 20 1 241 1 242 1 122 1 361 1 200 1 187 1 
100 1 203 1 264 1 299 1 106 1 279 1 251 1 221 2 354 1 274 1 71 1 241 1 242 1 122 1 200 1 187 1 201 1 
88 1 100 1 234 1 343 1 106 1 279 1 217 1 3 1 207 1 318 1 274 1 241 1 360 1 200 1 
100 1 203 1 264 1 299 1 343 1 106 1 279 1 251 1 221 2 354 1 274 1 71 1 241 1 242 1 122 1 361 1 200 1 187 1 
303 1 
238 1 138 1 152 1 173 1 9 1 344 1 24 1 
348 1 246 1 173 1 344 1 366 1 238 1 95 1 119 1 104 1 178 1 357 1 
324 4 279 1 3 1 113 3 166 2 167 1 47 5 115 5 332 2 119 3 86 2 230 2 288 1 291 4 173 5 8 2 344 8 92 2 11 2 237 2 95 4 238 5 294 1 128 2 178 3 241 2 179 1 21 2 348 3 138 1 246 8 100 1 252 5 192 2 360 1 200 1 261 2 106 1 35 2 366 3 36 3 316 2 318 6 41 1 322 1 78 2 
348 1 324 3 89 1 246 4 173 2 215 1 291 3 344 2 366 1 11 1 114 1 316 1 101 1 238 3 222 1 95 2 119 1 178 1 97 1 78 1 
363 1 348 1 261 1 123 1 344 2 366 1 115 1 252 1 238 2 253 1 332 1 119 1 227 1 178 1 359 1 78 1 
348 1 152 1 138 1 173 1 344 1 366 1 24 1 238 1 119 1 178 1 
324 1 261 1 246 2 291 1 173 1 344 2 11 1 316 1 238 1 95 1 332 1 128 1 78 1 
138 1 173 1 113 1 115 1 47 1 252 1 
348 1 100 2 165 1 279 2 217 1 3 2 113 1 4 1 47 2 115 1 252 1 119 1 360 2 257 1 200 2 90 1 288 1 234 1 106 2 344 1 366 1 237 1 318 2 238 1 178 1 241 3 240 1 182 1 44 1 322 1 
245 1 100 1 0 2 277 1 279 1 3 1 330 1 147 3 333 1 70 1 285 2 6 1 360 1 307 1 200 1 259 1 59 1 288 1 290 3 365 2 235 2 106 1 93 2 318 1 319 1 14 1 160 1 16 1 345 1 241 1 132 1 213 1 
324 2 348 1 138 2 246 4 291 2 173 4 344 1 366 1 237 1 95 2 238 2 158 1 119 1 178 1 322 1 
68 1 51 1 249 1 
68 1 51 1 249 1 
270 1 223 1 334 1 68 1 249 1 
68 1 51 1 249 1 
68 1 76 1 249 1 
68 1 76 1 249 1 
68 1 76 1 249 1 
68 1 249 1 
214 1 144 1 
111 1 123 1 59 2 34 1 60 1 319 2 253 1 158 1 333 5 177 2 160 2 18 3 285 4 67 1 6 2 227 1 132 2 306 3 78 1 
59 1 123 1 34 1 9 1 253 1 333 3 158 1 177 2 18 2 67 1 227 1 306 2 78 1 
59 2 261 1 164 1 11 1 316 1 319 1 333 3 177 1 160 1 128 1 18 1 285 2 6 1 132 1 306 1 78 1 
222 1 333 2 59 1 89 1 215 1 306 1 
111 3 215 2 169 1 222 2 116 1 253 2 333 16 285 2 6 1 227 2 359 1 306 8 171 1 123 2 261 3 59 8 34 1 60 1 11 2 316 2 319 1 158 1 177 4 128 2 160 1 18 7 67 1 132 1 78 5 
333 1 59 1 215 1 
222 1 333 1 306 1 
164 1 59 3 261 1 8 1 11 1 316 1 319 1 333 5 160 1 128 1 177 2 285 2 18 2 6 1 132 1 306 2 78 1 
215 1 139 1 114 1 101 1 222 1 333 10 285 2 6 1 194 1 306 4 59 6 89 1 261 2 11 2 316 2 266 1 319 1 160 1 128 2 177 1 18 1 97 1 132 1 78 2 
333 1 123 1 306 1 78 1 
111 1 59 2 34 1 60 1 253 1 319 1 333 3 177 1 160 1 18 2 285 2 67 1 227 1 6 1 42 1 132 1 306 1 
111 1 123 1 261 1 59 2 253 1 333 4 177 2 18 3 227 1 359 1 306 2 78 2 
139 1 11 1 319 1 333 1 160 1 285 2 6 1 132 1 306 1 78 1 
59 2 261 1 139 1 11 1 316 1 319 1 333 3 177 1 160 1 128 1 18 1 285 2 6 1 132 1 306 1 78 1 
111 1 59 2 139 1 60 1 319 3 253 1 333 3 160 3 177 1 285 6 18 2 6 3 227 1 42 1 121 1 132 3 306 1 
111 3 164 1 215 1 139 1 222 1 253 2 333 11 285 8 6 4 227 2 121 1 359 1 306 5 261 1 123 1 59 6 89 1 34 1 204 1 60 1 319 4 160 4 177 3 18 6 67 1 42 1 132 4 78 2 
215 1 139 1 114 1 101 1 222 1 333 10 285 2 6 1 194 1 306 4 59 6 89 1 261 2 11 2 316 2 266 1 319 1 160 1 128 2 177 1 18 1 97 1 132 1 78 2 
164 1 215 1 139 1 114 1 101 1 222 1 333 10 285 4 6 2 194 1 306 4 59 6 89 1 261 2 11 2 316 2 266 1 319 2 160 2 128 2 177 1 18 1 97 1 132 2 78 2 
164 1 215 1 139 1 114 1 101 1 222 1 253 1 333 14 285 6 227 1 6 3 194 1 306 6 123 1 59 8 89 1 261 2 34 1 60 1 11 2 316 2 266 1 319 3 158 1 160 3 128 2 177 3 18 3 67 1 97 1 132 3 78 3 
164 1 215 1 139 1 114 1 101 1 222 1 333 10 285 4 6 2 194 1 306 4 59 6 89 1 261 2 11 2 316 2 266 1 319 2 160 2 128 2 177 1 18 1 97 1 132 2 78 2 
215 1 139 1 114 1 101 1 222 1 333 10 285 2 6 1 194 1 306 4 59 6 89 1 261 2 11 2 316 2 266 1 319 1 160 1 128 2 177 1 18 1 97 1 132 1 78 2 
215 1 139 1 114 1 101 1 222 1 333 10 285 2 6 1 194 1 306 4 59 6 89 1 261 2 11 2 316 2 266 1 319 1 160 1 128 2 177 1 18 1 97 1 132 1 78 2 
164 1 215 1 139 1 114 1 101 1 222 1 333 11 285 6 6 3 194 1 306 4 59 7 89 1 261 2 60 1 11 2 316 2 266 1 319 3 160 3 128 2 177 1 18 1 97 1 132 3 78 2 
215 1 139 1 114 1 101 1 222 1 333 11 285 6 6 3 194 1 121 1 306 4 59 7 89 1 261 2 60 1 11 2 316 2 266 1 319 3 160 3 128 2 177 2 18 2 97 1 132 3 78 2 
111 3 59 2 261 1 123 2 34 1 253 2 158 1 333 6 177 4 18 7 67 1 227 2 359 1 306 4 78 3 
215 1 139 1 114 1 101 1 222 1 333 11 285 6 6 3 194 1 121 1 306 4 59 7 89 1 261 2 60 1 11 2 316 2 266 1 319 3 160 3 128 2 177 1 18 1 97 1 132 3 78 2 
282 1 349 1 16 1 290 1 365 1 69 1 147 1 
349 1 290 1 365 1 69 1 147 1 269 1 282 1 210 1 16 1 302 1 181 1 135 1 
318 1 100 1 234 1 9 1 217 1 279 1 106 1 241 1 3 1 360 1 200 1 
288 1 290 2 100 1 0 1 365 1 140 1 106 1 279 1 3 1 93 1 147 2 318 1 70 1 16 1 345 1 241 1 360 1 200 1 
100 1 0 2 140 1 279 1 147 2 70 1 52 1 74 1 360 2 200 1 341 1 362 1 172 1 288 2 290 2 365 2 106 1 93 1 318 3 16 1 345 1 241 1 186 1 
100 2 0 2 140 1 279 2 188 1 26 1 147 2 70 1 52 1 74 1 360 2 200 1 341 1 362 1 172 1 288 2 290 2 365 2 106 2 93 1 318 3 16 1 241 1 186 1 
138 1 288 1 100 3 173 1 106 3 279 3 3 1 10 1 36 1 115 2 107 1 47 1 252 2 26 1 318 4 241 1 74 1 86 1 360 1 200 1 230 1 172 1 186 1 
138 1 288 1 100 3 173 1 106 3 279 3 35 1 3 1 36 1 115 2 47 1 252 2 26 1 318 4 241 1 74 1 86 1 360 1 200 1 230 1 172 1 186 1 
100 1 28 1 279 1 106 1 241 1 200 1 
105 1 288 1 100 7 364 1 299 1 106 6 279 7 3 2 157 1 318 3 161 1 226 1 28 1 41 1 20 1 241 3 182 1 360 2 257 1 200 2 110 1 
245 2 100 1 277 2 0 1 80 1 140 1 279 1 330 1 147 2 102 1 253 1 333 3 70 1 285 4 84 1 227 1 6 2 196 1 360 1 306 2 151 1 200 1 202 1 59 1 123 1 288 1 34 1 290 2 365 1 106 1 93 1 318 1 319 2 158 1 14 1 177 2 160 2 16 1 18 2 67 1 345 1 20 1 241 1 132 2 78 1 22 1 
348 2 138 1 100 1 279 1 3 1 113 1 24 1 166 1 115 3 47 2 252 3 119 2 192 1 197 1 86 1 230 1 152 1 90 1 173 1 344 1 106 1 35 1 366 2 36 1 238 1 318 2 178 2 21 1 
288 1 100 2 106 2 279 2 318 2 28 1 41 1 20 1 179 1 241 2 86 1 360 1 200 1 
100 4 234 1 106 4 279 4 217 1 3 1 26 1 318 1 20 1 241 1 133 1 360 1 200 1 
288 1 100 2 165 1 106 2 279 2 219 1 318 1 241 2 74 1 182 1 44 1 360 1 257 1 200 1 
100 1 203 1 279 1 106 1 241 1 3 1 242 1 200 1 221 1 354 1 
100 2 299 1 279 2 106 2 20 1 241 1 368 1 200 1 
100 5 234 1 217 1 106 4 279 5 3 1 318 3 161 1 226 1 20 1 241 2 133 1 74 1 360 2 200 2 110 1 
100 5 234 1 217 1 106 4 279 5 3 1 318 3 129 1 226 1 20 1 241 2 133 1 74 1 360 2 200 2 110 1 
288 1 290 2 100 1 0 1 365 1 140 1 106 1 279 1 3 1 188 1 93 1 147 2 318 1 70 1 16 1 241 1 360 1 200 1 
288 1 100 1 364 1 106 1 279 1 318 1 41 1 241 2 182 1 74 1 360 1 257 1 200 1 
16 1 31 1 180 1 323 1 189 1 
138 1 173 1 174 1 141 1 248 1 46 1 115 2 252 2 189 2 16 1 52 1 31 2 180 1 197 1 185 1 323 2 341 1 230 1 362 1 
33 1 290 1 365 1 280 1 331 1 147 1 31 1 180 1 323 1 
180 1 46 1 185 1 
79 1 190 1 9 1 
79 1 190 1 208 1 356 1 40 1 265 1 
208 1 212 1 304 1 
79 1 265 3 62 1 64 1 208 3 190 1 356 1 40 1 367 1 29 2 184 1 
79 1 190 1 208 2 356 1 153 1 40 1 265 2 72 1 
208 1 356 1 203 1 40 1 228 1 265 1 243 1 369 1 221 1 187 1 64 1 
79 1 208 1 356 1 40 1 265 1 64 1 
79 1 190 1 208 1 356 1 40 1 265 1 243 1 64 1 
79 1 265 2 352 1 317 1 127 1 64 1 208 2 356 2 40 2 
79 1 342 1 153 2 265 3 64 1 190 1 208 3 356 1 50 1 40 1 228 1 243 1 134 1 
79 1 264 1 203 1 153 1 265 2 221 2 64 1 190 1 208 2 356 1 108 1 40 1 242 1 187 1 
79 1 263 1 153 2 265 4 64 1 190 1 208 4 356 2 50 1 40 2 228 1 72 1 243 1 
79 1 190 1 208 1 356 1 40 1 265 1 64 1 
79 2 112 1 153 2 265 4 62 1 190 2 208 4 356 1 50 1 40 1 29 1 228 1 243 1 184 1 
79 1 153 1 265 2 64 1 208 2 190 1 254 1 356 1 283 1 130 1 40 1 
79 1 265 3 300 1 62 2 64 1 208 3 190 1 356 1 40 1 29 2 184 1 
284 2 1 1 243 2 82 1 
208 1 356 1 40 1 265 1 145 1 64 1 
79 1 190 1 208 2 356 1 153 1 40 1 265 2 134 1 64 1 
337 1 
79 1 190 1 208 1 356 1 40 1 265 1 64 1 
79 1 190 1 208 3 356 1 153 1 40 1 29 1 265 3 134 1 64 1 
208 1 50 1 153 1 265 1 228 1 243 1 
79 1 

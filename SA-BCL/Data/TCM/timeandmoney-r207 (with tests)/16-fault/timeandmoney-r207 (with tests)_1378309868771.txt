#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) (68,212) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (68,212) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) (68,212) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (71,137,253,285) (71,137,253,285) (71,137,253,285) 272 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 204 174 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 204 174 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 184 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 227 185 283 246 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 157 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> -
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
272 1 285 1 299 1 253 1 71 1 
184 1 249 1 282 1 
304 2 16 1 249 1 
29 2 2 2 114 2 291 2 313 1 5 2 70 2 169 1 
172 1 97 1 2 2 56 1 215 1 291 2 5 2 222 2 223 1 301 1 103 1 61 1 14 1 183 1 139 1 185 2 188 1 264 1 109 1 23 1 70 3 227 2 147 1 25 1 29 3 114 2 234 1 313 1 236 1 116 1 238 1 82 1 284 2 243 1 167 2 324 1 169 1 
152 1 29 1 2 1 114 1 291 1 220 1 5 1 115 1 70 1 169 1 
201 1 318 1 96 1 29 1 2 1 249 1 35 1 220 1 77 1 70 1 180 1 12 1 117 1 282 1 
96 2 2 1 29 1 249 1 291 1 114 1 35 1 5 1 220 1 77 1 12 1 282 1 318 1 201 2 70 1 
201 1 96 1 57 1 65 1 280 1 
201 2 96 2 231 1 249 1 57 1 286 1 280 1 282 1 
201 1 96 1 280 1 
152 1 96 1 2 1 29 1 57 1 291 1 114 1 220 1 5 1 115 1 41 1 201 1 169 1 70 1 
249 1 
201 2 96 2 249 1 57 1 50 1 286 1 280 1 282 1 
96 5 2 1 291 1 249 1 57 2 220 1 5 1 297 4 6 2 255 1 178 2 22 1 70 1 146 4 152 1 28 2 29 1 33 1 271 1 114 1 115 1 276 2 278 1 280 2 41 1 282 1 201 5 120 2 47 1 48 1 49 1 87 1 51 1 166 1 286 1 169 1 244 1 92 2 
184 1 313 1 
290 1 2 2 29 2 292 1 291 1 114 1 220 1 5 1 313 1 302 1 70 2 
294 1 298 1 224 1 
29 1 56 1 313 1 223 1 103 1 14 1 238 1 43 1 185 1 264 1 167 1 324 1 70 1 227 1 23 1 25 1 
2 1 29 2 56 1 114 1 294 1 5 1 223 1 103 1 238 1 14 1 46 1 185 1 164 1 264 1 324 1 167 1 23 1 70 2 227 1 25 1 
2 2 29 2 292 1 114 2 291 1 220 1 5 2 313 1 302 1 46 1 70 2 
29 2 2 2 114 2 195 1 220 1 5 2 115 1 70 2 
2 3 29 3 291 1 114 3 292 1 220 1 5 3 313 1 46 1 70 3 
29 1 2 1 114 1 220 1 5 1 115 1 70 1 
290 1 2 1 29 1 291 1 114 1 5 1 220 1 302 1 70 1 
172 1 97 1 96 1 2 3 56 1 215 1 291 2 5 3 220 1 222 2 223 1 103 1 302 1 12 1 14 1 139 1 141 1 185 1 188 1 264 1 109 1 23 1 70 4 227 1 25 1 147 1 29 4 114 3 234 1 35 1 313 1 77 1 116 1 78 1 238 1 318 1 201 1 284 1 46 1 164 1 243 1 324 1 167 1 169 1 
29 2 2 2 46 1 162 1 114 1 313 1 5 1 70 2 117 1 
96 1 2 3 29 3 291 1 249 1 114 3 35 1 220 1 5 3 77 1 302 1 12 1 201 1 318 1 46 2 141 1 164 1 70 3 128 1 
2 2 29 2 291 1 114 2 5 2 294 1 224 1 302 1 46 1 70 2 
29 1 56 1 313 1 223 1 103 1 14 1 238 1 185 1 264 1 167 1 324 1 70 1 227 1 23 1 25 1 
29 1 56 1 313 1 103 1 14 1 238 1 185 1 262 1 264 1 167 1 324 1 70 1 227 1 23 1 90 1 
172 2 97 1 215 1 294 2 222 2 298 2 224 2 104 1 183 2 139 1 188 1 189 1 20 1 269 1 27 1 74 1 234 1 276 1 116 1 158 1 284 4 206 1 92 1 129 1 
29 1 2 1 114 1 195 1 220 1 5 1 77 1 70 1 
219 1 315 1 
219 1 315 1 
275 1 277 1 
275 1 277 1 
275 1 277 1 
32 1 219 1 315 1 
233 1 219 1 315 1 
219 2 275 1 307 1 277 1 179 1 315 2 
32 1 219 1 315 1 
32 1 219 1 315 1 
219 1 287 1 315 1 
219 1 287 1 315 1 
219 1 287 1 315 1 
96 1 2 2 216 1 219 1 99 1 5 2 59 1 19 1 266 1 70 2 29 2 153 1 114 2 312 1 233 1 313 1 37 1 76 1 237 1 40 1 279 1 315 1 240 1 201 1 
151 1 96 2 193 1 31 1 216 1 249 1 312 2 99 2 219 2 296 1 179 1 40 3 315 2 240 2 201 2 118 1 19 2 21 2 148 1 
321 1 63 1 52 1 
321 1 293 1 52 1 
130 1 270 1 63 2 18 1 293 1 52 3 
130 1 270 1 63 1 293 1 52 2 326 1 
130 2 270 1 63 1 293 1 52 2 
96 5 131 1 2 1 291 1 57 4 249 1 295 1 220 1 5 1 297 1 6 1 255 1 257 1 304 1 140 1 265 1 146 2 70 1 26 1 311 2 192 1 152 1 28 1 29 1 114 1 115 1 276 1 279 1 280 1 282 1 41 1 201 5 120 1 206 1 286 1 170 1 169 1 
96 5 2 1 57 4 249 1 291 1 295 1 220 1 5 1 297 1 6 1 255 1 257 1 304 1 140 1 65 2 67 1 265 1 146 2 70 1 192 1 152 1 28 1 29 1 114 1 115 1 197 2 276 1 279 1 280 3 282 1 41 1 201 5 120 1 206 1 323 1 286 1 170 1 169 1 
131 1 96 3 249 3 57 2 295 1 6 1 297 3 104 1 257 1 304 4 16 2 265 1 146 2 26 1 311 1 192 2 28 1 276 1 279 1 282 1 201 3 120 1 48 1 206 1 170 2 92 1 
94 1 96 4 131 1 249 4 57 3 295 1 221 1 6 1 297 5 104 2 257 2 304 7 16 3 265 1 146 4 26 1 311 2 192 4 28 1 198 1 276 2 279 2 282 1 201 4 120 1 48 1 206 2 170 4 92 2 
184 1 209 1 103 1 
207 1 103 1 
308 1 
238 1 103 1 23 1 
229 1 103 1 
238 1 103 1 
238 1 239 1 209 2 191 1 103 3 23 1 
172 3 27 3 230 1 271 1 276 1 158 2 278 1 316 1 256 1 183 4 284 7 258 1 123 1 205 2 51 1 263 1 92 1 
172 3 27 3 230 1 271 1 276 1 158 2 278 1 316 1 256 1 183 4 284 7 258 1 123 1 205 2 51 1 263 1 92 1 
172 3 27 3 230 1 271 1 276 1 158 2 300 1 278 1 256 1 316 1 183 4 284 7 258 1 123 1 205 2 51 1 263 1 92 1 
172 15 1 1 97 1 98 1 215 1 222 2 101 1 256 1 257 3 104 3 139 1 183 16 105 1 258 2 259 3 188 1 226 1 143 1 263 1 27 10 230 5 271 2 276 4 158 5 278 1 316 1 284 31 45 1 205 3 123 2 51 2 206 3 327 4 92 4 
172 4 97 2 215 2 222 4 101 1 8 1 256 1 139 2 183 5 258 1 188 2 263 1 190 1 27 4 230 1 271 1 276 1 158 3 278 1 284 9 205 2 123 1 51 1 92 1 
272 1 285 1 299 1 253 1 71 1 
285 1 299 1 253 1 68 1 71 1 
137 1 299 1 253 1 212 1 
285 1 299 1 253 1 68 1 71 1 
272 1 285 1 299 1 253 1 71 1 
108 1 
96 5 2 1 173 2 248 1 249 2 6 1 252 2 255 1 103 1 180 1 11 1 12 1 181 1 14 1 16 2 185 2 265 1 24 1 28 1 29 1 194 1 35 1 280 6 117 1 282 1 201 5 203 1 120 1 286 3 55 2 132 2 56 2 134 1 133 1 218 1 220 1 297 2 304 2 144 1 146 2 227 2 70 1 309 4 154 1 232 2 77 1 159 1 238 1 318 1 320 2 83 1 84 1 167 2 324 1 168 2 
96 3 2 1 29 1 194 1 154 1 35 1 220 1 77 1 280 2 180 1 117 1 12 1 181 1 318 1 201 3 320 1 83 1 50 1 286 1 24 1 70 1 309 2 
96 3 2 1 249 1 220 1 180 1 12 1 181 1 70 1 24 1 309 3 29 1 154 1 194 1 35 1 232 1 77 1 280 1 117 1 282 1 201 3 318 1 83 1 50 1 286 1 
132 1 96 3 2 1 29 1 249 1 194 1 154 1 232 1 35 1 220 1 77 1 280 2 180 1 117 1 12 1 282 1 181 1 318 1 201 3 320 1 83 1 50 1 286 1 24 1 70 1 309 3 
93 1 96 5 132 4 2 1 173 2 133 1 249 5 218 1 220 1 297 1 6 1 252 2 255 1 180 1 12 1 181 1 16 2 146 1 24 1 70 1 309 6 28 1 29 1 154 1 194 1 232 4 35 1 156 1 77 1 199 1 280 7 117 1 282 5 42 1 201 5 318 1 320 4 120 1 83 1 50 1 286 3 55 2 168 2 211 1 
132 2 96 4 2 1 173 2 133 1 249 2 218 1 220 1 297 1 6 1 252 2 255 1 180 1 12 1 181 1 304 2 16 2 144 1 146 1 24 1 70 1 309 4 28 1 29 1 154 1 194 1 232 2 35 1 77 1 280 4 117 1 282 1 201 4 318 1 320 2 120 1 83 1 286 2 55 2 168 2 
93 1 132 2 96 4 2 1 173 2 133 1 249 1 218 1 220 1 297 1 6 1 252 2 255 1 180 1 12 1 181 1 16 2 146 1 70 1 24 1 309 4 28 1 29 1 154 1 194 1 232 2 35 1 77 1 280 4 117 1 282 1 201 4 318 1 42 1 320 2 83 1 120 1 286 2 55 2 168 2 211 1 
93 1 132 2 96 4 2 1 173 2 133 1 249 1 218 1 220 1 297 1 6 1 252 2 255 1 180 1 12 1 181 1 16 2 146 1 70 1 24 1 309 4 28 1 29 1 154 1 194 1 232 2 35 1 77 1 280 4 117 1 282 1 201 4 318 1 42 1 320 2 83 1 120 1 286 2 55 2 168 2 211 1 
93 1 132 2 96 4 2 1 249 1 218 1 220 1 297 1 6 1 7 2 252 2 255 1 180 1 12 1 181 1 304 2 146 1 70 1 24 1 309 4 28 1 29 1 154 1 194 1 232 2 35 1 77 1 280 4 81 2 117 1 282 1 201 4 318 1 320 2 241 1 83 1 161 1 120 1 286 2 55 2 210 1 
93 1 96 4 132 3 2 1 173 2 133 1 249 1 218 1 220 1 297 1 6 1 252 2 255 1 180 1 12 1 181 1 16 2 146 1 70 1 24 1 309 5 28 1 29 1 154 1 194 1 35 1 232 3 156 1 77 1 280 5 117 1 282 1 42 1 201 4 318 1 320 3 120 1 83 1 286 2 55 2 168 2 211 1 
93 1 96 4 132 3 2 1 173 2 133 1 249 1 218 1 220 1 297 1 6 1 252 2 255 1 180 1 12 1 181 1 16 2 146 1 70 1 24 1 309 5 28 1 29 1 154 1 194 1 35 1 232 3 156 1 77 1 280 5 117 1 282 1 42 1 201 4 318 1 320 3 120 1 83 1 286 2 55 2 168 2 211 1 
132 2 96 4 2 1 249 1 218 1 220 1 297 1 6 1 7 2 252 2 255 1 180 1 12 1 181 1 304 2 144 1 146 1 24 1 70 1 309 4 28 1 29 1 154 1 194 1 232 2 35 1 77 1 280 4 81 2 117 1 282 1 201 4 318 1 320 2 241 1 120 1 83 1 286 2 55 2 
172 3 97 1 215 1 294 1 222 2 298 1 224 1 256 1 184 1 139 1 183 3 188 1 263 1 27 2 271 1 234 1 313 2 276 1 116 1 158 2 278 1 284 6 205 1 51 1 129 1 92 1 
172 6 97 2 215 2 217 1 294 8 222 4 298 8 224 4 301 1 254 1 257 2 104 1 15 1 139 2 183 8 259 3 188 2 143 1 27 2 230 1 234 1 313 1 276 2 158 1 116 2 284 14 45 1 165 1 206 2 208 1 243 1 327 3 92 1 
172 1 95 1 97 1 56 1 2 1 215 1 217 1 5 1 222 2 223 1 224 1 9 1 301 1 103 1 10 1 14 1 139 1 183 1 185 1 188 1 264 1 23 1 227 1 70 2 25 1 29 2 114 1 234 1 313 1 116 1 238 1 284 2 43 1 46 1 164 1 324 1 167 1 243 1 
172 10 97 3 2 1 5 1 103 2 256 1 257 2 104 2 14 2 183 10 185 3 188 3 263 1 264 2 267 1 23 2 25 2 27 8 29 3 30 2 271 1 114 1 36 2 276 3 116 3 278 1 281 1 284 20 46 1 44 2 205 1 51 1 206 2 127 2 56 1 215 3 217 1 294 7 222 6 298 7 223 2 224 7 301 1 139 3 305 1 227 3 70 3 147 2 230 4 234 3 313 2 158 4 238 2 163 1 164 1 243 1 167 3 324 2 92 3 
172 1 97 2 2 1 56 2 215 2 5 1 222 4 301 1 103 3 14 2 139 2 183 1 185 7 64 1 188 2 145 1 267 1 70 1 227 8 72 1 150 1 29 1 114 1 155 1 234 2 116 2 159 1 238 2 203 1 82 2 284 2 322 1 46 1 85 1 86 1 324 2 167 8 243 1 129 1 
172 2 97 1 2 1 215 1 291 1 217 1 294 1 5 1 222 2 298 1 224 1 302 1 257 1 104 1 139 1 183 1 188 1 70 1 27 1 29 1 114 1 234 1 276 1 158 1 116 1 200 1 284 3 206 1 92 1 
27 1 97 1 230 1 215 1 234 1 294 1 222 2 298 1 276 1 224 1 116 1 284 2 139 1 183 2 188 1 206 1 20 1 129 1 
27 1 172 2 97 1 215 1 234 1 294 1 222 2 298 1 224 1 158 1 116 1 104 1 284 2 139 1 188 1 189 1 129 1 92 1 
172 2 27 2 97 1 230 1 215 1 234 1 294 2 222 2 298 2 276 1 224 2 158 1 116 1 104 1 257 1 284 4 139 1 183 2 188 1 206 1 92 1 129 1 
27 1 97 1 230 1 215 1 155 1 234 1 294 1 222 2 298 1 276 1 224 1 116 1 284 2 139 1 183 2 188 1 206 1 20 1 
27 1 172 2 97 1 215 1 155 1 234 1 294 1 222 2 298 1 224 1 158 1 116 1 104 1 284 2 139 1 188 1 189 1 92 1 
172 2 27 2 97 1 230 1 215 1 155 1 234 1 294 2 222 2 298 2 276 1 224 2 158 1 116 1 104 1 257 1 284 4 139 1 183 2 188 1 206 1 92 1 
172 2 27 2 97 1 230 1 215 1 234 1 294 2 222 2 298 2 276 1 224 2 158 1 116 1 104 1 257 1 139 1 183 2 284 4 188 1 206 1 92 1 
172 1 97 1 56 1 215 1 222 2 223 1 301 1 103 1 14 1 183 1 139 1 185 1 188 1 264 1 23 1 227 1 70 1 25 1 147 1 29 1 234 1 313 1 116 1 238 1 284 2 324 1 167 1 243 1 
172 1 97 1 56 1 215 1 222 2 301 1 103 1 14 1 183 1 139 1 185 1 188 1 262 1 264 1 23 1 227 1 70 1 228 1 29 1 234 1 313 1 116 1 238 1 284 2 324 1 167 1 243 1 90 1 
172 2 27 2 97 1 230 1 215 1 217 1 234 1 294 2 222 2 298 2 276 1 224 2 158 1 116 1 104 1 257 1 284 4 139 1 183 2 188 1 206 1 92 1 
172 2 97 1 215 1 294 2 222 2 298 2 224 2 223 1 103 1 104 1 257 1 14 1 183 2 139 1 185 1 188 1 264 1 23 1 227 1 70 1 25 1 147 1 27 2 230 1 30 1 29 1 234 1 276 1 158 1 116 1 238 1 284 4 86 1 206 1 324 1 167 1 92 1 
172 1 213 1 97 1 2 1 215 1 291 1 217 1 5 1 294 1 222 2 298 1 224 1 302 1 104 1 257 1 139 1 183 2 188 1 70 1 27 1 230 1 29 1 114 1 234 1 276 1 116 1 284 3 206 1 92 1 
172 10 97 2 215 2 174 1 222 4 225 1 303 1 257 3 104 3 139 2 183 9 259 1 188 2 143 1 107 1 190 1 69 1 27 6 230 3 314 2 276 3 38 1 158 3 284 19 45 1 204 2 206 3 53 1 327 2 92 3 
172 12 247 1 97 3 215 3 174 1 175 1 222 6 101 2 60 1 303 1 257 3 104 2 139 3 183 14 17 1 259 2 188 3 143 2 107 2 190 1 27 3 230 2 314 4 196 1 276 3 38 1 158 1 80 1 284 26 204 1 206 3 53 2 92 2 327 2 
172 21 247 1 97 3 174 1 175 1 101 1 256 1 104 4 257 4 183 20 17 1 259 3 188 3 263 1 190 1 107 2 27 7 271 1 196 1 276 5 38 1 278 1 284 41 45 1 204 1 205 1 206 4 51 1 53 1 215 3 222 6 303 1 60 1 139 3 143 3 69 1 230 4 314 4 158 3 80 1 325 1 92 5 327 4 
172 18 247 1 97 4 174 1 175 1 101 2 256 1 104 3 257 4 183 20 17 1 259 3 188 4 263 1 190 1 107 2 27 7 271 1 196 1 276 5 38 1 278 1 284 38 45 1 204 1 205 1 206 4 51 1 53 1 215 4 222 8 303 1 60 1 139 4 143 3 69 1 230 3 314 4 158 4 80 1 325 1 92 4 327 4 
172 16 247 1 97 2 215 2 174 1 175 1 222 4 101 1 254 1 256 1 60 1 104 4 303 1 257 4 139 2 183 18 17 1 259 3 188 2 143 2 263 1 107 1 190 1 27 8 230 4 271 1 196 1 314 2 276 5 38 1 158 4 278 1 80 1 284 34 45 1 204 1 205 1 51 1 206 4 53 1 92 5 327 3 
240 1 66 1 312 1 261 1 219 1 99 1 19 1 4 1 315 1 
153 1 233 1 
240 1 193 1 34 1 312 1 219 1 99 1 19 1 296 1 179 1 315 1 
32 1 125 1 
307 1 287 1 39 1 
151 1 96 1 193 1 31 1 216 1 249 1 312 1 99 1 219 1 296 1 179 1 40 2 315 1 201 1 240 1 118 1 19 1 21 1 
151 1 96 1 193 1 31 1 216 1 249 1 312 1 99 1 219 1 296 1 179 1 40 2 315 1 201 1 240 1 118 1 19 1 21 1 
151 1 96 1 193 1 31 1 216 1 249 1 312 1 99 1 219 1 296 1 179 1 40 2 315 1 201 1 240 1 118 1 19 1 21 1 
32 1 125 1 307 1 
32 1 125 1 307 1 
287 1 39 1 
307 1 287 1 39 1 
76 1 59 1 
96 1 2 2 57 1 219 1 99 1 5 2 59 1 19 1 21 1 266 1 70 2 29 2 153 1 114 2 312 1 233 1 313 1 37 1 76 1 237 1 40 1 279 1 315 1 201 1 240 1 118 1 126 1 
73 1 29 1 2 1 70 1 
214 1 135 1 113 1 273 1 293 1 14 1 321 1 63 1 185 2 18 1 86 1 306 1 52 2 324 1 167 2 288 1 267 1 227 2 110 1 
214 1 113 1 293 1 251 1 14 1 321 1 63 1 185 1 18 1 306 1 52 2 167 1 288 1 324 1 267 1 227 1 110 1 
56 1 273 1 159 1 103 1 79 1 14 1 238 1 203 1 185 1 186 1 324 1 167 1 227 1 110 1 
214 1 135 1 113 1 273 1 293 1 14 1 321 1 63 1 185 1 18 1 306 1 52 2 167 1 288 1 324 1 267 1 227 1 110 1 
274 1 
184 1 166 1 244 1 
96 1 28 1 133 1 173 1 249 2 6 1 297 1 255 1 280 1 282 1 201 1 304 1 16 1 120 1 286 1 168 1 146 1 
0 1 96 5 2 1 249 8 5 1 6 4 177 2 255 4 178 4 103 6 182 1 257 2 104 2 14 2 16 6 185 1 187 2 265 2 191 1 23 1 192 6 28 4 29 1 271 1 33 1 114 1 35 2 115 1 276 4 278 1 280 5 41 1 282 2 202 1 201 5 120 4 121 2 47 3 124 2 51 1 206 2 207 3 286 3 209 2 127 2 56 1 134 1 291 1 220 1 297 12 304 12 70 1 227 1 146 11 152 1 238 1 242 1 166 1 324 1 167 1 169 1 244 1 170 6 91 2 92 4 
96 1 249 3 175 1 297 7 6 2 178 1 255 2 60 1 257 2 104 2 304 4 16 2 17 1 259 1 143 1 146 4 192 4 28 2 196 1 276 2 280 1 80 1 282 1 201 1 119 1 120 2 206 2 286 1 170 4 327 1 92 2 
96 1 2 1 291 1 220 1 5 1 6 1 297 2 178 2 255 1 70 1 146 2 152 1 28 1 29 1 271 1 33 1 114 1 115 1 276 2 278 1 41 1 42 1 201 1 120 1 47 1 51 1 169 1 92 1 
28 1 120 1 6 1 255 1 244 1 
192 5 249 5 297 5 276 2 178 2 257 2 104 2 304 10 16 5 47 1 206 2 127 1 146 5 170 5 92 2 
201 1 96 1 249 1 286 1 280 1 282 1 
96 3 56 2 248 1 134 2 6 2 297 2 255 1 103 1 14 1 62 1 185 4 265 2 227 4 146 2 28 2 159 1 280 4 283 2 238 1 202 1 201 3 203 1 120 2 48 1 84 1 286 2 324 1 167 4 246 1 
172 1 97 1 56 1 2 2 215 1 291 2 5 2 222 2 223 1 103 1 14 1 139 1 185 1 188 1 264 1 109 1 227 1 70 3 23 1 147 1 25 1 29 3 114 2 234 1 313 1 116 1 238 1 284 1 243 1 167 1 324 1 169 1 
192 2 28 1 134 1 249 4 6 1 297 1 255 1 282 2 304 4 16 2 120 1 205 1 265 1 170 2 146 2 
240 1 312 1 317 1 
240 1 312 1 296 1 100 1 76 1 
240 1 312 1 317 1 
240 1 312 1 317 1 
240 1 112 1 312 1 
240 1 112 1 312 1 
240 1 112 1 312 1 
240 1 312 1 
219 1 315 1 
172 4 27 3 97 2 230 1 215 2 271 1 222 4 276 1 101 1 158 2 278 1 256 1 284 8 183 4 139 2 205 1 188 2 51 1 263 1 92 1 
172 3 27 2 271 1 276 1 158 2 278 1 256 1 184 1 183 3 284 6 205 1 51 1 263 1 92 1 
172 2 27 2 97 1 230 1 215 1 176 1 222 2 276 1 158 1 104 1 257 1 139 1 183 2 284 4 188 1 206 1 92 1 
172 1 183 1 284 2 259 1 143 1 327 1 
172 12 97 1 215 1 222 2 101 1 254 1 256 1 104 2 257 2 183 13 139 1 259 2 188 1 263 1 27 8 230 4 33 1 271 2 276 5 158 4 278 2 284 25 45 1 165 1 205 1 51 2 206 2 92 5 327 2 
172 1 284 1 327 1 
284 1 183 1 259 1 
172 3 27 3 97 1 230 1 215 1 176 1 222 2 276 1 158 2 257 1 104 1 139 1 284 6 183 3 188 1 206 1 127 1 92 1 
172 6 97 1 215 1 175 1 222 2 257 2 104 2 60 1 139 1 183 6 17 1 259 1 188 1 143 1 190 1 27 2 230 1 196 1 276 2 158 1 80 1 284 12 206 2 327 1 92 2 
27 2 172 3 230 1 284 6 183 3 271 1 51 1 276 1 158 1 278 1 92 1 
27 2 172 2 97 1 230 1 271 1 215 1 250 1 222 2 101 1 158 1 256 1 183 1 284 3 139 1 188 1 51 1 263 1 
27 5 172 5 97 1 230 2 215 1 33 1 271 2 222 2 276 2 158 3 278 1 139 1 183 5 284 10 188 1 51 2 190 1 92 2 
27 1 97 1 230 1 215 1 222 2 276 1 139 1 183 2 284 2 188 1 206 1 190 1 
172 2 27 2 97 1 230 1 215 1 222 2 276 1 158 1 104 1 257 1 139 1 183 2 284 4 188 1 206 1 190 1 92 1 
172 2 27 2 97 3 230 1 215 3 271 1 250 1 222 6 101 1 158 1 284 3 139 3 183 1 188 3 51 1 190 1 69 1 
172 18 1 1 97 5 98 1 215 5 250 1 176 1 222 10 101 2 256 1 257 3 104 3 139 5 183 16 259 3 226 1 188 5 143 1 263 1 190 1 69 1 27 12 230 5 271 3 276 5 158 7 278 2 284 34 45 1 205 1 51 3 206 3 327 4 92 5 
172 4 97 1 215 1 222 2 256 1 139 1 183 4 259 1 188 1 143 1 263 1 190 1 27 2 271 1 276 1 158 2 278 1 80 1 284 8 205 1 51 1 92 1 327 1 
172 5 97 2 215 2 176 1 222 4 256 1 257 1 139 2 183 6 259 1 188 2 143 1 263 1 190 1 27 3 230 1 271 1 276 2 158 2 278 1 80 1 284 11 45 1 205 1 51 1 206 1 92 1 327 2 
172 7 97 3 215 3 175 1 176 1 222 6 101 1 257 2 104 2 60 1 139 3 183 6 17 1 259 1 188 3 143 1 190 1 27 2 230 1 196 1 276 2 158 1 80 1 284 13 206 2 327 1 92 2 
172 4 97 3 215 3 175 1 176 1 222 6 101 1 257 2 104 1 60 1 139 3 183 7 17 1 259 1 188 3 143 1 190 1 27 2 230 1 196 1 276 2 158 1 80 1 284 11 206 2 327 1 92 1 
172 4 97 1 215 1 222 2 256 1 139 1 183 4 259 1 188 1 143 1 263 1 190 1 27 2 271 1 276 1 158 2 278 1 80 1 284 8 205 1 51 1 92 1 327 1 
172 6 97 1 215 1 175 1 222 2 257 2 104 2 60 1 139 1 183 6 17 1 259 1 188 1 143 1 190 1 27 2 230 1 196 1 276 2 158 1 80 1 284 12 206 2 327 1 92 2 
172 5 97 4 215 4 175 1 176 1 222 8 101 2 60 1 257 2 104 1 139 4 183 7 17 1 259 1 188 4 143 1 190 1 27 2 230 1 196 1 276 2 158 1 80 1 284 12 206 2 327 1 92 1 
172 5 97 4 215 4 175 1 222 8 101 2 60 1 257 2 104 1 139 4 183 7 17 1 259 1 188 4 143 1 190 1 69 1 27 4 230 2 196 1 276 2 158 2 80 1 284 12 206 2 327 1 92 1 
172 4 27 6 230 3 271 3 276 1 158 3 278 1 256 2 284 7 183 3 51 3 263 1 92 1 
172 5 97 4 215 4 175 1 222 8 101 2 60 1 257 2 104 1 139 4 183 7 17 1 259 1 188 4 143 1 190 1 69 1 27 2 230 1 196 1 276 2 158 1 80 1 284 12 206 2 327 1 92 1 
29 1 2 1 162 1 313 1 106 1 70 1 117 1 
2 1 29 1 313 1 75 1 102 1 117 1 162 1 260 1 106 1 70 1 268 1 245 1 
14 1 238 1 203 1 184 1 56 1 185 1 324 1 167 1 159 1 103 1 227 1 
2 1 29 2 56 1 114 1 313 1 5 1 103 1 238 1 14 1 46 1 185 1 264 1 167 1 324 1 23 1 70 2 227 1 25 1 
2 2 5 1 220 1 103 3 14 1 185 1 264 1 227 1 70 2 23 2 25 1 229 1 29 2 114 2 313 1 235 1 77 1 283 1 238 2 318 1 46 1 324 1 167 1 
2 2 5 1 220 1 103 3 14 1 185 2 262 1 264 1 227 2 70 2 23 2 310 1 229 1 29 2 114 2 313 1 235 1 77 1 283 1 238 2 318 1 46 1 324 1 167 2 
96 1 2 1 249 1 291 1 220 1 5 1 103 1 185 1 142 1 227 1 70 1 152 1 29 1 114 1 115 1 282 1 41 1 283 1 201 1 207 1 167 1 169 1 
229 1 96 2 56 1 249 1 35 1 235 1 177 1 103 4 280 1 282 1 238 1 14 1 201 2 283 1 185 3 207 1 167 3 209 1 324 1 23 1 227 3 310 1 
14 1 185 1 64 1 324 1 167 1 227 1 
56 2 103 3 238 2 14 3 138 1 82 1 322 1 185 6 64 1 85 1 122 1 86 1 145 1 167 7 54 1 324 2 191 1 267 1 227 7 23 1 72 1 
172 3 97 2 2 1 5 1 103 1 256 1 14 1 183 3 185 1 188 2 263 1 264 1 23 1 25 1 111 1 27 2 30 1 29 2 271 1 114 1 276 1 116 2 278 1 284 6 44 1 46 1 205 1 51 1 215 2 217 1 294 1 222 4 298 1 224 1 223 1 139 2 227 1 70 2 147 1 234 2 313 2 158 2 238 1 86 1 167 1 324 1 92 1 
96 3 2 1 249 1 5 1 6 2 177 1 255 2 178 2 103 2 185 1 28 2 29 1 33 1 271 1 114 1 35 1 115 1 276 2 280 2 278 1 282 1 41 1 201 3 202 1 120 2 47 1 121 1 124 1 51 1 207 1 286 1 209 1 56 1 57 1 291 1 220 1 297 4 227 1 146 4 70 1 152 1 166 1 167 1 244 1 169 1 91 1 92 2 
103 2 238 1 14 2 242 1 185 2 64 1 86 1 209 1 167 2 324 1 191 1 227 2 23 1 
56 1 159 1 103 1 14 1 238 1 319 1 203 1 185 4 86 1 167 4 324 1 227 4 310 1 
58 1 103 1 281 1 283 1 238 1 14 2 185 2 122 1 167 2 89 1 54 1 324 1 227 2 23 1 
14 1 56 1 321 1 185 1 293 1 306 1 52 1 324 1 167 1 227 1 
14 1 238 1 185 2 86 1 324 1 167 2 103 1 267 1 227 2 72 1 149 1 
56 1 159 1 103 3 283 1 238 2 14 2 319 1 203 1 185 4 322 1 85 1 86 1 167 5 324 2 227 5 72 1 
56 1 159 1 103 3 283 1 238 2 14 2 319 1 203 1 185 4 85 1 86 1 88 1 167 5 324 2 227 5 72 1 
2 1 29 2 56 1 114 1 313 1 5 1 103 1 238 1 14 1 46 1 185 1 262 1 264 1 167 1 324 1 23 1 70 2 227 1 
103 1 283 1 238 1 14 2 138 1 185 1 122 1 167 1 54 1 324 1 191 1 227 1 23 1 
160 1 313 1 136 1 13 1 171 1 
201 1 96 1 57 1 3 1 157 1 289 1 171 1 
73 1 160 1 136 1 171 1 
318 1 160 1 141 1 35 1 220 1 157 1 136 1 77 1 289 1 12 1 13 1 171 1 

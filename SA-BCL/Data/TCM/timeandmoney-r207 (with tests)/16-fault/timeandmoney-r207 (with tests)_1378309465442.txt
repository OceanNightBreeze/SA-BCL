#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 205 (206,217) (206,217) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 205 (206,217) (206,217) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 205 (206,217) (206,217) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 205 (206,217) (206,217) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 205 (7,338) (7,338) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException 177 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 177 330 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 177 330 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (91,148,269) 255 105 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (91,148,269) 255 105 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (23,77,161,275) (23,77,161,275) (22,86,172) (22,86,172) (22,86,172) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (23,77,161,275) (23,77,161,275) (22,86,172) (22,86,172) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (23,77,161,275) (23,77,161,275) (22,86,172) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (49,188) (49,188) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (91,148,269) 255 (128,140,145) 121 333 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (91,148,269) 255 105 277 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 277 182 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
206 1 217 1 271 1 23 1 161 1 205 1 162 1 79 1 77 1 
206 1 217 1 271 1 23 1 161 1 205 1 162 1 79 1 77 1 
206 1 217 1 271 1 23 1 161 1 205 1 162 1 79 1 77 1 
206 1 217 1 271 1 23 1 161 1 205 1 162 1 79 1 77 1 
0 1 312 1 110 1 216 1 39 1 23 1 271 4 132 1 31 1 161 4 162 1 15 2 275 3 253 3 293 2 102 1 213 1 77 1 
7 1 338 1 271 1 23 1 31 1 161 1 205 1 162 1 107 1 79 1 77 1 
177 1 271 1 23 1 161 1 162 1 77 1 
177 1 275 1 271 2 23 1 161 2 162 1 37 1 330 1 77 1 
177 1 275 1 271 2 23 1 161 2 162 1 37 1 330 1 77 1 
195 1 11 1 19 1 
195 1 267 1 215 2 
30 1 148 2 45 2 269 2 91 2 48 1 150 2 241 2 
190 2 21 1 148 3 4 2 150 3 241 2 317 1 135 2 97 1 45 2 73 1 137 1 321 1 226 2 28 1 180 1 48 1 249 1 181 1 343 2 30 1 159 1 160 1 325 1 83 1 269 2 104 1 126 1 167 1 348 1 87 1 278 1 90 1 187 1 63 1 350 1 91 2 
170 1 148 1 45 1 269 1 250 1 57 1 91 1 48 1 150 1 241 1 
255 1 128 1 91 1 
145 2 148 2 150 2 241 2 195 1 6 1 44 2 45 2 228 1 48 1 11 1 269 2 57 1 250 1 140 1 170 2 235 1 62 1 91 2 
145 1 44 1 94 1 124 1 76 1 
145 2 195 1 328 1 11 1 286 1 44 2 94 1 124 1 
145 1 44 1 94 1 
145 1 148 1 269 1 250 1 124 1 57 1 241 1 150 1 6 1 170 1 44 1 45 1 48 1 91 1 
195 1 
145 2 195 1 11 1 286 1 44 2 94 1 239 1 124 1 
145 5 93 1 11 1 286 1 335 1 94 2 204 1 56 1 316 2 124 2 339 1 60 1 276 2 195 1 42 2 44 5 349 1 8 1 210 1 
30 1 19 1 
30 2 148 2 260 1 269 1 150 2 241 1 45 1 26 1 91 2 
146 1 246 1 261 1 
190 1 343 1 30 1 159 1 148 1 325 1 104 1 150 1 72 1 278 1 73 1 226 1 187 1 63 1 350 1 180 1 
30 1 136 1 45 1 148 3 269 3 91 3 150 3 241 3 
170 1 148 1 269 1 250 1 91 1 150 1 241 1 
170 1 148 1 45 1 260 1 26 1 269 1 91 1 150 1 241 1 
260 1 4 1 176 1 96 1 223 1 136 1 135 2 44 1 45 2 137 1 321 1 226 1 48 1 228 1 180 1 181 1 325 1 269 3 55 1 104 1 140 1 278 1 235 1 62 1 187 1 63 1 190 1 145 1 148 4 241 3 150 4 73 1 28 1 249 1 343 1 30 1 159 1 83 1 126 1 348 1 87 1 170 2 90 1 91 3 350 1 
136 1 148 1 269 1 255 1 105 1 91 2 150 1 241 1 
145 1 260 1 148 3 269 3 55 1 176 1 241 3 150 3 140 1 195 1 136 2 44 1 170 1 45 1 235 1 62 1 228 1 91 3 248 1 
260 1 148 2 261 1 269 2 241 2 150 2 136 1 246 1 45 1 91 2 
190 1 343 1 30 1 159 1 148 1 325 1 104 1 150 1 278 1 73 1 226 1 187 1 63 1 180 1 350 1 
190 1 343 1 30 1 148 1 325 1 345 1 104 1 150 1 278 1 73 1 208 1 226 1 187 1 180 1 350 1 
257 1 146 2 173 1 4 4 261 2 135 2 222 1 246 2 137 1 321 1 249 1 10 1 160 2 324 1 344 1 54 1 82 1 83 1 59 1 303 1 348 2 254 1 87 1 90 1 
221 1 170 1 148 1 235 1 269 1 91 1 150 1 241 1 
190 1 343 1 159 1 325 1 148 2 269 1 104 1 55 1 241 1 150 2 136 1 246 1 278 1 73 1 187 1 226 1 63 1 350 1 180 1 91 1 
30 1 148 4 260 1 269 4 55 1 105 1 241 4 150 4 304 1 136 2 45 1 89 1 255 1 91 5 
221 1 170 1 148 2 269 2 250 1 91 2 150 2 241 2 
288 1 227 1 
288 1 227 1 
106 1 224 1 
106 1 224 1 
106 1 224 1 
288 1 227 1 251 1 
288 1 227 1 251 1 
191 1 288 1 227 1 
306 1 106 1 288 2 224 1 227 2 351 1 
288 1 227 1 251 1 
288 1 337 1 227 1 
288 1 337 1 227 1 
288 1 337 1 227 1 
145 2 81 3 310 1 288 2 3 2 67 2 32 1 195 1 319 2 44 2 236 1 47 1 227 2 36 2 351 1 200 1 247 2 296 1 189 1 
145 1 20 1 191 1 288 1 148 2 67 1 241 2 150 2 319 1 44 1 196 1 227 1 247 1 52 1 30 1 81 1 203 1 269 2 18 1 329 1 36 1 91 2 212 1 189 1 
0 1 31 1 102 1 
31 1 102 1 107 1 
0 2 147 1 38 1 341 1 31 3 107 1 
0 1 38 1 341 1 31 2 171 1 107 1 
0 1 38 1 341 2 31 2 107 1 
257 1 145 5 130 2 286 1 215 3 94 1 316 1 339 1 220 1 267 1 318 1 42 1 195 2 44 5 196 1 119 1 225 1 342 1 322 1 52 1 11 1 324 1 82 1 124 4 301 2 60 2 166 1 276 1 254 1 17 2 329 1 210 3 
257 3 145 9 92 1 130 6 286 1 335 1 215 9 94 6 316 2 339 1 266 1 70 5 267 3 318 3 195 5 42 2 196 4 44 9 342 2 76 5 322 2 11 1 324 3 82 3 124 7 60 6 165 1 166 1 276 2 254 3 17 6 207 1 210 8 237 1 352 1 
257 1 145 3 130 2 335 1 215 4 316 1 220 1 195 3 267 2 42 1 318 1 44 3 196 1 225 1 342 1 322 1 11 1 324 1 82 1 124 2 301 1 60 2 276 1 254 1 17 2 210 3 
257 2 145 4 130 4 215 7 335 1 316 1 220 1 195 4 267 3 42 1 318 2 44 4 196 2 225 1 342 1 322 1 11 1 324 2 82 2 301 2 124 3 60 4 165 1 276 1 254 2 17 4 210 5 237 1 352 1 
12 1 19 1 350 1 
198 1 350 1 
282 1 
350 1 180 1 
1 1 278 1 12 2 350 3 180 1 68 1 
278 1 350 1 180 1 
66 1 350 1 
257 1 10 3 108 1 173 2 287 1 160 4 4 7 112 2 149 1 163 1 69 1 348 3 33 1 254 1 116 1 197 1 211 1 
257 1 10 3 108 1 173 2 287 1 160 4 4 7 112 2 149 1 163 1 69 1 348 3 33 1 254 1 116 1 197 1 211 1 
257 1 10 3 108 1 173 2 287 1 160 4 4 7 112 2 149 1 163 1 69 1 346 1 348 3 33 1 254 1 116 1 197 1 211 1 
309 1 257 4 283 4 285 1 108 2 287 2 173 5 314 3 4 31 112 3 149 2 69 2 116 1 318 3 135 2 197 1 137 1 46 1 321 1 10 10 160 16 324 3 82 3 83 1 163 1 327 1 168 1 33 1 348 15 254 4 87 1 169 1 232 1 211 5 
257 1 108 1 173 3 287 1 4 9 112 2 149 1 69 1 116 1 135 4 137 2 179 1 321 2 74 1 10 4 160 5 83 2 163 1 348 4 33 1 254 1 87 2 169 1 211 1 
190 1 172 1 0 1 22 1 147 1 23 1 174 1 5 1 320 1 340 1 226 1 102 1 80 1 77 1 79 1 343 1 325 1 271 1 300 1 161 2 31 2 162 1 275 1 86 1 187 1 280 1 107 1 
190 1 172 1 0 1 147 1 23 1 174 1 175 1 5 1 43 1 320 1 340 1 226 1 102 1 77 1 79 1 343 1 325 1 271 2 300 1 161 3 31 2 275 2 86 1 142 1 187 1 280 1 107 1 
172 1 190 1 0 1 343 1 147 1 325 1 300 1 271 1 31 2 174 1 161 2 175 1 5 1 275 2 320 1 340 1 142 1 187 1 226 1 102 1 107 1 79 1 
190 1 343 1 325 1 23 1 271 1 270 1 161 1 5 2 43 1 307 1 118 1 73 1 320 2 340 2 187 1 188 1 226 1 350 1 180 1 35 1 49 1 79 2 77 1 
190 1 172 1 0 1 22 1 147 1 23 1 174 1 175 1 5 1 320 1 340 1 226 1 102 1 77 1 79 1 343 1 325 1 271 1 300 1 161 1 31 2 162 1 86 1 187 1 280 1 107 1 
219 1 
190 2 145 2 333 1 286 1 94 2 316 1 339 1 95 1 42 1 44 2 73 2 121 1 226 2 180 1 322 1 323 1 343 2 299 1 325 1 60 1 276 1 305 1 307 1 255 1 61 1 128 1 187 1 210 1 91 1 350 1 35 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 2 333 1 286 1 44 2 299 1 94 1 239 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 299 1 316 1 339 1 276 1 42 1 44 1 255 1 61 1 121 1 128 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 44 1 299 1 255 1 61 1 128 1 121 1 91 1 
145 1 333 1 299 1 316 1 339 1 276 1 42 1 44 1 255 1 61 1 121 1 128 1 91 1 
257 1 146 1 287 1 173 2 261 1 4 6 112 1 69 1 116 1 135 2 246 1 137 1 321 1 249 1 10 2 30 2 160 3 54 1 83 1 163 1 33 1 348 3 254 1 87 1 19 1 90 1 
309 1 257 1 283 3 146 11 21 1 173 1 2 1 4 14 314 3 261 4 263 1 318 2 135 4 246 11 137 2 321 2 101 1 199 1 249 2 181 1 30 1 10 2 160 8 324 1 82 2 83 2 14 1 327 1 348 6 254 2 87 2 90 1 211 1 
190 1 21 1 238 1 2 1 148 2 261 1 4 2 150 2 241 1 291 1 72 1 136 1 135 2 73 1 137 1 321 1 226 1 180 1 249 1 181 1 343 1 30 1 159 1 160 1 325 1 83 1 269 1 104 1 55 1 139 1 348 1 87 1 278 1 90 1 187 1 63 1 350 1 91 1 
257 3 173 6 2 1 4 20 261 7 175 1 41 2 318 2 135 6 136 1 137 3 321 3 226 3 180 2 181 1 10 10 324 2 325 2 269 1 55 1 104 2 278 2 187 2 63 2 281 2 190 3 146 7 21 1 287 1 111 2 148 3 112 1 241 1 150 3 69 1 116 1 117 1 246 7 73 1 27 1 28 2 249 3 343 3 30 2 159 2 160 10 82 2 83 3 302 2 163 1 33 1 348 10 34 1 254 3 87 3 90 3 91 1 350 2 211 4 
190 8 21 1 258 1 148 1 4 2 175 1 150 1 241 1 136 1 135 4 178 1 97 2 73 2 137 2 321 2 154 1 226 7 122 1 180 2 249 2 80 1 78 1 181 1 343 8 160 1 54 1 325 2 269 1 83 2 274 1 348 1 87 2 230 1 307 1 90 2 187 2 91 1 350 3 35 1 
257 1 146 1 173 1 260 1 2 1 148 1 261 1 4 3 241 1 150 1 318 1 135 2 246 1 45 1 137 1 321 1 9 1 249 1 10 1 160 1 324 1 82 1 83 1 269 1 348 2 254 1 87 1 90 1 91 1 
146 1 10 1 344 1 160 2 54 1 82 1 261 1 4 2 83 1 254 1 135 2 87 1 246 1 90 1 137 1 321 1 211 1 249 1 
257 1 146 1 10 1 173 1 324 1 54 1 261 1 4 2 83 1 303 1 348 2 135 2 87 1 246 1 90 1 137 1 321 1 249 1 
257 1 146 2 173 1 4 4 261 2 318 1 135 2 246 2 137 1 321 1 249 1 10 2 160 2 324 1 82 1 54 1 83 1 348 2 254 1 87 1 90 1 211 1 
146 1 10 1 344 1 160 2 82 1 261 1 4 2 83 1 254 1 135 2 87 1 246 1 90 1 137 1 321 1 211 1 249 1 78 1 
257 1 146 1 10 1 173 1 324 1 261 1 4 2 83 1 303 1 348 2 135 2 87 1 246 1 90 1 137 1 321 1 249 1 78 1 
257 1 146 2 173 1 4 4 261 2 318 1 135 2 246 2 137 1 321 1 249 1 78 1 10 2 160 2 324 1 82 1 83 1 348 2 254 1 87 1 90 1 211 1 
257 1 146 2 173 1 4 4 261 2 318 1 135 2 246 2 137 1 321 1 249 1 10 2 160 2 324 1 82 1 83 1 348 2 254 1 87 1 90 1 211 1 
190 1 21 1 148 1 4 2 150 1 135 2 73 1 137 1 321 1 28 1 226 1 180 1 249 1 181 1 343 1 30 1 159 1 160 1 325 1 83 1 104 1 348 1 87 1 278 1 90 1 187 1 63 1 350 1 
190 1 21 1 148 1 4 2 313 1 150 1 135 2 73 1 137 1 321 1 226 1 180 1 249 1 181 1 343 1 30 1 160 1 325 1 83 1 345 1 104 1 348 1 87 1 278 1 208 1 90 1 187 1 350 1 
257 1 146 2 173 1 2 1 4 4 261 2 318 1 135 2 246 2 137 1 321 1 249 1 10 2 160 2 324 1 82 1 83 1 348 2 254 1 87 1 90 1 211 1 
257 1 190 1 146 2 173 1 148 1 261 2 4 4 150 1 318 1 135 2 246 2 137 1 321 1 28 1 226 1 180 1 249 1 80 1 343 1 10 2 159 1 324 1 160 2 82 1 325 1 83 1 104 1 348 2 254 1 87 1 278 1 90 1 187 1 63 1 350 1 211 1 281 1 
257 1 146 1 260 1 2 1 148 1 4 3 261 1 241 1 150 1 318 1 135 2 246 1 45 1 137 1 321 1 249 1 10 1 324 1 160 2 82 1 83 1 269 1 348 1 254 1 87 1 234 1 90 1 91 1 211 1 
309 1 257 2 283 2 173 2 4 13 314 1 113 1 265 1 194 1 318 2 135 4 137 2 321 2 74 1 229 1 10 4 160 6 324 2 82 2 83 2 58 1 327 1 348 7 254 2 87 2 231 1 233 1 209 1 129 1 211 2 
257 1 309 2 283 2 173 1 4 20 314 2 265 2 194 1 134 1 243 1 318 2 135 6 137 3 321 3 74 1 229 1 158 1 10 2 298 1 160 11 324 1 82 2 83 3 58 3 348 9 185 1 254 2 169 2 87 3 231 2 233 1 308 1 211 1 
309 1 257 1 283 2 173 1 4 9 314 1 265 1 194 1 318 1 135 4 137 2 321 2 74 1 229 1 10 2 160 4 324 1 82 1 83 2 58 1 327 1 348 5 254 1 87 2 231 1 233 1 129 1 211 1 
309 1 257 1 283 2 173 1 4 9 314 1 265 1 194 1 318 1 135 4 137 2 321 2 74 1 229 1 10 2 160 4 324 1 82 1 83 2 58 1 327 1 348 5 254 1 87 2 231 1 233 1 129 1 211 1 
309 2 257 7 283 4 287 1 173 6 4 46 314 4 112 1 265 1 194 1 69 1 134 1 243 1 116 1 318 6 135 4 137 2 321 2 74 1 158 1 229 1 10 12 298 1 160 24 324 6 82 6 83 2 14 2 58 3 163 1 327 2 33 1 185 1 348 22 254 7 169 1 87 2 231 1 233 1 308 1 211 6 
190 2 21 1 258 1 259 1 2 1 148 2 4 2 240 1 150 2 242 1 135 2 245 1 97 2 137 1 321 1 226 2 180 1 249 1 181 1 343 2 160 1 325 1 83 1 348 1 87 1 230 1 88 1 90 1 187 1 350 1 91 2 
190 2 0 1 343 2 147 1 325 1 300 1 31 2 174 1 40 1 175 1 5 1 120 1 279 1 187 1 226 2 280 1 102 1 107 1 80 1 
190 1 0 1 343 1 147 1 325 1 300 1 31 2 114 1 174 1 175 1 5 1 120 1 226 1 187 1 280 1 102 1 107 1 
190 1 343 1 325 1 40 1 5 1 347 1 307 1 73 1 118 1 187 1 226 1 350 1 180 1 35 1 
190 1 0 1 343 1 147 1 325 1 300 1 31 2 174 1 40 1 175 1 5 1 120 1 279 1 226 1 187 1 280 1 102 1 107 1 
123 1 
93 1 195 1 11 1 19 1 56 1 210 1 60 1 
145 1 286 1 215 1 94 1 316 1 339 1 151 1 152 1 267 1 42 1 195 2 44 1 155 1 11 1 60 1 276 1 210 1 
257 1 145 2 190 1 130 3 65 1 286 1 215 6 94 2 316 2 68 1 41 1 339 2 318 1 195 3 267 3 42 2 44 2 73 1 198 2 156 1 226 1 228 1 180 1 322 1 157 1 343 1 324 1 82 1 326 1 325 2 12 1 13 1 252 1 60 3 276 2 254 1 16 1 17 3 278 1 187 1 210 4 350 4 331 1 
145 1 309 1 257 2 283 1 130 5 286 1 215 6 94 1 314 1 316 2 95 1 339 2 134 1 243 1 42 2 267 3 195 5 318 2 44 1 156 2 322 1 201 1 183 1 158 1 298 1 11 2 324 2 82 2 60 5 276 2 185 1 186 1 254 2 17 5 210 8 
145 1 257 1 287 1 148 1 316 1 150 1 339 1 241 1 69 1 42 1 6 1 44 1 45 1 156 2 48 1 50 1 269 1 272 1 250 1 57 1 163 1 60 2 276 1 186 1 254 2 170 1 210 2 91 1 
93 1 11 1 316 1 56 1 339 1 60 1 276 1 42 1 195 1 210 1 
257 2 130 5 215 10 324 2 82 2 41 1 60 5 186 1 318 2 254 2 267 5 195 5 17 5 156 2 210 5 
145 1 195 1 11 1 44 1 286 1 94 1 
190 4 145 3 286 2 335 1 94 4 315 1 316 2 218 1 339 1 95 2 115 2 42 2 44 3 73 2 226 4 180 1 322 2 323 1 343 4 325 1 60 2 276 2 305 1 307 1 187 1 210 2 143 1 350 1 35 1 
190 1 148 3 4 1 150 3 241 2 135 2 73 1 45 2 137 1 321 1 226 1 28 1 48 1 180 1 249 1 181 1 343 1 30 1 159 1 325 1 269 2 83 1 104 1 126 1 348 1 87 1 278 1 90 1 187 1 63 1 91 2 350 1 
130 2 11 2 215 4 112 1 316 1 339 1 95 1 60 2 276 1 267 2 42 1 195 4 17 2 210 1 322 1 
98 1 67 1 247 1 
98 1 67 1 247 1 
18 1 289 1 67 1 247 1 296 1 
98 1 67 1 247 1 
67 1 64 1 247 1 
67 1 64 1 247 1 
67 1 64 1 247 1 
67 1 247 1 
288 1 227 1 
257 1 10 3 160 4 173 2 287 1 4 8 83 2 112 1 163 1 69 1 348 4 33 1 254 1 116 1 135 4 87 2 169 1 137 2 321 2 211 1 
257 1 10 2 287 1 173 2 160 3 4 6 112 1 163 1 69 1 348 3 33 1 116 1 254 1 19 1 
257 1 10 2 173 1 324 1 160 2 82 1 83 1 4 4 125 1 348 2 318 1 254 1 135 2 87 1 137 1 321 1 211 1 
257 1 309 1 283 2 10 2 173 1 324 1 160 3 82 1 4 7 314 1 327 1 348 4 318 1 254 1 211 1 
257 3 283 2 334 1 287 2 173 5 314 2 4 23 112 1 69 2 116 1 318 2 135 4 137 2 321 2 101 1 10 9 160 11 324 2 82 2 83 2 14 1 163 1 327 1 33 1 348 12 254 3 169 2 87 2 211 4 
348 1 283 1 4 1 
160 1 4 1 314 1 
257 1 10 2 160 3 324 1 173 1 82 1 83 1 4 6 125 1 41 1 348 3 318 1 254 1 87 1 135 2 137 1 321 1 211 1 
309 1 257 2 283 1 173 1 314 1 4 12 134 1 243 1 318 2 135 2 137 1 321 1 74 1 158 1 10 2 298 1 160 6 324 2 82 2 83 1 348 6 185 1 254 2 87 1 211 1 
257 1 10 2 160 3 287 1 173 1 4 6 163 1 69 1 348 3 254 1 211 1 
334 1 10 2 160 1 173 1 287 1 4 3 83 1 69 1 348 2 33 1 116 1 169 1 135 2 87 1 137 1 321 1 211 1 
50 1 257 2 10 5 287 2 173 3 160 5 83 1 4 10 163 1 69 2 348 5 254 2 87 1 135 2 137 1 321 1 74 1 211 2 
10 1 160 2 82 1 83 1 4 2 254 1 135 2 87 1 137 1 321 1 74 1 211 1 
257 1 10 2 173 1 324 1 160 2 82 1 83 1 4 4 348 2 318 1 254 1 135 2 87 1 137 1 321 1 74 1 211 1 
334 1 10 2 287 1 173 1 160 1 4 3 83 3 69 1 348 2 169 1 135 6 87 3 137 3 321 3 74 1 129 1 211 1 
309 1 257 5 334 1 285 1 283 4 287 3 173 7 4 34 314 3 112 1 69 3 116 1 318 3 135 10 137 5 46 1 321 5 74 1 10 12 160 16 324 3 82 3 83 5 125 1 163 2 327 1 168 1 33 1 348 18 254 5 169 2 87 5 129 1 211 5 
257 1 309 1 283 1 287 1 173 2 314 1 4 8 112 1 134 1 69 1 116 1 135 2 137 1 321 1 74 1 10 2 160 4 83 1 163 1 348 4 33 1 254 1 87 1 
257 1 309 1 283 2 173 2 287 1 4 11 314 1 112 1 69 1 134 1 116 1 318 1 135 4 137 2 321 2 74 1 10 3 160 6 82 1 83 2 125 1 163 1 327 1 33 1 348 5 254 2 87 2 211 1 
309 1 257 3 283 1 287 1 173 3 314 1 4 19 112 1 69 1 134 1 243 1 116 1 318 2 135 6 137 3 321 3 74 1 158 1 10 4 298 1 160 9 324 2 82 2 83 3 125 1 163 1 33 1 348 10 185 1 254 3 87 3 169 1 211 1 
309 1 257 2 283 1 287 1 173 3 314 1 4 17 112 1 69 1 134 1 243 1 116 1 318 2 135 6 137 3 321 3 74 1 158 1 10 5 298 1 160 10 324 1 82 2 83 3 125 1 163 1 33 1 348 7 185 1 254 3 169 1 87 3 211 2 
257 1 309 1 283 1 287 1 173 2 314 1 4 8 112 1 134 1 69 1 116 1 135 2 137 1 321 1 74 1 10 2 160 4 83 1 163 1 348 4 33 1 254 1 87 1 
309 1 257 2 283 1 173 1 314 1 4 12 134 1 243 1 318 2 135 2 137 1 321 1 74 1 158 1 10 2 298 1 160 6 324 2 82 2 83 1 348 6 185 1 254 2 87 1 211 1 
309 1 257 2 283 1 287 1 173 3 4 18 314 1 112 1 69 1 134 1 243 1 116 1 318 2 135 8 137 4 321 4 74 1 158 1 10 5 298 1 160 10 324 1 82 2 83 4 125 1 163 1 33 1 348 8 185 1 254 3 87 4 169 2 211 2 
309 1 257 2 283 1 173 3 4 16 314 1 134 1 243 1 318 3 135 8 137 4 321 4 74 1 158 1 10 6 298 1 160 9 324 2 82 3 83 4 348 7 185 1 254 3 87 4 169 2 211 3 129 1 
257 1 10 6 287 3 173 3 160 3 4 7 163 1 69 3 348 4 33 1 116 2 254 1 211 3 
309 1 257 2 283 1 287 1 173 3 4 18 314 1 112 1 69 1 134 1 243 1 116 1 318 2 135 8 137 4 321 4 74 1 158 1 10 4 298 1 160 10 324 1 82 2 83 4 163 1 33 1 348 8 185 1 254 3 87 4 169 2 211 1 129 1 
277 1 255 1 91 1 105 1 
332 1 277 1 24 1 100 1 138 1 182 1 
190 1 343 1 307 1 325 1 73 1 19 1 187 1 226 1 350 1 180 1 35 1 
190 1 343 1 30 1 159 1 325 1 148 2 269 1 104 1 241 1 150 2 136 1 278 1 73 1 226 1 187 1 350 1 180 1 91 1 
190 1 343 1 30 1 159 1 66 1 325 1 148 2 269 2 131 1 104 1 241 1 150 2 115 1 136 1 170 1 278 2 235 1 62 1 226 1 187 1 350 3 180 2 91 2 
190 2 343 2 30 1 109 1 66 1 325 1 148 2 269 2 131 1 104 1 241 1 150 2 115 1 136 1 170 1 278 2 208 1 235 1 62 1 226 2 187 1 350 3 180 2 91 2 
190 1 145 2 66 1 148 1 94 1 131 1 150 1 241 1 115 1 6 1 195 1 44 2 45 1 198 1 226 1 294 1 48 1 180 1 228 1 343 1 184 1 11 1 325 1 269 1 12 1 250 1 57 1 170 1 278 1 187 1 91 1 350 4 
190 1 145 2 66 1 148 1 94 1 131 1 150 1 241 1 115 1 6 1 195 1 44 2 45 1 198 1 226 1 48 1 180 1 228 1 343 1 11 1 326 1 325 1 269 1 12 1 250 1 57 1 170 1 278 1 187 1 91 1 350 4 
190 1 343 1 325 1 187 1 226 1 274 1 
190 7 343 7 258 1 336 1 325 3 175 1 68 1 274 1 71 1 127 1 97 1 178 1 278 1 73 2 154 1 226 6 187 2 122 1 180 2 350 3 80 1 
257 1 173 2 2 1 261 1 4 6 135 4 136 1 137 2 321 2 226 1 180 1 10 2 325 1 269 1 104 1 278 1 187 1 63 1 281 1 190 1 146 1 111 1 287 1 148 2 112 1 240 1 241 1 150 2 69 1 116 1 246 1 28 1 249 2 80 1 343 1 30 2 159 1 160 3 83 2 163 1 33 1 348 3 254 1 87 2 90 2 91 1 350 1 
257 2 93 1 94 2 316 2 218 1 42 2 6 1 44 3 45 1 226 1 228 1 48 1 50 1 11 2 326 1 12 1 269 1 13 1 56 1 57 1 60 5 276 2 186 1 331 1 145 3 190 1 286 1 287 1 148 1 150 1 339 2 241 1 69 1 195 2 73 1 198 1 156 2 157 1 343 1 250 1 124 1 163 1 254 2 170 1 210 4 350 2 91 1 
190 1 343 1 325 2 12 1 68 1 252 1 274 1 278 1 226 1 187 1 180 1 350 2 282 1 
190 4 343 4 53 1 109 1 325 1 307 1 73 1 226 4 187 1 35 1 180 1 350 1 80 1 
190 2 202 1 343 2 325 2 115 1 71 1 127 1 278 1 27 1 226 2 187 1 180 1 350 1 268 1 
190 1 343 1 325 1 73 1 31 1 174 1 187 1 226 1 102 1 107 1 
190 2 343 2 258 1 325 1 175 1 245 1 226 2 187 1 180 1 350 1 80 1 
190 5 343 5 53 1 258 1 325 2 115 1 307 1 178 1 73 1 226 4 187 2 154 1 35 1 180 2 350 3 80 1 
190 5 343 5 53 1 258 1 325 2 115 1 141 1 307 1 73 1 226 4 187 2 154 1 35 1 180 2 350 3 80 1 
190 1 343 1 30 1 325 1 148 2 269 1 104 1 241 1 150 2 136 1 278 1 73 1 208 1 226 1 187 1 350 1 180 1 91 1 
190 1 343 1 336 1 325 2 68 1 115 1 71 1 127 1 278 1 226 1 187 1 180 1 350 1 
297 1 311 1 259 1 148 1 150 1 242 1 88 1 91 1 256 1 
29 1 214 1 256 1 
51 1 297 1 30 1 311 1 256 1 
145 2 311 1 148 1 176 1 150 1 241 1 244 1 195 1 6 1 44 2 45 1 29 1 48 1 228 1 51 1 297 1 11 1 269 1 250 1 124 1 57 1 140 1 170 2 235 1 62 1 91 1 214 1 256 1 
253 1 312 1 19 1 132 1 
253 1 312 1 271 1 23 1 132 1 161 1 77 1 
340 1 271 1 79 1 
25 1 253 1 312 1 271 3 23 1 132 1 161 3 162 1 295 2 144 1 85 1 77 1 
275 1 253 1 312 1 271 2 23 1 132 1 161 2 15 1 77 1 
0 1 39 1 23 1 271 1 161 1 31 1 162 1 253 1 293 1 102 1 77 1 
253 1 312 1 271 1 23 1 161 1 162 1 77 1 
312 2 271 1 23 1 132 1 161 1 162 1 77 1 
253 1 312 1 271 2 23 2 161 2 133 1 162 1 75 1 164 1 77 2 
312 1 192 1 23 1 271 3 264 1 132 1 161 3 162 1 275 2 253 2 293 1 213 1 77 1 
0 1 312 1 147 1 23 1 271 2 132 1 31 2 161 2 162 1 275 1 253 1 153 1 102 1 107 1 77 1 
312 1 110 1 23 2 271 4 132 1 161 4 162 1 15 1 275 2 253 2 293 1 213 1 77 2 
253 1 312 1 271 1 23 1 132 1 161 1 162 1 77 1 
312 2 271 4 23 1 132 2 84 1 161 4 85 1 275 2 253 3 293 1 295 1 144 1 213 1 77 1 
275 1 284 1 253 1 312 1 262 1 271 2 23 1 132 1 161 2 162 1 37 1 77 1 
312 1 23 1 271 3 161 3 193 1 132 1 162 1 85 2 253 1 144 1 295 2 77 1 
253 2 292 1 103 1 273 2 
271 1 23 1 161 1 162 1 290 1 77 1 
275 1 253 1 312 1 192 1 271 2 23 1 132 1 161 2 162 1 77 1 
99 1 
253 1 312 1 271 1 23 1 132 1 161 1 162 1 77 1 
275 1 253 1 192 1 312 1 271 3 23 1 132 1 161 3 162 1 295 1 77 1 
253 1 84 1 293 1 213 1 
253 1 312 1 

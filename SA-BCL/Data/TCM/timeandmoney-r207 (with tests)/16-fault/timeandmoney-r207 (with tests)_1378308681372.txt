#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (3,103,215,229,322) (60,89) (60,89) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (3,103,215,229,322) (60,89) (60,89) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (3,103,215,229,322) (60,89) (60,89) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (3,103,215,229,322) (60,89) (60,89) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (3,103,215,229,322) (2,163) (2,163) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 158 198 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 158 198 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (37,96,332) (37,96,332) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testLongRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (102,165,230,353) (102,165,230,353) (99,216,271) (99,216,271) (99,216,271) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (102,165,230,353) (102,165,230,353) (99,216,271) (99,216,271) (99,216,271) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (102,165,230,353) (102,165,230,353) (99,216,271) (99,216,271) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (102,165,230,353) (102,165,230,353) (99,216,271) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 367 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (102,165,230,353) (102,165,230,353) 277 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 1107 | + -> *
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | RETURN | 3180 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal; | RETURN | 1824 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4975 | 1 -> 0
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 1433 | return null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
102 1 291 1 261 1 43 1 71 1 370 2 296 3 201 1 353 2 310 1 230 2 165 3 180 1 
49 1 261 1 185 1 127 1 296 1 60 1 322 1 89 1 353 1 255 1 310 1 340 1 230 1 64 1 165 1 
49 1 261 1 185 1 127 1 296 1 60 1 322 1 89 1 353 1 255 1 310 1 340 1 230 1 64 1 165 1 
49 1 261 1 185 1 127 1 296 1 60 1 322 1 89 1 353 1 255 1 310 1 340 1 230 1 64 1 165 1 
49 1 261 1 185 1 127 1 296 1 60 1 322 1 89 1 353 1 255 1 310 1 340 1 230 1 64 1 165 1 
217 1 102 1 158 1 43 1 185 1 127 1 370 1 296 2 353 1 255 1 310 1 230 1 194 1 165 2 
2 1 353 1 261 1 220 1 255 1 163 1 310 1 230 1 185 1 64 1 296 1 165 1 322 1 
217 1 41 1 102 5 158 1 261 1 43 3 185 1 127 1 71 1 370 3 198 1 296 7 44 1 284 1 353 2 255 1 310 1 230 2 194 1 165 7 180 2 
217 1 41 1 102 5 158 1 261 1 43 3 185 1 127 1 71 1 370 3 198 1 296 7 44 1 284 1 353 2 255 1 310 1 230 2 194 1 165 7 180 2 
66 1 40 1 243 1 169 1 219 1 183 1 208 1 113 1 298 1 152 1 8 1 36 1 18 1 155 1 
178 1 
348 1 243 2 152 1 344 1 219 2 128 1 178 1 225 1 
290 1 243 5 344 2 57 1 219 5 207 1 69 2 182 1 87 1 184 1 225 1 21 1 131 1 52 1 348 1 152 2 314 2 110 2 178 1 
245 1 178 1 225 1 
336 1 339 2 178 1 
304 1 66 2 298 1 169 2 208 2 8 2 183 2 18 2 
86 1 197 1 142 1 145 2 144 1 169 3 0 2 270 1 272 1 148 2 20 1 294 1 114 2 250 1 298 1 46 1 337 1 8 2 177 1 47 1 25 1 304 1 259 1 66 2 345 1 104 1 346 1 208 3 183 2 126 1 236 1 75 1 213 1 19 1 18 2 139 1 84 2 
66 1 298 1 40 1 169 1 208 1 8 1 183 1 36 1 18 1 155 1 
305 1 40 1 243 1 169 1 219 1 208 1 225 1 297 1 333 1 356 1 18 1 38 1 82 1 178 1 
66 1 243 2 40 1 169 1 219 2 183 1 208 1 225 1 297 1 333 1 8 1 18 1 38 1 82 1 178 1 
243 1 152 1 344 1 219 1 237 1 
348 1 243 2 152 1 344 1 50 1 219 2 178 1 225 1 
243 1 344 1 219 1 
66 1 304 2 169 2 208 2 183 1 8 1 357 1 18 2 327 1 
105 1 369 1 154 1 
304 1 259 1 86 1 142 1 144 1 345 1 169 1 0 1 270 1 148 1 346 1 208 1 247 1 126 1 114 1 250 1 
304 1 245 1 
259 1 66 1 86 1 142 1 345 1 144 1 143 1 169 2 0 1 270 1 346 1 148 1 208 2 126 1 369 1 250 1 114 1 8 1 18 1 164 1 
305 1 66 4 304 1 42 1 143 1 169 5 208 5 183 1 351 1 212 1 8 4 357 1 18 5 164 2 
66 2 307 1 40 1 169 2 208 2 8 2 18 2 155 1 
304 1 66 3 169 3 183 1 208 3 8 3 18 3 164 1 
66 1 40 1 169 1 208 1 8 1 18 1 155 1 
66 1 40 1 169 1 208 1 8 1 183 1 357 1 18 1 327 1 
86 1 142 1 40 1 243 1 145 1 144 1 143 1 329 1 169 4 0 1 270 1 219 1 272 1 148 1 294 1 250 1 114 1 297 1 333 1 298 1 337 1 8 3 177 1 47 1 10 1 304 1 259 1 66 3 345 1 346 1 183 2 208 4 126 1 236 1 75 1 213 1 357 1 19 1 18 3 38 1 82 1 139 1 164 1 84 2 
304 1 305 1 66 1 42 1 169 2 208 2 8 1 18 2 164 1 
66 3 365 1 243 1 40 1 143 1 169 3 219 1 183 1 208 3 297 1 333 1 8 3 357 1 18 3 82 1 38 1 178 1 164 2 10 1 
66 2 105 1 169 2 183 1 208 2 369 1 8 2 357 1 18 2 164 1 
304 1 86 1 259 1 142 1 144 1 345 1 169 1 0 1 270 1 148 1 346 1 208 1 126 1 114 1 250 1 
304 1 259 1 142 1 345 1 169 1 0 1 206 1 270 1 148 1 346 1 208 1 126 1 114 1 250 1 196 1 
145 4 272 2 20 2 294 1 171 1 116 1 151 1 177 1 47 1 154 2 257 1 105 2 210 1 369 2 188 1 236 1 72 1 74 1 15 1 325 1 213 1 19 1 312 1 84 2 
66 1 40 1 307 1 169 1 208 1 8 1 18 1 333 1 
265 2 118 1 332 1 37 2 
265 1 96 1 37 1 
265 1 37 1 
265 1 37 1 
118 1 332 1 
118 1 332 1 
118 1 332 1 
240 1 265 1 37 1 
240 1 265 1 37 1 
240 1 265 1 37 1 
133 1 265 1 37 1 
133 1 265 1 37 1 
133 1 265 1 37 1 
243 1 169 2 219 1 59 1 4 1 5 1 23 1 274 1 8 2 96 1 48 1 100 1 304 1 66 2 205 1 262 1 208 2 235 1 33 1 211 1 265 1 241 1 18 2 37 1 
123 1 243 2 205 2 219 2 262 2 59 3 235 2 334 1 33 1 211 2 361 1 349 1 265 2 37 2 178 1 156 2 65 1 359 1 85 1 
220 1 255 2 127 1 97 1 258 2 
255 1 185 1 127 1 
220 1 255 1 185 1 
214 1 220 1 255 3 127 2 97 1 258 1 
220 1 255 2 127 1 97 1 316 1 258 1 
280 1 243 4 344 1 1 1 219 4 224 1 225 1 348 1 152 3 350 1 287 1 178 1 
243 1 152 1 219 1 14 1 
290 3 40 1 243 3 169 1 1 1 219 3 57 2 113 1 224 1 4 1 225 1 171 1 298 1 336 1 152 2 314 1 8 1 339 3 94 1 155 1 178 2 280 1 302 1 66 1 234 1 69 1 208 1 183 1 209 2 188 1 131 1 74 1 15 1 350 1 324 2 110 1 36 1 18 1 
290 5 40 1 243 4 1 1 4 2 336 4 298 1 152 3 339 8 8 1 94 1 155 1 302 2 208 1 209 4 15 2 108 1 350 1 110 1 18 1 169 1 57 4 219 4 222 2 113 1 224 1 171 2 225 1 314 1 178 5 280 2 66 1 69 1 124 1 234 2 183 1 188 2 131 1 74 2 324 4 36 1 288 1 
249 1 
259 1 245 1 223 1 
342 1 259 1 
259 1 345 1 270 1 
259 1 11 1 
259 1 345 1 
259 3 345 1 270 1 16 1 175 1 223 2 
281 1 145 7 272 3 20 4 187 1 171 1 13 1 61 2 74 1 151 3 135 1 373 1 228 1 254 1 266 1 312 2 9 1 376 1 
53 1 145 37 272 18 20 19 294 1 171 6 61 2 151 17 228 2 254 2 7 3 93 1 177 1 119 1 9 1 27 1 302 3 12 1 281 2 125 4 187 5 188 3 107 1 236 1 130 1 74 6 15 3 373 5 135 9 213 1 79 1 266 1 312 8 376 1 84 2 
145 9 272 4 20 5 294 2 171 1 61 2 151 4 228 1 254 1 177 2 9 1 281 1 318 1 187 1 282 1 236 2 130 1 74 1 135 1 373 1 213 2 266 1 312 3 84 4 
281 1 145 7 272 3 20 4 187 1 171 1 61 2 74 1 151 3 135 1 373 1 228 1 254 1 266 1 312 2 9 1 376 1 
281 1 145 7 272 3 20 4 187 1 171 1 61 2 74 1 151 3 135 1 373 1 228 1 254 1 266 1 312 2 9 1 376 1 
0 1 148 1 250 1 114 1 296 1 335 1 91 1 176 1 230 1 98 1 259 1 67 1 345 1 319 2 261 2 346 1 70 2 126 1 190 1 353 1 192 2 267 1 165 1 
39 1 0 1 271 1 220 1 148 1 114 1 250 1 296 1 62 1 255 2 230 1 203 1 99 1 102 1 319 1 261 1 346 1 70 1 185 1 127 1 29 1 353 1 214 1 192 1 310 1 216 1 165 2 
39 1 0 1 271 1 220 1 148 1 114 1 250 1 296 1 255 2 230 1 203 1 99 1 102 1 319 1 261 1 346 1 70 1 185 1 127 1 29 1 353 1 214 1 192 1 310 1 216 1 165 2 140 1 
39 1 0 1 271 1 220 1 148 1 114 1 250 1 296 2 226 1 62 1 176 1 255 2 230 1 203 1 99 1 102 2 319 1 261 1 346 1 70 1 185 1 127 1 29 1 353 1 214 1 192 1 165 3 
39 1 102 2 0 1 319 1 220 1 261 1 346 1 148 1 70 1 185 1 127 1 29 1 250 1 114 1 296 1 226 1 62 1 214 1 255 2 192 1 99 1 165 2 
275 1 
290 2 243 5 40 1 0 2 148 2 292 1 293 1 200 2 250 1 297 1 333 1 336 2 91 1 335 1 92 1 339 2 94 1 204 1 343 1 259 1 305 1 345 1 344 6 159 1 346 1 208 1 263 2 348 3 308 2 17 2 161 1 110 1 356 1 18 1 358 1 168 1 169 1 57 2 219 5 114 2 115 2 225 1 21 1 22 4 314 1 178 2 28 1 181 2 69 1 126 2 78 2 286 1 80 1 38 1 82 1 
305 1 40 1 243 3 168 1 344 2 28 1 169 1 219 3 208 1 128 1 297 1 333 1 348 1 22 2 17 1 161 1 356 1 80 1 204 1 18 1 82 1 38 1 
168 1 243 3 40 1 169 1 219 3 200 1 297 1 225 1 333 1 22 3 204 1 178 1 305 1 344 1 28 1 208 1 128 1 348 1 161 1 356 1 80 1 18 1 38 1 82 1 
305 1 40 1 243 3 168 1 344 2 28 1 169 1 219 3 208 1 128 1 200 1 225 1 297 1 333 1 348 1 22 3 308 1 17 1 161 1 356 1 80 1 204 1 18 1 82 1 38 1 178 1 
290 1 168 1 243 5 40 1 169 1 57 1 219 5 200 4 115 2 225 5 297 1 333 1 21 1 336 2 22 6 6 1 314 1 204 1 256 1 178 5 279 1 305 1 28 1 344 7 181 2 69 1 208 1 128 1 263 2 34 1 348 3 308 4 78 2 286 1 161 1 17 4 110 1 356 1 80 1 268 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 292 1 200 2 115 2 225 1 297 1 333 1 21 1 336 2 22 4 314 1 339 2 204 1 178 2 305 1 344 4 28 1 181 2 69 1 208 1 263 2 348 2 308 2 78 2 17 2 161 1 286 1 110 1 356 1 80 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 200 2 115 2 225 1 297 1 333 1 21 1 336 2 22 4 6 1 314 1 204 1 178 1 305 1 344 4 28 1 181 2 69 1 208 1 263 2 34 1 348 2 308 2 78 2 17 2 286 1 161 1 110 1 356 1 80 1 268 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 200 2 115 2 225 1 297 1 333 1 21 1 336 2 22 4 6 1 314 1 204 1 178 1 305 1 344 4 28 1 181 2 69 1 208 1 263 2 34 1 348 2 308 2 78 2 17 2 286 1 161 1 110 1 356 1 80 1 268 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 221 1 200 2 115 2 225 1 297 1 333 1 21 1 22 4 299 1 314 1 174 2 339 2 204 1 178 1 26 1 305 1 344 4 28 1 181 2 69 1 208 1 348 2 308 2 352 2 17 2 161 1 110 1 356 1 80 1 268 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 200 3 115 2 225 1 297 1 333 1 21 1 336 2 22 5 6 1 314 1 204 1 178 1 279 1 305 1 28 1 344 5 181 2 69 1 208 1 263 2 34 1 348 2 308 3 78 2 286 1 161 1 17 3 110 1 356 1 80 1 268 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 200 3 115 2 225 1 297 1 333 1 21 1 336 2 22 5 6 1 314 1 204 1 178 1 279 1 305 1 28 1 344 5 181 2 69 1 208 1 263 2 34 1 348 2 308 3 78 2 286 1 161 1 17 3 110 1 356 1 80 1 268 1 18 1 38 1 82 1 358 1 
290 1 168 1 243 4 40 1 169 1 57 1 219 4 292 1 200 2 115 2 225 1 297 1 333 1 21 1 22 4 314 1 174 2 339 2 204 1 178 1 26 1 305 1 344 4 28 1 181 2 69 1 208 1 348 2 308 2 352 2 17 2 161 1 110 1 356 1 80 1 18 1 38 1 82 1 358 1 
197 1 145 2 169 1 0 8 218 1 148 7 272 1 20 1 294 2 250 2 114 8 202 1 88 1 62 1 335 1 91 1 8 1 177 2 47 2 122 1 66 1 259 3 345 2 104 2 346 2 208 1 126 2 210 1 371 1 236 2 77 1 213 2 162 1 18 1 19 2 139 1 164 1 140 1 84 4 
145 3 169 1 272 2 20 1 294 1 295 1 171 1 151 1 8 1 177 1 154 1 47 1 302 1 66 1 105 1 183 1 208 1 369 1 188 1 236 1 323 1 74 1 15 1 213 1 357 1 19 1 18 1 312 1 84 2 
145 6 245 1 272 3 20 3 294 1 171 1 61 1 151 2 228 1 177 1 47 1 154 1 9 1 304 2 105 1 210 1 369 1 187 1 236 1 74 1 373 1 213 1 266 1 19 1 312 2 84 2 
197 1 145 14 272 6 20 8 294 2 170 1 295 1 171 2 151 2 362 1 7 3 177 2 47 2 154 11 27 1 302 2 304 1 105 4 125 3 369 11 188 1 236 2 74 1 15 2 135 1 213 2 79 1 81 1 19 1 312 1 139 1 375 1 84 4 
86 1 142 1 197 1 144 1 143 1 145 2 0 1 169 2 270 1 148 1 272 1 247 1 20 1 294 1 250 1 114 1 295 1 90 1 45 1 8 1 177 1 47 1 304 1 259 1 66 1 345 1 105 1 346 1 126 1 208 2 236 1 134 1 213 1 19 1 18 1 139 1 164 1 84 2 
86 2 197 1 142 2 143 1 145 20 144 2 0 3 148 3 294 3 295 1 250 2 151 8 337 2 8 1 47 3 154 7 9 1 302 2 304 2 259 2 345 2 105 7 346 2 106 1 208 3 15 2 213 3 266 1 18 1 19 3 312 4 164 1 166 2 167 2 169 3 270 2 272 10 20 10 114 3 171 3 61 1 62 1 228 1 177 3 121 1 179 2 66 1 232 1 126 1 187 1 369 7 188 2 236 3 74 3 373 1 239 2 135 4 139 1 84 6 
145 2 105 1 20 2 210 1 294 1 369 1 171 1 236 1 72 1 15 1 151 1 135 1 213 1 177 1 154 1 19 1 47 1 84 2 
145 2 105 1 272 2 210 1 294 1 369 1 188 1 236 1 74 1 151 1 213 1 177 1 154 1 19 1 47 1 312 1 257 1 84 2 
145 4 272 2 20 2 294 1 171 1 151 2 177 1 47 1 154 2 302 1 105 2 210 1 369 2 188 1 236 1 74 1 15 1 135 1 213 1 19 1 312 1 84 2 
145 2 105 1 20 2 294 1 369 1 171 1 202 1 236 1 72 1 15 1 151 1 135 1 213 1 177 1 154 1 19 1 47 1 84 2 
145 2 105 1 272 2 294 1 369 1 188 1 202 1 236 1 74 1 151 1 213 1 177 1 154 1 19 1 47 1 312 1 257 1 84 2 
145 4 272 2 20 2 294 1 171 1 202 1 151 2 177 1 47 1 154 2 302 1 105 2 369 2 188 1 236 1 74 1 15 1 135 1 213 1 19 1 312 1 84 2 
145 4 272 2 20 2 294 1 171 1 151 2 177 1 47 1 154 2 302 1 105 2 369 2 188 1 236 1 74 1 15 1 135 1 213 1 19 1 312 1 84 2 
86 1 197 1 142 1 145 2 144 1 0 1 169 1 270 1 148 1 272 1 20 1 294 1 250 1 114 1 337 1 177 1 47 1 304 1 259 1 345 1 346 1 126 1 208 1 236 1 213 1 19 1 139 1 84 2 
197 1 142 1 145 2 0 1 169 1 270 1 148 1 272 1 20 1 294 1 250 1 114 1 172 1 177 1 47 1 304 1 259 1 345 1 206 1 346 1 126 1 208 1 236 1 213 1 19 1 196 1 139 1 84 2 
145 4 272 2 20 2 294 1 295 1 171 1 151 2 177 1 47 1 154 2 302 1 105 2 369 2 188 1 236 1 74 1 15 1 135 1 213 1 19 1 312 1 84 2 
86 1 166 1 142 1 145 4 144 1 0 1 169 1 270 1 272 2 148 1 20 2 294 1 250 1 114 1 171 1 151 2 337 1 177 1 154 2 47 1 302 1 259 1 345 1 105 2 346 1 208 1 369 2 188 1 236 1 74 1 15 1 135 1 213 1 19 1 312 1 140 1 84 2 
145 3 169 1 272 1 20 2 294 1 295 1 171 1 151 1 8 1 177 1 47 1 154 1 302 1 66 1 105 1 183 1 208 1 369 1 188 1 129 1 236 1 74 1 15 1 135 1 213 1 357 1 19 1 18 1 84 2 
145 19 272 10 330 1 20 9 248 1 294 2 171 3 151 6 273 1 7 1 177 2 27 1 302 3 320 1 125 2 188 3 282 1 372 2 236 2 189 1 283 1 74 3 15 3 135 3 213 2 79 1 311 1 312 3 195 2 84 4 
145 26 272 12 20 14 248 2 294 3 171 3 151 4 7 2 177 3 301 1 27 2 302 3 303 1 233 1 320 1 125 2 31 1 188 2 282 1 372 4 236 3 189 1 130 2 283 1 160 1 74 2 15 3 135 2 213 3 311 2 312 2 195 1 111 1 84 6 
145 41 330 1 294 3 248 2 151 8 7 3 9 1 302 4 301 1 303 1 160 1 15 4 213 3 266 1 311 1 312 4 111 1 272 21 20 20 171 5 61 1 173 1 228 1 177 3 27 3 320 1 233 1 125 4 31 1 187 1 188 4 282 1 236 3 372 4 283 1 130 1 189 1 74 5 135 4 373 1 79 1 195 1 84 6 
145 38 272 18 330 1 20 20 248 2 294 4 171 5 61 1 173 1 151 7 228 1 7 3 177 4 9 1 301 1 27 3 302 4 303 1 233 1 320 1 125 4 187 1 31 1 188 3 282 1 372 4 236 4 189 1 130 2 160 1 283 1 74 4 15 4 373 1 135 3 213 4 79 1 266 1 311 1 312 4 195 1 111 1 84 8 
145 52 272 25 20 27 248 1 294 2 171 8 61 1 151 14 362 2 228 1 7 4 177 2 9 1 301 1 27 2 302 7 303 1 233 1 320 1 125 4 187 1 31 1 188 7 282 1 372 4 236 2 189 1 130 1 160 1 283 1 74 8 15 7 373 1 135 7 213 2 79 2 266 1 311 1 312 7 195 1 111 1 84 4 
211 1 361 1 349 1 205 1 265 1 355 1 262 1 37 1 235 1 334 1 
96 1 5 1 
35 1 211 1 205 1 117 1 265 1 338 1 262 1 37 1 235 1 
240 1 199 1 
363 1 133 1 136 1 
123 1 243 1 205 1 219 1 262 1 59 2 235 1 334 1 33 1 211 1 361 1 349 1 265 1 37 1 178 1 156 1 359 1 85 1 
123 1 243 1 205 1 219 1 262 1 59 2 235 1 334 1 33 1 211 1 361 1 349 1 265 1 37 1 178 1 156 1 359 1 85 1 
123 1 243 1 205 1 219 1 262 1 59 2 235 1 334 1 33 1 211 1 361 1 349 1 265 1 37 1 178 1 156 1 359 1 85 1 
363 1 240 1 199 1 
363 1 240 1 199 1 
133 1 136 1 
363 1 133 1 136 1 
100 1 48 1 
243 1 169 2 219 1 59 1 4 1 5 1 152 1 23 1 274 1 276 1 8 2 96 1 48 1 156 1 100 1 304 1 66 2 205 1 208 2 262 1 235 1 211 1 265 1 241 1 18 2 37 1 359 1 
197 1 145 2 0 2 169 2 218 1 272 1 148 2 20 1 294 1 250 1 114 2 295 1 88 1 253 1 177 1 47 1 231 1 259 1 101 1 345 1 104 2 306 1 346 1 208 2 236 1 76 1 213 1 19 1 18 2 139 1 84 2 
259 1 345 1 0 1 319 1 56 1 346 1 148 1 126 1 112 1 250 1 114 1 335 1 91 1 267 1 
39 1 0 1 319 1 220 1 148 1 346 1 112 1 185 1 127 1 29 1 250 1 114 1 62 1 227 1 214 1 255 2 137 1 203 1 
39 1 0 2 319 1 220 1 346 1 148 2 112 1 185 1 127 1 29 1 250 1 114 2 62 1 227 1 214 1 255 2 137 1 203 1 140 1 
39 1 0 1 319 1 220 1 148 1 346 1 185 1 127 1 29 1 114 1 250 1 62 1 227 1 214 1 255 2 203 1 315 1 
264 1 
290 1 57 1 69 1 87 1 184 1 225 1 21 1 314 1 110 1 178 1 
290 2 302 1 57 2 234 1 222 1 209 2 188 1 171 1 74 1 15 1 336 2 324 2 339 4 178 2 
348 1 243 1 344 1 219 1 178 1 225 1 
290 2 243 3 0 4 57 2 219 3 148 4 293 2 250 1 114 4 21 1 335 1 91 1 252 1 314 2 94 2 259 1 343 1 157 1 345 1 344 4 159 1 346 1 69 2 126 2 186 1 131 1 348 2 374 2 110 2 
290 1 57 1 245 1 87 1 184 1 178 1 225 1 
290 1 243 1 57 1 219 1 225 1 21 1 336 1 314 1 339 1 178 2 344 1 69 1 263 1 348 1 78 1 286 1 110 1 
290 4 243 2 244 1 0 1 148 1 149 1 250 2 336 3 300 1 339 6 94 1 342 2 302 1 259 4 345 1 344 2 346 1 209 3 348 1 15 1 110 2 270 1 219 2 57 3 223 1 114 1 171 1 21 2 360 1 314 2 175 1 178 3 179 1 68 1 69 2 234 2 126 1 188 1 132 1 74 1 324 3 82 1 138 1 
290 8 243 1 219 1 57 5 246 1 222 2 293 1 171 2 225 2 21 2 336 3 314 2 339 6 7 1 94 1 178 5 301 1 27 1 302 2 303 1 344 1 234 1 125 1 69 2 209 5 31 1 188 2 160 1 74 2 348 1 15 2 324 5 110 2 111 1 83 1 
290 2 53 1 40 1 243 1 169 1 219 1 57 2 222 2 113 1 171 2 21 1 298 1 6 1 228 1 314 1 8 1 155 1 66 1 234 1 69 1 208 1 183 1 187 1 74 1 373 1 110 1 36 1 18 1 
86 1 142 1 145 1 144 1 0 1 169 3 270 1 272 1 148 1 294 1 114 1 250 1 298 1 337 1 8 2 177 1 47 1 304 1 66 2 259 1 345 1 346 1 126 1 208 3 183 2 236 1 75 1 213 1 18 2 19 1 139 1 84 2 
290 1 57 1 69 1 293 1 225 1 21 1 336 1 324 1 314 1 110 1 339 2 94 1 178 2 
328 1 262 1 48 1 235 1 334 1 
260 1 262 1 235 1 
260 1 262 1 235 1 
260 1 262 1 235 1 
262 1 235 1 32 1 
262 1 235 1 32 1 
262 1 235 1 32 1 
262 1 235 1 
265 1 37 1 
53 1 145 10 272 5 20 5 294 1 187 2 282 1 171 2 236 1 74 2 151 5 373 2 135 2 213 1 228 1 177 1 312 3 84 2 
145 2 20 2 294 1 282 1 171 1 236 1 15 1 151 1 135 1 213 1 177 1 84 2 
302 1 145 4 272 2 20 2 294 1 188 1 282 1 171 1 236 1 74 1 15 1 151 2 135 1 213 1 177 1 312 1 84 2 
145 3 272 2 330 1 20 1 294 3 187 1 282 1 236 3 130 1 151 2 373 1 135 1 213 3 177 3 193 1 312 1 84 6 
145 27 272 14 330 1 20 13 294 4 171 4 61 1 151 10 228 1 7 3 93 1 119 1 177 4 9 1 12 1 27 1 302 3 366 1 125 4 187 2 188 3 282 1 236 4 130 1 74 4 15 3 373 2 135 5 213 4 79 1 266 1 312 5 84 8 
145 8 272 4 20 4 294 2 187 1 171 1 236 2 61 1 130 1 74 1 151 3 135 1 373 1 228 1 213 2 266 1 177 2 312 2 9 1 84 4 
74 1 151 2 145 6 373 1 228 1 245 1 272 3 20 3 266 1 187 1 312 2 9 1 171 1 61 1 
302 1 366 1 145 4 272 2 20 2 294 1 188 1 171 1 236 1 74 1 15 1 151 2 135 1 213 1 177 1 312 1 84 2 
27 1 302 1 145 7 125 2 272 4 20 3 188 1 171 1 74 1 15 1 151 2 135 1 79 1 7 1 312 1 
145 23 272 12 20 11 294 2 170 1 171 3 61 1 151 9 362 1 228 1 7 2 177 2 9 1 302 2 125 2 187 2 188 2 236 2 130 2 74 3 15 2 373 2 135 4 213 2 79 1 266 1 193 1 312 5 84 4 
145 1 272 1 125 1 
145 1 7 1 20 1 
302 1 366 1 145 6 272 3 20 3 294 1 188 1 171 1 236 1 74 1 15 1 151 3 135 1 213 1 177 1 312 2 179 1 84 2 
145 12 272 6 20 6 294 1 171 2 151 2 7 1 177 1 27 1 302 2 301 1 303 1 125 1 31 1 188 2 282 1 236 1 160 1 74 2 15 2 135 1 213 1 312 1 111 1 84 2 
145 6 272 3 20 3 187 1 171 1 74 1 151 2 373 1 135 1 228 1 312 1 
145 3 272 2 20 1 294 1 187 1 236 1 130 1 151 2 135 1 373 1 213 1 266 1 177 1 193 1 312 1 9 1 84 2 
145 8 272 4 20 4 294 1 171 1 61 1 151 2 228 1 7 1 177 1 9 1 27 1 125 1 187 1 282 1 236 1 160 1 74 1 373 1 213 1 266 1 312 2 84 2 
145 11 272 5 20 6 294 2 171 2 61 1 151 3 228 1 7 1 177 2 9 1 27 1 302 1 366 1 125 2 187 1 282 1 236 2 160 1 74 1 15 1 373 1 135 1 213 2 79 1 266 1 312 2 84 4 
145 19 272 10 20 9 294 3 171 3 61 1 151 4 228 1 7 1 177 3 9 1 27 1 302 2 301 1 303 1 366 1 125 1 187 1 31 1 188 2 282 1 236 3 160 1 130 1 74 3 15 2 373 1 135 1 213 3 266 1 312 3 111 1 84 6 
145 17 272 7 20 10 294 3 171 3 61 1 151 5 228 1 7 1 177 3 9 1 27 1 302 2 301 1 303 1 366 1 125 1 187 1 31 1 188 1 282 1 236 3 130 1 160 1 74 2 15 2 373 1 135 2 213 3 266 1 312 3 111 1 84 6 
145 8 272 4 20 4 294 1 171 1 61 1 151 2 228 1 7 1 177 1 9 1 27 1 125 1 187 1 282 1 236 1 160 1 74 1 373 1 213 1 266 1 312 2 84 2 
145 12 272 6 20 6 294 1 171 2 151 2 7 1 177 1 27 1 302 2 301 1 303 1 125 1 31 1 188 2 282 1 236 1 160 1 74 2 15 2 135 1 213 1 312 1 111 1 84 2 
145 18 272 8 20 10 294 4 171 3 61 1 151 5 228 1 7 1 177 4 9 1 301 1 27 1 302 2 303 1 366 1 125 1 187 1 31 1 188 1 282 1 236 4 160 1 130 2 74 2 15 2 373 1 135 2 213 4 266 1 312 3 111 1 84 8 
145 16 272 7 330 1 20 9 294 4 171 3 151 6 7 1 177 4 301 1 27 1 302 3 303 1 125 1 31 1 188 2 282 1 236 4 160 1 130 2 74 2 15 3 135 3 213 4 312 3 111 1 84 8 
145 7 272 4 20 3 187 3 171 1 74 1 151 6 373 3 135 3 228 1 266 1 9 2 312 3 
145 18 272 8 330 1 20 10 294 4 171 3 61 1 151 4 228 1 7 1 177 4 9 1 301 1 27 1 302 2 303 1 125 1 187 1 31 1 188 1 282 1 236 4 160 1 130 2 74 2 15 2 373 1 135 1 213 4 266 1 312 3 111 1 84 8 
304 1 305 1 42 1 169 1 208 1 18 1 289 1 
73 1 251 1 326 1 367 1 150 1 
259 1 345 1 0 4 313 1 148 4 346 1 126 1 250 1 114 4 335 1 91 1 269 1 140 1 
141 1 259 1 232 1 345 1 0 2 270 1 148 2 346 1 114 2 250 2 238 1 374 1 242 1 120 1 
0 1 220 1 148 1 346 1 126 1 29 1 185 1 114 1 250 1 255 1 
259 1 345 1 0 2 218 1 148 2 346 1 114 2 250 1 62 1 140 1 231 1 
259 3 345 2 0 5 313 1 218 1 148 4 346 2 126 1 114 5 250 2 91 1 335 1 77 1 374 1 162 1 140 1 
259 3 345 2 0 5 313 1 218 1 148 4 346 2 126 1 51 1 114 5 250 2 91 1 335 1 77 1 374 1 140 1 
259 1 91 1 335 1 345 1 0 1 245 1 346 1 148 1 126 1 250 1 114 1 
304 1 259 1 66 1 142 1 345 1 144 1 169 2 0 1 270 1 148 1 346 1 208 2 126 1 250 1 114 1 8 1 18 1 164 1 
142 1 40 1 144 1 0 1 169 2 270 2 148 1 114 1 250 1 297 1 333 1 8 2 11 1 304 1 66 1 259 3 345 2 346 1 208 2 374 1 354 1 18 2 164 1 
142 1 40 1 0 2 169 2 270 2 148 2 114 2 250 1 297 1 333 1 8 2 11 1 304 1 66 1 259 3 345 2 206 1 346 1 208 2 374 1 354 1 18 2 269 1 164 1 
243 2 0 3 219 2 270 1 148 3 223 1 114 3 250 1 331 1 225 1 178 1 11 1 342 1 259 4 344 1 345 1 346 1 126 1 347 1 374 1 354 1 82 1 269 1 
342 1 259 4 243 2 345 1 344 1 0 3 270 1 219 2 148 3 346 1 126 1 223 1 149 1 250 1 114 3 225 1 354 1 374 1 82 1 178 1 269 1 11 1 
122 1 0 1 346 1 148 1 250 1 114 1 
122 1 259 3 345 2 104 1 0 7 218 1 270 1 148 6 346 2 126 2 114 7 250 3 371 1 238 1 62 1 77 1 162 1 175 1 242 1 317 1 140 1 
166 1 86 1 142 1 145 6 144 1 169 2 0 1 270 1 272 3 148 1 20 3 294 2 250 1 295 1 114 1 171 1 61 1 151 2 228 1 337 1 8 1 177 2 154 1 47 2 9 1 304 2 259 1 66 1 345 1 105 1 306 1 346 1 208 2 369 1 187 1 236 2 74 1 373 1 239 1 213 2 266 1 19 2 18 1 312 2 164 1 84 4 140 1 
290 1 243 3 0 1 57 1 219 3 148 1 87 1 223 1 149 1 114 1 225 1 21 2 360 1 152 1 252 1 314 2 300 1 178 1 342 1 259 2 344 2 69 2 126 1 184 1 132 1 348 1 110 2 82 1 
122 1 259 2 345 1 244 1 0 2 270 1 346 1 175 1 148 2 223 1 250 2 114 2 140 1 
304 1 259 1 66 1 142 1 345 1 169 2 0 1 206 1 270 1 148 1 346 1 208 2 126 1 250 1 114 1 8 1 18 1 164 1 
259 1 345 1 0 1 270 1 148 1 346 1 114 1 250 2 238 1 374 1 175 1 242 1 317 1 
101 1 54 1 169 1 368 1 208 1 76 1 253 1 95 1 18 1 
191 1 368 1 341 1 
304 1 54 1 147 1 368 1 95 1 
304 1 40 1 243 2 54 2 219 2 147 2 368 1 225 1 297 1 333 1 152 1 309 1 191 1 95 2 82 1 38 1 178 1 10 1 341 1 
291 1 353 1 310 1 230 1 370 1 296 1 201 1 165 1 
364 1 102 2 103 1 291 2 43 1 370 3 296 4 201 2 322 1 353 1 229 1 230 1 165 4 180 1 
102 1 291 1 370 1 296 2 44 1 201 1 109 1 353 1 310 1 230 1 24 1 165 2 
103 1 291 1 3 1 353 1 229 2 310 1 230 1 370 1 296 3 201 1 165 3 322 2 
285 1 278 1 370 2 321 2 
146 1 353 1 310 1 230 1 296 1 165 1 
284 1 102 1 291 1 353 1 310 1 230 1 370 1 296 2 201 1 165 2 
58 1 
291 1 353 1 310 1 230 1 370 1 296 1 201 1 165 1 
291 1 245 1 370 1 201 1 
291 1 353 1 230 1 370 1 296 1 201 1 165 1 
261 1 70 1 296 1 
103 1 291 1 353 1 229 1 310 1 230 1 215 1 370 1 296 3 201 1 165 3 322 2 
217 1 364 1 102 1 291 1 370 1 296 2 201 1 353 1 230 1 165 2 
43 1 127 1 185 1 370 1 296 1 353 1 255 1 310 1 230 1 194 1 165 1 
353 1 310 1 230 1 370 1 296 1 201 1 165 1 
291 1 353 1 310 1 230 1 296 1 201 2 165 1 
370 1 30 1 296 2 201 1 353 2 153 1 63 1 310 1 230 2 165 2 
41 1 102 2 291 1 43 1 370 2 296 3 201 1 284 1 353 1 310 1 230 1 165 3 180 1 
102 1 353 1 214 1 220 1 277 1 255 2 310 1 230 1 185 1 127 1 296 1 165 2 
217 1 364 1 55 1 102 2 291 1 43 1 370 2 296 3 201 1 353 1 310 1 230 1 165 3 180 1 
284 1 102 1 291 1 353 1 310 1 230 1 370 1 296 3 201 1 165 3 322 1 
364 1 43 1 370 1 180 1 
370 1 201 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 84 219 44 (64,106) (64,106) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 84 219 44 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 84 219 44 213 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 84 219 44 (64,106) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 84 219 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 84 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 84 219 44 (64,106) (64,106) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 84 219 44 (64,106) (64,106) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 84 219 44 (64,106) (64,106) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 84 219 44 (64,106) (64,106) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (177,260,281) (177,260,281) 135 183 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 189 148 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 189 148 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 189 148 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 189 148 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 189 148 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 84 232 116 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 117 304 265 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 84 219 44 (64,106) (64,106) 289 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 84 219 44 213 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 84 18 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 84 18 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 84 18 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 84 18 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 84 18 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10170 | stmt -> ;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
99 1 59 2 253 1 3 1 86 1 9 3 150 2 154 1 110 1 267 1 167 1 168 3 169 2 
40 1 3 1 5 1 86 1 123 1 9 9 237 1 13 1 167 2 168 9 169 2 99 1 100 2 293 1 57 1 59 2 253 4 254 2 29 2 212 1 185 1 150 5 153 2 154 6 215 1 110 3 111 1 267 1 
40 1 3 1 5 1 86 1 123 1 9 9 237 1 13 1 167 2 168 9 169 2 99 1 100 2 293 1 57 1 59 2 253 4 254 2 29 2 212 1 185 1 150 5 153 2 154 6 215 1 110 3 111 1 267 1 
40 1 3 1 5 1 86 1 123 1 9 10 237 1 13 1 167 2 168 10 169 2 99 1 100 2 293 1 57 1 59 2 253 5 254 2 29 2 212 1 185 1 150 6 153 2 154 7 215 1 110 4 111 1 267 1 
40 1 3 1 5 1 86 1 123 1 9 7 237 1 13 1 167 2 168 7 169 2 99 1 100 2 293 1 57 1 59 2 253 3 254 2 29 2 212 1 185 1 150 4 153 1 154 4 215 1 110 2 267 1 
99 1 100 1 57 1 59 1 253 2 254 1 29 1 86 1 9 4 150 3 153 2 215 1 154 3 110 1 111 1 267 1 168 4 169 1 
99 1 100 1 59 1 254 1 146 1 150 1 86 1 185 1 9 2 13 1 267 1 167 1 168 2 169 1 73 1 96 1 
40 1 3 1 5 1 86 1 9 9 167 1 168 9 169 2 246 1 99 1 100 1 57 1 253 4 59 2 254 1 29 1 182 1 150 5 153 2 154 7 215 1 110 3 267 1 111 1 
40 1 3 1 5 1 86 1 9 9 167 1 168 9 169 2 246 1 99 1 100 1 57 1 253 4 59 2 254 1 29 1 182 1 150 5 153 2 154 7 215 1 110 3 267 1 111 1 
219 1 60 1 64 1 106 1 223 1 260 1 84 1 44 1 
199 1 
10 1 60 1 230 1 41 1 258 1 199 1 223 2 260 2 
226 1 209 1 58 1 60 2 230 1 66 1 258 1 41 2 199 1 67 1 260 5 85 1 45 1 15 2 14 2 190 1 288 2 223 5 134 1 
47 1 230 1 199 1 
75 1 
219 1 84 1 44 1 
213 1 219 1 84 1 44 1 
219 1 64 1 84 1 44 1 
203 1 284 1 54 1 70 1 217 1 177 1 221 1 36 1 281 1 
219 1 84 1 
60 1 41 1 52 1 223 1 260 1 
60 1 230 1 41 1 258 1 287 1 199 1 223 2 260 2 
41 1 223 1 260 1 
138 1 79 1 142 1 
31 1 274 1 138 2 2 1 79 2 243 1 
138 1 79 1 
138 1 79 1 
274 1 243 1 
274 1 243 1 
274 1 243 1 
138 1 227 1 79 1 
138 1 227 1 79 1 
138 1 227 1 79 1 
0 1 138 1 79 1 
0 1 138 1 79 1 
0 1 138 1 79 1 
101 1 275 1 138 2 228 1 79 2 295 2 141 1 199 1 143 1 164 2 260 2 7 2 122 3 31 1 204 2 223 2 192 1 17 2 19 1 
122 1 138 1 204 1 79 1 295 1 143 1 223 1 17 1 260 1 84 1 7 1 
254 2 220 1 172 2 29 1 146 1 
100 1 254 1 29 1 
100 1 254 1 146 1 
254 3 220 1 81 1 172 1 29 2 146 1 
140 1 254 2 220 1 172 1 29 1 146 1 
230 1 41 1 4 1 199 1 84 1 44 1 45 1 283 1 11 1 14 1 15 1 288 1 93 2 174 1 102 1 103 1 139 1 209 1 60 4 66 2 257 1 64 1 258 1 106 1 260 5 298 1 149 1 219 1 223 5 75 1 273 1 
80 2 230 1 41 3 199 1 84 1 44 1 45 1 283 1 11 1 14 1 15 1 288 1 52 2 174 1 249 1 102 1 139 1 209 1 60 4 66 2 257 1 64 1 258 1 106 1 260 5 298 1 149 1 219 1 223 5 271 1 75 1 273 1 
230 1 162 1 199 2 4 1 84 1 44 1 283 1 45 3 11 1 14 1 15 1 288 1 93 1 174 2 134 1 103 1 102 2 139 1 60 2 64 1 296 1 257 1 66 2 106 1 260 3 261 1 149 1 219 1 223 3 273 1 75 3 
229 1 230 1 162 2 199 3 4 1 84 1 44 1 283 1 45 5 125 1 124 1 11 1 14 1 15 1 288 1 93 2 174 4 134 1 102 4 103 1 139 2 60 3 64 1 296 2 257 2 66 4 106 1 260 4 261 2 149 2 219 1 223 4 75 6 273 2 
165 1 179 1 248 1 
47 1 256 1 6 1 
256 1 210 1 
264 1 256 1 
22 1 264 1 256 3 112 1 6 2 299 1 
264 1 256 1 112 1 
256 1 184 1 
197 3 139 1 176 3 61 2 231 1 178 2 119 1 200 1 83 1 261 1 218 7 244 1 130 1 16 1 268 1 37 1 95 1 157 4 
160 1 197 15 231 1 162 3 119 5 83 1 200 2 202 1 238 1 89 1 90 1 244 2 16 1 130 2 131 2 95 2 55 4 139 4 176 10 61 5 63 1 26 1 257 3 178 3 261 4 149 3 216 3 218 31 35 1 268 1 303 1 270 1 272 1 157 16 
160 2 77 1 197 4 231 1 119 1 83 1 200 1 89 2 244 1 130 1 131 4 95 1 139 1 176 4 63 2 61 3 178 2 261 1 218 9 303 2 268 1 269 1 270 1 157 5 
197 3 139 1 176 3 61 2 231 1 178 2 119 1 200 1 83 1 261 1 218 7 244 1 130 1 16 1 268 1 95 1 157 4 
197 3 139 1 176 3 61 2 231 1 178 2 119 1 200 1 83 1 261 1 218 7 244 1 130 1 16 1 268 1 95 1 157 4 
292 2 137 2 252 1 59 1 118 2 256 1 233 1 8 1 282 1 9 1 264 1 32 1 285 1 167 2 242 2 71 1 168 1 169 1 132 1 97 2 133 1 115 1 76 2 21 1 
100 1 136 1 137 1 292 1 78 1 104 1 59 1 254 2 118 1 81 1 181 1 29 1 146 1 211 1 8 1 282 1 186 1 9 1 267 1 167 1 242 1 168 1 169 1 156 1 97 1 76 1 
78 1 118 1 81 1 8 1 282 1 86 1 9 2 87 1 242 1 167 1 168 2 169 1 97 1 99 1 100 1 136 1 292 1 137 1 59 1 104 1 254 2 29 1 211 1 146 1 150 1 186 1 154 1 267 1 156 1 76 1 
78 1 118 1 81 1 8 1 282 1 86 1 9 3 285 1 242 1 167 1 168 3 169 1 97 1 99 1 100 1 292 1 137 1 175 1 59 1 104 1 254 2 181 1 29 1 211 1 146 1 150 1 186 1 154 2 156 1 76 1 
118 1 81 1 8 1 282 1 86 1 9 2 167 1 242 1 168 2 97 1 99 1 100 1 292 1 137 1 175 1 104 1 254 2 181 1 29 1 211 1 146 1 150 1 154 2 156 1 76 1 
225 1 
196 1 161 1 41 2 8 1 281 1 282 1 203 1 284 1 283 1 45 1 240 1 242 2 14 1 15 1 288 1 133 2 53 1 135 1 54 1 137 2 209 1 24 1 177 1 256 1 66 1 258 1 260 2 183 1 70 1 32 1 264 1 217 1 71 1 221 1 36 1 223 2 76 2 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 258 1 41 1 260 2 281 1 183 1 203 1 284 1 10 1 70 1 217 1 240 1 36 1 221 1 223 2 135 1 
54 1 196 1 209 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 217 1 240 1 15 1 14 1 221 1 36 1 288 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 240 1 217 1 36 1 221 1 223 1 135 1 
54 1 196 1 209 1 177 1 260 1 281 1 183 1 203 1 284 1 70 1 217 1 240 1 15 1 14 1 221 1 36 1 288 1 223 1 135 1 
152 1 160 1 89 1 77 1 63 1 189 1 303 1 131 2 148 1 
152 1 160 1 89 1 77 1 63 1 189 1 303 1 131 2 148 1 
152 1 160 1 89 1 77 1 63 1 189 1 303 1 131 2 148 1 
152 1 160 1 89 1 77 1 63 1 189 1 303 1 131 2 148 1 
152 1 160 1 89 1 77 1 63 1 189 1 303 1 131 2 148 1 
250 1 138 1 79 1 295 1 7 1 297 1 266 1 204 1 155 1 17 1 
91 1 142 1 
138 1 128 1 204 1 79 1 295 1 51 1 28 1 17 1 7 1 
101 1 275 1 138 1 79 1 295 1 141 1 199 1 143 1 164 1 260 1 7 1 122 2 31 1 204 1 223 1 192 1 17 1 19 1 
101 1 275 1 138 1 79 1 295 1 141 1 199 1 143 1 164 1 260 1 7 1 122 2 31 1 204 1 223 1 192 1 17 1 19 1 
101 1 275 1 138 1 79 1 295 1 141 1 199 1 143 1 164 1 260 1 7 1 122 2 31 1 204 1 223 1 192 1 17 1 19 1 
2 1 227 1 279 1 
2 1 227 1 279 1 
0 1 170 1 
0 1 2 1 170 1 
194 1 127 1 
194 1 138 1 79 1 295 1 60 1 232 1 142 1 164 1 260 1 84 1 7 1 122 1 46 1 127 1 239 1 204 1 91 1 223 1 192 1 17 1 273 1 116 1 
227 1 279 1 
0 1 2 1 170 1 
158 1 160 1 197 1 8 1 282 1 284 2 89 1 242 2 50 1 245 1 131 2 171 1 98 1 208 1 137 2 255 1 256 1 63 1 144 1 69 1 68 1 109 1 264 1 217 2 218 2 303 1 221 2 222 1 157 1 115 2 76 2 
137 1 292 1 256 1 233 1 8 1 282 1 264 1 32 1 242 1 71 1 113 1 133 1 224 1 76 1 
100 1 137 1 292 1 104 1 254 2 81 1 181 1 29 1 234 1 146 1 8 1 282 1 186 1 242 1 114 1 156 1 224 1 76 1 
100 1 137 2 292 1 104 1 254 2 81 1 181 1 29 1 234 1 146 1 8 1 282 1 186 1 87 1 242 2 114 1 156 1 224 1 76 2 
100 1 137 1 292 1 104 1 254 2 81 1 181 1 29 1 146 1 8 1 282 1 186 1 242 1 114 1 156 1 38 1 76 1 
43 1 
209 1 230 1 66 1 199 1 85 1 45 1 15 1 14 1 190 1 288 1 
149 1 102 1 139 1 66 2 257 1 174 1 75 1 
230 1 41 1 258 1 199 1 223 1 260 1 
161 1 277 1 41 2 163 1 8 3 282 2 283 1 45 1 48 1 126 1 14 2 15 2 242 3 205 1 288 2 53 1 133 2 134 1 137 3 209 1 105 1 294 1 24 1 256 2 66 1 258 1 260 2 264 2 32 1 71 1 112 1 223 2 76 3 
45 1 47 1 230 1 66 1 190 1 199 1 85 1 
230 1 41 1 199 1 45 1 14 1 15 1 288 1 20 1 207 1 209 1 296 1 66 1 27 1 258 1 260 1 223 1 75 1 
41 2 6 1 120 1 8 2 282 1 283 1 45 1 236 1 242 1 14 2 15 2 288 2 247 1 173 1 133 1 22 1 137 1 209 2 256 4 210 2 258 1 260 2 262 1 264 1 188 1 191 1 112 1 223 2 74 1 76 1 
117 1 162 3 235 1 45 9 90 1 14 1 15 1 288 1 94 1 174 5 55 2 102 5 209 1 139 3 66 6 257 3 180 1 259 1 261 3 149 3 216 2 265 1 304 1 272 1 75 3 
139 1 209 1 64 1 66 1 231 1 106 1 259 2 260 1 200 1 84 1 261 1 44 1 45 2 219 1 15 1 14 1 72 1 130 1 288 1 223 1 289 1 
213 1 219 1 84 1 44 1 
102 1 209 1 24 1 230 1 66 1 199 1 283 1 45 1 15 1 14 1 288 1 75 1 
101 1 127 1 204 1 295 1 92 1 
204 1 295 1 278 1 
204 1 295 1 278 1 
204 1 295 1 278 1 
204 1 295 1 107 1 
204 1 295 1 107 1 
204 1 295 1 107 1 
204 1 295 1 
138 1 79 1 
197 5 160 1 77 1 231 1 200 1 83 1 89 1 90 1 130 1 131 2 55 2 139 2 176 2 61 2 63 1 257 1 178 1 261 1 149 1 216 1 265 1 218 11 303 1 268 1 157 6 272 1 
197 5 77 1 160 2 231 1 119 1 200 1 83 1 89 2 90 1 129 1 130 1 131 4 55 2 139 2 176 3 61 2 63 2 257 1 178 1 261 1 149 1 265 1 216 1 218 11 268 1 303 2 157 6 272 1 
117 1 197 10 160 3 77 1 231 1 162 2 119 1 200 1 83 1 89 3 129 1 90 1 130 1 131 6 94 1 55 1 139 3 176 4 63 3 61 3 257 2 178 1 180 1 261 3 149 2 216 1 265 1 218 19 268 1 303 3 304 1 270 1 157 9 
117 1 197 7 160 3 77 1 231 1 162 1 119 2 200 1 83 1 89 3 129 1 90 1 130 1 131 6 94 1 55 1 139 3 176 5 63 3 61 3 257 2 178 1 180 1 261 2 149 2 216 1 265 1 218 17 268 1 303 3 304 1 270 1 157 10 
197 5 160 1 77 1 231 1 200 1 83 1 89 1 90 1 130 1 131 2 55 2 139 2 176 2 61 2 63 1 257 1 178 1 261 1 149 1 216 1 265 1 218 11 303 1 268 1 157 6 272 1 
117 1 197 6 160 1 77 1 162 2 119 1 89 1 90 1 131 2 94 1 55 1 139 2 176 2 63 1 61 1 257 2 180 1 261 2 149 2 216 1 265 1 218 12 303 1 304 1 157 6 
117 1 197 8 160 4 77 1 231 1 162 1 119 2 200 1 83 1 89 4 90 1 129 1 130 1 131 8 94 1 55 1 139 3 176 5 63 4 61 3 257 2 178 1 180 1 261 2 149 2 265 1 216 1 218 18 268 1 304 1 303 4 270 2 157 10 
117 1 197 7 77 1 160 4 162 2 119 3 89 4 90 1 286 1 131 8 94 1 55 1 139 3 176 6 63 4 61 3 257 3 180 1 261 2 149 3 265 1 216 1 218 16 304 1 303 4 270 2 157 9 
197 4 139 1 176 6 61 3 231 1 119 3 83 2 200 3 261 1 218 7 268 1 130 3 157 3 
117 1 197 8 77 1 160 4 231 1 162 1 119 1 200 1 83 1 89 4 90 1 286 1 130 1 131 8 94 1 55 1 139 3 176 4 63 4 61 3 257 2 178 1 180 1 261 2 149 2 265 1 216 1 218 18 268 1 304 1 303 4 270 2 157 10 
160 1 77 1 197 5 139 2 176 5 63 1 61 3 231 1 119 2 200 2 261 2 89 1 218 10 303 1 130 2 131 2 289 1 157 5 
77 1 160 1 139 1 176 1 63 1 257 1 119 1 89 1 218 2 303 1 131 2 157 2 
197 2 77 1 160 1 139 1 176 2 61 1 63 1 257 1 162 1 119 1 261 1 149 1 89 1 218 4 303 1 131 2 157 2 
197 2 77 1 160 3 176 2 63 3 61 1 119 1 200 1 263 1 89 3 218 3 286 1 303 3 130 1 131 6 270 1 157 1 
197 18 160 5 77 1 231 2 162 3 119 5 200 3 83 1 202 1 238 1 89 5 90 1 129 1 286 1 130 3 131 10 55 4 139 5 176 12 63 5 61 7 26 1 257 3 178 1 261 5 149 3 263 1 216 3 218 34 268 1 303 5 270 2 157 16 272 1 
139 1 197 4 160 2 176 3 61 2 63 2 231 1 178 1 119 1 83 1 200 1 261 1 89 2 218 8 303 2 268 1 130 1 131 4 270 1 157 4 
197 3 139 1 176 2 61 2 231 1 178 1 83 1 200 1 261 1 47 1 218 6 268 1 130 1 157 3 
197 2 160 1 139 1 176 2 61 1 63 1 257 1 162 1 119 1 261 1 149 1 89 1 129 1 218 4 303 1 131 2 157 2 
55 2 197 2 139 1 257 1 149 1 216 1 90 1 218 5 157 3 272 1 
197 12 160 1 231 2 162 2 119 4 200 2 83 1 235 1 89 1 130 2 206 1 131 2 289 1 55 2 139 5 176 8 61 4 63 1 257 2 178 1 261 5 149 2 216 2 218 25 303 1 268 1 270 1 272 1 157 13 
55 1 197 1 218 1 
216 1 218 1 157 1 
160 1 197 3 139 1 176 3 63 1 61 2 257 1 162 1 119 1 121 1 261 1 149 1 89 1 129 1 218 6 303 1 131 2 157 3 
117 1 197 6 160 1 77 1 162 2 119 1 89 1 90 1 131 2 94 1 55 1 139 2 176 2 63 1 61 1 257 2 180 1 261 2 149 2 216 1 265 1 218 12 303 1 304 1 157 6 
139 1 197 3 176 2 61 1 231 1 119 1 200 1 261 1 218 6 130 1 157 3 
197 2 160 1 176 2 61 1 63 1 119 1 200 1 83 1 263 1 89 1 218 3 130 1 303 1 268 1 131 2 270 1 157 1 
284 1 56 1 195 1 217 1 221 1 36 1 280 1 
159 1 56 1 195 1 198 1 280 1 108 1 284 1 187 1 217 1 34 1 36 1 221 1 
137 4 62 1 256 1 8 1 282 1 87 1 214 1 32 1 264 1 242 4 71 1 133 1 76 4 
137 2 105 1 294 1 277 1 256 1 163 1 8 2 282 1 264 1 242 2 205 1 112 1 290 1 76 2 
100 1 137 1 104 1 254 1 242 1 146 1 133 1 8 1 282 1 76 1 
87 1 109 1 208 1 264 1 137 2 242 2 256 1 181 1 8 1 282 1 76 2 
137 4 105 1 256 3 8 2 282 2 87 1 109 1 214 1 32 1 264 2 166 1 242 5 71 1 302 1 133 1 76 5 
137 4 1 1 105 1 256 3 8 2 282 2 87 1 109 1 214 1 32 1 264 2 166 1 242 5 71 1 133 1 76 5 
47 1 264 1 32 1 137 1 242 1 256 1 71 1 133 1 8 1 282 1 76 1 
18 1 84 1 
18 1 84 1 
18 1 84 1 
230 1 41 1 199 1 6 1 8 1 282 1 242 3 247 1 133 1 137 3 105 1 62 1 256 4 25 1 210 1 260 2 184 1 264 1 33 1 301 1 112 1 223 2 76 3 
137 3 105 1 62 1 230 1 256 4 210 1 41 1 199 1 260 2 6 1 8 1 184 1 282 1 264 1 33 1 242 3 112 1 223 2 133 1 247 1 74 1 76 3 
137 1 242 1 8 1 282 1 76 1 201 1 
22 1 137 5 23 1 256 3 65 1 163 1 8 3 201 1 282 2 87 1 109 1 264 2 166 1 242 6 205 1 302 1 112 1 133 2 115 1 76 6 
18 1 84 1 
230 1 41 2 199 1 120 1 6 1 85 1 45 1 126 1 236 1 242 1 14 2 15 2 288 2 133 1 247 1 137 1 209 2 60 1 256 2 66 1 210 1 258 1 260 3 262 1 190 1 223 3 74 1 76 1 
22 1 137 2 256 2 6 1 8 2 201 1 282 1 87 1 264 1 242 2 112 1 173 1 76 2 
18 1 84 1 
22 1 137 1 23 1 105 1 256 1 163 1 8 2 282 1 264 1 242 1 205 1 112 1 76 1 
150 1 86 1 99 1 9 1 59 1 267 1 168 1 169 1 
99 2 251 1 59 1 253 1 185 1 86 2 9 4 150 3 30 1 88 1 154 2 110 1 168 4 169 1 
99 1 59 1 276 1 182 1 150 1 86 1 9 2 154 1 267 1 168 2 169 1 193 1 
99 1 59 1 82 1 150 1 9 3 185 2 86 1 30 2 88 1 267 1 168 3 169 1 
150 2 300 2 12 1 49 1 
9 1 59 1 267 1 168 1 169 1 145 1 
150 1 86 1 99 1 9 2 154 1 59 1 267 1 168 2 169 1 5 1 
42 1 
150 1 86 1 99 1 9 1 59 1 267 1 168 1 169 1 
150 1 86 1 99 1 47 1 
150 1 86 1 99 1 9 1 59 1 168 1 169 1 
9 1 167 1 97 1 
99 1 59 1 147 1 150 1 9 3 185 2 86 1 30 1 88 1 267 1 168 3 169 1 
150 1 86 1 99 1 9 2 153 1 154 1 59 1 168 2 169 1 
100 1 57 1 59 1 253 1 254 1 29 1 9 1 150 1 267 1 168 1 169 1 
150 1 86 1 9 1 59 1 267 1 168 1 169 1 
86 2 99 1 9 1 59 1 267 1 168 1 169 1 
39 1 59 2 150 1 86 1 9 2 267 1 241 1 168 2 169 2 291 1 
99 1 40 1 59 1 253 1 5 1 86 1 9 3 150 2 154 2 110 1 267 1 168 3 169 1 
99 1 100 1 59 1 254 2 81 1 29 1 146 1 150 1 86 1 9 2 151 1 154 1 267 1 168 2 169 1 
99 1 59 2 253 1 86 1 9 4 150 2 153 1 154 2 110 1 267 1 111 1 168 4 169 2 
150 1 86 1 99 1 185 1 9 3 154 1 59 1 267 1 168 3 169 1 5 1 
150 1 251 1 110 1 253 1 
150 1 86 1 

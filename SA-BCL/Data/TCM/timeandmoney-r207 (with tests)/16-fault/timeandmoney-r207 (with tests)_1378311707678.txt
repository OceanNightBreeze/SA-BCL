#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (126,325) (126,325) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (126,325) (126,325) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (126,325) (126,325) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (126,325) (126,325) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 210 286 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 102 74 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 102 105 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 102 105 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 102 105 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 102 105 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 173 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2944 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 0
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1058 | = null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 33 1 119 1 94 1 129 1 325 1 69 1 287 1 83 1 126 1 30 1 
225 1 33 1 119 1 94 1 129 1 325 1 69 1 287 1 83 1 126 1 30 1 
225 1 33 1 119 1 94 1 129 1 325 1 69 1 287 1 83 1 126 1 30 1 
225 1 33 1 119 1 94 1 129 1 325 1 69 1 287 1 83 1 126 1 30 1 
54 1 290 1 43 1 6 1 234 2 261 3 306 1 159 1 30 4 64 1 309 1 104 2 283 1 335 3 129 1 94 1 69 4 287 1 
43 1 18 1 344 1 261 1 306 1 159 1 30 2 225 1 283 1 253 1 39 1 129 1 94 1 119 1 69 2 287 1 
54 1 43 1 111 1 234 1 261 2 30 3 225 1 283 1 335 1 129 1 94 2 69 3 287 2 
290 1 54 3 43 1 6 1 58 1 157 1 111 1 261 5 234 4 306 1 159 1 30 9 101 1 64 1 309 1 104 2 225 1 283 1 335 7 129 1 94 2 69 9 287 2 245 1 
290 1 54 3 43 1 6 1 58 1 157 1 111 1 261 5 234 4 306 1 159 1 30 9 101 1 64 1 309 1 104 2 225 1 283 1 335 7 129 1 94 2 69 9 287 2 245 1 
26 1 214 1 106 1 
275 1 26 1 339 2 
350 2 191 1 208 2 204 2 226 2 91 1 29 2 236 2 
0 1 191 1 86 1 208 2 209 2 305 1 91 1 93 1 133 1 61 1 308 2 236 2 137 1 332 1 66 1 118 2 139 2 340 1 181 1 195 1 72 1 199 1 182 1 183 2 297 1 29 3 350 3 273 1 252 1 224 1 204 2 226 2 254 1 300 1 353 1 257 1 82 1 
350 1 50 1 208 1 204 1 296 1 226 1 91 1 312 1 29 1 236 1 
26 1 89 1 28 1 29 1 100 1 113 1 236 1 350 1 184 1 95 1 312 1 106 1 230 1 143 1 
208 2 89 1 91 1 113 1 236 2 238 1 312 2 143 2 26 1 296 1 28 2 100 1 29 2 350 2 50 1 184 1 204 2 226 2 106 1 
202 1 28 1 90 1 189 1 143 1 
322 1 26 1 28 2 90 1 189 1 348 1 106 1 143 2 
28 1 189 1 143 1 
208 1 296 1 90 1 28 1 91 1 29 1 236 1 50 1 350 1 238 1 204 1 226 1 312 1 143 1 
26 1 
26 1 46 1 28 2 90 1 189 1 348 1 106 1 143 2 
237 1 241 1 263 1 28 2 90 1 210 1 205 1 286 1 143 2 
191 1 214 1 
191 2 208 1 29 2 236 2 350 2 49 1 336 1 204 1 226 1 
177 1 140 1 180 1 
191 1 209 1 199 1 297 1 29 1 61 1 201 1 137 1 350 1 273 1 224 1 332 1 118 1 139 1 300 1 353 1 
208 1 209 1 199 1 297 1 29 2 61 1 236 1 137 1 273 1 350 2 332 1 224 1 118 1 226 1 163 1 139 1 300 1 180 1 353 1 289 1 
350 3 191 1 208 3 204 1 226 3 163 1 29 3 236 3 
350 1 208 1 296 1 226 1 312 1 29 1 236 1 
350 1 49 1 208 1 336 1 204 1 226 1 312 1 29 1 236 1 
0 1 191 1 86 1 208 3 209 1 17 1 305 1 89 1 91 1 61 1 113 1 308 1 236 3 137 1 332 1 66 1 118 1 163 1 139 1 312 1 143 1 340 1 289 1 195 1 72 1 199 1 182 1 183 2 297 1 28 1 29 4 100 1 273 1 49 1 350 4 252 1 224 1 184 1 204 2 226 3 254 1 300 1 171 1 353 1 
350 2 191 1 282 1 208 1 226 1 163 1 230 1 29 2 236 2 
208 3 26 1 89 1 28 1 29 3 100 1 113 1 236 3 49 1 350 3 184 1 204 1 226 3 163 2 312 1 171 1 143 1 121 1 289 1 
208 2 29 2 236 2 49 1 350 2 204 1 226 2 163 1 140 1 180 1 
191 1 209 1 199 1 297 1 29 1 61 1 137 1 350 1 273 1 224 1 332 1 118 1 139 1 300 1 353 1 
219 1 191 1 209 1 199 1 27 1 297 1 29 1 61 1 137 1 350 1 224 1 332 1 118 1 139 1 353 1 
0 1 86 1 182 2 47 1 268 1 183 2 98 1 299 1 308 2 252 1 116 1 31 1 177 1 254 1 140 1 180 1 265 1 340 1 195 1 
350 1 208 1 197 1 226 1 312 1 100 1 29 1 236 1 
196 1 191 1 208 4 345 1 29 5 236 5 350 5 49 1 282 1 204 1 226 4 163 2 230 1 289 1 
350 2 197 1 208 2 296 1 226 2 312 1 29 2 236 2 
187 1 200 1 
187 1 200 1 
207 1 88 1 
207 1 88 1 
207 1 88 1 
187 1 337 1 200 1 
187 1 337 1 200 1 
187 1 200 1 36 1 
127 1 207 1 88 1 187 2 7 1 200 2 
187 1 337 1 200 1 
187 1 200 1 23 1 
187 1 200 1 23 1 
187 1 200 1 23 1 
293 2 26 1 34 2 347 1 28 2 200 2 92 3 280 1 349 1 127 1 151 2 160 1 117 1 310 1 187 2 242 2 319 2 143 2 24 1 
206 1 191 1 1 1 57 1 208 2 34 1 92 1 236 2 36 1 117 1 242 1 215 1 143 1 28 1 200 1 9 1 29 2 317 1 350 2 351 1 151 1 187 1 226 2 319 1 
309 1 306 1 159 1 
39 1 306 1 159 1 
303 1 328 1 309 2 39 1 99 1 159 3 
303 1 328 1 309 1 39 1 159 2 269 1 
303 2 309 1 328 1 39 1 159 2 
206 1 208 1 90 4 91 1 263 1 4 2 178 2 264 1 312 1 5 1 143 5 44 1 47 1 50 1 275 2 51 1 226 1 189 1 106 1 55 1 109 2 13 1 236 1 238 1 241 1 67 3 68 1 339 4 288 1 198 1 343 1 26 1 296 1 346 1 28 5 348 1 29 1 350 1 251 2 31 1 204 1 205 1 
206 1 208 1 91 1 90 4 263 1 178 2 264 1 312 1 143 5 44 1 47 1 222 1 50 1 275 2 51 1 226 1 189 3 106 1 190 1 55 1 109 2 15 2 236 1 238 1 241 1 67 3 68 1 339 4 288 1 198 1 343 1 26 1 296 1 346 1 28 5 348 1 29 1 202 2 350 1 251 2 31 1 204 1 205 1 
206 1 109 1 13 1 208 1 91 1 90 2 236 1 237 1 238 1 241 1 67 1 263 1 4 1 178 1 264 1 312 1 5 1 68 1 339 1 143 3 288 1 198 1 26 1 296 1 28 3 29 1 350 1 50 1 251 2 204 1 51 1 226 1 205 1 106 1 
206 1 109 1 13 1 90 1 237 1 241 1 67 1 263 1 178 1 4 1 264 1 339 1 5 1 68 1 143 2 288 1 198 1 28 2 251 2 51 1 205 1 231 1 
214 1 188 1 353 1 
11 1 353 1 
60 1 
297 1 353 1 
332 1 188 2 297 1 60 1 353 2 70 1 211 1 
332 1 297 1 353 1 
45 1 353 1 
73 1 324 1 182 3 298 1 133 4 299 3 308 7 149 1 31 1 161 1 284 1 265 2 53 1 288 1 144 1 172 1 107 2 
73 1 324 1 182 3 298 1 133 4 299 3 308 7 149 1 31 1 161 1 284 1 265 2 53 1 288 1 144 1 172 1 107 2 
73 1 324 1 182 3 233 1 298 1 133 4 299 3 308 7 149 1 31 1 161 1 284 1 265 2 53 1 288 1 144 1 172 1 107 2 
258 1 86 1 133 5 279 2 308 11 284 1 161 2 264 1 68 1 265 2 144 1 340 1 288 1 166 1 124 1 148 1 182 6 47 1 183 2 247 1 298 2 299 4 248 1 149 1 252 1 153 1 31 1 254 1 53 1 107 1 
86 2 324 1 174 1 133 5 308 9 284 1 161 1 265 3 288 1 340 2 144 1 73 1 148 1 182 4 183 4 316 1 298 1 299 4 149 1 252 2 31 1 254 2 172 1 107 2 
209 1 16 1 261 1 59 1 306 1 35 1 159 2 61 1 281 1 309 1 65 1 137 1 283 1 39 1 334 1 335 1 118 1 94 1 139 1 141 1 313 1 69 2 287 1 43 1 99 1 30 2 225 1 129 1 229 1 321 1 
209 1 16 1 261 1 59 1 306 1 326 1 35 1 159 2 61 1 281 1 309 1 137 1 283 1 39 1 334 1 118 1 335 2 94 1 139 1 138 1 141 1 313 1 69 3 287 1 43 1 147 1 99 1 30 3 225 1 229 1 
209 1 261 1 59 1 306 1 35 1 159 2 61 1 281 1 137 1 309 1 283 1 39 1 334 1 118 1 335 2 139 1 138 1 313 1 69 2 43 1 147 1 99 1 30 2 225 1 229 1 
295 1 209 1 199 1 297 1 59 2 175 1 326 1 61 1 30 1 137 1 331 1 225 2 334 2 118 1 94 1 96 1 139 1 41 1 353 1 69 1 313 2 287 1 320 1 
209 1 16 1 59 1 306 1 35 1 159 2 61 1 281 1 309 1 65 1 137 1 39 1 334 1 118 1 94 1 139 1 138 1 141 1 313 1 69 1 287 1 99 1 30 1 225 1 129 1 229 1 
110 1 
209 2 89 1 156 1 113 1 61 1 236 1 137 1 329 1 118 2 241 1 67 1 95 1 263 1 139 2 96 1 312 1 143 3 218 1 292 1 199 2 346 1 28 3 297 1 348 1 100 1 29 1 76 1 79 1 350 1 251 1 184 1 51 1 227 1 205 1 189 2 352 1 230 1 353 1 302 2 320 1 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 46 1 89 1 156 1 28 3 348 1 100 1 29 1 76 1 113 1 236 1 350 1 329 1 184 1 95 1 312 1 189 1 352 1 143 3 230 1 302 2 
156 1 89 1 113 1 236 1 329 1 67 1 241 1 95 1 263 1 312 1 143 2 292 1 342 1 346 1 28 2 29 1 100 1 76 1 251 1 350 1 184 1 205 1 352 1 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
292 1 89 1 156 1 28 2 100 1 29 1 76 1 113 1 236 1 329 1 350 1 184 1 95 1 312 1 352 1 143 2 230 1 302 2 
156 1 89 1 113 1 236 1 329 1 67 1 241 1 95 1 263 1 312 1 143 2 292 1 123 1 346 1 28 2 29 1 100 1 76 1 251 1 350 1 184 1 205 1 352 1 230 1 302 2 
0 1 73 1 191 2 86 1 324 1 182 3 268 1 183 2 133 3 308 6 299 2 149 1 252 1 31 1 214 1 177 1 254 1 140 1 180 1 265 2 288 1 340 1 172 1 144 1 107 1 195 1 
0 1 191 1 86 2 93 1 307 1 133 10 279 4 308 15 177 12 264 3 140 3 180 12 120 1 68 3 340 2 288 3 25 1 195 2 72 1 124 1 182 5 183 4 247 2 298 2 299 2 248 3 252 2 155 1 254 2 85 1 
0 1 191 1 86 1 208 1 209 1 93 1 61 1 133 1 236 1 308 2 137 1 332 1 118 1 163 1 139 1 140 1 289 1 340 1 195 1 71 1 72 1 199 1 182 1 297 1 183 2 29 2 201 1 273 1 350 2 224 1 252 1 186 1 226 1 254 1 300 1 255 1 353 1 85 1 
0 2 208 1 86 2 209 1 305 1 133 3 308 5 3 1 137 1 177 2 139 1 140 2 264 1 180 2 142 1 265 1 182 2 183 4 273 1 224 1 226 1 235 1 61 1 236 1 20 1 330 1 332 1 118 1 163 1 68 1 340 2 289 1 288 1 195 2 72 1 199 1 297 1 29 2 298 2 299 3 350 2 252 2 254 2 300 1 353 1 85 1 
0 2 208 1 86 2 209 8 130 1 93 1 61 2 133 1 236 1 308 2 137 2 63 1 38 1 118 8 163 1 138 1 139 7 96 1 340 2 145 1 146 1 195 2 291 1 72 1 199 2 182 1 268 1 183 4 297 2 29 1 169 1 350 1 252 2 226 1 254 2 353 3 257 2 320 1 321 1 
0 1 86 1 208 1 133 1 236 1 308 3 177 1 140 1 264 1 180 1 68 1 265 1 340 1 288 1 243 1 195 1 182 2 47 1 183 2 29 1 299 1 49 1 350 1 252 1 31 1 204 1 226 1 254 1 85 1 
0 1 86 1 268 1 183 2 298 1 133 2 299 1 308 2 252 1 177 1 254 1 140 1 277 1 180 1 68 1 340 1 288 1 195 1 
0 1 86 1 182 2 47 1 268 1 183 2 98 1 299 1 308 2 252 1 31 1 177 1 254 1 140 1 180 1 265 1 340 1 195 1 
0 1 86 1 133 2 308 4 177 2 264 1 140 2 180 2 68 1 265 1 288 1 340 1 195 1 182 2 47 1 183 2 268 1 298 1 299 2 252 1 31 1 254 1 
0 1 86 1 183 2 298 1 133 2 299 1 308 2 63 1 252 1 177 1 254 1 140 1 277 1 180 1 68 1 340 1 288 1 195 1 
0 1 86 1 182 2 47 1 183 2 98 1 299 1 308 2 63 1 252 1 31 1 177 1 254 1 140 1 180 1 265 1 340 1 195 1 
0 1 86 1 183 2 298 1 133 2 299 1 308 2 63 1 252 1 177 1 254 1 140 1 264 1 180 1 68 1 340 1 288 1 195 1 
0 1 86 1 183 2 298 1 133 2 299 1 308 2 252 1 177 1 254 1 140 1 264 1 180 1 68 1 340 1 288 1 195 1 
0 1 191 1 86 1 209 1 305 1 93 1 133 1 61 1 308 2 137 1 332 1 118 1 139 1 340 1 195 1 72 1 199 1 182 1 297 1 183 2 29 1 273 1 350 1 224 1 252 1 254 1 300 1 353 1 
0 1 72 1 191 1 86 1 209 1 199 1 182 1 183 2 48 1 308 1 252 1 239 1 118 1 254 1 139 1 312 1 340 1 195 1 
0 1 86 1 183 2 298 1 133 2 299 1 308 2 252 1 177 1 254 1 140 1 264 1 180 1 68 1 340 1 288 1 85 1 195 1 
0 1 86 1 209 1 305 1 133 2 61 1 308 2 137 1 20 1 332 1 118 1 177 1 140 1 139 1 264 1 180 1 68 1 288 1 340 1 195 1 297 1 183 2 29 1 298 1 299 1 273 1 350 1 224 1 252 1 254 1 300 1 353 1 321 1 
0 1 86 1 208 1 133 2 236 1 308 2 21 1 177 1 264 1 140 1 180 1 68 1 340 1 288 1 195 1 183 2 29 1 298 1 299 1 49 1 350 1 252 1 204 1 226 1 254 1 85 1 
86 2 133 4 279 2 212 1 308 9 2 1 114 1 264 1 68 1 265 1 340 2 288 1 74 1 124 1 182 5 267 1 47 1 183 4 316 1 247 1 298 1 299 2 248 1 102 1 150 1 252 2 31 1 254 2 108 1 
86 1 124 2 182 5 183 2 316 1 133 5 279 2 308 10 212 2 248 2 2 1 102 1 114 3 105 1 252 1 150 2 254 1 318 1 354 1 340 1 108 1 
86 2 133 4 279 2 212 1 308 9 2 1 114 1 264 1 68 1 265 1 340 2 288 1 124 1 182 5 267 1 47 1 183 4 316 1 247 1 298 1 299 2 248 1 102 1 105 1 150 1 252 2 31 1 254 2 108 1 
86 2 133 4 279 2 212 1 308 9 2 1 114 1 264 1 68 1 265 1 340 2 288 1 124 1 182 5 267 1 47 1 183 4 316 1 247 1 298 1 299 2 248 1 102 1 105 1 150 1 252 2 31 1 254 2 108 1 
86 1 324 2 307 2 133 21 279 4 212 1 308 40 2 1 114 3 264 4 68 4 265 6 144 2 340 1 288 6 73 2 124 2 182 19 47 4 183 2 316 1 247 2 298 4 299 10 248 4 102 1 149 2 105 1 150 1 252 1 31 6 254 1 318 1 172 2 354 1 107 2 108 1 
249 1 127 1 151 1 160 1 310 1 187 1 34 1 242 1 200 1 319 1 
317 1 36 1 
168 1 151 1 185 1 187 1 34 1 242 1 19 1 200 1 319 1 
293 1 26 1 34 1 347 1 28 1 200 1 92 2 280 1 349 1 127 1 151 1 160 1 117 1 310 1 187 1 242 1 319 1 143 1 
293 1 26 1 34 1 347 1 28 1 200 1 92 2 280 1 349 1 127 1 151 1 160 1 117 1 310 1 187 1 242 1 319 1 143 1 
293 1 26 1 34 1 347 1 28 1 200 1 92 2 280 1 349 1 127 1 151 1 160 1 117 1 310 1 187 1 242 1 319 1 143 1 
337 1 75 1 7 1 
337 1 75 1 7 1 
42 1 23 1 
42 1 7 1 23 1 
57 1 9 1 
206 1 191 1 1 1 57 1 208 2 34 1 90 1 92 1 236 2 36 1 242 1 215 1 143 1 293 1 97 1 28 1 200 1 9 1 29 2 349 1 317 1 350 2 351 1 151 1 187 1 226 2 319 1 
337 1 75 1 
42 1 7 1 23 1 
0 1 56 1 86 1 209 2 130 1 93 1 61 1 133 1 236 2 308 2 137 1 118 2 311 1 40 1 338 1 139 2 340 1 266 1 195 1 72 1 182 1 297 1 183 2 29 2 169 1 350 2 252 1 254 1 353 1 257 2 85 1 
209 2 16 1 59 1 306 1 99 1 159 2 35 1 61 1 270 1 194 1 309 1 137 1 39 1 118 2 138 1 139 2 52 1 229 1 321 1 
209 1 16 1 59 1 306 1 99 1 159 2 35 1 61 1 194 1 309 1 137 1 250 1 39 1 118 1 138 1 139 1 229 1 
209 1 199 1 297 1 59 1 175 1 61 1 137 1 118 1 154 1 139 1 52 1 96 1 353 1 320 1 
209 1 16 1 59 1 306 1 99 1 159 2 35 1 61 1 270 1 194 1 309 1 137 1 39 1 118 1 138 1 139 1 52 1 229 1 
84 1 
251 1 259 1 152 1 67 1 26 1 214 1 106 1 
131 1 262 1 67 1 241 1 263 1 339 1 143 1 342 1 26 2 346 1 28 1 348 1 251 1 275 1 205 1 189 1 106 1 
109 2 209 1 304 1 113 1 61 1 137 2 330 1 332 1 22 1 240 1 118 1 241 2 67 2 263 2 178 2 264 1 139 1 68 1 339 2 143 2 288 1 70 1 294 1 199 1 346 2 28 2 297 1 348 1 167 1 251 3 203 1 32 1 51 1 11 2 188 1 189 2 205 2 353 4 
109 2 55 1 208 1 91 1 236 1 279 1 238 1 67 2 241 1 263 1 178 2 312 1 339 1 218 1 124 1 343 1 26 1 296 1 346 1 29 1 248 1 350 1 50 1 251 2 204 1 51 1 226 1 170 1 205 1 106 1 354 1 
55 2 208 1 132 1 324 1 91 1 236 1 238 1 241 1 67 2 263 1 179 1 312 1 143 1 144 1 288 2 343 1 296 1 346 1 28 1 29 1 350 1 149 1 251 2 50 1 31 1 204 1 226 1 205 1 
259 1 26 1 346 1 251 1 152 1 241 1 67 1 263 1 205 1 106 1 
109 1 251 2 178 1 264 1 339 1 68 1 288 1 
26 1 28 1 189 1 348 1 106 1 143 1 
209 4 61 1 137 1 237 1 241 2 118 4 67 2 263 2 139 4 96 1 217 2 143 3 244 1 218 2 199 2 346 1 297 1 28 3 348 2 128 1 79 1 251 2 51 2 227 1 205 2 189 4 81 1 353 1 320 1 
0 1 191 1 86 1 208 2 209 1 305 1 91 1 61 1 308 1 236 2 137 1 332 1 66 1 118 1 139 1 340 1 195 1 72 1 199 1 182 1 183 2 297 1 29 3 350 3 273 1 224 1 252 1 204 2 226 2 254 1 300 1 353 1 
109 1 26 1 346 1 251 1 241 1 51 1 67 1 263 1 205 1 339 1 106 1 218 1 
192 1 34 1 319 1 
192 1 34 1 319 1 
136 1 57 1 160 1 34 1 319 1 
192 1 34 1 319 1 
115 1 34 1 319 1 
115 1 34 1 319 1 
115 1 34 1 319 1 
34 1 319 1 
187 1 200 1 
73 1 86 2 324 1 148 1 182 4 183 4 133 4 298 1 308 8 299 3 149 1 252 2 31 1 254 2 265 2 288 1 340 2 172 1 144 1 107 1 
73 1 324 1 182 3 133 3 299 2 308 6 149 1 31 1 214 1 265 2 172 1 144 1 288 1 107 1 
86 1 182 2 47 1 183 2 133 2 298 1 299 2 308 4 252 1 31 1 254 1 264 1 68 1 265 1 314 1 340 1 288 1 
124 1 182 4 47 1 133 3 247 1 298 1 279 2 308 7 299 2 248 1 31 1 264 1 68 1 265 1 288 1 
86 1 324 1 307 1 133 10 308 20 279 2 264 2 68 2 120 1 265 4 144 2 288 3 340 1 73 1 148 1 182 10 47 2 183 2 247 1 298 2 299 6 248 2 149 2 252 1 31 3 254 1 172 1 107 1 
182 1 308 1 279 1 
133 1 308 1 248 1 
86 1 182 3 47 1 183 2 133 3 298 1 308 6 299 3 330 1 252 1 31 1 254 1 264 1 68 1 265 2 340 1 314 1 288 1 
86 1 124 1 182 1 183 2 316 1 133 1 279 1 308 2 248 1 252 1 254 1 340 1 354 1 
324 1 182 3 133 3 298 1 308 6 299 2 149 1 31 1 265 1 288 1 144 1 
73 1 166 1 86 1 148 1 182 2 183 2 133 1 298 1 299 2 308 3 149 1 252 1 254 1 265 1 144 1 340 1 172 1 
86 1 132 1 324 1 182 5 183 2 316 1 298 2 133 5 299 5 308 10 149 2 252 1 31 2 254 1 265 3 340 1 144 2 288 2 
86 1 183 2 316 1 133 2 298 1 308 2 299 1 252 1 254 1 68 1 340 1 288 1 
86 1 182 2 47 1 183 2 316 1 133 2 298 1 299 2 308 4 252 1 31 1 254 1 264 1 68 1 265 1 340 1 288 1 
166 1 86 3 148 1 182 2 267 1 183 6 316 1 298 1 133 1 308 3 299 2 149 1 252 3 254 3 265 1 340 3 144 1 
86 4 324 1 132 1 133 7 279 1 308 15 265 3 288 2 314 1 340 4 144 2 73 1 166 1 124 1 148 1 182 8 267 1 183 8 316 1 298 3 299 6 248 1 149 2 252 4 31 2 153 1 254 4 172 1 
86 1 133 6 308 10 279 1 264 2 68 2 265 1 340 1 288 2 246 1 124 1 182 4 47 1 183 2 316 1 299 1 248 1 252 1 31 1 12 1 254 1 301 1 354 1 232 1 
86 2 133 8 308 13 279 2 264 3 68 3 265 1 340 2 314 1 288 3 246 1 124 1 182 5 47 1 183 4 316 1 247 1 298 1 299 2 248 1 252 2 31 1 12 1 254 2 301 1 354 1 232 1 
86 2 132 1 324 2 133 8 308 15 279 1 265 3 288 3 340 2 314 1 144 2 73 1 124 1 182 7 183 4 316 1 298 1 299 4 248 1 149 2 252 2 31 3 254 2 354 1 172 1 107 1 
86 2 132 1 324 2 133 8 308 15 279 1 265 4 288 3 340 2 314 1 144 2 73 1 124 1 182 7 183 4 316 1 298 3 299 7 248 1 149 2 252 2 31 3 254 2 354 1 172 1 107 1 
86 1 133 6 308 10 279 1 264 2 68 2 265 1 340 1 288 2 246 1 124 1 182 4 47 1 183 2 316 1 299 1 248 1 252 1 31 1 12 1 254 1 301 1 354 1 232 1 
86 1 124 1 182 1 183 2 316 1 133 1 279 1 308 2 248 1 252 1 254 1 340 1 354 1 
86 2 124 1 182 1 183 4 316 1 133 1 279 1 308 2 248 1 252 2 254 2 340 2 314 1 354 1 
86 2 124 1 182 1 267 1 183 4 316 1 133 1 279 1 308 2 248 1 252 2 254 2 340 2 354 1 
73 2 324 1 182 4 298 3 133 3 308 7 299 6 149 3 31 1 265 3 172 1 144 3 288 1 
86 2 124 1 182 1 267 1 183 4 316 1 133 1 279 1 308 2 248 1 252 2 254 2 340 2 354 1 
350 1 191 1 282 1 276 1 29 1 230 1 236 1 
191 1 278 1 193 1 29 1 77 1 236 1 78 1 350 1 274 1 282 1 276 1 230 1 
137 1 209 1 214 1 118 1 199 1 297 1 96 1 139 1 353 1 61 1 320 1 
191 1 208 1 209 1 199 1 297 1 29 2 61 1 236 1 137 1 350 2 273 1 332 1 224 1 118 1 226 1 163 1 139 1 353 1 
191 1 208 2 45 1 209 1 89 1 297 2 100 1 29 2 61 1 236 2 176 1 137 1 350 2 273 1 332 2 224 1 118 1 226 1 163 1 139 1 312 1 353 3 217 1 
191 1 208 2 45 1 209 2 27 1 89 1 297 2 100 1 29 2 61 1 236 2 176 1 137 1 350 2 332 2 224 1 333 1 118 2 226 1 163 1 139 2 312 1 353 3 217 1 
45 1 209 3 199 1 26 1 297 1 28 2 8 1 113 1 61 1 176 1 137 1 332 1 333 1 118 3 11 1 139 3 188 1 216 1 189 1 106 1 143 2 217 1 353 4 
45 1 209 3 199 1 26 1 297 1 28 2 113 1 61 1 176 1 137 1 332 1 333 1 118 3 240 1 11 1 139 3 188 1 189 1 106 1 143 2 217 1 353 4 
291 1 137 1 209 1 118 1 139 1 61 1 
291 1 209 7 199 2 297 2 158 1 62 1 61 2 137 3 169 1 38 1 332 1 118 7 138 1 139 6 257 1 353 3 70 1 165 1 145 1 321 1 146 1 
0 2 208 1 86 2 209 1 305 1 133 3 308 6 3 1 137 1 311 1 177 1 140 1 139 1 180 1 265 2 144 1 182 3 183 4 273 1 149 1 224 1 226 1 107 1 321 1 191 2 324 1 61 1 236 1 20 1 332 1 118 1 163 1 340 2 288 1 195 2 73 1 297 1 29 2 299 2 350 2 252 2 31 1 254 2 300 1 353 1 172 1 85 1 
259 1 209 1 304 1 90 1 113 1 67 1 118 1 241 2 240 1 263 2 139 1 143 3 244 1 294 1 26 1 199 1 346 2 28 3 348 1 251 1 203 1 152 1 11 1 188 1 205 2 189 2 106 1 353 2 
291 1 209 2 297 1 61 1 137 2 332 1 22 1 118 2 188 1 139 2 353 2 70 1 321 1 
137 1 122 1 333 1 209 4 118 4 199 1 297 1 96 1 139 4 353 1 61 1 320 1 321 1 
260 1 209 2 297 1 221 1 158 1 62 1 61 1 327 1 137 2 332 1 118 2 139 2 217 1 353 1 
137 1 39 1 209 1 118 1 199 1 139 1 306 1 159 1 229 1 61 1 
209 2 297 1 61 1 137 1 169 1 118 2 139 2 138 1 353 1 321 1 266 1 
122 1 209 5 199 1 297 2 61 2 137 2 38 1 169 1 118 5 96 1 139 4 217 1 353 3 320 1 321 1 145 1 
122 1 323 1 209 5 199 1 297 2 61 2 137 2 169 1 118 5 96 1 139 4 217 1 353 3 320 1 321 1 145 1 
191 1 208 1 209 1 199 1 27 1 297 1 29 2 61 1 236 1 137 1 350 2 332 1 224 1 118 1 226 1 163 1 139 1 353 1 
209 1 297 1 158 1 62 1 61 1 137 2 332 1 118 1 139 1 217 1 353 1 70 1 165 1 
191 1 164 1 125 1 223 1 134 1 
80 1 87 1 28 1 90 1 143 1 173 1 223 1 
350 1 56 1 40 1 338 1 29 1 236 1 223 1 164 1 125 1 
87 1 89 1 28 1 100 1 113 1 223 1 125 1 134 1 184 1 171 1 312 1 143 1 173 1 164 1 
43 1 283 1 214 1 261 1 
43 1 283 1 94 1 261 1 69 1 287 1 30 1 
225 1 334 1 30 1 
43 1 18 2 261 1 30 3 213 1 283 1 10 1 162 1 129 1 94 1 69 3 287 1 
43 1 104 1 283 1 335 1 94 1 261 1 69 2 287 1 30 2 
290 1 234 1 261 1 306 1 159 1 30 1 309 1 129 1 94 1 69 1 287 1 
43 1 94 1 129 1 261 1 69 1 287 1 30 1 
43 2 283 1 94 1 129 1 69 1 287 1 30 1 
341 1 43 1 261 1 220 1 30 2 129 1 94 2 256 1 69 2 287 2 
54 1 43 1 58 1 234 1 261 2 30 3 283 1 335 2 129 1 94 1 69 3 287 1 245 1 
43 1 261 1 306 1 159 2 99 1 30 2 135 1 309 1 283 1 39 1 335 1 129 1 94 1 69 2 287 1 
54 1 43 1 234 1 261 2 30 4 64 1 104 1 283 1 335 2 129 1 94 2 69 4 287 2 
43 1 283 1 94 1 129 1 261 1 69 1 287 1 30 1 
54 1 43 2 18 1 234 1 261 3 315 1 30 4 213 1 283 2 10 1 335 2 94 1 69 4 287 1 
272 1 43 1 283 1 335 1 94 1 129 1 261 1 228 1 69 2 287 1 101 1 30 2 
213 2 103 1 43 1 283 1 10 1 94 1 129 1 18 2 261 1 69 3 287 1 30 3 
14 2 261 2 285 1 112 1 
37 1 94 1 129 1 69 1 287 1 30 1 
43 1 283 1 335 1 58 1 94 1 129 1 261 1 69 2 287 1 30 2 
271 1 
43 1 283 1 94 1 129 1 261 1 69 1 287 1 30 1 
43 1 283 1 335 1 58 1 94 1 129 1 18 1 261 1 69 3 287 1 30 3 
54 1 261 1 234 1 315 1 
43 1 261 1 

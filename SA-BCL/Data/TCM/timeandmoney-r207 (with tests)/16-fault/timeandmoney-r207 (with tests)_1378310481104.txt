#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 347 (161,255) (161,255) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 347 (161,255) (161,255) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 347 (161,255) (161,255) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 347 (161,255) (161,255) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 347 (40,338) (40,338) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (275,296,300,318) (275,296,300,318) (275,296,300,318) 21 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (275,296,300,318) (275,296,300,318) (275,296,300,318) 21 77 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (275,296,300,318) (275,296,300,318) (275,296,300,318) 21 77 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (41,76) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 35 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 61 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (275,296,300,318) (275,296,300,318) (95,226,341) (95,226,341) (95,226,341) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (275,296,300,318) (275,296,300,318) (95,226,341) (95,226,341) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (275,296,300,318) (275,296,300,318) (95,226,341) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (164,272) (164,272) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 24 259 361 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (68,184) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (41,76) 278 331 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 237 78 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 237 78 212 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 237 78 212 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 237 78 212 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 58 134 325 119 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 237 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (41,76) 278 120 (185,333) (185,333) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
275 1 296 1 300 1 161 1 307 1 295 1 255 1 227 1 347 1 
275 1 296 1 300 1 161 1 307 1 295 1 255 1 227 1 347 1 
275 1 296 1 300 1 161 1 307 1 295 1 255 1 227 1 347 1 
275 1 296 1 300 1 161 1 307 1 295 1 255 1 227 1 347 1 
92 1 275 1 178 1 318 3 150 1 279 3 300 1 57 1 295 1 182 1 67 1 194 1 34 2 128 1 296 4 297 2 307 4 248 1 
92 1 275 1 40 1 296 1 300 1 307 1 295 1 338 1 227 1 347 1 36 1 
275 2 296 2 300 2 21 1 307 1 295 1 227 1 
275 2 318 1 77 1 296 3 300 2 21 1 49 1 307 2 295 1 227 1 
275 2 318 1 77 1 296 3 300 2 21 1 49 1 307 2 295 1 227 1 
5 1 160 1 86 1 
5 1 129 1 32 2 
191 2 262 2 98 2 54 2 245 1 246 2 30 1 239 2 
363 1 251 2 191 2 26 1 321 1 254 1 30 1 52 2 365 1 369 1 174 2 69 1 351 1 98 2 54 2 145 1 196 1 10 1 198 2 200 1 147 1 262 2 232 1 335 1 16 1 239 2 18 1 312 1 106 1 245 1 246 2 23 2 135 1 
191 1 262 1 69 1 98 1 54 1 246 1 30 1 273 1 239 1 136 1 
46 1 191 1 264 1 168 1 29 1 31 1 5 1 219 1 69 1 160 1 54 1 260 1 309 1 246 1 
46 1 262 1 191 1 168 2 264 1 29 2 239 1 5 1 219 1 69 1 160 1 98 1 54 1 260 1 246 1 
168 1 234 1 29 1 162 1 308 1 
5 1 160 1 168 2 29 2 162 1 176 1 308 1 155 1 
168 1 29 1 162 1 
262 1 191 1 168 1 29 1 373 1 30 1 239 1 69 1 98 1 54 1 308 1 273 1 246 1 136 1 
5 1 
5 1 332 1 160 1 168 2 29 2 162 1 176 1 308 1 
276 1 168 5 29 5 1 1 60 1 324 2 270 2 5 1 125 1 7 1 241 1 63 1 158 1 160 1 209 2 176 1 162 2 308 2 188 1 
86 1 245 1 
191 2 262 1 376 1 239 1 98 1 175 1 54 2 245 2 246 2 
278 1 76 1 68 1 
335 1 26 1 321 1 52 1 174 1 69 1 145 1 245 1 317 1 198 1 
76 1 174 1 326 1 191 1 335 1 26 1 98 1 370 1 54 1 145 1 246 1 52 1 239 1 198 1 
191 5 262 1 266 1 364 1 239 4 376 1 140 1 326 1 370 2 98 4 54 5 245 1 309 1 246 5 
191 2 69 1 98 2 54 2 310 1 246 2 239 2 136 1 
262 1 191 3 370 1 98 3 54 3 245 1 246 3 239 3 
191 1 69 1 98 1 54 1 246 1 239 1 136 1 
191 1 262 1 69 1 98 1 175 1 54 1 246 1 239 1 376 1 
46 1 363 1 251 2 191 3 168 1 26 1 29 1 30 1 304 1 52 1 193 1 365 1 219 1 369 1 326 1 174 1 69 1 351 1 98 3 370 1 54 3 260 1 196 1 145 1 10 1 198 1 262 2 232 1 335 1 264 1 376 1 239 3 18 1 312 1 106 1 245 1 246 3 23 1 
140 1 191 2 98 1 370 1 54 2 245 1 309 1 246 2 239 1 
46 1 262 1 191 3 168 1 264 1 29 1 50 1 376 1 239 3 193 1 5 1 219 1 326 1 69 1 370 2 98 3 260 1 54 3 246 3 
76 1 262 1 191 2 376 1 239 2 68 1 370 1 98 2 54 2 246 2 
335 1 26 1 321 1 52 1 174 1 69 1 145 1 245 1 198 1 
231 1 191 1 26 1 294 1 205 1 52 1 284 1 157 1 174 1 33 1 245 1 246 1 186 1 362 1 198 1 
278 2 251 2 283 1 323 1 365 2 369 1 68 2 288 1 196 1 146 1 76 2 232 1 356 1 58 1 123 1 16 2 358 1 18 1 312 1 41 1 313 1 106 1 184 1 23 4 
191 1 69 1 264 1 98 1 54 1 310 1 246 1 239 1 
202 1 93 1 
202 1 93 1 
277 1 350 1 
277 1 350 1 
277 1 350 1 
104 1 202 1 93 1 
139 1 202 1 93 1 
83 1 277 1 350 1 202 2 233 1 93 2 
104 1 202 1 93 1 
104 1 202 1 93 1 
289 1 202 1 93 1 
289 1 202 1 93 1 
289 1 202 1 93 1 
274 1 90 1 191 2 168 1 321 1 29 1 93 1 349 1 368 1 139 1 69 1 96 1 98 2 143 1 54 2 202 1 336 1 239 2 19 1 243 1 245 1 88 1 210 1 246 2 211 1 189 1 
274 2 191 1 214 1 168 2 29 2 30 1 282 1 93 2 349 2 69 1 96 2 98 1 54 1 177 1 37 1 202 2 262 1 336 2 373 1 239 1 126 1 127 1 243 2 133 1 88 1 246 1 273 1 136 1 
92 1 150 1 57 1 
92 1 150 1 36 1 
92 3 293 1 57 2 302 1 207 1 36 1 
101 1 92 2 293 1 57 1 302 1 36 1 
92 2 57 1 293 2 302 1 36 1 
276 1 319 1 168 5 29 5 322 1 192 1 32 3 324 1 5 2 368 1 288 1 176 1 308 4 203 1 14 2 181 1 356 1 58 1 103 1 357 2 60 3 270 1 358 1 63 2 129 1 160 1 209 1 108 2 162 1 210 1 211 1 134 1 
276 1 168 9 29 9 322 2 2 1 192 2 32 9 324 2 5 5 327 1 287 1 288 3 176 1 35 1 308 7 291 5 234 5 152 1 122 1 356 3 58 3 103 1 357 6 60 8 270 2 358 3 63 6 158 1 129 3 160 1 209 2 108 6 162 6 210 4 134 3 
191 1 319 1 168 3 29 3 322 1 30 1 192 1 324 1 32 4 5 3 69 1 98 1 288 1 54 1 308 2 203 1 262 1 14 1 373 1 58 1 356 1 239 1 60 3 357 2 270 1 358 1 63 2 129 2 158 1 160 1 209 1 108 2 210 1 246 1 273 1 134 1 136 1 
319 1 168 2 29 2 322 1 192 1 32 4 324 1 5 2 288 1 35 1 308 1 203 1 14 1 58 1 356 1 357 2 60 3 270 1 358 1 63 2 129 2 158 1 209 1 108 2 210 1 134 1 
86 1 280 1 186 1 
267 1 186 1 
217 1 
157 1 186 1 362 1 
360 1 186 1 
157 1 186 1 
280 2 303 1 66 1 217 1 157 1 186 2 362 1 
333 1 0 1 120 2 356 1 16 4 375 1 323 2 82 1 365 3 313 3 116 1 65 1 117 1 185 1 288 1 163 1 23 7 
333 1 0 1 120 2 356 1 16 4 375 1 323 2 82 1 365 3 313 3 116 1 65 1 117 1 185 1 288 1 163 1 23 7 
333 1 0 1 120 2 356 1 16 4 375 1 323 2 82 1 365 3 313 3 116 1 65 1 117 1 185 1 288 1 55 1 163 1 23 7 
117 1 120 1 16 1 375 2 61 1 23 1 
333 1 251 4 0 1 120 2 232 2 344 1 356 1 269 1 16 5 375 1 323 3 82 1 365 4 369 2 313 4 65 1 117 1 106 2 185 1 288 1 197 1 163 1 196 2 23 9 
275 1 92 2 318 1 111 1 300 1 52 1 284 1 95 1 6 1 174 1 307 1 226 1 371 1 198 1 227 1 36 1 75 1 179 1 150 1 57 1 205 1 295 1 207 1 20 1 296 2 359 1 341 1 
275 1 92 2 111 1 318 2 300 1 52 1 284 1 95 1 6 1 195 1 174 1 307 2 371 1 198 1 227 1 36 1 75 1 179 1 150 1 57 1 205 1 39 1 207 1 240 1 296 3 359 1 341 1 
92 2 318 2 111 1 179 1 150 1 57 1 205 1 39 1 207 1 52 1 284 1 6 1 95 1 195 1 174 1 359 1 296 2 307 1 371 1 36 1 198 1 227 1 
275 1 111 2 300 1 26 1 52 1 284 1 174 1 307 1 371 2 198 1 227 2 201 1 179 2 205 1 153 1 240 1 157 1 296 1 42 1 107 1 272 1 186 1 164 1 
275 1 92 2 111 1 300 1 52 1 284 1 95 1 6 1 195 1 174 1 307 1 226 1 371 1 198 1 227 1 36 1 75 1 179 1 150 1 57 1 205 1 295 1 207 1 296 1 359 1 341 1 
17 1 
46 1 250 1 191 1 343 2 192 1 52 2 5 2 348 1 53 1 54 1 260 1 309 1 198 2 204 1 264 1 205 1 15 2 311 1 60 2 270 1 157 1 105 1 63 2 159 1 160 1 107 1 209 1 162 6 276 1 168 5 26 2 29 5 31 1 32 2 324 1 284 1 367 2 219 1 174 2 328 2 69 1 176 3 228 2 230 2 38 1 337 1 235 1 124 4 183 1 129 2 42 1 186 1 247 1 246 1 342 2 
46 1 191 1 168 3 29 3 31 1 219 1 69 1 328 1 53 1 54 1 260 1 176 1 309 1 332 1 38 1 264 1 235 1 124 2 105 1 162 2 246 1 247 1 
46 1 191 1 343 1 168 3 29 3 31 1 5 1 219 1 69 1 53 1 54 1 260 1 176 1 309 1 332 1 38 1 264 1 235 1 124 3 105 1 160 1 162 1 246 1 247 1 
46 1 191 1 343 1 168 3 29 3 31 1 5 1 219 1 69 1 328 1 53 1 176 1 54 1 260 1 309 1 332 1 38 1 264 1 235 1 15 1 124 3 105 1 160 1 162 2 246 1 247 1 
46 1 24 1 191 1 168 3 29 3 31 1 219 1 69 1 328 2 53 1 259 1 54 1 176 1 260 1 309 1 332 1 38 1 264 1 235 1 15 2 124 2 105 1 162 3 361 1 247 1 246 1 
46 1 250 1 191 1 343 2 348 1 5 2 53 1 260 1 54 1 309 1 264 1 15 2 60 1 270 1 105 1 63 1 159 1 160 1 209 1 162 4 276 1 168 4 29 4 31 1 324 1 32 2 219 1 367 2 69 1 328 2 176 2 228 2 230 2 38 1 235 1 124 4 129 2 246 1 247 1 342 2 
46 1 250 1 24 1 276 1 299 1 191 1 343 2 168 4 29 4 31 1 324 1 5 1 348 1 367 2 219 1 328 2 69 1 53 1 176 2 54 1 260 1 309 1 228 2 230 2 38 1 13 1 264 1 235 1 15 2 60 1 270 1 124 4 105 1 63 1 129 2 160 1 209 1 162 4 246 1 247 1 342 2 
46 1 250 1 24 1 276 1 299 1 191 1 343 2 168 4 29 4 31 1 324 1 5 1 348 1 367 2 219 1 328 2 69 1 53 1 176 2 54 1 260 1 309 1 228 2 230 2 38 1 13 1 264 1 235 1 15 2 60 1 270 1 124 4 105 1 63 1 129 2 160 1 209 1 162 4 246 1 247 1 342 2 
46 1 276 1 299 1 191 1 343 2 168 4 29 4 137 1 3 2 31 1 32 2 324 1 5 1 348 1 219 1 328 2 69 1 224 1 53 1 176 2 54 1 260 1 309 1 228 2 38 1 264 1 235 1 15 2 60 1 270 1 124 4 105 1 314 2 63 1 160 1 209 1 162 4 315 1 246 1 247 1 342 2 
46 1 250 1 276 1 24 1 299 1 191 1 343 3 168 4 29 4 31 1 324 1 5 1 348 1 367 2 219 1 69 1 328 3 53 1 176 2 54 1 260 1 259 1 309 1 228 2 230 2 38 1 13 1 264 1 235 1 15 3 60 1 270 1 124 5 105 1 63 1 129 2 160 1 209 1 162 5 246 1 247 1 342 2 
46 1 250 1 276 1 24 1 299 1 191 1 343 3 168 4 29 4 31 1 324 1 5 1 348 1 367 2 219 1 69 1 328 3 53 1 176 2 54 1 260 1 259 1 309 1 228 2 230 2 38 1 13 1 264 1 235 1 15 3 60 1 270 1 124 5 105 1 63 1 129 2 160 1 209 1 162 5 246 1 247 1 342 2 
46 1 191 1 343 2 3 2 348 1 5 1 53 1 260 1 54 1 309 1 264 1 15 2 60 1 270 1 105 1 63 1 314 2 159 1 160 1 209 1 162 4 276 1 168 4 29 4 31 1 324 1 32 2 219 1 69 1 328 2 224 1 176 2 228 2 38 1 235 1 124 4 246 1 247 1 342 2 
278 1 251 2 0 1 283 1 323 2 365 3 369 1 68 1 288 1 196 1 76 1 333 1 232 1 120 1 356 1 16 3 82 1 18 1 312 1 313 2 106 1 65 1 86 1 185 1 245 2 23 6 
190 1 213 1 278 11 363 1 251 4 167 1 215 3 323 1 365 6 369 2 68 4 288 1 196 2 329 3 330 1 200 1 229 1 76 11 232 2 268 1 58 2 356 2 16 8 18 2 358 1 312 1 313 2 339 1 106 2 245 1 163 1 134 2 23 14 
213 1 251 2 363 1 191 1 26 1 52 1 365 1 369 1 174 1 326 1 68 1 97 1 98 1 370 1 54 1 145 1 196 1 198 1 200 1 335 1 232 1 355 1 16 1 239 1 18 1 312 1 377 1 106 1 245 1 246 1 317 1 23 2 
213 1 278 3 251 4 363 1 191 1 26 1 114 1 323 1 52 1 365 4 369 2 326 1 174 1 68 3 351 1 9 1 98 1 370 1 288 1 54 1 145 1 196 2 198 1 331 1 76 3 335 1 232 2 356 1 58 1 16 3 239 1 358 1 18 2 312 2 313 1 106 2 64 1 340 1 246 1 134 1 23 7 
251 4 363 1 191 1 26 2 301 1 283 1 52 8 306 1 284 2 365 1 369 2 195 1 173 1 174 8 98 1 370 1 54 1 196 2 198 7 11 1 12 1 200 1 232 2 205 2 16 1 59 1 239 1 18 2 312 2 157 2 20 1 106 2 42 1 131 1 107 1 246 1 186 3 23 2 135 2 
213 1 278 1 251 2 191 1 323 1 365 2 369 1 68 1 98 1 288 1 54 1 196 1 76 1 262 1 232 1 58 1 356 1 16 1 376 1 239 1 18 1 156 1 358 1 312 1 313 1 106 1 246 1 134 1 23 3 
278 1 76 1 251 2 232 1 58 1 356 1 123 1 16 2 283 1 18 1 312 1 369 1 313 1 68 1 106 1 163 1 196 1 23 2 
146 1 278 1 76 1 251 2 232 1 323 1 283 1 18 1 358 1 365 2 312 1 369 1 313 1 68 1 106 1 288 1 196 1 23 2 
278 2 251 2 283 1 323 1 365 2 369 1 68 2 288 1 196 1 76 2 232 1 356 1 58 1 16 2 18 1 358 1 312 1 313 2 106 1 163 1 134 1 23 4 
278 1 76 1 251 2 232 1 301 1 58 1 356 1 123 1 16 2 18 1 312 1 369 1 313 1 68 1 106 1 163 1 196 1 23 2 
146 1 278 1 76 1 251 2 232 1 301 1 323 1 18 1 358 1 365 2 312 1 369 1 313 1 68 1 106 1 288 1 196 1 23 2 
278 2 251 2 301 1 323 1 365 2 369 1 68 2 288 1 196 1 76 2 232 1 356 1 58 1 16 2 18 1 358 1 312 1 313 2 106 1 163 1 134 1 23 4 
278 2 251 2 323 1 365 2 369 1 68 2 288 1 196 1 76 2 232 1 356 1 58 1 16 2 18 1 358 1 312 1 313 2 106 1 163 1 134 1 23 4 
200 1 363 1 251 2 232 1 335 1 26 1 321 1 16 1 52 1 365 1 18 1 312 1 369 1 174 1 106 1 69 1 351 1 245 1 145 1 196 1 23 2 198 1 
251 2 363 1 191 1 26 1 52 1 284 1 365 1 369 1 33 1 174 1 225 1 196 1 198 1 200 1 231 1 232 1 205 1 294 1 16 1 18 1 157 1 312 1 106 1 245 1 186 1 246 1 362 1 23 2 
213 1 278 2 251 2 323 1 365 2 369 1 68 2 288 1 196 1 76 2 232 1 356 1 58 1 16 2 18 1 358 1 312 1 313 2 106 1 163 1 134 1 23 4 
278 1 251 2 323 1 52 1 365 2 369 1 174 1 68 1 351 1 288 1 196 1 145 1 198 1 76 1 335 1 232 1 58 1 356 1 16 1 18 1 358 1 312 1 20 1 313 1 106 1 340 1 134 1 23 3 
213 1 278 1 251 2 191 1 112 1 365 1 369 1 68 1 98 1 288 1 54 1 196 1 76 1 262 1 232 1 58 1 356 1 16 2 376 1 239 1 358 1 18 1 312 1 313 1 106 1 163 1 246 1 134 1 23 3 
212 1 251 4 215 2 344 1 51 1 323 3 365 10 369 2 285 1 222 2 258 1 141 1 288 3 196 2 261 2 329 1 330 1 78 1 232 2 268 1 58 3 356 3 16 9 358 3 62 1 313 6 106 2 163 3 134 3 23 19 
212 1 251 4 215 2 344 1 323 1 365 8 369 2 285 1 141 2 257 1 288 1 197 1 196 2 261 2 329 2 330 2 148 1 78 2 232 2 237 1 58 1 356 1 16 6 358 1 313 1 106 2 134 1 23 14 
212 1 251 6 215 4 344 1 51 1 323 2 4 1 365 15 369 3 285 1 222 1 258 1 257 1 141 2 288 3 197 1 196 3 261 3 329 3 330 3 148 1 78 1 232 3 268 1 237 1 58 3 356 3 16 12 358 3 313 4 106 3 163 2 134 3 23 27 
212 1 251 6 215 4 344 1 51 1 323 3 4 1 365 15 369 3 285 1 222 1 258 1 257 1 141 2 288 3 197 1 196 3 261 3 329 3 330 3 148 1 78 1 232 3 268 1 237 1 58 3 356 3 16 12 358 3 313 5 106 3 163 2 134 3 23 27 
212 1 251 4 0 1 167 2 215 4 344 1 323 6 365 19 369 2 285 1 257 1 141 1 288 6 197 1 196 2 261 2 329 4 330 2 148 1 333 1 78 1 120 1 232 2 268 2 237 1 58 6 356 7 238 1 16 23 82 1 358 5 84 1 313 11 65 1 106 2 185 1 163 5 134 6 23 42 
83 1 274 1 349 1 220 1 334 1 202 1 96 1 336 1 316 1 93 1 
139 1 19 1 
199 1 274 1 271 1 366 1 349 1 202 1 96 1 336 1 93 1 
104 1 85 1 
289 1 233 1 99 1 
274 1 191 1 214 1 168 1 29 1 30 1 282 1 93 1 349 1 69 1 96 1 98 1 54 1 177 1 37 1 202 1 262 1 336 1 373 1 239 1 126 1 127 1 243 2 133 1 88 1 246 1 273 1 136 1 
274 1 191 1 214 1 168 1 29 1 30 1 282 1 93 1 349 1 69 1 96 1 98 1 54 1 177 1 37 1 202 1 262 1 336 1 373 1 239 1 126 1 127 1 243 2 133 1 88 1 246 1 273 1 136 1 
274 1 191 1 214 1 168 1 29 1 30 1 282 1 93 1 349 1 69 1 96 1 98 1 54 1 177 1 37 1 202 1 262 1 336 1 373 1 239 1 126 1 127 1 243 2 133 1 88 1 246 1 273 1 136 1 
104 1 85 1 233 1 
104 1 85 1 233 1 
289 1 99 1 
289 1 233 1 99 1 
90 1 143 1 
274 1 90 1 191 2 168 1 321 1 29 1 93 1 349 1 368 1 139 1 69 1 96 1 98 2 143 1 54 2 308 1 37 1 149 1 202 1 336 1 239 2 19 1 243 1 245 1 133 1 210 1 246 2 211 1 189 1 
213 1 251 2 363 1 48 1 191 2 345 1 52 2 284 1 365 1 369 1 174 2 8 1 54 2 196 1 118 1 198 2 11 1 200 1 232 1 205 1 16 1 18 1 157 1 312 1 208 1 106 1 131 1 186 1 246 2 23 2 135 2 
92 2 102 1 75 1 179 1 150 1 57 1 205 1 207 1 52 2 138 1 284 1 6 1 195 1 20 1 221 1 174 2 359 1 36 1 198 2 
92 2 75 1 179 1 150 1 57 1 205 1 207 1 52 1 138 1 284 1 6 1 195 1 174 1 298 1 359 1 36 1 198 1 
249 1 102 1 179 1 26 1 205 1 153 1 52 1 284 1 157 1 174 1 42 1 107 1 186 1 198 1 
92 2 102 1 75 1 179 1 150 1 57 1 205 1 207 1 52 1 138 1 284 1 6 1 195 1 221 1 174 1 359 1 36 1 198 1 
74 1 
5 1 241 1 63 1 160 1 86 1 60 1 188 1 
250 1 276 1 168 1 29 1 324 1 32 1 5 2 367 1 176 1 230 1 60 1 270 1 63 1 129 1 160 1 209 1 162 1 
252 1 303 1 192 2 52 3 5 8 142 1 260 2 198 3 263 2 151 1 205 3 267 3 58 2 356 2 60 9 357 6 270 4 358 2 157 3 20 1 63 8 160 2 209 4 360 2 162 5 108 6 109 2 362 3 110 1 276 4 320 2 26 1 168 5 280 2 29 5 324 4 32 12 284 4 172 2 115 2 174 3 223 2 288 2 176 3 331 2 79 2 292 1 80 2 183 1 241 1 129 6 186 10 134 2 188 1 
276 2 215 1 168 1 29 1 32 6 324 2 5 4 257 1 288 1 176 1 329 1 330 1 148 1 263 1 237 1 58 1 356 1 357 4 60 5 270 2 358 1 63 2 129 3 160 1 209 2 162 1 108 4 89 1 134 1 
276 1 191 1 0 1 168 1 29 1 30 1 324 1 69 1 98 1 288 1 54 1 262 1 263 2 13 1 80 1 373 1 356 2 60 2 239 1 82 1 270 1 65 1 63 2 43 1 209 1 246 1 273 1 136 1 
276 1 60 1 324 1 270 1 5 1 241 1 63 1 160 1 209 1 188 1 
331 1 263 2 80 1 58 2 356 2 357 5 60 5 32 10 5 5 358 2 63 5 129 5 288 2 108 5 134 2 
5 1 160 1 168 1 29 1 162 1 176 1 
165 1 276 1 26 2 168 3 29 3 52 4 192 2 324 2 305 1 171 1 284 3 218 1 174 4 176 2 352 1 198 4 292 2 337 1 205 2 374 1 311 1 60 2 270 2 157 2 183 2 63 2 158 1 42 1 209 2 107 1 162 4 186 2 362 1 110 1 
251 2 363 1 191 2 26 1 30 1 52 1 365 1 369 1 174 1 351 1 98 2 54 2 145 1 196 1 10 1 198 1 262 2 335 1 232 1 239 2 18 1 312 1 106 1 245 1 246 2 23 1 
276 1 120 1 357 2 192 1 60 1 32 4 324 1 270 1 5 4 183 1 63 2 129 2 160 2 209 1 108 2 
349 1 130 1 96 1 
90 1 349 1 96 1 
349 1 130 1 96 1 
349 1 130 1 96 1 
349 1 96 1 170 1 
349 1 96 1 170 1 
349 1 96 1 170 1 
349 1 96 1 
202 1 93 1 
251 4 333 1 0 1 120 1 232 2 356 1 16 4 323 2 82 1 365 4 369 2 313 3 65 1 106 2 185 1 288 1 163 1 196 2 197 1 23 8 
365 3 333 1 313 2 65 1 0 1 120 1 86 1 185 1 288 1 356 1 16 3 323 2 23 6 82 1 
251 2 232 1 58 1 356 1 16 2 323 1 365 2 358 1 369 1 313 2 106 1 288 1 44 1 196 1 163 1 134 1 23 4 
215 2 268 1 58 1 356 1 16 3 323 1 358 1 365 4 313 2 288 1 163 1 329 1 134 1 330 1 23 7 
251 4 0 2 215 2 167 1 323 5 365 12 369 2 288 3 197 2 196 2 329 2 229 1 333 1 120 1 232 2 268 1 356 3 58 2 16 11 82 2 358 2 313 9 65 1 106 2 185 1 22 1 163 4 134 2 23 23 
365 1 215 1 23 1 
16 1 329 1 23 1 
331 1 251 2 232 1 58 1 356 1 16 3 323 2 365 3 358 1 369 1 313 3 106 1 288 1 44 1 196 1 163 1 134 1 23 6 
251 2 215 1 344 1 323 1 365 6 369 1 257 1 288 2 196 1 329 1 330 1 148 1 232 1 237 1 58 2 356 2 238 1 16 6 358 2 84 1 313 2 106 1 163 1 134 2 23 12 
0 1 356 1 16 3 323 1 82 1 365 3 313 2 65 1 288 1 163 1 23 6 
333 1 251 2 0 1 232 1 16 1 323 1 82 1 365 2 369 1 313 2 106 1 185 1 22 1 163 1 197 1 196 1 23 3 
251 2 0 2 232 1 344 1 356 2 16 5 323 3 82 2 365 5 369 1 313 5 106 1 65 1 43 1 288 2 196 1 163 2 23 10 
251 2 232 1 344 1 58 1 356 1 16 2 369 1 313 1 106 1 196 1 163 1 23 2 
251 2 232 1 344 1 58 1 356 1 16 2 323 1 365 2 358 1 369 1 313 2 106 1 288 1 196 1 163 1 134 1 23 4 
251 6 0 1 232 3 344 1 16 1 323 1 82 1 365 2 369 3 313 2 106 3 258 1 22 1 197 1 196 3 163 1 23 3 
119 1 251 6 232 3 215 1 344 1 356 1 58 1 16 4 325 1 365 1 369 3 106 3 258 1 44 1 196 3 134 1 329 2 330 1 23 5 
365 1 369 1 251 2 106 1 215 1 232 1 344 1 237 1 196 1 16 1 329 1 330 1 23 2 
251 4 232 2 215 2 344 1 268 1 356 1 58 1 237 1 16 3 365 2 369 2 313 1 106 2 44 1 163 1 196 2 134 1 329 1 330 1 23 5 
148 1 251 4 232 2 215 1 344 1 356 1 58 1 237 1 16 3 323 1 358 1 365 5 369 2 313 1 106 2 257 1 288 1 197 1 196 2 134 1 329 1 330 1 23 8 
251 4 215 1 344 1 323 1 365 4 369 2 257 1 288 1 197 1 196 2 329 1 330 1 148 1 232 2 237 1 58 2 356 2 238 1 16 7 358 1 84 1 313 2 106 2 163 1 134 2 23 11 
365 1 369 1 251 2 106 1 215 1 232 1 344 1 237 1 196 1 16 1 329 1 330 1 23 2 
251 2 215 1 344 1 323 1 365 6 369 1 257 1 288 2 196 1 329 1 330 1 148 1 232 1 237 1 58 2 356 2 238 1 16 6 358 2 84 1 313 2 106 1 163 1 134 2 23 12 
148 1 251 6 232 3 215 1 344 1 356 1 58 1 237 1 16 3 323 1 358 1 365 5 369 3 313 1 106 3 257 1 288 1 44 1 197 1 196 3 134 1 329 1 330 1 23 8 
148 1 251 6 232 3 215 1 344 1 356 1 58 1 237 1 16 3 323 2 358 1 365 5 369 3 313 2 106 3 257 1 258 1 288 1 197 1 196 3 134 1 329 1 330 1 23 8 
333 2 0 3 356 1 16 3 323 3 82 3 365 4 313 6 65 1 185 1 288 1 163 3 23 7 
148 1 251 6 232 3 215 1 344 1 356 1 58 1 237 1 16 3 323 1 358 1 365 5 369 3 313 1 106 3 257 1 258 1 288 1 197 1 196 3 134 1 329 1 330 1 23 8 
140 1 191 1 216 1 54 1 245 1 246 1 309 1 
45 1 91 1 140 1 191 1 244 1 253 1 216 1 54 1 245 1 246 1 309 1 154 1 
284 1 157 1 174 1 42 1 86 1 26 1 205 1 107 1 186 1 52 1 198 1 
191 1 335 1 26 1 321 1 239 1 52 1 174 1 69 1 370 1 98 1 54 1 245 1 246 1 198 1 
191 1 335 1 292 1 321 1 239 1 52 1 174 1 69 1 370 1 98 1 54 1 245 1 246 1 198 1 
191 2 52 2 284 1 219 1 33 1 174 2 69 1 98 1 370 1 54 2 198 2 231 1 292 1 264 1 205 1 239 2 157 2 242 1 360 1 245 1 109 1 246 2 186 3 362 2 
113 1 168 2 26 1 280 1 29 2 52 3 284 1 5 1 174 3 260 1 56 1 198 3 292 1 205 1 267 1 157 1 242 1 160 1 360 1 162 1 109 1 186 4 362 1 
320 1 26 1 168 2 292 1 205 1 29 2 267 1 280 1 52 3 5 1 284 1 157 1 242 1 174 3 160 1 360 1 260 1 162 1 109 1 186 4 362 1 198 3 
284 1 306 1 174 1 205 1 52 1 198 1 
11 1 12 1 290 1 26 2 205 2 374 1 59 1 303 1 52 7 306 1 284 3 157 2 218 1 195 1 20 1 173 1 174 7 186 3 362 1 135 1 198 6 
213 1 278 1 251 4 0 1 191 1 323 1 52 1 365 2 369 2 174 1 9 1 351 1 98 1 370 1 288 1 54 1 196 2 145 1 118 1 198 1 76 1 333 1 120 1 232 2 335 1 356 1 16 3 239 1 82 1 18 2 312 2 20 1 313 1 65 1 106 2 185 1 340 1 245 2 246 1 23 5 
276 2 320 1 26 1 168 3 29 3 280 1 52 1 324 2 5 1 172 1 174 1 115 1 260 1 176 1 308 1 198 1 79 1 267 1 60 1 270 2 241 1 63 1 160 1 209 2 162 2 186 2 188 1 110 1 
151 1 205 1 280 1 303 1 52 2 306 1 284 2 157 1 20 1 174 2 186 2 362 1 198 2 
26 1 205 1 52 4 284 1 157 1 20 1 242 1 174 4 42 1 87 1 107 1 186 1 198 4 
165 1 292 1 205 1 236 1 374 1 52 2 171 1 284 2 157 1 218 1 174 2 186 1 362 1 198 2 
92 1 284 1 150 1 174 1 359 1 26 1 205 1 52 1 36 1 198 1 
11 1 345 1 205 1 52 2 284 1 157 1 20 1 195 1 174 2 186 1 198 2 
11 1 292 1 26 1 205 2 59 1 52 5 284 2 157 2 20 1 174 5 173 1 42 1 87 1 107 1 186 3 198 4 
11 1 292 1 26 1 205 2 52 5 284 2 157 2 20 1 174 5 173 1 42 1 87 1 107 1 72 1 186 3 198 4 
231 1 191 2 26 1 205 1 239 1 52 1 284 1 157 1 174 1 33 1 370 1 98 1 54 1 245 1 186 1 246 2 362 1 198 1 
290 1 292 1 205 1 374 1 303 1 52 1 284 2 157 1 218 1 174 1 186 1 362 1 198 1 
256 1 27 1 132 1 245 1 71 1 
46 1 180 1 354 1 264 1 168 2 27 2 29 2 206 1 193 1 5 1 219 1 256 2 69 1 160 1 132 2 260 1 245 1 71 1 308 1 
48 1 191 1 27 1 256 1 208 1 8 1 54 1 71 1 246 1 
180 1 354 1 71 1 
279 1 128 1 86 1 248 1 
275 1 279 1 128 1 296 1 300 1 307 1 248 1 
307 1 371 1 227 1 
275 1 279 1 300 1 265 1 295 1 286 1 296 3 128 1 307 3 100 1 187 2 248 1 
275 1 318 1 34 1 279 1 128 1 296 2 300 1 307 2 248 1 
92 1 275 1 194 1 150 1 279 1 297 1 296 1 300 1 57 1 307 1 295 1 
275 1 279 1 296 1 300 1 307 1 295 1 248 1 
275 1 128 1 296 1 300 1 307 1 295 1 248 2 
275 2 25 1 279 1 300 2 121 1 169 1 295 1 296 2 307 2 248 1 
275 1 318 2 279 2 300 1 346 1 295 1 81 1 182 1 128 1 296 3 297 1 307 3 248 1 
92 2 275 1 318 1 150 1 279 1 300 1 57 1 281 1 295 1 207 1 128 1 296 2 307 2 248 1 36 1 
275 2 178 1 318 2 279 2 300 2 295 1 182 1 34 1 128 1 296 4 297 1 307 4 248 1 
275 1 279 1 128 1 296 1 300 1 307 1 295 1 248 1 
275 1 318 2 279 3 300 1 182 1 286 1 128 2 296 4 297 1 70 1 307 4 187 1 100 1 248 2 
275 1 318 1 279 1 300 1 28 1 49 1 295 1 296 2 128 1 307 2 144 1 248 1 
275 1 73 1 279 1 300 1 295 1 286 2 296 3 128 1 307 3 100 1 187 2 248 1 
47 1 353 2 372 1 279 2 
275 1 166 1 296 1 300 1 307 1 295 1 
275 1 318 1 279 1 128 1 296 2 300 1 307 2 295 1 248 1 81 1 
94 1 
275 1 279 1 128 1 296 1 300 1 307 1 295 1 248 1 
275 1 318 1 279 1 128 1 296 3 300 1 307 3 187 1 295 1 248 1 81 1 
182 1 279 1 297 1 70 1 
279 1 248 1 

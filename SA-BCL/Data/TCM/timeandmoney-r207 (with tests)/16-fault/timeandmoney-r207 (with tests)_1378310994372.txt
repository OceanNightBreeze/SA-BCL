#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 18 (34,36,120) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) (43,121) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (43,121) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) (43,121) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (7,79,201,204) (7,79,201,204) (7,79,201,204) 164 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 293 248 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 293 248 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 2
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1101 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10099 | 0 -> 1
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 164 1 7 1 
295 1 118 1 125 1 
273 1 
214 2 94 2 64 2 10 2 60 2 153 2 57 1 309 1 
172 1 41 1 42 1 78 1 46 2 256 2 49 1 214 3 10 3 258 1 257 1 260 1 305 1 224 1 16 2 17 1 225 1 183 1 227 1 57 1 147 1 146 1 309 1 94 2 60 2 271 1 153 2 158 1 196 1 314 2 239 1 64 2 161 1 279 1 318 2 205 1 129 1 
214 1 94 1 230 1 64 1 10 1 60 1 231 1 140 1 153 1 309 1 
230 1 148 1 156 1 238 1 214 1 64 1 295 1 10 1 296 1 216 1 118 1 67 1 220 1 122 1 
94 1 230 1 148 1 60 1 153 1 156 1 214 1 64 1 295 1 10 1 296 1 216 2 118 1 67 1 122 2 
216 1 122 1 136 1 247 1 33 1 
310 1 295 1 216 2 232 1 118 1 122 2 247 1 33 1 
216 1 122 1 247 1 
94 1 230 1 231 1 60 1 153 1 33 1 214 1 64 1 216 1 86 1 10 1 140 1 122 1 309 1 
118 1 
295 1 216 2 232 1 118 1 122 2 247 1 283 1 33 1 
95 1 285 1 20 1 232 1 77 1 189 1 107 2 33 2 48 2 295 1 216 5 118 1 53 1 37 1 261 2 122 5 181 1 247 2 127 1 
125 1 57 1 
94 1 60 1 153 1 214 2 64 2 9 1 10 2 300 1 57 2 
185 1 27 1 191 1 
42 1 78 1 271 1 256 1 158 1 214 1 314 1 161 1 10 1 318 1 258 1 257 1 205 1 225 1 57 1 19 1 
60 1 42 1 78 1 271 1 27 1 153 1 80 1 158 1 256 1 214 2 314 1 161 1 64 1 10 2 318 1 258 1 205 1 257 1 307 1 225 1 
94 1 214 3 64 3 10 3 60 3 153 3 307 1 57 1 
214 1 230 1 64 1 10 1 60 1 140 1 153 1 
214 1 94 1 230 1 64 1 9 1 10 1 60 1 300 1 153 1 
172 1 78 1 42 1 46 2 80 1 256 1 49 1 214 4 10 4 296 1 216 1 258 1 257 1 260 1 300 1 305 1 224 1 16 1 307 1 225 1 227 1 57 1 147 1 146 1 309 1 94 2 97 1 98 1 230 1 148 1 60 3 271 1 153 3 156 1 158 1 196 1 314 1 239 1 161 1 64 3 318 1 205 1 67 1 122 1 
214 2 64 2 10 2 60 1 106 1 153 1 307 1 57 1 238 1 
94 1 230 1 97 1 148 1 60 3 153 3 156 1 80 1 214 3 64 3 216 1 296 1 10 3 118 1 67 1 300 1 122 1 307 2 170 1 
214 2 94 1 64 2 10 2 60 2 300 1 27 1 153 2 191 1 307 1 
42 1 78 1 271 1 256 1 158 1 214 1 314 1 161 1 10 1 318 1 257 1 205 1 258 1 225 1 57 1 
21 1 42 1 271 1 256 1 111 1 158 1 214 1 314 1 161 1 10 1 318 1 257 1 205 1 258 1 57 1 
172 1 46 2 4 1 82 1 49 1 299 1 89 1 260 2 305 1 224 1 178 1 16 4 146 1 185 2 96 1 27 2 62 1 191 2 32 1 239 1 279 2 202 1 68 1 327 1 
8 1 
94 1 60 4 106 1 153 4 80 1 110 1 238 1 214 5 64 5 10 5 300 1 307 2 70 1 57 1 
8 1 214 1 230 1 64 1 10 1 60 1 140 1 153 1 
34 1 115 1 
34 1 115 1 
120 1 18 1 
120 1 18 1 
120 1 18 1 
34 1 115 1 206 1 
34 1 115 1 36 1 
34 1 115 1 120 1 18 1 
34 1 115 1 206 1 
34 1 115 1 206 1 
34 1 115 1 306 1 
34 1 115 1 306 1 
34 1 115 1 306 1 
266 1 250 1 252 3 290 1 235 1 109 2 63 2 34 2 113 2 115 2 216 2 66 2 297 2 118 1 167 1 122 2 245 1 180 1 131 1 
60 2 23 1 252 1 105 1 153 2 83 1 109 1 63 1 214 2 34 1 64 2 113 1 317 1 10 2 216 1 115 1 36 1 66 1 219 1 303 1 144 1 245 1 122 1 57 1 
177 1 268 1 15 1 
268 1 259 1 15 1 
197 1 177 2 268 3 321 1 259 1 246 1 
177 1 268 2 321 1 259 1 246 1 263 1 
177 1 268 2 321 1 259 1 246 2 
285 1 77 1 208 2 134 1 48 1 214 1 295 1 10 1 216 5 86 1 140 1 303 1 261 1 309 1 94 1 95 2 230 1 99 1 60 1 231 1 232 1 153 1 155 1 107 1 157 1 273 1 313 1 32 1 33 4 160 1 199 1 64 1 202 1 118 1 122 5 247 1 328 1 
285 1 249 1 77 1 136 2 81 2 175 1 48 1 214 1 295 1 216 5 86 1 10 1 140 1 303 1 261 1 309 1 94 1 95 2 230 1 231 1 60 1 232 1 153 1 155 1 107 1 157 1 273 1 313 1 32 1 33 4 160 1 199 1 64 1 202 1 118 1 122 5 247 3 328 1 
73 1 77 3 208 1 134 1 48 1 214 1 295 1 10 1 86 1 216 3 140 1 299 1 303 1 261 1 309 1 94 1 230 1 95 2 99 1 60 1 231 1 189 1 153 1 107 1 155 1 157 2 273 3 33 2 32 1 199 1 160 2 64 1 202 1 118 2 122 3 327 1 328 1 
73 2 77 5 6 1 86 1 10 1 87 1 261 1 94 1 95 4 99 1 189 1 107 1 273 6 32 2 33 3 199 2 202 2 118 3 122 4 208 2 134 1 48 1 214 1 295 1 216 4 140 1 299 2 303 2 309 1 230 1 231 1 60 1 153 1 155 1 157 4 160 4 64 1 169 1 327 2 328 1 
138 1 258 1 125 1 
258 1 142 1 
179 1 
258 1 158 1 
138 2 319 1 258 3 205 1 292 1 158 1 
258 1 205 1 158 1 
50 1 258 1 
207 1 25 1 62 2 4 3 193 1 47 1 32 1 276 1 279 4 218 1 221 1 260 3 145 1 16 7 308 1 327 1 281 2 
207 1 25 1 62 2 4 3 193 1 47 1 32 1 276 1 279 4 218 1 221 1 260 3 145 1 16 7 308 1 327 1 281 2 
207 1 25 1 62 2 4 3 193 1 47 1 32 1 276 1 279 4 218 1 221 1 260 3 145 1 16 7 264 1 308 1 327 1 281 2 
172 2 287 3 207 1 289 1 46 4 4 7 47 2 218 1 221 1 299 2 260 13 304 1 145 2 224 2 16 27 226 1 308 1 146 2 25 3 62 4 26 2 108 3 193 2 32 3 199 2 276 2 239 2 279 14 202 2 241 1 327 3 72 1 281 3 329 1 
74 1 172 2 207 1 22 1 25 1 26 1 62 3 46 4 4 4 193 1 47 1 32 1 276 1 239 2 279 5 218 1 221 1 260 4 145 1 224 2 16 9 327 1 281 2 146 2 
101 1 201 1 204 1 164 1 7 1 
101 1 201 1 204 1 121 1 7 1 
101 1 204 1 79 1 43 1 
101 1 201 1 204 1 121 1 7 1 
101 1 201 1 204 1 164 1 7 1 
315 1 
73 2 77 2 174 1 3 1 5 1 256 2 176 4 10 1 11 1 258 1 257 1 88 2 261 1 262 2 91 1 95 2 188 2 271 1 107 1 30 1 273 2 118 2 119 1 280 1 122 5 124 1 286 2 285 1 42 2 209 1 48 1 214 1 295 1 215 1 216 5 296 1 51 2 217 1 220 1 302 1 230 1 58 2 148 1 232 3 233 1 234 2 156 1 238 1 158 1 314 2 64 1 318 2 67 1 247 6 328 1 
174 1 176 2 214 1 10 1 216 3 296 1 220 1 302 1 91 1 230 1 148 1 232 1 156 1 234 1 238 1 64 1 67 1 280 1 122 3 124 1 247 2 283 1 
174 1 176 3 214 1 295 1 10 1 216 3 296 1 220 1 302 1 262 1 91 1 230 1 148 1 232 1 156 1 238 1 64 1 67 1 118 1 280 1 122 3 247 1 124 1 283 1 
174 1 176 3 214 1 295 1 10 1 216 3 296 1 51 1 220 1 302 1 262 1 91 1 230 1 148 1 232 1 156 1 234 1 238 1 64 1 67 1 118 1 280 1 122 3 124 1 247 2 283 1 
174 1 254 1 176 2 214 2 295 1 86 1 216 3 10 2 296 1 140 1 51 1 220 1 302 1 91 1 309 1 94 1 230 2 148 1 60 1 231 1 232 1 153 1 156 1 234 1 238 1 64 2 118 1 67 1 280 1 122 3 247 2 124 1 283 1 
73 2 77 1 174 1 176 4 10 1 11 1 88 2 261 1 262 2 91 1 95 1 188 2 107 1 273 2 118 1 280 1 122 4 124 1 285 1 286 2 209 1 48 1 214 1 295 1 296 1 216 4 51 2 220 1 302 1 230 1 148 1 58 2 232 2 233 1 156 1 234 2 238 1 64 1 67 1 247 4 
73 2 286 2 285 1 77 1 209 1 174 1 176 4 48 1 214 1 295 1 10 1 216 4 296 1 51 2 88 2 220 1 302 1 301 1 261 1 262 2 182 1 91 1 95 1 230 1 58 2 148 1 188 2 232 2 233 1 234 2 156 1 107 1 238 1 198 1 64 1 118 1 67 1 280 1 122 4 247 4 124 1 
73 2 286 2 285 1 77 1 209 1 174 1 176 4 48 1 214 1 295 1 10 1 216 4 296 1 51 2 88 2 220 1 302 1 301 1 261 1 262 2 182 1 91 1 95 1 230 1 58 2 148 1 188 2 232 2 233 1 234 2 156 1 107 1 238 1 198 1 64 1 118 1 67 1 280 1 122 4 247 4 124 1 
286 2 285 1 77 1 174 1 176 4 48 1 214 1 295 1 10 1 216 4 296 1 51 2 220 1 302 1 261 1 262 2 91 1 267 2 95 1 230 1 148 1 188 2 232 2 61 1 233 1 311 1 234 2 156 1 107 1 273 2 238 1 198 1 64 1 118 1 67 1 166 1 280 1 122 4 247 4 124 1 71 2 
73 2 77 1 174 1 176 5 86 1 10 2 88 2 261 1 262 3 182 1 91 1 94 1 95 1 188 2 107 1 198 1 118 1 280 1 122 4 124 1 126 1 285 1 286 2 209 1 48 1 214 2 295 1 296 1 216 4 140 1 51 3 220 1 301 1 302 1 309 1 230 2 148 1 58 2 60 1 231 1 232 2 233 1 153 1 234 3 156 1 238 1 64 2 67 1 247 5 
73 2 77 1 174 1 176 5 86 1 10 2 88 2 261 1 262 3 182 1 91 1 94 1 95 1 188 2 107 1 198 1 118 1 280 1 122 4 124 1 126 1 285 1 286 2 209 1 48 1 214 2 295 1 296 1 216 4 140 1 51 3 220 1 301 1 302 1 309 1 230 2 148 1 58 2 60 1 231 1 232 2 233 1 153 1 234 3 156 1 238 1 64 2 67 1 247 5 
286 1 285 1 77 1 174 1 48 1 176 2 214 1 216 2 10 1 296 1 11 1 220 1 302 1 261 1 91 1 267 1 95 1 230 1 148 1 188 1 233 1 107 1 156 1 273 1 238 1 64 1 67 1 166 1 280 1 122 2 124 1 
172 1 207 1 46 2 4 2 49 1 218 1 221 1 260 3 305 1 224 1 178 1 16 6 57 2 146 1 185 1 27 1 62 2 191 1 193 1 32 1 276 1 239 1 279 3 125 1 327 1 281 1 
0 1 172 2 287 3 76 1 46 4 4 2 212 1 49 1 141 1 299 1 260 6 304 1 305 2 224 2 16 14 183 1 57 1 93 1 147 1 146 2 185 11 25 1 62 1 27 11 191 4 108 3 32 2 199 2 239 2 279 8 202 2 38 1 327 1 
172 1 78 1 42 1 210 1 46 2 212 1 80 1 256 1 49 1 214 2 10 2 258 1 257 1 222 1 260 1 305 1 224 1 307 1 16 2 225 1 183 1 57 1 19 1 146 1 147 1 59 1 60 1 271 1 153 1 191 1 158 1 314 1 161 1 64 1 239 1 279 1 318 1 205 1 
284 1 172 1 42 1 46 2 212 1 80 1 256 1 49 1 214 1 10 1 260 2 305 1 224 1 16 2 307 1 146 1 147 1 60 1 153 1 314 1 64 1 239 1 316 1 318 1 123 1 128 1 
172 2 288 1 42 2 133 1 46 4 293 1 255 1 5 1 256 8 214 1 49 2 10 1 257 2 258 3 260 1 305 2 12 1 178 1 224 2 307 1 16 2 183 1 146 2 147 1 60 1 151 1 103 1 271 2 153 1 30 1 158 2 159 1 314 7 64 1 239 2 279 1 318 8 325 1 129 2 
172 1 46 2 4 1 212 1 49 1 214 1 10 1 299 1 300 1 260 2 305 1 224 1 16 3 146 1 94 1 185 1 60 1 62 1 27 1 153 1 191 1 236 1 32 1 199 1 239 1 64 1 202 1 279 1 327 1 
185 1 96 1 172 1 25 1 27 1 46 2 191 1 4 1 32 1 49 1 239 1 202 1 279 2 305 1 178 1 224 1 16 2 146 1 
185 1 172 1 62 1 27 1 46 2 191 1 4 1 49 1 239 1 299 1 260 2 305 1 68 1 178 1 224 1 16 2 327 1 146 1 
185 2 172 1 25 1 62 1 27 2 46 2 191 2 4 2 32 1 49 1 199 1 239 1 202 1 279 2 299 1 260 2 305 1 178 1 224 1 16 4 327 1 146 1 
185 1 96 1 172 1 25 1 27 1 46 2 191 1 4 1 255 1 32 1 49 1 239 1 202 1 279 2 305 1 224 1 16 2 146 1 
185 1 172 1 62 1 27 1 46 2 191 1 4 1 255 1 49 1 239 1 299 1 260 2 305 1 68 1 224 1 16 2 327 1 146 1 
185 2 172 1 25 1 62 1 27 2 46 2 191 2 4 2 255 1 32 1 49 1 199 1 239 1 202 1 279 2 299 1 260 2 305 1 224 1 16 4 327 1 146 1 
185 2 172 1 25 1 62 1 27 2 46 2 191 2 4 2 32 1 49 1 199 1 239 1 202 1 279 2 299 1 260 2 305 1 224 1 16 4 327 1 146 1 
172 1 78 1 42 1 46 2 256 1 214 1 49 1 10 1 257 1 258 1 260 1 305 1 224 1 16 2 225 1 183 1 57 1 146 1 147 1 271 1 158 1 196 1 314 1 161 1 239 1 279 1 318 1 205 1 
172 1 42 1 46 2 256 1 214 1 49 1 10 1 257 1 258 1 260 1 305 1 224 1 16 2 183 1 57 1 146 1 147 1 21 1 271 1 158 1 111 1 314 1 161 1 239 1 116 1 279 1 318 1 205 1 
185 2 172 1 25 1 62 1 27 2 46 2 191 2 4 2 212 1 32 1 49 1 199 1 239 1 202 1 279 2 299 1 260 2 305 1 224 1 16 4 327 1 146 1 
172 1 78 1 46 2 4 2 256 1 214 1 49 1 10 1 257 1 258 1 299 1 260 2 305 1 224 1 16 4 225 1 146 1 185 2 103 1 25 1 271 1 62 1 27 2 191 2 32 1 196 1 158 1 314 1 199 1 161 1 239 1 279 2 202 1 318 1 205 1 327 1 39 1 
172 1 46 2 4 1 212 1 49 1 214 1 10 1 299 1 260 1 300 1 305 1 224 1 16 3 146 1 94 1 185 1 60 1 25 1 153 1 27 1 154 1 191 1 32 1 199 1 239 1 64 1 202 1 279 2 327 1 
74 1 172 4 4 9 260 17 13 1 90 1 16 37 14 1 25 5 26 2 190 1 108 2 193 1 32 5 199 4 200 1 112 1 276 1 202 4 279 20 203 1 130 1 281 1 132 1 287 2 207 1 46 8 218 1 299 3 221 1 304 2 55 1 224 4 146 4 150 1 62 4 237 1 239 4 165 4 322 1 324 2 327 4 
132 1 74 1 172 3 287 2 46 6 4 4 299 2 260 12 304 2 13 1 90 2 224 3 16 26 146 3 150 1 25 2 190 1 26 2 62 2 108 2 237 1 32 3 200 1 199 3 239 3 112 1 279 14 202 3 203 1 165 4 322 2 324 1 130 1 327 2 
132 1 74 1 172 4 173 1 287 3 207 2 46 8 4 9 218 2 221 2 299 3 260 21 304 3 13 1 90 2 224 4 14 1 16 44 146 4 150 1 25 5 190 1 26 2 62 4 108 3 193 2 237 1 32 5 200 1 199 3 276 2 239 4 112 1 279 23 202 3 203 1 322 1 165 4 324 1 130 1 327 5 281 2 
132 1 74 1 172 4 173 1 287 3 207 2 46 8 4 8 218 2 221 2 299 2 260 18 304 3 13 1 90 2 224 4 14 1 16 40 146 4 150 1 25 4 190 1 26 2 62 4 108 3 193 2 237 1 32 5 200 1 199 3 276 2 239 4 112 1 279 22 202 3 203 1 322 1 165 4 324 1 130 1 327 4 281 2 
132 1 74 1 172 2 287 2 207 1 46 4 4 6 218 1 221 1 299 3 260 15 304 2 13 1 90 1 224 2 16 32 146 2 150 1 25 3 190 1 26 1 62 3 108 2 193 1 237 1 32 4 200 1 199 3 276 1 239 2 112 1 279 17 202 3 203 1 322 1 165 4 324 1 130 1 327 4 281 1 
34 1 113 1 115 1 66 1 250 1 270 1 167 1 109 1 131 1 63 1 
36 1 219 1 
34 1 113 1 115 1 66 1 143 1 109 1 228 1 63 1 195 1 
266 1 250 1 252 2 235 1 109 1 63 1 34 1 113 1 216 1 115 1 66 1 297 1 118 1 167 1 245 1 122 1 180 1 131 1 
266 1 250 1 252 2 235 1 109 1 63 1 34 1 113 1 216 1 115 1 66 1 297 1 118 1 167 1 245 1 122 1 180 1 131 1 
266 1 250 1 252 2 235 1 109 1 63 1 34 1 113 1 216 1 115 1 66 1 297 1 118 1 167 1 245 1 122 1 180 1 131 1 
114 1 152 1 206 1 
114 1 152 1 206 1 
168 1 306 1 
114 1 168 1 306 1 
144 1 83 1 
40 1 252 1 83 1 214 2 10 2 216 1 297 1 219 1 303 1 144 1 180 1 57 1 60 2 23 1 105 1 153 2 109 1 63 1 33 1 34 1 64 2 113 1 115 1 317 1 66 1 36 1 122 1 
152 1 206 1 
114 1 168 1 306 1 
248 1 172 1 1 1 46 2 293 1 212 1 256 2 49 1 214 2 139 1 10 2 260 1 305 1 12 1 224 1 16 2 183 1 92 1 146 1 147 1 194 1 314 2 64 2 239 1 279 1 318 2 129 2 
268 2 133 1 103 1 135 1 104 1 271 1 28 1 256 2 197 1 314 2 177 1 318 2 117 1 257 1 242 1 259 1 15 1 323 1 229 1 
268 2 133 1 104 1 271 1 28 1 256 1 275 1 197 1 314 1 177 1 318 1 117 1 242 1 257 1 259 1 15 1 229 1 
42 1 271 1 24 1 28 1 30 1 5 1 158 1 256 1 314 1 318 1 240 1 257 1 258 1 323 1 
268 2 133 1 135 1 104 1 271 1 28 1 256 1 197 1 314 1 177 1 318 1 117 1 242 1 257 1 259 1 15 1 323 1 229 1 
102 1 
95 1 295 1 20 1 77 1 118 1 53 1 125 1 
73 1 285 1 77 1 209 1 48 1 295 1 216 1 88 1 261 1 95 1 58 1 232 1 107 1 273 1 118 1 122 1 247 1 
285 2 42 1 77 2 291 1 292 1 84 1 256 1 48 2 138 1 216 2 296 1 258 4 257 1 142 2 223 1 261 2 265 1 95 3 232 1 271 2 107 2 157 2 273 2 32 1 158 1 199 1 160 2 314 1 162 1 277 1 202 1 318 1 320 1 205 1 122 2 123 1 247 2 328 1 
285 1 287 1 77 6 48 1 299 2 304 1 261 1 13 1 95 4 150 1 107 1 108 1 157 5 273 3 32 2 160 5 199 2 200 1 112 1 202 2 327 2 130 1 
285 1 207 1 77 2 251 1 48 1 214 1 10 1 216 1 86 1 140 1 261 1 182 1 309 1 184 2 94 1 230 1 95 2 231 1 60 1 269 1 153 1 107 1 193 1 32 2 276 1 64 1 122 1 327 1 
95 1 285 1 20 1 77 1 107 1 48 1 295 1 118 1 53 1 261 1 
160 1 199 1 95 2 202 1 157 1 273 1 32 1 
295 1 216 1 232 1 118 1 122 1 247 1 
285 1 42 2 77 2 3 2 5 1 48 2 256 4 216 3 52 1 257 1 258 1 217 1 261 2 95 2 232 2 189 1 271 1 107 2 29 2 30 1 274 1 158 1 314 4 65 1 318 4 119 1 122 3 247 4 328 2 
172 1 42 1 78 1 46 2 256 1 214 3 49 1 10 3 257 1 258 1 260 1 305 1 224 1 16 1 225 1 227 1 57 1 147 1 309 1 146 1 94 2 60 2 271 1 153 2 196 1 158 1 314 1 239 1 64 2 161 1 318 1 205 1 
95 1 285 1 77 1 107 1 3 1 157 1 273 1 48 1 295 1 118 1 261 1 328 1 
113 1 66 1 253 1 
113 1 100 1 66 1 83 1 131 1 
113 1 66 1 253 1 
113 1 66 1 253 1 
113 1 66 1 326 1 
113 1 66 1 326 1 
113 1 66 1 326 1 
113 1 66 1 
34 1 115 1 
172 2 207 1 25 1 62 2 46 4 26 1 4 3 193 1 32 1 239 2 276 1 279 4 218 1 221 1 260 4 224 2 16 8 327 1 281 1 146 2 
207 1 62 2 4 2 193 1 32 1 276 1 279 3 218 1 221 1 260 3 16 6 125 1 327 1 281 1 
172 1 44 1 25 1 62 1 46 2 4 2 32 1 199 1 239 1 202 1 279 2 299 1 260 2 224 1 16 4 327 1 146 1 
279 1 287 1 260 1 304 1 16 2 108 1 
172 2 287 2 207 1 76 1 46 4 4 9 218 1 141 1 221 1 299 2 260 12 224 2 16 23 146 2 25 4 62 5 26 2 108 2 193 2 32 3 199 2 276 2 239 2 202 2 279 11 38 1 327 3 281 1 72 1 
260 1 16 1 108 1 
279 1 287 1 16 1 
172 1 44 1 25 1 46 2 62 2 4 3 32 1 199 1 239 1 202 1 279 3 299 1 260 3 224 1 123 1 16 6 327 1 146 1 
74 1 172 1 287 1 46 2 4 2 299 2 260 6 304 1 13 1 224 1 16 12 146 1 150 1 25 1 62 1 108 1 32 2 199 2 200 1 239 1 112 1 279 6 202 2 327 2 130 1 
207 1 25 1 62 1 4 2 193 1 32 1 276 1 279 3 260 3 16 6 327 1 
172 1 25 1 62 1 26 1 46 2 4 2 193 1 276 1 239 1 279 1 218 1 221 1 260 2 224 1 16 3 72 1 146 1 
74 1 172 1 207 1 251 1 25 2 46 2 62 3 4 5 193 2 32 2 239 1 276 2 279 5 260 5 224 1 16 10 327 2 146 1 
74 1 172 1 25 1 46 2 4 1 32 1 239 1 202 1 279 2 224 1 16 2 146 1 
74 1 172 1 25 1 62 1 46 2 4 2 32 1 199 1 239 1 202 1 279 2 299 1 260 2 224 1 16 4 327 1 146 1 
74 1 172 3 25 1 26 1 46 6 62 1 4 2 193 1 239 3 276 1 279 1 260 2 224 3 14 1 16 3 72 1 146 3 
74 1 172 5 287 3 207 2 44 1 289 1 46 10 4 9 218 1 221 1 299 2 260 16 304 1 224 5 14 1 16 31 146 5 25 4 26 2 62 5 108 3 193 3 32 4 199 2 276 3 239 5 279 15 202 2 241 1 327 4 281 1 72 1 329 1 
74 1 172 1 287 1 207 1 46 2 4 2 218 1 221 1 260 4 304 1 224 1 16 8 146 1 150 1 62 2 108 1 193 1 32 1 239 1 276 1 279 4 327 1 281 1 
74 1 172 3 287 1 207 1 44 1 46 6 4 4 218 1 221 1 299 1 260 7 304 1 13 1 224 3 16 17 146 3 150 1 25 1 26 1 62 3 108 1 193 1 32 3 200 1 199 2 276 1 239 3 112 1 279 10 202 2 327 2 130 1 281 1 
74 1 172 3 287 1 207 1 44 1 46 6 4 4 218 1 221 1 299 2 260 10 304 1 13 1 224 3 16 19 146 3 150 1 25 1 62 3 26 1 108 1 193 1 32 3 200 1 199 2 276 1 239 3 112 1 279 9 202 2 327 3 130 1 281 1 
74 1 172 3 287 1 207 1 44 1 46 6 4 5 218 1 221 1 299 1 260 7 304 1 13 1 224 3 16 17 146 3 150 1 25 2 26 1 62 3 108 1 193 1 32 3 199 2 200 1 276 1 239 3 112 1 279 10 202 2 327 2 130 1 281 1 
74 1 172 1 287 1 207 1 46 2 4 2 218 1 221 1 260 4 304 1 224 1 16 8 146 1 150 1 62 2 108 1 193 1 32 1 239 1 276 1 279 4 327 1 281 1 
74 1 172 1 287 1 46 2 4 2 299 2 260 6 304 1 13 1 224 1 16 12 146 1 150 1 25 1 62 1 108 1 32 2 199 2 200 1 239 1 112 1 279 6 202 2 327 2 130 1 
74 1 172 4 287 1 207 1 44 1 46 8 4 5 218 1 221 1 299 1 260 8 304 1 13 1 224 4 16 18 146 4 150 1 25 2 62 3 26 2 108 1 193 1 32 3 200 1 199 2 276 1 239 4 112 1 279 10 202 2 130 1 327 2 281 1 
74 1 172 4 287 1 46 8 4 6 299 2 260 7 304 1 13 1 224 4 16 16 14 1 146 4 150 1 25 3 62 3 26 2 108 1 32 3 200 1 199 3 239 4 112 1 279 9 202 3 130 1 327 2 
207 1 25 3 62 3 4 6 193 3 32 1 276 3 279 3 218 1 221 2 260 4 16 7 327 1 
74 1 172 4 287 1 207 1 46 8 4 4 218 1 221 1 299 1 260 8 304 1 13 1 224 4 16 18 14 1 146 4 150 1 25 1 62 3 26 2 108 1 193 1 32 3 200 1 199 2 276 1 239 4 112 1 279 10 202 2 130 1 327 2 281 1 
214 1 35 1 64 1 10 1 106 1 57 1 238 1 
149 1 106 1 137 1 31 1 238 1 35 1 214 1 64 1 10 1 244 1 57 1 282 1 
314 1 318 1 42 1 257 1 258 1 271 1 30 1 125 1 5 1 158 1 256 1 
60 1 42 1 271 1 153 1 158 1 256 1 214 2 314 1 161 1 64 1 10 2 318 1 258 1 205 1 257 1 307 1 225 1 57 1 
230 1 148 1 60 2 271 1 153 1 156 1 29 1 158 2 256 1 214 2 314 1 50 1 161 1 64 2 163 1 10 2 318 1 258 3 205 2 257 1 307 1 225 1 57 1 
230 1 148 1 60 2 21 1 271 1 153 1 156 1 29 1 158 2 256 2 214 2 314 2 50 1 161 1 64 2 163 1 10 2 318 2 258 3 205 2 257 1 298 1 307 1 57 1 
42 1 271 1 29 1 272 1 158 1 256 3 314 3 50 1 295 1 138 1 296 1 163 1 278 1 216 2 318 3 118 1 205 1 258 4 257 1 298 1 142 1 122 2 247 1 
42 1 271 1 29 1 158 1 256 3 314 3 50 1 295 1 138 1 296 1 163 1 216 2 318 3 118 1 205 1 258 4 257 1 298 1 142 1 223 1 122 2 247 1 
314 1 318 1 257 1 271 1 325 1 256 1 
288 1 2 1 42 2 133 1 151 1 103 1 271 3 292 1 211 1 293 1 256 7 213 1 158 2 159 1 314 6 318 7 205 1 258 3 257 2 325 1 129 1 
172 1 207 1 251 1 46 2 4 3 212 1 256 1 49 1 214 1 139 1 10 1 218 1 221 1 260 4 305 1 224 1 16 8 307 1 57 1 146 1 230 1 187 1 60 1 103 1 25 1 62 2 153 1 193 1 32 2 314 1 276 1 64 1 239 1 316 1 279 4 318 1 327 2 
285 2 77 1 42 1 291 1 84 1 48 2 256 1 295 1 138 1 216 3 296 1 258 2 53 1 142 1 261 2 223 1 95 1 20 1 232 1 107 2 274 1 33 1 314 1 277 1 318 1 118 1 122 3 247 2 
103 1 271 2 292 1 256 2 158 1 314 2 138 1 318 2 320 1 205 1 258 2 257 1 325 1 
314 4 318 4 42 1 257 1 258 1 103 1 298 1 271 1 243 1 30 1 5 1 158 1 256 4 
2 1 271 2 211 1 294 1 29 1 312 1 256 2 158 1 314 2 318 2 205 1 258 1 257 1 56 1 
314 1 268 1 318 1 42 1 257 1 242 1 259 1 271 1 15 1 256 1 
314 2 248 1 318 2 133 1 103 1 293 1 256 2 
42 1 103 1 151 1 271 2 293 1 29 1 30 1 5 1 256 5 158 2 314 4 159 1 318 5 258 3 257 2 243 1 
42 1 103 1 271 2 293 1 29 1 30 1 192 1 5 1 256 5 158 2 314 4 159 1 318 5 258 3 257 2 243 1 
60 1 21 1 42 1 271 1 153 1 158 1 256 1 214 2 314 1 161 1 64 1 10 2 318 1 258 1 205 1 257 1 307 1 57 1 
2 1 271 2 292 1 211 1 29 1 256 1 213 1 158 1 314 1 318 1 205 1 258 1 257 1 
171 1 75 1 186 1 57 1 85 1 
230 1 171 1 97 1 148 1 186 2 75 2 45 1 156 1 33 1 85 2 295 1 296 1 216 2 118 1 67 1 54 1 122 2 69 1 57 1 
171 1 186 1 1 1 85 1 194 1 214 1 64 1 10 1 92 1 
171 1 54 1 69 1 

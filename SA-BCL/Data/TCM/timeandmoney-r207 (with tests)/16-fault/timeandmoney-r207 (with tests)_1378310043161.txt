#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (104,181,200) 303 151 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (104,181,200) 303 151 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 27 (11,248,319) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 134 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (104,181,200) 303 (159,167,324) 21 245 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 64 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 295 168 268 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 295 168 268 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 295 168 268 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 295 168 268 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 295 168 268 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (104,181,200) 303 151 190 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (104,181,200) 303 151 190 70 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
241 1 138 1 142 1 321 1 291 4 3 2 106 1 176 1 127 1 150 6 223 1 89 1 225 1 346 2 31 2 215 9 55 2 329 1 17 2 235 9 99 1 62 2 118 1 100 5 283 1 315 3 285 1 261 2 
241 1 138 1 142 1 321 1 291 4 3 2 106 1 176 1 127 1 150 6 223 1 89 1 225 1 346 2 31 2 215 9 55 2 329 1 17 2 235 9 99 1 62 2 118 1 100 5 283 1 315 3 285 1 261 2 
241 1 138 1 142 1 321 1 291 5 3 2 106 1 176 1 127 1 150 7 223 1 89 1 225 1 346 2 31 2 215 10 55 2 329 1 17 2 235 10 99 1 62 2 118 1 100 6 283 1 315 4 285 1 261 2 
241 1 138 1 142 1 321 1 291 3 3 2 106 1 176 1 127 1 150 4 89 1 225 1 346 2 31 2 215 7 55 2 329 1 17 2 235 7 99 1 62 2 118 1 100 4 283 1 315 2 285 1 261 1 
55 1 215 4 241 1 291 2 3 1 106 1 150 3 235 4 223 1 99 1 118 1 62 1 100 3 315 1 285 1 261 2 346 1 31 1 
215 2 55 1 142 1 3 1 45 1 7 1 81 1 17 1 235 2 99 1 118 1 62 1 100 1 285 1 225 1 346 1 
215 3 291 1 3 2 17 1 127 1 150 1 235 3 99 1 118 1 62 2 100 2 315 1 285 1 
138 1 241 1 291 4 3 2 106 1 127 1 150 7 223 1 89 1 346 1 31 1 215 9 55 1 348 1 187 1 17 1 235 9 99 1 62 2 118 1 100 5 315 3 285 1 261 2 
138 1 241 1 291 4 3 2 106 1 127 1 150 7 223 1 89 1 346 1 31 1 215 9 55 1 348 1 187 1 17 1 235 9 99 1 62 2 118 1 100 5 315 3 285 1 261 2 
299 1 108 1 64 1 
281 2 108 1 196 1 
56 1 104 2 326 1 181 2 155 2 72 2 200 2 308 2 
104 2 200 3 296 1 148 1 202 1 221 1 209 1 181 2 155 2 72 2 300 2 13 1 211 1 227 1 214 1 56 1 326 1 231 1 96 1 308 3 97 1 35 1 194 1 98 1 275 2 258 2 331 1 76 1 314 1 260 2 41 1 334 2 316 1 137 1 239 1 337 1 287 1 
56 1 104 1 57 1 181 1 155 1 72 1 52 1 200 1 302 1 308 1 
104 1 324 1 303 1 
104 1 57 1 188 1 108 1 200 1 308 1 71 2 167 1 312 1 155 1 181 1 72 1 299 1 159 2 101 1 
161 1 10 1 159 1 71 1 85 1 
250 1 161 1 299 1 159 2 108 1 71 2 85 1 8 1 
161 1 159 1 71 1 
56 1 104 1 57 1 200 1 308 1 85 1 71 1 155 1 181 1 72 1 159 1 52 1 302 1 262 1 
108 1 
161 1 299 1 257 1 159 2 108 1 71 2 85 1 8 1 
103 1 104 1 44 1 220 1 108 2 200 1 83 2 25 1 71 5 85 2 8 1 204 1 222 2 181 1 155 1 51 1 72 1 156 1 159 5 299 2 52 1 302 1 272 4 53 1 56 1 33 1 57 1 161 2 73 1 165 2 308 1 350 1 191 2 310 5 262 1 263 2 169 1 352 2 
326 1 64 1 
104 2 57 1 326 1 200 2 308 2 311 1 40 1 155 1 181 1 72 1 253 1 
68 1 271 1 249 1 
326 1 200 1 308 1 96 1 148 1 35 1 258 1 221 1 209 1 131 1 300 1 260 1 13 1 337 1 227 1 287 1 
104 1 124 1 200 2 96 1 308 2 148 1 35 1 221 1 258 1 209 1 155 1 181 1 300 1 260 1 271 1 335 1 13 1 337 1 287 1 227 1 
104 3 326 1 181 3 155 3 72 1 200 3 308 3 335 1 
104 1 57 1 181 1 155 1 200 1 302 1 308 1 
104 1 57 1 200 1 308 1 311 1 155 1 181 1 72 1 253 1 
104 3 124 1 200 4 148 1 71 1 221 1 209 1 88 1 181 3 155 3 72 2 159 1 300 1 13 1 211 1 227 1 253 1 56 1 326 1 57 1 188 1 162 1 231 1 96 1 308 4 97 1 35 1 194 1 275 1 258 1 331 1 167 1 312 1 76 1 314 1 260 1 41 1 101 1 334 2 316 1 335 1 239 1 337 1 287 1 
104 2 181 1 155 1 200 1 308 1 335 1 303 1 151 1 
104 3 188 1 57 1 124 1 162 1 108 1 200 3 308 3 71 1 167 1 312 1 155 3 181 3 72 1 159 1 101 1 335 2 264 1 253 1 
104 2 181 2 155 2 72 1 271 1 200 2 308 2 335 1 249 1 253 1 
326 1 200 1 308 1 96 1 148 1 35 1 258 1 221 1 209 1 300 1 260 1 13 1 337 1 227 1 287 1 
326 1 147 1 200 1 308 1 96 1 35 1 258 1 221 1 209 1 300 1 260 1 13 1 42 1 227 1 287 1 
68 1 246 1 107 1 231 1 47 1 216 1 249 1 275 2 313 1 76 1 314 1 271 1 41 1 316 1 334 2 210 1 239 2 211 1 352 1 
206 1 104 1 57 1 181 1 155 1 101 1 200 1 308 1 
104 5 326 1 124 1 164 1 200 4 308 4 151 1 110 1 155 4 181 4 72 1 335 2 303 1 253 1 
206 1 104 2 57 1 181 2 155 2 200 2 302 1 308 2 
248 1 84 1 
248 1 84 1 
27 1 11 1 
27 1 11 1 
27 1 11 1 
115 1 248 1 84 1 
115 1 248 1 84 1 
27 1 11 1 248 1 84 1 
319 1 248 1 84 1 
115 1 248 1 84 1 
205 1 248 1 84 1 
205 1 248 1 84 1 
205 1 248 1 84 1 
105 2 108 1 248 2 174 1 341 1 116 2 117 1 126 1 84 2 193 2 71 2 18 1 234 1 37 1 159 2 284 1 133 2 12 2 286 3 
319 1 104 2 326 1 105 1 5 1 255 1 163 1 305 1 247 1 200 2 174 1 248 1 308 2 116 1 84 1 71 1 193 1 154 1 155 2 181 2 159 1 184 1 12 1 286 1 
55 1 346 1 31 1 
55 1 81 1 346 1 
129 1 81 1 346 3 14 1 31 2 288 1 
218 1 129 1 81 1 346 2 31 1 288 1 
129 2 81 1 346 2 31 1 288 1 
199 1 173 1 108 2 83 1 71 5 85 4 8 1 222 1 207 1 180 2 111 1 159 5 299 1 132 2 272 3 33 1 161 1 163 1 255 1 256 1 305 1 165 1 310 2 191 1 166 1 216 1 136 2 233 1 281 3 259 1 196 1 263 1 352 1 
104 1 108 1 200 1 71 2 85 2 155 1 181 1 10 1 72 1 159 2 299 1 52 1 302 1 15 1 347 1 56 1 57 1 161 1 93 1 308 1 262 1 
104 1 173 1 108 3 200 1 83 1 85 2 71 3 207 1 222 1 180 1 181 1 155 1 72 1 299 1 159 3 52 1 132 2 302 1 272 3 56 1 57 1 256 1 305 1 165 1 308 1 191 1 166 1 310 2 216 1 233 1 136 2 281 4 259 1 196 2 262 1 263 1 169 1 352 1 
173 1 108 2 83 1 71 2 85 1 222 1 207 1 180 1 159 2 132 2 272 3 134 1 256 1 305 1 165 1 191 1 166 1 310 2 216 1 136 2 233 1 281 4 259 1 196 2 169 1 352 1 
20 1 64 1 96 1 
242 1 96 1 
135 1 
209 1 96 1 
135 1 96 2 342 1 221 1 209 1 20 2 280 1 
221 1 209 1 96 1 
96 1 185 1 
44 1 143 1 107 3 34 1 165 1 350 1 25 1 195 2 275 7 19 1 313 2 121 1 239 3 137 4 289 1 352 1 114 1 
44 1 143 1 107 3 34 1 165 1 350 1 25 1 195 2 275 7 19 1 313 2 121 1 239 3 137 4 289 1 352 1 114 1 
44 1 143 1 307 1 107 3 34 1 165 1 350 1 25 1 195 2 275 7 19 1 313 2 121 1 239 3 137 4 289 1 352 1 114 1 
79 1 143 1 44 5 173 2 107 15 25 2 204 1 203 1 29 1 224 1 213 3 114 1 230 3 34 2 165 5 350 5 216 2 195 2 19 1 275 32 76 1 313 7 22 1 259 2 314 1 41 1 334 2 102 1 121 8 316 1 239 15 137 17 289 2 352 5 
79 1 322 1 44 1 143 1 107 4 34 1 165 1 350 1 25 1 195 2 128 1 19 1 275 9 313 3 76 2 314 2 41 2 121 1 316 2 334 4 239 4 137 5 289 1 352 1 
243 1 123 1 3 1 81 1 293 1 175 1 150 1 300 1 130 1 346 2 14 1 31 1 227 1 55 1 215 2 58 1 95 1 17 1 258 1 235 2 61 1 99 1 62 1 118 1 100 1 236 1 260 1 285 1 287 1 240 1 
243 1 123 1 3 1 81 1 293 1 269 1 175 1 48 1 150 2 300 1 346 2 14 1 31 1 227 1 55 1 215 3 58 1 95 1 17 1 258 1 235 3 61 1 99 1 62 1 100 1 236 1 260 1 285 1 65 1 287 1 
243 1 123 1 81 1 293 1 269 1 175 1 150 2 300 1 346 2 14 1 31 1 227 1 215 2 55 1 95 1 17 1 258 1 235 2 99 1 100 1 236 1 260 1 285 1 65 1 287 1 
243 2 3 1 6 1 293 2 48 1 152 1 209 1 300 1 13 1 227 1 215 1 254 1 95 2 60 1 17 2 96 1 217 1 258 1 235 1 62 1 260 1 78 1 287 1 
243 1 123 1 3 1 81 1 293 1 269 1 175 1 300 1 130 1 346 2 14 1 31 1 227 1 55 1 215 1 58 1 95 1 17 1 258 1 235 1 61 1 62 1 118 1 236 1 260 1 287 1 
46 1 
104 1 245 1 324 1 83 1 71 2 8 1 152 1 222 1 153 1 209 1 298 1 300 2 159 2 272 1 303 1 13 2 227 1 33 1 161 2 96 1 191 1 310 1 233 1 258 2 279 1 21 1 333 1 260 2 78 1 287 1 265 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 161 1 245 1 21 1 333 1 257 1 159 2 324 1 303 1 71 2 8 1 
33 1 104 1 245 1 324 1 83 1 191 1 71 1 222 1 153 1 159 1 333 1 21 1 303 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
104 1 153 1 245 1 21 1 333 1 159 1 324 1 303 1 71 1 
33 1 104 1 245 1 324 1 83 1 191 1 71 1 222 1 153 1 159 1 333 1 21 1 303 1 
68 1 143 1 44 1 107 2 47 1 25 1 249 1 271 1 211 1 326 2 231 1 165 1 350 1 195 1 19 1 275 6 76 1 313 2 314 1 64 1 41 1 334 2 316 1 137 3 239 3 352 1 
68 11 173 2 107 2 69 1 249 3 86 1 158 1 183 1 271 11 211 2 213 3 326 1 230 3 231 1 165 2 330 1 216 1 98 1 275 14 331 1 76 2 22 1 314 2 259 2 41 2 334 4 316 2 121 2 239 6 137 8 43 1 352 1 
104 1 124 1 200 2 294 1 148 1 26 1 249 1 221 1 209 1 28 1 181 1 155 1 300 1 131 1 183 1 13 1 211 1 227 1 326 1 231 1 96 1 308 2 35 1 258 1 275 2 98 1 331 1 76 1 260 1 314 1 41 1 316 1 334 2 335 1 337 1 239 1 137 1 287 1 
1 1 124 1 173 1 221 1 181 1 183 1 271 2 13 1 227 1 231 2 16 1 96 1 97 1 275 5 331 1 334 4 335 1 239 2 337 1 137 3 287 1 104 1 68 2 107 2 200 2 148 1 249 2 209 1 155 1 300 1 301 1 211 2 74 1 165 1 308 2 35 1 258 1 76 2 77 1 260 1 314 2 259 1 41 2 316 2 121 2 
139 1 104 1 4 1 24 1 200 1 269 1 47 1 344 1 152 1 209 2 181 1 155 1 300 8 13 2 211 2 227 2 214 2 231 2 308 1 96 3 75 1 258 7 98 1 275 2 331 1 76 2 260 8 314 2 41 2 318 1 334 4 316 2 120 1 335 1 78 1 137 1 239 1 287 2 240 1 
104 1 68 1 173 1 107 1 200 1 249 1 155 1 181 1 72 1 183 1 271 1 211 1 253 1 231 1 165 1 308 1 216 1 275 3 313 1 76 1 314 1 259 1 237 1 41 1 334 2 316 1 137 1 239 2 352 1 
68 1 146 1 107 1 231 1 165 1 47 1 249 1 275 2 76 1 314 1 259 1 271 1 41 1 121 1 316 1 334 2 211 1 137 2 
68 1 246 1 107 1 231 1 47 1 216 1 249 1 275 2 313 1 76 1 314 1 271 1 41 1 316 1 334 2 211 1 239 2 352 1 
68 2 173 1 107 2 47 1 249 2 271 2 211 1 231 1 165 1 216 1 275 4 76 1 313 1 259 1 314 1 41 1 334 2 316 1 121 1 137 2 239 2 352 1 
139 1 68 1 146 1 107 1 231 1 165 1 249 1 275 2 76 1 314 1 259 1 271 1 41 1 121 1 316 1 334 2 211 1 137 2 
139 1 68 1 246 1 107 1 231 1 216 1 249 1 275 2 313 1 76 1 314 1 271 1 41 1 316 1 334 2 211 1 239 2 352 1 
139 1 68 1 173 1 107 1 231 1 165 1 249 1 275 2 76 1 314 1 259 1 271 1 41 1 121 1 316 1 334 2 211 1 137 2 
68 1 173 1 107 1 231 1 165 1 249 1 275 2 76 1 314 1 259 1 271 1 41 1 121 1 316 1 334 2 211 1 137 2 
200 1 148 1 221 1 209 1 300 1 13 1 211 1 227 1 326 1 231 1 96 1 308 1 97 1 35 1 98 1 275 2 258 1 331 1 76 1 260 1 314 1 41 1 316 1 334 2 137 1 337 1 239 1 287 1 
147 1 200 1 221 1 209 1 300 1 226 1 13 1 211 1 227 1 326 1 231 1 96 1 308 1 35 1 98 1 275 2 258 1 331 1 76 1 260 1 314 1 41 1 316 1 334 2 137 1 239 1 287 1 42 1 
68 1 173 1 107 1 231 1 165 1 249 1 275 2 76 1 183 1 314 1 259 1 271 1 41 1 121 1 316 1 334 2 211 1 137 2 
68 1 173 1 107 1 200 1 148 1 249 1 221 1 209 1 300 1 271 1 211 1 227 1 231 1 165 1 96 1 308 1 97 1 35 1 275 2 258 1 76 1 77 1 259 1 260 1 314 1 41 1 121 1 316 1 334 2 137 2 337 1 287 1 240 1 
104 1 68 1 144 1 173 1 107 1 200 1 249 1 155 1 181 1 72 1 183 1 271 1 211 1 253 1 231 1 165 1 308 1 275 2 76 1 314 1 259 1 41 1 121 1 334 2 316 1 137 2 
76 1 322 1 268 1 314 1 168 1 41 1 334 2 316 1 295 1 91 1 
76 1 322 1 268 1 314 1 168 1 41 1 334 2 316 1 295 1 91 1 
76 1 322 1 268 1 314 1 168 1 41 1 334 2 316 1 295 1 91 1 
76 1 322 1 268 1 314 1 168 1 41 1 334 2 316 1 295 1 91 1 
76 1 322 1 268 1 314 1 168 1 41 1 334 2 316 1 295 1 91 1 
37 1 105 1 145 1 284 1 248 1 341 1 116 1 84 1 12 1 193 1 
319 1 184 1 
87 1 332 1 105 1 292 1 248 1 116 1 84 1 12 1 193 1 
105 1 108 1 174 1 248 1 341 1 116 1 126 1 84 1 71 1 193 1 18 1 234 1 37 1 159 1 284 1 133 1 12 1 286 2 
105 1 108 1 174 1 248 1 341 1 116 1 126 1 84 1 71 1 193 1 18 1 234 1 37 1 159 1 284 1 133 1 12 1 286 2 
105 1 108 1 174 1 248 1 341 1 116 1 126 1 84 1 71 1 193 1 18 1 234 1 37 1 159 1 284 1 133 1 12 1 286 2 
290 1 208 1 115 1 
290 1 208 1 115 1 
205 1 325 1 
205 1 290 1 325 1 
154 1 5 1 
319 1 104 2 105 1 5 1 200 2 248 1 247 1 84 1 71 1 85 1 251 1 154 1 155 2 181 2 159 1 133 1 184 1 12 1 326 1 163 1 255 1 305 1 308 2 116 1 193 1 18 1 286 1 
208 1 115 1 
205 1 290 1 325 1 
104 2 339 1 200 2 344 1 49 1 209 1 300 2 183 1 211 1 227 1 214 2 306 1 231 1 96 1 308 2 98 1 275 2 258 2 331 1 76 1 282 1 260 2 314 1 41 1 317 1 316 1 334 2 120 1 137 1 239 1 287 1 
55 1 123 1 141 1 81 1 293 1 82 1 269 1 258 2 297 1 61 1 236 1 300 2 260 2 346 2 14 1 31 1 287 1 227 1 240 1 
55 1 123 1 81 1 293 1 82 1 269 1 258 1 61 1 236 1 300 1 260 1 23 1 346 2 14 1 31 1 227 1 287 1 
267 1 254 1 293 1 96 1 258 1 152 1 209 1 297 1 300 1 260 1 13 1 78 1 287 1 227 1 
55 1 123 1 141 1 81 1 293 1 82 1 269 1 258 1 297 1 61 1 236 1 300 1 260 1 346 2 14 1 31 1 287 1 227 1 
0 1 
51 1 73 1 299 1 108 1 64 1 272 1 310 1 
108 2 83 1 71 1 8 1 50 1 222 1 159 1 299 1 272 1 252 1 33 1 161 1 310 1 191 1 281 1 196 1 266 1 
173 2 83 3 178 2 8 3 221 1 222 3 132 6 272 8 13 1 54 1 273 2 227 1 188 2 16 2 96 6 191 3 233 2 136 6 278 2 20 2 281 12 196 6 338 2 287 2 242 3 103 2 244 1 108 7 342 1 71 5 209 1 299 1 300 1 159 5 33 3 161 5 165 2 349 2 310 7 216 2 258 1 260 1 259 2 263 2 265 1 171 1 352 2 
103 1 173 2 108 5 83 2 71 1 8 1 222 2 159 1 299 2 132 5 113 1 272 8 30 1 213 1 33 2 161 1 230 1 59 1 165 2 309 1 191 2 310 5 233 1 136 5 216 2 351 1 281 6 22 1 259 2 196 3 263 2 122 1 265 1 66 1 352 2 
103 1 67 1 104 1 44 1 200 1 83 1 71 1 25 1 204 1 222 1 155 1 181 1 72 1 159 1 52 1 302 1 272 2 33 1 56 1 57 1 165 2 308 1 350 1 191 1 310 2 262 1 263 2 352 1 
33 1 73 1 108 1 83 1 191 1 310 1 222 1 51 1 299 1 272 1 
103 1 173 1 108 2 165 1 310 2 136 2 216 1 281 4 259 1 132 2 196 2 272 2 263 1 352 1 
161 1 299 1 159 1 108 1 71 1 8 1 
2 2 109 1 83 2 71 3 8 2 221 1 179 1 152 1 222 2 209 2 157 1 112 1 298 1 300 4 159 3 272 2 13 2 304 1 227 2 228 1 33 1 161 4 189 1 96 2 191 2 310 2 233 2 258 4 279 1 260 4 169 1 78 1 287 3 265 2 
104 2 200 3 148 1 221 1 209 1 181 2 155 2 72 2 300 1 13 1 211 1 227 1 56 1 326 1 231 1 308 3 96 1 97 1 35 1 194 1 275 1 258 1 331 1 76 1 260 1 314 1 41 1 334 2 316 1 239 1 337 1 287 1 
33 1 108 4 83 1 310 2 191 1 136 2 233 1 195 1 222 1 281 4 299 2 196 2 132 2 272 1 265 1 
80 1 105 1 116 1 
80 1 105 1 116 1 
37 1 154 1 105 1 197 1 116 1 
80 1 105 1 116 1 
229 1 105 1 116 1 
229 1 105 1 116 1 
229 1 105 1 116 1 
105 1 116 1 
248 1 84 1 
322 1 44 1 143 1 107 2 230 1 165 1 350 1 25 1 195 1 19 1 275 8 313 2 76 1 314 1 22 1 41 1 316 1 334 2 137 4 122 1 239 4 213 1 352 1 
322 1 44 1 143 1 327 1 107 2 230 1 165 1 350 1 25 1 195 1 19 1 275 8 313 2 76 2 314 2 22 1 41 2 316 2 334 4 137 4 122 1 239 4 213 1 352 1 
79 1 322 1 44 1 143 1 173 2 107 4 25 1 113 1 213 1 327 1 230 1 59 1 165 3 309 1 350 1 216 2 195 1 19 1 275 19 76 3 313 3 22 1 314 3 259 2 41 3 121 1 334 6 316 3 239 10 122 1 137 9 66 1 352 3 
79 1 322 1 44 1 143 1 173 2 107 5 25 1 113 1 213 1 327 1 230 1 59 1 165 3 309 1 350 1 216 1 195 1 19 1 275 17 76 3 313 3 22 1 314 3 259 2 41 3 121 2 334 6 316 3 239 7 122 1 137 10 66 1 352 2 
322 1 44 1 143 1 107 2 230 1 165 1 350 1 25 1 195 1 19 1 275 8 313 2 76 1 314 1 22 1 41 1 316 1 334 2 137 4 122 1 239 4 213 1 352 1 
322 1 173 2 107 2 113 1 213 1 230 1 59 1 165 2 309 1 216 2 275 12 76 1 313 1 22 1 314 1 259 2 41 1 121 1 334 2 316 1 239 6 122 1 137 6 66 1 352 2 
79 2 322 1 44 1 143 1 173 2 107 5 25 1 113 1 213 1 327 1 230 1 59 1 165 3 309 1 350 1 216 1 195 1 19 1 275 18 76 4 313 3 22 1 314 4 259 2 41 4 121 2 334 8 316 4 239 8 122 1 137 10 66 1 352 2 
79 2 322 1 173 3 107 6 113 1 213 1 274 1 230 1 59 1 165 3 309 1 216 2 275 16 76 4 313 3 22 1 314 4 259 3 41 4 121 3 334 8 316 4 239 7 122 1 137 9 66 1 352 2 
143 2 44 3 107 6 165 1 350 3 25 1 275 7 19 1 313 3 121 3 239 4 137 3 352 1 
79 2 322 1 44 1 143 1 173 2 107 4 25 1 113 1 213 1 274 1 230 1 59 1 165 3 309 1 350 1 216 1 195 1 19 1 275 18 76 4 313 3 22 1 314 4 259 2 41 4 121 1 334 8 316 4 239 8 122 1 137 10 66 1 352 2 
79 1 143 1 44 1 107 3 165 1 350 1 25 1 195 1 275 8 19 1 313 2 76 2 314 2 41 2 121 1 316 2 334 4 239 4 137 4 352 1 
143 1 44 1 107 2 165 1 350 1 25 1 195 1 19 1 275 6 313 2 64 1 239 3 137 3 352 1 
173 1 327 1 107 2 165 1 216 1 275 4 313 1 76 1 314 1 259 1 41 1 316 1 334 2 121 1 239 2 137 2 352 1 
275 2 22 1 230 1 137 1 239 1 213 1 
79 2 44 2 143 1 173 2 107 9 69 1 25 1 86 1 158 1 213 2 230 2 165 3 350 2 216 2 195 1 19 1 275 23 276 1 313 5 76 2 259 2 314 2 41 2 121 4 316 2 334 4 137 11 239 12 352 3 
275 1 230 1 239 1 
275 1 137 1 213 1 
173 1 327 1 107 3 16 1 165 1 216 1 275 6 76 1 313 2 314 1 259 1 41 1 334 2 316 1 121 1 239 3 137 3 352 1 
322 1 173 2 107 2 113 1 213 1 230 1 59 1 165 2 309 1 216 2 275 12 76 1 313 1 22 1 314 1 259 2 41 1 121 1 334 2 316 1 239 6 122 1 137 6 66 1 352 2 
44 1 107 2 165 1 350 1 25 1 275 6 313 1 121 1 137 3 239 3 352 1 
79 1 44 1 143 1 107 2 350 1 275 3 19 1 276 1 313 1 76 1 314 1 41 1 121 1 316 1 334 2 137 1 239 2 
322 1 44 2 107 5 165 2 350 2 25 1 204 1 275 10 76 1 313 3 314 1 41 1 334 2 316 1 121 2 137 5 239 5 352 2 
322 1 107 1 165 1 275 2 76 1 314 1 259 1 41 1 316 1 334 2 121 1 137 2 
322 1 173 1 107 2 165 1 216 1 275 4 313 1 76 1 314 1 259 1 41 1 316 1 334 2 121 1 239 2 137 2 352 1 
79 1 274 1 322 1 44 1 107 2 350 1 275 3 276 1 76 3 313 1 314 3 41 3 316 3 334 6 121 1 239 2 137 1 
79 1 322 1 44 2 143 1 173 2 107 8 25 1 203 1 29 1 213 3 274 1 327 1 230 3 165 3 350 2 216 2 195 1 19 1 275 22 313 4 76 4 22 1 314 4 259 2 41 4 334 8 316 4 102 1 121 4 239 11 137 11 352 3 
104 1 190 1 303 1 151 1 
140 1 104 1 172 1 190 1 219 1 70 1 303 1 232 1 151 1 
152 1 258 1 209 1 260 1 300 1 64 1 96 1 78 1 13 1 287 1 227 1 
104 1 326 1 200 2 96 1 308 2 35 1 221 1 258 1 209 1 155 1 181 1 300 1 260 1 335 1 13 1 337 1 287 1 227 1 
104 2 2 1 200 2 221 2 209 2 181 2 155 1 182 1 300 1 227 1 185 1 326 1 57 1 308 2 96 3 35 1 258 1 312 1 260 1 101 1 335 1 337 1 287 1 
104 2 2 1 200 2 221 2 209 2 181 2 155 1 182 1 300 2 227 1 185 1 326 1 57 1 308 2 96 3 192 1 35 1 258 2 312 1 260 2 101 1 335 1 42 1 287 1 
242 1 2 1 108 1 125 1 71 2 221 1 209 1 182 1 300 3 159 2 299 1 13 1 227 1 185 1 161 1 188 1 96 4 192 1 258 3 20 1 260 3 198 1 287 1 
242 1 188 1 2 1 161 1 108 1 96 4 192 1 71 2 221 1 258 3 209 1 20 1 182 1 299 1 159 2 300 3 260 3 13 1 273 1 185 1 287 1 227 1 
258 1 24 1 260 1 300 1 287 1 227 1 
214 1 228 1 4 1 24 1 109 1 269 1 96 3 342 1 75 1 344 1 258 6 221 1 209 2 300 7 260 7 318 1 90 1 13 2 227 2 287 3 240 1 
1 1 44 2 221 1 181 1 183 1 271 1 227 1 57 1 326 3 231 2 96 1 97 1 195 1 19 1 275 14 334 4 335 1 337 1 137 7 239 7 287 1 240 1 104 1 68 1 143 1 107 5 200 2 148 1 25 2 249 1 204 1 209 1 155 1 300 1 211 2 165 3 308 2 35 1 350 2 258 1 76 2 313 4 40 1 77 1 260 1 314 2 41 2 121 1 317 1 316 2 352 3 
242 1 108 1 83 2 71 3 85 1 178 1 8 1 222 2 51 1 299 1 300 1 159 3 272 1 13 1 273 1 33 2 161 2 188 1 73 1 189 1 96 2 310 1 191 2 258 1 278 1 20 1 260 1 338 1 
24 1 96 2 342 1 258 2 221 1 209 1 20 1 300 2 260 2 54 1 227 1 287 2 240 1 
96 1 192 1 258 4 152 1 209 1 300 4 260 4 63 1 13 1 78 1 287 1 227 1 240 1 
228 1 2 1 109 1 96 1 258 2 179 1 221 1 209 1 112 1 300 2 260 2 336 1 227 1 287 2 
55 1 258 1 236 1 260 1 300 1 81 1 346 1 13 1 287 1 227 1 
344 1 258 2 209 1 282 1 260 2 300 2 96 1 269 1 287 1 227 1 240 1 
2 1 4 1 96 3 152 1 258 4 344 1 209 2 300 5 260 5 63 1 318 1 78 1 13 1 227 2 287 2 240 1 
2 1 96 3 152 1 258 4 344 1 209 2 39 1 300 5 260 5 63 1 318 1 78 1 13 1 227 2 287 2 240 1 
104 1 326 1 200 2 96 1 308 2 35 1 221 1 258 1 209 1 155 1 181 1 300 1 260 1 335 1 13 1 287 1 42 1 227 1 
228 1 221 1 258 1 209 1 2 1 260 1 300 1 109 1 96 1 90 1 342 1 287 2 227 1 
32 1 326 1 345 1 343 1 170 1 
32 2 326 1 188 1 57 1 162 1 323 1 108 1 85 1 71 2 343 2 312 1 167 1 345 2 299 1 159 2 238 1 101 1 212 1 170 1 
49 1 104 1 345 1 339 1 306 1 200 1 308 1 343 1 170 1 
323 1 238 1 170 1 
99 1 100 1 285 1 64 1 
215 1 235 1 99 1 62 1 3 1 100 1 285 1 
243 1 235 1 17 1 
215 3 320 1 142 2 3 1 270 1 235 3 118 1 62 1 99 1 100 1 119 1 285 1 
215 2 235 2 99 1 62 1 3 1 100 1 285 1 261 1 150 1 
215 1 241 1 55 1 291 1 3 1 235 1 118 1 62 1 100 1 346 1 31 1 
215 1 235 1 99 1 62 1 118 1 3 1 100 1 
215 1 235 1 99 2 62 1 118 1 3 1 285 1 
215 2 92 1 3 2 201 1 177 1 235 2 99 1 118 1 62 2 100 1 
215 3 138 1 291 1 3 1 150 2 235 3 99 1 118 1 62 1 100 2 89 1 315 1 285 1 
215 2 55 1 3 1 81 1 150 1 235 2 99 1 118 1 62 1 100 1 285 1 160 1 346 2 14 1 31 1 
215 4 291 1 3 2 150 2 235 4 223 1 99 1 118 1 62 2 100 2 315 1 285 1 261 1 
215 1 235 1 99 1 62 1 118 1 3 1 100 1 285 1 
215 4 142 1 291 1 3 1 328 1 270 1 150 2 235 4 99 2 62 1 100 3 119 1 315 1 285 2 
215 2 187 1 3 1 149 1 150 1 235 2 277 1 99 1 118 1 62 1 100 1 285 1 
215 3 235 3 142 2 99 1 62 1 118 1 3 1 100 1 119 1 285 1 340 1 270 2 
186 1 94 2 100 2 36 1 
215 1 235 1 38 1 62 1 118 1 3 1 
215 2 235 2 99 1 62 1 118 1 3 1 100 1 89 1 285 1 150 1 
9 1 
215 1 235 1 99 1 62 1 118 1 3 1 100 1 285 1 
215 3 235 3 142 1 99 1 62 1 118 1 3 1 100 1 89 1 285 1 150 1 
291 1 100 1 328 1 315 1 
99 1 100 1 

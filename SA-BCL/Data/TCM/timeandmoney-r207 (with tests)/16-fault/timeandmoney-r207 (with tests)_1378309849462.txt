#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (130,244) (130,244) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (116,121) (116,121) 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (37,240) (37,240) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (77,228) 286 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (37,240) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (39,210,268) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (215,293) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (215,293) 136 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (215,293) 136 103 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 123 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (38,67,168) (27,53,132) (27,53,132) (27,53,132) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (38,67,168) (27,53,132) (27,53,132) (27,53,132) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (38,67,168) (27,53,132) (27,53,132) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (38,67,168) (27,53,132) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (39,210,268) (39,210,268) 93 272 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (77,228) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 176 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (77,228) (77,228) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 68 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (77,228) (77,228) (94,140) 256 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 234 270 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 153 96 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 153 96 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 153 96 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 153 96 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 153 96 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (38,67,168) (38,67,168) (38,67,168) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (38,67,168) (38,67,168) (38,67,168) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (38,67,168) (38,67,168) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (77,228) 286 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 198 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (37,240) (37,240) 282 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 241 (105,206) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 241 (105,206) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 241 (125,232) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 241 (125,232) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 154 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 154 42 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1037 | 12 -> -1
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
191 2 194 1 47 1 201 1 49 2 150 3 57 2 214 1 133 1 301 3 174 1 219 1 157 1 
191 5 194 1 47 1 88 1 9 1 201 1 49 2 133 4 214 1 57 2 174 7 219 3 134 2 104 1 29 1 138 1 261 1 262 1 292 1 231 1 150 9 301 9 157 1 302 1 
191 5 194 1 47 1 88 1 9 1 201 1 49 2 133 4 214 1 57 2 174 7 219 3 134 2 104 1 29 1 138 1 261 1 262 1 292 1 231 1 150 9 301 9 157 1 302 1 
188 1 150 1 130 1 244 1 214 1 57 1 301 1 49 1 157 1 
188 1 150 1 130 1 244 1 214 1 57 1 301 1 49 1 157 1 
188 1 150 1 130 1 244 1 214 1 57 1 301 1 49 1 157 1 
188 1 150 1 130 1 244 1 214 1 57 1 301 1 49 1 157 1 
191 3 194 1 29 1 9 1 201 1 261 1 49 1 292 1 150 4 57 1 133 2 301 4 174 3 219 1 157 1 134 2 302 1 104 1 
116 1 188 1 46 1 150 1 214 1 57 1 121 1 301 1 49 1 157 1 
50 1 82 1 240 1 248 1 298 1 37 1 39 1 284 1 41 1 144 1 263 1 264 1 
257 1 
82 2 63 1 247 1 4 1 44 1 248 1 257 1 39 2 
82 5 63 1 64 1 83 2 4 2 226 1 84 1 289 1 257 1 162 2 259 1 202 1 109 1 247 1 248 2 267 1 76 1 39 5 218 2 
137 2 11 2 229 1 263 1 144 1 264 1 50 1 249 2 54 1 298 1 77 1 56 1 284 1 285 1 41 1 286 1 
50 1 240 1 298 1 284 1 41 1 144 1 263 1 264 1 
50 1 210 1 268 1 8 1 41 1 144 1 
50 1 298 1 268 1 41 1 144 1 263 1 264 1 
82 1 4 1 248 1 39 1 72 1 
82 2 63 1 247 1 4 1 248 1 35 1 257 1 39 2 
82 1 4 1 39 1 
149 1 63 1 257 1 
75 1 257 1 156 2 
50 2 298 2 284 1 41 2 144 2 263 2 264 2 
50 2 298 1 28 1 41 2 263 1 144 2 264 1 146 1 
50 1 249 1 54 1 113 1 137 1 195 1 11 1 41 1 144 1 263 1 264 1 
50 3 298 1 113 1 41 3 144 3 263 3 264 3 
50 1 41 1 144 1 263 1 264 1 
50 1 28 1 298 1 41 1 144 1 263 1 264 1 146 1 
50 2 298 1 113 1 195 1 41 2 144 2 263 2 264 2 146 1 
50 2 113 1 299 1 8 1 41 2 144 2 263 1 264 1 
50 1 113 1 195 1 41 1 144 1 263 1 264 1 
50 1 298 1 41 1 144 1 263 1 264 1 146 1 
249 1 54 1 137 1 11 1 
249 1 54 1 137 1 11 1 
0 1 128 1 235 1 258 2 98 1 60 1 33 1 239 1 
50 1 22 1 41 1 144 1 263 1 264 1 
149 1 
50 5 26 1 298 1 113 2 151 1 195 1 299 1 8 1 41 5 144 5 263 4 264 4 146 1 
50 1 41 1 144 1 263 1 264 1 
271 1 293 1 
271 1 293 1 
59 1 215 1 
59 1 215 1 
59 1 215 1 
271 1 293 1 
271 1 293 1 
271 1 293 1 
271 1 293 1 
271 1 293 1 
271 1 293 1 
271 1 293 1 
271 1 293 1 
233 1 136 1 271 1 293 1 
82 1 233 1 136 1 39 1 271 1 293 1 103 1 
9 1 292 1 104 1 
46 1 
46 1 
46 1 
46 1 
1 2 82 5 273 2 83 1 4 1 192 1 196 1 162 1 199 1 166 1 122 1 207 1 247 1 248 4 95 1 99 1 218 1 64 2 178 1 63 1 224 1 180 1 65 1 181 1 226 3 257 2 267 1 111 2 75 1 39 5 269 1 156 3 
115 1 1 6 82 9 273 6 4 6 83 2 196 3 162 2 199 3 202 1 12 5 122 4 17 1 247 1 248 7 170 1 95 3 218 2 175 1 64 6 178 3 63 1 224 2 65 2 181 1 226 8 257 5 71 1 72 5 110 1 267 1 75 3 39 9 269 3 156 9 
82 3 1 2 273 2 83 1 196 1 162 1 199 1 202 1 166 1 122 1 248 2 95 1 218 1 63 1 224 1 178 1 64 2 180 1 65 1 226 3 257 3 111 1 75 2 39 3 269 1 156 4 
115 1 1 4 82 4 273 4 83 1 196 2 162 1 199 2 202 1 166 1 122 2 248 3 170 1 95 2 218 1 63 1 224 1 178 2 64 4 180 1 65 1 226 5 257 4 110 1 111 2 75 3 39 4 269 2 156 7 
236 1 
185 1 120 1 
185 1 20 2 255 1 120 3 14 1 246 1 
149 1 20 1 120 1 
118 1 120 1 
185 1 255 1 120 1 
211 1 120 1 
135 1 178 1 158 1 179 1 196 1 161 1 107 3 291 1 260 7 245 1 90 1 16 1 187 2 152 1 253 1 40 2 173 4 223 3 
0 1 158 1 3 1 117 1 243 1 161 5 196 4 199 3 245 2 16 2 167 4 51 1 52 1 128 1 95 3 253 2 173 16 223 8 135 1 25 1 178 4 179 2 291 1 107 15 258 2 260 31 187 3 296 3 235 1 152 1 269 3 78 1 40 3 239 1 
0 1 128 1 235 1 258 2 55 1 260 1 253 1 173 1 40 1 123 1 239 1 16 1 
135 1 178 1 158 1 179 1 196 1 161 1 107 3 291 1 260 7 245 1 16 1 187 2 152 1 253 1 40 2 173 4 223 3 
135 1 178 1 158 1 179 1 196 1 161 1 107 3 291 1 260 7 245 1 16 1 187 2 152 1 253 1 40 2 173 4 223 3 
254 2 242 1 5 1 160 1 137 1 119 1 120 1 11 1 49 1 73 1 145 2 74 1 185 1 186 1 249 1 150 1 54 1 252 2 214 2 57 1 301 1 217 1 221 1 
254 1 27 1 46 1 137 1 119 1 108 1 11 1 165 1 49 1 145 1 265 1 249 1 168 1 53 1 150 1 132 1 252 1 214 1 57 1 301 1 221 1 157 1 
254 1 27 1 46 1 137 1 119 1 108 1 11 1 165 1 49 1 145 1 249 1 168 1 53 1 150 1 132 1 252 1 214 1 57 1 237 1 301 1 221 1 157 1 
254 1 242 1 46 1 137 1 182 1 119 1 108 1 11 1 165 1 49 1 145 1 265 1 249 1 168 1 53 1 150 2 132 1 252 1 214 1 57 1 174 1 301 2 221 1 
254 1 46 1 137 1 182 1 119 1 11 1 165 1 145 1 265 1 249 1 168 1 150 1 132 1 252 1 214 1 174 1 301 1 221 1 
197 1 
82 1 272 1 8 1 144 1 50 1 127 1 93 1 39 1 97 1 210 1 268 1 41 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
82 1 272 1 83 1 162 1 8 1 144 1 50 1 127 1 93 1 267 1 39 1 97 1 210 1 268 1 41 1 218 1 
272 1 82 2 83 1 4 2 43 1 162 1 8 1 119 1 120 1 11 2 50 1 127 1 247 1 93 1 249 2 54 2 210 1 97 1 23 1 218 1 287 1 217 1 221 1 224 1 64 1 226 1 137 2 144 1 74 1 185 1 267 1 39 2 268 1 41 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
82 2 272 1 44 1 4 1 8 1 144 1 50 1 247 1 127 1 93 1 39 2 97 1 210 1 268 1 41 1 
82 1 272 1 83 1 162 1 8 1 144 1 50 1 127 1 93 1 267 1 39 1 97 1 210 1 268 1 41 1 218 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
50 1 272 1 82 1 127 1 93 1 210 1 97 1 39 1 268 1 8 1 41 1 144 1 
0 1 178 1 260 1 258 2 33 1 128 1 235 1 95 1 98 1 173 1 60 1 100 1 239 1 
0 1 196 1 107 1 260 1 258 2 199 1 33 1 126 1 128 1 235 1 98 1 60 1 239 1 
0 1 178 1 196 1 107 1 199 1 260 2 258 2 33 1 128 1 235 1 95 1 269 1 98 1 173 1 60 1 239 1 
0 1 178 1 159 1 260 1 258 2 33 1 128 1 235 1 95 1 98 1 173 1 100 1 239 1 
0 1 159 1 196 1 107 1 260 1 258 2 199 1 33 1 126 1 128 1 235 1 98 1 239 1 
0 1 178 1 159 1 196 1 107 1 199 1 260 2 258 2 33 1 128 1 235 1 95 1 269 1 98 1 173 1 239 1 
0 1 178 1 196 1 107 1 199 1 258 2 260 2 33 1 128 1 235 1 95 1 269 1 98 1 173 1 239 1 
249 1 54 1 137 1 77 1 11 1 
176 1 249 1 54 1 137 1 11 1 
0 1 178 1 6 1 196 1 107 1 199 1 260 2 258 2 33 1 128 1 235 1 95 1 269 1 98 1 173 1 239 1 
249 1 137 1 77 1 11 1 228 1 237 1 
0 1 6 1 196 1 199 1 50 1 128 1 95 1 98 1 173 1 178 1 107 1 258 2 260 2 263 1 144 1 33 1 264 1 146 1 294 1 298 1 235 1 269 1 41 1 239 1 
0 1 159 1 137 1 260 1 68 1 258 2 200 1 11 1 33 1 249 1 128 1 54 1 235 1 98 1 173 1 239 1 
0 1 6 1 87 1 196 1 199 1 50 1 128 1 95 1 98 1 173 1 178 1 107 1 258 2 260 2 263 1 144 1 33 1 264 1 146 1 298 1 235 1 269 1 41 1 239 1 
288 1 0 1 6 1 86 1 195 1 107 1 260 2 258 2 200 1 263 1 144 1 264 1 33 1 50 1 128 1 113 1 235 1 98 1 173 1 300 1 41 1 239 1 
0 1 6 1 195 1 11 1 50 1 249 1 128 1 94 1 54 1 98 1 137 1 256 1 107 1 260 1 258 2 228 1 144 1 263 1 33 1 264 1 113 1 235 1 77 1 300 1 41 1 239 1 
0 1 135 1 178 1 179 1 291 1 260 2 258 2 245 1 33 1 149 1 187 1 128 1 235 1 152 1 98 1 40 1 173 2 60 1 223 1 239 1 
0 1 6 1 107 1 260 2 258 2 33 1 167 1 296 1 128 1 234 1 235 1 98 1 270 1 173 1 239 1 
0 1 279 1 128 1 235 1 153 1 96 1 258 2 55 1 239 1 
0 1 279 1 128 1 235 1 153 1 96 1 258 2 55 1 239 1 
0 1 279 1 128 1 235 1 153 1 96 1 258 2 55 1 239 1 
0 1 279 1 128 1 235 1 153 1 96 1 258 2 55 1 239 1 
0 1 279 1 128 1 235 1 153 1 96 1 258 2 55 1 239 1 
50 2 34 1 70 1 41 2 81 1 144 2 
66 1 137 1 119 1 120 1 11 1 142 1 74 1 185 1 249 1 186 1 54 1 252 1 217 1 221 1 
46 1 137 1 119 1 67 1 108 1 11 1 142 1 165 1 265 1 249 1 168 1 38 1 252 1 221 1 
46 1 137 2 119 1 67 1 108 1 11 2 142 1 165 1 265 1 249 2 168 1 38 1 252 1 237 1 221 1 
249 1 168 1 46 1 137 1 252 1 277 1 119 1 108 1 67 1 11 1 165 1 221 1 265 1 
164 1 
64 1 63 1 83 1 226 1 289 1 257 1 162 1 109 1 267 1 218 1 
1 2 178 1 64 2 273 2 226 2 257 2 196 1 199 1 75 2 95 1 269 1 156 4 
82 1 63 1 247 1 4 1 257 1 39 1 
82 3 83 2 4 4 43 2 48 1 163 1 162 2 119 3 202 1 120 2 11 4 203 1 247 2 249 4 281 1 54 2 216 1 23 1 287 1 218 2 217 1 221 2 102 1 224 2 64 2 255 1 226 2 137 4 69 2 74 1 148 1 185 2 267 1 39 3 
50 1 249 1 54 1 298 1 137 1 77 1 284 1 11 1 41 1 144 1 263 1 286 1 264 1 
1 2 273 2 64 2 224 1 63 2 83 1 43 1 226 1 257 4 162 1 267 1 75 2 40 1 156 4 218 1 
82 1 83 1 4 1 162 1 91 1 247 1 21 1 218 1 64 1 63 1 226 1 257 2 267 1 297 1 75 1 39 1 156 1 
224 1 83 1 226 1 255 1 118 1 137 1 162 1 198 1 119 2 120 2 11 1 14 1 185 1 249 1 267 1 169 1 54 1 218 1 221 1 
82 1 1 5 273 5 3 1 43 1 4 1 83 2 193 1 275 1 196 2 162 2 278 1 199 2 89 1 124 1 167 1 247 1 209 2 95 2 218 2 224 1 64 5 178 2 63 2 226 8 257 5 139 1 230 1 267 2 296 1 75 3 39 1 155 1 269 2 156 6 
82 1 190 1 240 1 83 1 196 1 162 1 245 1 50 1 282 1 209 2 284 1 218 1 178 1 64 1 179 1 226 2 291 1 144 1 263 1 264 1 267 1 298 1 37 1 39 1 41 1 
149 1 63 1 64 1 226 1 289 1 257 1 109 1 
92 1 171 1 141 1 
92 1 171 1 141 1 
92 1 171 1 141 1 
92 1 171 1 79 1 
92 1 171 1 79 1 
92 1 171 1 79 1 
92 1 171 1 
271 1 293 1 
18 1 92 1 45 1 171 1 184 1 
0 1 178 2 179 2 161 2 196 2 107 5 291 1 258 2 260 10 245 2 128 1 187 3 235 1 282 1 55 1 173 5 239 1 223 5 
0 1 178 1 161 1 258 2 260 2 128 1 235 1 95 1 55 1 173 2 239 1 223 1 
0 1 178 1 196 1 107 2 258 2 260 4 199 1 128 1 235 1 95 1 55 1 269 1 173 2 239 1 
0 3 179 1 243 1 161 1 107 2 260 3 258 6 245 1 204 1 128 3 187 1 235 3 55 1 173 1 238 1 239 3 223 2 
0 5 3 1 117 1 243 2 276 1 161 5 196 5 199 3 245 3 204 1 167 4 52 1 128 5 95 3 55 1 173 16 223 9 135 1 25 1 178 5 179 3 291 2 107 18 258 10 260 34 187 4 296 3 235 5 152 1 269 3 78 1 40 1 238 1 239 5 
0 1 3 1 196 1 278 1 245 1 167 1 128 1 55 1 173 4 223 2 135 1 178 1 179 1 107 4 291 1 260 8 258 2 296 1 187 2 235 1 152 1 40 1 239 1 
0 2 3 1 196 1 276 1 161 1 278 1 245 1 167 2 128 2 95 1 55 1 173 6 223 3 135 1 178 2 179 1 291 1 107 5 260 11 258 4 187 2 296 1 235 2 152 1 269 1 78 1 40 1 239 2 
0 3 3 1 275 1 243 1 276 1 161 1 196 3 278 1 199 2 245 1 89 1 124 1 167 1 128 3 95 2 55 1 173 9 223 4 135 1 178 3 179 1 291 1 107 10 260 19 258 6 139 1 296 1 187 3 235 3 152 1 269 2 40 1 239 3 
0 4 3 1 275 1 243 2 276 1 161 1 196 1 278 1 199 1 89 1 124 1 167 1 128 4 95 2 55 1 173 7 223 2 178 2 107 5 260 12 258 8 139 1 296 1 187 1 235 4 269 2 239 4 
0 1 3 1 196 1 278 1 245 1 167 1 128 1 55 1 173 4 223 2 135 1 178 1 179 1 107 4 291 1 260 8 258 2 296 1 187 2 235 1 152 1 40 1 239 1 
0 2 3 1 275 1 243 1 161 1 196 2 278 1 199 2 89 1 124 1 167 1 128 2 95 2 55 1 173 6 223 2 178 2 107 7 260 13 258 4 139 1 296 1 187 1 235 2 269 2 239 2 
0 4 3 1 275 1 243 2 161 2 276 1 196 2 278 1 199 1 245 1 89 1 124 1 167 1 128 4 95 2 55 1 173 10 223 5 135 1 178 3 179 1 291 1 107 8 139 1 260 18 258 8 296 1 187 3 235 4 152 1 269 2 40 1 239 4 
0 4 3 1 275 1 243 2 161 3 196 2 278 1 199 2 89 1 124 1 167 1 128 4 95 3 55 1 173 9 223 4 178 3 107 7 139 1 260 16 258 8 296 1 187 1 235 4 269 3 238 1 239 4 
135 2 178 1 179 3 196 1 161 3 107 4 291 1 260 7 245 3 187 3 152 1 173 3 223 6 
0 4 3 1 275 1 243 2 161 1 196 2 278 1 199 1 245 1 89 1 124 1 167 1 128 4 95 2 55 1 173 10 223 4 135 1 178 3 179 1 291 1 107 8 139 1 260 18 258 8 296 1 187 3 235 4 152 1 269 2 40 1 238 1 239 4 
0 2 135 1 178 1 179 1 243 1 196 1 161 1 291 1 107 4 260 8 258 4 245 1 187 2 128 2 235 2 152 1 40 1 173 4 223 3 239 2 
135 1 178 1 179 1 196 1 107 3 291 1 260 6 245 1 149 1 187 2 152 1 40 1 173 3 223 2 
0 1 178 1 196 1 276 1 161 1 107 2 199 1 258 2 260 4 128 1 235 1 95 1 269 1 173 2 223 1 239 1 
3 1 178 1 196 1 161 1 107 4 199 1 260 7 167 2 296 1 95 1 269 1 78 1 173 3 223 1 
0 1 243 1 196 5 161 4 199 2 245 2 167 2 128 1 282 1 95 2 173 13 223 8 135 1 178 5 179 2 30 1 291 2 107 12 260 25 258 2 187 4 296 2 234 1 235 1 152 1 269 2 78 1 40 1 239 1 
167 1 107 1 260 1 
296 1 260 1 173 1 
178 1 161 1 196 1 107 3 260 6 199 1 187 1 36 1 95 1 269 1 173 3 223 2 
0 2 3 1 275 1 243 1 161 1 196 2 278 1 199 2 89 1 124 1 167 1 128 2 95 2 55 1 173 6 223 2 178 2 107 7 260 13 258 4 139 1 296 1 187 1 235 2 269 2 239 2 
178 1 179 1 196 1 161 1 291 1 107 3 260 6 245 1 187 1 173 3 223 2 
135 1 0 1 179 1 243 1 161 1 107 2 260 3 258 2 245 1 204 1 187 1 128 1 235 1 152 1 173 1 223 2 239 1 
50 1 251 1 299 1 8 1 41 1 144 1 
290 1 31 1 8 1 144 1 147 1 50 1 251 1 299 1 212 1 58 1 41 1 
137 4 7 1 119 1 10 1 11 4 120 1 74 1 185 1 249 4 54 1 237 1 217 1 221 1 
255 1 137 2 163 1 119 2 69 1 11 2 120 1 203 1 148 1 185 1 249 2 208 1 216 1 221 1 
249 1 46 1 54 1 137 1 119 1 11 1 165 1 221 1 
137 2 119 1 11 2 120 1 15 1 265 1 185 1 249 2 237 1 189 1 221 1 
137 4 119 2 10 1 69 1 11 5 120 3 74 1 185 2 249 5 129 1 54 1 237 1 80 1 189 1 217 1 221 2 
137 4 119 2 10 1 69 1 11 5 120 3 13 1 74 1 185 2 249 5 54 1 237 1 80 1 189 1 217 1 221 2 
241 1 255 1 137 1 119 1 120 1 11 1 263 1 144 1 264 1 50 1 185 1 206 1 249 1 113 1 54 1 41 1 221 1 
241 1 255 1 137 1 119 1 120 1 69 1 11 1 263 1 144 1 264 1 50 1 185 1 206 1 249 1 113 1 41 1 221 1 
241 1 255 1 137 1 119 1 120 1 69 1 11 1 263 1 144 1 264 1 50 1 185 1 249 1 232 1 113 1 41 1 221 1 
82 2 4 1 118 1 7 1 119 1 120 4 11 3 125 1 20 1 249 3 250 1 54 1 211 1 221 1 63 1 255 1 137 3 257 1 69 1 32 1 143 1 185 1 39 2 
82 2 63 1 4 1 255 1 118 1 137 3 7 1 257 1 105 1 119 1 32 1 69 1 11 3 120 4 185 1 249 3 20 1 250 1 54 1 211 1 39 2 221 1 
249 1 137 1 119 1 213 1 11 1 221 1 
255 1 137 6 163 1 119 3 11 7 183 1 120 3 229 1 14 1 265 1 205 1 148 1 185 2 249 7 129 1 54 2 213 1 80 1 237 1 189 1 221 2 
50 1 113 1 41 1 144 1 263 1 264 1 
82 3 83 2 4 2 118 1 162 2 11 1 120 2 247 1 249 1 248 1 20 1 250 1 54 1 172 1 218 2 102 1 220 1 63 1 64 1 226 1 289 1 137 1 257 1 105 1 140 1 109 1 267 2 39 3 
255 1 137 2 119 2 11 2 120 2 14 1 185 1 20 1 249 2 169 1 213 1 237 1 221 1 
149 1 185 1 249 1 54 1 137 1 119 1 120 1 11 1 217 1 221 1 74 1 
241 1 255 1 137 1 119 1 120 1 11 1 263 1 144 1 264 1 50 1 185 1 249 1 232 1 113 1 54 1 41 1 221 1 
255 1 137 1 163 1 119 2 69 1 11 1 183 1 120 1 14 1 148 1 185 1 249 1 221 1 
106 1 154 1 81 1 24 1 
42 1 283 1 106 1 
106 2 154 1 81 1 24 1 
42 1 82 1 248 1 283 1 39 1 106 2 154 1 81 1 114 1 24 1 
191 1 194 1 150 1 201 1 57 1 301 1 49 1 157 1 
191 3 194 2 201 2 49 1 19 1 266 1 280 1 150 4 57 1 133 1 174 2 301 4 219 1 222 1 
191 1 85 1 194 1 138 1 201 1 49 1 112 1 150 2 57 1 301 2 174 1 157 1 
191 1 19 2 274 1 280 2 194 1 150 3 201 1 57 1 301 3 49 1 157 1 222 1 
225 1 191 2 295 2 227 1 
150 1 57 1 301 1 49 1 101 1 157 1 
191 1 194 1 150 2 88 1 201 1 57 1 174 1 301 2 49 1 157 1 
61 1 
191 1 194 1 150 1 201 1 57 1 301 1 49 1 157 1 
191 1 194 1 88 1 201 1 49 1 280 1 150 3 57 1 174 1 301 3 157 1 
191 1 266 1 133 1 219 1 
191 1 194 1 
149 1 191 1 194 1 201 1 
191 1 194 1 150 1 201 1 57 1 301 1 49 1 
150 1 214 1 145 1 
191 1 194 1 201 1 49 1 19 1 280 2 150 3 57 1 301 3 157 1 62 1 222 1 
191 1 194 1 150 2 201 1 57 1 174 1 301 2 49 1 134 1 
191 1 9 1 261 1 49 1 292 1 150 1 57 1 133 1 301 1 157 1 104 1 
191 1 194 1 150 1 57 1 301 1 49 1 157 1 
194 2 150 1 201 1 57 1 301 1 49 1 157 1 
177 1 150 1 131 1 57 1 301 1 49 1 157 1 
191 2 194 1 88 1 201 1 49 1 262 1 150 3 57 1 133 1 301 3 174 2 219 1 157 1 
2 1 150 1 46 1 57 1 301 1 49 1 157 1 
191 2 194 1 29 1 201 1 49 2 150 4 57 2 133 1 301 4 174 2 219 1 157 1 134 1 

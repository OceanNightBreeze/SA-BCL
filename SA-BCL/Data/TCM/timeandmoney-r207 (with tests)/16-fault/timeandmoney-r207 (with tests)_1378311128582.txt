#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (19,37,94,340) (19,37,94,340) (19,37,94,340) 119 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 174 (155,232) (155,232) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 174 (155,232) (155,232) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 174 (155,232) (155,232) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 174 (155,232) (155,232) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 174 (222,337) (222,337) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (19,37,94,340) (19,37,94,340) (19,37,94,340) 119 330 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (19,37,94,340) (19,37,94,340) (19,37,94,340) 119 330 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 7 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 7 230 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (8,43) (8,43) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (19,37,94,340) (19,37,94,340) (87,126,300) (87,126,300) (87,126,300) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (19,37,94,340) (19,37,94,340) (87,126,300) (87,126,300) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (19,37,94,340) (19,37,94,340) (87,126,300) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 323 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 25 370 12 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 63 181 (59,192) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 9 (67,97) (67,97) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> <=
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> >>
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
119 1 333 1 369 1 340 2 37 2 247 1 94 2 
174 1 155 1 333 1 369 1 340 1 37 1 247 1 232 1 94 1 
174 1 155 1 333 1 369 1 340 1 37 1 247 1 232 1 94 1 
174 1 155 1 333 1 369 1 340 1 37 1 247 1 232 1 94 1 
174 1 155 1 333 1 369 1 340 1 37 1 247 1 232 1 94 1 
129 2 340 4 38 1 37 1 67 1 94 1 19 3 41 1 9 2 21 1 333 1 334 2 97 1 371 1 264 1 247 4 54 1 74 1 
174 1 222 1 333 1 369 1 337 1 264 1 340 1 39 1 37 1 247 1 94 1 
19 1 330 1 119 1 333 1 369 1 90 1 340 3 37 2 247 2 94 2 
19 1 330 1 119 1 333 1 369 1 90 1 340 3 37 2 247 2 94 2 
293 1 271 1 298 1 299 1 316 1 80 1 200 1 18 1 317 1 205 1 121 1 344 1 124 1 142 1 
294 1 
349 1 294 1 293 2 121 2 102 1 182 1 124 1 348 1 
258 1 0 1 294 1 357 1 293 5 228 1 102 1 171 2 93 1 348 1 349 2 31 1 331 2 121 5 207 1 345 1 265 1 320 2 124 2 
294 1 102 1 212 1 
294 1 149 2 312 1 
135 1 317 2 271 2 298 2 316 2 200 1 142 2 18 2 
168 1 26 1 281 1 170 1 169 1 237 1 28 1 196 1 116 1 201 1 200 1 172 1 151 1 223 1 288 2 176 1 226 2 71 1 178 1 267 2 227 2 99 1 128 1 249 1 271 2 298 3 316 2 132 1 18 2 135 1 317 2 20 1 318 1 24 2 140 1 112 1 142 3 
317 1 205 1 271 1 298 1 316 1 299 1 80 1 200 1 142 1 18 1 
294 1 293 1 146 1 298 1 102 1 81 1 317 1 205 1 121 1 338 1 353 1 346 1 142 1 257 1 
294 1 293 2 146 1 271 2 298 2 299 1 316 2 102 1 80 1 200 1 18 2 317 2 205 2 121 2 344 1 353 1 346 1 142 2 257 1 
293 1 121 1 124 1 7 1 
349 1 166 1 294 1 293 2 121 2 102 1 124 1 348 1 
349 1 293 1 121 1 
271 1 298 2 316 1 17 1 18 1 317 2 135 2 208 1 142 2 
127 1 154 1 256 1 
99 1 215 1 237 1 298 1 196 1 132 1 135 1 20 1 223 1 288 1 24 1 176 1 140 1 71 1 267 1 142 1 
135 1 212 1 
99 1 237 1 298 2 316 1 196 1 132 1 61 1 18 1 50 1 317 1 20 1 223 1 288 1 24 1 176 1 140 1 71 1 154 1 267 1 142 2 
306 1 271 1 298 5 316 4 81 1 61 2 18 4 50 1 366 1 317 5 135 1 208 1 98 1 142 5 
317 2 205 1 298 2 153 1 316 2 80 1 142 2 18 2 
135 1 317 3 271 1 298 3 316 3 61 1 142 3 18 3 
317 1 205 1 298 1 316 1 80 1 142 1 18 1 
317 1 205 1 208 1 271 1 298 1 316 1 17 1 142 1 18 1 
168 1 26 1 281 1 146 1 170 1 169 1 28 1 237 1 196 1 116 1 200 1 50 1 205 1 121 1 151 1 223 1 208 1 176 1 288 1 226 2 71 1 178 1 353 1 267 1 125 1 227 1 99 1 293 1 271 2 298 4 316 3 132 1 61 1 18 3 135 1 317 3 20 1 24 1 140 1 111 1 112 1 346 1 257 1 142 4 
135 1 317 2 306 1 298 2 316 1 81 1 61 1 142 2 18 1 
294 1 293 1 146 1 271 1 298 3 316 3 48 1 61 2 18 3 50 1 317 3 205 1 121 1 208 1 353 1 125 1 346 1 142 3 257 1 
271 1 298 2 316 2 61 1 18 2 317 2 208 1 154 1 256 1 142 2 
99 1 237 1 298 1 196 1 132 1 135 1 20 1 223 1 288 1 24 1 176 1 140 1 71 1 267 1 142 1 
99 1 192 1 237 1 298 1 196 1 135 1 20 1 52 1 223 1 288 1 24 1 140 1 71 1 267 1 142 1 
191 1 2 1 168 1 281 2 170 1 169 1 116 1 150 1 351 1 332 1 151 1 226 2 13 1 154 2 213 1 227 4 127 2 16 1 318 2 319 1 112 1 256 2 
317 1 205 1 298 1 353 1 316 1 153 1 142 1 18 1 
83 1 276 1 66 1 
15 1 83 2 326 1 283 1 66 2 272 1 
83 1 66 1 
83 1 66 1 
15 1 272 1 
15 1 272 1 
15 1 272 1 
83 1 66 1 183 1 
83 1 66 1 183 1 
83 1 66 1 183 1 
83 1 210 1 66 1 
83 1 210 1 66 1 
83 1 210 1 66 1 
47 1 66 1 198 1 6 1 121 1 53 1 266 1 34 1 293 1 77 1 315 1 298 2 316 2 104 1 18 2 303 1 135 1 317 2 83 1 138 1 275 1 276 1 253 1 142 2 
47 2 294 1 293 2 77 2 79 2 326 1 158 1 198 2 66 2 104 2 363 1 303 3 285 1 83 2 121 2 234 1 53 1 88 1 374 1 
243 1 85 2 264 2 39 1 74 1 
371 1 264 1 74 1 
371 1 264 1 39 1 
243 1 85 1 72 1 264 3 39 1 74 2 
243 1 85 1 264 2 39 1 74 1 211 1 
114 1 191 1 2 1 89 1 91 2 5 1 171 1 149 3 348 1 349 1 31 1 331 1 332 1 121 5 13 1 265 3 124 4 312 1 357 2 293 5 294 2 57 1 58 2 315 1 60 1 102 1 82 1 138 1 139 2 110 1 253 1 320 1 
293 2 121 2 162 1 230 1 124 2 33 1 7 1 
191 1 2 1 89 1 91 2 5 1 171 1 149 4 331 1 121 3 332 1 13 1 265 3 124 2 312 2 294 3 293 3 357 2 57 1 58 2 102 1 82 1 138 1 139 1 110 1 345 1 320 1 
191 2 2 2 89 1 91 4 5 1 171 1 149 7 331 1 121 4 332 2 177 1 13 2 265 5 124 3 312 3 214 1 294 4 293 4 357 4 76 1 57 1 58 4 102 1 82 2 138 2 139 2 110 1 345 1 320 1 
238 1 
160 1 71 1 212 1 
273 1 71 1 
20 1 223 1 71 1 
310 1 71 1 
223 1 71 1 
160 2 134 1 20 1 223 1 71 3 327 1 
227 7 191 1 180 2 280 1 281 3 282 1 131 1 30 1 147 1 202 3 365 1 307 2 332 1 69 1 136 1 318 4 122 1 355 1 
143 1 168 1 281 3 170 1 147 1 30 1 202 2 307 1 151 1 122 2 226 2 123 1 227 6 180 1 101 1 156 1 78 1 131 1 365 1 318 3 136 1 235 1 112 1 45 1 
191 1 143 1 168 2 280 1 281 4 170 2 282 1 30 1 147 1 202 4 68 1 307 2 173 1 332 1 69 1 151 2 122 1 226 4 227 9 180 3 131 1 318 5 136 1 112 2 
227 7 191 1 180 2 280 1 281 3 282 1 131 1 30 1 147 1 202 3 365 1 307 2 332 1 69 1 136 1 318 4 122 1 
227 7 191 1 180 2 280 1 281 3 282 1 131 1 30 1 147 1 202 3 365 1 307 2 332 1 69 1 136 1 318 4 122 1 
237 1 347 2 196 1 94 1 8 1 223 1 288 1 225 2 71 1 267 1 247 1 56 1 99 1 340 1 362 1 37 1 302 1 343 1 137 2 43 1 186 1 24 1 369 2 
347 1 196 1 94 1 240 1 244 1 333 1 288 1 70 1 225 1 72 1 264 2 267 1 74 1 247 1 126 1 99 1 340 1 37 1 39 1 300 1 137 1 24 1 369 1 371 1 87 1 46 1 
347 1 196 1 94 1 240 1 333 1 288 1 70 1 225 1 72 1 264 2 267 1 74 1 247 1 126 1 75 1 99 1 340 2 37 1 39 1 300 1 19 1 137 1 24 1 369 1 371 1 87 1 46 1 
113 1 347 1 196 1 94 1 240 1 244 1 288 1 70 1 72 1 225 1 264 2 267 1 74 1 247 2 126 1 99 1 340 3 362 1 37 1 39 1 300 1 19 2 137 1 24 1 369 1 371 1 46 1 
113 1 99 1 347 1 196 1 340 2 39 1 240 1 19 2 244 1 137 1 288 1 24 1 369 1 70 1 371 1 72 1 225 1 264 2 267 1 74 1 247 1 126 1 
220 1 
279 2 321 1 324 2 193 1 146 1 237 2 196 1 197 4 149 2 242 2 205 1 331 1 288 2 290 1 338 1 56 1 99 1 294 2 293 5 157 2 298 1 102 1 301 1 302 1 108 1 23 1 110 1 24 2 64 1 165 1 346 1 257 1 171 1 348 3 349 6 31 1 121 5 223 1 71 1 353 1 265 2 311 1 267 2 312 2 356 1 357 2 269 1 361 2 231 2 364 2 81 1 317 1 367 1 320 1 142 1 
321 1 279 1 193 1 146 1 197 2 348 1 349 2 205 1 121 3 338 1 353 1 311 1 293 3 269 1 298 1 182 1 81 1 317 1 64 1 346 1 257 1 142 1 
321 1 193 1 146 1 197 3 348 1 349 1 205 1 121 3 338 1 353 1 311 1 293 3 294 1 269 1 298 1 102 1 182 1 81 1 364 1 317 1 64 1 346 1 257 1 142 1 
321 1 279 1 193 1 146 1 197 3 348 1 349 2 205 1 121 3 338 1 353 1 311 1 293 3 294 1 269 1 361 1 298 1 182 1 102 1 81 1 364 1 317 1 64 1 346 1 257 1 142 1 
279 4 321 1 324 2 146 1 193 1 197 6 242 2 205 1 331 1 152 1 289 1 290 1 338 1 293 5 294 5 250 1 157 2 298 1 102 5 64 1 346 1 257 1 259 1 171 1 348 3 349 7 31 1 121 5 353 1 311 1 265 1 312 2 356 1 357 1 269 1 361 4 182 1 231 2 81 1 364 4 317 1 44 1 320 1 142 1 
321 1 279 2 324 2 146 1 193 1 197 4 149 2 242 2 205 1 331 1 290 1 338 1 293 4 294 2 157 2 298 1 102 1 64 1 346 1 165 1 257 1 171 1 348 2 349 4 31 1 121 4 353 1 311 1 265 1 312 2 356 1 357 1 269 1 361 2 231 2 81 1 364 2 317 1 320 1 142 1 
279 2 259 1 321 1 324 2 193 1 146 1 171 1 197 4 348 2 349 4 242 2 31 1 205 1 331 1 121 4 152 1 290 1 338 1 353 1 265 1 311 1 312 2 356 1 294 1 357 1 293 4 269 1 361 2 157 2 250 1 298 1 102 1 231 2 364 2 81 1 317 1 64 1 320 1 346 1 257 1 142 1 
279 2 259 1 321 1 324 2 193 1 146 1 171 1 197 4 348 2 349 4 242 2 31 1 205 1 331 1 121 4 152 1 290 1 338 1 353 1 265 1 311 1 312 2 356 1 294 1 357 1 293 4 269 1 361 2 157 2 250 1 298 1 102 1 231 2 364 2 81 1 317 1 64 1 320 1 346 1 257 1 142 1 
279 2 259 1 321 1 324 2 193 1 146 1 171 1 197 4 149 2 348 2 349 4 31 1 205 1 331 1 308 1 121 4 336 2 290 1 338 1 353 1 265 1 311 1 313 2 294 1 357 1 293 4 269 1 361 2 298 1 297 1 102 1 231 2 364 2 81 1 217 1 317 1 64 1 320 1 346 1 257 1 142 1 
259 1 321 1 279 3 324 2 193 1 146 1 171 1 197 5 348 2 242 2 349 5 31 1 205 1 331 1 121 4 152 1 290 1 338 1 353 1 265 1 311 1 312 2 356 1 294 1 357 1 293 4 269 1 157 2 250 1 361 3 298 1 102 1 231 2 81 1 364 3 317 1 44 1 64 1 320 1 346 1 257 1 142 1 
259 1 321 1 279 3 324 2 193 1 146 1 171 1 197 5 348 2 242 2 349 5 31 1 205 1 331 1 121 4 152 1 290 1 338 1 353 1 265 1 311 1 312 2 356 1 294 1 357 1 293 4 269 1 157 2 250 1 361 3 298 1 102 1 231 2 81 1 364 3 317 1 44 1 64 1 320 1 346 1 257 1 142 1 
321 1 279 2 324 2 146 1 193 1 197 4 149 2 205 1 331 1 290 1 336 2 338 1 293 4 294 1 298 1 102 1 64 1 346 1 165 1 257 1 171 1 348 2 349 4 31 1 308 1 121 4 353 1 311 1 265 1 313 2 357 1 269 1 361 2 231 2 81 1 364 2 317 1 320 1 142 1 
168 2 281 1 170 2 169 2 237 2 284 1 196 2 116 2 201 2 351 1 32 1 244 1 51 1 151 2 223 2 288 8 71 3 226 4 263 1 178 1 267 7 75 1 227 2 56 1 99 2 314 1 249 1 298 1 316 1 61 1 18 1 302 1 133 1 317 1 318 1 24 8 112 2 254 1 142 1 
191 1 168 1 2 1 145 1 281 2 170 1 169 1 115 1 116 1 332 1 151 1 208 1 226 2 13 1 154 1 227 3 127 1 271 1 298 1 316 1 18 1 317 1 82 1 318 1 112 1 256 1 142 1 
191 1 280 1 168 1 281 3 282 1 170 1 169 1 147 1 116 1 202 2 307 1 351 1 69 1 332 1 151 1 226 2 154 1 212 1 227 6 180 2 127 1 131 1 135 2 318 3 112 1 256 1 
191 2 167 1 168 2 2 2 281 9 170 2 169 1 115 1 30 2 199 1 202 2 116 2 203 1 332 4 151 2 226 4 13 4 178 1 154 16 227 22 127 16 249 1 359 2 156 4 101 4 135 1 82 4 318 13 235 1 163 2 112 2 256 6 
168 1 281 1 169 1 115 1 170 1 237 1 196 1 116 1 50 1 151 1 223 1 176 1 288 1 71 1 226 2 178 1 267 1 227 2 99 1 295 1 249 1 215 1 298 2 316 1 341 1 132 1 61 1 18 1 135 1 317 1 20 1 318 1 24 1 219 1 140 1 112 1 256 1 142 2 
189 2 191 3 280 1 323 2 2 2 281 10 282 1 325 1 237 1 147 1 196 2 202 6 50 1 244 1 332 3 151 3 288 3 13 2 154 7 99 2 249 1 298 3 61 1 18 1 20 2 218 1 24 3 112 3 256 7 168 3 170 3 115 1 169 3 28 2 30 4 116 3 307 1 69 1 223 2 176 2 226 6 71 2 178 1 267 3 227 20 180 2 127 7 131 1 316 1 132 2 40 2 135 2 317 1 82 2 233 1 318 10 368 2 140 2 142 3 
227 2 127 1 168 1 169 1 170 1 30 1 202 1 116 1 150 1 351 1 332 1 318 2 151 1 226 2 13 1 154 1 112 1 256 1 
227 2 127 1 191 1 168 1 2 1 16 1 281 2 169 1 170 1 116 1 351 1 151 1 226 2 154 1 112 1 256 1 
191 1 168 1 2 1 281 2 170 1 169 1 30 1 116 1 202 1 351 1 332 1 151 1 13 1 226 2 154 2 227 4 127 2 82 1 318 2 112 1 256 2 
227 2 127 1 168 1 169 1 170 1 30 1 202 1 116 1 133 1 150 1 332 1 318 2 151 1 226 2 13 1 154 1 112 1 256 1 
227 2 127 1 191 1 168 1 2 1 16 1 281 2 169 1 170 1 116 1 133 1 151 1 226 2 154 1 112 1 256 1 
227 4 191 1 127 2 2 1 168 1 281 2 169 1 170 1 116 1 133 1 82 1 332 1 318 2 151 1 226 2 13 1 154 2 112 1 256 2 
227 4 191 1 127 2 2 1 168 1 281 2 169 1 170 1 30 1 202 1 116 1 82 1 332 1 318 2 151 1 226 2 13 1 154 2 112 1 256 2 
168 1 281 1 169 1 170 1 28 1 237 1 196 1 116 1 151 1 223 1 176 1 288 1 71 1 226 2 178 1 267 1 227 2 99 1 249 1 298 1 132 1 135 1 20 1 318 1 24 1 140 1 112 1 142 1 
168 1 192 1 281 1 169 1 170 1 237 1 196 1 116 1 52 1 151 1 223 1 288 1 71 1 226 2 178 1 267 1 227 2 248 1 99 1 249 1 298 1 135 1 20 1 318 1 24 1 140 1 112 1 142 1 
191 1 168 1 2 1 281 2 170 1 169 1 115 1 30 1 116 1 202 1 332 1 151 1 13 1 226 2 154 2 227 4 127 2 82 1 318 2 112 1 256 2 
191 1 2 1 168 1 281 2 169 1 170 1 28 1 30 1 196 1 202 1 116 1 332 1 151 1 223 1 176 1 288 1 13 1 71 1 226 2 154 2 267 1 227 4 75 1 127 2 99 1 298 1 132 1 40 1 82 1 20 1 318 2 24 1 140 1 112 1 256 2 142 1 
191 1 2 1 168 1 281 1 170 1 169 1 115 1 30 1 202 1 116 1 332 1 151 1 208 1 224 1 226 2 13 1 154 1 227 3 127 1 271 1 298 1 316 1 18 1 317 1 82 1 318 2 112 1 142 1 256 1 
190 3 143 2 191 4 280 1 144 1 168 4 2 3 3 1 281 16 282 1 170 4 147 1 30 3 202 5 329 1 307 1 173 1 69 1 245 1 332 4 151 4 175 1 11 1 12 1 226 8 13 3 35 1 227 33 180 2 339 1 156 2 101 2 131 1 82 3 318 17 235 2 277 1 370 1 112 4 373 1 25 1 
190 4 143 2 191 6 144 2 168 3 2 6 3 1 281 22 170 3 30 4 202 5 329 1 173 1 245 1 332 7 175 1 151 3 11 1 12 1 226 6 13 7 35 2 227 46 180 1 339 1 156 4 101 4 359 2 82 7 318 24 304 1 235 2 370 1 163 2 112 3 25 1 
190 4 191 7 143 2 2 5 144 1 280 2 3 1 281 27 282 2 147 2 202 10 329 1 332 9 245 1 151 4 12 1 11 1 13 7 339 1 101 5 156 5 304 1 62 1 163 2 112 4 25 1 168 4 170 4 30 7 307 2 173 1 69 2 175 1 226 8 35 2 227 60 180 3 359 2 131 2 82 7 318 33 235 3 370 1 277 1 
190 4 143 2 191 4 280 1 144 1 168 4 2 3 3 1 281 17 282 1 170 4 147 1 30 3 202 5 329 1 307 1 173 1 69 1 245 1 332 4 151 4 175 1 11 1 12 1 226 8 13 3 35 1 227 35 180 2 339 1 156 2 101 2 131 1 82 3 318 18 304 1 235 2 277 1 370 1 112 4 25 1 
190 4 143 2 191 5 280 1 144 1 168 3 2 4 3 1 281 20 282 1 170 3 147 1 30 3 202 6 329 1 307 1 173 1 69 1 245 1 332 6 175 1 151 3 11 1 12 1 226 6 13 5 35 1 227 42 180 3 339 1 156 3 101 3 359 1 131 1 82 5 318 22 304 1 235 2 370 1 163 1 112 3 25 1 
47 1 83 1 234 1 77 1 326 1 4 1 66 1 198 1 88 1 104 1 
276 1 275 1 
47 1 83 1 184 1 287 1 77 1 66 1 198 1 354 1 104 1 
352 1 183 1 
107 1 283 1 210 1 
47 1 294 1 293 1 77 1 79 1 326 1 158 1 198 1 66 1 104 1 303 2 285 1 83 1 121 1 234 1 53 1 88 1 374 1 
47 1 294 1 293 1 77 1 79 1 326 1 158 1 198 1 66 1 104 1 303 2 285 1 83 1 121 1 234 1 53 1 88 1 374 1 
47 1 294 1 293 1 77 1 79 1 326 1 158 1 198 1 66 1 104 1 303 2 285 1 83 1 121 1 234 1 53 1 88 1 374 1 
283 1 352 1 183 1 
283 1 352 1 183 1 
107 1 210 1 
107 1 283 1 210 1 
6 1 34 1 
47 1 194 1 66 1 198 1 6 1 285 1 121 1 124 1 266 1 34 1 293 1 77 1 79 1 315 1 298 2 316 2 104 1 18 2 303 1 135 1 317 2 83 1 138 1 275 1 276 1 253 1 142 2 
322 1 168 1 281 1 169 1 115 1 170 1 196 1 116 1 201 2 95 1 118 1 151 1 288 2 226 2 178 1 267 2 292 1 227 2 99 1 249 1 298 2 317 2 318 1 24 2 112 1 188 1 254 1 142 2 
56 1 99 1 343 1 137 1 130 1 223 1 246 1 24 1 288 1 237 1 71 1 196 1 267 1 302 1 
99 1 130 1 260 1 196 1 39 1 49 1 240 1 244 1 137 1 288 1 24 1 70 1 371 1 72 1 264 2 267 1 74 1 46 1 
75 1 99 1 130 1 260 1 196 1 39 1 49 1 240 1 244 1 137 1 288 2 24 2 70 1 371 1 72 1 264 2 267 2 74 1 46 1 
99 1 260 1 196 1 39 1 240 1 244 1 137 1 288 1 24 1 70 1 371 1 72 1 264 2 267 1 73 1 74 1 46 1 
161 1 
258 1 357 1 294 1 228 1 171 1 102 1 31 1 331 1 320 1 265 1 
191 2 236 1 323 1 357 5 294 5 2 2 58 5 91 5 149 10 82 2 332 2 13 2 265 5 312 5 
349 1 294 1 293 1 121 1 102 1 348 1 
237 2 148 1 196 3 171 2 261 2 328 1 348 2 349 4 31 1 350 1 331 2 121 3 223 2 288 4 71 2 265 2 267 4 268 1 56 1 99 2 357 2 293 3 301 1 302 1 252 1 367 1 84 1 20 1 23 2 24 4 110 2 345 1 320 2 255 1 
258 1 294 1 357 1 228 1 265 1 102 1 212 1 
171 1 149 1 348 1 242 1 349 1 31 1 331 1 121 1 265 1 312 1 356 1 357 1 294 2 293 1 157 1 102 1 320 1 
99 1 323 1 237 1 360 1 29 1 327 1 196 2 171 1 31 1 273 1 20 1 331 1 223 1 288 1 24 1 71 2 265 1 320 1 267 1 278 1 
191 3 2 3 91 7 171 2 149 10 348 1 349 1 31 2 331 2 121 1 245 1 332 3 175 1 12 1 13 3 265 10 312 5 293 1 294 6 357 6 358 1 58 7 156 2 101 2 359 1 270 1 102 1 82 3 235 1 370 1 163 1 320 2 25 1 
191 1 236 1 147 1 171 1 200 1 31 1 205 1 331 1 121 1 69 1 332 2 265 2 293 1 357 2 358 2 131 1 250 1 271 1 298 1 299 1 316 1 80 1 18 1 317 1 274 1 344 1 320 1 142 1 
26 1 168 1 281 1 170 1 169 1 237 1 28 1 196 1 200 1 116 1 151 1 223 1 288 1 176 1 226 2 71 1 178 1 267 1 227 1 99 1 271 2 298 3 316 2 132 1 18 2 135 1 317 2 20 1 24 1 140 1 112 1 142 3 
357 2 294 4 58 2 91 2 171 1 102 2 149 4 307 1 31 1 331 1 23 1 110 1 320 1 265 1 312 2 
47 1 372 1 88 1 34 1 104 1 
47 1 104 1 239 1 
47 1 104 1 239 1 
47 1 104 1 239 1 
47 1 251 1 104 1 
47 1 251 1 104 1 
47 1 251 1 104 1 
47 1 104 1 
83 1 66 1 
227 10 180 3 191 2 168 1 281 5 170 1 131 2 147 2 30 2 202 5 173 1 318 5 69 1 332 2 151 1 274 1 226 2 112 1 
227 2 168 1 170 1 30 1 202 1 173 1 332 1 318 2 151 1 226 2 13 1 112 1 
227 4 191 1 2 1 168 1 281 2 170 1 30 1 202 1 82 1 173 1 332 1 318 2 151 1 226 2 13 1 112 1 
227 3 143 1 180 1 168 3 281 2 170 3 78 1 131 1 147 1 30 1 202 2 173 1 318 1 151 3 277 1 226 6 112 3 
191 2 143 1 168 4 280 1 281 8 170 4 282 1 30 3 147 2 202 6 173 1 332 2 69 1 151 4 226 8 123 1 227 15 180 3 156 1 101 1 78 1 131 2 229 1 318 7 274 1 235 1 277 1 112 4 
227 8 191 1 180 2 143 1 168 2 280 1 281 4 170 2 282 1 131 1 30 1 147 1 202 3 307 1 332 1 69 1 318 4 151 2 226 4 112 2 
227 6 180 2 191 1 280 1 281 3 282 1 131 1 147 1 202 2 307 1 69 1 332 1 318 3 212 1 
227 4 191 1 168 1 2 1 281 2 170 1 229 1 82 1 332 1 318 2 151 1 226 2 13 1 112 1 
227 12 191 2 2 2 281 6 359 1 156 2 101 2 30 1 202 1 82 2 318 6 332 2 235 1 13 2 163 1 
191 4 143 2 280 1 167 1 2 2 168 2 281 16 282 1 170 2 147 4 30 5 202 10 307 1 69 2 332 4 151 2 13 2 226 4 227 30 180 5 101 2 156 2 359 1 131 4 78 1 82 2 318 14 274 1 163 1 112 2 
227 1 281 1 156 1 
227 1 318 1 101 1 
227 6 191 1 168 1 323 1 2 1 281 3 170 1 229 1 30 1 202 1 82 1 332 1 318 3 151 1 226 2 13 1 112 1 
191 4 168 1 2 4 281 11 170 1 30 2 202 2 173 1 332 4 245 1 151 1 175 1 12 1 226 2 13 4 227 22 101 2 156 2 359 1 82 4 318 11 235 1 370 1 163 1 112 1 25 1 
227 6 191 1 180 1 281 3 131 1 147 1 30 1 202 2 69 1 332 1 318 3 
227 3 180 1 143 1 280 1 168 1 281 2 170 1 282 1 131 1 78 1 30 1 147 1 202 2 318 1 151 1 226 2 112 1 
143 1 191 4 280 1 168 2 2 1 281 10 282 1 170 2 147 2 30 4 202 8 307 1 173 1 69 2 245 1 332 5 151 2 175 1 12 1 226 4 13 2 227 24 180 4 101 1 156 1 131 2 82 2 318 14 274 1 235 1 370 1 112 2 25 1 
143 1 191 2 280 1 168 3 2 1 281 7 282 1 170 3 147 1 30 1 202 3 307 1 173 1 69 1 245 1 332 3 151 3 175 1 12 1 226 6 13 2 227 17 180 2 156 1 101 1 131 1 229 1 82 2 318 10 235 1 370 1 112 3 25 1 
143 1 191 5 280 1 168 3 2 4 281 15 282 1 170 3 147 1 30 2 202 5 307 1 173 1 69 1 332 5 245 1 151 3 175 1 12 1 226 6 13 4 227 29 180 3 101 2 156 2 359 1 131 1 229 1 82 4 318 14 235 1 370 1 163 1 112 3 25 1 
143 1 191 4 280 1 168 3 2 3 281 12 282 1 170 3 147 1 30 3 202 5 307 1 173 1 69 1 332 5 245 1 151 3 175 1 12 1 226 6 13 4 227 27 180 2 101 2 156 2 359 1 131 1 229 1 82 4 318 15 235 1 370 1 163 1 112 3 25 1 
143 1 191 4 280 1 168 2 2 1 281 10 282 1 170 2 147 2 30 4 202 8 307 1 173 1 69 2 245 1 332 5 151 2 175 1 12 1 226 4 13 2 227 24 180 4 101 1 156 1 131 2 82 2 318 14 274 1 235 1 370 1 112 2 25 1 
191 4 168 1 2 4 281 11 170 1 30 2 202 2 173 1 332 4 245 1 151 1 175 1 12 1 226 2 13 4 227 22 101 2 156 2 359 1 82 4 318 11 235 1 370 1 163 1 112 1 25 1 
143 2 191 4 280 1 168 4 2 3 281 13 282 1 170 4 147 1 30 3 202 6 307 1 173 1 69 1 245 1 332 5 151 4 175 1 12 1 226 8 13 4 227 28 180 3 156 2 101 2 359 1 131 1 229 1 82 4 318 15 235 1 370 1 163 1 112 4 25 1 
143 1 191 3 168 3 2 3 281 9 170 3 30 3 202 3 173 1 245 1 332 5 151 3 175 1 12 1 226 6 13 5 227 23 156 2 101 2 359 1 82 5 318 14 235 1 370 1 277 1 163 1 112 3 25 1 
227 7 191 1 180 3 280 2 281 4 282 1 131 3 147 3 30 3 202 6 69 1 332 1 318 3 
143 2 191 2 168 4 2 2 281 8 170 4 30 2 202 3 173 1 245 1 332 4 151 4 175 1 12 1 226 8 13 4 227 20 180 1 156 2 101 2 359 1 82 4 318 12 235 1 370 1 277 1 163 1 112 4 25 1 
135 1 317 1 309 1 306 1 298 1 81 1 142 1 
216 1 306 1 298 1 103 1 81 1 159 1 135 1 317 1 309 1 335 1 305 1 142 1 
75 1 56 1 99 1 237 1 196 1 302 1 206 1 223 1 187 1 288 4 24 4 71 1 267 4 
99 1 148 1 196 2 261 1 328 1 252 1 233 1 20 1 223 1 288 2 24 2 71 1 267 2 255 1 
99 1 24 1 288 1 237 1 371 1 264 1 196 1 39 1 267 1 240 1 
95 1 75 1 99 1 244 1 24 2 288 2 196 1 267 2 
56 1 75 1 99 2 314 1 237 1 196 2 261 1 302 1 206 1 51 1 223 2 288 5 24 5 71 3 263 1 267 4 
56 1 75 1 99 2 314 1 237 1 196 2 261 1 302 1 206 1 223 2 288 5 24 5 71 3 263 1 267 4 65 1 
56 1 99 1 223 1 24 1 288 1 237 1 71 1 196 1 267 1 212 1 302 1 
99 1 237 1 298 2 316 1 196 1 132 1 61 1 18 1 135 1 317 1 20 1 223 1 288 1 24 1 140 1 71 1 267 1 142 2 
196 1 261 1 205 1 310 1 223 2 288 1 71 3 353 1 267 1 99 1 298 2 316 1 132 1 61 1 18 2 135 1 317 2 20 2 24 1 140 1 63 1 346 1 142 2 
192 1 196 1 261 1 205 1 310 1 223 2 288 2 71 3 353 1 267 2 99 1 298 2 316 1 61 1 18 2 135 1 317 2 20 2 187 1 24 2 140 1 63 1 346 1 142 2 
99 1 181 1 293 1 59 1 196 1 261 1 160 1 20 1 273 1 121 1 310 1 223 1 288 1 24 1 71 4 63 1 267 1 
99 1 294 1 293 2 146 1 237 1 102 1 196 1 261 1 349 1 160 1 20 1 273 1 121 2 310 1 223 1 187 1 288 3 24 3 71 4 63 1 267 3 55 1 
99 1 32 1 24 1 288 1 196 1 267 1 
75 1 99 2 314 1 237 2 284 1 327 1 196 3 201 1 328 1 120 1 20 1 32 1 244 1 51 1 223 2 288 7 24 7 71 3 263 1 267 6 255 1 
189 1 191 1 280 1 281 3 282 1 147 1 196 1 202 2 332 1 151 2 288 1 154 1 99 1 298 2 61 1 18 1 20 1 24 1 112 2 256 1 168 2 170 2 115 1 169 2 28 1 116 2 307 1 118 1 69 1 223 1 176 1 226 4 71 1 267 1 75 1 227 6 180 2 127 1 131 1 316 1 132 1 40 1 317 1 135 2 318 3 140 1 142 2 
258 1 146 1 237 1 171 2 348 1 349 2 31 2 117 1 331 2 121 3 96 1 288 1 71 2 265 1 267 1 124 1 55 1 268 1 294 1 357 1 293 3 228 1 102 1 105 1 160 1 273 1 24 1 320 2 
99 1 327 1 196 2 238 1 160 1 20 1 32 1 223 1 288 1 24 1 71 2 267 1 278 1 
99 1 192 1 237 1 298 2 316 1 196 1 61 1 18 1 135 1 317 1 20 1 223 1 288 1 24 1 140 1 71 1 267 1 142 2 
99 1 327 1 196 2 261 1 328 1 120 1 20 1 223 1 288 1 24 1 71 1 267 1 255 1 
135 1 286 1 195 1 291 1 179 1 
146 1 195 1 221 1 92 1 200 1 205 2 286 2 121 2 291 2 353 1 179 2 124 1 125 1 293 2 294 1 271 1 298 1 316 1 299 1 102 1 80 1 18 1 317 1 135 1 164 1 344 1 346 1 142 1 257 1 
292 1 317 1 322 1 195 1 298 1 291 1 179 1 188 1 142 1 
195 1 164 1 92 1 
333 1 97 1 340 1 37 1 247 1 67 1 94 1 
129 1 340 4 37 1 67 2 94 1 19 2 262 1 9 1 106 1 185 1 21 1 22 1 97 2 247 4 
90 1 36 1 340 2 37 1 67 1 94 1 19 1 333 1 97 1 209 1 247 2 
241 1 262 2 106 2 185 1 333 1 97 1 340 3 37 1 247 3 67 1 94 1 
42 2 9 2 109 1 342 1 
1 1 333 1 340 1 37 1 247 1 94 1 
19 1 333 1 27 1 97 1 340 2 37 1 247 2 67 1 94 1 
10 1 
333 1 97 1 340 1 37 1 247 1 67 1 94 1 
97 1 67 1 212 1 
97 1 340 1 37 1 247 1 67 1 94 1 
369 1 347 1 247 1 
340 3 37 1 94 1 67 1 262 1 106 2 185 1 333 1 14 1 97 1 247 3 
19 1 334 1 97 1 340 2 37 1 247 2 67 1 94 1 
41 1 9 1 129 1 333 1 371 1 264 1 340 1 37 1 74 1 247 1 94 1 
333 1 340 1 37 1 247 1 67 1 94 1 
9 1 333 1 97 1 340 1 37 1 247 1 67 1 94 1 
100 1 296 1 340 2 37 2 67 1 94 2 333 1 86 1 247 2 
129 1 27 1 340 3 37 1 67 1 94 1 204 1 19 2 9 1 333 1 21 1 97 1 247 3 
340 2 39 1 37 1 67 1 94 1 19 1 333 1 97 1 72 1 371 1 264 2 247 2 141 1 74 1 
129 1 340 4 37 2 38 1 67 1 94 2 19 2 9 1 333 1 21 1 334 1 97 1 247 4 
19 1 106 1 333 1 27 1 97 1 340 3 37 1 247 3 67 1 94 1 
9 1 129 1 21 1 22 1 
67 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 38 (24,233) (24,233) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 38 (24,233) (24,233) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 38 (24,233) (24,233) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 38 (24,233) (24,233) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 188 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 314 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (1,84,178) (1,84,178) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (1,84,178) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (1,84,178) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (49,201) (49,201) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (1,84,178) (1,84,178) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 230 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 170 26 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 170 26 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 242 117 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2737 | stmt -> ;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3771 | return null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 1100 | = null
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isSingleElement()Z | OPERATOR | 5298 | && -> ||
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 1 332 1 123 1 63 1 258 1 38 1 190 1 129 1 233 1 338 1 53 1 
24 1 332 1 123 1 63 1 258 1 38 1 190 1 129 1 233 1 338 1 53 1 
24 1 332 1 123 1 63 1 258 1 38 1 190 1 129 1 233 1 338 1 53 1 
24 1 332 1 123 1 63 1 258 1 38 1 190 1 129 1 233 1 338 1 53 1 
244 3 123 4 215 1 277 2 216 1 338 1 79 1 149 1 189 1 332 1 174 1 150 1 258 1 63 4 208 1 203 2 105 3 226 1 
194 1 244 1 123 2 215 1 338 1 79 1 53 1 20 1 332 1 258 1 63 2 208 1 191 1 129 1 226 1 50 1 
244 2 123 3 215 1 277 1 255 1 338 2 53 1 332 2 174 1 258 1 63 3 105 1 226 1 
244 5 338 2 341 1 79 1 189 1 63 9 208 1 34 1 123 9 215 1 277 4 216 1 255 1 318 1 53 1 280 1 149 1 332 2 174 3 150 1 258 1 105 7 203 2 226 1 
244 5 338 2 341 1 79 1 189 1 63 9 208 1 34 1 123 9 215 1 277 4 216 1 255 1 318 1 53 1 280 1 149 1 332 2 174 3 150 1 258 1 105 7 203 2 226 1 
324 1 41 1 73 1 
81 1 86 2 73 1 
297 2 269 2 124 2 316 1 350 2 211 2 317 1 263 2 
182 1 287 1 245 2 44 1 248 1 77 1 4 1 28 1 292 1 340 2 297 2 114 1 269 3 13 1 271 1 303 1 142 2 211 3 346 1 90 1 165 1 166 1 124 2 36 2 95 1 197 1 316 1 52 2 350 2 317 1 220 1 284 1 153 1 156 1 262 1 263 2 177 1 
224 1 297 1 269 1 124 1 55 1 210 1 350 1 211 1 317 1 263 1 
75 1 140 1 297 1 269 2 210 2 302 1 211 2 67 1 124 2 313 1 217 1 350 1 317 1 224 1 101 1 55 1 355 1 23 1 41 1 263 1 73 1 
75 1 124 1 217 1 350 1 140 2 297 1 269 1 23 1 355 2 41 1 210 1 302 1 211 1 263 1 73 1 
200 1 140 1 275 1 355 1 218 1 
140 2 275 1 195 1 355 2 41 1 186 1 218 1 73 1 
140 1 355 1 218 1 
275 1 124 1 350 1 317 1 224 1 140 1 297 1 55 1 269 1 355 1 210 1 211 1 67 1 263 1 
73 1 
71 1 140 2 275 1 195 1 355 2 41 1 218 1 73 1 
25 1 136 1 334 2 265 2 6 1 108 1 297 1 344 1 140 5 269 1 231 1 210 1 32 1 211 1 67 1 275 2 167 1 195 1 124 1 17 3 196 1 350 1 198 1 218 2 317 1 352 1 148 1 224 1 55 1 102 1 355 5 39 2 41 1 227 2 155 1 263 1 73 1 
324 1 316 1 
180 1 124 2 16 1 350 1 316 2 297 1 269 2 211 2 263 1 
209 1 8 1 253 1 
166 1 245 1 59 1 77 1 4 1 95 1 197 1 316 1 340 1 269 1 303 1 142 1 211 1 156 1 177 1 262 1 
166 1 245 1 77 1 124 1 4 1 8 1 197 1 95 1 340 1 297 1 269 2 356 1 285 1 303 1 142 1 211 2 156 1 262 1 177 1 263 1 
274 1 124 5 16 1 350 1 316 1 297 4 101 1 269 5 152 1 356 1 210 1 285 2 211 5 15 1 263 4 228 1 
224 1 297 1 269 1 124 1 210 1 211 1 263 1 120 1 
297 3 269 3 124 3 285 1 350 1 316 1 211 3 263 3 
224 1 297 1 269 1 124 1 210 1 211 1 263 1 
180 1 297 1 269 1 124 1 16 1 210 1 350 1 211 1 263 1 
75 1 182 1 287 1 245 1 44 1 77 1 4 1 28 1 340 1 297 3 140 1 114 1 269 4 210 1 303 1 302 1 142 1 211 4 346 1 90 1 165 1 311 1 234 1 166 1 16 1 124 3 36 1 197 1 95 1 217 1 316 1 52 2 350 2 317 1 220 1 23 1 355 1 284 1 285 1 356 1 156 1 262 1 177 1 263 3 
274 1 124 2 316 1 297 1 101 1 269 2 210 1 285 1 211 2 263 1 15 1 
75 1 311 1 16 1 124 3 217 1 350 1 140 1 297 3 299 1 269 3 355 1 23 1 210 1 356 1 285 2 302 1 211 3 263 3 73 1 
16 1 124 2 8 1 350 1 297 2 209 1 269 2 285 1 211 2 263 2 
166 1 245 1 77 1 4 1 95 1 197 1 316 1 340 1 269 1 142 1 303 1 211 1 156 1 177 1 262 1 
92 1 166 1 245 1 77 1 4 1 316 1 340 1 354 1 269 1 142 1 303 1 211 1 156 1 177 1 262 1 
165 1 182 1 44 1 246 1 36 1 28 1 52 2 219 1 220 1 114 1 32 1 333 1 242 1 90 1 
120 1 
321 1 213 1 
321 1 213 1 
229 1 87 1 
229 1 87 1 
229 1 87 1 
321 1 213 1 330 1 
321 1 259 1 213 1 
321 2 22 1 252 1 229 1 87 1 213 2 
321 1 213 1 330 1 
321 1 213 1 330 1 
161 1 321 1 213 1 
161 1 321 1 213 1 
161 1 321 1 213 1 
184 1 61 1 297 2 140 1 29 1 345 1 269 2 211 2 213 1 348 1 124 2 278 1 316 1 172 1 126 1 331 1 173 1 321 1 100 1 259 1 103 1 355 1 154 1 263 2 
235 2 348 2 125 1 184 2 46 1 294 1 126 1 61 2 140 2 321 2 345 3 207 1 270 1 103 2 355 2 252 1 241 1 213 2 73 1 
208 1 216 1 79 1 
208 1 50 1 79 1 
145 1 51 1 107 1 216 2 50 1 79 3 
145 1 107 1 216 1 50 1 147 1 79 2 
145 1 107 2 216 1 50 1 79 2 
275 3 195 1 136 1 218 1 188 1 140 4 113 1 355 4 40 1 41 1 192 1 131 1 73 1 
139 1 140 2 297 1 269 1 210 1 211 1 14 1 67 1 275 2 124 1 350 1 218 1 317 1 128 1 200 1 224 1 55 1 355 2 41 1 263 1 73 1 
74 1 183 1 6 1 7 1 188 1 81 1 297 1 113 1 344 1 140 3 269 1 210 1 32 1 211 1 117 1 86 2 67 1 275 2 124 1 17 2 96 1 350 1 198 1 317 1 148 1 224 1 100 1 55 1 40 1 355 3 102 1 41 1 227 2 131 1 263 1 242 1 73 2 
74 1 183 2 6 1 7 2 188 1 81 2 140 4 269 1 86 4 275 3 17 3 96 2 198 1 148 1 100 2 55 1 102 2 242 2 157 1 335 1 113 1 344 1 297 1 210 1 32 2 211 1 117 2 67 1 310 1 124 1 350 1 317 1 224 1 40 1 355 4 41 1 227 4 131 2 263 1 73 3 
121 1 324 1 303 1 
185 1 303 1 
202 1 
77 1 303 1 262 1 
303 1 351 1 
303 1 262 1 
121 2 43 1 72 1 77 1 303 3 262 1 
179 1 164 1 205 1 334 2 36 6 28 3 291 1 352 1 18 1 138 2 21 1 102 1 39 2 13 3 64 4 32 1 162 2 
179 1 164 1 205 1 334 2 36 6 28 3 291 1 352 1 18 1 138 2 21 1 102 1 39 2 13 3 64 4 32 1 162 2 
179 1 164 1 205 1 334 2 36 6 28 3 291 1 352 1 18 1 138 2 21 1 102 1 39 2 13 3 64 4 32 1 162 2 118 1 
179 2 164 1 13 1 314 1 36 1 18 1 
179 1 205 1 44 2 334 2 159 1 28 4 291 1 60 1 138 3 13 4 64 4 32 1 162 1 90 2 165 2 326 1 164 1 36 8 52 4 352 1 220 2 18 1 102 1 39 2 
1 1 332 1 245 1 123 1 63 1 258 1 232 1 142 1 338 1 163 1 340 1 178 1 53 1 
1 1 123 2 245 1 158 1 110 1 338 1 340 1 53 1 112 1 332 1 63 2 105 1 142 1 163 1 
112 1 245 1 123 1 63 1 84 1 142 1 105 1 110 1 163 1 340 1 53 1 
0 1 123 1 166 1 245 1 158 1 338 1 340 1 53 2 49 1 332 1 63 1 201 1 142 1 163 2 
1 1 123 1 245 1 338 1 340 1 53 1 112 1 332 1 258 1 63 1 142 1 163 1 178 1 
353 1 
245 1 166 1 140 1 136 1 355 1 142 1 340 1 
75 1 337 1 293 1 111 2 343 1 140 3 269 1 83 1 210 1 302 1 211 1 212 1 71 1 195 1 124 1 313 1 217 1 218 2 97 1 101 1 355 3 23 1 41 2 73 2 
75 1 124 1 313 1 337 1 217 1 293 1 111 3 343 1 140 2 282 1 101 1 83 1 269 1 23 1 355 2 41 3 210 1 302 1 211 1 212 1 73 3 
75 1 337 1 293 1 111 3 343 1 140 3 269 1 83 1 210 1 302 1 211 1 212 1 71 1 195 1 124 1 313 1 217 1 199 1 218 2 97 1 101 1 282 1 355 3 23 1 41 3 73 3 
75 1 26 1 337 1 293 1 111 2 343 1 297 1 140 3 83 1 269 2 210 2 302 1 211 2 212 1 67 1 71 1 195 1 124 2 313 1 329 1 217 1 350 1 199 2 218 3 317 1 97 2 224 1 101 1 55 1 355 3 23 1 41 3 263 1 73 3 
75 1 136 1 124 1 313 1 337 1 217 1 293 1 111 2 343 1 140 2 101 1 83 1 269 1 23 1 355 2 41 2 210 1 302 1 211 1 212 1 73 2 
75 1 133 1 136 1 124 1 313 1 170 1 337 1 217 1 293 1 111 2 343 1 140 2 101 1 83 1 269 1 23 1 355 2 41 2 210 1 302 1 211 1 212 1 73 2 
75 1 133 1 136 1 124 1 313 1 170 1 337 1 217 1 293 1 111 2 343 1 140 2 101 1 83 1 269 1 23 1 355 2 41 2 210 1 302 1 211 1 212 1 73 2 
75 1 136 1 124 1 313 1 337 1 217 1 293 1 230 1 111 2 160 1 343 1 140 2 101 1 83 1 269 1 23 1 355 2 41 2 210 1 302 1 211 1 212 1 73 2 
75 1 133 1 26 1 136 1 337 1 293 1 111 3 343 1 140 2 269 1 83 1 210 1 302 1 211 1 212 1 124 1 313 1 170 1 217 1 199 1 218 1 97 1 282 1 101 1 355 2 23 1 41 3 73 3 
75 1 133 1 26 1 136 1 337 1 293 1 111 3 343 1 140 2 269 1 83 1 210 1 302 1 211 1 212 1 124 1 313 1 170 1 217 1 199 1 218 1 97 1 282 1 101 1 355 2 23 1 41 3 73 3 
75 1 136 1 124 1 313 1 337 1 217 1 293 1 111 2 343 1 140 2 101 1 83 1 269 1 23 1 355 2 41 2 210 1 302 1 211 1 212 1 73 2 
165 1 205 1 182 1 324 1 44 1 334 2 36 5 316 2 28 3 52 2 291 1 352 1 220 1 138 2 114 1 13 2 102 1 39 2 64 2 32 1 333 1 90 1 
323 3 182 1 44 2 248 1 27 1 183 2 288 1 8 10 28 5 114 2 301 1 209 3 13 8 64 1 32 1 143 1 162 1 117 2 306 1 253 10 214 3 90 2 165 2 36 13 316 1 52 4 220 2 319 1 102 2 284 1 42 1 242 1 
245 1 182 1 44 1 77 1 59 1 248 1 4 1 249 1 28 1 340 1 297 1 114 1 209 1 269 2 13 1 65 1 303 1 142 1 211 2 90 1 165 1 166 1 124 1 197 1 95 1 36 2 316 1 52 2 220 1 319 1 223 1 284 1 285 1 356 1 156 1 262 1 177 1 263 1 
182 3 44 3 135 2 77 2 183 2 4 2 8 4 9 2 138 2 269 3 13 9 142 1 90 3 274 1 93 1 95 2 197 2 52 6 98 2 102 3 284 1 285 1 156 2 242 2 205 1 245 1 334 2 248 1 290 2 108 1 291 1 28 8 340 1 297 1 114 3 209 4 64 2 210 1 32 3 303 2 211 3 117 2 346 2 253 4 165 3 309 1 166 1 124 1 36 17 316 1 352 1 220 3 319 1 39 2 356 1 263 1 177 2 262 2 
182 2 44 2 77 1 48 1 82 1 269 1 13 1 271 2 142 7 90 2 89 1 52 4 99 1 151 1 284 1 56 1 239 1 285 1 333 1 156 3 245 7 248 1 28 1 340 6 295 1 112 1 297 1 114 2 303 4 211 1 68 1 165 2 122 1 166 2 347 1 124 1 349 1 36 2 220 2 322 1 262 3 177 4 263 1 
182 1 44 1 183 1 28 1 297 1 114 1 269 1 13 1 32 1 211 1 117 1 90 1 165 1 16 1 124 1 36 2 350 1 52 2 220 1 319 1 283 1 102 1 263 1 242 1 
165 1 182 1 44 1 183 1 8 1 36 2 52 2 220 1 114 1 209 1 115 1 102 1 13 2 64 1 333 1 162 1 253 1 90 1 
165 1 182 1 44 1 36 1 52 2 28 1 219 1 220 1 114 1 32 1 333 1 242 1 90 1 
165 1 182 1 44 1 183 1 8 1 36 3 28 1 52 2 220 1 114 1 209 1 102 1 13 2 32 1 333 1 117 1 242 1 253 1 90 1 
165 1 182 1 44 1 183 1 8 1 36 2 52 2 220 1 295 1 114 1 209 1 115 1 102 1 13 2 64 1 162 1 253 1 90 1 
165 1 182 1 44 1 36 1 52 2 28 1 219 1 220 1 295 1 114 1 32 1 242 1 90 1 
165 1 182 1 44 1 183 1 8 1 36 3 28 1 52 2 220 1 295 1 114 1 209 1 102 1 13 2 32 1 117 1 242 1 253 1 90 1 
165 1 182 1 44 1 183 1 8 1 36 3 28 1 52 2 220 1 114 1 209 1 102 1 13 2 32 1 117 1 242 1 253 1 90 1 
245 1 182 1 44 1 248 1 77 1 4 1 28 1 340 1 114 1 269 1 13 1 142 1 303 1 211 1 346 1 90 1 165 1 166 1 36 2 197 1 95 1 316 1 52 2 220 1 284 1 156 1 262 1 177 1 
245 1 182 1 44 1 248 1 77 1 4 1 28 1 340 1 10 1 114 1 269 1 13 1 142 1 303 1 211 1 90 1 165 1 92 1 166 1 36 2 316 1 52 2 220 1 354 1 284 1 156 1 262 1 177 1 
165 1 182 1 44 1 183 1 8 1 36 3 28 1 52 2 220 1 319 1 114 1 209 1 102 1 13 2 32 1 117 1 242 1 253 1 90 1 
245 1 182 1 44 1 183 1 77 1 135 1 4 1 8 1 28 1 340 1 114 1 209 1 269 1 13 2 232 1 32 1 142 1 303 1 211 1 117 1 346 1 253 1 90 1 165 1 36 3 197 1 95 1 52 2 220 1 102 1 156 1 242 1 177 1 262 1 
182 1 44 1 183 1 8 1 28 2 297 1 114 1 269 1 209 1 13 2 32 1 211 1 117 1 253 1 90 1 69 1 165 1 16 1 124 1 36 4 350 1 52 2 220 1 319 1 102 1 242 1 263 1 
58 1 323 4 205 1 44 3 134 1 334 2 183 7 5 1 288 2 291 1 28 19 60 1 138 2 13 27 64 10 116 1 32 7 66 1 117 7 162 8 306 2 214 4 90 3 165 3 326 1 168 1 312 1 276 1 171 1 36 46 52 6 352 1 220 3 19 1 39 2 261 1 102 8 240 1 42 2 242 6 57 3 132 1 
243 1 58 1 323 2 44 2 183 3 5 1 28 9 60 1 13 14 64 1 32 2 116 1 66 2 162 1 117 3 90 2 214 2 165 2 326 1 168 1 276 1 312 1 36 23 52 4 220 2 19 1 261 1 102 3 240 1 42 2 242 2 57 4 132 2 
323 5 44 3 183 7 5 1 138 2 13 29 90 3 326 1 276 1 52 6 19 1 102 8 240 1 106 1 242 7 57 4 58 1 243 1 205 1 334 2 288 2 28 22 291 1 60 1 64 11 32 8 116 1 66 1 162 9 117 7 306 2 214 5 165 3 312 1 168 1 36 51 171 1 352 1 220 3 261 1 39 2 42 3 132 2 
243 1 58 1 323 4 205 1 44 3 334 2 183 7 5 1 288 2 291 1 28 20 60 1 138 2 13 28 64 10 116 1 32 7 66 1 117 7 162 8 306 2 214 4 90 3 165 3 326 1 168 1 312 1 276 1 171 1 36 48 52 6 352 1 220 3 19 1 39 2 261 1 102 8 240 1 42 2 242 6 57 4 132 1 
243 1 58 1 323 4 205 1 44 2 334 2 183 7 5 1 288 2 291 1 28 19 60 1 138 2 13 26 64 8 116 1 32 8 66 1 117 7 162 6 306 2 214 4 90 2 165 2 326 1 168 1 312 1 276 1 36 45 52 4 352 1 220 2 19 1 39 2 261 1 102 8 240 1 42 2 242 7 57 4 132 1 
257 1 321 1 348 1 103 1 184 1 336 1 305 1 213 1 61 1 
331 1 259 1 
204 1 321 1 348 1 270 1 103 1 184 1 252 1 241 1 213 1 61 1 
80 1 330 1 
161 1 169 1 22 1 
235 1 348 1 125 1 184 1 46 1 126 1 61 1 140 1 321 1 345 2 207 1 270 1 355 1 103 1 252 1 241 1 213 1 73 1 
235 1 348 1 125 1 184 1 46 1 126 1 61 1 140 1 321 1 345 2 207 1 270 1 355 1 103 1 252 1 241 1 213 1 73 1 
235 1 348 1 125 1 184 1 46 1 126 1 61 1 140 1 321 1 345 2 207 1 270 1 355 1 103 1 252 1 241 1 213 1 73 1 
80 1 22 1 330 1 
80 1 22 1 330 1 
161 1 169 1 
161 1 169 1 22 1 
29 1 154 1 
184 1 46 1 61 1 140 1 29 1 297 2 345 1 269 2 211 2 213 1 235 1 275 1 348 1 124 2 94 1 278 1 316 1 172 1 331 1 173 1 321 1 100 1 259 1 355 1 103 1 154 1 263 2 
245 2 182 1 44 1 248 1 28 1 187 1 340 2 114 1 269 2 13 1 271 2 303 1 142 2 211 2 90 1 165 1 308 1 124 2 36 2 52 2 220 1 319 1 320 1 99 1 175 1 56 1 284 1 156 1 176 1 177 1 262 1 
2 1 245 2 51 1 216 1 315 1 340 2 279 1 79 2 281 1 112 1 208 1 300 1 232 1 104 1 142 2 50 1 156 1 273 1 177 1 
2 1 245 1 51 1 216 1 340 1 279 1 79 2 281 1 112 1 62 1 208 1 104 1 142 1 50 1 273 1 156 1 177 1 
122 1 166 1 245 1 315 1 267 1 340 1 48 1 141 1 303 1 142 1 156 1 273 1 177 1 262 1 
2 1 245 1 51 1 216 1 315 1 340 1 279 1 79 2 281 1 112 1 208 1 300 1 104 1 142 1 50 1 273 1 156 1 177 1 
70 1 
25 1 324 1 17 1 196 1 41 1 227 1 73 1 
136 1 
245 1 166 1 136 1 142 1 340 1 
136 1 
140 1 133 1 136 1 355 1 
136 1 196 1 
183 1 17 1 7 1 96 1 81 1 102 1 32 1 117 1 227 2 86 2 242 1 73 1 
140 1 195 1 355 1 41 1 218 1 73 1 
245 1 166 1 136 1 142 1 137 1 340 1 
245 1 287 1 182 1 44 1 77 1 4 1 28 1 340 1 297 2 114 1 269 3 142 1 303 1 211 3 346 1 90 1 165 1 166 1 124 2 36 1 95 1 197 1 316 1 52 2 350 2 317 1 220 1 284 1 156 1 263 2 177 1 262 1 
136 1 
103 1 78 1 61 1 
296 1 29 1 270 1 103 1 61 1 
103 1 78 1 61 1 
103 1 78 1 61 1 
238 1 103 1 61 1 
238 1 103 1 61 1 
238 1 103 1 61 1 
103 1 61 1 
321 1 213 1 
165 2 205 1 44 2 334 2 36 9 28 5 52 4 291 1 352 1 60 1 220 2 138 2 102 1 13 4 39 2 64 4 32 1 162 2 90 2 
205 1 324 1 334 2 36 5 28 3 291 1 352 1 138 2 39 2 102 1 13 2 64 2 32 1 
165 1 44 1 183 1 289 1 36 3 28 1 52 2 220 1 102 1 13 2 32 1 117 1 242 1 90 1 
323 2 183 2 288 1 36 10 28 4 13 6 102 2 64 2 32 2 117 2 162 2 42 1 306 1 242 2 214 2 
323 2 205 1 44 2 334 4 183 2 27 1 288 1 108 1 291 1 28 14 60 2 138 4 13 13 64 9 32 4 162 5 117 2 306 1 214 2 90 2 165 2 36 27 52 4 352 2 220 2 222 1 39 4 102 4 242 2 
36 1 28 1 214 1 
323 1 13 1 36 1 
183 1 290 1 36 5 28 2 102 1 13 3 64 1 32 1 117 1 162 1 242 1 
323 1 58 1 44 1 183 2 28 4 13 6 64 1 116 1 32 2 117 2 162 1 214 1 90 1 165 1 326 1 312 1 168 1 36 10 52 2 220 1 19 1 102 2 42 1 242 2 
334 1 36 4 28 2 352 1 138 1 102 1 13 2 39 1 64 1 32 1 
165 1 205 1 44 1 334 1 36 3 291 1 28 2 52 2 60 1 220 1 138 1 222 1 13 1 39 1 64 2 162 1 90 1 
334 2 36 5 108 1 28 3 352 1 138 2 39 2 102 1 13 2 64 2 32 1 
326 1 165 1 44 1 183 1 36 2 52 2 220 1 102 1 13 2 64 1 162 1 90 1 
326 1 165 1 44 1 183 1 36 3 28 1 52 2 220 1 102 1 13 2 64 1 32 1 117 1 162 1 242 1 90 1 
326 1 165 3 44 3 334 1 171 1 36 3 28 2 52 6 60 1 220 3 138 1 222 1 39 1 13 1 64 2 162 1 90 3 
323 4 205 1 44 5 247 1 334 3 183 4 288 1 289 1 291 1 28 17 60 2 138 3 30 1 13 19 64 10 32 6 117 4 162 7 306 1 193 1 214 4 90 5 165 5 326 1 171 1 36 36 52 10 352 2 220 5 222 1 39 3 102 6 42 1 242 4 
323 1 205 1 44 1 334 2 28 4 291 1 138 2 13 3 64 2 32 1 116 1 214 1 90 1 165 1 326 1 36 7 52 2 352 1 220 1 102 1 39 2 42 1 
323 1 205 1 44 2 334 2 183 1 289 1 291 1 28 5 138 2 13 5 64 3 32 1 116 1 117 1 162 1 306 1 214 2 90 2 326 1 165 2 36 10 52 4 352 1 220 2 39 2 102 2 42 1 
323 1 58 1 44 2 183 2 289 1 28 4 13 6 64 1 116 1 32 2 117 2 162 1 214 1 90 2 165 2 326 1 312 1 168 1 36 10 52 4 220 2 19 1 102 2 42 1 242 2 
323 1 58 1 205 1 44 3 334 2 183 2 289 1 291 1 28 6 60 1 138 2 13 9 64 5 116 1 32 2 117 2 162 3 214 1 90 3 165 3 326 1 312 1 168 1 36 15 52 6 352 1 220 3 19 1 39 2 102 3 42 1 242 1 
323 1 205 1 44 1 334 2 28 4 291 1 138 2 13 3 64 2 32 1 116 1 214 1 90 1 165 1 326 1 36 7 52 2 352 1 220 1 102 1 39 2 42 1 
323 1 58 1 44 1 183 2 28 4 13 6 64 1 116 1 32 2 117 2 162 1 214 1 90 1 165 1 326 1 312 1 168 1 36 10 52 2 220 1 19 1 102 2 42 1 242 2 
323 1 58 1 44 3 183 2 289 1 28 3 60 1 13 7 64 1 116 1 32 1 117 2 162 1 214 1 90 3 165 3 326 1 312 1 168 1 36 10 52 6 220 3 19 1 102 2 42 1 242 1 
323 1 58 1 44 3 183 2 28 3 60 1 13 7 64 2 116 1 32 1 117 2 162 2 214 1 90 3 326 1 165 3 312 1 168 1 36 10 171 1 52 6 220 3 19 1 102 2 42 1 242 1 
205 1 334 2 36 7 28 4 291 2 352 1 138 2 39 2 102 1 13 3 64 4 32 1 162 2 
323 1 58 1 44 3 183 2 28 3 60 1 13 7 64 1 116 1 32 1 117 2 162 1 214 1 90 3 326 1 165 3 312 1 168 1 36 10 171 1 52 6 220 3 19 1 102 2 42 1 242 1 
274 1 124 1 316 1 101 1 269 1 210 1 211 1 15 1 88 1 
274 1 124 1 206 1 316 1 37 1 256 1 101 1 12 1 269 1 210 1 130 1 211 1 15 1 88 1 
48 1 122 1 324 1 245 1 166 1 303 1 142 1 156 1 177 1 262 1 340 1 
166 1 245 1 77 1 124 1 4 1 197 1 316 1 340 1 297 1 269 2 285 1 303 1 142 1 211 2 156 1 262 1 177 1 263 1 
245 1 77 2 124 2 4 1 217 1 197 1 316 1 351 1 340 1 297 2 269 2 23 1 251 1 210 1 285 1 303 3 142 1 211 2 119 1 156 1 262 2 177 1 263 1 
245 2 77 2 4 1 340 2 297 2 269 2 251 1 210 1 142 2 303 3 304 1 211 2 119 1 92 1 124 2 217 1 316 1 351 1 23 1 285 1 156 1 263 1 177 1 262 2 
121 1 166 1 245 3 77 1 185 1 218 1 351 1 340 3 339 1 140 2 11 1 355 2 251 1 41 1 302 1 142 3 303 4 304 1 119 1 156 1 262 1 177 1 73 1 
121 1 166 1 245 3 77 1 185 1 218 1 351 1 340 3 140 2 355 2 251 1 41 1 85 1 302 1 142 3 303 4 304 1 119 1 156 1 262 1 177 1 73 1 
245 1 322 1 142 1 156 1 177 1 340 1 
245 6 77 1 340 5 112 1 82 1 31 1 271 1 303 3 142 6 89 1 166 2 72 1 349 1 151 1 56 1 239 1 322 1 156 2 177 3 262 2 
205 1 182 2 245 1 44 2 334 2 77 1 135 1 4 1 28 3 291 1 340 1 138 2 297 1 114 2 269 2 13 2 232 1 64 2 32 1 303 1 142 1 211 2 346 1 90 2 165 2 124 1 36 5 95 1 197 1 316 2 52 4 352 1 220 2 98 1 319 1 102 1 39 2 175 1 285 1 156 1 262 1 177 1 263 1 
121 1 275 1 166 1 245 1 181 1 328 1 195 1 136 2 185 1 218 2 137 1 340 1 237 1 140 3 355 3 85 1 302 1 303 2 142 1 
121 1 245 2 225 1 72 1 77 1 232 1 322 1 303 2 142 2 156 1 177 2 262 1 340 2 
122 1 254 1 166 1 245 4 340 4 48 1 232 1 142 4 303 1 304 1 156 1 177 1 262 1 
245 2 347 1 77 1 340 2 239 1 142 2 303 1 272 1 119 1 156 1 68 1 262 1 177 2 89 1 
281 1 245 1 166 1 208 1 142 1 50 1 156 1 177 1 340 1 79 1 
112 1 245 2 232 1 56 1 303 1 142 2 156 1 176 1 177 1 262 1 340 2 
122 1 254 1 166 1 245 5 349 1 340 4 48 1 82 1 232 1 56 1 142 5 303 3 119 1 156 2 262 2 177 2 
146 1 122 1 254 1 166 1 245 5 349 1 340 4 48 1 232 1 56 1 142 5 303 3 119 1 156 2 262 2 177 2 
92 1 166 1 245 1 77 1 124 1 4 1 316 1 340 1 297 1 269 2 285 1 303 1 142 1 211 2 156 1 262 1 177 1 263 1 
245 1 72 1 77 1 340 1 31 1 239 1 142 1 303 1 119 1 156 1 262 1 177 2 89 1 
35 1 76 1 266 1 316 1 307 1 
75 1 35 1 275 1 327 1 311 1 76 2 266 2 217 1 316 1 342 1 268 1 140 2 23 1 355 2 41 1 210 1 302 1 73 1 307 2 
35 1 308 1 124 1 266 1 187 1 320 1 269 1 211 1 307 1 
35 1 327 1 342 1 
244 1 324 1 215 1 226 1 
332 1 244 1 123 1 63 1 215 1 226 1 338 1 
123 1 53 1 127 1 
244 1 264 1 123 3 215 1 338 1 250 1 20 2 332 1 258 1 63 3 286 1 226 1 
332 1 244 1 123 2 63 2 215 1 105 1 203 1 226 1 338 1 
244 1 123 1 277 1 216 1 338 1 79 1 189 1 332 1 258 1 63 1 208 1 
332 1 244 1 123 1 63 1 258 1 226 1 338 1 
332 1 123 1 63 1 258 1 215 1 226 2 338 1 
244 1 123 2 325 1 338 2 332 2 258 1 63 2 54 1 226 1 144 1 
244 2 123 3 215 1 277 1 338 1 318 1 341 1 332 1 174 1 258 1 63 3 105 2 226 1 
244 1 123 2 51 1 215 1 216 1 109 1 338 1 79 2 332 1 258 1 63 2 208 1 105 1 226 1 50 1 
244 2 123 4 215 1 277 1 338 2 149 1 332 2 174 1 258 1 63 4 203 1 105 2 226 1 
332 1 244 1 123 1 63 1 258 1 215 1 226 1 338 1 
264 1 244 3 123 4 215 2 277 1 338 1 20 1 332 1 174 1 63 4 260 1 105 2 286 1 226 2 
91 1 244 1 123 2 215 1 236 1 338 1 332 1 258 1 63 2 105 1 226 1 34 1 
244 1 264 2 123 3 215 1 338 1 20 2 332 1 221 1 258 1 63 3 286 1 226 1 
244 2 298 1 45 2 47 1 
332 1 123 1 63 1 258 1 33 1 338 1 
332 1 244 1 123 2 63 2 258 1 215 1 105 1 226 1 338 1 318 1 
3 1 
332 1 244 1 123 1 63 1 258 1 215 1 226 1 338 1 
20 1 332 1 244 1 123 3 63 3 258 1 215 1 105 1 226 1 338 1 318 1 
244 1 174 1 260 1 277 1 
244 1 226 1 

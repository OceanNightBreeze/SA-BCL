#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 171 (130,162) 271 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 5 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 171 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 315 55 339 71 328 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (110,147,161) (145,259,324) (145,259,324) (145,259,324) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (110,147,161) (145,259,324) (145,259,324) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (110,147,161) (145,259,324) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (13,343) (76,306) (76,306) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (110,147,161) (145,259,324) (145,259,324) (145,259,324) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 152 127 16 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 152 127 16 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 152 127 255 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 152 127 255 244 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 152 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 152 127 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 152 127 245 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 152 127 255 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 152 127 255 338 27 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 152 127 255 338 27 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 152 127 255 338 198 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (1,174) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 108 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 171 (130,162) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 326 210 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 171 (130,162) (130,162) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (110,147,161) (110,147,161) (110,147,161) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (110,147,161) (110,147,161) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (13,343) (13,343) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (110,147,161) (110,147,161) (110,147,161) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 171 (130,162) 271 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 214 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 315 55 339 71 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 215 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | STATEMENT | 1159 | stmt -> ;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | STATEMENT | 2915 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio; | RETURN | 2534 | return null
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3603 | 1 -> 0
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
302 1 305 9 6 1 265 9 61 1 225 1 227 2 66 1 231 1 70 1 156 4 236 2 119 2 121 7 195 1 336 1 288 1 78 1 37 1 40 1 207 1 91 1 50 5 209 3 
302 1 305 9 6 1 265 9 61 1 225 1 227 2 66 1 231 1 156 4 70 1 236 2 119 2 121 7 195 1 336 1 288 1 78 1 37 1 40 1 207 1 91 1 50 5 209 3 
2 1 302 2 305 9 6 1 265 9 11 1 61 2 17 1 316 1 225 1 227 2 66 1 184 1 156 4 236 2 119 2 121 6 195 1 336 1 288 1 78 1 37 2 40 1 207 1 298 1 91 2 50 5 209 3 
2 1 302 2 305 9 6 1 265 9 11 1 61 2 17 1 316 1 225 1 227 2 66 1 184 1 156 4 236 2 119 2 121 6 195 1 336 1 288 1 78 1 37 2 40 1 207 1 298 1 91 2 50 5 209 3 
2 1 302 2 305 10 6 1 265 10 11 1 61 2 17 1 316 1 225 1 227 2 66 1 184 1 156 5 236 2 119 2 121 7 195 1 336 1 288 1 78 1 37 2 40 1 207 1 298 1 91 2 50 6 209 4 
2 1 302 2 305 7 6 1 265 7 11 1 61 2 17 1 316 1 225 1 227 2 66 1 184 1 156 3 236 2 119 1 121 4 195 1 336 1 288 1 78 1 37 2 40 1 298 1 91 2 50 4 209 2 
156 2 302 1 236 1 119 2 305 4 121 3 195 1 336 1 265 4 78 1 37 1 61 1 227 1 40 1 207 1 66 1 50 3 209 1 
236 1 302 1 305 2 195 1 336 1 265 2 37 1 17 1 227 1 62 1 40 1 205 1 229 1 344 1 298 1 50 1 91 1 
156 1 236 2 305 3 121 1 195 1 336 1 265 3 225 1 227 2 40 1 91 1 50 2 209 1 
290 1 169 1 215 1 
142 1 169 1 98 2 
21 2 15 1 258 2 342 1 321 2 323 2 139 2 345 2 
173 1 21 1 25 1 258 1 218 1 15 1 130 1 321 1 271 1 323 1 171 1 137 1 139 1 51 2 345 1 
115 1 21 1 15 1 258 1 321 1 323 1 125 1 139 1 126 1 345 1 
115 2 21 2 258 2 73 1 31 1 75 1 125 1 126 1 15 1 149 1 290 1 169 1 226 1 321 1 323 2 139 1 345 1 232 1 
115 2 21 2 258 2 238 1 73 1 31 1 125 1 126 1 15 1 149 1 290 1 169 1 321 2 323 2 46 1 139 2 345 2 232 1 
163 1 238 1 30 1 249 1 46 1 
163 1 290 1 238 2 169 1 63 1 30 1 179 1 46 2 
238 1 30 1 46 1 
115 1 21 1 258 1 238 1 125 1 126 1 163 1 15 1 149 1 321 1 46 1 323 1 139 1 345 1 
169 1 
163 1 290 1 238 2 169 1 30 1 179 1 136 1 46 2 
233 2 238 5 303 1 143 1 217 1 28 1 29 1 179 1 30 2 310 1 286 1 163 2 289 2 290 1 167 2 169 1 84 1 46 5 275 1 
21 1 258 1 321 1 178 1 323 1 171 1 137 1 139 1 102 1 51 1 
342 1 215 1 
116 1 21 2 258 2 129 1 342 2 321 1 323 2 139 1 345 1 
174 1 165 1 24 1 
115 1 342 1 144 1 248 1 
21 3 258 3 342 1 321 3 323 3 102 1 139 3 345 1 
115 1 21 1 258 1 321 1 323 1 139 1 126 1 
115 1 116 1 21 1 129 1 258 1 321 1 323 1 139 1 345 1 
115 1 21 2 258 2 73 1 178 1 31 1 102 1 129 1 318 1 321 2 323 2 139 2 299 1 232 1 345 1 
21 2 258 2 226 1 342 1 295 1 321 1 323 2 139 1 102 1 
115 1 21 1 258 1 318 1 5 1 321 1 73 1 31 1 178 1 323 1 139 1 102 1 232 1 
174 1 21 2 258 2 102 1 129 1 165 1 321 2 323 2 139 2 345 1 
171 1 137 1 51 1 
137 1 326 1 51 1 
172 1 174 2 1 1 96 1 222 1 105 2 314 2 315 1 272 1 279 1 278 1 24 2 190 1 280 2 158 4 241 1 335 1 165 2 36 1 85 1 208 1 251 1 89 1 49 1 
115 1 21 1 258 1 321 1 73 1 270 1 323 1 139 1 
21 5 258 5 178 1 102 2 129 1 226 1 342 1 132 1 295 1 321 4 323 5 68 1 139 4 345 1 
115 1 21 2 258 2 321 2 270 1 323 2 139 2 126 1 
69 1 79 1 
69 1 79 1 
319 1 193 1 
319 1 193 1 
319 1 193 1 
69 1 79 1 325 1 
69 1 79 1 325 1 
69 1 79 1 111 1 
69 2 79 2 268 1 319 1 193 1 33 1 
69 1 79 1 325 1 
69 1 234 1 79 1 
69 1 234 1 79 1 
69 1 234 1 79 1 
69 2 257 1 238 2 329 1 120 1 282 2 243 2 291 2 38 1 169 1 39 2 79 2 228 1 268 1 134 1 182 2 64 3 82 1 46 2 
175 1 258 2 311 1 180 1 321 2 64 1 182 1 111 1 322 1 323 2 69 1 20 1 21 2 238 1 157 1 282 1 291 1 79 1 39 1 131 1 342 1 82 1 46 1 139 2 
302 1 37 1 61 1 
302 1 37 1 62 1 
61 2 37 3 62 1 99 1 263 1 44 1 
37 1 176 1 62 1 101 1 263 1 44 1 
61 1 37 2 62 1 44 1 263 2 
55 1 94 1 258 1 98 1 304 1 307 1 179 1 310 1 220 1 312 1 15 1 315 1 149 1 321 1 322 1 323 1 115 1 233 1 21 1 279 1 238 5 29 1 160 2 30 1 286 2 77 1 125 1 126 1 289 1 163 4 290 1 167 1 169 1 46 5 139 1 90 1 345 1 
55 1 94 1 258 1 98 1 304 1 307 1 179 1 310 1 312 1 15 1 315 1 149 1 317 2 321 1 113 1 322 1 185 1 323 1 233 1 115 1 21 1 279 1 238 5 29 1 30 3 286 2 125 1 126 1 289 1 163 4 290 1 167 1 169 1 249 2 46 5 90 1 139 1 345 1 
172 1 94 1 55 1 142 2 304 2 98 4 307 1 220 1 312 2 315 1 322 1 233 1 279 1 238 3 29 3 160 1 77 1 286 2 163 2 289 1 290 1 36 1 167 1 169 3 84 1 46 3 
172 2 94 1 55 2 142 3 98 7 304 4 307 1 146 1 220 1 312 4 106 1 315 2 322 2 233 1 279 2 238 4 29 5 160 2 77 1 286 4 289 1 163 3 290 1 36 2 340 1 167 1 169 4 84 1 46 4 
23 1 215 1 262 1 
332 1 262 1 
123 1 
95 1 262 1 
23 2 95 1 292 1 294 1 18 1 262 3 
95 1 292 1 262 1 
301 1 262 1 
172 1 140 1 279 1 22 1 213 1 158 7 72 1 122 2 105 3 35 1 314 4 293 1 269 1 170 1 87 1 272 3 251 2 
172 1 140 1 279 1 22 1 213 1 158 7 72 1 122 2 105 3 35 1 314 4 293 1 269 1 170 1 87 1 272 3 251 2 
172 1 140 1 279 1 22 1 213 1 158 7 72 1 122 2 105 3 35 1 314 4 293 1 269 1 170 1 87 1 272 3 251 2 274 1 
172 1 71 1 92 2 279 2 55 2 213 1 97 1 158 11 122 1 32 1 339 1 105 4 314 7 315 2 36 1 269 1 170 2 272 2 251 1 88 2 328 1 
172 3 96 1 213 1 103 1 105 6 314 8 269 1 114 1 272 4 117 1 22 1 279 3 280 2 158 14 241 1 122 2 72 2 35 2 293 1 170 1 85 1 87 2 251 3 89 1 
211 1 93 1 236 1 237 1 305 1 259 1 145 1 195 1 8 1 265 1 161 1 227 1 168 1 324 1 91 1 51 1 
186 1 211 1 236 1 237 1 305 2 121 1 145 1 8 1 265 2 161 1 164 1 166 1 227 1 168 1 324 1 91 1 51 1 
164 1 166 1 237 1 168 1 305 1 121 1 145 1 8 1 265 1 91 1 161 1 51 1 
186 1 277 1 236 1 237 2 305 1 306 1 8 2 76 1 265 1 227 1 168 2 343 1 137 1 91 2 51 1 
211 1 236 1 237 1 305 1 259 1 145 1 195 1 8 1 265 1 161 1 164 1 227 1 168 1 324 1 91 1 51 1 
148 1 
115 1 21 1 258 1 238 1 100 1 73 1 31 1 283 1 75 1 14 1 127 1 128 1 16 1 226 1 152 1 41 1 46 1 323 1 232 1 
115 1 21 1 258 1 238 1 100 1 73 1 31 1 283 1 75 1 14 1 127 1 128 1 16 1 226 1 152 1 41 1 46 1 323 1 232 1 
258 1 98 1 7 1 100 1 179 1 310 1 14 1 226 1 152 1 65 1 323 1 232 1 233 1 115 1 21 1 238 2 281 1 29 1 73 1 30 1 31 1 75 1 283 1 286 1 127 1 128 1 289 1 200 1 167 1 41 1 46 2 252 1 255 1 
0 1 142 1 258 1 98 1 100 1 307 1 179 2 310 1 14 1 226 1 152 1 153 1 65 1 323 1 232 1 115 1 233 1 276 1 21 1 188 1 238 3 281 1 29 2 334 1 73 1 31 1 30 3 244 1 283 1 75 1 286 2 337 1 127 1 289 1 128 1 167 1 41 1 46 3 137 2 255 1 51 2 
115 1 21 1 258 1 238 1 100 1 73 1 31 1 283 1 75 1 14 1 128 1 226 1 152 1 41 1 46 1 323 1 232 1 
115 1 21 1 258 1 238 1 330 1 74 1 100 1 73 1 31 1 283 1 75 1 14 1 128 1 226 1 41 1 46 1 323 1 232 1 
115 1 21 1 258 1 238 1 100 1 73 1 31 1 283 1 75 1 14 1 127 1 128 1 226 1 152 1 41 1 46 1 323 1 232 1 
115 1 21 1 258 1 238 2 100 1 73 1 31 1 179 1 30 1 245 1 283 1 75 1 14 1 127 1 128 1 226 1 152 1 41 1 136 1 323 1 46 2 232 1 
142 1 258 1 98 1 100 1 179 1 310 1 14 1 226 1 152 1 65 1 323 1 232 1 233 1 115 1 276 1 21 1 188 1 238 2 281 1 29 1 73 1 334 1 30 1 31 1 75 1 283 1 286 1 127 1 128 1 289 1 167 1 41 1 46 2 255 1 
142 1 258 1 100 1 179 1 310 1 264 1 14 1 226 1 152 1 65 1 323 1 232 1 115 1 233 1 276 1 21 1 188 1 238 2 281 1 27 1 29 1 73 1 334 1 30 1 31 1 75 1 283 1 286 1 338 1 127 1 128 1 289 1 167 1 41 1 46 2 255 1 
142 1 258 1 100 1 179 1 310 1 264 1 14 1 226 1 152 1 65 1 323 1 232 1 115 1 233 1 276 1 21 1 188 1 238 2 281 1 27 1 29 1 73 1 334 1 30 1 31 1 75 1 283 1 286 1 338 1 127 1 128 1 289 1 167 1 41 1 46 2 255 1 
258 1 98 1 7 1 100 1 179 1 310 1 14 1 226 1 152 1 65 1 323 1 232 1 115 1 233 1 21 1 238 2 281 1 29 1 73 1 30 1 31 1 75 1 283 1 286 1 338 1 127 1 128 1 34 1 289 1 198 1 200 1 167 1 41 1 46 2 252 1 255 1 
174 1 172 1 96 1 215 1 105 3 314 3 272 2 22 1 279 1 24 1 190 1 280 2 158 6 241 1 335 1 72 1 122 1 165 1 35 1 293 1 342 2 85 1 208 1 87 1 251 2 89 1 
174 4 172 1 92 3 55 2 212 1 96 2 97 1 105 6 314 8 315 2 150 1 269 1 272 2 24 11 279 2 235 1 280 4 158 14 241 2 335 2 32 1 165 11 199 1 36 1 247 1 342 1 85 2 208 1 47 1 48 1 251 1 88 3 89 2 
174 1 96 1 258 1 144 1 177 1 178 1 102 1 105 1 314 1 321 1 323 1 21 1 235 1 26 1 280 2 158 2 241 1 335 1 247 1 342 1 85 1 208 1 296 1 48 1 139 1 89 1 
21 1 235 1 258 1 96 1 280 2 158 1 241 1 335 1 178 1 102 1 105 1 108 1 321 1 85 1 323 1 208 1 137 1 48 1 89 1 139 1 51 1 
173 1 93 1 96 2 258 1 102 1 105 1 314 1 321 1 323 1 273 1 327 1 21 1 190 1 235 1 280 4 158 2 241 2 335 2 247 1 85 2 208 2 297 1 137 2 89 2 139 1 51 4 
174 1 172 1 55 1 96 1 258 1 105 2 314 1 315 1 321 1 323 1 272 1 21 1 24 1 279 1 280 2 158 3 241 1 191 1 335 1 165 1 129 1 36 1 85 1 208 1 48 1 251 1 89 1 139 1 345 1 
174 1 24 1 279 1 190 1 96 1 280 2 158 2 241 1 335 1 165 1 314 2 315 1 269 1 85 1 208 1 272 1 89 1 49 1 
174 1 172 1 24 1 190 1 96 1 280 2 158 2 241 1 335 1 222 1 105 2 165 1 36 1 85 1 208 1 272 1 251 1 89 1 
174 2 172 1 55 1 96 1 105 2 314 2 315 1 269 1 272 2 279 1 24 2 190 1 280 2 158 4 241 1 335 1 165 2 36 1 85 1 208 1 251 1 89 1 
174 1 24 1 279 1 96 1 280 2 158 2 241 1 335 1 165 1 314 2 315 1 269 1 85 1 208 1 272 1 273 1 89 1 49 1 
174 1 172 1 24 1 96 1 280 2 158 2 241 1 335 1 222 1 105 2 165 1 36 1 85 1 208 1 272 1 251 1 273 1 89 1 
174 2 172 1 55 1 96 1 105 2 314 2 315 1 269 1 272 2 273 1 279 1 24 2 280 2 158 4 241 1 335 1 165 2 36 1 85 1 208 1 251 1 89 1 
174 2 172 1 55 1 96 1 105 2 314 2 315 1 269 1 272 2 279 1 24 2 280 2 158 4 241 1 335 1 165 2 36 1 85 1 208 1 251 1 89 1 
130 1 171 1 137 1 51 1 
210 1 137 1 326 1 51 1 
174 2 172 1 55 1 96 1 105 2 314 2 315 1 269 1 272 2 279 1 24 2 280 2 158 4 241 1 335 1 165 2 36 1 85 1 208 1 48 1 251 1 89 1 
130 1 93 1 171 1 162 1 51 1 
172 1 174 1 55 1 96 1 258 1 105 1 314 2 315 1 321 1 269 1 323 1 272 1 21 1 279 1 24 1 280 2 158 3 241 1 335 1 129 1 165 1 36 1 204 1 85 1 208 1 48 1 89 1 139 1 345 1 
172 5 92 3 96 3 97 1 105 21 107 1 269 4 114 1 272 8 19 1 279 5 22 1 280 6 122 1 32 3 284 1 285 1 35 1 36 4 202 1 293 1 206 1 43 1 138 1 53 1 55 4 141 2 223 1 314 20 315 4 151 4 67 1 239 1 240 1 158 41 241 3 333 1 72 1 85 3 87 1 251 4 89 3 88 4 
53 1 172 4 92 3 141 2 55 4 96 4 97 1 223 1 105 18 314 20 107 1 315 4 151 4 269 3 67 1 114 1 272 7 19 1 22 1 279 5 280 8 240 1 239 1 158 38 333 1 241 4 122 1 72 1 32 3 284 1 285 1 35 1 36 3 202 2 293 1 206 1 43 1 85 4 87 1 251 4 138 1 88 4 89 4 
53 1 172 8 92 4 141 1 55 7 212 2 96 2 97 2 223 1 105 25 314 27 107 1 315 7 151 4 269 7 67 1 114 1 272 14 19 1 22 1 279 8 280 4 240 1 239 1 158 52 333 1 241 2 122 1 72 1 32 2 285 1 35 1 36 7 202 1 293 1 43 1 85 2 87 1 251 7 138 1 88 4 89 2 
53 1 172 3 92 1 141 1 55 3 96 2 97 1 223 2 105 10 314 9 315 3 181 1 151 2 269 3 67 1 114 1 272 6 279 3 280 4 239 1 158 19 241 2 32 1 284 1 285 1 36 3 85 2 251 3 88 2 89 2 
172 2 53 1 92 2 141 2 55 3 96 3 223 1 105 12 314 14 107 1 315 3 151 4 269 2 67 1 114 1 272 4 19 1 279 3 280 6 240 1 239 1 158 26 333 1 241 3 32 2 285 2 36 2 202 2 43 1 85 3 251 2 89 3 88 2 138 1 
104 1 69 1 291 1 38 1 79 1 39 1 228 1 268 1 282 1 182 1 
180 1 111 1 
69 1 266 1 291 1 79 1 39 1 282 1 194 1 182 1 260 1 
69 1 257 1 238 1 120 1 282 1 243 1 291 1 38 1 169 1 39 1 79 1 228 1 268 1 134 1 182 1 64 2 82 1 46 1 
69 1 257 1 238 1 120 1 282 1 243 1 291 1 38 1 169 1 39 1 79 1 228 1 268 1 134 1 182 1 64 2 82 1 46 1 
69 1 257 1 238 1 120 1 282 1 243 1 291 1 38 1 169 1 39 1 79 1 228 1 268 1 134 1 182 1 64 2 82 1 46 1 
313 1 33 1 325 1 
313 1 33 1 325 1 
234 1 118 1 
234 1 118 1 33 1 
175 1 157 1 
257 1 175 1 258 2 311 1 180 1 182 1 64 1 321 2 111 1 322 1 323 2 69 1 20 1 21 2 238 1 157 1 282 1 243 1 163 1 291 1 79 1 39 1 131 1 342 1 80 1 46 1 139 2 
313 1 325 1 
234 1 118 1 33 1 
173 2 256 1 21 2 3 1 235 1 96 1 258 2 280 2 158 2 241 1 335 1 221 1 105 1 314 1 247 1 85 1 323 2 250 1 208 1 297 1 48 1 89 1 51 2 
164 1 211 1 93 1 110 1 192 1 8 1 147 1 161 1 51 2 
164 1 211 1 112 1 8 1 147 1 161 1 51 1 
343 1 192 1 8 1 137 1 13 1 51 1 
164 1 211 1 110 1 192 1 8 1 147 1 161 1 51 1 
54 1 
21 1 15 1 130 1 258 1 321 1 271 1 323 1 171 1 137 1 139 1 51 1 345 1 
233 1 142 2 304 2 98 4 29 1 122 1 307 1 310 1 312 2 286 2 289 1 290 2 167 1 169 4 153 1 
290 1 169 1 217 1 215 1 29 1 286 1 275 1 
142 1 98 1 179 1 310 1 233 1 276 1 188 1 238 1 29 1 334 1 30 1 286 1 289 1 290 1 167 1 169 2 46 1 
289 1 233 1 214 1 167 1 310 1 137 1 51 1 
172 2 92 1 55 2 142 3 98 6 304 5 216 1 307 1 179 1 309 1 310 2 312 5 107 1 315 2 153 1 233 2 19 1 279 2 238 1 240 1 29 8 242 1 30 1 32 1 286 5 289 2 36 2 290 2 167 2 169 5 43 1 135 2 46 1 88 1 138 1 
172 1 258 1 310 1 264 1 103 1 15 1 149 1 321 1 323 1 115 1 233 1 21 1 279 2 238 1 29 2 242 1 72 1 286 2 125 1 126 1 289 1 35 1 167 1 135 2 46 1 87 1 139 1 345 1 
233 1 217 1 29 1 310 1 286 1 289 1 290 1 167 1 169 1 275 1 
172 2 55 2 279 2 142 5 304 5 98 10 29 5 242 1 286 5 312 5 315 2 201 1 36 2 169 5 135 2 
290 1 238 1 169 1 30 1 179 1 46 1 
233 2 0 1 238 3 29 2 307 2 179 2 30 4 219 1 310 1 286 2 337 1 289 2 267 1 167 2 153 2 84 1 154 2 46 3 137 2 155 1 51 4 
291 1 282 1 254 1 
291 1 282 1 254 1 
175 1 291 1 228 1 282 1 42 1 
291 1 282 1 254 1 
291 1 4 1 282 1 
291 1 4 1 282 1 
291 1 4 1 282 1 
291 1 282 1 
69 1 79 1 
172 1 92 1 96 1 105 4 314 4 114 1 272 2 279 1 22 1 280 2 158 8 241 1 122 1 72 1 32 1 35 1 293 1 43 1 85 1 87 1 251 2 88 1 89 1 
172 1 92 1 55 1 96 2 97 1 105 5 224 1 314 6 315 1 269 1 114 1 272 3 22 1 279 2 280 4 158 11 241 2 122 1 72 1 32 1 35 1 293 1 43 1 85 2 87 1 251 2 88 2 89 2 
172 3 92 1 55 2 96 3 105 10 224 1 314 9 107 1 315 2 269 1 114 1 272 4 19 1 22 1 279 3 280 6 240 1 158 19 241 3 122 1 72 1 32 1 35 1 36 2 202 1 293 1 43 1 85 3 87 1 251 3 88 1 89 3 138 1 
172 2 92 1 55 2 96 3 105 7 224 1 314 10 315 2 107 1 269 2 114 1 272 5 19 1 22 1 279 3 280 6 240 1 158 17 241 3 122 1 72 1 32 1 35 1 36 1 202 1 293 1 43 1 85 3 87 1 251 3 88 1 89 3 138 1 
172 1 92 1 96 1 105 4 314 4 114 1 272 2 279 1 22 1 280 2 158 8 241 1 122 1 72 1 32 1 35 1 293 1 43 1 85 1 87 1 251 2 88 1 89 1 
172 2 19 1 92 1 279 2 55 2 96 1 280 2 240 1 158 12 241 1 32 1 105 6 314 6 107 1 315 2 36 2 269 1 43 1 85 1 114 1 272 2 251 1 138 1 89 1 88 1 
172 2 92 1 55 2 96 4 105 8 224 1 314 10 107 1 315 2 269 2 114 1 272 5 19 1 22 1 279 3 280 8 240 1 158 18 241 4 122 1 72 1 32 1 35 1 36 1 202 2 293 1 43 1 85 4 87 1 251 3 88 1 89 4 138 1 
172 2 92 1 55 3 96 4 105 7 314 9 107 1 315 3 269 3 114 1 272 6 19 1 279 3 280 8 240 1 158 16 241 4 32 1 284 1 36 2 202 2 43 1 85 4 251 3 88 1 89 4 138 1 
172 1 22 2 279 1 158 7 72 3 105 4 35 3 314 3 293 1 269 3 272 6 87 1 251 3 
172 2 92 1 55 2 96 4 105 8 314 10 107 1 315 2 269 1 114 1 272 4 19 1 22 1 279 3 280 8 240 1 158 18 241 4 122 1 72 1 32 1 284 1 35 1 36 1 202 2 293 1 43 1 85 4 87 1 251 3 88 1 89 4 138 1 
172 1 279 1 22 1 96 2 280 4 158 8 241 2 122 1 72 1 105 4 314 4 35 1 202 1 293 1 269 1 85 2 87 1 272 3 251 2 89 2 
172 1 22 1 279 1 215 1 158 6 122 1 72 1 105 3 35 1 314 3 293 1 272 2 87 1 251 2 
172 1 55 1 279 1 96 1 280 2 158 4 241 1 105 2 224 1 314 2 315 1 36 1 269 1 85 1 272 2 251 1 89 1 
172 1 92 1 55 1 279 1 97 1 158 7 32 1 105 4 314 3 315 1 36 1 269 1 272 2 251 1 88 2 
172 3 92 2 55 2 212 1 96 2 97 1 105 12 314 11 315 2 269 4 272 9 22 1 279 3 280 4 158 23 241 2 122 1 72 2 35 2 36 2 202 2 293 1 85 2 45 1 87 1 47 1 251 5 88 2 89 2 
105 1 158 1 88 1 
314 1 92 1 158 1 
172 1 55 1 279 1 96 1 280 2 158 6 241 1 105 3 224 1 314 3 315 1 201 1 36 1 269 1 85 1 272 3 251 2 89 1 
172 2 19 1 92 1 279 2 55 2 96 1 280 2 240 1 158 12 241 1 32 1 105 6 314 6 107 1 315 2 36 2 269 1 43 1 85 1 114 1 272 2 251 1 138 1 89 1 88 1 
172 1 279 1 158 6 72 1 105 3 314 3 35 1 269 1 87 1 272 2 251 1 
22 1 96 1 280 2 158 3 241 1 72 1 105 2 314 1 35 1 202 1 293 1 269 1 85 1 45 1 272 2 251 1 89 1 
172 2 279 2 96 1 280 2 158 10 241 1 72 2 103 1 105 5 35 2 314 5 269 2 85 1 114 1 272 5 87 1 251 3 89 1 
279 1 96 1 280 2 158 2 241 1 314 2 315 1 269 1 85 1 114 1 272 1 89 1 
172 1 55 1 279 1 96 1 280 2 158 4 241 1 105 2 314 2 315 1 36 1 269 1 85 1 114 1 272 2 251 1 89 1 
96 3 280 6 158 3 241 3 72 1 284 1 105 2 35 1 314 1 202 1 269 1 85 3 45 1 114 1 272 2 251 1 89 3 
92 2 71 1 279 1 55 1 96 3 280 6 158 5 241 3 32 1 284 1 339 1 105 1 314 4 224 1 315 1 85 3 114 1 89 3 88 1 
21 1 258 1 226 1 342 1 295 1 230 1 323 1 
21 1 258 1 261 1 58 1 246 1 226 1 342 1 295 1 230 1 86 1 323 1 253 1 
215 1 137 1 51 1 
21 1 258 1 321 1 323 1 137 1 139 1 102 1 51 1 
21 1 258 1 321 1 154 1 323 1 139 1 102 1 51 1 
21 1 258 1 321 1 154 1 323 1 139 1 102 1 51 1 
238 1 154 1 46 1 51 1 
238 1 154 1 46 1 51 1 
83 1 51 1 
137 1 51 1 
256 1 21 1 93 1 258 1 96 1 280 2 241 1 335 1 102 1 321 1 85 1 323 1 208 1 48 1 89 1 139 1 51 1 
289 1 233 1 163 1 167 1 267 1 238 1 310 1 46 1 137 1 51 1 
83 1 51 1 
300 1 93 1 57 1 137 1 51 4 
203 1 51 1 
137 1 51 1 
164 1 93 1 51 2 
93 1 137 1 51 2 
93 1 137 1 51 2 
21 1 258 1 321 1 323 1 137 1 139 1 102 1 51 1 
154 1 51 1 
21 1 3 1 258 1 341 1 56 1 323 1 250 1 10 1 221 1 
189 1 341 1 133 1 
341 1 342 1 56 1 159 1 10 1 
258 1 56 1 10 1 15 1 149 1 318 1 321 1 323 1 232 1 115 2 21 1 189 1 238 1 159 1 73 1 31 1 125 1 126 1 163 1 287 1 290 1 341 1 169 1 133 1 46 1 139 1 345 1 
288 1 236 1 305 3 227 1 40 1 121 1 195 1 336 1 298 1 265 3 50 1 
156 1 205 1 50 1 209 1 
40 1 50 1 
40 1 215 1 336 1 50 1 
236 1 305 1 227 1 40 1 336 1 265 1 50 1 
237 1 305 1 91 1 
236 1 305 3 195 1 9 1 265 3 336 1 60 1 227 1 320 1 40 1 298 2 50 1 
119 1 236 1 305 2 227 1 40 1 121 1 336 1 265 2 50 1 
156 1 302 1 37 1 61 1 236 1 305 1 227 1 195 1 66 1 265 1 50 1 
236 1 305 1 227 1 40 1 195 1 265 1 50 1 
236 1 305 1 227 1 40 2 195 1 336 1 265 1 
52 1 236 2 305 2 195 1 308 1 265 2 12 1 227 2 40 1 50 1 
156 1 236 1 305 3 6 1 121 2 195 1 336 1 265 3 288 1 227 1 40 1 50 2 209 1 
236 1 302 1 305 2 99 1 121 1 195 1 336 1 265 2 37 2 61 1 62 1 227 1 40 1 81 1 50 1 
156 1 236 2 119 1 305 4 121 2 195 1 336 1 265 4 227 2 40 1 207 1 50 2 209 1 
236 1 305 1 227 1 40 1 195 1 336 1 265 1 50 1 
156 1 236 1 305 4 121 2 336 2 265 4 60 1 227 1 320 1 40 2 205 1 298 1 50 3 209 1 
236 1 305 2 121 1 195 1 124 1 265 2 336 1 109 1 227 1 40 1 231 1 50 1 
236 1 305 3 331 1 195 1 265 3 336 1 60 1 227 1 320 2 40 1 298 2 50 1 
187 2 196 1 50 2 59 1 
236 1 305 1 227 1 183 1 195 1 265 1 
288 1 236 1 305 2 227 1 40 1 121 1 195 1 336 1 265 2 50 1 
197 1 
236 1 305 1 227 1 40 1 195 1 336 1 265 1 50 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 74 (227,300) (227,300) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 74 (227,300) (227,300) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 74 (227,300) (227,300) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 74 (227,300) (227,300) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (25,97,166,198,253) (24,243) (24,243) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (200,345) 268 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (200,345) 268 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 173 118 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 173 181 282 197 (246,264) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 173 52 87 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 173 52 87 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 173 52 87 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 173 52 87 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 173 52 87 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 30 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 173 40 272 307 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 173 118 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 173 181 282 121 179 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 173 118 326 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 173 181 282 197 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 173 181 282 197 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 173 118 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 173 118 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 173 66 151 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 173 66 151 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 173 66 151 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 173 66 151 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 173 66 151 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 173 118 326 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 4 184 13 (91,177) (91,177) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 30 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 173 40 47 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 173 40 272 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 173 40 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 173 181 282 121 179 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 173 181 276 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 4 184 13 (91,177) (91,177) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 173 181 276 113 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 173 181 282 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 173 181 282 121 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 4 184 13 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 173 40 47 356 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 4 184 13 (91,177) (91,177) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 173 40 47 260 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 173 181 276 (91,177) (91,177) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | ASSIGN | 2623 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money; | ASSIGN | 1235 | = null
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> -1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 345 1 120 2 283 1 11 1 25 1 224 1 2 1 209 4 296 1 38 1 74 1 200 1 16 4 182 2 227 1 90 1 214 1 150 1 300 1 131 1 43 2 
205 1 345 1 120 2 283 1 11 1 25 1 224 1 2 1 209 4 296 1 38 1 74 1 200 1 16 4 182 2 227 1 90 1 214 1 150 1 300 1 131 1 43 2 
205 1 345 1 120 2 283 1 11 1 25 1 224 1 2 1 209 4 296 1 38 1 74 1 200 1 16 4 182 2 227 1 90 1 214 1 150 1 300 1 131 1 43 2 
205 1 345 1 120 2 283 1 11 1 25 1 224 1 2 1 209 4 296 1 38 1 74 1 200 1 16 4 182 2 227 1 90 1 214 1 150 1 300 1 131 1 43 2 
205 3 175 2 148 1 283 1 11 1 224 3 209 4 296 1 27 1 16 4 74 1 182 1 214 2 340 1 150 1 22 1 131 1 43 1 
16 1 182 1 120 1 24 1 76 1 243 1 150 1 283 1 25 1 209 1 38 1 43 1 
205 1 120 1 148 1 283 1 11 1 224 2 209 3 27 1 16 3 200 1 182 2 214 1 43 2 
200 1 16 1 182 1 268 1 283 1 209 1 43 1 
200 1 16 1 182 1 268 1 283 1 209 1 43 1 
230 1 30 1 161 1 
145 1 
3 2 103 2 186 1 187 2 238 1 359 2 171 2 348 2 
85 1 346 1 281 1 159 1 107 1 305 1 186 1 160 1 257 2 137 1 187 2 306 1 164 1 88 1 349 1 89 1 348 2 3 3 28 1 236 1 238 1 171 3 118 1 291 2 173 1 333 1 195 1 359 2 337 1 81 1 249 1 103 2 20 2 129 1 344 1 156 1 155 1 
3 1 114 1 135 1 103 1 186 1 187 1 12 1 359 1 171 1 348 1 
230 1 45 1 35 1 270 1 161 1 162 1 3 1 114 1 103 1 341 1 79 1 152 1 171 1 9 1 
230 1 45 1 35 1 270 2 161 1 187 1 359 1 348 1 3 1 114 1 103 1 341 2 152 1 171 1 9 1 
194 1 65 1 270 1 341 1 223 1 
338 1 194 1 230 1 325 1 270 2 161 1 341 2 223 1 
270 1 341 1 223 1 
194 1 3 1 114 1 135 1 103 1 186 1 270 1 187 1 12 1 341 1 359 1 288 1 171 1 348 1 
230 1 
338 1 194 1 230 1 32 1 270 2 161 1 341 2 223 1 
194 2 230 1 357 1 270 5 86 1 161 1 358 2 223 2 109 2 64 1 338 1 263 1 212 1 330 1 341 5 251 2 94 1 278 1 354 1 
30 1 238 1 
187 1 208 1 359 1 348 1 3 2 192 1 114 1 143 1 103 2 238 1 171 2 
264 1 178 1 136 1 
281 1 159 1 257 1 306 1 164 1 89 1 349 1 3 1 28 1 297 1 20 1 238 1 344 1 171 1 155 1 291 1 
281 1 146 1 178 1 159 1 257 1 359 1 306 1 164 1 259 1 349 1 89 1 348 1 3 2 28 1 103 1 20 1 344 1 155 1 171 2 291 1 
3 5 192 1 146 1 229 1 215 1 103 5 187 1 238 1 359 4 79 1 95 1 259 2 171 5 348 4 
3 2 114 1 135 1 103 2 359 2 117 1 171 2 348 2 
3 3 103 3 187 1 238 1 359 3 259 1 171 3 348 3 
3 1 114 1 135 1 103 1 359 1 171 1 348 1 
187 1 359 1 348 1 3 1 192 1 114 1 103 1 143 1 171 1 
85 1 346 1 281 1 45 1 159 1 107 1 186 1 257 1 137 1 187 2 306 1 164 1 259 1 88 1 349 1 89 1 348 3 28 1 3 4 350 1 192 1 114 1 236 1 238 1 171 4 9 1 291 1 333 1 146 1 35 1 36 1 270 1 359 3 337 1 81 1 249 1 103 3 20 1 129 1 341 1 152 1 344 1 156 1 155 1 
3 2 215 1 103 2 238 1 359 1 79 1 259 1 171 2 348 1 
230 1 45 1 146 1 270 1 35 1 187 1 359 3 259 2 348 3 3 3 192 1 350 1 114 1 275 1 103 3 341 1 152 1 171 3 9 1 
178 1 187 1 359 2 259 1 348 2 3 2 192 1 264 1 103 2 171 2 
281 1 159 1 257 1 306 1 164 1 89 1 349 1 3 1 28 1 20 1 238 1 344 1 171 1 155 1 291 1 
281 1 159 1 257 1 306 1 89 1 349 1 3 1 20 1 311 1 318 1 238 1 344 1 171 1 155 1 291 1 
173 1 346 1 333 1 71 1 282 1 178 1 197 1 136 1 107 1 137 1 246 1 108 1 337 1 88 1 181 1 247 1 99 1 249 1 264 1 129 1 156 1 
3 1 114 1 103 1 359 1 117 1 171 1 348 1 9 1 
59 1 308 1 
59 1 308 1 
339 1 180 1 
339 1 180 1 
339 1 180 1 
211 1 59 1 308 1 
59 1 342 1 308 1 
339 1 59 2 133 1 180 1 104 1 308 2 
211 1 59 1 308 1 
211 1 59 1 308 1 
59 1 284 1 308 1 
59 1 284 1 308 1 
59 1 284 1 308 1 
232 1 348 2 233 1 308 1 167 1 3 2 328 1 238 1 219 1 171 2 59 1 270 1 359 2 244 1 360 1 62 1 362 1 364 1 103 2 341 1 319 1 342 1 154 1 84 1 
230 1 172 1 59 2 72 1 270 2 244 2 163 1 308 2 233 3 261 1 51 1 167 2 362 2 328 2 75 1 42 2 341 2 104 1 84 1 
150 1 131 1 296 1 
76 1 150 1 296 1 
292 1 174 1 76 1 150 3 131 2 220 1 
174 1 76 1 170 1 150 2 131 1 220 1 
174 2 76 1 150 2 131 1 220 1 
230 2 46 2 185 1 282 1 285 1 161 1 86 2 108 1 109 1 232 1 191 1 212 2 144 2 290 2 54 1 145 2 194 4 222 1 31 1 121 1 33 1 270 5 358 1 360 1 223 1 181 1 338 1 364 1 341 5 250 2 251 1 278 1 
230 1 44 1 135 1 186 1 161 1 187 1 348 1 3 1 114 1 169 1 288 1 171 1 194 2 270 2 12 1 223 1 359 1 228 1 65 1 103 1 341 2 
230 3 46 2 282 1 161 1 285 1 86 2 108 1 109 1 232 1 212 2 330 1 144 1 290 2 54 1 145 2 55 1 194 2 222 1 31 1 33 1 121 1 270 3 358 1 181 1 341 3 251 1 250 2 
230 4 46 4 282 2 161 1 285 2 86 3 108 2 109 1 232 2 212 4 330 1 92 1 144 2 290 4 54 1 145 4 56 1 194 3 222 1 31 1 33 1 121 2 270 4 358 1 181 2 341 4 250 4 251 1 23 1 
317 1 30 1 159 1 
159 1 78 1 
134 1 
159 1 349 1 89 1 
159 1 225 1 
159 1 349 1 
240 1 317 2 159 3 299 1 349 1 89 1 
173 1 52 1 73 1 87 1 
173 1 52 1 73 1 87 1 
173 1 226 1 52 1 73 1 87 1 
173 1 52 1 73 1 87 1 
173 1 52 1 73 1 87 1 
205 1 157 1 105 1 257 1 283 1 347 1 209 2 306 1 26 1 27 1 168 1 76 1 351 1 291 1 292 1 120 1 176 1 148 1 224 1 126 1 296 1 100 1 16 2 182 1 202 1 20 1 150 2 131 1 43 1 155 1 
205 2 157 1 105 1 254 1 257 1 347 1 209 3 306 1 26 1 188 1 27 1 168 1 76 1 351 1 291 1 292 1 120 1 176 1 60 1 148 1 224 1 126 1 296 1 16 3 182 1 20 1 150 2 131 1 43 1 155 1 
205 2 157 1 105 1 254 1 257 1 347 1 209 2 306 1 26 1 27 1 168 1 76 1 291 1 292 1 120 1 60 1 148 1 224 1 126 1 296 1 16 2 20 1 150 2 131 1 155 1 
281 1 0 1 159 1 257 1 209 1 306 1 26 2 349 1 188 1 168 2 291 1 120 2 125 1 126 2 63 1 15 1 16 1 182 1 20 1 183 1 322 1 43 1 155 1 
157 1 105 1 257 1 283 1 347 1 209 1 306 1 26 1 168 1 76 1 351 1 291 1 292 1 120 1 176 1 60 1 126 1 296 1 16 1 182 1 202 1 20 1 150 2 131 1 43 1 155 1 
53 1 
230 2 280 2 281 2 45 1 86 2 140 1 3 1 289 2 145 2 291 2 9 1 96 1 196 2 295 1 63 1 338 3 101 1 17 1 19 2 20 2 103 1 341 5 250 2 251 1 152 1 155 1 204 1 159 1 257 2 161 1 258 2 109 1 306 1 162 1 349 1 212 2 114 1 310 1 266 1 115 1 79 1 352 1 171 1 313 4 314 2 31 1 270 5 35 1 358 1 223 6 271 1 361 1 274 2 322 1 278 1 
45 1 162 1 3 1 114 1 310 1 79 1 115 1 171 1 9 1 313 2 32 1 35 1 270 3 223 2 361 1 338 1 17 1 274 1 103 1 341 3 152 1 204 1 
230 1 45 1 161 1 162 1 3 1 114 1 310 1 79 1 115 1 289 1 171 1 9 1 313 3 32 1 35 1 270 3 223 1 361 1 338 1 17 1 103 1 341 3 152 1 204 1 
230 1 45 1 161 1 162 1 3 1 114 1 310 1 79 1 115 1 289 1 171 1 9 1 313 3 32 1 35 1 270 3 223 2 361 1 338 1 17 1 274 1 103 1 19 1 341 3 152 1 204 1 
280 2 230 5 45 1 86 1 161 5 258 2 109 1 162 1 3 1 212 1 114 1 310 1 237 1 93 1 79 1 115 1 289 4 171 1 9 1 313 6 314 2 96 1 119 1 32 1 196 2 293 1 270 5 35 1 358 1 295 1 223 7 361 1 338 3 17 1 18 1 274 4 103 1 19 4 341 5 250 2 251 1 152 1 278 1 204 1 
280 2 230 1 45 1 86 1 140 1 3 1 289 2 9 1 145 2 96 1 196 2 295 1 338 2 17 1 103 1 19 2 341 4 251 1 250 2 152 1 204 1 161 1 258 2 109 1 162 1 212 1 114 1 310 1 79 1 115 1 171 1 313 4 314 2 35 1 270 4 358 1 223 4 361 1 274 2 278 1 
230 1 280 2 45 1 161 1 86 1 258 2 109 1 162 1 3 1 212 1 114 1 310 1 93 1 79 1 115 1 289 2 171 1 9 1 313 4 314 2 96 1 119 1 196 2 35 1 270 4 293 1 358 1 223 4 295 1 361 1 338 2 17 1 274 2 19 2 103 1 341 4 250 2 251 1 152 1 278 1 204 1 
230 1 280 2 45 1 161 1 86 1 258 2 109 1 162 1 3 1 212 1 114 1 310 1 93 1 79 1 115 1 289 2 171 1 9 1 313 4 314 2 96 1 119 1 196 2 35 1 270 4 293 1 358 1 223 4 295 1 361 1 338 2 17 1 274 2 19 2 103 1 341 4 250 2 251 1 152 1 278 1 204 1 
230 1 45 1 161 1 86 1 258 2 109 1 162 1 3 1 212 1 114 1 331 1 310 1 93 1 79 1 115 1 289 2 353 2 171 1 145 2 9 1 313 4 314 2 96 1 124 1 35 1 270 4 358 1 223 4 315 1 361 1 338 2 201 2 17 1 274 2 19 2 103 1 341 4 251 1 152 1 278 1 204 1 
230 1 280 2 45 1 161 1 86 1 258 2 109 1 162 1 3 1 212 1 114 1 310 1 93 1 79 1 115 1 289 3 171 1 9 1 313 5 314 2 96 1 119 1 196 2 293 1 35 1 270 4 358 1 295 1 223 5 361 1 338 2 17 1 18 1 274 3 103 1 19 3 341 4 250 2 251 1 152 1 278 1 204 1 
230 1 280 2 45 1 161 1 86 1 258 2 109 1 162 1 3 1 212 1 114 1 310 1 93 1 79 1 115 1 289 3 171 1 9 1 313 5 314 2 96 1 119 1 196 2 293 1 35 1 270 4 358 1 295 1 223 5 361 1 338 2 17 1 18 1 274 3 103 1 19 3 341 4 250 2 251 1 152 1 278 1 204 1 
45 1 86 1 258 1 109 1 140 1 162 1 3 1 212 1 114 1 310 1 115 1 79 1 171 1 145 1 9 1 313 2 314 1 96 1 124 1 270 2 35 1 358 1 361 1 201 1 17 1 103 1 341 2 251 1 152 1 278 1 204 1 
355 1 173 1 346 1 184 1 177 1 107 1 137 1 13 1 337 1 88 1 181 1 247 1 30 1 91 1 276 1 129 1 7 1 156 1 
173 1 346 1 333 1 178 1 136 1 107 1 137 1 337 1 307 1 88 1 272 1 149 1 40 1 249 1 129 1 203 1 156 1 
173 1 333 1 346 1 146 1 256 1 107 1 137 1 359 1 337 1 259 1 348 1 88 1 149 1 3 1 249 1 213 1 236 1 103 1 129 1 171 1 156 1 118 1 
85 1 302 1 346 2 281 1 282 1 159 1 136 1 107 2 257 1 137 2 306 1 164 1 259 1 349 1 89 1 88 2 348 1 28 1 3 2 264 1 236 1 221 1 171 2 291 1 173 1 333 2 121 1 146 1 178 1 179 1 359 1 337 2 181 1 149 1 41 1 249 2 103 1 20 1 129 2 153 1 344 1 155 1 156 2 
173 1 346 1 281 1 107 1 257 1 326 1 137 1 335 1 337 1 88 1 20 1 129 1 156 1 118 1 291 1 
173 1 346 1 121 1 282 1 107 1 137 1 187 1 359 1 50 1 337 1 88 1 348 1 181 1 149 1 3 1 192 1 103 1 129 1 171 1 156 1 
181 1 247 1 173 1 346 1 282 1 197 1 107 1 137 1 129 1 337 1 88 1 156 1 
355 1 346 1 333 1 71 1 178 1 136 1 107 1 137 1 108 1 337 1 88 1 247 1 249 1 264 1 129 1 7 1 156 1 
181 1 247 1 173 1 346 1 121 1 282 1 107 1 137 1 129 1 337 1 88 1 156 1 
181 1 173 1 346 1 282 1 197 1 107 1 137 1 129 1 335 1 337 1 88 1 156 1 
355 1 346 1 333 1 71 1 178 1 136 1 107 1 137 1 335 1 108 1 337 1 88 1 249 1 264 1 129 1 7 1 156 1 
181 1 173 1 346 1 121 1 282 1 107 1 137 1 129 1 335 1 337 1 88 1 156 1 
181 1 173 1 346 1 121 1 282 1 107 1 137 1 129 1 337 1 88 1 156 1 
85 1 346 1 281 1 159 1 257 1 107 1 137 1 306 1 164 1 349 1 89 1 88 1 28 1 3 1 236 1 238 1 171 1 118 1 291 1 173 1 333 1 337 1 249 1 20 1 129 1 344 1 155 1 156 1 
346 1 281 1 159 1 257 1 107 1 137 1 306 1 349 1 89 1 88 1 3 1 236 1 311 1 238 1 171 1 118 1 291 1 173 1 333 1 337 1 249 1 318 1 20 1 320 1 129 1 344 1 155 1 156 1 
181 1 149 1 173 1 346 1 121 1 282 1 107 1 137 1 129 1 337 1 88 1 156 1 
85 1 302 1 346 1 282 1 159 1 257 1 107 1 137 1 306 1 164 1 89 1 349 1 88 1 28 1 3 1 171 1 291 1 173 1 121 1 337 1 181 1 100 1 20 1 129 1 344 1 155 1 156 1 
173 1 346 1 121 1 282 1 107 1 137 1 187 1 359 1 337 1 88 1 348 1 181 1 149 1 3 1 192 1 103 1 129 1 312 1 171 1 156 1 
173 1 333 1 273 1 363 1 249 1 66 1 77 1 107 1 137 1 129 1 151 1 337 1 8 1 88 1 
173 1 333 1 273 1 363 1 249 1 66 1 77 1 107 1 137 1 129 1 151 1 337 1 8 1 88 1 
173 1 333 1 273 1 363 1 249 1 66 1 77 1 107 1 137 1 129 1 151 1 337 1 8 1 88 1 
173 1 333 1 273 1 363 1 249 1 66 1 77 1 107 1 137 1 129 1 151 1 337 1 8 1 88 1 
173 1 333 1 273 1 363 1 249 1 66 1 77 1 107 1 137 1 129 1 151 1 337 1 8 1 88 1 
328 1 75 1 59 1 72 1 244 1 138 1 104 1 308 1 362 1 167 1 
342 1 219 1 
328 1 59 1 5 1 298 1 244 1 324 1 308 1 362 1 167 1 
211 1 231 1 
133 1 334 1 284 1 
230 1 172 1 59 1 72 1 270 1 244 1 163 1 308 1 233 2 51 1 167 1 362 1 328 1 75 1 42 1 341 1 104 1 84 1 
230 1 172 1 59 1 72 1 270 1 244 1 163 1 308 1 233 2 51 1 167 1 362 1 328 1 75 1 42 1 341 1 104 1 84 1 
230 1 172 1 59 1 72 1 270 1 244 1 163 1 308 1 233 2 51 1 167 1 362 1 328 1 75 1 42 1 341 1 104 1 84 1 
211 1 133 1 231 1 
211 1 133 1 231 1 
334 1 284 1 
133 1 334 1 284 1 
319 1 154 1 
232 1 308 1 233 1 348 2 167 1 3 2 328 1 265 1 238 1 219 1 171 2 194 1 172 1 59 1 270 1 244 1 360 1 359 2 62 1 362 1 364 1 42 1 103 2 341 1 319 1 342 1 154 1 
173 1 304 1 346 1 207 1 107 1 326 1 137 1 337 1 327 1 88 1 149 1 3 2 111 1 103 2 129 1 171 2 156 1 118 1 
292 1 157 1 105 1 69 1 60 1 257 2 306 1 126 1 139 1 296 1 100 1 112 1 76 1 150 2 20 2 131 1 351 1 155 1 291 2 
292 1 157 1 105 1 60 1 257 1 126 1 139 1 306 1 296 1 76 1 150 2 20 1 21 1 131 1 351 1 155 1 291 1 
281 1 159 1 257 1 306 1 126 1 349 1 63 1 112 1 20 1 183 1 322 1 267 1 155 1 291 1 
292 1 157 1 105 1 69 1 60 1 257 1 306 1 126 1 139 1 296 1 112 1 76 1 150 2 20 1 131 1 351 1 155 1 291 1 
343 1 
64 1 230 1 263 1 212 1 30 1 86 1 161 1 
280 1 230 1 86 1 161 1 109 1 212 1 145 1 196 1 270 1 358 1 295 1 223 1 338 1 341 1 250 1 251 1 278 1 
281 1 45 1 46 6 206 1 282 2 159 4 257 1 285 2 86 5 108 2 109 2 306 2 89 1 349 1 212 6 29 1 235 1 218 1 78 2 290 6 145 6 291 1 55 2 240 1 241 1 31 1 58 1 121 2 270 2 358 2 179 2 223 2 181 2 248 2 338 1 127 1 317 1 20 1 341 2 250 6 251 2 278 2 155 1 
46 5 47 1 106 1 70 1 282 2 86 4 285 1 109 1 108 2 260 1 189 1 212 4 217 1 290 5 145 3 121 2 358 1 181 2 40 1 203 1 250 3 251 1 278 1 
55 1 184 1 135 1 186 1 270 1 293 1 187 1 12 1 86 2 358 1 285 2 359 1 109 1 13 1 348 1 181 2 3 1 212 2 113 1 114 1 276 1 103 1 287 1 341 1 251 1 288 1 278 1 171 1 
230 1 358 1 161 1 86 1 109 1 64 1 263 1 212 1 251 1 278 1 
55 2 230 2 121 2 46 5 282 2 285 2 86 3 179 1 108 2 181 2 212 5 250 5 290 5 145 5 
338 1 230 1 270 1 161 1 341 1 223 1 
67 2 281 2 158 1 159 1 257 4 86 2 109 2 306 1 349 1 190 1 212 2 330 1 266 2 352 1 291 4 31 2 242 1 270 3 358 2 223 4 271 1 63 1 338 2 20 4 341 3 251 2 278 1 322 1 155 1 
85 1 346 1 281 1 159 1 107 1 257 1 186 1 137 1 187 2 306 1 164 1 88 1 348 2 89 1 349 1 3 3 28 1 236 1 238 1 171 3 291 1 333 1 359 2 337 1 81 1 249 1 20 1 103 2 129 1 344 1 155 1 156 1 
230 2 31 1 46 2 358 1 86 1 161 2 109 1 212 2 52 1 250 2 251 1 266 1 278 1 290 2 145 2 
303 1 328 1 244 1 
234 1 328 1 244 1 154 1 252 1 
303 1 328 1 244 1 
303 1 328 1 244 1 
328 1 142 1 244 1 
328 1 142 1 244 1 
328 1 142 1 244 1 
328 1 244 1 
59 1 308 1 
355 1 184 1 177 1 255 1 107 2 137 2 13 1 337 2 88 2 4 1 91 1 129 2 7 1 
181 1 355 1 173 1 184 1 91 1 30 1 177 1 276 1 13 1 7 1 
181 1 173 1 121 1 282 1 107 1 137 1 129 1 61 1 337 1 88 1 
173 1 40 1 333 1 249 1 47 1 203 1 
173 1 40 1 333 1 249 1 203 1 272 1 
333 1 249 1 203 1 
173 1 40 1 
181 1 173 1 333 1 121 1 249 1 282 1 179 1 
173 1 333 1 47 1 107 1 137 1 337 1 88 1 260 1 40 1 249 1 77 1 129 1 203 1 
181 1 173 1 276 1 
355 1 333 1 184 1 177 1 255 1 107 1 137 1 13 1 337 1 88 1 4 1 91 1 249 1 129 1 7 1 301 1 
181 1 355 1 173 1 113 1 184 1 276 1 13 1 7 1 
181 1 173 1 282 1 77 1 107 1 137 1 129 1 337 1 88 1 
181 1 173 1 121 1 282 1 77 1 107 1 137 1 129 1 337 1 88 1 
355 1 184 1 122 1 107 2 137 2 13 1 337 2 88 2 4 1 77 1 129 2 7 1 
173 1 333 1 356 1 47 1 122 1 107 3 137 3 61 1 337 3 88 3 40 1 249 1 77 1 129 3 203 1 
173 1 333 1 47 1 107 1 137 1 337 1 88 1 260 1 40 1 249 1 77 1 129 1 203 1 
173 1 333 1 47 1 107 2 61 1 137 2 337 2 88 2 260 1 40 1 249 1 77 1 129 2 203 1 
173 1 333 1 47 1 107 1 137 1 337 1 88 1 260 1 40 1 249 1 77 1 129 1 203 1 
173 1 333 1 47 1 107 1 137 1 337 1 88 1 260 1 40 1 249 1 77 1 129 1 203 1 
173 1 333 1 47 1 107 1 137 1 337 1 88 1 260 1 40 1 249 1 77 1 129 1 203 1 
173 1 333 1 47 1 107 1 137 1 337 1 88 1 260 1 40 1 249 1 77 1 129 1 203 1 
173 1 333 1 47 1 107 2 137 2 61 1 337 2 88 2 260 1 40 1 249 1 77 1 129 2 203 1 
173 1 333 1 47 1 122 1 107 2 137 2 337 2 88 2 260 1 40 1 249 1 77 1 129 2 203 1 
355 1 4 1 184 1 91 1 177 1 13 1 7 1 
173 1 333 1 47 1 122 1 107 2 137 2 337 2 88 2 260 1 40 1 249 1 77 1 129 2 203 1 
3 1 215 1 102 1 103 1 238 1 79 1 171 1 
57 1 147 1 245 1 210 1 3 1 309 1 102 1 215 1 103 1 238 1 79 1 171 1 
281 1 30 1 159 1 20 1 257 1 306 1 322 1 155 1 349 1 63 1 291 1 
281 1 159 1 257 1 359 1 306 1 259 1 164 1 349 1 89 1 348 1 3 2 103 1 20 1 238 1 344 1 171 2 155 1 291 1 
67 1 159 3 257 1 359 2 306 1 259 1 164 1 349 2 89 2 348 1 225 1 3 2 114 1 103 2 20 1 238 1 152 1 344 1 279 1 171 2 155 1 9 1 291 1 
67 1 159 3 257 2 306 1 259 1 348 1 89 2 349 2 3 2 114 1 238 1 171 2 291 2 9 1 359 2 14 1 225 1 318 1 20 2 103 2 152 1 344 1 155 1 279 1 
67 1 230 1 281 1 45 1 159 4 257 3 161 1 306 1 89 1 349 1 78 1 291 3 270 2 223 1 199 1 14 1 225 1 317 1 20 3 341 2 130 1 155 1 279 1 
230 1 67 1 281 1 45 1 159 4 270 2 257 3 161 1 223 1 306 1 14 1 349 1 89 1 225 1 317 1 20 3 341 2 218 1 78 1 279 1 155 1 291 3 
20 1 257 1 216 1 306 1 155 1 291 1 
240 1 281 2 159 3 60 1 1 1 305 1 257 6 306 3 39 1 89 1 349 2 262 1 100 1 110 1 286 1 216 1 20 7 239 1 116 1 155 2 291 7 
85 1 302 1 346 2 304 1 184 1 159 1 107 2 257 1 137 2 306 1 259 1 164 1 349 1 89 1 88 2 348 1 3 2 28 1 91 1 7 1 171 2 221 1 291 1 355 1 173 1 177 1 359 1 13 1 337 2 181 1 149 1 100 1 276 1 103 1 20 1 129 2 344 1 155 1 156 2 
230 1 281 1 45 1 206 1 159 2 257 1 86 1 161 1 109 2 263 1 212 1 29 1 218 1 78 1 291 1 194 1 58 1 242 1 270 3 358 2 223 2 64 1 338 1 317 1 20 1 341 3 251 2 278 2 
240 1 159 2 257 2 306 2 89 1 349 1 100 1 127 1 317 1 216 1 20 2 155 1 291 2 
281 1 10 1 159 1 257 4 306 1 14 1 349 1 63 1 100 1 20 4 322 1 155 1 291 4 
67 1 332 1 159 1 257 2 306 2 39 1 89 1 349 1 286 1 277 1 20 2 132 1 155 1 291 2 
105 1 281 1 76 1 150 1 20 1 257 1 306 1 296 1 155 1 291 1 
159 1 60 1 257 2 306 1 349 1 100 1 20 2 239 1 80 1 155 1 291 2 
67 1 281 1 10 1 159 3 257 4 306 2 349 2 63 1 100 1 262 1 20 5 239 1 322 1 116 1 155 2 291 5 
67 1 281 1 10 1 159 3 49 1 257 4 306 2 349 2 63 1 100 1 20 5 239 1 322 1 116 1 155 2 291 5 
281 1 159 1 257 1 359 1 306 1 259 1 349 1 89 1 348 1 3 2 103 1 20 1 318 1 238 1 344 1 171 2 155 1 291 1 
67 1 240 1 159 1 257 1 306 2 39 1 89 1 349 1 110 1 286 1 20 1 155 1 291 1 
48 1 269 1 34 1 238 1 323 1 
194 1 230 1 45 1 68 1 269 2 48 2 34 2 270 2 35 1 161 1 37 1 128 1 350 1 114 1 341 2 238 1 152 1 323 1 9 1 
269 1 48 1 207 1 327 1 3 1 111 1 103 1 323 1 171 1 
68 1 37 1 323 1 
27 1 30 1 148 1 224 1 
27 1 16 1 182 1 148 1 224 1 209 1 43 1 
16 1 120 1 26 1 
253 1 97 1 283 1 148 1 25 2 224 1 209 3 166 1 16 3 27 1 182 1 43 1 
27 1 205 1 16 2 182 1 175 1 148 1 224 1 209 2 43 1 
16 1 182 1 214 1 150 1 283 1 224 1 22 1 131 1 209 1 296 1 43 1 
16 1 182 1 148 1 283 1 224 1 209 1 43 1 
27 1 16 1 182 1 148 2 283 1 209 1 43 1 
148 1 283 1 224 1 209 2 98 1 16 2 182 2 316 1 193 1 43 2 
283 1 148 1 209 1 2 1 16 1 27 1 182 1 321 1 43 1 
292 1 205 1 123 1 148 1 283 1 224 1 209 2 296 1 27 1 16 2 182 1 76 1 150 2 131 1 43 1 
205 2 175 1 148 1 283 1 11 1 224 2 209 4 27 1 16 4 182 2 214 1 340 1 43 2 
27 1 16 1 182 1 148 1 283 1 224 1 209 1 43 1 
253 1 205 2 97 1 148 2 25 1 11 1 224 3 209 4 27 2 16 4 182 1 214 1 321 1 43 1 
205 1 148 1 283 1 224 1 209 2 141 1 16 2 27 1 182 1 329 1 82 1 43 1 
253 2 97 1 283 1 148 1 25 2 224 1 198 1 209 3 16 3 27 1 182 1 43 1 
365 2 224 2 336 1 165 1 
16 1 182 1 283 1 6 1 209 1 43 1 
27 1 205 1 16 2 182 1 148 1 283 1 224 1 209 2 83 1 43 1 
294 1 
27 1 16 1 182 1 148 1 283 1 224 1 209 1 43 1 
205 1 283 1 148 1 25 1 224 1 209 3 16 3 27 1 182 1 83 1 43 1 
214 1 321 1 11 1 224 1 
148 1 224 1 

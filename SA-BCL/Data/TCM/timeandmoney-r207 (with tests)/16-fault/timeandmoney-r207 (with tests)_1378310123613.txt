#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 248 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) (128,163) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) (128,163) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 83 87 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 1 192 269 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 120 93 152 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 120 93 152 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 120 93 152 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 120 93 152 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 120 93 152 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 1 192 269 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (29,113,225,254) (29,113,225,254) (29,113,225,254) 259 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
177 1 95 1 194 1 
40 2 177 1 86 1 
208 2 38 2 190 2 245 1 223 2 18 2 69 2 91 1 
232 1 274 1 88 1 126 2 164 1 280 1 129 1 91 1 239 1 240 2 130 1 208 2 242 1 173 1 245 1 18 2 139 1 247 1 61 1 97 1 98 1 66 1 223 3 183 2 27 2 69 2 302 1 70 1 305 1 107 1 267 1 38 2 190 3 230 1 196 2 315 1 271 1 
208 1 310 1 38 1 190 1 223 1 224 1 18 1 69 1 91 1 157 1 
203 1 223 1 234 1 125 1 69 1 241 1 149 1 310 1 190 1 189 1 13 1 177 1 194 1 291 1 
203 1 234 2 223 1 125 1 69 1 208 1 241 1 310 1 38 1 190 1 189 1 13 2 177 1 18 1 194 1 
199 1 13 1 234 1 138 1 293 1 
199 1 13 2 234 2 177 1 237 1 28 1 138 1 194 1 
199 1 13 1 234 1 
118 1 234 1 223 1 224 1 69 1 91 1 208 1 310 1 38 1 13 1 190 1 18 1 138 1 157 1 
177 1 
199 1 13 2 234 2 177 1 237 1 41 1 138 1 194 1 
220 1 199 2 51 1 234 5 237 1 299 1 5 2 258 1 238 2 59 1 306 2 92 1 11 1 80 1 13 5 17 1 177 1 138 2 194 1 
160 1 88 1 223 2 126 1 164 1 27 1 69 1 32 1 302 1 129 1 242 1 173 1 38 1 190 2 18 1 247 1 61 1 196 1 85 1 271 1 
245 1 95 1 
223 2 301 1 69 2 279 1 208 1 38 1 190 2 245 2 18 1 
201 1 32 1 169 1 
88 1 223 1 144 1 126 1 27 1 164 1 302 1 129 1 242 1 173 1 190 1 245 1 247 1 61 1 196 1 271 1 
208 1 38 3 190 3 245 1 223 3 18 3 69 3 85 1 
310 1 38 1 190 1 223 1 224 1 18 1 69 1 
208 1 310 1 38 1 190 1 223 1 18 1 301 1 69 1 279 1 
232 1 203 1 160 1 88 1 234 1 125 1 126 1 164 1 278 1 129 1 279 1 91 1 239 1 240 2 130 1 242 1 208 2 241 1 173 1 13 1 245 1 18 3 247 1 61 1 97 1 98 1 66 1 223 4 183 1 27 1 69 3 302 1 70 1 72 1 107 1 267 1 310 1 38 3 190 4 189 1 315 1 196 1 85 1 271 1 
38 1 190 2 245 1 223 2 18 1 69 2 291 1 147 1 85 1 
203 1 160 1 234 1 223 3 125 1 69 3 300 1 72 1 279 1 208 1 241 1 310 1 38 3 13 1 190 3 189 1 177 1 18 3 85 2 
223 2 69 2 32 1 279 1 169 1 208 1 38 2 190 2 18 2 85 1 
88 1 223 1 126 1 27 1 164 1 302 1 129 1 242 1 173 1 190 1 245 1 247 1 61 1 196 1 271 1 
25 1 88 1 223 1 126 1 27 1 302 1 129 1 242 1 173 1 190 1 245 1 247 1 61 1 196 1 49 1 
232 1 201 2 274 2 235 1 236 1 7 1 240 2 130 1 169 2 290 1 97 1 98 1 64 1 100 1 66 1 183 4 104 1 32 2 260 1 267 1 107 2 84 1 195 1 270 1 
310 1 38 1 189 1 190 1 223 1 18 1 69 1 231 1 
160 1 205 1 223 5 69 5 147 1 279 1 208 1 38 4 190 5 245 1 18 4 291 1 313 1 85 2 
310 1 38 2 190 2 223 2 224 1 18 2 69 2 231 1 
206 1 166 1 
206 1 166 1 
68 1 73 1 
68 1 73 1 
68 1 73 1 
272 1 68 1 206 2 166 2 146 1 73 1 
246 1 206 1 166 1 
77 1 206 1 166 1 
77 1 206 1 166 1 
77 1 206 1 166 1 
43 1 206 1 166 1 
43 1 206 1 166 1 
43 1 206 1 166 1 
140 1 295 1 159 3 204 2 272 1 3 1 234 2 255 2 166 2 206 2 281 2 132 1 13 2 212 1 177 1 288 2 156 1 216 1 48 2 
159 1 122 1 234 1 206 1 166 1 281 1 131 1 244 1 13 1 245 1 246 1 18 2 288 1 218 1 140 1 101 1 223 2 255 1 69 2 106 1 307 1 38 2 190 2 48 1 
110 1 4 1 63 1 
110 1 4 1 24 1 
262 1 81 1 4 3 96 1 24 1 63 2 
81 1 4 2 96 1 24 1 63 1 186 1 
81 1 4 2 96 2 24 1 63 1 
199 1 198 2 51 3 122 1 234 5 237 1 5 1 238 1 8 1 243 1 131 1 11 1 13 5 16 1 17 2 286 1 177 2 138 4 62 1 218 1 222 2 252 2 104 1 71 1 260 1 306 1 266 1 40 3 195 1 194 1 270 1 86 1 
199 6 122 4 51 8 234 9 237 1 6 1 5 2 238 2 8 3 243 2 11 1 13 9 17 6 175 1 176 5 177 5 138 7 293 5 222 6 252 6 226 1 299 1 30 1 104 3 185 1 71 1 260 3 306 2 266 2 40 9 195 3 194 1 45 1 270 3 86 3 
198 1 51 3 122 1 234 3 5 1 238 1 8 1 243 1 13 3 17 2 177 3 286 1 138 2 62 1 222 2 252 2 299 1 104 1 260 1 306 1 266 1 40 4 194 1 195 1 270 1 86 2 
198 2 51 5 122 2 234 4 5 1 238 1 8 2 243 1 13 4 17 4 175 1 177 4 286 1 138 3 62 1 222 4 252 4 226 1 299 1 30 1 104 2 260 2 306 1 266 1 40 7 194 1 195 2 270 2 86 3 
99 1 95 1 129 1 
213 1 129 1 
179 1 
302 1 129 1 
173 1 251 1 99 2 302 1 129 3 292 1 
173 1 302 1 129 1 
191 1 129 1 
64 2 117 1 143 1 181 2 274 4 235 3 183 7 104 1 260 1 148 1 264 1 107 3 39 1 60 1 42 1 153 1 294 1 
64 2 117 1 143 1 181 2 274 4 235 3 183 7 104 1 260 1 148 1 264 1 107 3 39 1 60 1 42 1 153 1 294 1 
64 2 117 1 143 1 181 2 274 4 235 3 183 7 104 1 260 1 148 1 264 1 133 1 107 3 39 1 60 1 42 1 153 1 294 1 
232 1 158 1 274 11 124 1 276 1 235 7 8 3 240 2 172 3 211 1 60 1 136 4 248 1 98 1 64 3 181 1 143 1 296 1 66 1 183 22 104 3 31 1 148 1 260 3 264 4 107 11 267 1 153 1 195 3 270 3 
232 1 117 1 274 5 235 3 240 2 10 1 60 1 217 1 294 1 98 1 64 2 181 1 143 1 66 1 183 9 104 2 260 2 148 1 264 1 107 4 267 1 312 1 153 1 42 1 
254 1 113 1 29 1 259 1 
163 1 254 1 113 1 29 1 
2 1 88 1 126 1 4 2 167 1 128 1 134 2 94 1 247 1 24 1 250 1 63 1 65 1 253 1 225 2 27 1 303 1 262 1 263 1 309 1 268 1 110 1 113 2 154 1 196 1 
163 1 254 1 113 1 29 1 
254 1 113 1 29 1 259 1 
119 1 
199 2 203 1 51 1 88 1 234 3 125 1 126 2 56 1 237 1 5 1 238 1 129 1 241 1 170 1 210 1 11 1 13 3 17 1 247 1 291 1 61 2 223 1 27 2 69 1 302 1 228 1 306 1 75 1 76 1 34 1 149 1 310 1 266 1 83 1 189 1 190 1 109 1 196 2 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
199 1 203 1 223 1 234 3 125 1 237 1 69 1 228 1 241 1 170 1 149 1 210 1 310 1 83 1 189 1 13 3 190 1 41 1 291 1 87 1 
203 1 223 1 234 2 125 1 5 1 69 1 238 1 228 1 241 1 306 1 170 1 149 1 210 1 310 1 11 1 83 1 189 1 190 1 13 2 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 234 2 223 1 125 1 69 1 228 1 170 1 241 1 149 1 210 1 310 1 83 1 189 1 13 2 190 1 291 1 87 1 
203 1 223 1 234 2 125 1 5 1 69 1 238 1 228 1 241 1 306 1 170 1 149 1 210 1 310 1 11 1 83 1 189 1 190 1 13 2 291 1 87 1 
117 1 232 1 201 1 274 3 235 2 169 1 240 2 130 1 245 2 60 1 95 1 294 1 97 1 98 1 64 2 100 1 181 1 66 1 183 6 104 1 32 1 148 1 260 1 267 1 107 3 42 1 
197 1 232 2 201 11 274 8 124 1 235 2 276 1 8 2 280 1 239 1 240 4 130 2 169 4 172 3 245 1 135 1 136 3 97 1 64 1 98 2 102 1 66 2 183 14 104 1 32 11 260 2 264 1 107 6 267 2 150 1 193 1 195 2 270 1 
232 1 160 1 88 1 274 1 126 1 164 1 129 1 280 1 169 1 130 1 240 2 239 1 242 1 173 1 245 1 18 1 247 1 215 1 61 1 97 1 98 1 141 1 66 1 223 2 144 1 27 1 183 2 69 1 302 1 261 1 267 1 107 1 38 1 190 2 150 1 196 1 85 1 271 1 
232 3 0 2 160 1 88 2 235 8 164 2 165 2 8 2 168 1 239 1 240 6 169 7 242 2 173 2 245 2 18 1 21 1 247 2 97 3 98 3 181 1 27 3 183 20 104 3 32 7 260 3 264 4 107 10 267 3 38 1 190 3 42 1 195 2 196 3 270 2 271 2 117 1 201 7 274 10 126 3 280 1 129 2 57 2 130 3 60 1 61 1 294 1 64 4 223 3 66 3 69 1 302 2 148 1 79 2 150 1 154 1 314 1 315 2 85 1 
1 1 232 2 273 1 88 2 274 1 126 6 56 1 129 3 280 1 240 4 130 2 239 1 209 1 18 1 247 2 289 1 139 1 61 2 97 2 98 2 100 1 223 1 66 2 27 5 183 2 69 1 302 2 34 1 267 2 107 1 38 1 190 1 269 1 192 1 154 1 44 1 115 1 196 6 85 1 
232 1 201 1 274 1 235 1 8 1 279 1 169 1 240 2 130 1 208 1 12 1 18 1 97 1 64 1 98 1 66 1 223 1 183 3 104 1 69 1 32 1 260 1 267 1 107 2 38 1 190 1 150 1 195 1 270 1 
232 1 98 1 201 1 100 1 274 2 66 1 235 1 183 2 32 1 169 1 130 1 240 2 260 1 264 1 267 1 84 1 195 1 97 1 
64 1 232 1 98 1 201 1 100 1 66 1 235 1 183 2 104 1 32 1 169 1 130 1 240 2 267 1 107 2 290 1 270 1 97 1 
232 1 201 2 274 2 235 2 8 1 240 2 130 1 169 2 97 1 98 1 64 1 100 1 66 1 183 4 104 1 32 2 260 1 264 1 267 1 107 2 195 1 270 1 
232 1 98 1 201 1 274 2 66 1 235 1 183 2 32 1 169 1 130 1 240 2 260 1 264 1 267 1 84 1 289 1 195 1 97 1 
64 1 232 1 98 1 201 1 66 1 235 1 183 2 104 1 32 1 169 1 130 1 240 2 267 1 107 2 289 1 290 1 270 1 97 1 
232 1 201 2 274 2 235 2 8 1 240 2 130 1 169 2 289 1 97 1 98 1 64 1 66 1 183 4 104 1 32 2 260 1 264 1 267 1 107 2 195 1 270 1 
64 1 232 1 98 1 201 2 274 2 66 1 235 2 183 4 104 1 32 2 8 1 169 2 130 1 240 2 260 1 264 1 107 2 267 1 195 1 270 1 97 1 
232 1 274 1 88 1 126 1 164 1 280 1 129 1 130 1 240 2 239 1 242 1 173 1 245 1 247 1 61 1 97 1 98 1 223 1 66 1 183 2 27 1 302 1 267 1 107 1 190 1 315 1 196 1 271 1 
232 1 274 1 88 1 126 1 280 1 129 1 130 1 240 2 239 1 242 1 173 1 245 1 247 1 180 1 61 1 97 1 98 1 25 1 223 1 66 1 183 2 27 1 302 1 267 1 107 1 190 1 196 1 49 1 
232 1 201 2 274 2 235 2 8 1 240 2 130 1 169 2 97 1 98 1 64 1 66 1 183 4 104 1 32 2 260 1 264 1 267 1 107 2 150 1 195 1 270 1 
232 1 201 2 274 2 88 1 126 1 235 2 164 1 8 1 129 1 169 2 130 1 240 2 242 1 173 1 247 1 97 1 64 1 98 1 223 1 66 1 183 4 27 1 104 1 32 2 302 1 260 1 264 1 79 1 107 2 267 1 190 1 195 1 44 1 315 1 196 1 270 1 271 1 
232 1 201 1 274 2 235 1 8 1 279 1 240 2 130 1 169 1 208 1 18 1 97 1 98 1 66 1 223 1 183 3 104 1 227 1 69 1 32 1 260 1 264 1 107 1 267 1 38 1 190 1 150 1 195 1 270 1 
98 1 232 1 120 1 267 1 93 1 66 1 312 1 152 1 240 2 207 1 
98 1 232 1 120 1 267 1 93 1 66 1 312 1 152 1 240 2 207 1 
98 1 232 1 120 1 267 1 93 1 66 1 312 1 152 1 240 2 207 1 
98 1 232 1 120 1 267 1 93 1 66 1 312 1 152 1 240 2 207 1 
98 1 232 1 120 1 267 1 93 1 66 1 312 1 152 1 240 2 207 1 
1 1 232 1 88 1 274 1 126 2 9 1 129 1 280 1 130 1 240 2 239 1 247 1 139 2 97 1 98 1 223 2 66 1 183 2 27 2 69 2 302 1 78 1 36 1 267 1 107 1 190 2 150 1 111 1 115 1 196 2 47 1 
200 1 88 1 253 1 126 2 4 2 27 2 127 1 303 1 262 1 268 1 110 1 151 1 285 1 247 1 154 1 44 1 24 1 196 2 63 1 
88 1 253 1 126 1 4 2 27 1 303 1 262 1 268 1 110 1 229 1 151 1 285 1 247 1 154 1 24 1 196 1 63 1 
88 1 53 1 126 1 56 1 27 1 127 1 302 1 304 1 129 1 34 1 268 1 247 1 61 1 196 1 
200 1 88 1 253 1 126 1 4 2 27 1 127 1 303 1 262 1 268 1 110 1 151 1 285 1 247 1 154 1 24 1 196 1 63 1 
233 1 
220 1 59 1 51 1 17 1 177 1 95 1 194 1 
199 1 202 1 51 1 234 1 237 1 5 1 238 1 306 1 11 1 13 1 40 1 17 1 177 2 194 1 155 1 316 1 86 1 
88 3 234 5 237 3 5 4 165 2 238 4 8 2 173 3 11 4 174 1 13 5 15 1 17 8 177 8 22 2 247 4 99 2 252 6 27 3 104 2 260 2 35 1 266 2 37 2 112 2 191 2 40 12 44 1 194 2 195 2 196 3 270 2 199 5 50 1 203 2 51 9 123 2 55 2 275 2 126 3 277 2 129 10 59 1 213 3 137 1 61 1 292 1 220 1 222 6 297 2 302 3 76 1 306 4 86 6 
118 1 51 2 123 1 124 1 5 1 277 1 238 1 91 1 208 1 171 1 172 1 11 1 17 2 18 1 136 1 177 2 222 2 223 1 252 2 224 1 26 1 69 1 76 1 306 1 310 1 266 1 38 1 190 1 40 2 194 1 157 1 86 1 
118 1 51 2 123 1 234 1 277 2 5 1 238 1 91 1 208 1 11 1 13 1 60 1 17 2 18 1 217 1 223 1 224 1 104 1 69 1 148 1 260 2 306 1 188 1 310 1 38 1 190 1 42 1 157 1 
220 1 51 1 5 1 238 1 59 1 306 1 11 1 17 1 177 1 194 1 
51 5 123 1 222 5 252 5 165 1 277 2 104 2 8 2 260 2 17 5 40 10 177 5 195 2 86 5 270 2 
199 1 13 1 234 1 177 1 237 1 194 1 
199 4 51 2 88 1 234 3 126 4 56 1 90 1 237 2 5 2 238 2 129 1 11 1 13 3 15 2 17 2 247 1 61 2 249 1 299 1 27 4 302 1 75 1 306 2 76 2 34 1 35 1 266 2 109 1 196 4 
232 1 88 1 126 1 164 1 91 1 129 1 239 1 240 2 130 1 208 2 242 1 173 1 245 1 18 2 247 1 61 1 97 1 98 1 66 1 223 3 183 1 27 1 69 2 70 1 302 1 107 1 267 1 38 2 190 3 196 1 315 1 271 1 
51 1 181 1 222 2 252 2 5 1 238 1 306 1 76 1 11 1 266 1 40 4 17 2 177 4 194 2 86 2 
307 1 255 1 284 1 288 1 156 1 
255 1 288 1 105 1 
255 1 288 1 105 1 
255 1 288 1 105 1 
265 1 255 1 288 1 
265 1 255 1 288 1 
265 1 255 1 288 1 
255 1 288 1 
206 1 166 1 
64 2 232 2 98 2 117 1 181 1 274 4 66 2 235 3 183 8 104 1 31 1 260 1 240 4 148 1 264 1 107 4 267 2 60 1 42 1 294 1 
117 1 64 2 181 1 274 3 235 2 183 6 104 1 148 1 260 1 107 3 60 1 95 1 42 1 294 1 
64 1 232 1 98 1 121 1 274 2 66 1 235 2 183 4 104 1 8 1 240 2 260 1 264 1 107 2 267 1 195 1 270 1 
64 1 274 3 124 1 276 1 235 2 183 7 104 1 8 1 260 1 172 1 264 1 107 4 136 2 195 1 270 1 
117 1 197 1 232 2 274 11 235 9 276 1 8 2 240 4 172 2 135 1 60 2 136 2 294 1 219 1 64 5 98 2 181 1 66 2 183 23 104 3 31 2 148 2 260 3 264 4 107 12 267 2 42 1 195 2 270 2 
107 1 183 1 136 1 
172 1 274 1 183 1 
98 1 232 1 64 2 121 1 274 3 66 1 235 3 183 6 165 1 104 1 8 1 240 2 260 1 264 1 267 1 107 3 195 1 270 1 
232 1 98 1 274 1 66 1 124 1 183 2 240 2 171 1 172 1 267 1 107 1 312 1 136 1 
64 1 274 3 235 2 183 6 104 1 260 1 148 1 264 1 107 3 60 1 42 1 
64 1 117 1 232 1 98 1 274 1 66 1 235 2 183 3 31 1 148 1 240 2 264 1 107 2 267 1 60 1 219 1 294 1 
64 2 274 4 235 3 183 8 104 2 148 1 260 2 264 1 107 4 60 1 42 1 217 1 
232 1 98 1 274 2 66 1 235 1 183 2 240 2 260 1 264 1 267 1 312 1 195 1 
64 1 232 1 98 1 274 2 66 1 235 2 183 4 104 1 8 1 240 2 260 1 264 1 107 2 267 1 312 1 195 1 270 1 
232 3 98 3 64 1 274 1 66 3 235 2 183 3 31 1 74 1 240 6 148 1 264 1 107 2 267 3 312 1 60 1 219 1 
117 1 232 5 158 1 121 1 274 16 124 1 276 1 235 12 8 3 240 10 172 3 211 1 60 3 136 4 294 1 219 1 98 5 64 7 181 1 296 1 66 5 183 34 104 5 31 2 74 1 148 3 260 5 264 5 107 18 267 5 312 1 42 2 195 3 270 3 
117 1 232 2 161 1 274 14 124 1 235 9 8 2 58 1 240 4 171 1 172 1 60 2 136 1 19 1 217 1 294 1 98 2 64 5 181 1 66 2 183 24 184 1 104 4 31 1 148 2 260 5 264 4 107 10 267 2 312 1 42 2 195 2 270 1 
117 1 232 3 121 1 161 1 274 12 124 1 276 1 235 5 8 3 58 1 240 6 171 1 172 1 60 1 136 2 19 1 294 1 64 3 98 3 181 1 66 3 184 1 183 20 104 2 31 1 148 1 260 4 264 2 107 8 267 3 312 1 42 1 195 3 270 1 
232 2 117 1 121 1 274 8 124 1 235 4 240 4 171 1 172 1 60 2 136 1 217 1 294 1 98 2 64 3 181 1 66 2 183 15 104 3 260 3 148 2 264 1 107 7 267 2 312 1 42 2 
232 2 117 1 121 1 274 8 124 1 235 7 240 4 171 1 172 1 60 2 136 1 217 1 294 1 98 2 64 4 181 1 66 2 183 15 104 3 260 3 148 2 264 3 107 7 267 2 312 1 42 2 
117 1 232 2 161 1 274 14 124 1 235 9 8 2 58 1 240 4 171 1 172 1 60 2 136 1 19 1 217 1 294 1 98 2 64 5 181 1 66 2 183 24 184 1 104 4 31 1 148 2 260 5 264 4 107 10 267 2 312 1 42 2 195 2 270 1 
232 1 98 1 274 1 66 1 124 1 183 2 240 2 171 1 172 1 267 1 107 1 312 1 136 1 
232 2 98 2 121 1 274 1 66 2 124 1 183 2 240 4 171 1 172 1 267 2 107 1 312 1 136 1 
232 2 98 2 274 1 66 2 124 1 183 2 74 1 240 4 171 1 172 1 267 2 107 1 312 1 136 1 
117 2 64 3 274 3 235 6 183 7 104 1 148 3 260 1 264 3 107 4 60 3 42 1 294 1 
232 2 98 2 274 1 66 2 124 1 183 2 74 1 240 4 171 1 172 1 267 2 107 1 312 1 136 1 
190 1 245 1 223 1 257 1 69 1 291 1 147 1 
52 1 223 1 182 1 257 1 69 1 147 1 308 1 108 1 190 1 245 1 291 1 317 1 
34 1 88 1 56 1 126 1 27 1 247 1 95 1 302 1 61 1 196 1 129 1 
88 1 223 2 126 1 27 1 164 1 69 1 302 1 129 1 242 1 173 1 38 1 190 2 245 1 18 1 247 1 61 1 196 1 85 1 
88 1 55 1 223 2 126 1 27 1 164 1 69 2 302 2 129 3 241 1 242 1 173 2 310 1 38 1 189 1 190 2 245 1 191 1 15 1 18 2 247 1 196 1 85 1 
25 1 88 1 55 1 223 2 126 2 27 2 69 2 302 2 129 3 241 1 242 1 173 2 310 1 38 1 189 1 190 2 245 1 191 1 15 1 18 2 247 1 46 1 196 2 85 1 
118 1 199 1 203 1 88 1 234 2 55 1 126 2 91 1 129 4 208 1 173 1 13 2 283 1 15 1 213 1 18 1 177 1 247 1 61 1 99 1 223 1 224 1 27 2 69 1 302 1 310 1 38 1 190 1 311 1 191 1 194 1 196 2 157 1 
199 1 203 1 99 1 88 1 55 1 234 2 126 3 27 3 302 1 129 4 173 1 37 1 13 2 191 1 15 1 213 1 177 1 247 1 194 1 46 1 61 1 196 3 
273 1 
1 1 273 1 88 2 89 1 126 5 27 4 145 1 302 2 129 3 33 1 209 1 173 1 269 1 192 1 247 3 154 1 44 1 61 2 196 5 292 1 
0 1 232 2 88 1 235 2 164 1 169 1 240 4 242 1 173 1 245 2 18 1 247 1 97 2 98 2 181 1 27 1 183 6 104 1 32 1 260 1 36 1 267 2 107 3 38 1 190 2 42 1 44 1 196 1 271 1 117 1 201 1 274 3 126 1 129 1 130 2 60 1 294 1 64 2 223 2 66 2 69 1 302 1 148 1 79 1 150 1 315 1 85 1 
199 2 203 1 51 1 234 3 126 1 237 1 5 2 238 2 129 2 59 1 11 2 13 3 17 1 213 1 177 1 138 1 22 1 61 1 220 1 99 1 297 1 27 1 306 2 35 1 37 1 112 1 194 1 196 1 
273 1 
88 1 126 4 56 1 27 4 302 1 129 1 34 1 214 1 247 1 44 1 46 1 61 1 196 4 
88 1 126 2 27 2 145 1 302 1 129 1 33 1 173 1 282 1 15 1 21 1 247 2 23 1 196 2 
88 1 110 1 253 1 126 1 4 1 27 1 247 1 24 1 61 1 196 1 
1 1 78 1 88 1 126 2 27 2 247 1 154 1 44 1 302 1 196 2 129 1 
1 1 88 2 56 1 126 5 27 4 302 2 129 3 34 1 209 1 15 1 214 1 192 1 247 2 44 1 61 1 196 5 
1 1 88 2 56 1 126 5 27 4 302 2 129 3 34 1 209 1 15 1 214 1 247 2 44 1 61 1 196 5 116 1 
25 1 88 1 223 2 126 1 27 1 69 1 302 1 129 1 242 1 173 1 38 1 190 2 245 1 18 1 247 1 61 1 196 1 85 1 
88 1 89 1 126 1 27 1 145 1 302 1 129 1 33 1 173 1 15 1 247 2 196 1 292 1 
142 1 162 1 190 1 223 1 111 1 67 1 69 1 47 1 9 1 
162 1 103 1 187 1 
142 1 162 1 245 1 67 1 287 1 
203 1 142 2 162 1 234 2 67 2 125 1 298 1 103 1 72 1 187 1 241 1 310 1 189 1 13 2 245 1 177 1 287 2 138 1 194 1 
309 1 2 1 95 1 167 1 
254 1 113 1 29 1 
134 1 94 1 250 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
221 1 254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 4 1 29 1 24 1 259 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
134 1 54 1 254 1 225 1 113 2 29 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
82 1 2 2 14 2 20 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
178 1 
254 1 113 1 29 1 259 1 
254 1 113 1 29 1 259 1 
2 1 54 1 256 1 114 1 
2 1 167 1 

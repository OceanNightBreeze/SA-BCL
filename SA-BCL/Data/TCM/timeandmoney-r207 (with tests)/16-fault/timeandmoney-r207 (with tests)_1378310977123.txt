#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 (101,110) (101,110) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 (101,110) (101,110) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 (101,110) (101,110) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 (101,110) (101,110) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 100 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 55 100 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (223,294) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (223,294) 207 178 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (223,294) 207 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 48 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 155 237 28 94 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (57,211,243,285) (57,211,243,285) 147 144 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | == -> <=
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3634 | * -> <<
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | ASSIGN | 2069 | = null

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
211 2 36 1 15 1 337 2 101 1 250 1 5 1 110 1 137 1 343 2 86 1 298 1 7 1 55 1 142 1 57 2 180 6 204 1 61 2 326 1 285 4 328 2 147 1 243 7 
211 2 36 1 298 1 7 1 15 1 55 1 337 2 101 1 250 1 57 2 142 1 180 6 204 1 5 1 326 1 61 2 285 4 328 2 137 1 110 1 147 1 343 2 243 7 86 1 
211 2 36 1 298 1 7 1 15 1 55 1 337 2 101 1 250 1 57 2 142 1 180 6 204 1 5 1 326 1 61 2 285 4 328 2 137 1 110 1 147 1 343 2 243 7 86 1 
211 2 36 1 298 1 7 1 15 1 55 1 337 2 101 1 250 1 57 2 142 1 180 6 204 1 5 1 326 1 61 2 285 4 328 2 137 1 110 1 147 1 343 2 243 7 86 1 
211 1 36 1 285 1 55 1 57 1 147 1 180 1 243 2 
211 1 220 1 36 1 246 1 337 1 57 1 250 1 142 1 180 2 292 1 204 1 76 1 5 1 12 1 61 1 243 2 
292 1 211 2 36 1 246 1 61 1 285 1 337 2 328 1 57 2 137 1 343 1 180 3 243 3 
24 1 211 2 36 1 55 1 100 1 337 2 57 2 180 6 326 1 61 1 285 5 328 2 137 1 147 1 243 7 343 2 86 1 
24 1 211 2 36 1 55 1 100 1 337 2 57 2 180 6 326 1 61 1 285 5 328 2 137 1 147 1 243 7 343 2 86 1 
46 1 159 1 114 1 
159 1 44 2 224 1 
281 2 68 1 132 1 341 2 93 2 247 2 73 2 242 2 
245 1 68 1 132 1 189 1 212 1 150 1 247 2 37 1 339 2 73 3 153 1 341 2 79 2 257 1 108 1 6 1 261 2 25 1 317 1 117 2 348 1 92 1 93 3 179 1 201 1 59 1 60 1 281 2 227 1 282 1 354 1 13 1 125 1 329 1 242 2 97 1 165 2 
302 1 67 1 281 1 68 1 341 1 93 1 247 1 73 1 242 1 330 1 
115 1 46 1 166 1 159 1 93 1 9 1 73 1 58 1 281 1 275 1 194 1 14 1 330 1 23 1 
115 2 46 1 166 1 159 1 93 1 247 1 9 1 73 1 281 1 341 1 275 1 194 2 14 1 242 1 330 1 
115 1 121 1 71 1 72 1 194 1 
115 2 46 1 49 1 121 1 159 1 71 1 194 2 111 1 
115 1 121 1 194 1 
115 1 67 1 68 1 71 1 93 1 247 1 73 1 302 1 281 1 341 1 194 1 216 1 242 1 330 1 
159 1 
115 2 46 1 121 1 159 1 71 1 327 1 194 2 111 1 
115 5 46 1 260 2 231 2 159 1 71 2 8 1 318 1 74 1 199 1 152 1 161 1 121 2 62 1 31 1 304 2 194 5 111 1 208 1 
25 1 317 1 221 1 117 1 92 1 348 1 93 2 247 1 73 2 201 1 60 1 153 1 227 1 281 1 78 1 79 1 125 1 242 1 83 1 165 1 
132 1 114 1 
90 1 132 2 93 2 247 1 73 2 281 2 341 1 21 1 242 1 
215 1 249 1 
25 1 317 1 132 1 117 1 348 1 92 1 93 1 73 1 201 1 60 1 119 1 153 1 227 1 79 1 125 1 165 1 
90 1 132 1 221 1 93 5 247 4 263 1 73 5 58 1 2 1 281 5 341 1 242 4 83 2 128 1 
302 1 281 1 88 1 93 1 247 1 73 1 242 1 330 1 
281 3 341 1 132 1 93 3 247 3 73 3 242 3 83 1 
302 1 281 1 93 1 247 1 73 1 242 1 330 1 
281 1 341 1 90 1 93 1 247 1 73 1 21 1 242 1 330 1 
245 1 166 1 68 1 132 1 189 1 150 1 247 3 339 2 73 4 153 1 341 2 107 1 79 1 275 1 194 1 83 1 115 1 261 1 25 1 317 1 90 1 221 1 117 1 92 1 348 1 93 4 9 1 179 1 201 1 59 1 60 1 226 1 227 1 281 3 282 1 354 1 13 1 125 1 14 1 329 1 242 3 330 1 97 1 165 1 
281 2 132 1 93 2 247 1 263 1 73 2 242 1 83 1 58 1 
115 1 166 1 90 1 221 1 159 1 93 3 247 3 9 1 73 3 226 1 281 3 341 1 275 1 194 1 14 1 242 3 20 1 330 1 83 2 
281 2 78 1 341 1 90 1 93 2 247 2 215 1 73 2 242 2 83 1 
25 1 317 1 132 1 117 1 348 1 92 1 93 1 73 1 201 1 60 1 153 1 227 1 79 1 125 1 165 1 
25 1 347 1 317 1 132 1 117 1 92 1 93 1 73 1 201 1 153 1 253 1 227 1 79 1 125 1 165 1 
189 1 188 1 212 2 339 2 249 2 168 1 40 1 234 1 215 2 155 1 261 4 299 1 139 1 301 1 179 1 181 1 282 1 354 1 13 2 329 1 229 1 97 1 244 1 
88 1 
52 1 223 1 
52 1 223 1 
294 1 230 1 
294 1 230 1 
294 1 230 1 
52 1 223 1 
52 1 223 1 
52 1 223 1 
52 1 223 1 
52 1 223 1 
52 1 223 1 
52 1 223 1 
52 1 223 1 
115 1 178 1 52 1 223 1 65 1 194 1 207 1 
52 1 223 1 65 1 207 1 
204 1 15 1 250 1 
204 1 12 1 250 1 
12 1 15 2 250 3 332 1 314 1 335 1 
12 1 15 1 267 1 250 2 332 1 314 1 
12 1 15 1 250 2 314 1 332 2 
231 1 188 1 71 4 74 3 152 1 17 1 40 1 291 2 271 1 293 1 44 3 194 5 258 2 111 1 176 2 197 1 155 1 115 5 46 1 260 1 299 1 159 2 8 2 118 1 224 1 237 1 202 1 279 1 325 1 121 1 304 1 355 1 
115 1 71 1 256 1 194 1 
231 1 71 2 188 1 74 3 40 1 291 2 44 4 194 3 197 1 176 1 258 2 155 1 115 3 46 1 260 1 299 1 159 3 118 1 8 2 224 2 199 1 237 1 202 1 279 1 304 1 355 1 
231 1 71 3 188 2 74 5 40 2 291 4 340 1 44 7 194 4 258 4 197 1 176 2 155 2 115 4 46 1 260 1 299 2 159 4 222 1 118 2 8 4 224 3 199 1 237 2 202 1 279 1 304 1 355 1 331 1 
317 1 126 1 114 1 
317 1 345 1 
214 1 
153 1 317 1 201 1 
317 1 91 1 
153 1 317 1 
153 1 317 3 353 1 126 2 201 1 233 1 
261 7 299 1 51 1 188 1 140 1 212 4 338 1 264 1 301 3 272 2 120 1 254 1 283 1 234 2 13 3 64 1 187 1 
261 7 299 1 51 1 188 1 140 1 212 4 338 1 264 1 301 3 272 2 120 1 254 1 283 1 234 2 13 3 64 1 187 1 
261 7 299 1 51 1 188 1 140 1 212 4 338 1 264 1 301 3 349 1 272 2 120 1 254 1 283 1 234 2 13 3 64 1 187 1 
261 1 120 1 48 1 51 2 212 1 272 1 
188 1 189 2 212 5 338 1 339 4 103 1 272 2 254 1 234 3 342 1 138 1 261 9 299 1 51 1 140 1 264 1 301 4 120 1 282 2 283 1 354 2 13 4 64 1 97 2 
211 1 36 1 246 1 15 1 151 1 337 1 250 2 133 1 292 1 310 1 79 1 235 1 22 1 346 1 177 1 25 1 262 1 117 1 92 1 57 1 180 2 204 1 284 1 61 1 12 1 285 1 243 2 127 1 335 1 165 1 
211 1 246 1 15 1 151 1 337 1 269 1 250 2 133 1 292 1 79 1 22 1 346 1 177 1 25 1 262 1 117 1 92 1 57 1 180 3 183 1 204 1 266 1 284 1 61 1 12 1 285 2 243 3 335 1 127 1 165 1 
246 1 15 1 151 1 337 1 269 1 250 2 133 1 292 1 79 1 346 1 177 1 25 1 262 1 117 1 92 1 180 2 183 1 204 1 61 1 284 1 12 1 285 2 243 2 335 1 165 1 
316 1 211 1 25 1 317 1 89 1 117 1 92 1 151 2 57 1 200 1 180 1 133 2 266 1 153 1 61 2 284 2 79 1 193 1 125 1 243 1 276 1 85 1 165 1 
346 1 211 1 25 1 177 1 262 1 36 1 117 1 92 1 15 1 151 1 250 2 57 1 180 1 133 1 183 1 204 1 12 1 61 1 284 1 79 1 235 1 22 1 243 1 335 1 127 1 165 1 
213 1 
231 1 102 2 152 1 232 1 104 1 105 2 153 1 274 2 311 4 44 2 275 1 194 5 111 3 112 2 276 1 115 5 46 1 50 1 317 1 117 2 159 2 8 2 160 2 9 1 277 1 58 1 279 1 281 1 121 6 125 2 14 1 330 1 333 1 165 2 166 1 289 1 73 1 74 2 169 1 255 1 79 2 296 2 18 1 23 1 260 1 25 1 89 1 92 1 93 1 224 2 182 1 304 1 305 2 356 1 307 1 
166 1 289 1 73 1 232 1 104 1 311 2 275 1 194 3 111 1 112 1 23 1 115 3 93 1 9 1 277 1 58 1 281 1 121 2 327 1 14 1 330 1 307 1 
166 1 289 1 73 1 232 1 104 1 311 3 275 1 194 3 111 1 23 1 115 3 46 1 159 1 93 1 9 1 160 1 277 1 58 1 281 1 121 1 327 1 14 1 330 1 307 1 
166 1 289 1 73 1 102 1 232 1 104 1 311 3 275 1 194 3 111 1 112 1 23 1 115 3 46 1 159 1 93 1 9 1 160 1 277 1 58 1 281 1 121 2 327 1 14 1 330 1 307 1 
231 1 102 4 152 1 232 1 104 1 105 2 311 4 274 2 275 1 194 5 111 3 112 4 115 5 46 1 159 1 8 1 9 1 160 2 277 1 58 1 278 1 281 2 121 7 206 1 327 1 14 1 66 1 242 1 330 2 209 1 67 1 166 1 68 1 247 1 289 1 73 2 74 1 341 1 296 2 216 1 136 1 23 1 260 1 93 2 224 2 182 1 302 1 304 1 305 2 356 1 307 1 
231 1 102 2 152 1 232 1 104 1 105 2 311 4 274 2 275 1 44 2 194 4 111 2 112 2 115 4 46 1 159 1 8 1 9 1 160 2 277 1 58 1 281 2 121 4 14 1 242 1 330 2 67 1 166 1 68 1 247 1 289 1 73 2 74 1 341 1 255 1 296 2 216 1 23 1 260 1 93 2 224 2 182 1 302 1 304 1 305 2 356 1 307 1 
231 1 102 2 152 1 232 1 104 1 105 2 311 4 274 2 275 1 194 4 111 2 112 2 115 4 46 1 159 1 8 1 9 1 160 2 277 1 58 1 281 2 121 4 66 1 14 1 242 1 330 2 209 1 67 1 166 1 68 1 247 1 289 1 73 2 74 1 341 1 296 2 216 1 136 1 23 1 260 1 93 2 224 2 182 1 302 1 304 1 305 2 356 1 307 1 
231 1 102 2 152 1 232 1 104 1 105 2 311 4 274 2 275 1 194 4 111 2 112 2 115 4 46 1 159 1 8 1 9 1 160 2 277 1 58 1 281 2 121 4 66 1 14 1 242 1 330 2 209 1 67 1 166 1 68 1 247 1 289 1 73 2 74 1 341 1 296 2 216 1 136 1 23 1 260 1 93 2 224 2 182 1 302 1 304 1 305 2 356 1 307 1 
231 1 102 2 152 1 232 1 104 1 41 2 311 4 275 1 44 2 194 4 111 2 112 2 115 4 46 1 159 1 8 1 9 1 160 2 321 1 277 1 238 1 58 1 281 2 121 4 14 1 242 1 330 2 67 1 166 1 68 1 247 1 289 1 73 2 74 1 75 1 171 2 341 1 296 2 216 1 136 1 23 1 260 1 93 2 302 1 304 1 305 2 356 1 307 1 
231 1 102 3 152 1 232 1 104 1 105 2 311 5 274 2 275 1 194 4 111 2 112 3 115 4 46 1 159 1 8 1 160 3 9 1 277 1 278 1 58 1 281 2 121 5 66 1 14 1 242 1 330 2 209 1 67 1 166 1 68 1 247 1 289 1 73 2 74 1 341 1 296 2 216 1 136 1 23 1 260 1 93 2 224 2 182 1 302 1 304 1 305 2 356 1 307 1 
231 1 102 3 152 1 232 1 104 1 105 2 311 5 274 2 275 1 194 4 111 2 112 3 115 4 46 1 159 1 8 1 160 3 9 1 277 1 278 1 58 1 281 2 121 5 66 1 14 1 242 1 330 2 209 1 67 1 166 1 68 1 247 1 289 1 73 2 74 1 341 1 296 2 216 1 136 1 23 1 260 1 93 2 224 2 182 1 302 1 304 1 305 2 356 1 307 1 
231 1 102 2 152 1 232 1 104 1 41 2 311 4 275 1 44 2 194 4 111 2 112 2 115 4 46 1 159 1 8 1 9 1 160 2 277 1 238 1 58 1 281 2 121 4 14 1 242 1 330 2 67 1 166 1 68 1 247 1 289 1 73 2 74 1 171 2 341 1 255 1 296 2 216 1 23 1 260 1 93 2 302 1 304 1 305 2 356 1 307 1 
132 2 189 1 188 1 212 3 338 1 339 2 249 1 272 1 254 1 234 2 215 1 114 1 261 6 299 1 140 1 301 2 179 1 282 1 283 1 354 1 64 1 13 3 329 1 229 1 97 1 
245 1 132 1 189 2 188 2 212 6 339 4 249 8 39 1 40 1 251 2 106 1 234 1 215 8 45 1 155 2 261 11 27 2 299 1 264 1 237 2 301 2 179 1 350 1 282 2 145 1 354 2 13 5 286 1 329 2 330 1 334 1 97 2 
130 1 245 1 132 1 189 1 212 1 247 1 73 2 339 2 153 1 79 1 215 1 45 1 218 1 6 1 83 1 25 1 261 2 317 1 117 1 221 1 92 1 348 1 93 2 225 1 179 1 201 1 60 1 119 1 227 1 281 1 282 1 354 1 125 1 13 1 329 1 242 1 97 1 165 1 
189 3 188 3 308 1 150 2 40 2 272 1 153 2 234 4 45 1 6 1 155 2 116 2 317 2 117 1 237 2 201 2 60 2 281 1 282 3 283 1 64 1 13 10 125 1 242 1 329 3 165 1 245 1 132 2 69 2 212 10 247 1 338 1 339 6 73 3 249 7 252 1 254 1 79 1 215 7 19 2 135 2 83 1 261 20 25 2 221 1 299 3 140 1 348 2 92 2 93 3 264 2 301 6 179 3 227 2 354 3 97 3 
129 1 245 1 189 2 212 1 247 1 73 1 339 4 153 2 310 1 79 7 175 1 257 2 6 1 83 1 276 1 25 2 261 2 317 3 117 8 89 1 92 2 93 1 95 1 179 2 322 1 183 1 281 1 282 2 63 1 122 1 354 2 205 1 125 2 13 1 242 1 329 2 229 1 97 2 165 8 
189 1 188 1 212 1 247 1 249 1 339 2 73 1 40 1 341 1 192 1 234 1 215 1 45 1 155 1 261 3 90 1 299 1 93 1 237 1 301 1 179 1 281 1 282 1 354 1 13 2 329 1 242 1 97 1 
261 2 189 1 188 1 212 2 264 1 249 1 339 2 301 1 179 1 168 1 282 1 354 1 215 1 329 1 229 1 155 1 97 1 
261 2 299 1 189 1 249 1 339 2 301 1 179 1 181 1 40 1 282 1 234 1 354 1 215 1 13 2 329 1 229 1 97 1 
188 1 189 1 212 2 339 2 249 2 40 1 234 1 215 2 155 1 261 4 299 1 264 1 237 1 301 2 179 1 282 1 354 1 13 2 329 1 229 1 97 1 
261 2 189 1 188 1 212 2 264 1 249 1 339 2 301 1 179 1 168 1 282 1 205 1 354 1 215 1 329 1 155 1 97 1 
261 2 299 1 189 1 249 1 339 2 301 1 179 1 181 1 40 1 282 1 234 1 205 1 354 1 215 1 13 2 329 1 97 1 
188 1 189 1 212 2 339 2 249 2 40 1 234 1 215 2 155 1 261 4 299 1 237 1 301 1 179 1 282 1 354 1 205 1 13 2 329 1 97 1 
261 4 299 1 189 1 188 1 212 2 264 1 249 2 339 2 237 1 301 2 179 1 40 1 282 1 234 1 354 1 13 2 215 2 329 1 155 1 97 1 
245 1 132 1 189 1 212 1 150 1 73 1 339 2 153 1 79 1 6 1 261 2 25 1 317 1 117 1 92 1 348 1 93 1 179 1 201 1 60 1 227 1 282 1 354 1 125 1 13 1 329 1 97 1 165 1 
245 1 132 1 189 1 212 1 73 1 339 2 153 1 253 1 79 1 6 1 261 2 25 1 347 1 317 1 117 1 92 1 141 1 93 1 179 1 201 1 227 1 282 1 354 1 125 1 13 1 329 1 97 1 165 1 
188 1 189 1 212 2 339 2 249 2 40 1 234 1 215 2 45 1 155 1 261 4 299 1 264 1 237 1 301 2 179 1 282 1 354 1 13 2 329 1 97 1 
188 1 189 1 212 2 150 1 249 2 73 1 339 2 40 1 153 1 310 1 79 1 234 1 215 2 155 1 261 4 25 1 116 1 317 1 299 1 117 1 92 1 348 1 93 1 264 1 237 1 301 2 179 1 201 1 60 1 227 1 282 1 354 1 13 2 329 1 97 1 165 1 
131 1 189 1 188 1 212 2 247 1 339 2 73 1 249 1 40 1 341 1 215 1 45 1 155 1 261 3 299 1 90 1 93 1 264 1 237 1 301 1 179 1 281 1 282 1 354 1 13 1 329 1 242 1 97 1 
189 2 188 3 288 1 212 9 339 4 39 1 40 3 103 1 251 2 43 2 234 3 82 1 259 1 155 3 261 19 27 1 299 3 300 1 264 3 320 2 56 1 237 3 301 6 323 1 282 2 354 2 13 10 241 1 33 1 97 2 
189 3 188 3 288 2 212 14 16 1 339 6 290 1 40 2 103 1 251 2 43 1 234 2 82 1 138 2 155 3 198 1 261 26 157 1 299 2 27 2 264 2 300 2 320 4 56 1 237 3 301 4 323 2 282 3 354 3 13 12 146 1 185 1 241 1 97 3 
188 5 189 3 40 4 39 1 103 1 272 1 234 4 43 1 155 4 198 1 157 1 56 1 320 4 237 4 323 3 282 3 283 1 13 21 64 1 241 1 212 20 288 2 16 1 338 1 339 6 290 1 251 4 254 1 82 1 344 1 138 1 261 41 299 5 27 3 140 1 264 4 300 1 301 8 354 3 185 1 146 1 97 3 33 1 
189 4 188 5 288 2 212 20 16 1 338 1 339 8 290 1 39 1 40 3 272 1 103 1 251 4 254 1 43 1 234 4 344 1 82 1 138 2 155 4 198 1 157 1 261 38 27 3 299 4 140 1 300 1 264 3 320 4 56 1 237 4 301 7 323 3 282 4 283 1 354 4 64 1 13 18 146 1 185 1 241 1 33 1 97 4 
189 2 188 8 288 1 212 27 16 1 338 1 339 4 290 1 39 2 40 7 272 1 103 1 251 4 254 1 43 1 234 7 82 1 138 1 155 7 198 1 157 1 261 52 27 4 299 8 140 1 300 1 264 7 320 4 56 1 237 7 301 14 323 2 282 2 283 1 354 2 64 1 13 25 146 1 185 1 241 1 334 2 97 2 
129 1 148 1 245 1 189 1 212 1 248 1 73 2 339 2 153 1 295 1 79 2 257 2 45 1 6 1 25 1 261 2 317 1 117 2 92 1 93 2 29 1 179 1 281 2 282 1 122 1 354 1 13 1 329 1 186 1 97 1 165 2 
25 1 177 1 262 1 117 2 92 1 15 1 250 2 143 1 183 1 204 1 4 1 310 1 12 1 284 1 79 2 312 1 335 1 127 1 165 2 
177 1 25 1 262 1 117 1 92 1 15 1 336 1 250 2 143 1 183 1 204 1 12 1 284 1 79 1 335 1 127 1 165 1 
316 1 25 1 47 1 317 1 117 1 89 1 92 1 153 1 4 1 284 1 79 1 125 1 276 1 165 1 
25 1 177 1 262 1 117 1 92 1 15 1 250 2 143 1 183 1 204 1 4 1 12 1 284 1 79 1 312 1 335 1 127 1 165 1 
32 1 
46 1 159 1 8 1 31 1 74 1 161 1 114 1 
231 1 74 1 152 1 105 1 274 1 44 1 194 1 111 1 115 1 46 1 260 1 159 2 8 1 224 1 182 1 121 1 304 1 
231 4 188 2 152 4 1 2 233 1 40 2 153 1 310 1 44 12 194 5 196 1 111 3 236 2 155 2 115 5 46 2 317 6 117 3 53 2 159 8 8 8 319 1 237 2 161 1 201 1 10 2 324 1 279 2 121 5 123 1 125 1 126 2 165 3 166 2 70 1 167 2 74 9 291 6 77 2 79 3 18 1 135 2 258 6 345 3 25 2 260 4 299 2 92 1 224 6 184 2 31 1 304 4 
231 2 188 2 16 1 74 8 152 2 1 2 290 1 291 5 40 2 251 1 44 6 18 1 194 1 81 1 111 1 258 5 155 2 198 1 115 1 46 2 157 1 260 2 53 1 27 1 299 2 54 1 159 5 8 5 224 3 237 2 323 1 279 1 121 1 304 2 185 1 
67 1 68 1 231 1 188 2 247 1 338 1 73 1 74 2 152 1 1 2 254 1 341 1 194 1 216 1 115 1 260 1 53 1 299 1 93 1 8 2 302 1 281 1 163 1 304 1 64 1 242 1 330 1 209 1 
46 1 260 1 231 1 159 1 8 1 74 1 152 1 161 1 304 1 31 1 
53 1 299 2 188 2 159 5 8 5 237 2 224 5 74 5 1 2 291 5 40 2 44 10 135 1 258 5 155 2 
115 1 46 1 121 1 159 1 194 1 111 1 
70 2 231 2 74 2 152 1 169 1 153 1 79 4 18 2 134 1 194 3 111 2 276 1 115 3 25 1 260 2 317 1 50 1 117 4 89 1 92 1 8 2 319 1 199 1 279 2 121 4 124 1 304 2 125 2 165 4 
245 1 68 1 132 1 189 1 150 1 247 2 339 2 73 3 153 1 341 2 79 1 261 1 25 1 317 1 117 1 348 1 92 1 93 3 179 1 201 1 59 1 60 1 281 2 227 1 282 1 354 1 13 1 125 1 242 2 329 1 97 1 165 1 
46 2 260 1 231 1 159 4 8 2 224 2 74 1 152 1 291 2 272 1 279 1 44 4 304 1 18 1 258 2 
210 1 162 1 191 1 
210 1 162 1 191 1 
210 1 162 1 191 1 
210 1 162 1 98 1 173 1 174 1 
210 1 162 1 0 1 
210 1 162 1 0 1 
210 1 162 1 0 1 
210 1 162 1 
52 1 223 1 
261 8 299 1 188 1 189 2 140 1 212 4 338 1 264 1 339 4 301 3 272 1 282 2 254 1 283 1 234 2 354 2 13 4 64 1 138 1 97 2 
261 6 299 1 140 1 188 1 212 3 338 1 301 2 272 1 254 1 283 1 234 2 13 3 64 1 114 1 
261 4 35 1 299 1 189 1 188 1 212 2 264 1 339 2 237 1 301 2 40 1 282 1 234 1 354 1 13 2 155 1 97 1 
261 7 299 1 27 1 188 1 212 3 264 1 237 1 301 2 40 1 39 1 323 1 251 2 234 1 13 4 155 1 
188 3 189 2 212 11 338 1 339 4 39 1 40 2 272 1 251 2 254 2 234 5 155 2 138 2 261 23 27 2 299 3 140 1 264 4 237 2 301 9 350 1 282 2 283 1 354 2 64 2 13 12 334 1 97 2 34 1 
251 1 261 1 13 1 
261 1 27 1 212 1 
261 6 35 1 299 1 189 1 188 1 212 3 264 1 339 2 237 1 301 3 40 1 282 1 354 1 234 2 13 3 135 1 155 1 97 1 
189 1 188 2 212 6 16 1 339 2 40 2 290 1 103 1 251 1 234 1 155 2 198 1 261 12 157 1 27 1 299 2 264 1 237 2 301 2 323 1 282 1 354 1 13 6 185 1 97 1 
261 6 299 1 188 1 212 3 338 1 264 1 301 2 254 1 234 1 13 3 64 1 
261 3 140 1 189 1 212 1 264 1 339 2 301 2 254 1 282 1 283 1 234 1 354 1 64 1 13 2 138 1 97 1 34 1 
261 10 299 2 189 1 188 2 212 5 264 2 338 1 339 2 301 5 103 1 282 1 254 2 354 1 163 1 234 3 64 2 13 5 97 1 
261 2 189 1 188 1 212 2 264 1 339 2 301 1 103 1 282 1 354 1 155 1 97 1 
261 4 299 1 189 1 188 1 212 2 264 1 339 2 237 1 301 2 40 1 103 1 282 1 234 1 354 1 13 2 155 1 97 1 
261 3 189 3 212 1 264 1 339 6 301 2 103 1 282 3 254 1 354 3 234 1 13 2 64 1 138 1 33 1 97 3 34 1 
261 5 35 1 27 2 188 1 28 1 189 3 212 4 94 1 339 6 237 1 103 1 323 1 251 1 282 3 354 3 13 1 155 1 97 3 33 1 
188 1 189 1 212 4 338 1 339 2 272 1 103 1 251 1 254 1 234 2 261 8 157 1 299 1 27 1 140 1 301 2 323 1 282 1 283 1 354 1 13 4 64 1 97 1 
35 1 189 2 188 2 212 6 338 1 339 4 39 1 272 1 103 1 251 2 254 1 234 2 155 1 261 11 157 1 299 1 27 1 140 1 264 1 237 1 301 3 323 1 282 2 283 1 354 2 64 1 13 5 97 2 
35 1 189 3 188 3 212 9 16 1 338 1 339 6 290 1 40 2 272 1 103 1 251 1 254 1 234 3 155 2 138 1 198 1 261 19 157 1 27 1 299 3 140 1 264 1 237 2 301 4 323 1 282 3 283 1 354 3 64 1 13 10 185 1 97 3 
35 1 189 3 188 3 212 10 16 1 338 1 339 6 40 1 290 1 272 1 103 1 251 1 254 1 234 3 138 1 155 2 198 1 261 17 157 1 27 1 299 2 140 1 264 2 237 2 301 5 323 1 282 3 283 1 354 3 64 1 13 7 185 1 97 3 
188 1 189 1 212 4 338 1 339 2 272 1 103 1 251 1 254 1 234 2 261 8 157 1 299 1 27 1 140 1 301 2 323 1 282 1 283 1 354 1 13 4 64 1 97 1 
189 1 188 2 212 6 16 1 339 2 40 2 290 1 103 1 251 1 234 1 155 2 198 1 261 12 157 1 27 1 299 2 264 1 237 2 301 2 323 1 282 1 354 1 13 6 185 1 97 1 
35 1 189 4 188 3 212 10 16 1 338 1 339 8 290 1 40 1 272 1 103 1 251 1 254 1 234 3 155 2 138 2 198 1 261 18 157 1 27 1 299 2 140 1 264 2 237 2 301 5 323 1 282 4 283 1 354 4 64 1 13 8 185 1 97 4 
189 4 188 3 212 9 16 1 339 8 290 1 40 2 103 1 251 1 234 3 155 3 138 2 198 1 261 16 157 1 27 1 299 2 264 3 237 3 301 6 323 1 282 4 354 4 13 7 185 1 97 4 33 1 
261 7 299 1 140 2 188 1 212 3 264 3 338 1 301 6 254 3 283 1 234 3 13 4 64 3 
189 4 188 3 212 10 16 1 338 1 339 8 290 1 40 1 272 1 103 1 251 1 254 1 234 3 155 2 138 2 198 1 261 18 157 1 27 1 299 2 140 1 264 1 237 2 301 4 323 1 282 4 283 1 354 4 64 1 13 8 185 1 97 4 33 1 
281 1 26 1 132 1 93 1 263 1 73 1 58 1 
26 1 132 1 93 1 263 1 73 1 265 1 58 1 281 1 164 1 195 1 109 1 306 1 
153 1 25 1 317 1 89 1 117 1 92 1 79 1 125 1 114 1 276 1 165 1 
25 1 317 1 132 1 117 1 348 1 92 1 93 2 247 1 73 2 201 1 153 1 227 1 281 1 79 1 125 1 242 1 83 1 165 1 
132 1 70 1 247 1 73 2 153 2 79 1 83 1 25 1 317 3 117 1 92 1 348 1 91 1 93 2 9 1 201 2 281 2 227 1 30 1 14 1 242 2 330 1 165 1 
99 1 132 1 70 1 247 1 73 2 153 2 253 1 79 2 83 1 25 1 317 3 117 2 92 1 91 1 93 2 9 1 201 2 281 2 227 1 30 1 14 1 242 2 330 1 165 2 
67 1 166 1 68 1 70 1 247 1 73 1 153 1 341 1 79 2 216 1 194 2 313 1 345 1 115 2 46 1 25 1 317 4 117 2 92 1 91 1 159 1 93 1 201 1 302 1 281 1 30 1 121 1 125 1 242 1 330 1 126 1 287 1 165 2 
67 1 166 1 68 1 70 1 247 1 73 1 341 1 79 1 194 2 216 1 236 1 345 1 115 2 46 1 317 2 117 1 159 1 93 1 302 1 281 1 121 1 242 1 330 1 126 1 165 1 
25 1 117 1 92 1 79 1 63 1 165 1 
25 3 317 3 117 7 92 2 95 1 201 1 322 1 233 1 183 1 172 1 153 2 310 1 79 6 257 1 63 1 175 1 122 1 125 2 228 1 84 1 165 7 
132 2 188 1 189 2 212 3 150 1 247 1 338 1 248 1 249 1 73 2 339 4 272 1 153 1 310 1 254 1 79 1 234 2 215 1 19 1 45 1 83 1 261 6 25 1 317 1 116 1 299 1 117 1 140 1 92 1 348 1 93 2 301 2 179 2 201 1 60 1 227 1 281 1 282 2 283 1 354 2 13 3 64 1 329 2 242 1 97 2 165 1 
166 1 231 2 71 1 167 1 74 1 152 2 77 1 79 1 194 3 111 1 236 1 345 1 115 3 46 1 260 2 317 2 117 1 159 1 8 1 319 1 161 1 184 1 121 2 31 1 304 2 125 1 126 1 165 1 
25 2 317 2 117 2 92 1 201 1 233 1 153 1 310 1 79 2 63 1 196 1 126 1 165 2 
25 1 99 1 317 1 117 4 89 1 92 1 153 1 310 1 154 1 79 4 125 1 276 1 165 4 
25 2 87 1 317 1 70 1 117 2 92 1 201 1 309 1 280 1 153 1 79 2 228 1 84 1 165 2 
204 1 25 1 177 1 117 1 12 1 92 1 79 1 125 1 250 1 165 1 
25 1 317 1 117 2 92 1 29 1 183 1 153 1 310 1 79 2 122 1 165 2 
25 2 317 3 70 1 89 1 117 5 92 2 322 1 153 2 310 1 154 1 79 4 122 1 175 1 125 1 276 1 165 5 
25 2 317 3 70 1 89 1 117 5 92 2 3 1 153 2 310 1 154 1 79 4 122 1 175 1 125 1 276 1 165 5 
25 1 317 1 132 1 117 1 92 1 93 2 247 1 73 2 201 1 153 1 227 1 281 1 253 1 79 1 125 1 242 1 83 1 165 1 
25 2 317 1 70 1 117 1 92 1 201 1 233 1 172 1 153 1 79 1 228 1 84 1 165 1 
11 1 132 1 268 1 38 1 239 1 
115 2 46 1 166 1 132 1 159 1 71 1 268 1 9 1 38 2 239 2 11 2 226 1 303 1 275 1 194 2 14 1 217 1 330 1 315 1 
281 1 148 1 295 1 93 1 268 1 73 1 38 1 186 1 239 1 
166 1 268 1 9 1 38 1 239 1 11 1 226 1 275 1 14 1 217 1 330 1 315 1 
292 1 246 1 337 1 114 1 
292 1 211 1 246 1 337 1 57 1 180 1 243 1 
61 1 151 1 180 1 
211 1 36 1 149 1 246 1 337 1 270 1 57 1 180 2 292 1 5 1 352 1 96 1 243 2 
211 1 285 1 57 1 147 1 180 1 243 2 
211 1 36 1 15 1 337 1 57 1 250 1 180 1 204 1 273 1 328 1 243 1 
211 1 36 1 246 1 337 1 57 1 180 1 243 1 
292 1 211 1 36 1 246 2 57 1 180 1 243 1 
211 2 297 1 36 1 246 1 337 1 57 2 180 2 243 2 219 1 113 1 
292 1 211 1 36 1 246 1 326 1 285 2 337 2 328 1 57 1 343 1 180 3 243 3 86 1 
211 1 36 1 158 1 246 1 15 1 337 1 250 2 57 1 180 2 292 1 204 1 12 1 285 1 243 2 335 1 
211 1 36 1 144 1 285 1 57 1 147 1 180 1 243 2 
292 1 211 1 36 1 246 1 337 1 57 1 180 1 243 1 
211 1 149 1 246 2 337 3 270 1 57 1 180 4 292 2 5 1 96 1 285 2 328 1 243 4 343 1 
292 1 24 1 351 1 211 1 36 1 246 1 285 1 337 1 57 1 180 2 243 2 170 1 
211 1 36 1 149 2 246 1 337 1 190 1 57 1 180 3 292 1 5 2 96 1 243 3 
240 1 337 2 80 2 203 1 
211 1 36 1 42 1 57 1 180 1 243 1 
292 1 211 1 36 1 246 1 326 1 285 1 337 1 57 1 180 2 243 2 
156 1 
292 1 211 1 36 1 246 1 337 1 57 1 180 1 243 1 
292 1 211 1 36 1 246 1 5 1 326 1 285 1 337 1 57 1 180 3 243 3 
337 1 270 1 328 1 343 1 
246 1 337 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) (211,291) (211,291) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) (211,291) (211,291) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) (211,291) (211,291) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) (211,291) (211,291) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) 4 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (120,321) 4 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (154,354) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 228 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (145,221) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 51 57 327 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 228 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7622 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4823 | stmt -> ;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
291 1 239 1 306 1 95 1 111 2 211 1 190 1 131 1 321 1 120 1 72 1 147 1 14 2 232 1 198 1 290 1 
291 1 239 1 306 1 95 1 111 2 211 1 190 1 131 1 321 1 120 1 72 1 147 1 14 2 232 1 198 1 290 1 
291 1 239 1 306 1 95 1 111 2 211 1 190 1 131 1 321 1 120 1 72 1 147 1 14 2 232 1 198 1 290 1 
291 1 239 1 306 1 95 1 111 2 211 1 190 1 131 1 321 1 120 1 72 1 147 1 14 2 232 1 198 1 290 1 
239 1 1 2 306 1 95 1 111 4 190 1 83 1 72 1 230 3 14 4 280 1 75 1 222 1 104 1 198 1 287 3 288 1 138 2 
111 2 95 1 306 1 190 1 130 1 131 1 26 1 72 1 147 1 14 2 280 1 222 1 7 1 287 1 198 1 290 1 
14 1 111 1 190 1 198 1 321 1 72 1 
14 2 111 2 190 1 119 1 198 1 321 1 4 1 230 1 72 1 
14 2 111 2 190 1 119 1 198 1 321 1 4 1 230 1 72 1 
108 1 228 1 3 1 
311 1 
15 2 97 1 245 2 348 2 247 2 55 1 40 2 179 2 
292 1 277 1 97 1 348 2 25 1 179 2 71 1 279 1 124 1 73 1 301 1 74 2 125 1 35 2 186 1 187 1 308 2 55 1 40 2 285 2 165 1 169 1 217 1 15 2 195 1 314 1 148 1 245 2 247 2 152 1 248 1 226 1 87 2 
15 1 333 1 270 1 245 1 348 1 247 1 55 1 40 1 179 1 71 1 
348 2 69 1 179 1 71 2 3 1 183 1 106 1 356 1 108 1 333 1 55 1 40 2 164 1 166 1 214 1 15 1 16 1 270 1 245 2 247 1 361 1 
348 2 69 2 179 2 71 2 3 1 183 1 106 2 108 1 333 1 55 1 40 2 164 1 166 1 15 2 16 1 270 1 245 2 247 2 361 1 
66 1 175 1 69 1 253 1 106 1 
66 1 108 1 175 1 93 1 43 1 69 2 106 2 3 1 
66 1 69 1 106 1 
175 1 333 1 348 1 69 1 55 1 179 1 40 1 164 1 71 1 15 1 270 1 245 1 247 1 106 1 
108 1 
66 1 108 1 175 1 93 1 357 1 69 2 106 2 3 1 
66 2 115 2 175 2 199 1 93 1 118 1 348 1 23 1 69 5 179 1 278 1 254 1 71 1 3 2 204 1 6 1 126 5 106 5 282 2 108 2 109 2 333 1 110 1 309 1 55 1 40 1 164 1 338 1 56 2 15 1 132 4 270 1 220 1 245 1 246 2 247 1 272 1 18 2 
228 1 97 1 
348 2 97 2 40 2 179 1 296 1 15 1 245 2 137 1 247 1 
112 1 145 1 354 1 
35 1 308 1 277 1 97 1 285 1 71 1 169 1 195 1 59 1 152 1 
35 1 188 1 308 1 348 1 179 1 40 1 285 1 169 1 15 1 195 1 149 1 245 1 152 1 354 1 
15 3 188 1 97 1 245 3 348 3 247 1 40 3 179 3 
15 1 333 1 245 1 348 1 40 1 179 1 71 1 
296 1 15 1 245 1 348 1 137 1 247 1 40 1 179 1 71 1 
292 1 277 1 97 1 348 3 69 1 179 3 71 2 124 1 73 1 301 1 74 1 137 1 183 1 106 1 80 1 35 1 187 1 188 1 308 1 55 1 40 3 285 1 165 1 166 1 169 1 217 1 15 3 195 1 16 1 314 1 148 1 244 1 149 1 245 3 247 2 152 1 248 1 87 2 361 1 
356 1 15 1 188 1 326 1 97 1 245 2 348 2 40 2 179 1 
108 1 188 2 348 3 69 1 179 3 40 3 359 1 71 1 166 1 15 3 16 1 244 1 149 1 137 1 245 3 247 1 183 1 106 1 361 1 
15 2 188 1 245 2 348 2 137 1 247 1 145 1 40 2 179 2 354 1 
35 1 308 1 97 1 277 1 285 1 71 1 169 1 195 1 152 1 
35 1 90 1 308 1 97 1 348 1 37 1 285 1 313 1 169 1 351 1 324 1 197 1 245 1 21 1 236 1 
115 1 292 1 349 1 25 2 154 1 203 1 124 1 182 1 73 1 301 1 74 4 329 1 354 2 187 1 109 1 210 1 145 2 194 1 148 2 221 1 112 2 248 1 249 1 87 2 
15 1 256 1 245 1 348 1 40 1 179 1 71 1 361 1 
356 1 188 2 22 1 276 1 348 5 97 1 179 4 40 5 15 4 326 1 149 1 245 5 137 1 247 1 
15 2 256 1 333 1 245 2 348 2 40 2 179 2 71 1 
207 1 201 1 
207 1 201 1 
307 1 234 1 
307 1 234 1 
307 1 234 1 
207 1 134 1 201 1 
207 1 299 1 201 1 
207 2 76 1 307 1 68 1 234 1 201 2 
207 1 134 1 201 1 
207 1 134 1 201 1 
207 1 92 1 201 1 
207 1 92 1 201 1 
207 1 92 1 201 1 
207 2 108 1 240 1 142 2 177 3 189 1 144 2 69 2 295 2 46 1 201 2 157 2 298 1 76 1 219 1 303 1 172 1 106 2 330 2 
293 1 97 1 177 1 348 2 69 1 179 2 201 1 157 1 122 1 299 1 77 1 106 1 78 1 330 1 207 1 50 1 142 1 144 1 40 2 339 1 15 2 243 1 219 1 245 2 
239 1 306 1 95 1 
306 1 95 1 130 1 
140 1 239 2 95 3 130 1 163 1 10 1 
140 1 239 1 95 2 130 1 163 1 13 1 
140 2 239 1 95 2 130 1 163 1 
66 1 115 1 175 4 116 2 93 1 293 1 2 2 69 5 278 1 135 1 3 1 122 1 203 1 259 1 126 2 106 5 282 1 108 2 109 1 210 1 310 1 311 3 337 1 312 1 146 2 339 1 56 1 132 3 246 1 113 1 151 1 227 1 
66 1 175 2 348 1 69 2 179 1 253 1 71 1 3 1 106 2 238 1 108 1 11 1 333 1 336 1 55 1 40 1 164 1 15 1 270 1 245 1 247 1 
175 2 115 1 293 1 116 2 2 1 69 3 3 1 203 1 6 1 259 1 126 2 106 3 108 3 282 1 109 1 210 1 310 1 311 4 312 2 146 2 56 1 132 3 246 1 113 1 151 1 227 1 
175 3 115 2 116 4 293 2 2 2 69 4 181 1 3 1 203 2 6 1 259 2 126 4 105 1 106 4 108 4 282 1 109 2 210 2 310 1 311 7 312 3 146 4 56 1 216 1 132 5 246 1 113 1 151 1 227 1 
228 1 350 1 236 1 
344 1 236 1 
318 1 
37 1 236 1 
255 1 197 1 37 1 223 1 350 2 236 3 
197 1 37 1 236 1 
208 1 236 1 
115 3 199 1 23 2 25 8 180 1 182 4 74 14 304 2 160 1 109 3 309 2 12 1 168 1 194 5 218 1 148 6 341 1 220 2 
115 3 199 1 23 2 25 8 180 1 182 4 74 14 304 2 160 1 109 3 309 2 12 1 168 1 194 7 218 3 148 6 341 1 220 2 
115 3 199 1 23 2 25 8 180 1 182 4 74 14 304 2 160 1 109 3 212 1 309 2 12 1 168 1 194 5 218 1 148 6 341 1 220 2 
115 6 199 1 23 2 178 1 25 21 180 1 121 1 203 3 124 1 182 7 73 1 301 1 74 40 259 3 304 3 281 1 51 3 160 1 187 1 210 3 109 6 309 3 12 1 41 1 168 2 194 14 218 7 148 19 57 1 341 2 220 3 17 1 150 4 225 1 87 2 
115 3 199 1 23 2 25 9 180 1 27 1 124 2 182 5 102 1 73 2 301 2 74 16 304 2 187 2 109 3 309 2 12 1 168 1 194 7 218 2 148 7 341 1 220 2 225 1 87 4 
317 1 250 1 95 2 230 1 72 1 280 1 205 1 33 1 10 1 49 1 35 1 239 1 306 1 308 1 111 2 143 1 190 1 334 1 130 1 285 1 215 1 14 2 313 1 171 1 222 1 273 1 287 1 198 1 21 1 290 1 
317 1 250 1 95 2 230 2 280 1 205 1 33 1 10 1 49 1 35 1 239 1 306 1 308 1 111 3 143 1 190 1 241 1 334 1 130 1 358 1 285 1 215 1 14 3 313 1 222 1 287 1 198 1 21 1 64 1 290 1 
35 1 317 1 239 1 250 1 306 1 95 2 111 2 308 1 143 1 130 1 358 1 285 1 215 1 230 2 313 1 14 2 280 1 222 1 287 1 21 1 33 1 10 1 64 1 49 1 290 1 
317 2 300 1 33 2 49 2 332 1 236 1 35 1 308 1 111 1 190 1 241 1 37 1 213 1 39 1 285 1 14 1 313 1 169 1 198 1 21 1 289 1 173 1 290 2 
317 1 250 1 95 2 72 1 205 1 33 1 10 1 49 1 35 1 239 1 306 1 308 1 111 1 143 1 190 1 334 1 130 1 358 1 285 1 215 1 14 1 313 1 273 1 198 1 21 1 290 1 
28 1 
66 2 93 1 348 1 319 1 69 3 278 1 136 1 3 2 71 1 183 1 353 1 126 1 106 3 206 1 331 1 236 1 332 1 35 2 108 2 356 1 282 1 308 2 37 1 310 1 335 2 40 1 285 2 166 1 214 1 313 1 56 1 169 2 132 1 16 1 61 1 245 1 246 1 315 1 360 1 21 1 289 1 361 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
66 1 108 2 356 1 93 1 357 1 348 1 335 2 69 3 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 3 360 1 206 1 361 1 331 1 
91 1 348 1 69 2 278 1 136 1 71 1 3 2 183 1 126 1 106 2 206 1 331 1 282 1 356 1 108 2 335 2 40 1 214 1 166 1 56 1 132 1 16 1 61 1 246 1 245 1 360 1 361 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
108 2 356 1 348 1 335 2 69 2 40 1 136 1 3 2 71 1 166 1 214 1 16 1 61 1 245 1 183 1 106 2 360 1 206 1 361 1 331 1 
274 1 348 1 69 2 278 1 136 1 71 1 3 2 183 1 126 1 106 2 206 1 331 1 282 1 356 1 108 2 335 2 40 1 214 1 166 1 56 1 132 1 16 1 61 1 246 1 245 1 360 1 361 1 
115 1 292 1 187 1 109 1 228 1 97 2 23 1 309 1 25 3 12 1 180 1 194 2 124 1 182 2 301 1 73 1 148 2 74 5 220 1 249 1 248 1 304 1 87 2 
292 1 115 2 97 1 252 1 25 8 203 2 124 2 182 1 73 2 301 2 74 14 259 2 233 1 354 11 139 1 51 3 186 1 187 2 210 1 109 1 265 1 145 4 194 2 217 1 218 1 57 1 148 6 150 3 17 1 112 11 345 1 248 2 87 4 
292 1 97 1 348 1 25 1 179 1 124 1 301 1 73 1 74 2 328 1 184 1 35 1 186 1 187 1 188 1 308 1 265 1 145 1 40 1 285 1 169 1 15 1 217 1 195 1 148 1 59 1 269 1 149 1 245 1 152 1 248 1 87 2 
292 1 153 1 348 1 179 1 124 1 301 1 73 1 74 2 158 1 35 1 263 1 187 1 188 1 308 1 265 1 192 1 40 1 285 1 169 1 15 1 217 1 148 2 149 1 245 1 248 1 87 2 
292 2 348 1 320 1 99 1 25 1 179 1 156 1 279 2 124 2 257 1 73 2 301 2 74 2 159 1 236 3 332 1 185 1 35 8 186 1 187 2 188 1 308 7 36 1 37 2 358 1 40 1 285 8 313 2 169 2 15 1 217 1 171 1 148 1 245 1 249 1 21 2 248 2 289 1 87 4 
292 1 115 1 348 1 25 1 179 1 203 1 124 1 182 1 73 1 301 1 74 3 259 1 137 1 354 1 187 1 210 1 109 1 265 1 145 1 40 1 194 1 15 1 148 2 245 1 112 1 247 1 62 1 248 1 87 2 
292 1 115 1 187 1 349 1 145 1 25 2 194 1 203 1 218 1 124 1 301 1 73 1 74 2 112 1 249 1 248 1 354 1 87 2 
292 1 187 1 210 1 109 1 145 1 194 1 124 1 182 1 301 1 73 1 74 2 148 2 112 1 249 1 248 1 354 1 329 1 87 2 
115 1 292 1 25 2 203 1 124 1 182 1 73 1 301 1 74 4 259 1 354 2 187 1 210 1 109 1 145 2 194 2 218 1 148 2 112 2 248 1 249 1 87 2 
292 1 115 1 187 1 349 1 145 1 99 1 25 2 194 1 203 1 218 1 124 1 301 1 73 1 74 2 112 1 248 1 354 1 87 2 
292 1 187 1 210 1 109 1 145 1 99 1 194 1 124 1 182 1 301 1 73 1 74 2 148 2 112 1 248 1 354 1 329 1 87 2 
115 1 292 1 25 2 99 1 203 1 124 1 182 1 73 1 301 1 74 4 259 1 354 2 187 1 210 1 109 1 145 2 194 2 218 1 148 2 112 2 248 1 87 2 
115 1 292 1 25 2 203 1 124 1 182 1 73 1 301 1 74 4 259 1 354 2 187 1 210 1 109 1 145 2 194 2 218 1 148 2 112 2 248 1 87 2 
292 1 97 1 277 1 25 1 71 1 124 1 301 1 73 1 74 2 35 1 186 1 187 1 308 1 285 1 165 1 169 1 217 1 195 1 148 1 152 1 248 1 87 2 
292 1 90 1 97 1 348 1 25 1 351 1 324 1 124 1 301 1 73 1 74 2 236 1 35 1 186 1 209 1 187 1 308 1 37 1 285 1 313 1 169 1 217 1 197 1 148 1 245 1 21 1 248 1 87 2 
115 1 292 1 25 2 203 1 124 1 182 1 73 1 301 1 74 4 259 1 354 2 187 1 210 1 109 1 265 1 145 2 194 2 218 1 148 2 112 2 248 1 87 2 
292 1 115 1 25 1 70 1 203 1 124 1 182 1 301 1 73 1 74 3 259 1 354 1 35 1 187 1 210 1 109 1 308 1 145 1 285 1 165 1 194 1 195 1 171 1 148 2 112 1 152 1 248 1 87 2 
292 1 115 1 348 1 25 2 179 1 203 1 124 1 73 1 301 1 74 3 259 1 137 1 354 1 237 1 187 1 109 1 210 1 265 1 145 1 40 1 194 1 218 1 15 1 148 1 245 1 247 1 112 1 248 1 87 2 
114 1 115 3 347 1 25 9 27 1 123 1 203 3 124 2 182 3 73 2 301 2 74 19 259 3 355 1 51 1 187 2 141 1 210 3 109 3 268 2 194 6 218 3 42 1 57 1 148 10 150 2 17 1 20 2 65 1 87 4 
114 2 89 1 115 3 346 1 347 2 275 1 25 14 27 1 123 1 47 1 203 3 323 1 124 3 182 2 73 3 301 3 327 1 74 26 259 3 355 1 51 2 187 3 141 1 109 2 210 2 268 1 194 4 218 2 148 12 57 2 150 2 225 2 20 4 87 6 
89 1 275 1 180 1 47 1 323 1 182 4 327 1 51 3 187 3 109 5 141 1 12 1 194 8 148 21 57 3 17 1 150 4 20 4 114 1 115 5 347 2 346 1 23 1 25 20 123 1 27 1 203 4 124 3 301 3 73 3 74 41 259 4 304 1 305 1 355 1 210 4 309 1 268 1 218 4 42 1 220 1 225 1 87 6 
89 1 114 1 115 5 346 1 275 1 347 2 23 1 25 20 180 1 27 1 123 1 47 1 203 4 323 1 124 4 182 4 327 1 73 4 301 4 74 38 259 4 304 1 305 1 355 1 51 3 187 4 141 1 210 3 109 4 309 1 12 1 268 1 194 7 218 3 42 1 57 3 148 18 220 1 150 4 17 1 225 2 20 4 87 8 
89 1 114 1 115 8 346 1 275 1 347 1 23 1 252 2 25 27 180 1 27 1 123 1 47 1 203 7 323 1 124 2 182 7 327 1 73 2 301 2 74 52 259 7 304 1 355 1 51 4 187 2 141 1 210 7 109 8 309 1 12 1 268 1 194 14 218 7 57 2 148 25 220 1 150 4 17 2 225 1 20 4 87 4 
207 1 240 1 142 1 76 1 144 1 46 1 201 1 267 1 330 1 157 1 
299 1 78 1 
202 1 207 1 142 1 286 1 67 1 144 1 201 1 330 1 157 1 
207 1 108 1 240 1 142 1 177 2 189 1 144 1 69 1 295 1 46 1 201 1 157 1 298 1 76 1 219 1 172 1 106 1 330 1 
207 1 108 1 240 1 142 1 177 2 189 1 144 1 69 1 295 1 46 1 201 1 157 1 298 1 76 1 219 1 172 1 106 1 330 1 
207 1 108 1 240 1 142 1 177 2 189 1 144 1 69 1 295 1 46 1 201 1 157 1 298 1 76 1 219 1 172 1 106 1 330 1 
68 1 134 1 9 1 
68 1 134 1 9 1 
316 1 92 1 
316 1 92 1 68 1 
243 1 77 1 
175 1 0 1 293 1 97 1 348 2 177 1 69 1 295 1 179 2 201 1 157 1 122 1 299 1 77 1 106 1 78 1 330 1 207 1 50 1 142 1 189 1 144 1 40 2 339 1 15 2 243 1 245 2 
134 1 9 1 
316 1 92 1 68 1 
292 1 251 1 348 2 320 1 25 1 156 1 279 2 124 1 301 1 73 1 74 2 236 1 35 2 81 1 186 1 187 1 308 2 37 1 265 1 40 2 285 2 313 1 217 1 84 1 148 1 133 1 245 2 19 1 21 1 248 1 87 2 
35 2 317 1 239 1 250 1 306 1 95 2 308 2 143 1 130 1 242 1 358 1 285 2 313 1 171 1 58 1 205 1 21 1 10 1 174 1 
35 1 317 1 239 1 250 1 306 1 95 2 308 1 143 1 130 1 242 1 358 1 285 1 313 1 205 1 48 1 21 1 10 1 
35 1 317 1 308 1 162 1 37 1 213 1 285 1 313 1 169 1 58 1 21 1 289 1 236 1 332 1 
35 1 317 1 239 1 250 1 306 1 95 2 308 1 143 1 130 1 242 1 358 1 285 1 313 1 58 1 205 1 21 1 10 1 174 1 
88 1 
108 1 132 1 228 1 110 1 118 1 126 1 3 1 
66 1 91 1 93 1 69 1 278 1 3 1 126 1 106 1 128 1 282 1 108 2 161 1 311 1 312 1 56 1 132 1 246 1 
93 1 229 1 278 2 183 1 106 2 236 4 52 1 282 2 108 3 109 1 285 1 146 3 56 2 197 1 246 2 18 1 344 2 21 2 66 2 115 1 116 3 117 1 69 2 350 1 203 1 259 1 352 1 158 1 261 1 126 3 35 1 210 1 308 1 37 1 310 1 311 6 312 3 313 1 169 1 132 4 223 1 224 1 44 1 
51 1 108 1 282 1 116 1 278 1 311 2 312 1 146 1 56 1 132 1 327 1 57 1 246 1 150 1 126 1 
115 2 199 1 348 1 23 1 69 1 278 1 179 1 254 1 71 1 260 1 126 2 106 1 282 1 109 1 333 1 309 1 55 1 40 1 164 1 56 1 15 1 132 2 220 1 270 1 245 1 246 1 247 1 18 2 
282 1 108 1 110 1 118 1 278 1 3 1 56 1 132 1 246 1 126 1 
115 2 108 5 210 2 109 2 116 5 311 10 254 1 146 5 312 5 203 2 132 5 259 2 158 1 18 2 126 5 
66 1 108 1 93 1 69 1 106 1 3 1 
66 4 93 2 319 1 69 3 278 1 322 1 325 1 6 1 353 2 126 2 106 3 236 1 332 1 35 4 282 2 308 4 37 1 54 1 310 2 285 4 313 1 56 2 169 2 132 2 246 2 315 1 63 2 21 1 289 1 
292 1 97 1 348 2 179 2 124 1 301 1 73 1 74 1 35 1 187 1 308 1 55 1 40 2 285 1 165 1 169 1 15 2 217 1 195 1 314 1 148 1 245 2 247 2 152 1 248 1 87 2 
282 1 108 4 116 2 310 1 311 4 278 1 3 2 146 2 312 2 56 1 132 1 246 1 353 1 126 2 304 1 
340 1 330 1 157 1 
240 1 77 1 98 1 330 1 157 1 
340 1 330 1 157 1 
340 1 330 1 157 1 
32 1 330 1 157 1 
32 1 330 1 157 1 
32 1 330 1 157 1 
330 1 157 1 
207 1 201 1 
115 3 199 1 23 2 25 9 180 1 124 2 182 4 73 2 301 2 74 17 304 1 187 2 109 3 309 2 12 1 194 7 218 3 148 8 220 2 225 1 87 4 
115 1 109 1 228 1 23 1 309 1 12 1 25 3 180 1 194 2 182 2 148 2 74 5 220 1 304 1 
115 1 187 1 109 1 210 1 25 2 194 2 203 1 124 1 218 1 182 1 301 1 73 1 148 2 74 4 259 1 8 1 87 2 
51 1 115 1 109 1 210 1 25 3 194 2 203 1 218 1 182 1 57 1 148 4 74 7 259 1 150 2 17 1 
115 5 199 1 23 2 252 1 25 13 180 1 203 2 124 1 182 5 301 1 73 1 74 25 259 2 304 1 51 2 139 1 187 1 109 5 210 2 309 2 12 1 194 7 218 2 148 12 220 2 17 1 150 2 225 1 87 2 
74 1 148 1 150 1 
51 1 74 1 25 1 
115 1 187 1 210 1 109 1 25 3 194 3 203 1 124 1 218 1 182 2 73 1 301 1 148 3 74 6 259 1 8 1 158 1 87 2 
89 1 115 2 275 1 25 6 27 1 47 1 203 2 124 1 323 1 182 1 327 1 73 1 301 1 74 12 259 2 51 1 187 1 210 2 109 2 194 2 218 1 148 6 57 1 150 1 87 2 
115 1 109 1 23 1 309 1 25 3 194 2 218 1 182 1 74 6 148 3 220 1 
187 1 309 1 25 1 12 1 180 1 194 2 218 1 124 1 182 1 301 1 73 1 148 2 74 3 220 1 225 1 129 1 87 2 
115 2 199 1 109 2 23 1 309 1 25 4 194 3 218 1 182 2 74 8 148 4 220 1 
115 1 187 1 25 2 27 1 194 1 203 1 124 1 218 1 301 1 73 1 74 2 87 2 
115 1 187 1 109 1 210 1 25 2 194 2 27 1 203 1 124 1 218 1 182 1 301 1 73 1 148 2 74 4 259 1 87 2 
187 3 309 1 25 1 27 1 194 2 124 3 218 1 182 1 301 3 73 3 42 1 148 2 74 3 220 1 225 1 129 1 87 6 
115 5 199 1 23 2 178 1 25 16 180 1 27 1 203 2 124 4 182 5 73 4 301 4 74 31 259 2 8 1 304 1 281 1 51 3 187 4 210 2 109 5 309 2 12 1 41 1 194 9 218 4 148 15 57 1 42 1 220 2 150 3 225 1 87 8 
115 3 199 1 23 2 25 8 180 1 27 1 124 1 182 4 327 1 73 1 301 1 74 15 304 1 51 1 187 1 109 3 309 2 12 1 194 5 218 1 148 7 57 1 220 2 150 1 87 2 
115 4 199 1 23 2 25 10 180 1 27 1 203 1 124 2 182 4 327 1 73 2 301 2 74 18 259 1 8 1 304 1 51 1 187 2 109 3 309 2 12 1 194 6 218 2 148 8 57 1 220 2 150 2 17 1 87 4 
89 1 115 5 199 1 275 1 23 2 25 13 180 1 27 1 47 1 203 2 323 1 124 3 182 5 327 1 73 3 301 3 74 26 259 2 8 1 304 1 51 1 187 3 210 2 109 5 309 2 12 1 194 7 218 2 148 13 57 1 220 2 150 1 225 1 87 6 
89 1 115 5 199 1 275 1 23 2 25 14 180 1 27 1 47 1 203 2 124 3 323 1 182 5 327 1 73 3 301 3 74 24 259 2 8 1 304 1 51 1 187 3 210 1 109 4 309 2 12 1 194 9 218 4 148 10 57 1 220 2 150 1 225 1 87 6 
115 3 199 1 23 2 25 8 180 1 27 1 124 1 182 4 327 1 73 1 301 1 74 15 304 1 51 1 187 1 109 3 309 2 12 1 194 5 218 1 148 7 57 1 220 2 150 1 87 2 
89 1 115 2 275 1 25 6 27 1 47 1 203 2 124 1 323 1 182 1 327 1 73 1 301 1 74 12 259 2 51 1 187 1 210 2 109 2 194 2 218 1 148 6 57 1 150 1 87 2 
89 1 115 5 199 1 275 1 23 2 25 14 180 1 27 1 47 1 203 2 323 1 124 4 182 5 327 1 73 4 301 4 74 25 259 2 8 1 304 1 51 1 187 4 210 1 109 4 309 2 12 1 194 7 218 2 148 11 57 1 220 2 150 1 225 2 87 8 
89 1 115 3 275 1 25 9 27 1 47 1 203 3 323 1 124 4 182 3 327 1 73 4 301 4 74 16 259 3 51 1 187 4 210 2 109 2 194 6 218 3 148 7 57 1 42 1 150 1 225 2 87 8 
115 1 109 1 23 1 309 3 12 2 25 3 180 1 194 6 218 3 182 3 148 4 74 7 220 3 
89 1 115 5 199 1 275 1 23 2 25 14 180 1 27 1 47 1 203 2 323 1 124 4 182 5 327 1 73 4 301 4 74 25 259 2 304 1 51 1 187 4 210 1 109 4 309 2 12 1 194 7 218 2 148 11 57 1 42 1 220 2 150 1 225 2 87 8 
356 1 326 1 97 1 245 1 348 1 24 1 40 1 
356 1 294 1 97 1 24 1 348 1 40 1 326 1 258 1 245 1 235 1 127 1 86 1 
313 1 35 1 169 1 228 1 308 1 37 1 21 1 285 1 289 1 236 1 332 1 
35 1 188 1 308 1 277 1 97 1 348 1 179 1 40 1 285 1 71 1 169 1 15 1 195 1 245 1 
35 1 188 1 308 1 277 1 97 1 348 1 179 1 40 1 285 1 71 1 15 1 195 1 245 1 63 1 
90 1 97 1 348 2 179 1 71 1 155 1 324 1 231 1 236 3 35 2 208 1 188 1 308 2 37 2 40 2 285 2 166 1 313 1 15 2 197 2 245 2 63 1 21 1 361 1 
66 1 348 1 69 2 179 1 71 1 155 1 3 1 350 1 31 1 183 1 106 2 236 4 107 1 35 1 208 1 108 1 333 1 308 1 37 1 55 1 40 1 164 1 285 1 313 1 15 1 197 1 270 1 245 1 247 1 344 1 63 1 21 1 
66 1 348 1 69 2 179 1 71 1 155 1 3 1 350 1 352 1 183 1 106 2 236 4 35 1 208 1 108 1 333 1 308 1 37 1 55 1 40 1 164 1 285 1 313 1 15 1 197 1 270 1 245 1 247 1 344 1 63 1 21 1 
313 1 35 1 257 1 308 1 21 1 285 1 
185 1 35 7 308 6 36 1 37 2 358 1 320 1 285 7 167 1 279 1 313 2 297 1 169 2 257 1 171 1 197 1 302 1 159 1 223 1 21 3 236 3 
115 2 292 1 199 1 277 1 97 1 23 1 348 1 25 4 179 1 180 1 71 1 124 1 182 2 301 1 73 1 74 8 35 1 263 1 187 1 109 2 188 1 308 1 265 1 309 1 12 1 40 1 285 1 194 3 218 1 15 1 148 4 171 1 220 1 133 1 245 1 248 1 87 2 
175 1 93 1 278 2 179 1 3 2 183 1 106 3 236 2 52 1 282 2 108 2 109 2 333 1 110 1 54 1 55 1 285 1 56 2 15 1 245 1 246 2 247 1 18 2 344 1 66 2 115 2 199 1 118 1 23 1 348 1 69 3 254 1 71 1 350 1 352 1 261 1 126 5 35 1 308 1 309 1 40 1 164 1 169 1 132 4 220 1 270 1 224 1 
35 2 308 2 37 1 285 2 350 1 313 1 257 1 171 1 197 1 223 1 21 2 44 1 236 2 
35 4 308 4 37 1 285 4 313 1 169 1 170 1 231 1 171 1 21 1 289 1 332 1 236 1 
35 2 308 2 200 1 37 1 285 2 313 1 297 1 196 1 197 1 60 1 302 1 63 1 21 2 236 1 
313 1 35 1 169 1 306 1 95 1 308 1 143 1 130 1 21 1 285 1 
35 2 308 2 37 1 358 1 320 1 285 2 313 1 171 1 19 1 21 1 236 1 
35 5 185 1 308 4 37 2 320 1 285 5 313 2 169 1 170 1 171 1 63 1 159 1 21 2 289 1 332 1 236 3 
35 5 185 1 308 4 37 2 320 1 285 5 313 2 169 1 170 1 103 1 171 1 63 1 21 2 289 1 332 1 236 3 
35 1 188 1 90 1 308 1 97 1 37 1 348 2 179 1 40 1 285 1 313 1 169 1 324 1 15 1 197 1 245 2 21 1 236 1 
35 1 308 1 37 1 285 1 167 1 313 1 297 1 197 1 302 1 63 1 223 1 21 2 236 1 
101 1 29 1 96 1 97 1 262 1 
175 1 96 1 348 1 69 2 179 1 71 2 3 1 101 1 29 1 183 1 262 1 106 2 79 1 108 1 333 1 53 1 38 1 55 1 40 1 164 1 166 1 15 1 16 1 244 1 270 1 245 1 247 1 361 1 
81 1 251 1 96 1 348 1 40 1 29 1 84 1 245 1 262 1 
29 1 38 1 79 1 
280 1 228 1 222 1 287 1 
14 1 280 1 111 1 222 1 190 1 287 1 198 1 
14 1 49 1 290 1 
111 3 94 1 190 1 72 1 14 3 100 1 147 2 280 1 222 1 287 1 198 1 34 1 
14 2 280 1 1 1 111 2 222 1 190 1 287 1 198 1 230 1 
14 1 239 1 306 1 95 1 75 1 111 1 190 1 287 1 198 1 138 1 72 1 
14 1 280 1 111 1 190 1 287 1 198 1 72 1 
14 1 280 2 111 1 222 1 190 1 198 1 72 1 
111 2 190 2 266 1 193 1 72 1 14 2 280 1 30 1 287 1 198 2 
111 3 190 1 83 1 72 1 230 2 14 3 5 1 280 1 222 1 198 1 287 2 85 1 138 1 
239 1 95 2 111 2 306 1 130 1 190 1 72 1 230 1 14 2 280 1 222 1 271 1 287 1 198 1 10 1 
1 1 111 4 190 2 83 1 72 1 230 2 14 4 280 1 222 1 104 1 198 2 287 2 138 1 
14 1 280 1 111 1 222 1 190 1 287 1 198 1 72 1 
283 1 94 1 111 4 190 1 83 1 230 2 147 1 100 1 14 4 280 2 222 2 198 1 287 3 138 1 
264 1 111 2 190 1 119 1 72 1 230 1 14 2 280 1 343 1 222 1 287 1 198 1 
111 3 94 2 190 1 72 1 100 1 14 3 147 2 280 1 342 1 222 1 287 1 198 1 
191 1 284 2 287 2 45 1 
14 1 111 1 176 1 190 1 198 1 72 1 
14 2 280 1 111 2 222 1 190 1 287 1 198 1 85 1 230 1 72 1 
82 1 
14 1 280 1 111 1 222 1 190 1 287 1 198 1 72 1 
111 3 190 1 230 1 72 1 14 3 147 1 280 1 222 1 198 1 287 1 85 1 
283 1 287 1 138 1 83 1 
280 1 287 1 

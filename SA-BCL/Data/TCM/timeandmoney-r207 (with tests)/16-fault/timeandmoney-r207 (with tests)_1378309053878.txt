#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (202,331) (202,331) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (202,331) (202,331) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (202,331) (202,331) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (202,331) (202,331) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 337 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (203,362) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 337 22 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (203,362) 280 336 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 50 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 131 (168,258) (168,258) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11529 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z | OPERATOR | 4475 | < -> >
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2022 | = null
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
58 1 357 1 202 1 283 1 100 1 331 1 126 1 63 1 265 1 
58 1 357 1 202 1 283 1 100 1 331 1 126 1 63 1 265 1 
58 1 357 1 202 1 283 1 100 1 331 1 126 1 63 1 265 1 
58 1 357 1 202 1 283 1 100 1 331 1 126 1 63 1 265 1 
168 1 258 1 126 4 196 1 173 1 265 1 354 1 58 4 100 1 131 2 149 1 215 1 31 1 63 1 13 2 186 1 366 2 302 1 120 3 
258 1 168 1 210 1 283 1 172 1 186 1 126 2 265 1 354 1 58 2 277 1 357 1 100 1 215 1 167 1 63 1 
258 1 168 1 186 1 126 3 366 1 265 1 58 3 213 1 357 1 100 2 131 1 302 1 120 1 63 2 
258 1 168 1 309 1 126 9 196 1 173 1 265 1 354 1 213 1 58 9 357 1 100 2 131 4 149 1 215 1 31 1 218 1 63 2 112 1 13 2 186 1 296 1 366 4 302 3 120 7 
258 1 168 1 309 1 126 9 196 1 173 1 265 1 354 1 213 1 58 9 357 1 100 2 131 4 149 1 215 1 31 1 218 1 63 2 112 1 13 2 186 1 296 1 366 4 302 3 120 7 
147 1 50 1 286 1 
18 1 286 1 240 2 
152 2 185 2 252 2 17 2 115 2 205 1 25 2 62 1 
123 1 236 1 333 1 54 1 23 2 25 2 197 2 314 2 130 2 99 2 145 1 148 1 62 1 8 1 319 1 79 1 183 1 152 2 12 1 321 1 185 2 113 1 115 2 135 1 88 1 205 1 299 1 43 1 160 1 369 1 252 2 328 1 17 2 
52 1 152 1 185 1 252 1 328 1 17 1 372 1 115 1 25 1 62 1 
152 1 222 1 342 1 286 1 147 1 238 1 252 1 139 1 17 1 328 1 177 1 141 1 292 1 220 1 
152 1 185 1 115 1 222 1 25 1 342 1 286 1 147 1 252 1 139 2 17 1 328 1 141 1 292 1 220 2 
337 1 139 1 132 1 220 1 
268 1 322 1 93 1 147 1 139 2 132 1 286 1 220 2 
268 1 139 1 220 1 
52 1 152 1 185 1 242 1 115 1 25 1 132 1 139 1 252 1 328 1 17 1 372 1 62 1 220 1 
286 1 
46 1 268 1 322 1 147 1 139 2 132 1 286 1 220 2 
322 1 35 1 352 1 82 1 310 2 114 1 95 1 275 1 286 1 268 2 147 1 132 2 139 5 349 1 77 1 303 2 66 2 67 1 220 5 
50 1 205 1 
152 2 185 1 115 1 88 1 25 1 205 1 358 1 252 2 328 1 17 2 306 1 
203 1 206 1 280 1 
333 1 88 1 205 1 197 1 89 1 314 1 369 1 99 1 148 1 328 1 
152 1 185 1 333 1 203 1 115 1 197 1 314 1 369 1 99 1 65 1 252 1 148 1 17 1 6 1 
152 3 185 3 65 1 252 3 17 3 115 3 25 1 205 1 
152 1 185 1 252 1 328 1 17 1 372 1 115 1 
152 1 185 1 115 1 25 1 252 1 358 1 17 1 328 1 306 1 
307 1 236 1 333 1 54 1 23 1 25 2 197 1 314 1 130 2 99 1 145 1 148 1 62 1 292 1 6 1 79 1 220 1 200 1 183 1 12 1 152 3 321 1 185 3 113 1 115 3 222 1 135 1 205 1 342 1 43 1 369 1 252 3 65 1 139 1 17 3 328 1 306 1 141 1 
152 2 185 1 252 2 65 1 17 2 177 1 115 1 205 1 305 1 
200 1 152 3 185 3 115 3 222 1 25 1 342 1 285 1 286 1 139 1 65 2 252 3 328 1 17 3 306 1 141 1 6 1 292 1 220 1 
152 1 185 1 252 1 203 1 17 1 115 1 25 1 306 1 
333 1 205 1 88 1 197 1 314 1 369 1 99 1 148 1 328 1 
194 1 152 1 94 1 353 1 205 1 197 1 314 1 369 1 99 1 225 1 301 1 252 1 359 1 133 1 5 1 
362 1 183 1 236 1 12 1 321 2 203 1 54 1 23 2 117 1 43 1 130 2 228 1 280 1 279 1 165 1 79 1 
20 1 152 1 185 1 252 1 328 1 17 1 115 1 342 1 
152 5 185 4 110 1 115 4 25 1 205 1 355 1 65 2 252 5 17 5 177 1 305 1 306 1 6 1 
20 1 152 2 185 2 252 2 328 1 17 2 372 1 115 2 
293 1 246 1 
293 1 246 1 
345 1 219 1 
345 1 219 1 
345 1 219 1 
293 1 91 1 246 1 
345 1 293 2 171 1 146 1 246 2 219 1 
293 1 246 1 116 1 
293 1 91 1 246 1 
293 1 91 1 246 1 
234 1 293 1 246 1 
234 1 293 1 246 1 
234 1 293 1 246 1 
293 2 171 1 246 2 87 2 158 1 286 1 98 1 325 2 138 2 3 1 139 2 103 1 316 1 198 1 232 2 272 1 51 3 239 2 220 2 
170 1 57 1 2 1 288 1 316 1 199 1 220 1 293 1 152 2 221 1 185 2 80 1 115 2 246 1 205 1 87 1 116 1 325 1 138 1 139 1 252 2 17 2 232 1 51 1 
354 1 215 1 173 1 
354 1 172 1 215 1 
354 3 26 1 172 1 308 1 173 2 157 1 
354 2 26 1 172 1 308 1 173 1 140 1 
354 2 26 2 172 1 308 1 173 1 
261 1 282 1 71 2 170 1 124 1 352 3 310 1 266 1 286 2 2 1 268 1 101 1 132 4 147 1 288 1 176 1 77 1 240 3 220 5 341 2 322 1 111 1 82 2 155 2 117 1 44 1 119 1 139 5 303 1 165 1 66 1 18 1 
337 1 273 1 139 2 132 2 144 1 22 1 220 2 
261 1 282 1 170 1 71 2 352 3 310 1 95 1 286 3 101 1 147 1 132 2 176 1 220 3 240 4 341 2 111 1 155 1 82 2 117 1 44 1 119 1 139 3 303 1 165 1 66 1 18 2 
261 1 282 1 71 4 170 2 352 5 73 1 310 1 95 1 286 4 101 1 147 1 132 3 176 1 240 7 220 4 151 1 341 4 111 2 155 2 82 4 117 2 44 2 119 2 139 4 303 1 165 2 66 1 18 3 193 1 
50 1 359 1 7 1 
269 1 359 1 
340 1 
359 1 5 1 
47 1 94 1 359 3 136 1 7 2 5 1 
94 1 359 1 5 1 
359 1 166 1 
0 1 321 3 111 1 365 1 23 6 56 1 15 2 312 1 267 1 223 1 64 1 60 1 317 1 92 1 165 1 360 1 319 3 
0 1 321 3 111 1 365 1 23 6 56 1 15 2 312 1 267 1 223 1 64 1 60 1 317 1 92 1 165 1 360 1 319 3 
0 1 321 3 111 1 365 1 23 6 56 1 15 2 312 1 267 1 223 1 64 1 60 1 317 1 92 1 165 1 255 1 360 1 319 3 
0 1 235 1 236 1 23 6 56 2 130 2 60 1 317 1 216 1 217 1 360 1 319 3 79 1 320 1 183 1 321 3 365 1 15 2 43 1 223 1 278 1 304 1 92 1 191 1 
235 1 0 1 183 2 236 2 321 4 111 1 365 1 23 8 56 1 297 1 15 3 312 1 43 2 267 1 223 2 130 4 64 1 60 1 317 1 105 1 165 1 360 1 319 4 79 2 
258 1 168 1 172 1 353 1 55 1 126 2 173 1 197 1 265 1 314 1 354 2 58 2 99 1 357 1 100 1 175 1 215 1 133 1 107 1 108 1 63 1 318 1 241 1 134 1 243 1 186 1 157 1 190 1 254 1 120 1 
258 1 168 1 70 1 172 1 353 1 55 1 126 3 173 1 197 1 314 1 354 2 58 3 99 1 357 1 100 1 27 1 215 1 290 1 133 1 107 1 108 1 63 1 318 1 134 1 243 1 186 1 157 1 190 1 254 1 120 2 
258 1 168 1 70 1 172 1 353 1 55 1 126 2 173 1 197 1 314 1 354 2 58 2 357 1 99 1 215 1 290 1 133 1 107 1 108 1 134 1 186 1 157 1 190 1 254 1 120 2 
350 1 351 1 284 1 353 1 55 2 126 1 197 1 314 1 129 1 58 1 99 1 357 2 100 1 27 1 359 1 133 1 107 2 63 1 5 1 369 1 227 1 229 1 254 2 
70 1 172 1 243 1 353 1 126 1 55 1 173 1 157 1 265 1 197 1 354 2 314 1 58 1 190 1 357 1 99 1 100 1 175 1 215 1 133 1 254 1 107 1 108 1 318 1 63 1 134 1 
334 1 
335 4 197 2 286 2 237 1 1 1 99 2 147 1 238 1 106 1 5 1 292 1 240 2 152 1 245 1 342 1 248 2 250 1 161 2 252 1 17 1 303 1 66 1 18 2 257 1 19 1 261 1 351 1 352 2 353 1 310 1 313 1 314 2 214 2 268 6 177 1 178 2 77 1 359 1 133 1 33 2 220 5 322 3 82 2 84 1 222 1 189 1 369 2 137 2 327 1 139 5 229 1 328 1 330 1 231 2 141 1 
152 1 322 1 84 1 222 1 335 2 342 1 1 1 46 1 214 1 268 2 139 3 238 1 252 1 328 1 17 1 330 1 177 1 141 1 257 1 19 1 292 1 220 3 
152 1 322 1 84 1 222 1 335 3 342 1 248 1 286 1 1 1 46 1 268 1 147 1 139 3 238 1 252 1 328 1 17 1 330 1 177 1 141 1 257 1 19 1 292 1 220 3 
335 3 286 1 1 1 214 1 268 2 238 1 147 1 177 1 292 1 33 1 220 3 152 1 322 1 84 1 222 1 342 1 248 1 46 1 252 1 139 3 17 1 328 1 330 1 141 1 19 1 257 1 
195 1 335 6 286 5 287 1 1 1 237 1 238 1 147 5 292 1 152 1 109 1 245 1 342 1 14 1 248 4 161 2 252 1 17 1 303 1 66 1 18 2 257 1 19 1 352 1 310 1 214 4 268 7 177 1 77 1 178 2 33 4 220 5 322 3 82 1 84 1 222 1 187 1 46 1 137 2 139 5 328 1 330 1 231 2 141 1 
335 4 286 2 1 1 237 1 238 1 147 1 292 1 240 2 152 1 245 1 342 1 248 2 161 2 252 1 17 1 303 1 66 1 18 2 257 1 19 1 352 1 310 1 214 2 268 4 177 1 77 1 178 2 33 2 220 4 322 2 82 1 84 1 222 1 189 1 137 2 139 4 328 1 330 1 231 2 141 1 
352 1 195 1 310 1 335 4 286 1 237 1 1 1 214 2 268 4 147 1 238 1 177 1 178 2 77 1 33 2 292 1 220 4 152 1 109 1 322 2 82 1 84 1 245 1 187 1 222 1 342 1 248 2 161 2 137 2 252 1 139 4 17 1 328 1 330 1 231 2 303 1 66 1 18 2 141 1 19 1 257 1 
352 1 195 1 310 1 335 4 286 1 237 1 1 1 214 2 268 4 147 1 238 1 177 1 178 2 77 1 33 2 292 1 220 4 152 1 109 1 322 2 82 1 84 1 245 1 187 1 222 1 342 1 248 2 161 2 137 2 252 1 139 4 17 1 328 1 330 1 231 2 303 1 66 1 18 2 141 1 19 1 257 1 
169 2 352 1 211 1 310 1 335 4 286 1 237 1 1 1 214 2 268 4 147 1 238 1 177 1 178 2 77 1 33 2 292 1 240 2 220 4 152 1 322 2 153 2 82 1 84 1 187 1 222 1 342 1 248 2 252 1 139 4 17 1 328 1 230 1 330 1 231 2 303 1 192 1 66 1 141 1 19 1 257 1 
352 1 195 1 310 1 335 5 286 1 237 1 1 1 214 3 268 5 147 1 238 1 177 1 178 2 77 1 292 1 33 3 220 4 152 1 109 1 322 2 82 1 84 1 245 1 187 1 222 1 342 1 14 1 248 3 161 2 137 2 252 1 139 4 17 1 328 1 330 1 231 2 303 1 66 1 18 2 141 1 19 1 257 1 
352 1 195 1 310 1 335 5 286 1 237 1 1 1 214 3 268 5 147 1 238 1 177 1 178 2 77 1 292 1 33 3 220 4 152 1 109 1 322 2 82 1 84 1 245 1 187 1 222 1 342 1 14 1 248 3 161 2 137 2 252 1 139 4 17 1 328 1 330 1 231 2 303 1 66 1 18 2 141 1 19 1 257 1 
335 4 286 1 1 1 237 1 238 1 147 1 292 1 240 2 152 1 153 2 342 1 248 2 252 1 17 1 303 1 66 1 257 1 19 1 169 2 352 1 211 1 310 1 214 2 268 4 177 1 77 1 178 2 33 2 220 4 322 2 82 1 84 1 222 1 189 1 139 4 328 1 330 1 231 2 141 1 
183 1 236 1 12 1 321 3 111 1 54 1 23 5 365 1 205 2 15 1 312 1 43 1 267 1 223 1 130 2 64 1 50 1 279 1 317 1 165 1 319 2 79 1 
142 1 236 2 54 2 23 9 130 4 60 1 217 2 361 1 79 2 319 6 183 2 12 1 321 3 111 2 113 1 203 7 40 1 88 1 205 1 15 1 159 1 43 2 44 2 119 2 16 1 278 2 48 1 328 1 280 7 206 6 
142 1 123 1 236 1 143 1 333 1 54 1 23 2 197 1 314 1 99 1 130 2 356 1 148 1 6 1 79 1 319 1 183 1 12 1 152 1 321 1 185 1 113 1 115 1 205 1 89 1 43 1 369 1 252 1 65 1 17 1 206 1 233 1 
142 1 236 2 333 1 54 2 23 5 336 1 197 1 314 1 130 4 99 1 145 1 148 1 6 1 319 3 79 2 181 1 183 2 12 2 152 1 321 2 185 1 111 1 113 1 203 2 244 1 115 1 15 1 43 2 44 1 223 1 119 1 300 1 369 1 226 1 252 1 65 1 17 1 206 1 280 2 
236 2 94 1 54 2 197 6 99 7 61 1 5 3 241 1 12 2 152 1 113 1 115 1 247 1 299 1 65 1 252 1 17 1 207 1 209 1 123 1 70 1 351 1 353 3 23 2 314 7 130 4 315 1 29 1 271 1 359 4 133 4 319 1 79 2 183 2 363 1 184 1 321 1 185 1 43 2 368 1 369 2 326 1 229 1 279 1 
142 1 236 1 54 1 23 3 25 1 130 2 79 1 319 1 183 1 12 1 152 1 321 2 185 1 111 1 203 1 115 1 15 1 117 1 43 1 44 1 223 1 119 1 252 1 17 1 206 1 280 1 164 1 165 1 306 1 
183 1 236 1 12 1 111 1 203 1 54 1 23 2 43 1 44 1 130 2 75 1 280 1 279 1 79 1 319 2 
183 1 236 1 12 1 321 2 203 1 54 1 23 2 117 1 43 1 130 2 228 1 280 1 279 1 165 1 79 1 
183 1 236 1 12 1 111 1 203 1 54 1 23 2 43 1 44 1 130 2 119 1 280 1 279 1 79 1 319 2 
183 1 236 1 12 1 111 1 203 1 54 1 23 2 43 1 44 1 130 2 326 1 75 1 280 1 79 1 319 2 
183 1 236 1 12 1 321 2 203 1 54 1 23 2 117 1 43 1 130 2 326 1 228 1 280 1 165 1 79 1 
183 1 236 1 12 1 111 1 203 1 54 1 23 2 43 1 44 1 130 2 119 1 326 1 280 1 79 1 319 2 
183 1 236 1 12 1 111 1 203 1 54 1 23 2 43 1 44 1 130 2 119 1 280 1 79 1 319 2 
123 1 236 1 333 1 54 1 23 2 197 1 314 1 130 2 99 1 145 1 148 1 319 1 79 1 183 1 12 1 321 1 113 1 205 1 88 1 43 1 369 1 328 1 
123 1 194 1 236 1 94 1 353 1 54 1 23 2 197 1 314 1 99 1 130 2 359 1 133 1 5 1 319 1 79 1 183 1 152 1 12 1 321 1 154 1 113 1 205 1 43 1 225 1 369 1 301 1 252 1 
142 1 183 1 236 1 12 1 111 1 203 1 54 1 23 2 43 1 44 1 130 2 119 1 280 1 79 1 319 2 
236 1 333 1 54 1 23 3 197 1 314 1 99 1 130 2 145 1 148 1 241 1 79 1 319 1 183 1 12 1 321 2 111 1 203 1 117 1 43 1 44 1 119 1 226 1 280 1 165 1 
142 1 236 1 21 1 54 1 23 2 25 1 130 2 60 1 79 1 319 2 183 1 12 1 152 1 185 1 111 1 203 1 115 1 15 1 43 1 44 1 119 1 252 1 17 1 280 1 206 1 306 1 
235 1 236 3 125 1 23 24 130 6 60 1 339 1 32 1 217 3 79 3 319 11 183 3 321 13 37 1 111 2 294 1 39 1 297 1 15 3 117 2 324 1 343 4 43 3 346 1 188 1 45 1 44 2 223 2 119 2 278 3 370 2 165 2 191 3 332 1 
235 1 236 3 125 1 23 22 130 6 339 1 32 1 217 2 79 3 319 10 183 3 321 12 111 2 294 1 39 1 297 1 15 1 117 2 324 1 343 4 43 3 346 1 188 1 45 1 44 2 223 1 119 2 278 2 370 1 165 2 191 2 332 1 
235 1 236 2 125 1 23 22 130 4 60 1 339 1 32 1 217 2 79 2 319 10 183 2 321 12 111 2 294 1 39 1 297 1 15 4 117 2 343 4 43 2 346 1 188 1 45 1 44 2 223 3 119 2 278 2 370 1 165 2 191 2 332 1 
122 1 235 1 236 3 125 1 23 20 130 6 32 1 217 2 79 3 319 9 183 3 321 11 111 2 294 1 39 1 297 1 15 2 117 2 324 1 343 3 43 3 346 1 188 1 45 1 44 2 223 2 119 2 278 2 370 1 165 2 191 2 332 1 
235 1 236 2 125 1 23 22 130 4 60 1 339 1 32 1 217 2 79 2 319 10 183 2 321 12 111 2 294 1 39 1 297 1 15 2 117 2 343 4 43 2 346 1 188 1 45 1 44 2 223 1 119 2 278 2 370 2 165 2 191 2 332 2 
325 1 293 1 138 1 3 1 72 1 171 1 103 1 232 1 246 1 87 1 
221 1 116 1 
325 1 293 1 138 1 204 1 232 1 246 1 256 1 87 1 96 1 
293 1 171 1 246 1 87 1 158 1 286 1 325 1 138 1 3 1 139 1 103 1 316 1 198 1 232 1 272 1 51 2 239 1 220 1 
293 1 171 1 246 1 87 1 158 1 286 1 325 1 138 1 3 1 139 1 103 1 316 1 198 1 232 1 272 1 51 2 239 1 220 1 
293 1 171 1 246 1 87 1 158 1 286 1 325 1 138 1 3 1 139 1 103 1 316 1 198 1 232 1 272 1 51 2 239 1 220 1 
146 1 91 1 179 1 
146 1 91 1 179 1 
234 1 263 1 
234 1 146 1 263 1 
80 1 199 1 
170 1 57 1 2 1 132 1 288 1 199 1 239 1 220 1 293 1 152 2 221 1 185 2 80 1 246 1 115 2 205 1 87 1 116 1 158 1 325 1 251 1 138 1 252 2 139 1 17 2 232 1 51 1 
91 1 179 1 
234 1 146 1 263 1 
142 1 259 1 123 1 236 1 353 1 54 1 23 2 197 2 314 2 99 2 130 2 271 1 359 1 133 1 5 1 150 1 4 1 79 1 319 1 183 1 12 1 152 2 321 1 113 1 299 2 43 1 276 1 368 1 252 2 17 2 371 1 
70 1 172 1 353 1 173 1 212 1 157 1 197 2 298 1 128 1 354 2 314 2 99 2 190 1 215 1 133 1 254 1 318 1 241 1 134 1 
70 1 172 1 353 1 173 1 157 1 197 1 74 1 298 1 354 2 314 1 99 1 190 1 215 1 254 1 133 1 318 1 134 1 
350 1 351 1 353 1 197 1 249 1 128 1 314 1 369 1 99 1 229 1 359 1 133 1 254 1 5 1 
70 1 172 1 353 1 173 1 212 1 157 1 197 1 298 1 128 1 354 2 314 1 99 1 190 1 215 1 133 1 254 1 318 1 134 1 
364 1 
147 1 50 1 352 1 82 1 67 1 275 1 286 1 
322 1 352 1 82 1 310 1 245 1 286 2 161 1 137 1 268 1 147 1 139 1 77 1 303 1 66 1 18 1 220 1 240 1 
94 1 336 2 197 1 286 7 99 1 147 1 289 2 5 1 7 2 240 12 341 6 111 2 117 2 250 1 344 1 119 2 162 2 303 3 66 3 165 2 18 6 68 2 261 2 71 6 352 8 353 1 310 3 314 1 268 5 269 3 359 6 77 3 78 2 133 2 220 5 182 1 322 3 81 1 82 7 38 2 44 2 369 1 47 1 139 5 141 2 
261 1 71 4 352 6 310 2 286 5 268 1 59 1 147 2 338 2 77 2 217 1 220 1 240 6 322 1 341 4 111 1 82 3 39 1 117 1 250 1 42 1 346 1 188 1 44 1 119 1 278 1 139 1 90 1 303 2 191 1 66 2 165 1 18 3 
52 1 352 2 195 1 310 1 25 1 267 1 59 1 338 2 317 1 77 1 62 1 220 1 152 1 185 1 111 2 242 1 82 2 365 1 115 1 367 1 252 1 139 1 328 1 17 1 372 1 303 1 66 1 165 1 
82 1 352 1 310 1 275 1 286 1 147 1 77 1 303 1 66 1 67 1 
71 5 341 5 111 2 82 5 352 5 117 2 336 1 286 5 44 2 119 2 165 2 18 5 240 10 
268 1 322 1 147 1 139 1 286 1 220 1 
261 2 351 1 352 2 353 1 310 2 95 1 197 4 314 4 99 4 268 4 30 2 359 1 77 1 133 1 106 1 5 1 220 3 322 2 82 2 323 1 250 2 369 2 49 1 327 1 139 3 229 1 329 1 303 2 66 2 
236 1 333 1 54 1 23 1 25 2 197 1 314 1 99 1 130 2 145 1 148 1 62 1 79 1 183 1 152 2 12 1 321 1 185 2 113 1 115 2 135 1 205 1 43 1 369 1 252 2 17 2 
261 1 341 1 82 1 352 1 310 1 250 1 286 2 147 1 77 1 303 1 66 1 18 1 240 2 
325 1 11 1 232 1 
325 1 103 1 311 1 199 1 232 1 
325 1 11 1 232 1 
325 1 11 1 232 1 
325 1 232 1 69 1 
325 1 232 1 69 1 
325 1 232 1 69 1 
325 1 232 1 
293 1 246 1 
236 1 23 7 130 2 217 1 79 1 319 3 183 1 321 4 111 1 39 1 297 1 117 1 15 1 43 1 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
236 2 23 7 130 4 217 1 79 2 319 3 183 2 201 1 321 4 111 1 39 1 297 1 117 1 15 1 43 2 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
235 1 236 3 23 13 312 1 267 1 130 6 317 1 217 1 79 3 319 5 183 3 201 1 321 8 111 2 39 1 365 1 297 1 117 1 15 2 43 3 346 1 188 1 44 1 119 1 223 2 64 1 278 1 191 1 165 2 
236 2 23 7 130 4 217 1 79 2 319 3 183 2 201 1 321 4 111 1 39 1 297 1 117 1 15 1 43 2 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
236 1 23 7 130 2 217 1 79 1 319 3 183 1 321 4 111 1 39 1 297 1 117 1 15 1 43 1 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
236 1 23 7 130 2 217 1 79 1 319 3 183 1 321 4 111 1 39 1 297 1 117 1 15 1 43 1 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
235 1 236 3 23 8 130 6 217 1 79 3 319 3 183 3 201 1 321 5 111 1 39 1 297 1 117 1 15 1 43 3 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
235 1 236 3 23 8 130 6 217 1 79 3 319 3 183 3 321 5 111 1 39 1 297 1 117 1 15 2 324 1 43 3 346 1 188 1 44 1 119 1 223 2 278 1 191 1 165 1 
321 6 111 2 23 11 365 4 15 7 312 1 367 1 223 5 267 2 64 1 60 2 317 4 165 2 360 1 319 5 
235 1 236 3 23 8 130 6 217 1 79 3 319 3 183 3 321 5 111 1 39 1 297 1 117 1 15 1 324 1 43 3 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
183 2 235 1 236 2 321 4 111 1 23 7 365 1 15 2 312 1 43 2 267 1 223 1 130 4 64 1 60 1 317 1 165 1 319 3 79 2 
267 1 223 1 64 1 321 3 111 1 50 1 23 5 365 1 317 1 165 1 15 1 312 1 319 2 
183 1 201 1 236 1 321 2 111 1 23 4 117 1 15 2 43 1 44 1 223 1 130 2 119 1 60 1 165 1 79 1 319 2 
278 1 321 1 23 2 191 1 217 1 319 1 
235 1 236 1 23 19 312 1 267 1 130 2 60 2 317 2 217 2 319 9 79 1 183 1 321 10 111 3 365 2 40 1 117 2 15 5 159 1 43 1 44 2 119 2 223 3 64 1 278 2 48 1 165 3 
321 1 23 1 217 1 
278 1 23 1 319 1 
183 1 236 1 201 1 321 3 111 1 23 6 15 3 117 1 336 1 43 1 44 1 130 2 119 1 223 2 60 1 165 1 79 1 319 3 
236 1 23 7 130 2 217 1 79 1 319 3 183 1 321 4 111 1 39 1 297 1 117 1 15 1 43 1 346 1 188 1 44 1 119 1 223 1 278 1 191 1 165 1 
223 1 267 1 321 3 111 1 60 1 365 1 317 1 23 6 165 1 15 2 319 3 
235 1 183 1 236 1 321 2 365 1 23 3 15 2 312 1 43 1 223 1 130 2 64 1 60 1 317 1 216 1 319 1 79 1 
321 4 111 2 365 1 23 8 15 3 367 1 223 2 267 1 60 1 317 1 165 2 319 4 
44 1 183 1 130 2 236 1 111 1 60 1 23 2 297 1 15 1 319 2 43 1 79 1 
183 1 236 1 321 2 111 1 23 4 297 1 117 1 15 2 43 1 44 1 223 1 130 2 119 1 60 1 165 1 79 1 319 2 
235 1 183 3 236 3 321 2 23 3 365 1 297 1 15 2 324 1 43 3 130 6 223 1 60 1 317 1 216 1 79 3 319 1 
235 1 236 4 23 15 312 1 267 1 130 8 60 3 317 2 216 1 217 1 79 4 319 7 320 1 183 4 201 1 321 8 111 2 365 2 297 1 15 6 324 1 367 1 43 4 223 3 64 1 278 1 165 2 191 1 
152 1 252 1 17 1 177 1 86 1 205 1 305 1 
10 1 34 1 152 1 86 1 205 1 347 1 252 1 17 1 177 1 76 1 305 1 121 1 
314 1 99 1 369 1 351 1 50 1 229 1 353 1 359 1 133 1 5 1 197 1 
152 1 185 1 115 1 88 1 205 1 197 1 314 1 369 1 99 1 65 1 252 1 148 1 328 1 17 1 
152 1 185 1 115 1 88 1 205 1 197 1 314 1 99 1 65 1 252 1 148 1 328 1 17 1 30 1 
94 2 353 1 24 1 197 2 314 2 99 2 102 1 30 1 359 3 133 1 5 2 152 2 185 1 115 2 222 1 205 1 342 1 225 1 301 1 252 2 65 1 17 2 328 1 166 1 
94 1 353 1 24 1 97 1 197 3 286 1 314 3 99 3 268 1 102 1 269 1 147 1 30 1 359 4 133 1 7 1 5 1 180 1 220 2 369 1 139 2 166 1 141 1 
94 1 353 1 24 1 197 3 286 1 314 3 369 1 99 3 268 1 102 1 269 1 147 1 139 2 30 1 78 1 359 4 133 1 141 1 166 1 5 1 7 1 220 2 
314 1 99 1 315 1 353 1 133 1 197 1 
70 1 94 1 353 2 127 1 197 5 314 6 99 6 315 1 29 1 271 1 359 3 133 3 5 2 241 1 363 1 184 1 369 2 47 1 207 1 209 1 
142 1 236 2 333 1 54 2 23 5 312 1 197 1 314 1 267 1 130 4 99 1 145 1 148 1 317 1 319 2 79 2 241 1 183 2 12 2 152 1 321 3 185 1 111 1 365 1 115 1 205 2 15 1 43 2 223 1 300 1 64 1 226 1 252 1 65 1 17 1 371 1 165 1 
352 1 310 2 197 1 286 1 314 1 99 1 268 2 269 1 147 1 132 1 289 1 77 2 78 1 359 2 7 1 220 3 322 1 82 1 38 1 323 1 275 1 369 1 162 1 139 3 303 2 66 2 67 1 141 1 
182 1 94 1 353 1 197 2 314 2 99 2 47 1 315 1 359 2 133 2 7 1 5 1 241 1 
53 1 351 1 353 1 197 4 314 4 369 1 99 4 102 1 229 1 359 1 133 1 5 1 241 1 
363 1 184 1 94 1 353 1 247 1 197 2 314 2 174 1 99 2 30 1 359 1 133 2 61 1 5 1 
354 1 314 1 190 1 99 1 369 1 172 1 215 1 353 1 133 1 197 1 
314 2 70 1 99 2 353 1 271 1 359 1 133 1 5 1 150 1 197 2 241 1 
53 1 351 1 353 2 197 4 314 5 369 1 99 5 229 1 29 1 30 1 207 1 271 1 359 3 133 2 5 2 241 1 
53 1 351 1 83 1 353 2 197 4 314 5 369 1 99 5 229 1 29 1 30 1 271 1 359 3 133 2 5 2 241 1 
152 2 94 1 185 1 353 1 115 1 205 1 197 1 314 1 369 1 99 1 225 1 301 1 65 1 252 2 17 1 359 1 133 1 5 1 
363 1 184 1 94 1 353 1 127 1 197 1 314 1 99 1 47 1 30 1 359 1 133 2 5 1 
224 1 28 1 253 1 156 1 205 1 
200 1 222 1 156 2 205 1 342 1 286 1 224 1 147 1 132 1 139 2 28 2 328 1 253 2 208 1 291 1 281 1 141 1 292 1 220 2 
259 1 276 1 224 1 152 1 252 1 17 1 253 1 156 1 4 1 
224 1 208 1 281 1 
258 1 168 1 50 1 
258 1 168 1 58 1 100 1 186 1 126 1 63 1 
357 1 126 1 107 1 
168 1 258 1 186 1 126 2 264 1 265 1 58 2 277 1 100 1 163 1 63 1 
168 1 258 1 13 1 186 1 126 2 58 2 100 1 120 1 63 1 
126 1 173 1 366 1 265 1 354 1 58 1 100 1 131 1 215 1 31 1 63 1 
258 1 58 1 100 1 126 1 63 1 265 1 
258 1 168 1 58 1 100 1 131 1 126 1 63 1 265 1 
258 1 295 1 126 2 265 1 58 2 100 2 270 1 104 1 63 2 
258 1 168 1 186 1 309 1 126 3 296 1 366 1 265 1 58 3 100 1 131 1 302 1 120 2 63 1 
258 1 168 1 36 1 172 1 186 1 126 2 173 1 265 1 157 1 354 2 58 2 100 1 215 1 120 1 63 1 
258 1 168 1 13 1 186 1 126 3 196 1 366 1 265 1 58 3 100 1 131 1 302 1 120 2 63 1 
168 1 258 1 186 1 126 1 265 1 58 1 100 1 63 1 
258 1 168 1 186 2 126 3 366 1 58 3 100 1 131 1 302 1 120 2 63 1 
258 1 168 1 186 1 85 1 126 2 265 1 58 2 100 1 348 1 120 1 63 1 218 1 
168 1 258 1 274 1 186 1 126 2 265 1 58 2 277 1 100 1 163 1 63 1 
260 2 131 2 262 1 118 1 
58 1 100 1 126 1 63 1 265 1 9 1 
168 1 258 1 186 1 126 2 296 1 265 1 58 2 100 1 120 1 63 1 
41 1 
168 1 258 1 186 1 126 1 265 1 58 1 100 1 63 1 
168 1 258 1 186 1 126 2 265 1 58 2 277 1 100 1 63 1 
131 1 186 1 302 1 366 1 
258 1 

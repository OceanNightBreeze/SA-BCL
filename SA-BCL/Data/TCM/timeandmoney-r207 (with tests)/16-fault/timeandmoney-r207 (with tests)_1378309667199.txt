#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 276 182 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 276 182 19 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (77,88,163) (77,88,163) 334 20 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 276 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 175 162 248 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 175 162 248 232 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 10086 | < -> >
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | CONDITION | 3975 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
253 2 297 1 113 9 299 5 34 2 156 1 160 1 262 1 39 1 308 1 76 2 78 1 125 3 126 1 312 1 271 2 48 1 16 1 136 2 183 2 284 1 98 1 97 2 193 4 195 1 105 1 198 6 28 9 
253 2 297 1 113 9 299 5 34 2 156 1 160 1 262 1 39 1 308 1 76 2 78 1 125 3 126 1 312 1 271 2 48 1 16 1 136 2 183 2 284 1 98 1 97 2 193 4 195 1 105 1 198 6 28 9 
253 2 297 1 113 10 299 6 34 2 156 1 160 1 262 1 39 1 308 1 76 2 78 1 125 4 126 1 312 1 271 2 48 1 16 1 136 2 183 2 284 1 98 1 97 2 193 5 195 1 105 1 198 7 28 10 
253 2 113 7 299 4 34 1 156 1 160 1 262 1 39 1 308 1 76 2 78 1 125 2 126 1 312 1 271 2 48 1 16 1 136 2 183 2 284 1 98 1 97 2 193 3 195 1 105 1 198 4 28 7 
253 1 136 1 297 1 113 4 299 3 34 2 97 1 160 1 76 1 308 1 78 1 193 2 125 1 198 3 28 4 271 1 48 1 16 1 
275 1 136 1 253 1 113 2 299 1 183 1 284 1 97 1 308 1 76 1 191 1 78 1 9 1 105 1 28 2 48 1 
136 2 113 3 299 2 156 1 183 1 97 2 308 1 78 1 193 1 125 1 198 1 28 3 48 1 
253 1 113 9 297 1 299 5 34 2 156 1 160 1 308 1 76 1 78 1 125 3 126 1 312 1 271 1 48 1 16 1 136 2 183 1 97 2 236 1 193 4 198 7 28 9 30 1 
253 1 113 9 297 1 299 5 34 2 156 1 160 1 308 1 76 1 78 1 125 3 126 1 312 1 271 1 48 1 16 1 136 2 183 1 97 2 236 1 193 4 198 7 28 9 30 1 
132 1 
54 1 26 2 315 1 
226 2 117 1 324 2 247 2 272 1 293 2 15 2 223 2 
117 1 260 1 72 1 118 1 3 1 161 1 40 1 168 1 85 1 131 2 272 1 15 2 49 1 223 2 224 1 277 1 226 3 281 2 323 2 324 2 231 1 56 2 234 1 141 1 190 1 145 1 146 1 104 1 196 2 108 1 62 1 107 1 199 1 247 3 33 1 293 2 112 1 
144 1 226 1 324 1 325 1 247 1 272 1 293 1 133 1 15 1 223 1 
163 1 77 1 
77 1 6 1 79 2 266 1 315 1 84 1 217 1 272 1 15 2 133 1 88 2 223 2 226 2 324 2 325 1 327 1 144 2 247 2 293 2 
79 1 51 1 13 1 87 1 88 1 
238 1 79 2 51 1 315 1 84 1 219 1 87 1 88 2 
79 1 87 1 88 1 
51 1 226 1 324 1 325 1 144 1 79 1 266 1 247 1 272 1 293 1 133 1 15 1 88 1 223 1 
315 1 
79 2 51 1 315 1 84 1 286 1 219 1 87 1 88 2 
93 1 51 2 254 1 36 1 208 2 74 1 121 1 4 1 240 1 79 5 241 2 315 1 83 1 82 2 10 1 84 1 219 1 87 2 88 5 
132 1 
226 2 68 1 117 2 324 1 100 1 247 2 293 2 15 1 223 1 
128 1 158 1 11 1 
277 1 226 1 323 1 117 1 118 1 3 1 161 1 190 1 146 1 196 1 107 1 130 1 247 1 131 1 49 1 224 1 
277 1 295 1 226 2 323 1 158 1 324 1 73 1 118 1 3 1 161 1 190 1 146 1 196 1 107 1 247 2 131 1 293 1 49 1 223 1 224 1 
295 1 226 3 117 1 324 3 247 3 293 3 15 1 223 3 
144 1 226 1 324 1 247 1 293 1 133 1 223 1 
144 1 226 1 68 1 324 1 247 1 293 1 100 1 15 1 223 1 
68 1 260 1 73 1 72 1 3 1 161 1 77 1 6 1 79 1 168 1 85 1 272 1 15 2 88 1 277 1 281 2 94 1 190 1 24 1 196 1 104 1 107 1 293 3 112 1 295 1 117 1 118 1 40 1 124 1 131 1 217 1 49 1 223 3 224 1 226 4 323 1 324 3 56 1 327 1 141 1 144 2 146 1 145 1 62 1 247 4 
295 1 226 2 117 1 324 1 247 2 293 2 175 1 162 1 223 1 
295 2 226 3 94 1 68 1 324 3 73 1 327 1 77 1 144 1 6 1 79 1 315 1 247 3 217 1 249 1 293 3 15 1 88 1 223 3 
295 1 226 2 68 1 324 2 158 1 128 1 247 2 293 2 15 1 223 2 
277 1 226 1 323 1 117 1 118 1 3 1 161 1 190 1 146 1 196 1 107 1 247 1 131 1 49 1 224 1 
277 1 226 1 181 1 323 1 117 1 233 1 3 1 161 1 190 1 146 1 196 1 107 1 247 1 131 1 49 1 
158 2 72 1 307 1 40 1 164 1 168 1 128 2 11 2 319 1 176 1 281 2 285 1 287 1 56 4 141 1 21 1 145 1 23 1 104 1 108 2 338 1 112 2 
144 1 6 1 226 1 324 1 186 1 247 1 293 1 223 1 
295 2 226 5 68 1 117 1 324 4 73 1 162 1 45 1 247 5 202 1 293 5 175 1 15 1 223 4 
144 1 226 2 324 2 186 1 247 2 293 2 133 1 223 2 
205 1 143 1 
205 1 143 1 
320 1 251 1 
320 1 251 1 
320 1 251 1 
205 1 159 1 143 1 
205 2 71 1 320 1 251 1 142 1 143 2 
205 1 122 1 143 1 
205 1 159 1 143 1 
205 1 159 1 143 1 
205 1 215 1 143 1 
205 1 215 1 143 1 
205 1 215 1 143 1 
276 1 17 1 205 1 182 1 335 1 143 1 
276 1 79 1 17 1 205 1 182 1 19 1 335 1 88 1 143 1 
253 1 271 1 76 1 
275 1 253 1 76 1 
275 1 179 1 288 1 268 1 271 2 76 3 
275 1 179 1 288 1 271 1 292 1 76 2 
275 1 179 1 288 2 271 1 76 2 
207 1 208 1 74 3 164 1 79 5 80 1 172 1 83 2 82 1 315 2 84 1 219 1 176 1 87 1 220 1 88 5 177 1 225 2 93 1 51 4 54 1 139 1 285 1 189 2 57 1 21 1 241 1 242 1 26 3 29 1 151 2 294 1 
254 1 207 2 208 2 74 8 211 5 164 3 79 9 172 4 44 1 83 6 315 5 82 2 84 1 47 1 13 5 219 1 176 3 87 6 220 2 88 9 225 6 51 7 93 1 54 3 285 3 21 3 241 2 329 1 332 1 242 3 149 1 26 9 61 1 29 1 151 6 
254 1 207 1 208 1 74 3 164 1 79 3 80 1 172 1 315 3 82 1 83 2 84 1 220 1 176 1 88 3 225 2 51 2 54 2 285 1 189 1 21 1 241 1 242 1 26 4 151 2 294 1 
254 1 207 1 208 1 74 5 164 2 79 4 80 1 172 2 44 1 315 4 82 1 83 4 84 1 220 1 176 2 88 4 225 4 51 3 54 3 285 2 189 2 21 2 241 1 332 1 242 2 149 1 26 7 151 4 294 1 
132 1 
107 1 221 1 
103 1 
107 1 190 1 
161 1 190 1 103 1 330 2 63 1 107 1 135 1 
107 1 161 1 190 1 
107 1 274 1 
178 3 66 1 279 1 255 1 70 1 285 1 56 7 235 1 263 2 164 1 108 4 314 1 200 2 201 1 110 1 112 3 321 1 
178 3 66 1 279 1 255 1 70 1 285 1 56 7 235 1 263 2 164 1 108 4 314 1 200 2 201 1 110 1 112 3 321 1 
178 3 50 1 66 1 255 1 279 1 70 1 285 1 56 7 235 1 263 2 164 1 108 4 314 1 200 2 201 1 110 1 112 3 321 1 
66 1 255 1 302 1 70 2 72 2 304 4 263 3 40 2 164 4 168 2 8 2 43 1 314 4 318 1 174 1 176 3 321 2 178 7 279 1 281 4 285 4 56 32 235 1 101 1 145 2 21 3 22 1 331 1 242 3 60 3 108 16 200 3 201 2 110 2 112 16 
255 1 66 1 70 1 72 2 2 1 40 2 263 3 164 1 168 2 8 1 314 1 321 1 178 4 279 1 281 4 285 1 56 9 145 2 27 1 108 5 200 2 201 1 110 1 112 4 
252 1 253 1 296 1 113 2 299 1 256 1 35 1 259 1 303 1 3 1 308 1 76 2 78 1 170 1 268 1 271 1 131 1 48 1 134 1 275 1 136 1 323 1 282 1 230 1 183 1 97 1 146 1 196 1 198 1 28 2 
252 1 253 1 296 1 113 3 0 1 299 1 256 1 35 1 303 1 3 1 76 2 78 1 167 1 170 1 268 1 271 1 131 1 48 1 134 1 275 1 136 1 323 1 230 1 183 1 96 1 97 1 146 1 196 1 198 2 28 3 
252 1 296 1 253 1 113 2 299 1 256 1 35 1 3 1 76 2 78 1 167 1 268 1 271 1 131 1 48 1 134 1 275 1 323 1 183 1 230 1 96 1 146 1 196 1 198 2 28 2 
252 2 136 1 296 2 298 1 322 1 0 1 113 1 323 1 183 2 230 2 209 1 3 1 97 1 305 1 190 1 328 1 146 1 196 1 107 1 28 1 131 1 49 1 89 1 
252 1 253 1 296 1 113 1 256 1 35 1 259 1 303 1 3 1 308 1 76 2 170 1 268 1 271 1 131 1 134 1 275 1 136 1 323 1 230 1 183 1 96 1 97 1 146 1 196 1 28 1 
32 1 
298 1 207 1 208 1 3 1 74 1 77 1 163 1 123 1 79 2 129 1 82 1 83 1 131 2 218 1 219 1 49 2 87 2 88 2 89 1 93 1 323 2 20 1 190 1 146 1 241 1 196 2 107 1 246 1 245 1 334 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 2 129 1 334 1 286 1 219 1 87 1 77 1 20 1 88 2 
93 1 208 1 77 1 20 1 123 1 163 1 79 1 241 1 82 1 129 1 334 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
163 1 123 1 79 1 129 1 334 1 77 1 20 1 88 1 
93 1 208 1 77 1 20 1 123 1 163 1 79 1 241 1 82 1 129 1 334 1 88 1 
145 1 168 1 281 2 104 1 72 1 132 1 319 1 141 1 40 1 
117 1 302 1 158 14 72 2 304 4 40 2 309 1 164 3 311 1 168 2 43 2 267 1 314 1 128 5 11 14 176 3 178 1 281 4 231 1 285 2 56 19 141 1 145 2 21 2 147 1 104 2 242 3 60 3 62 1 108 10 153 1 112 9 
295 1 117 1 118 1 261 1 72 1 73 1 119 1 3 1 161 1 40 1 309 1 168 1 128 1 130 1 131 1 49 1 223 1 224 1 277 1 226 2 281 2 323 1 324 1 231 1 56 2 141 1 190 1 146 1 145 1 148 1 196 1 104 1 107 1 62 1 108 1 247 2 293 1 112 1 
158 3 260 1 73 1 72 2 3 1 161 1 263 1 164 1 168 2 11 3 176 1 178 1 277 1 278 1 281 4 285 1 99 1 190 1 21 1 196 1 104 2 107 1 108 3 31 1 293 1 112 4 295 1 206 1 118 1 40 2 309 1 310 1 128 3 131 1 49 1 223 1 224 1 226 2 323 1 324 1 56 7 141 2 145 2 146 1 242 1 62 1 247 2 
295 1 298 1 72 2 3 2 40 2 265 1 41 1 168 2 131 7 319 1 49 2 223 1 89 1 226 1 281 4 323 8 282 1 283 1 324 1 231 1 96 1 56 2 140 1 141 2 190 2 146 2 145 2 196 8 104 2 333 1 107 3 108 1 62 1 247 1 33 2 293 1 336 1 155 1 112 1 
68 1 158 1 72 1 40 1 309 1 164 1 166 1 168 1 128 1 11 1 15 1 176 1 223 1 226 1 281 2 324 1 285 1 56 3 141 1 145 1 21 1 104 1 242 1 108 1 247 1 293 1 112 2 
178 1 281 2 158 1 72 1 56 2 141 1 40 1 145 1 164 1 23 1 104 1 168 1 108 2 314 1 128 1 11 1 319 1 176 1 
281 2 158 1 72 1 285 1 56 2 141 1 40 1 145 1 21 1 104 1 168 1 128 1 11 1 319 1 338 1 112 2 
158 2 72 1 40 1 164 1 168 1 128 2 11 2 319 1 176 1 281 2 285 1 56 4 141 1 145 1 21 1 104 1 242 1 108 2 112 2 
178 1 281 2 158 1 72 1 56 2 141 1 40 1 145 1 164 1 23 1 104 1 168 1 108 2 314 1 128 1 11 1 176 1 155 1 
281 2 158 1 72 1 285 1 56 2 141 1 40 1 145 1 21 1 104 1 168 1 128 1 11 1 155 1 338 1 112 2 
178 1 281 2 158 2 285 1 72 1 56 4 141 1 40 1 21 1 145 1 164 1 104 1 168 1 242 1 108 2 314 1 128 2 11 2 176 1 112 2 155 1 
281 2 158 2 285 1 72 1 56 4 141 1 40 1 21 1 145 1 164 1 104 1 168 1 242 1 108 2 128 2 11 2 176 1 112 2 
117 1 260 1 118 1 72 1 3 1 161 1 40 1 168 1 131 1 49 1 224 1 277 1 226 1 281 2 323 1 231 1 56 2 141 1 190 1 146 1 145 1 196 1 104 1 108 1 107 1 62 1 247 1 112 1 
117 1 72 1 3 1 161 1 5 1 40 1 168 1 131 1 49 1 277 1 226 1 181 1 281 2 323 1 231 1 233 1 56 2 141 1 190 1 146 1 145 1 196 1 104 1 108 1 107 1 62 1 247 1 112 1 
158 2 72 1 40 1 309 1 164 1 168 1 128 2 11 2 176 1 281 2 285 1 56 4 141 1 145 1 21 1 104 1 242 1 108 2 112 2 
158 2 260 1 118 1 72 1 3 1 161 1 40 1 164 1 310 1 168 1 128 2 11 2 131 1 176 1 224 1 277 1 226 1 281 2 323 1 282 1 285 1 56 4 141 1 190 1 21 1 146 1 145 1 196 1 104 1 242 1 108 2 107 1 247 1 112 2 
68 1 158 1 72 1 210 1 40 1 309 1 164 1 168 1 314 1 128 1 11 1 15 1 176 1 223 1 178 1 226 1 281 2 324 1 285 1 56 3 141 1 21 1 145 1 104 1 242 1 108 2 247 1 293 1 112 1 
204 1 67 1 157 1 302 2 72 4 2 1 304 3 306 1 75 1 263 1 40 4 264 1 164 4 8 2 168 4 43 1 216 1 314 3 176 4 178 4 281 8 185 1 285 4 56 31 192 1 145 4 21 4 242 4 60 2 290 1 108 15 291 1 154 1 203 1 111 3 112 16 
302 1 72 1 2 1 304 2 306 1 75 1 40 1 264 2 164 2 168 1 43 1 216 1 176 2 222 1 281 2 285 2 56 15 145 1 21 2 242 2 60 1 108 7 291 2 111 2 112 8 
204 1 67 1 157 1 302 3 72 4 2 1 304 5 306 1 75 1 263 1 40 4 264 1 164 5 8 2 168 4 43 2 173 1 216 1 314 4 176 5 222 1 178 5 281 8 185 1 285 5 56 40 145 4 21 5 242 5 60 3 290 1 108 19 291 2 154 1 203 1 111 4 112 21 
204 1 67 1 157 1 302 2 72 4 2 1 304 3 306 1 75 1 263 1 40 4 264 1 164 4 8 2 168 4 43 1 216 1 314 3 176 4 222 1 178 4 281 8 185 1 285 4 56 33 145 4 21 4 242 4 60 2 290 1 108 16 291 1 154 1 203 1 111 4 112 17 
204 1 66 1 255 1 67 1 157 1 302 2 72 2 2 1 304 3 306 1 75 1 263 3 40 2 264 1 164 5 8 1 168 2 43 1 216 1 314 1 176 4 222 1 178 4 279 1 281 4 185 1 285 5 56 38 145 2 21 4 242 4 60 2 290 1 108 18 200 1 291 1 201 1 110 1 111 4 203 1 112 20 
257 1 115 1 116 1 72 1 3 1 40 1 309 1 165 1 168 1 131 2 226 2 281 2 323 2 283 1 231 1 56 2 141 1 190 1 146 1 145 1 196 2 104 1 107 1 108 1 62 1 150 1 247 2 33 2 293 2 336 1 112 1 
275 1 253 1 323 2 282 1 35 1 230 1 38 1 96 1 3 1 76 2 146 1 196 2 170 1 268 1 271 1 152 1 131 2 109 1 134 1 
275 1 253 1 323 1 35 1 230 1 96 1 3 1 76 2 146 1 196 1 170 1 127 1 268 1 271 1 152 1 131 1 134 1 
298 1 323 1 230 1 37 1 209 1 38 1 3 1 190 1 146 1 196 1 107 1 131 1 49 1 89 1 
275 1 253 1 323 1 35 1 230 1 38 1 96 1 3 1 76 2 146 1 196 1 170 1 268 1 271 1 152 1 131 1 109 1 134 1 
90 1 
132 1 
208 1 74 1 79 1 83 1 82 1 315 2 84 1 14 1 219 1 87 1 88 1 93 1 54 1 58 1 241 1 26 1 64 1 
74 4 3 2 161 2 164 1 79 2 82 2 83 3 273 1 87 2 176 1 88 2 93 2 18 1 184 1 285 1 190 2 194 1 21 1 196 1 197 1 26 6 107 4 207 1 206 1 208 2 212 1 315 3 131 1 219 1 221 2 49 1 225 3 52 1 323 1 227 1 54 3 327 1 146 3 241 2 330 1 242 1 63 1 151 3 250 1 
74 5 164 1 266 1 83 3 82 1 84 1 272 1 176 1 15 1 93 1 285 1 21 1 26 6 106 1 293 1 203 1 207 1 208 1 302 1 304 2 43 1 315 4 133 1 223 1 225 4 226 1 54 3 324 1 325 1 326 1 144 1 241 1 242 1 60 1 245 1 151 4 247 1 250 1 
66 1 258 1 208 1 74 2 164 2 79 1 266 1 82 1 83 2 272 1 133 1 15 1 88 1 223 1 93 1 226 1 324 1 325 1 285 1 326 1 144 1 241 1 25 1 201 1 247 1 250 2 293 1 110 1 
93 1 36 1 208 1 74 1 240 1 241 1 82 1 83 1 315 1 84 1 
54 2 285 1 74 2 164 1 21 1 242 1 26 4 83 2 315 2 151 2 176 1 225 2 
79 1 315 1 84 1 219 1 87 1 88 1 
254 1 298 1 207 2 69 1 300 1 208 2 3 2 74 2 161 1 79 3 42 1 81 1 313 2 82 2 83 2 218 1 131 4 219 2 49 2 87 4 88 3 89 1 180 1 93 1 323 4 228 1 102 1 190 2 146 3 241 2 196 4 107 2 246 1 245 2 
117 1 260 1 72 1 118 1 3 1 161 1 40 1 168 1 131 1 85 1 272 1 49 1 15 2 223 2 224 1 277 1 226 3 281 2 323 1 324 2 56 1 141 1 190 1 145 1 146 1 196 1 104 1 62 1 107 1 247 3 293 2 112 1 
93 1 54 2 207 1 208 1 74 1 241 1 26 4 200 1 83 2 82 1 315 4 151 2 84 2 245 1 225 2 
276 1 17 1 
276 1 17 1 
276 1 17 1 
276 1 17 1 
276 1 17 1 
276 1 17 1 
276 1 17 1 
276 1 17 1 
205 1 143 1 
178 3 66 1 279 1 255 1 281 4 285 1 72 2 56 8 263 2 40 2 164 1 145 2 168 2 8 1 108 4 200 1 314 1 201 1 110 1 112 4 
132 1 
178 1 280 1 281 2 285 1 72 1 56 4 40 1 21 1 145 1 164 1 168 1 242 1 108 2 314 1 176 1 112 2 
302 1 285 1 304 2 56 7 164 1 21 1 43 1 242 1 60 1 108 3 176 1 112 4 
66 2 255 1 72 1 304 2 263 4 40 1 164 5 8 1 168 1 43 1 267 1 314 4 176 2 178 8 279 1 281 2 285 5 56 25 21 2 145 1 25 1 242 2 60 2 108 13 200 1 201 2 153 1 110 2 112 12 
304 1 56 1 112 1 
60 1 108 1 56 1 
178 2 206 1 285 1 56 6 263 1 164 1 21 1 242 1 108 3 314 1 176 1 112 3 
302 1 72 1 2 1 304 2 40 1 164 1 168 1 43 1 176 1 281 2 285 1 56 7 145 1 21 1 242 1 60 1 108 3 203 1 112 4 
178 2 66 1 285 1 56 6 263 1 164 1 108 3 314 1 201 1 110 1 112 3 
178 2 255 1 279 1 281 2 72 1 56 3 101 1 263 1 40 1 145 1 8 1 168 1 108 1 314 1 201 1 110 1 112 2 
178 5 66 1 281 2 72 1 2 1 285 2 56 10 40 1 263 3 145 1 164 2 168 1 25 1 108 5 314 2 201 2 110 2 112 5 
178 1 281 2 2 1 72 1 56 2 40 1 145 1 164 1 168 1 108 2 314 1 176 1 
281 2 285 1 2 1 72 1 56 4 40 1 145 1 164 1 21 1 168 1 242 1 108 2 176 1 112 2 
178 2 281 6 2 1 72 3 56 3 101 1 40 3 263 1 145 3 8 1 168 3 108 1 314 1 201 1 154 1 110 1 112 2 
66 2 255 1 302 1 72 5 2 1 304 4 263 4 40 5 164 5 8 2 168 5 43 1 314 5 318 1 176 3 178 9 279 1 280 1 281 10 285 5 56 36 101 1 145 5 21 3 22 1 331 1 242 3 60 3 108 17 200 1 201 3 154 1 110 3 112 19 
204 1 302 1 157 1 72 3 2 1 304 1 40 3 263 1 164 2 168 3 8 2 314 1 176 2 178 2 281 6 185 1 285 1 56 12 145 3 21 1 242 2 60 1 108 7 290 1 203 1 112 5 
66 1 255 1 302 1 2 1 72 2 304 2 263 2 40 2 164 2 168 2 43 1 314 1 176 1 178 3 279 1 281 4 280 1 285 1 56 11 145 2 242 1 60 1 108 6 200 1 201 1 110 1 203 1 112 5 
66 2 255 1 302 1 72 2 2 1 304 2 263 3 40 2 164 4 168 2 43 1 314 1 176 1 178 4 279 1 281 4 280 1 285 4 56 20 145 2 21 1 25 1 242 1 60 1 108 10 200 1 201 2 110 2 203 1 112 10 
66 2 255 1 302 1 72 2 2 1 304 2 263 4 40 2 164 4 168 2 43 1 314 3 176 1 178 7 279 1 281 4 280 1 285 4 56 20 145 2 21 1 25 1 242 1 60 1 108 10 200 1 201 2 110 2 203 1 112 10 
204 1 302 1 157 1 72 3 2 1 304 1 40 3 263 1 164 2 168 3 8 2 314 1 176 2 178 2 281 6 185 1 285 1 56 12 145 3 21 1 242 2 60 1 108 7 290 1 203 1 112 5 
302 1 72 1 2 1 304 2 40 1 164 1 168 1 43 1 176 1 281 2 285 1 56 7 145 1 21 1 242 1 60 1 108 3 203 1 112 4 
302 1 72 2 2 1 304 2 40 2 164 1 168 2 43 1 176 1 280 1 281 4 285 1 56 7 145 2 21 1 242 1 60 1 108 3 203 1 112 4 
302 1 2 1 72 2 304 2 40 2 164 1 168 2 43 1 176 1 281 4 285 1 56 7 145 2 21 1 242 1 60 1 108 3 154 1 203 1 112 4 
178 6 279 1 255 2 66 1 285 1 56 7 263 3 164 1 108 3 314 3 201 3 110 3 112 4 
302 1 2 1 72 2 304 2 40 2 164 1 168 2 43 1 176 1 281 4 285 1 56 7 145 2 21 1 242 1 60 1 108 3 154 1 203 1 112 4 
248 1 175 1 162 1 
239 1 55 1 232 1 46 1 248 1 86 1 175 1 162 1 
196 1 323 1 131 1 132 1 49 1 
277 1 295 1 226 2 323 1 117 1 324 1 3 1 161 1 190 1 146 1 196 1 107 1 247 2 131 1 293 1 49 1 223 1 224 1 
295 1 117 1 3 1 161 2 6 1 313 1 131 1 217 1 223 2 274 1 224 1 277 1 226 2 323 1 18 1 324 1 190 2 146 1 144 1 196 1 107 3 247 2 293 2 
295 1 117 1 3 1 161 2 6 1 313 1 131 2 217 1 223 2 274 1 91 1 277 1 226 2 323 2 18 1 324 1 233 1 190 2 146 1 144 1 196 2 107 3 247 2 293 2 
3 1 161 1 79 2 266 1 313 1 315 1 84 1 131 1 272 1 12 1 133 1 15 1 87 1 221 1 223 1 88 2 274 1 226 1 323 1 18 1 324 1 325 1 327 1 190 1 144 1 146 1 330 1 196 1 59 1 107 3 247 1 293 1 
3 1 161 1 79 2 266 1 313 1 315 1 84 1 131 1 272 1 273 1 133 1 15 1 87 1 221 1 223 1 88 2 274 1 226 1 323 1 18 1 324 1 325 1 327 1 190 1 144 1 146 1 330 1 196 1 107 3 247 1 293 1 
146 1 196 1 323 1 333 1 131 1 3 1 
323 7 282 1 69 1 300 1 96 1 3 2 140 1 161 1 190 2 265 1 146 3 41 1 196 7 333 1 63 1 107 3 131 6 33 1 336 1 49 2 65 1 
295 1 66 1 255 1 117 2 158 1 260 1 72 2 118 1 3 1 161 1 263 2 40 2 309 1 164 1 168 2 310 1 128 1 11 1 131 1 223 1 224 1 178 2 277 1 279 1 226 2 281 4 323 1 282 1 324 1 285 1 56 6 99 1 141 2 190 1 146 1 145 2 104 2 196 1 108 3 107 1 200 1 150 1 201 1 247 2 293 1 110 1 112 3 
66 1 3 1 74 4 161 1 164 2 79 3 266 1 82 2 83 5 84 2 273 1 272 1 15 1 87 2 88 3 93 2 18 1 285 2 190 1 194 1 196 1 25 1 107 2 201 1 293 1 110 1 36 1 208 2 212 1 315 2 131 1 219 1 133 1 221 1 49 1 223 1 51 1 226 1 52 1 323 1 228 1 324 1 325 1 326 1 327 1 144 1 146 1 240 1 241 2 330 1 247 1 250 2 
323 1 3 1 161 1 190 1 103 1 146 2 330 1 196 1 197 1 333 1 63 1 107 1 131 1 
91 1 137 1 298 1 323 4 282 1 3 1 190 1 146 1 196 4 107 1 131 4 49 1 89 1 
180 1 323 2 69 1 300 1 120 1 3 1 102 1 161 1 190 1 146 2 196 2 313 1 107 1 131 2 
275 1 146 1 253 1 196 1 323 1 35 1 131 1 3 1 76 1 49 1 
323 2 282 1 116 1 96 1 3 1 190 1 146 1 196 2 107 1 131 2 336 1 
137 1 298 1 323 5 282 1 3 2 140 1 190 2 146 2 265 1 196 5 313 1 107 3 131 4 49 1 336 1 89 1 
137 1 298 1 323 5 282 1 229 1 3 2 190 2 146 2 265 1 196 5 313 1 107 3 131 4 49 1 336 1 89 1 
277 1 295 1 226 2 323 1 117 1 324 1 233 1 3 1 161 1 190 1 146 1 196 1 107 1 247 2 131 1 293 1 49 1 223 1 
323 1 69 1 300 1 3 1 161 1 190 1 146 2 196 1 313 1 63 1 107 1 131 1 65 1 
138 1 117 1 243 1 270 1 237 1 
79 1 7 1 171 1 266 1 315 1 84 1 270 1 272 1 15 1 133 1 88 1 223 1 51 1 226 1 324 1 325 1 144 1 247 1 293 1 337 1 
226 1 138 1 257 1 115 1 237 1 165 1 270 1 247 1 293 1 
171 1 270 1 337 1 
132 1 
78 1 136 1 113 1 299 1 28 1 48 1 97 1 
252 1 113 1 183 1 
78 1 136 1 114 1 113 3 299 1 289 1 95 1 28 3 284 2 48 1 97 1 308 1 
78 1 136 1 113 2 299 1 34 1 198 1 28 2 48 1 97 1 
193 1 253 1 136 1 113 1 299 1 28 1 271 1 160 1 97 1 76 1 308 1 
78 1 136 1 113 1 299 1 28 1 97 1 308 1 
78 2 136 1 113 1 28 1 48 1 97 1 308 1 
136 2 92 1 113 2 299 1 97 2 188 1 308 1 78 1 28 2 317 1 
136 1 113 3 299 2 97 1 308 1 78 1 193 1 126 1 125 1 312 1 198 2 28 3 48 1 
275 1 136 1 253 1 113 2 299 1 187 1 97 1 76 2 308 1 78 1 198 1 268 1 28 2 271 1 48 1 
136 2 113 4 297 1 299 2 34 1 97 2 308 1 78 1 193 1 125 1 198 2 28 4 48 1 
78 1 136 1 113 1 299 1 28 1 48 1 97 1 308 1 
136 1 114 1 113 4 299 3 95 1 284 1 97 1 78 2 193 1 125 1 198 2 244 1 28 4 48 2 
136 1 113 2 299 1 97 1 308 1 236 1 78 1 169 1 198 1 28 2 269 1 48 1 
136 1 114 1 113 3 299 1 95 2 284 2 97 1 308 1 78 1 214 1 28 3 48 1 
299 2 53 2 301 1 1 1 
136 1 113 1 28 1 316 1 97 1 308 1 
78 1 136 1 113 2 299 1 126 1 198 1 28 2 48 1 97 1 308 1 
213 1 
78 1 136 1 113 1 299 1 28 1 48 1 97 1 308 1 
78 1 136 1 113 3 126 1 299 1 198 1 28 3 284 1 48 1 97 1 308 1 
193 1 299 1 125 1 244 1 
78 1 299 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (18,91) (18,91) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (18,91) (18,91) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (18,91) (18,91) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (18,91) (18,91) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (116,132,148) (116,132,148) 106 42 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 241 78 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 75 27 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I | OPERATOR | 1301 | ^ -> |
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1275 | 0 -> 1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> !=
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
71 1 16 1 108 1 293 1 18 1 88 1 309 1 355 1 162 1 186 1 91 1 
71 1 16 1 108 1 293 1 18 1 88 1 309 1 355 1 162 1 186 1 91 1 
71 1 16 1 108 1 293 1 18 1 88 1 309 1 355 1 162 1 186 1 91 1 
71 1 16 1 108 1 293 1 18 1 88 1 309 1 355 1 162 1 186 1 91 1 
201 1 131 1 16 4 108 1 309 1 88 4 355 1 5 3 47 1 123 1 23 2 206 1 193 1 165 3 253 2 37 1 36 1 69 1 
201 1 16 2 108 1 59 1 309 1 88 2 150 1 355 1 5 1 193 1 28 1 36 1 37 1 293 1 186 1 284 1 
201 1 16 3 131 1 108 1 309 2 88 3 355 2 5 2 23 1 193 1 79 1 165 1 186 1 
201 1 5 5 123 1 206 1 79 1 165 7 253 2 36 1 37 1 186 1 213 1 131 3 16 9 108 1 88 9 309 2 355 2 21 1 23 4 47 1 193 1 267 1 94 1 69 1 
201 1 5 5 123 1 206 1 79 1 165 7 253 2 36 1 37 1 186 1 213 1 131 3 16 9 108 1 88 9 309 2 355 2 21 1 23 4 47 1 193 1 267 1 94 1 69 1 
349 1 76 1 251 1 
82 1 308 2 76 1 
208 1 322 2 307 2 278 2 232 1 290 2 249 2 314 2 
98 1 322 2 278 3 2 1 179 1 202 1 51 1 103 1 249 3 7 2 104 1 208 1 126 1 232 1 53 1 127 1 233 1 328 1 235 2 191 1 307 3 46 2 89 1 354 1 332 2 239 1 136 1 22 1 290 3 112 2 314 2 137 1 64 2 222 1 66 1 118 1 292 1 269 1 356 2 318 2 358 1 
208 1 322 1 126 1 307 1 278 1 184 1 290 1 249 1 314 1 234 1 
116 1 148 1 
15 1 132 2 322 1 278 1 307 1 179 1 22 1 76 1 290 1 249 1 314 1 251 1 116 1 126 1 242 2 
346 1 336 1 132 1 242 1 38 1 
346 1 146 1 132 2 321 1 242 2 38 1 76 1 251 1 
346 1 132 1 242 1 
132 1 322 1 278 1 307 1 135 1 290 1 249 1 314 1 208 1 126 1 184 1 38 1 242 1 234 1 
76 1 
346 1 330 1 132 2 321 1 242 2 38 1 76 1 251 1 
132 5 321 1 217 1 178 1 122 2 160 2 60 1 76 1 250 1 251 1 346 2 65 1 291 1 38 2 242 5 327 2 282 1 176 1 211 1 
235 2 322 1 2 1 278 2 307 2 46 1 89 1 179 1 136 1 202 1 22 1 290 2 112 1 249 2 181 1 64 2 222 1 126 1 350 1 356 1 318 2 358 1 212 1 328 1 
349 1 232 1 
322 1 307 2 278 1 24 1 290 2 249 2 314 1 166 1 232 2 
215 1 74 1 212 1 
235 2 307 1 278 1 2 1 46 1 89 1 179 1 202 1 136 1 22 1 290 1 112 1 249 1 64 2 222 1 126 1 232 1 265 1 356 1 318 2 358 1 328 1 
322 4 278 4 307 5 100 1 19 1 25 1 290 5 249 5 314 1 181 1 261 1 166 1 350 2 232 1 
322 2 126 1 307 2 278 2 184 1 289 1 290 2 249 2 
322 3 307 3 278 3 232 1 350 1 290 3 249 3 314 1 
322 1 126 1 307 1 278 1 184 1 290 1 249 1 
166 1 322 1 126 1 307 1 278 1 24 1 290 1 249 1 314 1 
322 3 2 1 278 4 159 1 202 1 179 2 249 4 181 1 7 2 104 1 208 1 166 1 126 2 232 1 350 1 53 1 127 1 233 1 328 1 15 1 235 2 353 1 132 1 191 1 307 4 46 1 89 1 354 1 332 1 239 1 136 1 22 2 290 4 112 1 314 2 116 1 137 1 64 2 222 1 118 1 242 1 269 1 356 1 318 2 358 1 
322 1 307 2 278 1 232 1 350 1 19 1 290 2 249 2 261 1 
15 1 298 1 132 1 353 1 322 3 278 3 307 3 179 1 22 1 76 1 290 3 249 3 314 1 181 1 116 1 166 1 126 1 242 1 350 2 
215 1 322 2 278 2 307 2 290 2 249 2 314 1 166 1 350 1 212 1 
235 2 307 1 278 1 2 1 46 1 89 1 179 1 202 1 136 1 22 1 290 1 112 1 249 1 64 2 222 1 126 1 232 1 356 1 318 2 358 1 328 1 
235 2 307 1 278 1 2 1 46 1 179 1 136 1 22 1 290 1 112 1 249 1 64 2 222 1 126 1 232 1 29 1 356 1 318 2 358 1 328 1 177 1 
245 1 74 2 51 2 7 2 183 1 281 1 53 1 127 1 258 1 212 2 215 2 191 2 239 1 332 4 153 1 313 1 115 1 137 1 264 1 118 1 357 1 269 1 319 1 273 1 
322 1 126 1 307 1 278 1 179 1 289 1 290 1 249 1 
33 1 199 1 
33 1 199 1 
157 1 128 1 
157 1 128 1 
157 1 128 1 
33 1 205 1 199 1 
33 1 113 1 199 1 
157 1 341 1 33 2 224 1 128 1 199 2 
33 1 205 1 199 1 
33 1 205 1 199 1 
33 1 283 1 199 1 
33 1 283 1 199 1 
33 1 283 1 199 1 
200 1 72 1 246 1 322 2 278 2 32 1 33 1 279 1 203 1 249 2 77 1 345 1 232 1 185 1 54 1 132 1 17 1 307 2 290 2 113 1 220 1 317 1 242 1 199 1 
246 2 132 2 17 1 1 1 32 2 341 1 33 2 76 1 203 3 77 2 219 2 105 1 255 1 242 2 268 1 185 2 274 1 339 1 199 2 
37 1 36 1 206 1 
37 1 36 1 284 1 
36 3 310 1 230 1 206 2 284 1 173 1 
36 2 310 1 152 1 230 1 206 1 284 1 
36 2 310 1 230 2 206 1 284 1 
72 1 321 1 178 3 160 1 122 1 279 1 301 1 76 2 231 2 145 2 180 2 251 1 125 1 346 1 303 1 82 1 281 1 38 4 327 1 54 1 258 1 132 5 308 3 311 1 115 1 335 1 291 2 242 5 337 1 357 1 338 1 176 1 
322 1 278 1 102 1 76 1 249 1 251 1 208 1 346 1 126 1 184 1 38 2 39 1 234 1 132 2 307 1 135 1 290 1 26 1 314 1 336 1 242 2 
178 3 160 1 122 1 76 3 180 1 145 2 231 2 251 1 125 1 303 1 82 2 281 1 38 2 327 1 211 1 54 1 258 1 132 3 308 4 115 1 335 1 291 2 242 3 337 1 357 1 338 1 
320 1 178 5 160 1 122 1 76 4 52 1 231 4 145 4 180 2 251 1 125 1 303 1 82 3 281 2 38 3 327 1 211 1 54 2 258 2 132 4 171 1 308 7 115 2 335 2 291 4 242 4 337 1 357 2 338 1 
64 1 8 1 349 1 
64 1 75 1 
55 1 
64 1 235 1 318 1 
64 1 119 1 
64 1 318 1 
214 1 8 2 64 3 235 1 340 1 318 1 
188 1 245 3 191 3 44 1 228 2 218 1 101 1 332 7 331 1 51 4 281 1 264 2 357 1 275 1 359 1 96 1 130 1 
188 1 245 3 191 3 44 1 228 2 218 1 101 1 332 7 331 1 51 4 281 1 264 2 357 1 275 1 359 1 96 1 130 1 
188 1 245 3 191 3 44 1 133 1 228 2 101 1 218 1 332 7 331 1 51 4 281 1 264 2 357 1 275 1 359 1 96 1 130 1 
245 10 228 3 101 1 300 1 51 16 7 2 124 1 302 1 344 1 281 4 351 1 168 4 53 1 127 1 258 3 329 3 130 1 188 2 44 2 191 15 218 2 331 1 332 31 239 1 115 3 335 3 264 5 269 1 357 4 175 1 275 2 198 1 359 1 96 5 
245 4 228 2 101 1 51 8 7 2 281 3 53 1 127 1 188 1 44 2 191 6 218 1 239 1 332 14 331 1 117 1 196 1 264 3 174 1 269 1 357 3 275 2 359 2 96 1 
201 1 144 1 2 1 5 1 206 1 165 1 9 1 37 1 304 1 36 2 167 1 326 1 186 1 284 1 85 1 16 2 108 1 46 1 88 2 309 1 237 1 355 1 260 1 112 1 193 1 173 1 222 1 356 1 244 1 276 1 
201 1 144 1 299 1 2 1 5 1 161 1 206 1 165 2 9 1 37 1 36 2 167 1 326 1 186 1 284 1 16 3 46 1 88 3 309 1 237 1 355 1 90 1 260 1 112 1 193 1 173 1 222 1 356 1 244 1 276 1 
201 1 144 1 2 1 5 1 161 1 206 1 165 2 9 1 36 2 37 1 167 1 186 1 284 1 16 2 46 1 88 2 237 1 90 1 112 1 193 1 173 1 222 1 356 1 244 1 276 1 
31 1 16 1 156 1 299 1 2 1 46 1 309 1 88 1 355 1 112 1 64 1 222 1 167 2 356 1 318 1 223 1 186 2 295 1 225 1 244 2 226 1 328 1 276 2 
144 1 2 1 161 1 206 1 9 1 37 1 304 1 36 2 167 1 326 1 186 1 284 1 16 1 108 1 46 1 88 1 309 1 237 1 355 1 260 1 112 1 173 1 222 1 356 1 244 1 276 1 
315 1 
50 1 120 1 321 1 2 1 178 1 160 1 122 1 125 1 346 2 106 1 12 1 327 1 148 1 41 1 42 1 328 2 132 2 46 2 238 1 112 2 116 1 64 1 222 1 291 1 242 2 356 2 318 1 295 1 176 1 226 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 346 1 330 1 132 2 321 1 242 2 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 160 1 122 1 327 1 148 1 41 1 176 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 148 1 41 1 42 1 
116 1 132 1 242 1 106 1 238 1 160 1 122 1 327 1 148 1 41 1 176 1 42 1 
245 2 215 1 74 1 191 3 44 1 228 1 101 1 332 6 239 1 331 1 51 3 153 1 7 2 137 1 349 1 281 1 264 2 118 1 232 2 357 1 269 1 127 1 53 1 275 1 359 1 212 1 
245 2 74 8 3 1 51 8 7 4 302 1 348 1 281 2 232 1 325 1 168 3 53 2 127 2 233 1 258 2 329 3 212 8 189 1 215 4 191 6 239 2 332 14 115 1 137 2 335 2 264 1 66 1 118 1 269 2 357 1 92 1 175 1 96 1 
322 1 278 2 2 1 179 1 51 1 181 1 7 2 232 1 325 1 53 1 233 1 328 1 235 2 191 1 332 2 239 1 22 1 290 2 112 1 64 2 66 1 118 1 158 1 202 1 249 2 207 1 126 1 350 1 127 1 215 1 307 2 46 1 89 1 136 1 137 1 222 1 265 1 269 1 356 1 318 2 358 1 93 1 
322 1 278 3 2 2 228 1 101 1 179 2 6 1 51 10 181 1 7 6 104 2 281 3 232 2 325 1 53 3 233 1 328 1 235 4 191 10 331 1 239 3 332 20 22 2 112 3 290 3 115 2 64 4 335 2 66 1 118 3 245 8 74 7 161 1 202 2 163 2 249 3 342 2 81 2 209 1 126 2 350 1 256 1 127 3 258 2 212 7 215 7 44 1 307 3 46 3 89 2 136 2 137 3 222 2 264 4 141 2 357 3 356 3 269 3 318 4 358 2 275 1 359 1 96 4 
322 1 98 2 278 1 2 2 229 1 161 1 51 1 249 1 7 4 347 1 350 1 53 2 127 2 233 1 328 2 85 1 216 1 86 1 307 1 191 1 46 8 239 2 332 2 153 1 290 1 112 7 48 1 64 3 137 2 222 2 118 2 66 1 356 8 269 2 143 1 318 2 295 1 68 1 226 1 
245 1 322 1 74 1 278 1 51 1 249 1 7 2 166 1 281 1 325 1 53 1 127 1 258 1 212 1 215 1 307 1 191 2 239 1 332 3 290 1 61 1 314 1 115 1 137 1 335 1 264 1 118 1 269 1 357 1 
245 1 215 1 74 1 332 2 239 1 51 2 153 1 7 2 137 1 183 1 281 1 118 1 269 1 127 1 53 1 258 1 212 1 96 1 
245 1 215 1 74 1 191 2 332 2 239 1 153 1 7 2 115 1 137 1 264 1 118 1 269 1 357 1 127 1 53 1 273 1 212 1 
245 2 74 2 51 2 7 2 281 1 53 1 127 1 258 1 212 2 215 2 191 2 239 1 332 4 153 1 115 1 335 1 137 1 264 1 118 1 269 1 357 1 96 1 
245 1 215 1 216 1 74 1 332 2 239 1 51 2 7 2 137 1 183 1 281 1 118 1 269 1 127 1 53 1 258 1 212 1 96 1 
245 1 215 1 216 1 74 1 191 2 332 2 239 1 7 2 115 1 137 1 264 1 118 1 269 1 357 1 127 1 53 1 273 1 212 1 
245 2 74 2 51 2 7 2 281 1 53 1 127 1 258 1 212 2 216 1 215 2 191 2 239 1 332 4 115 1 335 1 137 1 264 1 118 1 269 1 357 1 96 1 
245 2 74 2 51 2 7 2 281 1 53 1 127 1 258 1 212 2 215 2 191 2 332 4 239 1 115 1 335 1 137 1 264 1 118 1 269 1 357 1 96 1 
2 1 278 1 202 1 179 1 51 1 249 1 7 2 104 1 126 1 232 1 53 1 127 1 233 1 328 1 235 2 191 1 307 1 46 1 89 1 332 2 136 1 239 1 22 1 112 1 290 1 64 2 137 1 222 1 66 1 118 1 269 1 356 1 318 2 358 1 
2 1 278 1 179 1 51 1 249 1 7 2 343 1 126 1 232 1 53 1 127 1 233 1 328 1 235 2 191 1 307 1 46 1 332 2 136 1 239 1 22 1 112 1 290 1 64 2 137 1 222 1 66 1 118 1 29 1 269 1 356 1 318 2 358 1 177 1 
245 2 74 2 51 2 7 2 281 1 325 1 53 1 127 1 258 1 212 2 215 2 191 2 239 1 332 4 115 1 335 1 137 1 264 1 118 1 269 1 357 1 96 1 
245 2 74 2 2 1 278 1 202 1 179 1 51 2 249 1 7 2 104 1 81 1 281 1 126 1 53 1 127 1 258 1 212 2 85 1 235 2 215 2 191 2 307 1 46 1 89 1 332 4 239 1 136 1 22 1 112 1 290 1 115 1 335 1 64 2 137 1 222 1 264 1 118 1 357 1 269 1 356 1 318 2 358 1 96 1 
245 1 322 1 278 1 74 1 51 2 249 1 7 2 166 1 305 1 281 1 325 1 53 1 127 1 258 1 212 1 215 1 191 1 307 1 239 1 332 3 290 1 314 1 115 1 137 1 335 1 118 1 357 1 269 1 96 1 
245 5 51 15 204 1 78 1 7 6 302 3 281 4 351 1 168 4 40 1 84 1 53 3 127 3 258 4 329 3 57 1 191 17 110 1 239 3 332 32 114 2 194 1 115 4 196 1 335 4 262 1 241 1 264 2 269 3 357 4 270 1 271 1 175 1 197 1 272 3 95 1 96 3 
245 6 51 17 204 1 78 1 7 8 302 3 281 4 351 2 168 4 40 1 84 1 53 4 127 4 258 4 329 3 57 1 191 16 110 1 239 4 332 33 114 2 194 1 115 3 196 1 335 4 262 1 241 1 264 3 269 4 357 3 270 1 271 1 175 1 197 1 272 4 95 1 96 3 
245 8 228 1 101 1 51 19 204 1 78 1 7 4 302 2 281 5 351 1 168 3 40 1 84 1 53 2 127 2 258 4 329 3 57 1 189 1 44 1 191 17 331 1 110 1 239 2 332 36 114 1 194 1 115 4 196 1 335 4 262 1 241 1 264 4 357 5 269 2 175 1 197 1 272 3 275 1 359 1 95 1 96 4 
245 6 51 9 204 1 78 1 7 4 302 1 281 3 168 2 53 2 127 2 258 3 329 1 58 1 191 10 110 1 239 2 332 19 114 1 115 3 196 1 335 3 241 2 264 3 269 2 357 3 271 1 175 1 272 2 95 1 96 3 
245 2 51 13 204 1 78 1 7 6 302 2 281 3 351 2 168 2 40 1 84 1 53 3 127 3 258 3 329 2 57 1 191 11 110 2 239 3 332 24 114 2 194 1 115 2 196 1 335 3 262 1 241 1 264 1 357 2 269 3 197 1 272 3 95 1 96 1 
105 1 246 1 87 1 32 1 185 1 341 1 33 1 274 1 77 1 199 1 
317 1 113 1 
263 1 246 1 32 1 185 1 192 1 294 1 33 1 77 1 199 1 
73 1 205 1 
10 1 283 1 224 1 
132 1 246 1 17 1 1 1 32 1 341 1 33 1 76 1 203 2 77 1 219 1 105 1 255 1 242 1 185 1 274 1 339 1 199 1 
132 1 246 1 17 1 1 1 32 1 341 1 33 1 76 1 203 2 77 1 219 1 105 1 255 1 242 1 185 1 274 1 339 1 199 1 
132 1 246 1 17 1 1 1 32 1 341 1 33 1 76 1 203 2 77 1 219 1 105 1 255 1 242 1 185 1 274 1 339 1 199 1 
73 1 205 1 224 1 
73 1 205 1 224 1 
10 1 283 1 
10 1 283 1 224 1 
200 1 220 1 
200 1 72 1 246 1 322 2 1 1 278 2 32 1 33 1 279 1 203 1 249 2 77 1 345 1 232 1 38 1 185 1 54 1 132 1 307 2 151 1 290 2 113 1 219 1 220 1 317 1 242 1 199 1 
70 1 98 2 2 1 51 1 249 2 7 2 182 1 325 1 127 1 53 1 233 1 190 1 307 2 191 1 46 2 239 1 332 2 290 2 112 2 48 1 64 1 137 1 222 1 118 1 66 1 243 1 356 2 269 1 318 1 68 1 297 1 
236 1 2 1 46 2 237 1 161 1 34 1 111 1 112 2 206 1 173 1 9 1 222 1 37 1 36 2 356 2 326 1 284 1 276 1 85 1 
0 1 2 1 46 1 237 1 161 1 34 1 112 1 206 1 173 1 9 1 222 1 37 1 36 2 356 1 326 1 284 1 276 1 
236 1 156 1 2 1 46 1 20 1 112 1 64 1 222 1 356 1 318 1 295 1 328 1 226 1 276 1 
236 1 2 1 46 1 237 1 161 1 34 1 111 1 112 1 206 1 173 1 9 1 222 1 37 1 36 2 356 1 326 1 284 1 276 1 
80 1 
349 1 291 1 217 1 178 1 60 1 76 1 251 1 
321 1 178 1 160 1 122 1 76 2 251 1 346 1 82 1 83 1 327 1 352 1 132 1 259 1 308 1 291 1 242 1 176 1 
235 1 2 1 46 1 75 1 340 1 122 1 160 1 112 1 27 1 64 1 222 2 356 1 318 1 327 1 13 1 176 1 328 1 
321 1 178 7 160 2 122 2 76 3 145 4 231 4 251 1 302 1 346 1 82 2 281 2 168 1 40 1 147 1 327 2 258 2 329 1 57 1 132 1 308 4 194 1 115 2 62 1 335 2 262 1 291 4 242 1 357 2 197 1 176 2 
322 1 278 1 178 2 160 1 122 1 249 1 35 1 208 1 281 2 126 1 184 1 327 1 234 1 132 1 307 1 44 1 135 1 290 1 314 1 62 2 63 1 174 1 291 2 242 1 357 1 275 1 176 1 359 1 
217 1 178 1 122 1 160 1 60 1 76 1 251 1 291 1 327 1 176 1 
308 10 178 5 76 5 145 5 231 5 35 1 115 2 62 2 335 2 281 2 82 5 291 5 141 1 357 2 258 2 
346 1 132 1 321 1 242 1 76 1 251 1 
50 1 120 1 321 2 2 2 178 2 160 2 122 2 125 2 346 4 12 2 327 2 211 1 169 1 328 2 107 1 235 1 132 3 306 2 287 1 46 4 312 1 154 1 112 4 49 1 64 2 138 1 222 3 291 2 242 3 356 4 318 2 295 1 176 1 226 1 
322 2 278 3 2 1 202 1 179 1 249 3 7 2 104 1 208 1 126 1 232 1 53 1 127 1 233 1 328 1 235 2 191 1 307 3 46 1 89 1 354 1 332 1 239 1 136 1 22 1 112 1 290 3 314 2 137 1 64 2 222 1 118 1 269 1 356 1 318 2 358 1 
228 1 308 4 178 1 122 1 160 1 76 4 145 2 231 2 251 2 125 1 82 2 291 2 12 1 327 1 176 1 
45 1 32 1 77 1 
200 1 105 1 32 1 323 1 77 1 
45 1 32 1 77 1 
45 1 32 1 77 1 
32 1 77 1 296 1 
32 1 77 1 296 1 
32 1 77 1 296 1 
32 1 77 1 
33 1 199 1 
245 2 228 1 101 1 51 4 7 2 302 1 281 1 168 1 53 1 127 1 329 1 57 1 191 4 44 1 332 8 239 1 331 1 196 1 264 2 357 1 269 1 275 1 359 1 
245 3 228 1 101 1 51 6 7 4 302 1 281 2 168 2 53 2 127 2 258 1 329 1 57 1 44 1 191 5 134 1 331 1 332 11 239 2 196 1 335 1 264 2 357 1 269 2 175 1 275 1 359 1 96 1 
245 2 51 6 7 6 302 1 281 2 351 1 168 1 40 1 53 3 127 3 258 2 329 1 57 1 191 7 134 1 332 13 239 3 194 1 115 2 196 1 335 2 262 1 264 1 269 3 357 2 197 1 96 1 
245 2 51 7 7 6 302 1 281 2 351 1 168 1 40 1 53 3 127 3 258 2 329 1 57 1 191 4 134 1 332 11 239 3 194 1 115 1 196 1 335 2 262 1 264 1 269 3 357 1 197 1 96 1 
245 2 228 1 101 1 51 4 7 2 302 1 281 1 168 1 53 1 127 1 329 1 57 1 191 4 44 1 332 8 239 1 331 1 196 1 264 2 357 1 269 1 275 1 359 1 
245 2 51 6 7 2 302 1 281 2 168 1 40 1 53 1 127 1 258 2 329 1 57 1 191 6 332 12 239 1 194 1 115 2 196 1 335 2 262 1 264 1 269 1 357 2 197 1 96 1 
245 2 51 7 7 8 302 1 281 2 351 2 168 1 40 1 53 4 127 4 258 2 329 1 57 1 191 5 134 1 332 12 239 4 194 1 115 1 196 1 335 2 262 1 264 1 269 4 357 1 197 1 96 1 
245 4 51 7 7 8 302 1 281 2 351 2 168 1 40 1 53 4 127 4 258 2 329 1 57 1 191 5 332 12 239 4 194 1 115 1 196 1 335 2 262 1 264 2 269 4 357 1 271 1 197 1 96 2 
245 6 191 4 44 3 101 2 332 7 331 1 51 3 264 3 281 1 357 1 275 3 359 1 96 3 
245 2 51 7 7 8 302 1 281 2 351 2 168 1 40 1 53 4 127 4 258 2 329 1 57 1 191 5 332 12 239 4 194 1 115 1 196 1 335 2 262 1 264 1 269 4 357 1 271 1 197 1 96 1 
245 3 191 4 44 1 228 1 101 1 332 8 239 2 331 1 51 4 7 4 281 1 264 2 351 1 357 1 269 2 127 2 53 2 275 1 359 1 96 1 
245 2 191 3 44 1 228 1 101 1 331 1 332 6 51 3 349 1 264 2 281 1 357 1 275 1 359 1 
245 2 191 2 134 1 239 1 332 4 51 2 7 2 115 1 335 1 264 1 281 1 357 1 269 1 127 1 53 1 258 1 96 1 
302 1 191 1 168 1 332 2 51 1 329 1 
245 8 228 1 101 1 51 13 7 2 348 1 281 5 351 1 168 2 127 1 53 1 258 2 329 2 189 1 44 2 191 12 332 25 239 1 331 1 115 2 335 2 264 4 174 1 357 5 269 1 175 1 275 2 359 2 96 4 
191 1 168 1 332 1 
332 1 51 1 329 1 
245 3 191 3 134 1 239 1 332 6 51 3 7 2 115 1 335 1 281 1 264 2 141 1 269 1 357 1 53 1 127 1 258 1 96 1 
245 2 51 6 7 2 302 1 281 2 168 1 40 1 53 1 127 1 258 2 329 1 57 1 191 6 332 12 239 1 194 1 115 2 196 1 335 2 262 1 264 1 269 1 357 2 197 1 96 1 
245 2 191 3 44 1 332 6 51 3 281 1 264 1 357 1 275 1 359 1 96 1 
245 2 44 1 191 2 101 1 332 3 239 1 331 1 51 1 7 2 155 1 264 1 351 1 269 1 127 1 53 1 275 1 96 1 
245 5 44 2 191 5 239 1 332 10 51 5 7 2 196 1 264 3 281 2 174 1 269 1 357 2 53 1 127 1 275 2 359 1 96 2 
245 1 239 1 332 2 51 2 7 2 196 1 281 1 269 1 127 1 53 1 258 1 96 1 
245 2 191 2 239 1 332 4 51 2 7 2 115 1 196 1 335 1 264 1 281 1 357 1 269 1 127 1 53 1 258 1 96 1 
245 2 191 2 44 1 332 3 239 3 51 1 7 6 155 1 196 1 264 1 351 1 269 3 271 1 127 3 53 3 275 1 96 1 
245 12 228 1 101 1 300 1 51 16 7 10 302 1 344 1 281 5 351 2 168 4 53 5 127 5 258 3 329 3 44 3 191 18 134 1 331 1 239 5 332 34 115 3 155 1 196 1 335 3 264 7 269 5 357 5 271 1 175 1 275 3 198 1 359 2 96 5 
252 1 307 1 232 1 19 1 290 1 249 1 261 1 
43 1 307 1 19 1 290 1 249 1 261 1 252 1 139 1 232 1 11 1 30 1 187 1 
64 1 222 1 349 1 2 1 46 1 356 1 318 1 295 1 112 1 226 1 328 1 
235 2 322 1 278 2 307 2 2 1 46 1 179 1 136 1 202 1 22 1 290 2 112 1 249 2 64 2 222 1 126 1 232 1 350 1 356 1 318 2 358 1 328 1 
286 1 235 1 322 1 306 1 278 1 307 2 2 1 46 1 136 1 202 1 290 1 112 1 249 2 64 1 222 1 126 1 232 1 350 1 356 1 318 1 
286 1 235 1 322 1 306 1 278 1 307 2 2 1 46 1 136 1 290 1 112 1 249 2 64 1 222 1 126 1 232 1 350 1 29 1 356 1 318 1 
322 1 278 1 2 1 75 1 76 1 249 1 251 1 208 1 8 1 346 1 126 1 184 1 324 1 234 1 285 1 15 1 132 2 235 1 306 1 307 1 46 1 135 1 290 1 112 1 314 1 64 4 222 1 242 2 356 1 318 1 358 1 119 1 
322 1 278 1 2 1 75 1 76 1 249 1 251 1 208 1 8 1 346 1 126 1 184 1 234 1 15 1 132 2 235 1 306 1 307 1 46 1 135 1 290 1 112 1 314 1 64 4 222 1 242 2 356 1 318 1 358 1 119 1 277 1 
222 1 2 1 46 1 229 1 356 1 112 1 
235 1 98 1 86 1 2 2 46 7 229 1 288 1 340 1 161 1 112 6 64 3 49 1 347 1 222 3 356 7 143 1 318 2 68 1 169 1 328 2 85 1 
322 1 278 2 2 1 228 1 101 1 179 1 51 3 7 4 104 1 281 1 232 2 325 1 53 2 235 2 190 1 191 3 239 2 331 1 332 6 22 1 112 1 290 2 64 2 118 2 245 2 74 1 202 1 163 1 249 2 81 1 126 1 350 1 127 2 212 1 85 1 215 1 307 2 44 1 46 1 89 1 136 1 137 2 222 1 264 2 356 1 269 2 357 1 318 2 358 1 275 1 359 1 
321 1 99 1 178 1 75 1 160 2 122 2 76 1 251 1 210 1 346 2 8 1 38 1 327 2 56 1 328 1 15 1 132 3 217 1 287 1 46 1 60 1 112 1 64 2 291 1 242 3 356 1 176 2 277 1 
235 1 2 1 46 1 229 1 340 1 112 1 8 1 64 1 222 2 356 1 318 1 13 1 55 1 
2 1 46 4 248 1 112 4 64 1 222 1 266 1 356 4 318 1 295 1 328 1 226 1 85 1 
107 1 235 1 306 1 2 1 46 2 112 2 154 1 64 1 49 1 222 2 256 1 356 2 318 1 169 1 
9 1 222 1 37 1 36 1 2 1 46 1 356 1 112 1 284 1 328 1 
2 1 46 2 161 1 112 2 64 1 182 1 222 1 356 2 318 1 68 1 85 1 
306 1 2 2 86 1 46 5 248 1 112 4 64 3 222 2 356 5 143 1 318 2 295 1 68 1 226 1 328 1 85 1 
306 1 2 2 86 1 46 5 248 1 112 4 64 3 254 1 222 2 356 5 318 2 295 1 68 1 226 1 328 1 85 1 
235 2 322 1 278 2 307 2 2 1 46 1 179 1 136 1 22 1 290 2 112 1 249 2 64 2 222 1 126 1 232 1 350 1 29 1 356 1 318 2 358 1 328 1 
235 1 306 1 2 1 46 1 288 1 340 1 112 1 64 1 49 1 222 2 356 1 318 1 169 1 
240 1 316 1 232 1 333 1 280 1 
15 1 132 2 149 1 353 1 179 1 22 1 333 2 76 1 280 2 251 1 240 1 116 1 316 2 126 1 232 1 38 1 242 2 67 1 14 1 
70 1 307 1 290 1 280 1 249 1 240 1 316 1 243 1 297 1 
240 1 149 1 14 1 
201 1 349 1 5 1 193 1 
201 1 16 1 88 1 309 1 355 1 5 1 193 1 
16 1 167 1 186 1 
334 1 201 1 221 1 16 3 108 1 59 2 109 1 88 3 309 1 355 1 5 1 193 1 
165 1 201 1 253 1 16 2 88 2 309 1 355 1 5 1 193 1 
16 1 108 1 309 1 88 1 355 1 5 1 123 1 23 1 206 1 36 1 37 1 
201 1 16 1 108 1 88 1 309 1 355 1 5 1 
201 2 16 1 108 1 88 1 309 1 355 1 193 1 
201 1 16 2 227 1 108 1 309 2 88 2 355 2 5 1 4 1 257 1 
165 2 201 1 131 1 16 3 108 1 267 1 88 3 309 1 355 1 5 2 23 1 193 1 213 1 
201 1 16 2 108 1 309 1 88 2 355 1 5 1 206 1 193 1 173 1 165 1 36 2 37 1 284 1 170 1 
165 2 201 1 131 1 253 1 16 4 108 1 88 4 309 2 355 2 5 2 23 1 193 1 69 1 
201 1 16 1 108 1 88 1 309 1 355 1 5 1 193 1 
201 2 16 4 131 1 59 1 88 4 309 1 355 1 5 3 23 1 193 2 334 1 165 2 221 1 129 1 
201 1 16 2 108 1 247 1 309 1 88 2 355 1 5 1 21 1 193 1 165 1 140 1 
201 1 16 3 108 1 121 1 59 2 309 1 88 3 355 1 5 1 193 1 334 2 221 1 
195 2 97 1 142 1 5 2 
16 1 108 1 88 1 309 1 355 1 172 1 
165 1 201 1 16 2 108 1 267 1 88 2 309 1 355 1 5 1 193 1 
164 1 
201 1 16 1 108 1 88 1 309 1 355 1 5 1 193 1 
165 1 201 1 16 3 108 1 59 1 267 1 88 3 309 1 355 1 5 1 193 1 
131 1 5 1 23 1 129 1 
201 1 5 1 

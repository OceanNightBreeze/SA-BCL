#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (12,153) 310 (43,166) (43,166) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (12,153) 310 (43,166) (43,166) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (12,153) 310 (43,166) (43,166) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (12,153) 310 (43,166) (43,166) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 272 (54,62,195) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 327 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 224 257 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 224 257 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 224 257 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 224 257 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 224 257 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (101,151) 198 75 (50,269) 131 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 5 (101,151) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (101,151) 198 75 (50,269) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7744 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 1 223 1 225 1 332 1 310 1 289 1 153 1 366 1 137 1 126 1 166 1 
43 1 223 1 225 1 332 1 310 1 289 1 153 1 366 1 137 1 126 1 166 1 
43 1 223 1 225 1 332 1 310 1 289 1 153 1 366 1 137 1 126 1 166 1 
43 1 223 1 225 1 332 1 310 1 289 1 153 1 366 1 137 1 126 1 166 1 
17 1 163 1 44 3 223 4 105 1 332 4 226 1 243 3 302 2 39 2 305 1 248 1 10 1 147 1 64 1 366 1 126 1 137 1 
163 1 223 2 332 2 225 1 289 1 243 1 121 1 134 1 305 1 10 1 262 1 158 1 147 1 366 1 126 1 137 1 
163 1 44 1 223 3 332 3 225 1 243 2 302 1 305 1 12 1 64 1 366 1 126 2 137 2 
163 1 243 5 39 2 10 1 248 1 12 1 147 1 126 2 17 1 44 7 223 9 105 1 225 1 332 9 226 1 336 1 302 4 305 1 281 1 341 1 64 3 30 1 366 1 137 2 
163 1 243 5 39 2 10 1 248 1 12 1 147 1 126 2 17 1 44 7 223 9 105 1 225 1 332 9 226 1 336 1 302 4 305 1 281 1 341 1 64 3 30 1 366 1 137 2 
239 1 233 1 313 1 
194 1 2 2 233 1 
317 1 115 2 207 2 174 2 234 1 363 2 142 2 199 2 
71 1 114 1 0 1 72 1 115 3 164 1 73 1 207 2 165 1 142 2 192 1 101 1 40 1 123 1 124 1 125 1 102 2 312 1 174 2 212 2 13 2 253 1 18 1 19 1 227 1 22 1 84 1 339 1 199 3 110 2 27 1 317 1 234 1 235 1 363 2 263 2 66 1 
264 1 115 1 207 1 174 1 234 1 7 1 363 1 244 1 142 1 199 1 
284 1 115 1 1 1 221 1 300 1 333 1 98 1 7 1 142 1 154 1 199 1 231 1 233 1 313 1 
284 2 115 1 1 1 221 1 207 1 333 2 7 1 142 1 154 1 199 1 231 1 233 1 174 1 313 1 363 1 
284 1 333 1 11 1 322 1 9 1 
264 1 284 2 115 1 207 1 333 2 7 1 244 1 142 1 322 1 199 1 9 1 85 1 174 1 250 1 233 1 234 1 363 1 313 1 325 1 
284 1 333 1 9 1 
284 1 264 1 115 1 333 1 207 1 7 1 244 1 142 1 322 1 199 1 174 1 234 1 363 1 325 1 
233 1 
264 1 284 2 115 1 207 1 333 2 7 1 244 1 142 1 322 1 199 1 9 1 85 1 91 1 174 1 233 1 234 1 363 1 313 1 325 1 
236 2 264 1 284 5 115 1 47 1 207 1 7 1 351 1 140 1 244 1 142 1 76 4 322 2 9 2 118 2 275 1 52 1 324 2 146 1 174 1 313 2 325 1 278 1 16 2 296 2 178 1 128 5 333 5 229 1 338 1 199 1 85 1 87 1 233 2 234 1 363 1 282 1 160 2 
115 2 220 1 73 1 207 1 165 1 84 1 142 1 8 1 192 1 199 2 110 1 169 1 101 1 123 1 125 1 312 1 174 1 212 1 263 1 66 1 
317 1 239 1 
115 2 207 1 142 2 352 1 199 2 317 2 260 1 174 1 363 1 
53 1 8 1 360 1 
115 1 348 1 73 1 165 1 84 1 192 1 199 1 110 1 317 1 101 1 123 1 125 1 312 1 212 1 263 1 66 1 
115 5 220 2 300 1 268 1 207 4 142 5 352 1 199 5 169 1 317 1 174 4 363 1 41 1 307 1 
115 2 207 2 174 2 7 1 244 1 142 2 274 1 199 2 
317 1 115 3 220 1 207 3 174 3 363 1 142 3 199 3 
115 1 207 1 174 1 7 1 244 1 142 1 199 1 
115 1 260 1 207 1 174 1 7 1 363 1 142 1 352 1 199 1 
71 1 284 1 114 1 0 1 115 4 1 1 164 1 73 1 207 3 165 1 7 1 142 3 352 1 37 1 192 1 169 1 101 1 40 1 123 1 124 1 125 1 102 2 312 1 174 3 212 1 13 1 220 1 221 1 18 1 333 1 22 1 84 1 154 1 339 1 199 4 110 1 317 1 231 1 234 1 235 1 363 2 31 1 263 1 66 1 
317 1 115 2 220 1 300 1 268 1 207 1 174 1 142 2 199 2 
284 1 32 1 1 1 115 3 220 2 221 1 333 1 207 3 7 1 142 3 352 1 154 1 37 1 199 3 169 1 231 1 233 1 174 3 363 1 
115 2 220 1 207 2 142 2 352 1 8 1 360 1 199 2 174 2 363 1 
115 1 73 1 165 1 84 1 192 1 199 1 110 1 317 1 101 1 123 1 125 1 312 1 212 1 263 1 66 1 
115 1 73 1 288 1 165 1 7 1 84 1 192 1 199 1 110 1 317 1 123 1 125 1 312 1 212 1 63 1 263 1 95 1 
71 1 114 1 205 1 266 1 4 1 321 1 8 2 49 1 118 1 40 1 53 2 102 2 13 4 296 1 18 2 227 2 22 1 339 1 360 2 111 1 342 1 235 1 203 1 308 1 
115 1 221 1 207 1 174 1 7 1 142 1 199 1 274 1 
195 1 301 1 
195 1 301 1 
62 1 272 1 
62 1 272 1 
62 1 195 1 301 1 272 1 
62 1 195 1 301 1 272 1 
195 1 54 1 301 1 
195 1 315 1 301 1 
195 1 315 1 301 1 
195 1 315 1 301 1 
328 1 195 1 301 1 
328 1 195 1 301 1 
328 1 195 1 301 1 
284 1 217 1 197 1 115 2 190 1 97 1 333 1 107 1 207 2 334 1 242 1 142 2 301 1 25 1 199 2 246 1 317 1 195 1 175 1 174 2 196 1 54 1 346 1 347 1 
217 2 284 2 190 1 34 1 350 1 107 2 333 2 132 1 301 2 303 1 246 3 182 1 29 1 195 2 233 1 202 2 251 1 346 2 347 2 
105 1 10 1 147 1 
10 1 147 1 158 1 
361 1 105 2 130 1 147 3 158 1 273 1 
105 1 261 1 130 1 147 2 158 1 273 1 
105 1 130 1 147 2 158 1 273 2 
236 1 284 5 2 3 4 1 97 1 210 2 76 3 322 4 99 2 9 1 118 1 170 1 194 1 324 1 175 1 313 1 16 1 296 1 128 2 59 1 331 1 333 5 229 1 24 1 25 1 85 1 185 2 342 1 343 1 233 2 67 1 283 1 
284 2 96 1 264 1 115 1 270 1 207 1 7 1 244 1 142 1 322 2 9 1 11 1 174 1 313 1 325 1 333 2 61 1 199 1 233 1 234 1 363 1 
236 1 264 1 284 3 115 1 2 4 4 1 97 1 207 1 7 1 140 1 244 1 142 1 76 3 210 1 322 2 99 2 118 1 170 1 194 2 324 1 174 1 313 1 325 1 16 1 296 1 59 1 128 2 331 1 333 3 24 1 199 1 342 1 185 2 233 3 234 1 363 1 283 1 
236 1 284 2 2 4 4 1 97 1 140 1 76 3 210 1 322 1 99 2 118 1 170 1 194 2 324 1 327 1 16 1 296 1 59 1 128 2 331 1 333 2 24 1 185 2 342 1 233 2 283 1 
82 1 239 1 125 1 
125 1 26 1 
271 1 
123 1 125 1 312 1 
125 1 358 1 
125 1 312 1 
329 1 82 2 157 1 123 1 125 3 312 1 
296 1 266 2 265 1 267 1 18 3 285 2 240 1 227 4 359 1 338 1 118 1 87 1 275 1 148 1 203 3 13 7 326 1 
296 1 266 2 265 1 267 1 18 3 285 2 240 1 227 4 359 1 338 1 118 1 87 1 275 1 148 1 203 3 13 7 326 1 
296 1 266 2 265 1 267 1 18 3 285 2 240 1 227 4 359 1 338 1 118 1 87 1 275 1 148 1 203 3 13 7 326 1 215 1 
71 1 266 1 265 1 267 2 285 1 211 1 102 2 13 6 326 1 216 1 299 1 18 3 227 3 22 1 359 1 338 1 339 1 200 1 201 1 87 1 159 1 235 1 203 2 138 1 
71 2 266 5 267 1 285 2 47 1 240 1 118 3 275 2 102 4 148 1 13 16 326 1 296 3 18 7 227 9 22 2 230 1 133 1 359 4 338 2 339 2 87 2 235 2 203 9 138 1 
33 1 163 1 165 1 243 1 141 1 38 1 120 1 193 1 172 1 10 1 311 1 212 1 147 2 126 1 44 1 105 1 223 2 332 2 225 1 84 1 256 1 110 1 361 1 259 1 305 1 158 1 65 1 263 1 366 1 137 1 
33 1 163 1 165 1 243 1 141 1 38 1 193 1 172 1 10 1 311 1 212 1 147 2 126 1 254 1 44 2 105 1 222 1 223 3 332 3 225 1 84 1 256 1 110 1 361 1 259 1 305 1 158 1 136 1 263 1 137 1 
33 1 163 1 165 1 243 1 38 1 193 1 10 1 311 1 212 1 147 2 44 2 222 1 223 2 105 1 225 1 332 2 84 1 256 1 110 1 361 1 259 1 305 1 158 1 136 1 263 1 
238 1 165 1 48 1 36 1 192 1 38 2 125 1 312 1 212 1 276 1 126 1 254 1 297 1 223 1 332 1 225 2 20 1 84 1 256 2 110 1 259 2 263 1 137 1 
33 1 165 1 141 1 38 1 193 1 172 1 10 1 311 1 212 1 147 2 126 1 105 1 222 1 223 1 332 1 225 1 84 1 256 1 110 1 361 1 259 1 158 1 65 1 263 1 366 1 137 1 
337 1 
236 1 238 1 284 4 1 1 2 2 98 1 7 1 142 1 192 2 9 4 247 1 194 2 324 1 15 1 16 1 58 1 300 1 108 1 333 4 154 1 110 2 199 1 28 1 263 2 69 2 161 1 206 2 115 1 309 1 35 2 165 1 117 1 36 1 76 2 171 1 355 1 125 1 312 1 356 3 212 2 176 1 81 1 128 2 221 1 228 1 84 1 229 1 85 2 184 1 231 1 233 1 319 1 188 1 283 1 
58 1 284 2 1 1 115 1 221 1 300 1 309 1 333 2 98 1 228 1 7 1 142 1 154 1 9 1 199 1 247 1 184 1 231 1 356 2 81 1 
284 3 115 1 1 1 309 1 98 1 7 1 142 1 9 1 247 1 356 3 313 1 81 1 58 1 15 1 221 1 300 1 333 3 228 1 154 1 199 1 85 1 231 1 91 1 233 1 
58 1 284 2 1 1 115 1 221 1 300 1 309 1 333 2 98 1 228 1 7 1 142 1 154 1 9 1 199 1 247 1 184 1 231 1 356 2 319 1 81 1 
264 1 284 3 115 2 1 1 309 1 207 1 98 1 7 2 244 1 142 2 9 2 247 1 174 1 356 3 313 1 325 1 81 1 15 1 58 1 221 1 300 1 333 3 228 1 154 1 199 2 85 1 231 1 184 1 91 1 233 1 234 1 363 1 319 1 94 1 
236 1 284 3 1 1 2 2 98 1 7 1 142 1 9 2 247 1 194 2 324 1 16 1 58 1 15 1 300 1 333 3 108 1 154 1 199 1 161 1 69 2 115 1 206 2 309 1 35 2 76 1 117 1 355 1 356 3 313 1 81 1 221 1 128 1 228 1 229 1 85 1 231 1 184 1 233 2 319 1 
236 1 284 4 1 1 98 1 7 2 244 1 142 2 9 4 247 1 194 2 324 1 325 1 16 1 58 1 15 2 300 1 333 4 154 1 199 2 161 1 69 2 264 1 115 2 206 2 162 1 309 1 207 1 35 2 76 1 117 1 355 2 174 1 356 4 313 1 81 1 219 1 221 1 128 1 228 1 229 1 85 2 231 1 184 2 186 1 233 1 234 1 363 1 319 2 
236 1 284 4 1 1 98 1 7 2 244 1 142 2 9 4 247 1 194 2 324 1 325 1 16 1 58 1 15 2 300 1 333 4 154 1 199 2 161 1 69 2 264 1 115 2 206 2 162 1 309 1 207 1 35 2 76 1 117 1 355 2 174 1 356 4 313 1 81 1 219 1 221 1 128 1 228 1 229 1 85 2 231 1 184 2 186 1 233 1 234 1 363 1 319 2 
236 1 284 4 1 1 2 2 286 1 98 1 7 2 244 1 142 2 9 4 100 1 247 1 324 1 249 2 325 1 16 1 58 1 15 2 300 1 333 4 154 1 199 2 69 2 264 1 115 2 206 2 309 1 207 1 76 1 117 1 174 1 356 4 313 1 81 1 219 1 221 1 128 1 228 1 229 1 85 2 231 1 184 2 233 1 234 1 93 1 363 1 364 2 319 2 
236 1 284 4 1 1 98 1 7 2 244 1 142 2 9 5 247 1 194 2 324 1 325 1 14 1 58 1 16 1 15 2 300 1 333 4 154 1 199 2 161 1 69 2 264 1 115 2 206 2 162 1 309 1 207 1 35 2 76 1 117 1 355 2 174 1 356 4 313 1 81 1 219 1 221 1 128 1 228 1 229 1 85 2 184 3 231 1 186 1 233 1 234 1 363 1 319 3 
236 1 284 4 1 1 98 1 7 2 244 1 142 2 9 5 247 1 194 2 324 1 325 1 14 1 15 3 58 1 16 1 300 1 333 4 154 1 199 2 161 1 69 2 264 1 115 2 206 2 162 1 309 1 207 1 35 2 76 1 117 1 355 2 174 1 356 5 313 1 81 1 219 1 221 1 128 1 228 1 229 1 85 2 184 3 231 1 186 1 233 1 234 1 363 1 319 3 
236 1 284 4 1 1 2 2 286 1 98 1 7 2 244 1 142 2 9 4 247 1 324 1 249 2 325 1 16 1 58 1 15 2 300 1 333 4 108 1 154 1 199 2 69 2 264 1 115 2 206 2 309 1 207 1 76 1 117 1 174 1 356 4 313 1 81 1 221 1 128 1 228 1 229 1 85 2 231 1 184 2 233 1 234 1 363 1 364 2 319 2 
71 1 114 1 205 1 266 2 239 1 285 1 240 1 8 1 118 1 275 1 40 1 53 1 102 2 148 1 13 6 296 1 18 3 227 3 22 1 338 1 360 1 339 1 87 1 317 2 235 1 203 2 
71 2 266 1 114 2 72 1 4 1 7 1 211 2 8 8 292 1 118 1 40 1 53 8 124 1 102 4 213 1 13 12 296 2 330 1 18 5 152 1 279 1 227 7 22 2 60 1 24 2 339 2 360 2 317 1 201 2 342 2 63 1 235 2 203 1 
71 1 114 1 115 2 72 1 73 1 348 1 207 1 165 1 142 1 192 1 354 1 169 1 101 1 123 1 40 1 125 1 124 1 312 1 174 1 102 2 212 1 13 2 330 1 220 1 18 1 227 1 22 1 84 1 110 1 360 1 199 2 339 1 183 1 317 1 235 1 263 1 66 1 68 1 
285 1 240 1 4 2 142 1 8 7 192 1 101 2 53 7 102 6 148 1 13 20 56 2 296 3 330 1 18 10 255 2 22 3 335 1 109 2 24 2 338 1 110 3 339 3 199 3 342 2 263 3 203 8 66 2 71 3 266 4 114 3 72 1 115 3 164 2 269 2 73 2 207 1 165 2 118 3 169 1 275 1 40 3 123 2 124 1 125 2 174 1 312 2 212 3 80 1 220 1 222 1 129 1 227 10 84 2 359 4 360 7 317 2 87 1 235 3 
70 1 71 2 238 1 205 1 114 2 115 1 72 1 207 1 165 2 290 1 142 1 36 1 192 2 120 1 40 2 125 3 124 1 174 1 102 4 312 2 212 8 295 1 13 2 177 1 104 1 314 1 220 1 222 1 18 1 19 2 227 1 22 2 84 2 199 1 110 8 339 2 318 1 235 2 263 7 
71 1 266 1 114 1 115 1 4 1 207 1 142 1 352 1 8 1 118 1 53 1 40 1 102 2 174 1 13 3 296 1 330 1 18 2 227 1 22 1 24 1 360 1 339 1 199 1 232 1 342 1 363 1 235 1 203 1 
71 1 296 1 205 1 114 1 227 2 22 1 359 1 8 1 360 1 339 1 111 1 53 1 40 1 342 1 102 2 235 1 203 1 13 2 
71 1 266 1 205 1 114 1 18 2 4 1 22 1 321 1 8 1 360 1 339 1 118 1 53 1 40 1 102 2 235 1 203 1 13 2 
71 1 114 1 205 1 266 1 4 1 8 2 118 1 40 1 53 2 102 2 13 4 296 1 18 2 227 2 22 1 24 1 359 1 339 1 360 2 342 1 235 1 203 2 
71 1 296 1 114 1 227 2 22 1 359 1 8 1 360 1 339 1 111 1 53 1 40 1 342 1 102 2 235 1 295 1 203 1 13 2 
71 1 266 1 114 1 18 2 4 1 22 1 321 1 8 1 360 1 339 1 118 1 53 1 40 1 102 2 235 1 295 1 203 1 13 2 
71 1 114 1 266 1 4 1 8 2 118 1 40 1 53 2 102 2 295 1 13 4 296 1 18 2 227 2 22 1 24 1 359 1 339 1 360 2 342 1 235 1 203 2 
71 1 296 1 266 1 114 1 18 2 4 1 227 2 22 1 359 1 8 2 24 1 360 2 339 1 118 1 53 2 40 1 342 1 102 2 235 1 203 2 13 4 
71 1 114 1 72 1 115 1 164 1 73 1 165 1 192 1 101 1 123 1 40 1 125 1 124 1 312 1 102 2 212 1 13 2 18 1 227 1 22 1 84 1 110 1 199 1 339 1 317 1 235 1 263 1 66 1 
71 1 114 1 115 1 73 1 288 1 165 1 7 1 192 1 145 1 123 1 40 1 125 1 124 1 312 1 102 2 212 1 13 1 18 1 22 1 84 1 110 1 199 1 339 1 317 1 63 1 235 1 263 1 95 1 
71 1 114 1 266 1 4 1 8 2 118 1 40 1 53 2 102 2 13 4 296 1 330 1 18 2 227 2 22 1 24 1 359 1 339 1 360 2 342 1 235 1 203 2 
71 1 266 1 114 1 115 1 164 1 4 1 73 1 165 1 8 2 118 1 120 1 101 1 53 2 123 1 40 1 125 1 312 1 102 2 212 1 13 4 296 1 18 2 227 2 255 1 22 1 84 1 359 1 24 1 360 2 110 1 199 1 339 1 342 1 235 1 263 1 203 2 66 1 
71 1 114 1 115 1 4 1 207 1 142 1 352 1 8 1 118 1 40 1 53 1 102 2 174 1 13 3 296 1 330 1 18 1 227 2 22 1 359 1 24 1 304 1 339 1 199 1 360 1 342 1 363 1 235 1 203 1 
71 1 127 1 224 1 102 2 22 1 235 1 230 1 257 1 339 1 
71 1 127 1 224 1 102 2 22 1 235 1 230 1 257 1 339 1 
71 1 127 1 224 1 102 2 22 1 235 1 230 1 257 1 339 1 
71 1 127 1 224 1 102 2 22 1 235 1 230 1 257 1 339 1 
71 1 127 1 224 1 102 2 22 1 235 1 230 1 257 1 339 1 
217 1 323 1 34 1 29 1 195 1 107 1 251 1 346 1 301 1 347 1 
197 1 54 1 
217 1 51 1 195 1 107 1 112 1 306 1 346 1 301 1 347 1 
298 1 315 1 
328 1 214 1 167 1 
284 1 217 1 190 1 34 1 350 1 333 1 107 1 301 1 303 1 246 2 182 1 29 1 195 1 233 1 202 1 251 1 346 1 347 1 
284 1 217 1 190 1 34 1 350 1 333 1 107 1 301 1 303 1 246 2 182 1 29 1 195 1 233 1 202 1 251 1 346 1 347 1 
284 1 217 1 190 1 34 1 350 1 333 1 107 1 301 1 303 1 246 2 182 1 29 1 195 1 233 1 202 1 251 1 346 1 347 1 
298 1 315 1 167 1 
298 1 315 1 167 1 
328 1 214 1 
328 1 214 1 167 1 
242 1 196 1 
284 1 115 2 97 1 207 2 242 1 142 2 322 1 246 1 195 1 175 1 174 2 196 1 54 1 217 1 197 1 333 1 107 1 334 1 301 1 303 1 25 1 199 2 317 1 202 1 346 1 347 1 187 1 
70 1 71 1 114 1 115 2 72 1 46 1 165 1 142 2 245 1 77 1 40 1 125 1 124 1 312 1 102 2 212 2 13 2 314 1 330 1 18 1 19 2 227 1 22 1 84 1 110 2 199 2 339 1 89 1 235 1 263 2 204 1 
105 1 222 1 191 1 165 1 84 1 110 2 361 1 120 1 259 1 193 1 86 1 172 1 10 1 311 1 147 2 158 1 212 2 277 1 263 2 
105 1 222 1 191 1 165 1 84 1 110 1 361 1 259 1 193 1 172 1 10 1 311 1 344 1 147 2 158 1 212 1 263 1 
238 1 297 1 106 1 165 1 84 1 36 1 192 1 110 1 259 1 86 1 125 1 312 1 212 1 263 1 
105 1 222 1 191 1 165 1 84 1 110 1 361 1 259 1 193 1 86 1 172 1 10 1 311 1 147 2 158 1 212 1 277 1 263 1 
149 1 
128 1 239 1 52 1 233 1 313 1 76 1 278 1 
236 1 284 1 2 1 35 1 76 1 9 1 194 1 355 1 324 1 313 1 16 1 128 1 333 1 229 1 85 1 233 2 161 1 
236 1 3 1 165 2 75 1 76 1 192 1 50 1 123 1 324 1 125 4 312 1 212 1 16 1 82 1 151 1 131 1 84 1 229 1 198 1 26 2 110 1 157 1 263 1 283 1 
236 2 284 1 2 6 4 2 7 1 244 1 142 1 99 5 9 1 194 3 324 2 146 1 325 1 103 1 16 2 296 2 333 1 21 1 24 2 199 1 155 1 200 1 201 1 342 2 160 2 264 1 115 1 207 1 76 8 211 1 118 2 122 1 171 1 174 1 313 2 128 5 179 1 229 2 85 1 88 1 185 5 233 5 135 1 234 1 363 1 283 1 
236 1 284 1 264 1 115 1 47 1 207 1 7 1 244 1 142 1 76 2 118 1 275 1 324 1 146 1 174 1 325 1 16 1 296 2 128 2 333 1 229 1 338 1 199 1 87 1 186 1 234 1 363 1 160 2 
236 1 16 1 128 1 52 1 324 1 233 1 313 1 229 1 76 1 278 1 
296 2 128 5 2 10 4 2 109 1 76 5 24 2 99 5 118 2 194 5 342 2 185 5 146 1 233 5 160 2 
284 1 264 1 115 1 207 1 333 1 7 1 244 1 142 1 199 1 9 1 85 1 174 1 233 1 234 1 363 1 313 1 325 1 
236 2 284 2 238 1 165 3 140 1 76 1 36 1 192 2 9 2 119 1 143 1 171 1 123 1 125 2 324 2 312 2 212 2 176 1 16 2 218 1 128 1 333 2 84 2 229 1 23 1 110 2 258 1 85 1 263 2 188 1 283 1 
71 1 0 1 114 1 115 3 164 1 73 1 207 2 165 1 142 2 192 1 101 1 123 1 40 1 124 1 125 1 102 2 174 2 312 1 212 1 13 1 18 1 22 1 84 1 339 1 110 1 199 3 317 1 234 1 363 2 235 1 263 1 66 1 
16 1 236 1 128 2 285 1 2 4 229 1 76 1 99 2 171 1 194 2 185 2 324 1 233 4 313 2 283 1 
237 1 217 1 34 1 107 1 242 1 
217 1 107 1 241 1 
217 1 107 1 241 1 
217 1 107 1 241 1 
217 1 107 1 6 1 
217 1 107 1 6 1 
217 1 107 1 6 1 
217 1 107 1 
195 1 301 1 
71 2 266 5 285 1 47 1 240 1 4 1 211 1 118 4 275 2 102 4 148 1 13 24 103 1 296 5 18 10 179 1 227 14 22 2 21 1 230 1 359 4 24 2 338 2 339 2 200 1 87 2 201 1 88 1 342 2 135 1 235 2 203 9 138 1 
71 3 266 3 285 1 240 1 4 1 211 1 118 2 275 1 102 6 148 1 42 1 13 17 103 1 296 3 18 7 179 1 227 10 22 3 21 1 230 1 359 1 24 2 338 1 339 3 200 1 87 1 201 1 88 1 342 2 135 1 235 3 203 4 138 1 
71 3 266 3 285 1 240 1 4 2 211 1 118 3 275 1 102 6 148 1 42 1 13 19 103 1 296 3 18 10 179 1 227 9 22 3 21 1 230 1 359 1 24 2 338 1 339 3 200 1 87 1 201 1 88 1 342 2 135 1 235 3 203 4 138 1 
71 3 266 3 285 1 240 1 4 1 211 1 118 2 275 1 102 6 148 1 42 1 13 17 103 1 296 3 18 7 179 1 227 10 22 3 21 1 230 1 359 2 24 2 338 1 339 3 200 1 87 1 201 1 88 1 342 2 135 1 235 3 203 5 138 1 
71 2 266 5 285 1 47 1 240 1 4 1 211 1 118 4 275 2 102 4 148 1 13 24 103 1 296 5 18 10 179 1 227 14 22 2 21 1 230 1 359 4 24 2 338 2 339 2 200 1 87 2 201 1 88 1 342 2 135 1 235 2 203 9 138 1 
71 1 266 1 4 2 211 1 118 2 102 2 13 12 103 1 296 2 18 6 179 1 227 6 22 1 21 1 230 1 359 1 24 2 339 1 200 1 201 1 88 1 342 2 135 1 235 1 203 2 
71 4 266 3 285 1 240 1 4 1 211 1 118 2 275 1 102 8 148 1 42 1 13 18 103 1 296 3 18 8 179 1 227 10 21 1 22 4 230 1 359 2 24 2 338 1 339 4 200 1 87 1 201 1 88 1 342 2 135 1 235 4 203 5 138 2 
71 4 266 3 4 2 211 1 118 2 102 8 55 1 13 16 103 1 296 3 18 7 179 1 227 9 21 1 22 4 230 1 359 3 24 3 339 4 200 1 201 1 88 1 342 3 135 1 235 4 203 6 138 2 
296 1 266 3 18 4 240 2 227 3 359 3 338 3 118 1 87 3 275 1 148 1 13 7 203 6 
71 4 266 3 285 1 240 1 4 1 211 1 118 2 275 1 102 8 148 1 55 1 13 18 103 1 296 3 18 8 179 1 227 10 21 1 22 4 230 1 359 1 24 2 338 1 339 4 200 1 87 1 201 1 88 1 342 2 135 1 235 4 203 4 138 2 
296 1 71 2 266 2 285 1 18 4 240 1 227 4 22 2 359 1 338 1 339 2 118 1 87 1 275 1 102 4 235 2 148 1 13 8 203 3 138 1 
296 1 266 2 285 1 18 3 239 1 240 1 227 3 338 1 118 1 87 1 275 1 148 1 203 2 13 6 
71 1 296 1 266 1 18 2 4 1 227 2 22 1 24 1 359 1 339 1 118 1 342 1 102 2 235 1 42 1 203 2 13 4 
200 1 201 1 18 1 227 1 13 2 211 1 
71 1 266 4 285 1 47 1 240 1 4 2 211 2 118 5 292 1 275 2 102 2 213 1 148 1 13 25 296 5 18 12 152 1 227 13 22 1 24 2 359 4 338 2 339 1 87 2 201 2 342 2 235 1 203 8 138 1 
18 1 13 1 211 1 
201 1 227 1 13 1 
71 1 296 1 266 2 18 3 4 1 227 3 22 1 109 1 24 1 359 1 339 1 118 1 342 1 102 2 235 1 42 1 13 6 203 3 
71 1 266 1 4 2 211 1 118 2 102 2 13 12 103 1 296 2 18 6 179 1 227 6 22 1 21 1 230 1 359 1 24 2 339 1 200 1 201 1 88 1 342 2 135 1 235 1 203 2 
296 1 266 1 18 3 227 3 359 1 338 1 118 1 87 1 275 1 13 6 203 2 
71 1 266 1 18 2 240 1 227 1 22 1 359 1 338 1 339 1 87 1 102 2 159 1 235 1 148 1 203 2 13 3 138 1 
71 1 296 2 266 3 18 5 47 1 227 5 22 1 230 1 359 2 338 2 339 1 118 2 87 2 275 1 102 2 235 1 203 5 13 10 
71 1 296 1 227 2 22 1 230 1 359 1 339 1 342 1 102 2 235 1 13 2 203 1 
71 1 296 1 266 1 18 2 4 1 227 2 22 1 230 1 24 1 359 1 339 1 118 1 342 1 102 2 235 1 203 2 13 4 
71 3 266 1 18 2 227 1 22 3 230 1 359 1 338 1 339 3 87 1 102 6 159 1 235 3 55 1 13 3 203 2 138 1 
71 4 266 3 47 1 240 1 211 1 118 2 275 1 102 8 148 1 42 1 55 1 13 15 296 2 299 1 18 8 227 7 22 4 230 1 359 3 338 2 339 4 200 1 201 1 87 2 235 4 159 1 203 6 138 1 
317 1 115 1 150 1 300 1 268 1 142 1 199 1 
115 1 150 1 320 1 268 1 300 1 208 1 142 1 168 1 199 1 317 1 362 1 365 1 
238 1 239 1 125 1 312 1 165 1 212 1 84 1 36 1 263 1 192 1 110 1 
115 2 220 1 73 1 207 1 165 1 84 1 142 1 192 1 199 2 110 1 317 1 101 1 123 1 125 1 312 1 174 1 212 1 263 1 
115 2 73 1 207 1 165 1 5 1 7 2 142 2 101 1 123 2 125 3 174 2 312 2 212 1 79 1 220 1 221 1 84 1 358 1 110 1 199 2 317 1 231 1 63 1 263 1 
115 2 73 1 288 1 207 1 165 1 5 1 7 2 142 2 123 2 125 3 174 2 312 2 212 1 79 1 220 1 221 1 84 1 358 1 110 1 199 2 317 1 231 1 63 1 263 1 
264 1 284 2 115 1 1 1 207 1 165 1 5 1 7 1 244 1 142 1 9 1 123 1 125 4 174 1 312 1 212 1 313 1 325 1 79 1 82 1 333 2 45 1 84 1 358 1 26 1 199 1 110 1 233 1 234 1 363 1 345 1 263 1 
284 1 82 1 151 1 333 1 5 1 165 1 84 1 358 1 26 1 110 1 123 1 125 4 312 1 212 1 263 1 79 1 
165 1 212 1 318 1 84 1 263 1 110 1 
165 2 84 1 192 1 110 1 143 1 258 1 293 1 157 1 123 1 125 1 312 1 212 1 263 1 
46 1 285 1 240 1 142 1 8 1 101 1 53 1 102 4 148 1 13 6 296 1 330 1 18 3 255 1 22 2 338 1 110 1 339 2 199 2 263 1 203 2 66 1 71 2 114 2 266 2 115 2 164 1 269 1 73 1 207 1 165 1 120 1 118 1 275 1 40 2 123 1 125 1 174 1 312 1 212 1 220 1 227 3 84 1 360 1 87 1 317 2 235 2 
16 1 236 1 284 1 218 1 82 1 151 1 333 1 75 1 229 1 198 1 322 1 26 1 192 1 110 1 50 1 125 2 324 1 212 1 263 1 
82 1 3 1 165 2 84 1 110 2 120 1 157 1 123 1 125 2 312 1 318 1 212 2 263 2 
57 1 238 1 74 1 165 1 84 1 36 1 192 1 110 4 120 1 125 1 312 1 212 4 263 4 
165 2 84 1 23 1 110 1 119 1 143 1 258 1 123 1 125 1 312 1 212 1 263 1 80 1 
193 1 10 1 147 1 158 1 165 1 212 1 84 1 263 1 192 1 110 1 
70 1 222 1 165 1 84 1 110 2 120 1 77 1 125 1 312 1 212 2 263 2 
57 1 70 1 238 1 165 2 290 1 84 2 36 1 192 1 110 5 120 1 125 3 312 2 212 5 263 4 79 1 177 1 
57 1 70 1 238 1 189 1 165 2 84 2 36 1 192 1 110 5 120 1 125 3 312 2 212 5 263 4 79 1 177 1 
115 2 73 1 288 1 207 1 165 1 7 1 142 1 192 1 123 1 125 1 174 1 312 1 212 1 220 1 84 1 110 1 199 2 317 1 63 1 263 1 
165 2 84 1 110 1 143 1 258 1 293 1 157 1 123 1 125 1 312 1 212 1 263 1 79 1 
317 1 144 1 173 1 209 1 340 1 
284 2 1 1 221 1 349 1 333 2 7 1 209 2 291 1 322 1 154 1 181 1 37 1 340 1 317 1 231 1 144 2 173 2 233 1 313 1 
115 1 89 1 173 1 209 1 142 1 245 1 199 1 204 1 340 1 
291 1 181 1 340 1 
163 1 305 1 239 1 243 1 
163 1 305 1 223 1 332 1 243 1 137 1 126 1 
223 1 225 1 256 1 
121 2 163 1 305 1 223 3 294 1 332 3 180 1 243 1 366 1 137 1 126 1 280 1 
39 1 163 1 305 1 44 1 223 2 332 2 243 1 137 1 126 1 
105 1 223 1 10 1 332 1 226 1 147 1 243 1 366 1 302 1 137 1 126 1 
163 1 223 1 332 1 243 1 366 1 137 1 126 1 
163 2 305 1 223 1 332 1 366 1 137 1 126 1 
163 1 83 1 223 2 332 2 116 1 243 1 78 1 366 1 126 2 137 2 
163 1 44 2 223 3 332 3 243 2 302 1 305 1 281 1 30 1 64 1 366 1 126 1 137 1 
163 1 44 1 223 2 105 1 332 2 243 1 361 1 156 1 305 1 10 1 158 1 147 2 366 1 126 1 137 1 
163 1 44 2 223 4 332 4 243 2 302 1 39 1 305 1 248 1 64 1 366 1 126 2 137 2 
163 1 305 1 223 1 332 1 243 1 366 1 137 1 126 1 
139 1 163 2 44 2 223 4 332 4 180 1 243 3 302 1 121 1 305 2 294 1 64 1 126 1 137 1 
163 1 44 1 223 2 332 2 243 1 90 1 305 1 341 1 366 1 113 1 126 1 137 1 
163 1 223 3 332 3 180 1 243 1 316 1 121 2 305 1 294 2 366 1 126 1 137 1 
287 1 243 2 357 2 252 1 
223 1 332 1 92 1 366 1 137 1 126 1 
163 1 305 1 44 1 223 2 332 2 243 1 30 1 366 1 137 1 126 1 
353 1 
163 1 305 1 223 1 332 1 243 1 366 1 137 1 126 1 
44 1 163 1 223 3 332 3 243 1 121 1 305 1 30 1 366 1 126 1 137 1 
139 1 243 1 64 1 302 1 
163 1 243 1 

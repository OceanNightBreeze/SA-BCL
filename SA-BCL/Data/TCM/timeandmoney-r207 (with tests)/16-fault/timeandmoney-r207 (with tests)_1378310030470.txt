#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 299 (121,304) (121,304) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 299 (121,304) (121,304) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 299 (121,304) (121,304) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 299 (121,304) (121,304) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 299 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 299 28 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 299 28 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 30 377 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 30 282 332 89 65 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 30 282 332 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 30 282 332 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 30 282 131 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 30 282 332 89 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 30 282 332 89 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 245 30 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 143 294 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 303 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> <=
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | RETURN | 5414 | return null
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1287 | stmt -> ;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2311 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1062 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 234 3 236 1 45 2 29 1 226 3 335 1 72 1 74 2 370 2 254 1 172 1 327 1 
232 1 365 1 2 1 234 4 236 1 26 1 44 1 45 1 299 1 121 1 335 1 226 4 252 1 291 1 158 1 74 2 283 1 254 1 370 2 172 2 327 1 304 1 
232 1 365 1 2 1 234 4 236 1 26 1 44 1 45 1 299 1 121 1 335 1 226 4 252 1 291 1 158 1 74 2 283 1 254 1 370 2 172 2 327 1 304 1 
232 1 365 1 2 1 234 4 236 1 26 1 44 1 45 1 299 1 121 1 335 1 226 4 252 1 291 1 158 1 74 2 283 1 254 1 370 2 172 2 327 1 304 1 
232 1 365 1 2 1 234 4 236 1 26 1 44 1 45 1 299 1 121 1 335 1 226 4 252 1 291 1 158 1 74 2 283 1 254 1 370 2 172 2 327 1 304 1 
174 1 232 1 2 1 234 4 236 1 26 1 45 2 299 1 226 4 335 3 62 2 158 1 74 1 370 1 76 1 254 2 
364 1 232 1 2 1 234 2 45 1 280 1 29 1 226 2 72 1 157 1 291 1 74 1 158 1 283 1 370 1 172 1 
45 1 299 1 285 1 335 2 226 4 252 1 74 2 2 1 234 4 254 1 236 1 370 2 172 1 28 1 327 1 
45 1 299 1 285 1 335 2 226 4 252 1 74 2 2 1 234 4 254 1 236 1 370 2 172 1 28 1 327 1 
1 1 195 1 286 1 277 1 308 1 58 1 90 1 46 1 16 1 48 1 98 1 126 1 169 1 75 1 
375 1 
239 1 34 1 323 1 126 1 168 1 375 1 75 2 169 2 
138 1 330 1 34 1 141 2 375 1 67 1 122 1 336 1 351 2 159 1 126 2 323 2 168 1 84 1 169 5 75 5 7 1 193 2 19 1 
303 1 
119 1 245 2 375 1 
46 2 1 2 195 2 48 2 204 1 98 2 308 1 58 2 
1 3 305 1 204 1 115 1 307 1 41 1 308 1 187 1 142 1 163 1 334 1 46 2 94 1 48 2 368 1 145 1 98 2 97 2 242 2 216 2 343 1 128 1 55 1 195 3 247 1 35 1 219 1 250 1 376 1 58 2 154 1 39 1 17 1 181 2 18 1 354 1 227 2 
46 1 16 1 1 1 195 1 48 1 98 1 286 1 308 1 58 1 90 1 
139 1 140 1 1 1 195 1 246 1 22 1 375 1 58 1 90 1 71 1 268 1 168 1 169 1 75 1 
140 1 1 2 195 2 246 1 286 1 22 1 277 1 375 1 308 1 58 2 90 2 46 2 16 1 48 2 71 1 98 2 168 1 75 2 169 2 
194 1 323 1 126 1 75 1 169 1 
149 1 34 1 323 1 126 1 168 1 375 1 75 2 169 2 
323 1 75 1 169 1 
316 1 1 2 195 2 204 2 58 2 46 1 48 1 49 1 98 1 
209 1 311 1 129 1 
1 1 128 1 195 1 247 1 204 1 250 1 187 1 376 1 163 1 39 1 17 1 145 1 97 1 199 1 242 1 216 1 
303 1 
128 1 1 2 195 2 247 1 250 1 187 1 376 1 42 1 58 1 163 1 311 1 39 1 46 1 17 1 48 1 145 1 97 1 242 1 216 1 51 1 
46 3 1 3 195 3 48 3 204 1 98 1 51 1 58 3 
46 1 16 1 1 1 195 1 48 1 58 1 90 1 
316 1 46 1 1 1 195 1 48 1 98 1 49 1 58 1 90 1 
140 1 1 4 305 1 204 1 22 1 115 1 307 1 41 1 187 1 308 1 42 1 142 1 163 1 90 1 46 3 94 1 48 3 71 1 368 1 73 1 145 1 98 2 49 1 97 1 169 1 75 1 242 1 216 1 51 1 343 1 128 1 195 4 246 1 247 1 35 1 250 1 376 1 58 3 154 1 39 1 15 1 17 1 181 2 227 1 
46 1 70 1 1 2 195 2 48 1 204 1 268 1 51 1 58 2 
140 1 1 3 195 3 246 1 22 1 375 1 42 1 58 3 90 1 117 1 46 3 15 1 48 3 71 1 98 1 49 1 75 1 169 1 51 2 
1 2 195 2 58 2 209 1 311 1 46 2 48 2 49 1 98 1 51 1 
1 1 128 1 195 1 247 1 204 1 250 1 187 1 376 1 163 1 39 1 17 1 97 1 145 1 242 1 216 1 
1 1 128 1 195 1 363 1 204 1 250 1 376 1 163 1 47 1 39 1 17 1 97 1 145 1 242 1 216 1 
206 1 87 1 307 1 41 1 68 1 142 1 311 2 209 2 368 2 210 1 269 1 343 1 271 1 129 2 295 1 35 1 152 1 197 1 154 1 181 2 354 2 253 1 227 4 134 1 
244 1 46 1 1 1 71 1 195 1 48 1 58 1 90 1 
1 5 195 5 275 1 204 1 42 1 58 5 46 4 70 1 48 4 49 1 98 1 268 1 51 2 52 1 
244 1 46 2 16 1 1 2 195 2 48 2 58 2 90 1 
261 1 177 1 27 1 
81 1 8 1 177 2 27 2 13 1 179 1 
177 1 27 1 
177 1 27 1 
8 1 179 1 
8 1 179 1 
8 1 177 1 27 1 179 1 
11 1 177 1 27 1 
11 1 177 1 27 1 
11 1 177 1 27 1 
177 1 366 1 27 1 
177 1 366 1 27 1 
177 1 366 1 27 1 
273 1 205 1 344 1 375 1 177 2 27 2 279 2 178 3 81 1 144 1 64 2 338 1 352 2 314 1 100 2 101 2 169 2 75 2 85 1 
1 2 258 1 204 1 261 1 27 1 46 2 48 2 100 1 101 1 75 1 169 1 104 1 195 2 272 1 273 1 372 1 177 1 178 1 279 1 58 2 317 1 251 1 64 1 353 1 
280 1 232 2 26 1 326 1 162 2 
232 1 158 1 26 1 
280 1 232 1 158 1 
280 1 232 3 326 1 26 2 215 1 162 1 
280 1 130 1 232 2 326 1 26 1 162 1 
185 1 257 2 206 1 330 2 260 1 113 1 141 1 207 1 25 1 119 1 122 1 126 4 168 1 75 5 169 5 193 1 269 1 272 1 271 1 245 3 249 2 34 1 375 2 197 1 251 1 351 1 353 1 323 1 66 1 255 2 136 1 19 3 
138 1 185 3 257 6 206 3 330 6 24 1 141 2 207 2 25 1 119 3 122 1 126 7 168 1 75 9 169 9 292 1 193 2 269 3 103 1 271 3 245 9 194 5 249 6 34 1 375 5 197 3 61 1 351 2 321 1 353 4 323 6 66 2 109 1 19 8 328 5 
138 1 185 1 257 2 206 1 330 2 113 1 260 1 141 1 207 1 119 2 126 2 168 1 75 3 169 3 193 1 269 1 271 1 245 4 249 2 375 3 197 1 351 1 353 1 66 1 255 1 19 3 
138 1 185 2 257 4 206 2 330 4 113 1 260 1 24 1 141 1 207 1 119 3 126 3 168 1 75 4 169 4 193 1 269 2 103 1 271 2 245 7 249 4 375 4 197 2 351 1 353 2 66 1 255 2 109 1 19 5 
310 1 
303 1 
82 1 145 1 
128 1 145 1 
128 1 88 2 250 1 310 1 145 3 201 1 170 1 
128 1 145 1 250 1 
248 1 145 1 
269 1 53 1 206 1 87 2 259 1 333 1 152 3 348 1 301 2 225 1 95 1 368 3 213 1 354 4 227 7 127 1 293 1 184 1 
185 3 259 1 206 4 87 5 333 1 307 1 142 1 95 1 368 15 96 1 213 2 127 5 293 2 53 2 269 4 343 1 270 1 271 3 276 1 152 10 347 3 197 3 180 1 301 3 154 1 225 2 181 2 155 4 354 16 183 1 227 31 200 1 184 1 360 1 
206 3 87 5 259 1 307 2 333 1 142 2 266 1 368 7 213 1 127 4 293 2 269 3 53 2 343 2 57 1 374 1 152 9 301 2 154 2 225 1 181 4 354 9 227 16 200 1 184 2 
269 1 53 1 206 1 87 2 259 1 333 1 152 3 301 2 225 1 95 1 368 3 213 1 354 4 227 7 127 1 293 1 184 1 
269 1 53 1 206 1 87 2 259 1 333 1 152 3 301 2 225 1 95 1 368 3 213 1 354 4 227 7 127 1 293 1 184 1 
148 1 128 1 77 1 151 1 114 1 234 1 376 1 39 1 226 1 17 1 289 2 369 2 145 1 97 1 322 2 74 1 339 1 242 1 370 1 216 1 171 1 172 2 340 1 
233 1 232 2 2 1 234 1 26 1 265 1 289 1 369 1 97 1 74 1 242 1 216 1 370 1 215 1 172 1 146 1 342 1 37 1 376 1 280 1 39 1 226 1 322 1 158 1 160 1 161 1 
233 1 232 2 2 1 234 2 26 1 45 1 29 1 335 1 265 1 72 1 289 1 369 1 97 1 313 1 74 1 242 1 216 1 370 1 215 1 172 1 146 1 342 1 37 1 376 1 280 1 39 1 226 2 322 1 158 1 160 1 
232 2 234 3 26 1 45 1 29 1 335 2 265 1 72 1 289 1 369 1 97 1 74 1 242 1 215 1 216 1 370 1 172 1 146 1 340 1 54 1 342 1 37 1 376 1 280 1 39 1 226 3 322 1 158 1 160 1 161 1 
232 2 234 2 26 1 45 1 29 1 335 2 265 1 72 1 289 1 369 1 97 1 242 1 216 1 215 1 172 1 146 1 54 1 342 1 376 1 280 1 39 1 226 2 322 1 158 1 161 1 
4 1 
139 1 140 1 1 1 330 2 141 1 90 1 91 1 97 2 145 1 242 2 193 1 195 1 246 1 9 1 58 1 300 1 17 2 351 1 356 1 66 1 358 1 19 2 361 1 22 1 114 1 69 1 312 2 122 1 71 1 30 1 268 1 168 2 169 3 75 3 216 2 128 1 77 1 34 1 375 2 376 1 221 1 222 1 39 1 377 1 133 1 323 2 137 1 
139 1 361 1 140 1 1 1 22 1 90 1 312 2 91 1 239 1 71 1 268 1 168 2 75 3 169 3 195 1 246 1 34 1 375 2 58 1 133 1 323 2 356 1 325 1 137 1 
139 1 140 1 361 1 1 1 246 1 195 1 34 1 22 1 375 3 12 1 58 1 90 1 312 3 91 1 239 1 71 1 133 1 268 1 323 1 168 3 356 1 169 3 75 3 137 1 
139 1 361 1 140 1 1 1 22 1 90 1 312 3 91 1 239 1 71 1 268 1 168 3 75 3 169 3 195 1 246 1 34 1 375 3 12 1 58 1 60 1 133 1 323 2 356 1 325 1 137 1 
139 1 361 1 140 1 1 1 330 1 332 1 22 1 141 1 89 1 90 1 312 2 122 1 91 1 239 1 71 1 30 1 268 1 190 1 168 2 75 3 169 3 193 1 195 1 246 1 9 1 34 1 375 2 58 1 300 1 60 2 133 1 351 1 65 1 282 1 323 3 356 1 325 2 358 1 19 1 137 1 
139 1 361 1 140 1 1 1 330 1 22 1 141 1 90 1 312 2 91 1 122 1 71 1 30 1 268 1 168 2 75 2 169 2 193 1 195 1 246 1 9 1 375 2 58 1 300 1 133 1 351 1 356 1 358 1 19 1 137 1 
139 1 361 1 140 1 1 1 330 1 332 1 22 1 141 1 90 1 312 2 91 1 122 1 71 1 30 1 268 1 190 1 168 2 75 2 169 2 193 1 195 1 246 1 9 1 375 2 58 1 300 1 133 1 351 1 282 1 356 1 358 1 19 1 137 1 
139 1 361 1 140 1 1 1 330 1 332 1 22 1 141 1 90 1 312 2 91 1 122 1 71 1 30 1 268 1 190 1 168 2 75 2 169 2 193 1 195 1 246 1 9 1 375 2 58 1 300 1 133 1 351 1 282 1 356 1 358 1 19 1 137 1 
139 1 361 1 140 1 86 1 1 1 330 1 22 1 141 1 90 1 312 2 91 1 122 1 71 1 290 1 337 1 30 1 268 1 168 2 75 2 169 2 193 1 245 1 195 1 246 1 375 2 58 1 300 1 131 1 133 1 351 1 282 1 356 1 358 1 137 1 
139 1 361 1 140 1 1 1 330 1 332 1 22 1 141 1 89 1 90 1 312 3 122 1 91 1 71 1 30 1 268 1 190 1 168 3 75 2 169 2 193 1 195 1 246 1 9 1 375 3 12 1 58 1 300 1 60 1 133 1 351 1 282 1 323 1 356 1 325 1 358 1 19 1 137 1 
139 1 361 1 140 1 1 1 330 1 332 1 22 1 141 1 89 1 90 1 312 3 122 1 91 1 71 1 30 1 268 1 190 1 168 3 75 2 169 2 193 1 195 1 246 1 9 1 375 3 12 1 58 1 300 1 60 1 133 1 351 1 282 1 323 1 356 1 325 1 358 1 19 1 137 1 
139 1 361 1 140 1 86 1 1 1 330 1 22 1 141 1 90 1 312 2 91 1 122 1 71 1 290 1 30 1 268 1 168 2 75 2 169 2 193 1 245 1 195 1 246 1 375 2 58 1 300 1 133 1 351 1 356 1 358 1 137 1 
256 1 1 1 114 1 307 2 41 2 142 2 334 2 46 1 94 1 48 1 368 1 145 3 97 7 313 1 242 8 216 8 51 1 341 1 343 2 128 2 195 1 77 1 35 2 219 1 373 1 376 2 58 1 349 1 108 1 39 2 154 2 378 1 17 2 181 4 319 1 253 1 354 1 227 2 161 1 
185 1 1 1 87 1 206 1 307 1 41 1 142 1 209 1 311 1 46 1 48 1 368 2 98 1 49 1 32 1 147 1 269 1 343 1 129 1 195 1 271 1 35 1 152 1 58 1 197 1 154 1 181 2 354 1 227 3 
154 1 343 1 181 2 303 1 35 1 253 1 307 1 41 1 142 1 
185 2 204 1 87 1 206 1 307 2 41 2 164 1 142 2 311 11 209 4 94 1 368 6 127 1 32 1 173 1 269 2 343 2 129 11 271 1 10 1 35 1 276 1 219 1 152 2 347 3 197 2 154 2 181 4 318 1 155 3 354 8 183 1 227 14 
231 1 1 2 204 1 307 1 187 1 41 1 42 1 163 1 142 1 209 1 46 1 94 1 48 1 368 1 145 1 97 1 242 1 216 1 32 1 51 1 343 1 128 1 195 2 247 1 35 1 219 1 250 1 376 1 196 1 58 1 39 1 154 1 17 1 181 2 354 1 199 1 227 2 355 1 
185 2 1 3 186 2 87 4 333 1 41 3 187 2 42 1 142 3 46 1 94 1 48 1 97 3 145 2 242 3 293 1 51 1 53 1 343 3 56 1 195 3 247 2 250 2 152 8 58 1 197 2 301 1 154 3 198 1 17 1 354 10 161 1 20 2 204 2 259 1 206 3 115 2 307 3 163 2 311 7 209 7 368 10 167 2 127 4 216 3 32 1 269 3 128 2 129 7 271 2 33 1 35 3 219 1 376 2 39 2 223 2 181 6 227 20 184 1 
269 1 343 1 129 1 35 1 307 1 152 1 41 1 142 1 197 1 209 1 311 1 154 1 181 2 210 1 253 1 354 2 227 2 127 1 
343 1 129 1 271 1 87 1 295 1 206 1 35 1 307 1 152 1 41 1 142 1 209 1 311 1 154 1 181 2 368 2 253 1 227 2 
269 1 185 1 343 1 271 1 129 2 87 1 206 1 35 1 307 1 152 2 41 1 142 1 197 1 209 2 311 2 154 1 181 2 368 2 253 1 354 2 227 4 127 1 
269 1 343 1 129 1 35 1 307 1 152 1 41 1 142 1 197 1 209 1 311 1 154 1 181 2 319 1 210 1 354 2 227 2 127 1 
343 1 129 1 271 1 87 1 295 1 206 1 35 1 307 1 152 1 41 1 142 1 209 1 311 1 154 1 181 2 319 1 368 2 227 2 
269 1 185 1 343 1 271 1 129 2 87 1 206 1 35 1 307 1 152 2 41 1 142 1 197 1 209 2 311 2 154 1 181 2 368 2 319 1 354 2 227 4 127 1 
269 1 185 1 343 1 271 1 129 2 87 1 206 1 35 1 307 1 152 2 41 1 142 1 197 1 209 2 311 2 154 1 181 2 368 2 354 2 227 4 127 1 
1 1 204 1 115 1 307 1 187 1 41 1 163 1 142 1 94 1 368 1 97 1 145 1 242 1 216 1 343 1 128 1 195 1 247 1 35 1 219 1 250 1 376 1 39 1 154 1 17 1 181 2 354 1 227 2 
1 1 363 1 204 1 307 1 41 1 163 1 142 1 47 1 94 1 368 1 97 1 145 1 242 1 216 1 343 1 128 1 195 1 35 1 219 1 250 1 376 1 39 1 154 1 17 1 181 2 132 1 354 1 227 2 
269 1 185 1 343 1 271 1 129 2 87 1 206 1 35 1 307 1 152 2 41 1 142 1 197 1 209 2 311 2 154 1 181 2 368 2 354 2 227 4 127 1 32 1 
185 1 1 1 186 1 87 1 206 1 115 1 307 1 187 1 41 1 163 1 142 1 209 2 311 2 368 2 97 1 145 1 313 1 127 1 242 1 216 1 269 1 343 1 128 1 271 1 129 2 195 1 247 1 35 1 250 1 152 2 376 1 197 1 39 1 154 1 181 2 354 2 227 4 
185 1 1 1 206 1 307 1 41 1 142 1 311 1 209 1 46 1 48 1 368 1 98 1 49 1 127 1 32 1 269 1 343 1 271 1 195 1 129 1 78 1 35 1 152 1 58 1 197 1 154 1 181 2 354 2 227 3 
185 3 111 1 202 1 87 3 206 3 307 2 142 2 368 10 6 1 127 3 269 3 343 2 271 3 218 2 274 1 276 1 374 1 152 6 347 1 197 3 59 1 224 1 154 2 181 4 155 2 63 1 320 2 354 9 183 1 227 19 
185 3 111 2 87 2 206 2 307 3 142 3 93 1 368 12 5 1 189 1 127 2 6 1 269 3 343 3 271 2 218 4 274 2 297 1 374 1 152 4 347 2 197 3 59 1 154 3 281 1 181 6 155 2 63 1 320 1 354 14 200 2 227 26 183 2 357 1 
185 4 111 2 202 1 259 1 87 4 206 5 333 1 307 3 142 3 93 1 368 21 5 1 189 1 6 1 127 4 293 1 53 1 269 5 343 3 217 1 271 4 218 4 274 1 276 1 297 1 374 1 152 8 347 3 197 4 59 1 301 1 154 3 281 1 181 6 155 4 63 1 320 1 354 20 200 1 183 3 227 41 357 1 184 1 
185 4 111 2 202 1 259 1 87 4 206 4 333 1 307 4 142 4 93 1 368 18 5 1 189 1 6 1 127 3 293 1 53 1 269 5 343 4 217 1 271 3 218 4 274 1 276 1 297 1 374 1 152 7 347 3 197 4 59 1 301 1 154 4 281 1 181 8 155 4 63 1 320 1 354 20 200 2 183 3 227 38 357 1 184 1 
185 7 111 1 259 1 87 7 206 8 333 1 307 2 142 2 93 1 368 25 5 1 189 1 6 1 127 7 293 1 173 2 53 1 269 8 343 2 271 7 218 4 274 1 276 2 297 1 374 1 152 14 347 4 197 7 59 1 301 1 154 2 281 1 181 4 155 4 63 1 320 1 354 27 200 1 183 2 227 52 357 1 184 1 
81 1 112 1 144 1 64 1 314 1 100 1 177 1 101 1 279 1 27 1 
317 1 261 1 
240 1 182 1 64 1 100 1 177 1 101 1 309 1 279 1 27 1 
273 1 344 1 375 1 177 1 27 1 279 1 178 2 81 1 144 1 64 1 338 1 352 1 314 1 100 1 169 1 75 1 101 1 85 1 
273 1 344 1 375 1 177 1 27 1 279 1 178 2 81 1 144 1 64 1 338 1 352 1 314 1 100 1 169 1 75 1 101 1 85 1 
273 1 344 1 375 1 177 1 27 1 279 1 178 2 81 1 144 1 64 1 338 1 352 1 314 1 100 1 169 1 75 1 101 1 85 1 
11 1 235 1 13 1 
11 1 235 1 13 1 
366 1 243 1 
366 1 243 1 13 1 
258 1 372 1 
1 2 362 1 258 1 204 1 261 1 27 1 46 2 48 2 338 1 126 1 100 1 75 1 169 1 101 1 104 1 195 2 272 1 372 1 177 1 279 1 178 1 58 2 317 1 251 1 64 1 352 1 353 1 
11 1 235 1 
366 1 243 1 13 1 
284 1 256 1 1 2 306 1 307 1 41 1 142 1 334 2 94 1 368 1 145 1 97 2 242 2 216 2 32 1 371 1 343 1 128 1 195 2 35 1 345 1 219 1 373 1 376 1 58 2 107 1 39 1 154 1 181 2 354 1 227 2 
128 1 77 1 114 1 376 1 14 1 39 1 17 1 145 1 97 1 322 1 339 1 242 1 216 1 228 1 
342 1 232 2 26 1 376 1 14 1 280 1 39 1 288 1 265 1 97 1 322 1 158 1 99 1 160 1 161 1 242 1 215 1 216 1 
342 1 232 2 26 1 376 1 14 1 280 1 39 1 288 1 265 1 97 2 322 1 158 1 313 1 99 1 160 1 161 1 242 2 215 1 216 2 
329 1 342 1 232 2 26 1 376 1 280 1 39 1 265 1 97 1 322 1 158 1 99 1 160 1 161 1 242 1 215 1 216 1 
175 1 
330 1 141 1 375 1 122 1 351 1 159 1 168 1 84 1 193 1 19 1 
269 2 185 2 257 5 245 10 271 2 330 5 206 2 249 5 375 5 208 2 197 2 119 5 223 1 124 1 19 5 
34 1 323 1 168 1 375 1 75 1 169 1 
138 1 330 2 141 2 114 1 69 1 122 1 145 1 97 4 191 1 242 4 169 3 75 3 216 4 193 2 128 1 150 1 77 1 34 2 346 2 376 1 221 1 222 2 39 1 17 2 351 2 323 4 66 2 135 1 19 2 
303 1 
122 1 9 1 330 1 351 1 141 1 193 1 19 1 
140 2 185 2 0 1 330 8 141 4 88 2 43 1 238 2 3 2 145 8 97 3 242 3 193 4 245 12 105 2 248 1 249 6 346 1 250 2 197 2 17 1 351 4 159 1 66 2 201 1 19 9 257 6 206 2 263 1 208 2 119 6 122 4 124 2 267 2 313 1 168 2 31 1 169 5 75 5 216 3 269 2 128 2 271 2 34 3 79 2 375 8 376 2 222 1 39 3 223 2 82 3 323 5 84 1 135 1 
185 2 21 1 257 5 330 5 206 2 141 2 208 2 119 3 122 2 123 1 93 1 124 1 5 1 189 1 168 2 75 1 169 1 193 2 269 2 245 6 271 2 34 1 249 5 375 5 347 1 197 2 222 1 281 1 155 1 351 2 323 1 183 1 66 1 357 1 19 8 
1 1 330 2 206 1 286 1 141 1 208 2 308 1 90 1 122 1 46 1 124 1 48 1 98 1 190 1 75 1 169 1 293 1 193 1 53 1 269 2 195 1 57 1 277 1 58 1 16 1 351 1 19 2 184 1 
1 3 305 1 204 1 115 1 307 1 308 1 187 1 41 1 142 1 163 1 46 2 94 1 48 2 368 1 97 1 98 2 145 1 242 1 216 1 343 1 128 1 195 3 247 1 35 1 250 1 376 1 58 2 154 1 39 1 17 1 181 2 227 1 
245 4 257 2 330 2 249 2 141 1 375 4 119 2 301 1 222 1 122 1 351 1 168 2 66 1 193 1 19 1 
372 1 64 1 314 1 262 1 279 1 
64 1 287 1 279 1 
64 1 287 1 279 1 
64 1 287 1 279 1 
64 1 83 1 279 1 
64 1 83 1 279 1 
64 1 83 1 279 1 
64 1 279 1 
177 1 27 1 
53 2 269 2 343 1 87 3 206 2 57 1 307 1 374 1 152 5 142 1 154 1 181 2 368 5 354 5 227 10 127 2 293 2 184 1 
269 1 343 1 307 1 374 1 152 1 142 1 197 1 154 1 181 2 354 2 227 2 127 1 
269 1 185 1 343 1 271 1 87 1 206 1 307 1 374 1 152 2 142 1 197 1 154 1 181 2 368 2 354 2 227 4 127 1 
53 1 343 3 202 1 87 1 106 1 307 3 374 1 152 2 142 3 154 3 181 6 368 2 354 1 200 1 227 3 127 1 293 1 
185 3 202 1 259 1 206 5 87 7 333 1 307 5 142 5 120 1 368 18 127 5 293 3 53 3 269 5 343 5 270 1 271 3 106 1 276 1 374 1 152 12 347 3 197 3 180 1 301 1 154 5 181 10 155 4 354 16 200 2 183 1 227 34 184 2 360 1 
269 1 53 1 343 2 206 1 87 2 259 1 307 2 333 1 152 3 142 2 301 1 154 2 181 4 368 4 354 4 227 8 200 1 127 1 293 1 184 1 
303 1 
269 1 185 1 343 1 271 1 87 1 206 1 307 1 152 2 142 1 197 1 120 1 154 1 181 2 368 2 354 2 227 4 127 1 
269 1 185 1 271 1 87 1 206 1 276 1 152 2 347 1 197 1 155 2 368 4 354 3 183 1 227 7 127 1 
185 2 259 1 206 3 87 5 333 1 307 2 142 2 368 12 127 4 293 2 173 1 53 2 269 3 343 2 271 2 10 1 276 1 106 1 152 9 347 2 197 2 301 1 154 2 181 4 155 2 354 11 227 23 200 2 184 1 
368 1 155 1 227 1 
354 1 227 1 347 1 
269 1 185 1 343 1 271 1 206 1 87 2 307 1 152 3 142 1 197 1 120 1 154 1 223 1 181 2 368 3 354 3 227 6 127 1 
185 2 206 2 87 1 307 1 142 1 93 1 368 6 5 1 189 1 127 1 269 2 343 1 271 2 374 1 152 2 347 1 197 2 154 1 281 1 181 2 155 1 354 6 227 12 183 1 357 1 
53 1 269 1 368 3 87 1 206 1 354 3 227 6 127 1 152 2 293 1 184 1 
53 1 343 1 87 1 259 1 106 1 307 1 333 1 152 2 142 1 154 1 181 2 368 2 354 1 227 3 200 1 127 1 293 1 
206 1 259 1 87 2 307 1 333 1 142 1 93 1 368 4 293 1 269 1 53 1 343 1 374 1 152 2 347 1 301 1 154 1 181 2 155 1 354 4 227 8 183 1 184 1 
185 1 206 1 87 2 259 1 333 1 307 2 142 2 120 1 93 1 368 5 127 1 293 1 53 1 269 2 343 2 276 1 374 1 152 3 347 1 197 1 301 1 154 2 181 4 155 2 354 6 227 11 183 1 184 1 
185 2 259 1 206 3 87 3 333 1 307 3 142 3 120 1 93 1 368 10 5 1 189 1 127 1 293 1 53 1 269 3 343 3 271 2 374 1 152 4 347 1 197 2 301 1 154 3 281 1 181 6 155 1 354 9 227 19 183 1 200 1 357 1 184 1 
185 2 259 1 206 2 87 3 333 1 307 3 142 3 120 1 93 1 368 7 5 1 189 1 127 2 293 1 53 1 269 3 343 3 271 1 374 1 152 5 347 1 197 2 301 1 154 3 281 1 181 6 155 1 354 10 200 1 227 17 183 1 357 1 184 1 
206 1 259 1 87 2 307 1 333 1 142 1 93 1 368 4 293 1 269 1 53 1 343 1 374 1 152 2 347 1 301 1 154 1 181 2 155 1 354 4 227 8 183 1 184 1 
185 2 206 2 87 1 307 1 142 1 93 1 368 6 5 1 189 1 127 1 269 2 343 1 271 2 374 1 152 2 347 1 197 2 154 1 281 1 181 2 155 1 354 6 227 12 183 1 357 1 
185 2 259 1 206 2 87 3 333 1 307 4 142 4 120 1 93 1 368 8 5 1 189 1 127 2 293 1 53 1 269 3 343 4 271 1 374 1 152 5 347 1 197 2 301 1 154 4 281 1 181 8 155 1 354 10 227 18 183 1 200 2 357 1 184 1 
185 3 202 1 206 2 87 3 307 4 142 4 93 1 368 7 5 1 189 1 127 3 269 3 343 4 271 2 374 1 152 6 347 1 197 3 154 4 281 1 181 8 155 1 354 9 227 16 183 1 200 2 357 1 
53 3 269 1 206 1 259 2 87 3 333 1 152 6 368 4 354 3 227 7 127 3 293 3 184 1 
185 2 202 1 259 1 206 2 87 3 333 1 307 4 142 4 93 1 368 8 5 1 189 1 127 1 293 1 53 1 269 3 343 4 271 1 374 1 152 4 347 1 197 2 301 1 154 4 281 1 181 8 155 1 354 10 227 18 183 1 200 2 357 1 184 1 
1 1 70 1 195 1 204 1 143 1 268 1 58 1 
294 1 302 1 143 1 331 1 50 1 324 1 
128 1 77 1 114 1 376 1 116 1 39 1 17 1 97 4 145 1 241 1 313 1 242 4 216 4 
56 1 128 1 203 1 346 1 250 1 376 1 39 2 211 1 97 2 145 1 214 1 242 2 216 2 110 1 
280 1 39 1 342 1 17 1 97 1 232 1 158 1 242 1 216 1 376 1 
39 1 128 1 256 1 145 1 97 2 306 1 313 1 161 1 242 2 216 2 376 1 
256 1 128 2 77 1 114 1 346 1 376 2 116 1 108 1 39 2 17 1 378 1 97 4 145 3 313 1 242 5 216 5 
229 1 256 1 128 2 77 1 114 1 346 1 376 2 116 1 39 2 17 1 378 1 97 4 145 3 313 1 242 5 216 5 
17 1 303 1 97 1 242 1 216 1 
128 1 1 2 195 2 204 1 250 1 187 1 376 1 58 1 163 1 39 1 46 1 17 1 48 1 145 1 97 1 242 1 216 1 51 1 
0 1 1 2 204 1 187 1 118 1 163 1 90 2 46 2 48 1 71 1 97 1 145 3 242 1 216 1 51 1 128 2 195 2 246 1 248 1 346 1 250 2 376 1 58 2 39 1 
0 1 1 2 204 1 118 1 163 1 90 2 47 1 46 2 48 1 71 1 97 1 145 3 242 1 216 1 51 1 128 2 195 2 246 1 248 1 346 1 250 2 376 1 58 2 39 1 
140 1 0 1 1 1 286 1 88 1 308 1 90 1 46 1 48 1 166 1 98 1 145 4 97 1 168 1 242 1 75 2 169 2 216 1 128 1 195 1 248 1 277 1 346 1 250 1 375 1 298 1 376 1 58 1 39 1 16 1 82 1 323 1 
140 1 0 1 1 1 286 1 88 1 308 1 90 1 46 1 48 1 98 1 145 4 267 1 97 1 168 1 242 1 75 2 169 2 216 1 128 1 195 1 248 1 277 1 346 1 250 1 375 1 376 1 58 1 39 1 16 1 82 1 323 1 
349 1 39 1 97 1 242 1 216 1 376 1 
341 1 256 1 128 2 250 1 376 2 349 1 334 1 108 1 39 3 378 1 17 2 211 1 97 6 145 3 125 1 313 1 161 1 242 7 201 1 216 7 110 1 
284 1 1 2 186 1 87 2 333 1 187 1 41 2 142 2 46 1 48 1 97 1 145 1 242 1 51 1 293 1 53 1 343 2 195 2 247 1 250 1 152 2 58 1 301 1 154 2 354 3 20 1 259 1 206 1 204 2 115 1 307 2 163 1 209 1 311 1 368 3 313 1 216 1 32 1 269 1 128 1 129 1 35 2 376 1 39 1 181 4 227 6 184 1 
140 1 330 1 141 2 88 1 122 2 238 1 3 1 97 1 267 1 145 2 126 1 168 1 242 1 75 3 169 3 216 1 193 2 105 1 34 1 375 1 17 1 82 1 351 2 159 1 323 2 84 1 135 1 19 1 
128 1 88 1 250 1 376 1 349 1 39 2 97 2 145 2 313 1 31 1 242 2 201 1 216 2 
128 1 1 2 195 2 204 1 250 1 376 1 58 1 163 1 39 1 46 1 47 1 17 1 48 1 145 1 97 1 242 1 216 1 51 1 
128 1 346 1 250 1 376 1 39 2 211 1 97 1 145 1 125 1 242 1 201 1 216 1 110 1 
371 1 1 1 195 1 23 1 345 1 176 1 58 1 107 1 237 1 
188 1 176 1 359 1 
237 1 204 1 212 1 23 1 176 1 
1 1 286 1 308 1 90 1 188 1 46 1 48 1 98 1 126 1 168 1 75 1 169 1 195 1 176 1 277 1 375 1 58 1 38 1 16 1 359 1 
45 1 29 1 226 1 72 1 74 1 2 1 234 1 370 1 
80 1 234 4 236 1 45 3 29 2 92 1 367 1 335 2 226 4 72 2 74 1 283 1 370 1 254 1 
45 1 264 1 29 1 285 1 335 1 226 2 72 1 74 1 2 1 234 2 192 1 370 1 
2 1 234 3 45 1 29 1 367 1 226 3 92 2 72 1 156 1 74 1 283 2 370 1 
45 2 350 1 220 2 153 1 
165 1 226 1 74 1 2 1 234 1 370 1 
45 1 29 1 335 1 226 2 72 1 74 1 296 1 2 1 234 2 370 1 
102 1 
45 1 29 1 226 1 72 1 74 1 2 1 234 1 370 1 
303 1 
45 1 29 1 226 1 72 1 74 1 234 1 370 1 
226 1 369 1 172 1 
36 1 2 1 234 3 45 1 29 1 226 3 367 1 92 1 72 1 74 1 283 2 370 1 
45 1 29 1 335 1 226 2 72 1 62 1 74 1 234 2 370 1 
232 1 2 1 234 1 26 1 45 1 226 1 74 1 158 1 370 1 76 1 254 1 
45 1 226 1 72 1 74 1 2 1 234 1 370 1 
29 1 226 1 72 2 74 1 2 1 234 1 370 1 
45 1 230 1 226 2 72 1 40 1 74 2 2 1 234 2 315 1 370 2 
80 1 2 1 234 1 29 1 226 1 72 1 252 1 74 1 370 1 
232 2 2 1 234 2 278 1 26 1 45 1 280 1 29 1 226 2 335 1 72 1 74 1 158 1 370 1 215 1 
174 1 2 1 234 4 236 1 45 2 29 1 226 4 335 2 72 1 62 1 74 2 370 2 254 1 
2 1 296 1 234 3 45 1 29 1 335 1 226 3 72 1 74 1 283 1 370 1 
45 1 80 1 254 1 236 1 
45 1 72 1 

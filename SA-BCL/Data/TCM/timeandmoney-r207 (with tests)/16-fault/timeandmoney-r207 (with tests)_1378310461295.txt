#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 259 (77,327) (77,327) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 259 (77,327) (77,327) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 259 (77,327) (77,327) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 259 (77,327) (77,327) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 18 224 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 18 224 68 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 255 307 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 123 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 284 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 18 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 269 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3384 | = null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 1 228 1 107 1 254 1 229 1 259 1 11 1 84 1 65 1 327 1 124 1 293 1 70 1 
77 1 228 1 107 1 254 1 229 1 259 1 11 1 84 1 65 1 327 1 124 1 293 1 70 1 
77 1 228 1 107 1 254 1 229 1 259 1 11 1 84 1 65 1 327 1 124 1 293 1 70 1 
77 1 228 1 107 1 254 1 229 1 259 1 11 1 84 1 65 1 327 1 124 1 293 1 70 1 
202 3 183 3 299 1 49 1 107 1 229 1 259 1 11 1 84 4 303 2 286 1 174 1 65 1 175 1 265 1 36 2 124 1 293 4 
183 1 299 1 254 1 53 1 229 1 11 1 84 2 259 1 174 1 213 1 65 1 216 1 149 1 124 1 293 2 70 1 
202 1 183 2 299 1 49 1 229 1 11 2 84 3 174 1 121 1 36 1 124 2 293 3 70 1 
183 5 299 1 49 3 107 1 229 1 11 2 303 2 259 1 158 1 121 1 65 1 265 1 70 1 124 2 17 1 202 7 72 1 84 9 287 1 286 1 174 1 175 1 36 4 293 9 
183 5 299 1 49 3 107 1 229 1 11 2 303 2 259 1 158 1 121 1 65 1 265 1 70 1 124 2 17 1 202 7 72 1 84 9 287 1 286 1 174 1 175 1 36 4 293 9 
269 1 45 1 51 1 
157 1 
212 1 44 2 64 2 21 2 323 1 235 2 147 2 93 2 
100 1 44 2 6 1 110 1 231 1 302 1 192 1 59 2 64 3 120 2 66 1 162 1 235 2 126 1 266 1 131 2 271 1 21 2 76 1 135 1 78 1 170 1 212 1 173 1 32 1 145 1 323 1 324 1 91 2 90 1 325 2 147 2 34 1 93 3 289 1 179 1 38 1 
152 1 154 1 9 1 212 1 44 1 64 1 21 1 235 1 147 1 93 1 
152 1 99 1 42 1 44 1 45 1 51 1 186 1 194 1 64 1 67 1 93 1 96 1 181 1 249 1 
152 1 99 1 42 1 44 1 45 1 21 1 51 1 186 1 194 1 64 1 235 1 147 1 93 1 181 2 249 2 
130 1 185 1 181 1 55 1 249 1 
294 1 45 1 185 1 51 1 181 2 55 1 301 1 249 2 
181 1 55 1 249 1 
152 1 154 1 44 1 185 1 21 1 9 1 212 1 64 1 263 1 235 1 147 1 93 1 181 1 249 1 
51 1 
45 1 273 1 185 1 51 1 181 2 55 1 301 1 249 2 
45 1 272 2 46 1 132 1 185 2 315 1 51 1 256 1 301 1 191 1 55 2 8 1 281 1 85 2 119 1 237 2 181 5 249 5 182 1 
269 1 323 1 
44 2 167 1 21 1 64 2 323 2 235 1 147 1 93 2 151 1 
24 1 218 1 279 1 
102 1 131 1 135 1 78 1 59 1 192 1 173 1 64 1 32 1 323 1 66 1 162 1 325 1 90 1 93 1 289 1 
131 1 44 1 135 1 78 1 112 1 192 1 59 1 304 1 173 1 64 2 32 1 66 1 162 1 90 1 325 1 235 1 218 1 147 1 289 1 93 2 
304 1 44 3 21 1 64 3 323 1 235 3 147 3 93 3 
152 1 154 1 44 1 64 1 235 1 147 1 93 1 
152 1 44 1 167 1 64 1 21 1 235 1 147 1 93 1 151 1 
152 1 99 1 42 1 44 3 6 1 186 1 110 1 112 1 231 1 302 1 192 1 59 1 304 1 194 1 64 4 120 1 66 1 162 1 235 3 131 1 21 2 135 1 78 1 170 1 172 1 212 1 173 1 32 1 145 1 323 1 324 1 91 2 90 1 325 1 176 1 147 3 34 1 289 1 93 4 181 1 179 1 249 1 38 1 151 1 
304 1 44 2 184 1 64 2 323 1 235 1 147 1 93 2 96 1 
152 1 99 1 71 1 42 1 44 3 21 1 51 1 186 1 112 1 304 2 194 1 64 3 235 3 176 1 147 3 93 3 181 1 249 1 151 1 
44 2 21 1 24 1 304 1 64 2 235 2 147 2 218 1 93 2 151 1 
131 1 135 1 78 1 59 1 192 1 173 1 64 1 32 1 323 1 66 1 325 1 90 1 162 1 93 1 289 1 
223 1 131 1 135 1 56 1 59 1 192 1 173 1 64 1 32 1 323 1 325 1 90 1 162 1 93 1 289 1 
100 2 101 1 103 1 6 1 110 1 230 1 189 1 156 1 231 1 302 1 10 1 14 1 120 4 203 1 277 1 24 2 279 2 211 1 143 1 91 2 324 2 218 2 34 1 38 1 
152 1 99 1 296 1 44 1 64 1 235 1 147 1 93 1 
44 5 184 1 21 1 136 1 137 1 112 1 304 2 64 5 323 1 235 4 147 4 93 5 96 1 151 1 
152 1 154 1 296 1 44 2 64 2 235 2 147 2 93 2 
232 1 262 1 
232 1 262 1 
214 1 37 1 
214 1 37 1 
214 1 37 1 
117 1 232 1 262 1 
232 1 29 1 262 1 
232 2 320 1 262 2 214 1 208 1 37 1 
117 1 232 1 262 1 
117 1 232 1 262 1 
250 1 232 1 262 1 
250 1 232 1 262 1 
250 1 232 1 262 1 
18 1 232 1 224 1 195 1 262 1 50 1 
18 1 232 1 224 1 195 1 262 1 50 1 68 1 181 1 249 1 
259 1 65 1 107 1 
259 1 65 1 149 1 
142 1 322 1 107 2 65 3 207 1 149 1 
142 1 227 1 107 1 65 2 207 1 149 1 
142 2 107 1 65 2 207 1 149 1 
103 1 45 1 185 4 104 1 51 1 189 1 188 1 55 1 301 1 8 3 157 2 61 1 119 2 163 1 237 1 268 1 314 2 272 1 75 2 315 1 276 1 277 1 79 1 211 1 85 1 146 1 291 1 181 5 221 2 249 5 150 1 
152 1 154 1 155 1 44 1 45 1 185 2 51 1 300 1 55 1 257 1 9 1 64 1 263 1 235 1 130 1 21 1 212 1 147 1 93 1 181 2 249 2 
152 1 154 1 44 1 45 1 185 2 104 1 51 2 189 1 8 1 9 1 61 1 157 2 64 1 119 2 263 1 235 1 237 1 314 1 272 1 21 1 75 1 276 1 79 1 281 1 211 1 212 1 85 1 88 1 146 1 147 1 93 1 181 3 291 1 249 3 221 1 
185 3 104 1 189 2 8 1 9 1 119 4 263 1 272 1 21 1 276 2 281 1 211 2 212 1 146 1 147 1 291 2 221 2 152 1 154 1 44 1 45 1 51 3 61 1 157 4 64 1 234 1 235 1 237 1 313 1 314 2 75 2 168 1 79 1 85 1 88 2 93 1 181 4 249 4 
83 1 269 1 162 1 
3 1 162 1 
159 1 
192 1 162 1 
192 1 83 2 260 1 159 1 90 1 162 3 329 1 
192 1 162 1 90 1 
162 1 109 1 
0 1 203 3 100 4 103 1 206 1 134 2 106 1 189 1 10 2 144 1 196 1 120 7 324 3 247 1 326 1 215 1 248 1 
0 1 203 3 100 4 103 1 206 1 134 2 106 1 189 1 10 2 144 1 196 1 120 7 324 3 247 1 326 1 215 1 248 1 
0 1 203 3 100 4 103 1 206 1 226 1 134 2 106 1 189 1 10 2 144 1 196 1 120 7 324 3 326 1 247 1 215 1 248 1 
0 3 100 8 103 1 110 1 189 2 54 1 231 1 258 1 302 1 60 2 10 1 306 1 120 14 196 1 240 1 127 1 203 4 206 1 134 1 277 1 316 1 211 2 144 2 247 1 91 2 324 6 215 1 217 2 34 1 180 1 291 2 
0 1 100 5 103 1 106 1 110 2 189 1 231 2 114 1 302 2 258 1 10 3 120 9 196 1 16 1 203 4 206 1 134 2 144 1 91 4 324 4 326 1 215 1 248 1 34 2 
295 1 183 1 299 1 107 1 229 1 59 1 259 1 11 1 160 1 13 1 233 1 65 2 264 1 267 1 124 1 70 1 200 1 312 1 202 1 204 1 131 1 80 1 84 2 173 1 322 1 174 1 325 1 289 1 149 1 293 2 
295 1 183 1 299 1 107 1 59 1 259 1 11 1 160 1 13 1 233 1 65 2 264 1 238 1 267 1 124 1 70 1 312 1 202 2 204 1 131 1 81 1 84 3 317 1 173 1 322 1 174 1 325 1 289 1 149 1 293 3 
183 1 299 1 107 1 59 1 259 1 160 1 233 1 65 2 264 1 238 1 70 1 267 1 312 1 202 2 204 1 131 1 81 1 84 2 173 1 322 1 174 1 325 1 289 1 149 1 293 2 
2 1 253 1 192 1 59 1 11 1 12 1 261 1 160 2 162 1 241 1 124 1 267 2 70 2 128 1 204 2 131 1 20 1 133 1 209 1 280 1 84 1 317 1 173 2 32 1 90 1 325 1 177 1 289 1 293 1 
295 1 107 1 229 1 59 1 259 1 11 1 160 1 13 1 233 1 65 2 264 1 267 1 124 1 70 1 200 1 312 1 204 1 131 1 81 1 84 1 173 1 322 1 325 1 289 1 149 1 293 1 
169 1 
153 1 104 1 253 1 55 2 301 1 192 1 59 2 8 1 12 1 261 1 161 1 119 1 162 1 237 1 131 2 272 1 133 1 315 1 173 2 85 1 32 2 90 1 325 2 177 1 289 1 35 1 181 2 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 273 1 186 1 255 1 25 1 111 1 301 1 55 1 194 1 64 1 246 1 307 1 67 1 93 1 181 3 310 1 96 1 249 3 
152 1 99 1 42 1 44 1 272 1 315 1 186 1 255 1 25 1 111 1 194 1 85 1 64 1 246 1 307 1 67 1 237 1 93 1 96 1 181 2 310 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 186 1 255 1 25 1 111 1 194 1 246 1 64 1 307 1 67 1 93 1 181 2 310 1 96 1 249 2 
152 1 99 1 42 1 44 1 272 1 315 1 186 1 255 1 25 1 111 1 194 1 85 1 64 1 246 1 307 1 67 1 237 1 93 1 96 1 181 2 310 1 249 2 
101 1 100 3 103 1 106 1 6 1 110 1 189 1 231 1 302 1 10 2 120 6 203 2 269 1 206 1 134 1 24 1 279 1 323 2 326 1 91 2 324 3 215 1 218 1 248 1 34 1 38 1 
0 2 100 13 103 3 108 1 6 2 110 2 189 4 231 2 302 2 60 4 120 24 236 1 127 2 203 2 271 1 274 1 277 3 24 5 279 17 316 2 211 4 145 1 323 1 324 11 91 4 217 4 218 17 148 1 34 2 180 1 291 4 38 1 
102 1 298 1 100 1 44 1 6 1 110 1 112 1 231 1 192 1 59 1 302 1 304 1 193 1 64 2 120 2 66 1 162 1 235 1 131 1 73 1 271 1 274 1 135 1 78 1 24 1 173 1 32 1 145 1 323 1 90 1 325 1 91 2 324 1 147 1 289 1 93 2 34 1 38 1 
44 1 6 1 110 1 112 1 231 1 302 1 59 1 304 1 64 1 120 1 235 1 123 1 131 1 274 1 32 1 145 1 91 2 325 1 324 1 147 1 93 1 34 1 38 1 
100 1 253 1 6 1 110 1 231 1 192 1 59 2 302 1 12 1 261 1 120 2 162 1 308 1 126 1 131 2 271 1 133 1 173 2 31 1 32 1 145 1 90 1 325 2 91 2 324 1 177 1 289 1 34 1 38 1 
100 1 44 1 6 1 110 1 189 1 231 1 302 1 64 1 120 1 235 1 21 1 274 1 211 1 285 1 91 2 147 1 34 1 93 1 291 1 151 1 38 1 
0 1 203 1 101 1 100 2 6 1 24 1 110 1 230 1 189 1 279 1 231 1 302 1 211 1 120 2 91 2 218 1 34 1 38 1 
203 1 101 1 103 1 277 1 6 1 24 1 110 1 156 1 279 1 231 1 302 1 10 1 120 2 91 2 324 2 218 1 34 1 38 1 
101 1 100 2 6 1 24 1 110 1 189 1 279 1 231 1 302 1 211 1 120 2 91 2 218 1 34 1 291 1 38 1 
0 1 203 1 100 2 6 1 24 1 110 1 230 1 189 1 279 1 231 1 302 1 211 1 120 2 91 2 308 1 218 1 34 1 38 1 
203 1 103 1 277 1 6 1 24 1 110 1 156 1 279 1 231 1 302 1 10 1 120 2 91 2 324 2 308 1 218 1 34 1 38 1 
100 2 6 1 24 1 110 1 189 1 279 1 231 1 302 1 211 1 120 2 91 2 308 1 218 1 34 1 291 1 38 1 
100 2 6 1 24 1 110 1 189 1 279 1 231 1 302 1 211 1 120 2 91 2 218 1 34 1 291 1 38 1 
100 1 6 1 110 1 231 1 192 1 59 1 302 1 64 1 120 2 66 1 162 1 131 1 271 1 135 1 78 1 170 1 173 1 32 1 145 1 323 1 90 1 325 1 91 2 324 1 289 1 93 1 34 1 38 1 
223 1 1 1 100 1 6 1 110 1 56 1 231 1 192 1 59 1 302 1 64 1 120 2 162 1 131 1 271 1 135 1 173 1 32 1 145 1 323 1 90 1 325 1 91 2 324 1 289 1 93 1 34 1 38 1 
100 2 274 1 6 1 24 1 110 1 189 1 279 1 231 1 302 1 211 1 120 2 91 2 218 1 34 1 291 1 38 1 
100 2 6 1 110 1 189 1 231 1 59 1 192 1 302 1 64 1 120 2 66 1 162 1 131 1 135 1 23 1 78 1 24 1 80 1 279 1 170 1 211 1 173 1 90 1 325 1 91 2 218 1 289 1 93 1 34 1 291 1 38 1 
100 2 44 1 103 1 6 1 110 1 189 1 231 1 302 1 64 1 120 3 235 1 21 1 274 1 277 1 279 1 211 1 89 1 324 1 91 2 147 1 218 1 34 1 93 1 291 1 151 1 38 1 
39 1 0 5 41 1 100 21 103 3 110 2 189 7 231 2 57 1 302 2 60 4 120 34 239 1 69 2 16 1 127 2 201 1 203 5 277 3 82 1 316 2 211 7 319 1 321 1 91 4 324 13 178 1 92 1 217 4 94 1 34 2 180 2 291 7 222 1 292 1 
39 1 41 1 100 9 103 1 110 1 189 2 231 1 57 1 302 1 60 2 120 16 69 2 239 1 16 1 201 1 277 1 210 1 82 2 211 2 319 2 324 7 91 2 178 1 217 2 92 1 34 1 180 2 291 2 222 1 292 1 
39 1 0 6 41 1 100 22 103 4 110 2 189 7 231 2 57 1 302 2 60 4 120 38 239 1 69 3 16 1 127 2 201 1 203 6 277 4 210 1 82 1 316 2 211 7 319 1 321 1 91 4 324 16 178 1 92 1 217 4 34 2 180 2 291 7 222 1 292 1 
39 1 0 5 41 1 100 22 103 3 110 2 189 7 231 2 57 1 302 2 60 4 120 36 239 1 69 3 16 1 127 2 201 1 203 5 277 3 210 1 82 1 316 2 211 7 319 1 321 1 91 4 324 14 178 1 92 1 217 4 34 2 180 2 291 7 222 1 292 1 
39 1 0 5 41 1 100 22 103 3 110 1 189 7 231 1 57 1 302 1 60 4 120 36 239 1 69 3 16 1 127 2 201 1 203 5 277 3 210 1 82 1 316 2 211 7 319 1 91 2 324 14 178 1 92 1 217 4 34 1 180 2 291 7 222 1 292 1 
100 1 43 1 44 2 252 1 6 1 110 1 231 1 192 1 302 1 59 2 64 2 120 2 198 1 162 1 126 2 242 1 131 2 271 1 274 1 139 1 27 1 173 1 31 1 145 1 325 2 91 2 324 1 289 1 93 2 34 1 38 1 
312 1 295 1 131 2 270 1 107 1 81 1 80 1 59 2 259 1 171 1 173 1 322 1 15 1 65 2 325 2 264 1 289 1 149 1 267 1 
312 1 295 1 131 1 107 1 81 1 278 1 59 1 259 1 173 1 322 1 15 1 65 2 325 1 264 1 289 1 149 1 267 1 
5 1 253 1 59 1 192 1 12 1 261 1 162 1 267 1 128 1 131 1 133 1 20 1 171 1 173 2 32 1 325 1 90 1 177 1 289 1 
312 1 295 1 131 1 270 1 107 1 81 1 59 1 259 1 171 1 173 1 322 1 15 1 65 2 325 1 264 1 289 1 149 1 267 1 
118 1 
8 1 269 1 45 1 132 1 119 1 51 1 256 1 
45 1 105 1 52 1 51 1 301 1 55 1 8 1 157 1 119 1 237 1 272 1 315 1 85 1 88 1 219 1 181 1 249 1 
97 1 131 1 272 1 3 1 315 1 192 1 59 1 284 1 173 2 85 1 32 1 162 2 90 1 325 1 237 1 289 1 329 1 
39 1 189 2 8 2 60 1 157 2 119 4 237 1 239 1 272 1 75 3 315 1 211 2 85 1 217 1 92 1 178 1 180 1 291 2 221 3 292 1 
152 1 154 1 251 2 44 1 225 1 103 1 189 2 8 2 9 1 62 1 64 1 119 2 263 1 235 1 237 1 206 1 272 1 21 1 315 1 140 1 212 1 85 1 215 1 248 1 147 1 93 1 181 1 249 1 
272 1 45 1 132 1 315 1 51 1 256 1 8 1 85 1 119 1 237 1 
103 1 75 2 277 1 189 1 8 2 211 1 157 2 119 2 291 1 221 2 
45 1 51 1 181 1 249 1 55 1 301 1 
153 1 98 1 104 1 253 1 55 2 301 1 192 1 59 2 8 1 12 1 261 1 161 1 119 1 162 1 237 1 131 2 272 1 133 1 315 1 173 2 85 1 32 2 90 1 325 2 177 1 289 1 35 1 181 1 249 1 
44 2 6 1 110 1 231 1 302 1 59 1 192 1 64 3 120 1 66 1 162 1 235 2 131 1 21 2 135 1 78 1 170 1 212 1 173 1 32 1 145 1 323 1 324 1 91 2 325 1 90 1 147 2 34 1 93 3 289 1 179 1 38 1 
153 1 272 1 45 1 104 1 315 1 51 1 8 1 157 1 85 1 119 1 237 1 221 1 
18 1 195 1 
18 1 195 1 
18 1 195 1 
18 1 195 1 
18 1 195 1 
18 1 195 1 
18 1 195 1 
18 1 195 1 
232 1 262 1 
0 1 203 3 100 4 103 1 206 1 134 1 106 1 110 2 189 1 231 2 302 2 258 1 10 2 120 8 324 4 91 4 326 1 215 1 248 1 34 2 
203 2 100 3 269 1 206 1 103 1 134 1 106 1 189 1 10 2 120 6 324 3 326 1 215 1 248 1 
100 2 7 1 110 1 189 1 231 1 302 1 211 1 120 2 91 2 34 1 291 1 
127 1 0 1 203 1 100 6 103 1 277 1 189 2 316 1 60 2 211 2 120 10 324 4 217 2 180 1 291 2 
0 5 100 14 103 2 106 1 108 1 110 2 189 4 54 1 231 2 258 2 302 2 60 2 10 5 120 26 127 1 203 10 206 4 134 1 140 1 316 1 211 2 324 12 91 4 326 1 215 4 217 2 248 2 34 2 291 2 
120 1 324 1 217 1 
60 1 100 1 120 1 
0 1 203 1 100 3 189 1 211 1 120 4 324 1 309 1 291 1 
39 1 0 1 100 6 110 1 189 2 231 1 302 1 60 1 120 8 239 1 16 1 203 1 211 2 324 2 91 2 217 1 92 1 178 1 34 1 180 1 291 2 292 1 
0 1 203 2 100 3 103 1 206 1 189 1 10 1 120 6 324 3 215 1 248 1 
0 1 203 2 100 1 206 1 106 1 110 1 54 1 231 1 258 1 302 1 10 1 120 3 326 1 324 2 91 2 215 1 34 1 
0 2 203 5 100 5 206 2 103 2 110 1 189 2 140 1 231 1 302 1 10 3 120 10 91 2 324 5 215 2 248 1 34 1 16 1 
0 1 203 1 100 2 110 1 189 1 231 1 302 1 211 1 120 2 91 2 34 1 16 1 
0 1 203 1 100 2 103 1 277 1 110 1 189 1 231 1 302 1 211 1 120 4 324 2 91 2 34 1 16 1 291 1 
0 1 203 2 100 1 206 1 110 3 54 1 231 3 258 1 302 3 10 1 321 1 120 3 324 2 91 6 215 1 34 3 16 1 
0 4 100 12 103 3 106 1 7 1 110 4 54 1 189 4 231 4 258 1 302 4 60 2 10 3 120 23 16 1 240 1 127 1 203 7 206 2 277 1 140 1 316 1 211 2 321 1 326 1 324 11 91 8 215 2 217 2 248 1 34 4 180 1 291 2 
39 1 0 1 100 11 103 2 110 1 189 4 231 1 302 1 60 2 120 18 239 1 16 1 127 1 203 1 277 2 316 1 211 4 324 7 91 2 178 1 92 1 217 2 34 1 180 1 291 4 292 1 
39 1 0 2 100 11 103 3 110 2 7 1 189 4 231 2 302 2 60 2 120 20 239 1 16 1 127 1 203 2 277 3 316 1 211 4 324 9 91 4 178 1 92 1 217 2 34 2 180 1 291 4 292 1 
39 1 0 1 100 6 110 2 7 1 189 2 231 2 302 2 60 1 120 8 239 1 16 1 203 1 211 2 324 2 91 4 217 1 92 1 178 1 34 2 180 1 291 2 292 1 
39 1 100 6 103 1 110 2 7 1 189 2 231 2 302 2 60 1 120 10 239 1 16 1 277 1 211 2 324 4 91 4 217 1 92 1 178 1 34 2 180 1 291 2 292 1 
39 1 0 1 100 11 103 2 110 1 189 4 231 1 302 1 60 2 120 18 239 1 16 1 127 1 203 1 277 2 316 1 211 4 324 7 91 2 178 1 92 1 217 2 34 1 180 1 291 4 292 1 
39 1 0 1 100 6 110 1 189 2 231 1 302 1 60 1 120 8 239 1 16 1 203 1 211 2 324 2 91 2 217 1 92 1 178 1 34 1 180 1 291 2 292 1 
39 1 100 6 103 1 7 1 110 2 189 2 231 2 302 2 60 1 120 10 239 1 16 1 277 1 211 2 324 4 91 4 217 1 92 1 178 1 34 2 180 1 291 2 292 1 
39 1 0 1 100 6 103 1 110 2 189 2 231 2 302 2 60 1 120 10 239 1 16 1 203 1 277 1 211 2 321 1 324 4 91 4 217 1 92 1 178 1 34 2 180 1 291 2 292 1 
0 3 203 6 100 3 103 1 206 3 106 1 189 1 10 3 120 7 324 4 326 2 215 3 248 1 
39 1 100 6 103 1 110 2 189 2 231 2 302 2 60 1 120 10 239 1 16 1 277 1 211 2 321 1 324 4 91 4 217 1 92 1 178 1 34 2 180 1 291 2 292 1 
115 1 44 1 184 1 64 1 323 1 93 1 96 1 
40 1 44 1 184 1 115 1 283 1 305 1 86 1 64 1 323 1 93 1 96 1 165 1 
59 1 131 1 269 1 133 1 32 1 325 1 
131 1 44 1 135 1 78 1 192 1 59 1 304 1 173 1 64 2 32 1 323 1 162 1 90 1 325 1 235 1 147 1 93 2 289 1 
152 1 99 1 42 1 131 1 44 2 135 1 109 1 78 1 192 2 58 1 59 1 304 1 116 1 173 1 64 2 323 1 162 3 90 2 325 1 235 2 147 1 93 2 289 1 
152 1 223 1 99 1 42 1 131 2 44 2 4 1 135 1 109 1 192 2 58 1 59 2 304 1 116 1 173 1 64 2 323 1 162 3 90 2 325 2 235 2 147 1 93 2 289 1 
45 1 4 1 3 1 51 1 109 1 186 1 55 1 59 3 58 1 192 1 116 1 162 4 131 3 275 1 83 1 173 1 32 1 33 1 325 3 90 1 289 1 181 2 249 2 
131 3 45 1 4 1 3 1 51 1 109 1 186 1 55 1 192 1 58 1 59 3 83 1 116 1 173 1 32 1 90 1 325 3 162 4 289 1 181 2 249 2 199 1 
59 1 131 1 173 1 47 1 325 1 289 1 
131 7 47 1 22 1 81 1 80 1 190 1 59 6 192 2 12 1 173 3 32 2 288 1 198 1 325 7 90 1 162 3 177 1 289 2 95 1 126 1 329 1 
100 3 103 1 106 1 6 2 110 2 189 1 192 1 10 2 120 6 203 2 131 1 206 1 274 1 23 1 135 1 134 1 24 1 139 1 279 1 215 1 147 1 218 1 34 2 289 1 38 2 44 1 231 2 59 1 302 2 304 1 64 2 66 1 162 1 235 1 78 1 245 1 80 1 170 1 173 1 323 2 325 1 91 4 90 1 326 1 324 3 248 1 93 2 
98 1 45 1 185 1 3 1 48 1 51 1 186 1 256 1 55 2 301 1 8 1 59 1 119 1 162 2 237 2 199 1 131 1 272 2 132 1 315 2 138 1 83 1 85 2 32 1 325 1 181 3 290 1 249 3 
97 1 131 2 47 1 80 1 59 2 192 1 83 1 173 2 325 2 90 1 162 2 289 1 329 1 
131 2 133 1 253 1 80 1 192 1 59 2 12 1 173 2 261 1 32 1 162 1 90 1 325 2 177 1 289 1 
131 2 253 1 58 1 59 2 192 1 12 1 261 1 173 2 325 2 90 1 162 1 177 1 328 1 289 1 
312 1 59 1 259 1 131 1 173 1 32 1 65 1 325 1 289 1 149 1 
242 1 131 2 80 1 81 1 59 2 192 1 173 1 198 1 325 2 162 1 289 1 
253 1 192 2 59 2 12 1 261 1 198 1 162 3 131 3 133 1 80 1 173 3 32 1 288 1 325 3 90 1 177 1 289 2 95 1 
253 1 192 2 59 2 12 1 261 1 198 1 162 3 131 3 244 1 133 1 80 1 173 3 32 1 288 1 325 3 90 1 177 1 289 2 
223 1 131 1 44 1 135 1 192 1 59 1 304 1 173 1 64 2 32 1 323 1 162 1 90 1 325 1 235 1 147 1 93 2 289 1 
131 1 190 1 58 1 59 1 192 1 12 1 173 2 325 1 90 1 162 1 177 1 289 1 329 1 
43 1 44 1 252 1 141 1 27 1 113 1 282 1 64 1 93 1 
113 1 205 1 74 1 
113 1 282 1 87 1 323 1 141 1 
152 1 99 1 42 1 19 1 205 1 74 1 45 1 185 1 51 1 186 1 141 2 113 1 282 2 194 1 87 2 323 1 176 1 181 2 249 2 
183 1 269 1 299 1 174 1 
84 1 11 1 183 1 299 1 174 1 293 1 124 1 
160 1 70 1 293 1 
183 1 299 1 187 1 229 1 11 1 84 3 28 1 30 1 174 1 216 2 124 1 293 3 
202 1 303 1 84 2 11 1 183 1 299 1 174 1 293 2 124 1 
183 1 107 1 229 1 11 1 84 1 259 1 286 1 65 1 36 1 124 1 293 1 
84 1 11 1 183 1 174 1 229 1 293 1 124 1 
84 1 11 1 299 1 174 2 229 1 293 1 124 1 
84 2 11 2 183 1 166 1 197 1 174 1 229 1 293 2 124 2 125 1 
202 2 183 2 72 1 299 1 49 1 229 1 11 1 84 3 158 1 174 1 36 1 124 1 293 3 
202 1 243 1 183 1 299 1 107 1 229 1 11 1 84 2 259 1 322 1 174 1 65 2 149 1 124 1 293 2 
202 2 183 2 299 1 49 1 229 1 11 2 84 4 303 1 174 1 175 1 36 1 124 2 293 4 
84 1 11 1 183 1 299 1 174 1 229 1 293 1 124 1 
202 2 183 3 299 2 49 1 28 1 84 4 11 1 30 1 318 1 174 2 216 1 36 1 293 4 124 1 
202 1 84 2 11 1 183 1 287 1 299 1 174 1 220 1 229 1 311 1 293 2 124 1 
28 2 84 3 11 1 183 1 30 1 63 1 299 1 174 1 216 2 229 1 293 3 124 1 
129 1 183 2 297 2 164 1 
84 1 11 1 229 1 26 1 293 1 124 1 
202 1 84 2 11 1 183 1 158 1 299 1 174 1 229 1 293 2 124 1 
122 1 
84 1 11 1 183 1 299 1 174 1 229 1 293 1 124 1 
202 1 84 3 11 1 183 1 158 1 299 1 174 1 216 1 229 1 293 3 124 1 
183 1 318 1 49 1 36 1 
183 1 174 1 

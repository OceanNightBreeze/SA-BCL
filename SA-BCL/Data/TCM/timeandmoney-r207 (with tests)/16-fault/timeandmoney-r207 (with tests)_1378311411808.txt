#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (210,326) (210,326) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (210,326) (210,326) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (210,326) (210,326) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (210,326) (210,326) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 160 19 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 4 239 173 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 4 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 4 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 310 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 4 239 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 4 239 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 110 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 227 238 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 227 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 227 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 227 238 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 227 238 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 115 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 0
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | STATEMENT | 698 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
319 1 200 1 291 1 192 1 277 1 326 1 63 1 244 1 209 1 329 1 210 1 
319 1 200 1 291 1 192 1 277 1 326 1 63 1 244 1 209 1 329 1 210 1 
319 1 200 1 291 1 192 1 277 1 326 1 63 1 244 1 209 1 329 1 210 1 
319 1 200 1 291 1 192 1 277 1 326 1 63 1 244 1 209 1 329 1 210 1 
32 1 291 1 216 2 180 1 142 1 53 1 244 1 166 3 41 2 192 1 224 1 277 4 226 1 283 1 103 1 329 4 305 1 82 3 
32 1 291 1 180 1 244 1 273 1 166 1 73 1 187 1 192 1 200 1 224 1 277 2 283 1 63 1 129 1 329 2 
32 1 291 2 216 1 235 1 53 1 244 2 166 2 192 1 200 1 224 1 277 3 329 3 82 1 
49 1 291 2 216 4 254 1 179 1 142 1 180 1 53 3 192 1 224 1 226 1 101 1 103 1 305 1 32 1 235 1 244 2 166 5 41 2 200 1 277 9 283 1 329 9 82 7 
49 1 291 2 216 4 254 1 179 1 142 1 180 1 53 3 192 1 224 1 226 1 101 1 103 1 305 1 32 1 235 1 244 2 166 5 41 2 200 1 277 9 283 1 329 9 82 7 
297 1 43 1 270 1 
270 1 196 1 106 2 
16 2 17 2 79 2 220 1 263 2 113 2 199 2 28 1 
178 1 140 1 86 1 220 1 185 1 55 1 148 1 58 1 149 1 16 3 17 2 153 1 261 1 100 1 300 2 23 1 263 2 303 1 265 1 307 2 29 1 28 1 267 1 33 1 71 1 72 2 198 1 113 3 199 2 75 1 118 1 170 1 171 1 324 2 79 2 281 2 327 1 288 1 176 1 
16 1 17 1 79 1 125 1 263 1 163 1 113 1 148 1 199 1 28 1 
68 1 1 1 16 1 43 1 270 1 123 1 183 1 175 1 263 1 113 1 114 1 233 1 148 1 306 1 
1 1 68 1 270 1 183 2 113 1 199 1 148 1 16 1 17 1 43 1 79 1 123 1 263 1 175 2 306 1 
234 1 204 1 183 1 175 1 46 1 
43 1 270 1 204 1 109 1 183 2 175 2 246 1 46 1 
204 1 183 1 175 1 
183 1 255 1 163 1 113 1 148 1 199 1 16 1 17 1 79 1 125 1 175 1 263 1 46 1 28 1 
270 1 
43 1 270 1 204 1 183 2 126 1 175 2 246 1 46 1 
266 1 5 1 151 1 204 2 301 1 183 5 175 5 246 1 46 2 317 1 
150 1 281 1 72 1 300 1 265 1 
297 1 220 1 
220 2 113 2 199 1 76 1 16 2 17 1 202 1 79 1 263 2 
35 1 286 1 54 1 
33 1 178 1 219 1 72 1 220 1 185 1 113 1 55 1 75 1 58 1 16 1 261 1 281 1 300 1 265 1 176 1 
16 3 17 1 79 3 44 1 220 1 263 3 113 3 199 3 
16 1 79 1 125 1 263 1 113 1 148 1 199 1 
76 1 16 1 17 1 202 1 79 1 263 1 113 1 148 1 199 1 
16 1 17 1 202 1 150 1 79 1 263 1 113 1 199 1 
16 2 217 1 79 1 44 1 220 1 263 2 114 1 113 2 199 1 
150 1 
35 1 113 2 199 2 16 2 17 1 202 1 79 2 44 1 286 1 263 2 
33 1 178 1 72 1 220 1 185 1 113 1 55 1 75 1 58 1 16 1 261 1 281 1 300 1 265 1 176 1 
33 1 178 1 72 1 220 1 113 1 55 1 75 1 58 1 16 1 323 1 225 1 281 1 300 1 265 1 176 1 
135 1 137 1 140 1 253 1 54 2 149 2 153 2 60 1 302 1 23 1 64 1 105 1 27 1 26 1 29 1 307 4 107 1 267 1 71 1 35 2 167 1 171 1 324 2 286 2 
68 1 16 1 79 1 89 1 263 1 113 1 148 1 199 1 
220 1 113 2 148 1 199 2 170 1 16 2 17 1 150 1 202 1 79 2 44 1 263 2 
16 2 79 2 89 1 125 1 263 2 113 2 148 1 199 2 
99 1 39 1 
99 1 39 1 
308 1 304 1 
308 1 304 1 
308 1 304 1 
99 1 232 1 39 1 
78 1 99 1 39 1 
308 1 136 1 14 1 99 2 304 1 39 2 
99 1 232 1 39 1 
99 1 232 1 39 1 
48 1 99 1 39 1 
48 1 99 1 39 1 
48 1 99 1 39 1 
69 2 136 1 197 1 236 3 270 1 183 2 91 2 221 1 39 2 320 1 168 2 18 1 21 2 99 2 154 1 230 2 175 2 104 1 25 1 
69 1 251 1 236 1 271 1 183 1 220 1 91 1 113 2 199 2 39 1 259 1 168 1 16 2 42 1 78 1 152 1 79 2 154 1 99 1 124 1 230 1 287 1 263 2 175 1 
180 1 142 1 283 1 
180 1 283 1 129 1 
159 1 142 2 283 3 129 1 90 1 67 1 
142 1 34 1 283 2 129 1 90 1 67 1 
142 1 283 2 129 1 90 2 67 1 
252 1 5 1 160 1 270 1 183 4 246 1 38 1 43 1 204 1 175 4 264 1 46 3 47 1 
234 1 84 1 5 1 85 1 160 1 270 1 183 4 246 1 43 1 260 1 204 2 175 4 46 3 47 1 
252 1 160 1 301 1 183 2 175 2 38 1 46 1 
252 1 160 1 19 1 301 1 183 1 175 1 38 1 
297 1 293 1 75 1 
36 1 75 1 
203 1 
55 1 75 1 
178 1 293 2 55 1 164 1 75 2 94 1 203 1 
178 1 55 1 75 1 
139 1 75 1 
0 1 135 2 3 1 218 1 149 4 98 1 153 5 66 1 105 2 307 9 107 4 272 1 314 1 112 1 167 3 120 1 206 2 207 2 
0 1 135 2 3 1 218 1 149 4 98 1 153 5 66 1 105 2 307 9 107 6 272 1 314 3 112 1 167 3 120 1 206 2 207 2 
0 1 135 2 3 1 218 1 149 4 98 1 153 5 66 1 105 2 307 9 108 1 107 4 272 1 314 1 112 1 167 3 120 1 206 2 207 2 
0 2 135 5 215 1 3 2 218 1 253 3 140 1 295 3 186 4 149 17 98 1 299 1 153 18 229 1 302 3 22 1 66 1 105 5 29 1 307 35 107 13 71 1 272 2 314 7 112 1 318 1 167 6 171 1 324 2 120 1 121 1 207 3 206 3 127 1 134 3 
0 1 135 2 3 1 218 1 140 2 12 1 149 5 98 1 299 1 153 6 105 2 66 1 30 1 29 2 307 11 107 6 71 2 272 1 314 2 167 4 171 2 324 4 120 1 206 2 207 2 
212 1 213 1 291 1 180 1 142 1 145 1 51 1 190 1 192 1 58 1 224 1 300 1 32 1 159 1 72 1 244 1 166 1 274 1 200 1 277 2 249 1 281 1 122 1 283 2 328 1 129 1 329 2 330 1 176 1 82 1 
212 1 213 1 291 1 2 1 180 1 142 1 51 1 8 1 190 1 58 1 224 1 300 1 32 1 159 1 72 1 313 1 244 1 166 1 274 1 200 1 277 3 249 1 281 1 122 1 283 2 328 1 129 1 329 3 176 1 82 2 
212 1 213 1 142 1 180 1 8 1 190 1 58 1 224 1 300 1 32 1 159 1 72 1 313 1 166 1 274 1 200 1 277 2 249 1 281 1 283 2 328 1 129 1 329 2 176 1 82 2 
213 2 291 1 2 1 55 1 296 1 58 1 191 1 300 1 65 1 265 1 72 1 244 1 74 1 75 1 274 2 200 2 277 1 119 1 249 2 281 1 285 1 329 1 176 1 
212 1 213 1 291 1 180 1 142 1 145 1 51 1 190 1 192 1 58 1 300 1 159 1 72 1 313 1 244 1 274 1 200 1 277 1 249 1 281 1 122 1 283 2 328 1 129 1 329 1 176 1 
143 1 
5 1 281 1 72 1 300 1 183 1 175 1 265 1 
1 1 88 1 183 3 147 1 148 1 16 1 263 1 233 1 306 1 68 1 240 1 162 1 246 1 113 1 114 1 40 2 204 2 123 1 126 1 175 3 174 1 131 1 
1 1 7 1 88 1 183 3 148 1 16 1 263 1 233 1 306 1 68 1 270 1 240 1 162 1 246 1 113 1 114 1 40 3 43 1 204 1 123 1 126 1 175 3 174 1 131 1 
1 1 7 1 88 1 183 3 182 1 147 1 148 1 16 1 263 1 233 1 306 1 68 1 270 1 240 1 162 1 246 1 113 1 114 1 40 3 43 1 204 2 123 1 126 1 175 3 174 1 131 1 
1 1 5 1 4 1 88 1 183 3 182 2 147 2 148 1 16 1 263 1 233 1 306 1 68 1 239 1 240 1 162 1 246 1 316 1 114 1 113 1 40 2 204 3 123 1 126 1 175 3 174 1 173 1 131 1 
68 1 1 1 5 1 88 1 240 1 183 2 162 1 114 1 113 1 148 1 40 2 16 1 123 1 174 1 175 2 263 1 131 1 233 1 306 1 
68 1 1 1 5 1 4 1 88 1 240 1 183 2 162 1 316 1 114 1 113 1 148 1 40 2 16 1 123 1 174 1 175 2 263 1 131 1 233 1 306 1 
68 1 1 1 5 1 4 1 88 1 240 1 183 2 162 1 316 1 114 1 113 1 148 1 40 2 16 1 123 1 174 1 175 2 263 1 131 1 233 1 306 1 
68 1 1 1 310 1 5 1 88 1 240 1 183 2 162 1 114 1 113 1 148 1 40 2 16 1 172 1 123 1 174 1 175 2 263 1 131 1 233 1 306 1 
1 1 5 1 4 1 7 1 88 1 183 2 182 1 147 1 148 1 16 1 263 1 233 1 306 1 68 1 239 1 240 1 162 1 316 1 113 1 114 1 40 3 204 1 123 1 175 2 174 1 131 1 
1 1 5 1 4 1 7 1 88 1 183 2 182 1 147 1 148 1 16 1 263 1 233 1 306 1 68 1 239 1 240 1 162 1 316 1 113 1 114 1 40 3 204 1 123 1 175 2 174 1 131 1 
68 1 1 1 5 1 88 1 240 1 183 2 162 1 114 1 113 1 148 1 40 2 16 1 123 1 174 1 175 2 263 1 131 1 233 1 306 1 
267 1 140 1 71 1 167 1 297 1 324 2 171 1 120 1 207 1 23 1 206 1 66 1 26 1 107 1 29 1 
214 1 135 2 215 1 140 2 253 2 146 1 295 2 220 1 54 11 186 3 149 6 153 8 100 1 23 1 302 1 105 1 107 2 29 2 307 14 267 2 71 2 312 1 35 11 314 1 167 1 118 1 279 1 171 2 324 4 325 1 127 1 286 4 134 3 
289 1 267 1 140 1 71 1 146 1 56 1 118 1 149 1 324 2 171 1 150 1 153 1 100 1 23 1 307 2 29 1 
267 1 140 1 71 1 72 1 110 1 146 1 257 1 258 1 149 2 324 2 171 1 150 1 20 1 281 1 100 1 300 1 23 1 265 1 307 2 29 1 
140 2 9 1 92 1 55 2 222 1 58 2 16 1 149 1 153 1 300 8 100 1 23 2 263 1 26 1 265 2 29 2 307 2 267 2 311 1 71 2 313 1 72 7 245 1 113 1 199 1 75 3 74 1 247 1 118 1 119 1 171 2 324 4 79 1 281 8 44 1 327 2 45 1 330 1 176 2 
135 1 140 1 253 1 146 1 295 1 54 1 16 1 149 2 17 1 153 1 23 1 302 1 263 1 105 1 107 1 29 1 307 3 267 1 71 1 35 1 113 1 165 1 199 1 167 1 171 1 324 2 202 1 79 1 286 1 
267 1 135 1 140 1 71 1 253 1 35 1 314 1 54 1 324 2 171 1 153 2 286 1 23 1 64 1 26 1 107 1 307 2 29 1 
267 1 140 1 71 1 35 1 54 1 167 1 149 2 324 2 171 1 60 1 286 1 23 1 302 1 105 1 26 1 107 1 307 2 29 1 
135 1 253 1 140 1 295 1 54 2 149 2 153 2 23 1 302 1 105 1 26 1 29 1 307 4 107 2 267 1 71 1 35 2 314 1 167 1 171 1 324 2 286 2 
267 1 135 1 140 1 71 1 253 1 35 1 314 1 54 1 324 2 171 1 153 2 286 1 23 1 64 1 45 1 107 1 307 2 29 1 
267 1 140 1 71 1 35 1 54 1 167 1 149 2 324 2 171 1 60 1 286 1 23 1 302 1 45 1 105 1 107 1 307 2 29 1 
135 1 253 1 140 1 295 1 54 2 149 2 153 2 23 1 302 1 105 1 29 1 307 4 107 2 267 1 71 1 35 2 314 1 167 1 171 1 324 2 286 2 45 1 
267 1 135 1 140 1 71 1 253 1 35 2 295 1 314 1 54 2 167 1 149 2 324 2 171 1 153 2 302 1 286 2 23 1 105 1 107 2 29 1 307 4 
178 1 140 1 86 1 220 1 185 1 55 1 58 1 16 1 149 1 153 1 261 1 300 1 100 1 23 1 265 1 307 2 29 1 267 1 33 1 71 1 72 1 113 1 75 1 118 1 324 2 171 1 281 1 176 1 
178 1 140 1 220 1 55 1 188 1 58 1 16 1 149 1 153 1 225 1 300 1 100 1 23 1 265 1 307 2 29 1 267 1 33 1 71 1 72 1 113 1 75 1 118 1 323 1 324 2 171 1 281 1 176 1 
135 1 253 1 140 1 146 1 295 1 54 2 149 2 153 2 23 1 302 1 105 1 29 1 307 4 107 2 267 1 71 1 35 2 314 1 167 1 171 1 324 2 286 2 
135 1 178 1 253 1 140 1 86 1 295 1 54 2 185 1 55 1 58 1 149 2 16 1 153 2 261 1 300 1 302 1 23 1 105 1 158 1 107 2 307 4 29 1 267 1 33 1 71 1 35 2 72 1 314 1 113 1 167 1 75 1 324 2 171 1 281 1 286 2 176 1 330 1 
135 1 140 1 141 1 253 1 146 1 295 1 54 1 149 1 16 1 17 1 153 2 302 1 23 1 263 1 105 1 107 1 29 1 307 3 267 1 71 1 35 1 314 1 113 1 199 1 171 1 324 2 202 1 79 1 286 1 
275 1 171 1 324 2 71 1 140 1 238 1 37 1 227 1 12 1 29 1 
275 1 171 1 324 2 71 1 140 1 238 1 37 1 227 1 12 1 29 1 
275 1 171 1 324 2 71 1 140 1 238 1 37 1 227 1 12 1 29 1 
275 1 171 1 324 2 71 1 140 1 238 1 37 1 227 1 12 1 29 1 
275 1 171 1 324 2 71 1 140 1 238 1 37 1 227 1 12 1 29 1 
69 1 136 1 168 1 197 1 99 1 230 1 208 1 104 1 91 1 39 1 
78 1 271 1 
69 1 168 1 77 1 99 1 230 1 155 1 24 1 91 1 39 1 
69 1 136 1 197 1 236 2 270 1 183 1 91 1 221 1 39 1 168 1 18 1 21 1 154 1 99 1 230 1 175 1 104 1 25 1 
69 1 136 1 197 1 236 2 270 1 183 1 91 1 221 1 39 1 168 1 18 1 21 1 154 1 99 1 230 1 175 1 104 1 25 1 
69 1 136 1 197 1 236 2 270 1 183 1 91 1 221 1 39 1 168 1 18 1 21 1 154 1 99 1 230 1 175 1 104 1 25 1 
14 1 256 1 232 1 
14 1 256 1 232 1 
48 1 10 1 
48 1 14 1 10 1 
152 1 124 1 
251 1 183 1 220 1 91 1 221 1 259 1 16 2 152 1 21 1 99 1 230 1 263 2 69 1 236 1 271 1 113 2 199 2 39 1 168 1 322 1 42 1 78 1 79 2 124 1 175 1 287 1 46 1 
256 1 232 1 
48 1 14 1 10 1 
140 1 87 1 144 1 146 1 55 1 92 1 58 1 193 1 16 2 149 1 153 1 300 2 100 1 23 1 263 2 29 1 307 2 267 1 71 1 72 2 113 2 75 1 247 1 118 1 201 1 324 2 171 1 281 2 80 1 327 2 176 1 
159 1 180 1 142 1 313 1 72 2 57 1 190 1 58 1 194 1 249 1 281 2 300 2 122 1 283 2 328 1 129 1 231 1 176 1 330 1 
159 1 180 1 142 1 313 1 72 1 190 1 58 1 15 1 249 1 281 1 300 1 122 1 283 2 328 1 129 1 231 1 176 1 
72 1 55 1 296 1 75 1 74 1 58 1 119 1 194 1 249 1 281 1 262 1 300 1 176 1 265 1 
159 1 180 1 142 1 313 1 72 1 57 1 190 1 58 1 194 1 249 1 281 1 300 1 122 1 283 2 328 1 129 1 231 1 176 1 
292 1 
297 1 
5 1 
5 1 281 1 72 1 300 1 265 1 
5 1 
5 1 183 1 175 1 316 1 
5 1 
43 1 270 1 204 1 183 1 175 1 246 1 
31 1 5 1 281 1 72 1 300 1 265 1 
178 1 140 1 86 1 220 1 185 1 55 1 58 1 149 1 16 3 17 2 261 1 100 1 300 1 23 1 263 2 265 1 307 1 29 1 28 1 267 1 33 1 71 1 72 1 113 3 199 2 75 1 171 1 324 2 281 1 79 2 288 1 176 1 
5 1 
69 1 83 1 230 1 
69 1 248 1 152 1 230 1 104 1 
69 1 83 1 230 1 
69 1 83 1 230 1 
69 1 230 1 133 1 
69 1 230 1 133 1 
69 1 230 1 133 1 
69 1 230 1 
99 1 39 1 
135 2 140 2 218 1 149 6 98 1 299 1 153 6 66 1 105 2 29 2 107 6 307 12 71 2 314 3 167 3 171 2 324 4 120 1 207 2 206 2 
297 1 120 1 207 1 206 1 66 1 107 1 167 1 
135 1 140 1 71 1 253 1 295 1 314 1 167 1 149 2 324 2 171 1 153 2 195 1 302 1 105 1 107 2 29 1 307 4 
135 1 215 1 253 1 295 1 314 1 186 2 167 1 149 4 153 3 302 1 127 1 105 1 134 1 307 7 107 2 
135 4 218 1 253 2 140 1 295 2 186 2 149 10 98 1 299 1 153 10 302 2 66 1 105 4 307 20 107 6 29 1 71 1 312 1 314 2 167 4 324 2 171 1 120 1 325 1 207 2 206 2 127 1 134 2 
149 1 186 1 307 1 
153 1 134 1 307 1 
135 1 71 1 140 1 253 1 110 1 295 1 314 1 167 2 149 3 171 1 324 2 153 3 195 1 302 1 105 1 29 1 307 6 107 3 
135 2 215 1 140 1 253 2 295 2 12 1 186 1 149 6 153 6 302 2 105 2 307 12 29 1 107 2 268 1 269 1 71 1 237 1 243 1 314 1 167 1 171 1 324 2 130 1 134 1 
135 1 218 1 314 1 167 1 149 3 153 3 206 1 207 1 105 1 307 6 107 2 
140 1 71 1 314 1 167 1 149 2 280 1 324 2 171 1 120 1 299 1 153 1 207 1 206 1 66 1 107 2 307 3 29 1 
135 2 71 1 140 1 218 1 314 2 12 1 167 3 149 5 171 1 324 2 98 1 153 5 206 2 207 2 105 2 29 1 107 5 307 10 
135 1 140 1 71 1 253 1 314 1 12 1 324 2 171 1 153 2 29 1 307 2 107 1 
135 1 140 1 71 1 253 1 295 1 314 1 12 1 167 1 149 2 324 2 171 1 153 2 302 1 105 1 107 2 29 1 307 4 
140 3 71 3 161 1 314 1 12 1 167 1 149 2 280 1 324 6 171 3 299 1 153 1 206 1 207 1 307 3 29 3 107 2 
135 4 215 1 218 1 140 4 253 2 295 2 12 1 186 3 149 13 98 1 299 1 153 13 195 1 229 1 302 2 22 1 66 1 105 4 29 4 307 26 107 8 71 4 161 1 314 4 167 4 318 1 171 4 324 8 120 1 207 2 206 2 134 3 
135 2 215 1 218 1 140 1 12 1 186 1 149 5 98 1 153 5 105 2 66 1 307 10 29 1 107 4 71 1 243 1 314 1 167 3 171 1 324 2 120 1 206 2 207 2 134 1 
135 3 215 1 218 1 140 2 253 1 295 1 12 1 186 2 149 6 98 1 153 7 195 1 105 2 66 1 307 13 29 2 107 5 71 2 243 1 314 2 167 3 171 2 324 4 120 1 207 2 206 2 127 1 134 1 
135 4 215 1 218 1 140 3 253 2 295 2 12 1 186 1 149 11 98 1 299 1 153 10 195 1 302 2 66 1 105 4 307 21 29 3 107 6 268 1 269 1 71 3 237 1 243 1 314 2 167 4 171 3 324 6 120 1 207 2 206 2 130 1 134 1 
135 4 215 1 218 1 140 3 253 2 295 2 12 1 186 1 149 8 98 1 299 1 153 11 195 1 302 1 66 1 105 3 307 19 29 3 107 8 268 1 269 1 71 3 237 1 243 1 314 4 167 4 171 3 324 6 120 1 207 2 206 2 130 1 134 1 
135 2 215 1 218 1 140 1 12 1 186 1 149 5 98 1 153 5 105 2 66 1 307 10 29 1 107 4 71 1 243 1 314 1 167 3 171 1 324 2 120 1 206 2 207 2 134 1 
135 2 215 1 140 1 253 2 295 2 12 1 186 1 149 6 153 6 302 2 105 2 307 12 29 1 107 2 268 1 269 1 71 1 237 1 243 1 314 1 167 1 171 1 324 2 130 1 134 1 
135 4 215 1 218 1 140 4 253 2 295 2 12 1 186 1 149 9 98 1 299 2 153 11 195 1 302 1 66 1 105 3 307 20 29 4 107 6 268 1 269 1 71 4 237 1 243 1 314 2 167 4 171 4 324 8 120 1 207 2 206 2 130 1 134 1 
135 3 215 1 140 4 253 3 295 3 12 1 186 1 149 7 299 2 153 9 302 2 105 2 307 16 29 4 107 6 268 1 269 1 71 4 237 1 161 1 243 1 314 3 167 3 171 4 324 8 130 1 134 1 
135 1 218 1 314 3 167 3 149 3 98 1 120 1 153 2 206 3 207 3 105 1 66 1 307 5 107 6 
135 4 215 1 218 1 140 4 253 2 295 2 12 1 186 1 149 9 98 1 299 2 153 11 302 1 66 1 105 3 307 20 29 4 107 6 268 1 269 1 71 4 237 1 161 1 243 1 314 2 167 4 171 4 324 8 120 1 207 2 206 2 130 1 134 1 
16 1 217 1 111 1 220 1 263 1 113 1 114 1 
16 1 223 1 217 1 298 1 111 1 205 1 181 1 220 1 263 1 113 1 114 1 211 1 
58 1 297 1 119 1 281 1 72 1 300 1 55 1 176 1 265 1 75 1 74 1 
178 1 33 1 72 1 220 1 55 1 113 2 199 1 75 1 58 1 16 2 261 1 79 1 281 1 44 1 300 1 263 1 265 1 176 1 
68 1 139 1 178 2 33 1 72 1 220 1 55 2 113 2 148 1 199 2 93 1 13 1 75 3 58 1 16 2 261 1 79 1 281 1 123 1 44 1 300 1 263 2 176 1 
68 1 139 1 178 2 33 1 72 2 220 1 55 2 113 2 148 1 199 2 93 1 13 1 75 3 58 1 16 2 225 1 79 1 281 2 123 1 44 1 300 2 228 1 263 2 176 1 
183 1 255 1 148 1 93 1 16 1 96 1 17 1 300 1 263 1 28 1 270 1 72 1 36 1 163 1 113 1 199 1 75 1 43 1 281 1 79 1 125 1 175 1 
139 1 178 1 270 1 72 3 36 1 293 1 183 2 55 1 93 1 13 1 75 4 58 1 43 1 204 1 281 3 300 3 228 1 175 2 128 1 265 1 176 1 306 1 
58 1 311 1 281 1 72 1 300 1 176 1 
311 1 178 1 313 1 72 6 9 1 245 1 92 1 55 2 75 3 222 1 94 1 189 1 169 1 58 3 281 7 327 1 300 7 330 1 265 2 176 2 177 1 
135 2 218 1 140 1 146 1 220 1 148 1 257 1 149 4 16 1 98 1 153 4 300 1 23 1 263 1 105 2 66 1 307 8 107 3 29 1 267 1 71 1 72 1 314 1 113 1 199 1 167 2 170 1 324 2 171 1 120 1 79 1 281 1 80 1 44 1 207 1 206 1 330 1 
31 1 70 1 5 2 72 1 293 1 36 1 183 3 246 1 75 2 204 2 281 1 300 1 62 1 128 1 175 3 156 1 46 1 265 1 306 1 
311 1 178 1 72 2 293 1 55 1 75 2 94 1 58 2 276 1 281 2 300 2 330 1 176 1 
72 4 184 1 55 1 74 1 75 1 58 1 119 1 281 4 300 4 228 1 265 1 330 1 176 1 
178 1 72 2 294 1 315 1 55 1 93 1 75 1 116 1 189 1 58 2 281 2 300 2 176 1 177 1 
190 1 58 1 180 1 281 1 72 1 300 1 283 1 129 1 176 1 265 1 
87 1 72 2 313 1 92 1 55 1 75 1 58 1 281 2 300 2 330 1 176 1 
72 4 9 1 184 1 92 1 55 2 93 1 74 1 75 3 222 1 58 2 119 1 281 5 300 5 265 1 330 1 176 2 
72 4 9 1 184 1 92 1 55 2 93 1 74 1 75 3 58 2 119 1 281 5 300 5 157 1 265 1 330 1 176 2 
178 1 33 1 72 1 220 1 55 1 113 2 199 1 75 1 58 1 16 2 225 1 79 1 281 1 44 1 300 1 263 1 265 1 176 1 
178 1 72 1 55 1 93 1 75 1 94 1 189 1 169 1 58 2 281 1 300 1 176 1 177 1 
309 1 278 1 6 1 61 1 
309 1 115 1 321 1 278 1 6 1 61 1 183 1 102 1 175 1 46 1 
309 1 16 1 193 1 278 1 201 1 144 1 61 1 263 1 113 1 
115 1 278 1 102 1 
32 1 297 1 224 1 166 1 
32 1 291 1 224 1 277 1 244 1 329 1 166 1 
200 1 213 1 277 1 
291 1 32 1 50 1 244 1 166 1 73 2 192 1 277 3 224 1 59 1 284 1 329 3 
41 1 32 1 291 1 224 1 277 2 244 1 329 2 166 1 82 1 
291 1 216 1 142 1 180 1 244 1 166 1 192 1 277 1 283 1 329 1 305 1 
32 1 291 1 192 1 277 1 244 1 329 1 166 1 
32 2 291 1 192 1 224 1 277 1 244 1 329 1 
32 1 291 2 52 1 242 1 244 2 166 1 192 1 277 2 329 2 132 1 
49 1 32 1 291 1 216 1 179 1 53 1 244 1 166 2 192 1 224 1 277 3 329 3 82 2 
32 1 291 1 138 1 159 1 142 1 180 1 244 1 166 1 192 1 224 1 277 2 283 2 129 1 329 2 82 1 
32 1 291 2 216 1 53 1 244 2 166 2 41 1 192 1 224 1 277 4 226 1 329 4 82 2 
32 1 291 1 192 1 224 1 277 1 244 1 329 1 166 1 
32 2 291 1 216 1 53 1 244 1 73 1 166 3 224 2 277 4 97 1 59 1 284 1 329 4 82 2 
32 1 291 1 241 1 244 1 166 1 192 1 277 2 224 1 81 1 101 1 329 2 82 1 
291 1 32 1 244 1 166 1 73 2 192 1 277 3 224 1 95 1 59 2 284 1 329 3 
290 2 282 1 250 1 166 2 
291 1 192 1 277 1 244 1 11 1 329 1 
49 1 32 1 291 1 192 1 224 1 277 2 244 1 329 2 166 1 82 1 
117 1 
32 1 291 1 192 1 224 1 277 1 244 1 329 1 166 1 
49 1 291 1 32 1 244 1 73 1 166 1 192 1 277 3 224 1 329 3 82 1 
216 1 97 1 53 1 166 1 
32 1 166 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (50,153) (50,153) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (50,153) (50,153) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (50,153) (50,153) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (50,153) (50,153) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 265 249 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 265 249 0 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 265 47 24 182 (237,268) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 167 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 167 142 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 31 215 302 (75,231) (75,231) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 265 119 8 289 224 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 265 329 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 31 215 302 (75,231) (75,231) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 31 215 302 (75,231) (75,231) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 97 95 330 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 97 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 97 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 97 95 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 97 95 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 265 249 152 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 265 119 41 313 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 265 249 23 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 265 249 303 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 265 47 24 182 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 265 47 24 182 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 265 249 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 265 249 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 265 176 264 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 265 176 264 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 265 176 264 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 265 176 264 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 265 176 264 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 265 249 152 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 265 249 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 31 215 302 254 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 31 215 302 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 265 119 8 289 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 31 215 302 (75,231) (75,231) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 31 215 302 (75,231) (75,231) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 292 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 265 47 24 245 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 265 119 8 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 265 119 41 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 265 119 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 265 202 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 265 119 8 34 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 265 47 99 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 265 284 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 31 215 302 (75,231) (75,231) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | OPERATOR | 910 | < -> ==
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1420 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3437 | = null
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | STATEMENT | 997 | stmt -> ;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
201 2 22 1 262 1 301 3 213 2 326 1 240 1 14 3 116 1 15 1 91 1 225 1 252 2 
201 1 240 1 50 1 14 1 153 1 91 1 5 1 210 1 301 1 252 1 66 1 
201 1 240 1 50 1 14 1 153 1 91 1 5 1 210 1 301 1 252 1 66 1 
201 1 240 1 50 1 14 1 153 1 91 1 5 1 210 1 301 1 252 1 66 1 
201 1 240 1 50 1 14 1 153 1 91 1 5 1 210 1 301 1 252 1 66 1 
201 1 290 1 232 1 208 1 107 2 262 1 301 4 213 3 326 2 240 1 194 1 132 1 14 4 116 1 15 1 55 1 225 3 252 1 
201 1 137 1 290 1 316 1 256 1 210 1 213 1 262 1 301 2 240 1 14 2 15 1 91 1 120 1 55 1 252 1 
201 2 290 1 1 1 208 1 262 1 301 9 213 5 166 1 132 1 14 9 15 1 91 1 55 1 225 7 309 1 22 1 232 1 107 2 326 4 240 1 149 1 194 1 116 3 252 2 
201 2 290 1 1 1 208 1 262 1 301 9 213 5 166 1 132 1 14 9 15 1 91 1 55 1 225 7 309 1 22 1 232 1 107 2 326 4 240 1 149 1 194 1 116 3 252 2 
257 1 279 1 105 1 88 1 65 1 146 1 192 1 328 1 53 1 90 1 246 1 247 1 154 1 118 1 
178 1 
192 2 178 1 168 1 233 1 101 1 246 1 154 2 39 1 
254 1 84 1 257 1 206 1 47 2 209 1 88 1 299 1 215 1 302 1 53 1 217 1 171 1 304 1 90 1 174 1 17 1 315 3 99 1 279 1 233 2 101 1 105 1 65 1 64 2 146 1 192 5 328 1 35 1 195 1 246 2 247 1 154 5 118 1 122 2 81 2 
178 1 168 1 292 1 
60 1 
69 1 328 2 53 2 279 2 90 2 247 1 118 2 65 2 
44 1 4 1 127 2 9 1 129 1 89 1 53 3 52 1 265 1 90 2 172 2 175 1 56 1 58 1 274 1 20 1 276 1 314 1 275 1 321 1 181 1 279 2 140 2 65 2 191 1 328 2 247 1 331 1 118 3 38 2 249 1 78 1 80 1 
146 1 328 1 53 1 257 1 279 1 90 1 247 1 105 1 118 1 65 1 
21 1 178 1 139 1 257 1 323 1 65 1 192 1 168 1 53 1 13 1 218 1 154 1 118 1 287 1 
21 1 178 1 139 1 257 1 279 1 65 1 192 2 328 1 168 1 53 1 218 1 90 1 154 2 118 1 287 1 
192 1 233 1 246 1 154 1 272 1 
96 1 192 2 178 1 168 1 233 1 101 1 246 1 154 2 
192 1 233 1 154 1 
279 1 234 1 65 2 69 2 328 1 53 2 90 1 118 2 121 1 
37 1 237 1 185 1 
20 1 275 1 321 1 181 1 140 1 127 1 69 1 9 1 191 1 129 1 53 1 118 1 38 1 334 1 175 1 58 1 
69 1 292 1 
69 1 328 1 53 3 279 3 90 3 285 1 118 3 65 3 
53 1 257 1 279 1 90 1 105 1 118 1 65 1 
328 1 53 1 257 1 279 1 90 1 234 1 118 1 121 1 65 1 
44 1 0 1 257 1 258 1 4 1 127 1 9 1 129 1 216 1 53 4 265 1 218 1 90 3 172 2 175 1 56 1 58 1 274 1 20 1 21 1 275 1 314 1 139 1 321 1 181 1 279 3 140 1 234 1 65 3 191 1 192 1 328 2 285 1 247 1 154 1 331 1 118 4 287 1 38 1 249 1 78 1 80 1 
69 1 82 1 53 2 279 1 90 1 323 1 285 1 118 2 65 2 
21 1 178 1 255 1 139 1 257 1 279 3 258 1 234 1 65 3 192 1 328 1 216 1 53 3 218 1 90 3 285 2 154 1 118 3 287 1 
279 2 234 1 237 1 65 2 328 1 53 2 90 2 285 1 37 1 118 2 
20 1 275 1 181 1 321 1 140 1 127 1 69 1 9 1 191 1 129 1 53 1 118 1 38 1 175 1 58 1 
20 1 275 1 181 1 321 1 140 1 127 1 69 1 129 1 70 1 11 1 53 1 118 1 38 1 175 1 58 1 
274 1 71 1 24 1 265 1 182 1 47 1 172 2 268 1 4 1 331 1 56 1 78 1 80 1 
139 1 112 1 53 1 257 1 279 1 90 1 118 1 65 1 
20 1 275 1 321 1 181 1 279 1 140 1 237 1 65 1 127 1 9 1 129 1 191 1 216 1 53 2 90 1 285 1 118 2 38 1 175 1 58 1 
82 1 279 4 323 1 234 1 65 5 69 1 328 1 216 1 53 5 90 4 285 2 118 5 135 1 94 1 
112 1 53 2 257 1 279 2 90 2 105 1 118 2 65 2 
228 1 229 1 297 1 
228 2 193 1 196 1 281 1 297 2 238 1 
228 1 297 1 
228 1 297 1 
193 1 281 1 
193 1 281 1 
193 1 281 1 
228 1 297 1 226 1 
228 1 297 1 226 1 
228 1 297 1 226 1 
228 1 297 1 145 1 
228 1 297 1 145 1 
228 1 297 1 145 1 
228 2 42 2 177 1 178 1 161 2 260 1 297 2 29 1 324 1 236 2 110 1 192 2 241 2 115 2 196 1 305 1 154 2 76 3 288 1 
228 1 42 1 45 1 229 1 161 1 279 2 86 1 297 1 324 1 143 1 65 2 69 1 192 1 241 1 53 2 115 1 90 2 155 1 134 1 154 1 118 2 76 1 311 1 337 1 
123 2 194 1 256 1 55 2 212 1 
290 1 194 1 55 1 
290 1 256 1 55 1 
123 1 194 2 256 1 183 1 55 3 212 1 
123 1 194 1 256 1 322 1 55 2 212 1 
178 1 100 1 291 1 101 1 233 1 192 4 242 1 167 1 168 1 217 1 246 3 154 4 286 1 
178 1 83 1 100 1 101 1 233 2 192 4 147 1 167 1 217 1 168 1 246 3 173 1 154 4 272 1 
291 1 124 1 206 1 209 1 64 1 192 2 167 1 171 1 246 1 154 2 286 1 17 1 
291 1 124 1 206 1 209 1 142 1 64 1 192 1 167 1 171 1 286 1 154 1 17 1 
148 1 
321 1 292 1 235 1 
321 1 27 1 
20 1 321 1 
20 1 321 3 85 1 235 2 158 1 58 1 
20 1 321 1 58 1 
321 1 197 1 
273 1 98 1 231 1 294 1 62 1 31 1 215 1 302 1 12 1 75 1 270 1 250 1 
289 1 98 1 12 1 265 1 294 1 62 2 119 1 270 1 224 1 8 1 
98 1 329 1 12 1 265 1 172 2 294 1 103 1 62 1 331 1 270 1 56 1 78 1 80 1 
98 1 231 1 294 1 62 1 31 1 215 1 302 1 12 1 75 1 270 1 250 1 
98 1 231 1 294 1 62 1 31 1 215 1 302 1 12 1 75 1 270 1 250 1 
201 1 20 1 43 1 230 1 321 1 181 1 102 2 61 1 140 1 301 1 164 1 127 1 188 2 129 1 214 1 169 1 133 2 14 1 73 1 91 2 38 1 175 1 252 1 
201 1 290 1 256 1 102 1 140 1 183 1 296 1 325 1 301 1 127 1 188 1 190 1 129 1 240 1 194 1 150 1 133 1 14 1 91 1 92 1 38 1 55 2 175 1 308 1 252 1 310 1 
201 1 290 1 256 1 296 1 213 1 262 1 301 2 127 1 129 1 133 1 14 2 15 1 91 1 92 1 175 1 55 2 225 1 310 1 102 1 140 1 183 1 325 1 188 1 190 1 240 1 194 1 150 1 74 1 38 1 252 1 
201 1 43 1 290 1 256 1 125 1 213 1 262 1 301 3 127 1 129 1 133 1 14 3 15 1 91 1 92 1 308 1 175 1 55 2 225 2 310 1 102 1 140 1 183 1 325 1 188 1 190 1 194 1 150 1 38 1 252 1 
290 1 256 1 125 1 213 1 262 1 301 2 127 1 129 1 133 1 14 2 15 1 91 1 92 1 308 1 175 1 55 2 225 2 102 1 140 1 183 1 325 1 188 1 190 1 194 1 38 1 
269 1 
192 1 217 1 181 1 140 1 154 1 38 1 127 1 
257 1 162 1 263 1 53 1 13 1 218 1 220 1 267 2 21 1 139 1 101 1 233 2 323 1 65 1 144 1 192 3 156 1 154 3 118 1 287 1 39 1 40 1 
257 1 162 1 263 1 53 1 168 1 218 1 13 1 220 1 267 3 21 1 139 1 178 1 233 1 101 1 323 1 65 1 144 1 192 3 156 1 154 3 118 1 287 1 39 1 79 1 
257 1 162 1 263 1 53 1 168 1 218 1 13 1 220 1 267 3 21 1 139 1 178 1 101 1 233 2 323 1 65 1 144 1 192 3 156 1 154 3 118 1 287 1 332 1 39 1 40 1 79 1 
257 1 162 1 263 1 53 1 13 1 218 1 220 1 267 2 95 1 97 1 21 1 139 1 233 3 101 1 323 1 65 1 144 1 192 3 330 1 156 1 154 3 118 1 287 1 332 2 39 1 40 2 
21 1 139 1 257 1 323 1 162 1 144 1 65 1 263 1 192 2 217 1 53 1 218 1 13 1 220 1 267 2 154 2 156 1 287 1 118 1 
97 1 21 1 139 1 160 1 257 1 323 1 162 1 144 1 65 1 263 1 192 2 217 1 53 1 13 1 218 1 220 1 267 2 154 2 156 1 287 1 118 1 
97 1 21 1 139 1 160 1 257 1 323 1 162 1 144 1 65 1 263 1 192 2 217 1 53 1 13 1 218 1 220 1 267 2 154 2 156 1 287 1 118 1 
21 1 139 1 320 1 257 1 26 1 323 1 162 1 144 1 65 1 263 1 192 2 217 1 53 1 13 1 218 1 220 1 267 2 154 2 156 1 287 1 118 1 
160 1 257 1 162 1 263 1 217 1 53 1 218 1 13 1 220 1 267 3 95 1 21 1 97 1 139 1 233 1 323 1 65 1 144 1 192 2 156 1 154 2 118 1 287 1 332 1 40 1 79 1 
160 1 257 1 162 1 263 1 217 1 53 1 218 1 13 1 220 1 267 3 95 1 21 1 97 1 139 1 233 1 323 1 65 1 144 1 192 2 156 1 154 2 118 1 287 1 332 1 40 1 79 1 
21 1 139 1 257 1 323 1 162 1 144 1 65 1 263 1 192 2 217 1 53 1 218 1 13 1 220 1 267 2 154 2 156 1 287 1 118 1 
274 1 181 1 140 1 4 1 127 1 49 1 12 1 152 1 265 1 172 2 270 1 331 1 38 1 249 1 56 1 78 1 19 1 80 1 
274 1 24 1 279 1 47 1 234 1 4 1 65 1 189 1 328 1 12 1 53 1 113 1 265 1 245 1 90 1 172 2 270 1 118 1 331 1 251 1 56 1 122 1 78 1 80 1 
274 1 292 1 231 1 4 1 31 1 215 1 71 1 302 1 172 2 75 1 331 1 56 1 78 1 80 1 
274 1 313 1 113 1 265 1 172 2 4 1 119 1 331 1 56 1 78 1 41 1 80 1 
274 1 23 1 279 1 4 1 65 1 216 1 53 1 113 1 265 1 90 1 172 2 285 1 331 1 118 1 249 1 56 1 78 1 80 1 
274 1 181 1 279 1 140 1 4 1 65 1 127 1 216 1 53 1 113 1 265 1 303 1 90 1 172 2 285 1 38 1 331 1 118 1 249 1 56 1 78 1 80 1 
274 1 4 1 237 1 185 1 163 1 12 2 71 1 36 1 172 2 37 1 331 1 270 2 56 1 251 1 78 1 271 1 122 1 80 1 
274 1 71 1 24 1 265 1 182 1 47 1 172 2 4 1 331 1 56 1 78 1 80 1 
274 1 24 1 47 1 4 1 237 1 185 1 12 2 71 1 265 1 245 1 172 2 37 1 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
274 1 4 1 237 1 185 1 163 1 49 1 12 2 36 1 172 2 37 1 331 1 270 2 56 1 251 1 78 1 271 1 122 1 80 1 
274 1 49 1 24 1 265 1 182 1 47 1 172 2 4 1 331 1 56 1 78 1 80 1 
274 1 24 1 47 1 4 1 237 1 185 1 49 1 12 2 265 1 245 1 172 2 37 1 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
274 1 24 1 47 1 4 1 237 1 185 1 12 2 265 1 245 1 172 2 37 1 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
274 1 20 1 314 1 275 1 321 1 181 1 140 1 4 1 127 1 9 1 191 1 129 1 53 1 265 1 172 2 331 1 118 1 38 1 249 1 175 1 56 1 78 1 80 1 58 1 
274 1 20 1 275 1 179 1 321 1 181 1 140 1 4 1 127 1 129 1 70 1 11 1 53 1 265 1 172 2 331 1 118 1 38 1 249 1 175 1 56 1 78 1 80 1 58 1 
274 1 24 1 47 1 4 1 237 1 185 1 12 2 113 1 265 1 245 1 172 2 37 1 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
47 1 4 1 127 1 9 1 129 1 12 2 53 1 265 1 172 2 270 2 175 1 56 1 58 1 20 1 274 1 275 1 314 1 24 1 321 1 140 1 237 1 185 1 191 1 74 1 245 1 37 1 38 1 118 1 331 1 251 1 122 1 78 1 200 1 80 1 
47 1 4 1 12 2 53 1 265 1 90 1 172 2 270 2 56 1 274 1 24 1 279 1 234 1 185 1 237 1 65 1 328 1 113 1 245 1 331 1 118 1 37 1 77 1 251 1 78 1 122 1 80 1 
265 1 264 1 2 1 172 2 103 1 3 1 331 1 176 1 56 1 78 1 187 1 80 1 
265 1 264 1 2 1 172 2 103 1 3 1 331 1 176 1 56 1 78 1 187 1 80 1 
265 1 264 1 2 1 172 2 103 1 3 1 331 1 176 1 56 1 78 1 187 1 80 1 
265 1 264 1 2 1 172 2 103 1 3 1 331 1 176 1 56 1 78 1 187 1 80 1 
265 1 264 1 2 1 172 2 103 1 3 1 331 1 176 1 56 1 78 1 187 1 80 1 
312 1 228 1 42 1 241 1 161 1 115 1 196 1 305 1 260 1 297 1 
229 1 86 1 
228 1 42 1 241 1 161 1 266 1 115 1 297 1 106 1 186 1 
228 1 42 1 178 1 161 1 260 1 297 1 29 1 324 1 236 1 110 1 192 1 241 1 115 1 196 1 305 1 154 1 76 2 288 1 
228 1 42 1 178 1 161 1 260 1 297 1 29 1 324 1 236 1 110 1 192 1 241 1 115 1 196 1 305 1 154 1 76 2 288 1 
228 1 42 1 178 1 161 1 260 1 297 1 29 1 324 1 236 1 110 1 192 1 241 1 115 1 196 1 305 1 154 1 76 2 288 1 
198 1 238 1 226 1 
198 1 238 1 226 1 
126 1 145 1 
238 1 126 1 145 1 
45 1 143 1 
42 1 45 1 161 1 86 1 297 1 53 2 90 2 16 1 134 1 311 1 228 1 229 1 279 2 236 1 143 1 65 2 69 1 192 1 241 1 115 1 246 1 154 1 155 1 118 2 76 1 288 1 337 1 
198 1 226 1 
238 1 126 1 145 1 
274 1 318 1 87 1 4 1 65 2 48 1 12 1 152 1 53 2 113 1 265 1 172 2 54 1 270 1 331 1 118 2 249 1 56 1 78 1 19 1 80 1 
20 1 46 1 321 1 181 1 140 1 127 1 164 1 129 1 214 1 133 1 169 1 38 1 306 1 175 1 
290 1 256 1 46 1 293 1 140 1 183 1 127 1 190 1 129 1 32 1 194 1 150 1 133 1 38 1 92 1 55 2 175 1 308 1 
290 1 256 1 46 1 293 1 140 2 183 1 127 2 190 1 129 1 32 1 194 1 150 1 133 1 74 1 38 2 92 1 55 2 175 1 308 1 
290 1 256 1 293 1 140 1 183 1 127 1 190 1 129 1 194 1 150 1 133 1 38 1 92 1 55 2 308 1 175 1 57 1 
109 1 
217 1 299 1 
315 2 178 1 60 2 24 1 47 1 64 1 111 1 243 1 245 1 251 1 199 1 122 1 
192 1 178 1 168 1 233 1 101 1 154 1 
217 1 181 1 140 1 38 1 211 1 127 1 
315 1 178 1 168 1 304 1 292 1 299 1 64 1 
217 1 
217 1 181 1 140 1 38 1 127 1 
217 1 
192 1 160 1 217 1 154 1 
44 1 4 1 127 1 9 1 129 1 53 3 265 1 90 2 172 2 175 1 56 1 58 1 20 1 274 1 314 1 275 1 181 1 321 1 279 2 140 1 65 2 191 1 328 2 247 1 331 1 38 1 118 3 249 1 78 1 80 1 
217 1 
68 1 45 1 161 1 115 1 260 1 
161 1 115 1 298 1 
161 1 115 1 298 1 
161 1 115 1 298 1 
161 1 115 1 221 1 
161 1 115 1 221 1 
161 1 115 1 221 1 
161 1 115 1 
228 1 297 1 
31 1 254 1 215 1 302 1 
103 1 163 1 12 2 36 1 172 2 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
24 1 47 1 103 1 12 2 265 1 245 1 172 2 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
31 1 215 1 302 1 172 2 103 1 331 1 56 1 78 1 80 1 
289 1 170 1 265 1 172 6 222 1 103 1 119 1 331 3 56 3 78 3 8 1 80 3 
265 1 34 1 172 2 103 1 119 1 331 1 56 1 78 1 8 1 80 1 
170 1 265 1 34 1 172 4 103 1 119 1 331 2 56 2 78 2 8 1 80 2 
265 1 34 1 172 2 103 1 119 1 331 1 56 1 78 1 8 1 80 1 
265 1 34 1 172 2 103 1 119 1 331 1 56 1 78 1 8 1 80 1 
265 1 34 1 172 2 103 1 119 1 331 1 56 1 78 1 8 1 80 1 
265 1 34 1 172 2 103 1 119 1 331 1 56 1 78 1 8 1 80 1 
170 1 265 1 34 1 172 4 103 1 119 1 331 2 56 2 78 2 8 1 80 2 
265 1 34 1 172 4 103 1 222 1 119 1 331 2 56 2 78 2 8 1 80 2 
31 1 215 1 302 1 231 1 75 1 
265 1 34 1 172 4 103 1 222 1 119 1 331 2 56 2 78 2 8 1 80 2 
31 1 215 1 302 1 231 1 172 4 75 1 28 1 331 2 56 2 78 2 80 2 
31 1 215 1 302 1 231 1 292 1 75 1 
24 1 47 1 12 2 170 1 265 1 245 1 172 2 331 1 270 2 56 1 251 1 78 1 122 1 80 1 
265 1 119 1 8 1 
265 1 119 1 41 1 
265 1 119 1 
12 1 10 1 270 1 
202 1 265 1 
265 1 34 1 172 2 103 1 119 1 331 1 56 1 78 1 8 1 80 1 
12 1 99 1 265 1 47 1 270 1 122 1 
265 1 284 1 
82 1 180 1 257 1 323 1 65 1 69 1 33 1 53 1 118 1 
82 1 180 1 257 1 259 1 323 1 239 1 65 1 69 1 327 1 33 1 53 1 118 1 223 1 18 1 
129 1 20 1 317 1 169 1 321 1 181 1 74 1 140 4 117 1 38 4 175 1 164 1 127 4 
20 1 321 1 295 1 140 2 128 1 127 2 283 1 30 1 129 1 131 1 38 2 157 1 175 2 58 1 
190 1 129 1 290 1 256 1 181 1 140 1 38 1 55 1 175 1 127 1 
20 1 25 1 321 1 140 2 127 2 129 1 74 1 38 2 308 1 136 1 175 1 
20 2 317 1 181 1 321 3 295 1 140 4 108 1 164 1 127 5 129 2 169 1 74 1 38 5 333 1 136 1 175 2 
20 2 317 1 205 1 181 1 321 3 295 1 140 4 108 1 164 1 127 5 129 2 169 1 74 1 38 5 136 1 175 2 
129 1 20 1 169 1 321 1 292 1 181 1 140 1 38 1 175 1 164 1 127 1 
20 1 275 1 321 1 181 1 279 1 140 1 65 1 127 1 69 1 9 1 129 1 53 2 90 1 285 1 118 2 38 1 175 1 58 1 
204 1 257 1 295 1 127 1 9 1 129 1 53 2 90 1 175 1 58 2 20 2 275 1 139 1 321 3 279 2 140 1 65 2 69 1 197 1 285 1 38 1 118 2 287 1 
20 2 275 1 139 1 204 1 257 1 321 3 279 2 295 1 140 2 65 2 127 2 69 1 129 1 70 1 53 2 90 1 197 1 285 1 117 1 287 1 118 2 38 2 175 1 58 2 
204 1 207 1 295 1 127 3 129 1 168 1 175 1 58 1 20 1 21 1 178 1 321 4 181 1 233 1 140 3 27 1 235 1 192 2 197 1 117 1 154 2 38 3 335 1 
21 1 20 1 178 1 204 1 181 1 321 4 233 1 295 1 140 3 27 1 235 1 261 1 127 3 192 2 129 1 168 1 197 1 117 1 154 2 38 3 175 1 58 1 
129 1 140 1 38 1 175 1 93 1 127 1 
159 1 127 6 129 2 93 1 175 3 136 1 308 1 58 1 20 2 59 1 321 3 181 2 140 5 108 1 30 1 74 1 38 6 333 1 157 1 158 1 
4 2 87 1 127 1 9 1 129 1 215 1 302 1 53 2 90 1 172 4 175 1 56 2 58 1 20 1 274 2 275 1 314 1 278 1 231 1 321 1 279 1 140 1 65 1 31 1 191 1 113 1 74 1 75 1 285 1 118 2 331 2 38 1 78 2 80 2 200 1 
21 1 321 2 181 1 101 1 233 2 140 1 27 1 235 1 211 1 261 1 127 1 67 1 192 3 130 1 217 2 114 1 246 1 154 3 38 1 
20 1 321 2 140 2 235 1 6 1 127 2 129 1 74 1 38 2 93 1 175 2 158 1 58 1 
20 1 275 1 321 1 181 1 279 1 140 1 65 1 127 1 69 1 129 1 70 1 53 2 90 1 285 1 118 2 38 1 175 1 58 1 
20 1 59 1 321 1 295 1 140 1 127 1 30 1 129 1 38 1 157 1 175 2 158 1 58 1 
48 1 138 1 277 1 53 1 318 1 54 1 118 1 336 1 65 1 
277 1 280 1 104 1 
69 1 138 1 277 1 219 1 336 1 
21 1 138 2 178 1 139 1 277 1 257 1 280 1 258 1 104 1 69 1 192 2 168 1 219 2 218 1 246 1 154 2 287 1 307 1 336 2 
201 1 240 1 14 1 15 1 213 1 262 1 301 1 252 1 
201 1 141 1 262 2 301 4 213 3 326 1 165 1 14 4 244 1 116 1 15 2 120 1 225 2 252 1 
201 1 213 1 301 2 7 1 262 1 240 1 14 2 15 1 225 1 252 1 309 1 253 1 
201 1 141 2 63 1 213 1 301 3 262 1 240 1 14 3 244 1 15 1 120 2 252 1 
51 2 319 1 213 2 300 1 
201 1 240 1 72 1 14 1 301 1 252 1 
201 1 240 1 149 1 14 2 15 1 225 1 213 1 262 1 301 2 252 1 
151 1 
201 1 240 1 14 1 15 1 213 1 262 1 301 1 252 1 
292 1 15 1 213 1 262 1 
201 1 14 1 15 1 213 1 262 1 301 1 252 1 
14 1 102 1 91 1 
201 1 141 1 213 1 301 3 262 1 282 1 240 1 14 3 244 1 15 1 120 2 252 1 
201 1 14 2 15 1 107 1 225 1 213 1 262 1 301 2 252 1 
201 1 290 1 301 1 213 1 326 1 240 1 194 1 132 1 14 1 55 1 252 1 
201 1 240 1 14 1 15 1 213 1 301 1 252 1 
201 1 240 1 14 1 15 2 262 1 301 1 252 1 
201 2 203 1 184 1 213 1 301 2 240 1 14 2 15 1 248 1 252 2 
201 1 262 1 301 3 213 2 326 1 240 1 166 1 149 1 14 3 116 1 15 1 225 2 252 1 
201 1 290 1 256 1 183 1 213 1 262 1 301 2 240 1 194 1 14 2 15 1 55 2 225 1 252 1 227 1 
201 2 232 1 107 1 262 1 301 4 213 2 326 1 240 1 14 4 116 1 15 1 225 2 252 2 
201 1 240 1 149 1 14 3 15 1 120 1 225 1 213 1 262 1 301 3 252 1 
165 1 116 1 213 1 326 1 
15 1 213 1 

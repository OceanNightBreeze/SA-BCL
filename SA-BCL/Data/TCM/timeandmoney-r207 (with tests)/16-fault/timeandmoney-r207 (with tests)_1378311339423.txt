#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (157,364) 273 (58,133) (58,133) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (157,364) 273 (58,133) (58,133) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (157,364) 273 (58,133) (58,133) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (157,364) 273 (58,133) (58,133) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (157,364) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (157,364) 73 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (157,364) 73 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 230 198 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 253 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 253 117 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 372 268 308 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 372 268 167 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 295 322 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 295 322 135 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 295 322 135 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 295 322 135 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 230 198 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
294 1 338 1 136 1 300 1 316 1 7 1 96 1 133 1 58 1 273 1 364 1 
294 1 338 1 136 1 300 1 316 1 7 1 96 1 133 1 58 1 273 1 364 1 
294 1 338 1 136 1 300 1 316 1 7 1 96 1 133 1 58 1 273 1 364 1 
294 1 338 1 136 1 300 1 316 1 7 1 96 1 133 1 58 1 273 1 364 1 
25 1 294 4 300 4 335 1 303 2 195 1 338 1 169 1 18 2 249 3 54 1 7 1 316 1 185 3 45 1 90 1 92 1 188 1 
294 2 161 1 300 2 4 1 82 1 96 1 40 1 338 1 195 1 169 1 136 1 7 1 316 1 54 1 185 1 92 1 
294 1 338 1 300 1 316 1 7 1 157 1 
294 2 338 1 249 1 300 2 316 1 7 1 157 1 215 1 73 1 
294 2 338 1 249 1 300 2 316 1 7 1 157 1 215 1 73 1 
134 1 238 1 353 1 
138 1 
175 2 81 2 223 1 56 2 328 2 315 1 150 2 30 2 
256 2 0 1 259 1 260 1 357 1 50 1 71 1 30 2 165 1 125 1 51 1 239 1 289 1 290 1 199 1 315 1 269 1 293 2 147 1 108 2 175 2 81 2 223 1 56 3 149 1 113 1 276 1 150 3 304 1 368 2 208 1 328 2 329 1 21 1 280 1 282 2 186 1 
81 1 175 1 285 1 223 1 56 1 69 1 150 1 30 1 98 1 328 1 
175 1 285 1 56 1 150 1 247 1 337 1 15 1 305 1 134 1 128 1 184 1 353 1 44 1 158 1 
81 1 175 1 285 1 56 1 150 1 247 1 337 1 15 2 30 1 305 2 134 1 328 1 184 1 353 1 158 1 
261 1 151 1 15 1 305 1 356 1 
285 1 175 1 81 1 223 1 56 1 261 1 69 1 150 1 228 1 15 1 30 1 305 1 98 1 134 1 328 1 353 1 203 1 356 1 319 1 
261 1 15 1 305 1 
285 1 81 1 175 1 223 1 56 1 69 1 150 1 15 1 228 1 305 1 30 1 98 1 328 1 356 1 
134 1 
285 1 175 1 81 1 223 1 56 1 261 1 69 1 150 1 227 1 228 1 15 1 30 1 305 1 98 1 134 1 328 1 353 1 356 1 319 1 
285 1 261 2 69 1 30 1 98 1 359 1 77 2 196 1 341 1 172 1 241 2 202 1 362 1 319 1 148 4 175 1 81 1 223 1 321 1 56 1 13 2 150 1 115 1 178 5 228 1 36 2 15 4 305 4 134 2 328 1 19 1 120 1 63 2 353 2 121 1 330 2 309 1 356 2 
238 1 315 1 
285 1 175 2 81 1 297 1 56 2 150 2 30 1 328 1 315 1 89 1 317 1 
10 1 11 1 265 1 
256 1 56 1 149 1 276 1 50 1 113 1 150 1 125 1 51 1 208 1 239 1 315 1 342 1 293 1 108 1 186 1 
256 1 175 1 56 2 149 1 113 1 50 1 276 1 150 2 181 1 30 1 125 1 327 1 51 1 208 1 239 1 328 1 293 1 11 1 108 1 186 1 
285 1 175 2 81 1 297 1 56 2 150 2 30 2 327 1 328 2 315 1 89 1 
285 1 175 2 56 2 328 2 68 1 150 2 30 2 98 1 
81 1 285 1 175 3 56 3 150 3 30 3 327 1 328 3 315 1 89 1 
285 1 175 1 56 1 328 1 150 1 30 1 98 1 
81 1 175 1 285 1 297 1 56 1 150 1 30 1 328 1 317 1 
256 1 0 1 285 1 260 1 50 1 71 1 191 1 337 1 30 3 125 1 51 1 239 1 289 1 315 1 269 1 293 1 147 1 108 1 81 2 175 3 297 1 223 1 56 4 149 1 113 1 276 1 245 1 150 4 247 1 304 1 15 1 181 1 305 1 368 2 327 1 208 1 328 3 329 1 21 1 184 1 280 1 158 1 282 1 186 1 
93 1 175 2 56 2 328 1 315 1 150 2 44 1 30 1 327 1 
222 1 81 1 285 1 175 3 297 1 56 3 245 1 150 3 247 1 337 1 15 1 305 1 181 1 30 3 327 2 134 1 328 3 184 1 158 1 
175 2 81 1 297 1 56 2 328 2 150 2 10 1 11 1 30 2 327 1 
256 1 56 1 149 1 276 1 50 1 113 1 150 1 125 1 208 1 51 1 239 1 315 1 293 1 108 1 186 1 
256 1 56 1 149 1 276 1 50 1 113 1 150 1 324 1 302 1 125 1 208 1 51 1 315 1 293 1 108 1 
0 1 259 2 260 1 265 2 164 1 289 1 171 1 269 1 10 2 11 2 33 1 299 1 114 1 304 1 36 1 368 2 62 1 351 1 329 2 307 1 280 1 140 1 330 1 282 4 
285 1 175 1 56 1 328 1 184 1 68 1 150 1 30 1 
119 1 352 1 
119 1 352 1 
306 1 170 1 
306 1 170 1 
306 1 170 1 
119 1 352 1 326 1 
119 1 352 1 214 1 
306 1 1 1 119 2 170 1 292 1 352 2 
119 1 352 1 326 1 
119 1 352 1 326 1 
119 1 352 1 201 1 
119 1 352 1 201 1 
119 1 352 1 201 1 
286 1 27 1 214 1 30 2 315 1 144 1 343 1 346 1 175 2 55 1 56 2 150 2 15 1 305 1 116 1 119 1 328 2 210 1 352 1 331 1 211 1 371 1 23 1 122 1 
174 2 258 1 55 2 286 2 15 2 305 2 116 1 134 1 84 1 119 2 292 1 352 2 210 2 331 2 343 3 281 1 221 1 243 1 47 1 
195 1 54 1 335 1 
195 1 4 1 54 1 
231 1 195 3 168 1 4 1 335 2 143 1 
195 2 168 1 4 1 335 1 143 1 313 1 
195 2 168 1 4 1 335 1 143 2 
284 1 261 1 27 1 163 1 164 1 341 1 241 1 270 1 319 1 33 1 148 3 347 1 13 1 178 1 36 1 15 4 305 4 369 1 134 1 41 1 85 2 63 1 353 1 138 1 330 1 23 1 122 1 234 1 187 1 356 4 235 1 
261 6 124 5 336 1 29 1 164 3 341 1 241 2 270 3 319 1 33 3 148 8 321 1 110 1 347 2 13 2 151 5 178 6 36 3 15 8 305 8 369 1 134 5 41 6 137 1 63 2 233 1 353 1 354 3 138 9 330 3 23 4 187 6 356 7 255 1 235 2 
284 1 285 1 69 1 163 1 30 1 164 1 98 1 241 1 270 1 33 1 148 3 175 1 81 1 223 1 321 1 56 1 347 1 13 1 150 1 178 2 228 1 36 1 15 3 305 3 134 2 41 2 328 1 85 1 63 1 353 1 354 1 138 3 330 1 23 1 356 2 187 2 235 1 
284 1 285 1 98 1 241 1 148 5 56 1 347 1 110 1 13 1 150 1 15 4 305 4 63 1 353 1 354 2 23 2 356 3 69 1 163 1 29 1 164 2 30 1 270 2 33 2 81 1 175 1 321 1 223 1 178 4 36 2 228 1 134 3 41 4 85 2 328 1 137 1 138 6 330 2 187 4 235 1 
51 1 238 1 224 1 
51 1 176 1 
291 1 
51 1 149 1 113 1 
51 1 345 1 
51 1 149 1 
24 1 51 3 236 1 224 2 149 1 113 1 
12 1 259 4 277 1 323 1 192 1 36 1 37 1 359 1 62 3 232 2 329 3 120 1 22 1 140 2 330 1 309 1 282 7 
12 1 259 4 277 1 323 1 192 1 36 1 37 1 359 1 62 3 232 2 329 3 120 1 22 1 140 2 330 1 309 1 282 7 
12 1 259 4 277 1 323 1 192 1 36 1 37 1 217 1 359 1 62 3 232 2 329 3 120 1 22 1 140 2 330 1 309 1 282 7 
0 1 259 14 190 3 192 2 164 2 266 1 359 2 339 1 269 1 8 1 270 2 12 1 33 2 323 1 277 2 246 1 304 1 325 1 36 3 37 4 368 2 62 8 232 3 329 12 120 1 279 3 22 1 280 1 140 4 330 3 309 2 159 1 282 26 
0 2 259 5 192 1 266 1 359 1 269 2 12 1 296 1 277 1 179 1 304 2 36 1 37 1 368 4 62 4 232 2 329 4 120 1 280 2 22 1 140 3 330 1 309 1 282 9 
66 1 256 1 160 1 4 1 335 1 50 1 216 1 100 1 338 1 195 2 169 1 54 1 316 1 7 1 293 1 363 1 108 1 294 2 300 2 38 1 349 1 231 1 209 1 208 1 249 1 136 1 185 1 139 1 355 1 92 1 
66 1 256 1 160 1 4 1 335 1 50 1 216 1 100 1 195 2 169 1 142 1 54 1 316 1 7 1 293 1 363 1 108 1 294 3 300 3 130 1 16 1 38 1 231 1 208 1 249 2 136 1 185 1 139 1 355 1 92 1 
66 1 256 1 160 1 4 1 50 1 335 1 100 1 195 2 169 1 142 1 54 1 293 1 363 1 108 1 294 2 300 2 16 1 231 1 208 1 249 2 136 1 185 1 139 1 355 1 92 1 
66 2 256 1 2 1 50 1 72 1 100 2 51 1 316 1 7 1 293 1 363 2 108 1 294 1 365 1 300 1 130 1 149 1 276 1 35 1 152 1 208 1 136 2 141 1 
66 1 256 1 160 1 4 1 335 1 50 1 216 1 100 1 338 1 195 2 142 1 54 1 316 1 7 1 293 1 363 1 108 1 294 1 300 1 38 1 231 1 209 1 208 1 136 1 139 1 355 1 
88 1 
148 1 256 1 261 2 347 1 13 1 276 1 178 1 15 1 305 1 6 1 230 1 198 1 63 1 341 1 241 1 293 1 108 1 319 1 
285 1 26 1 261 2 334 1 264 1 337 1 99 2 128 1 146 1 319 1 175 1 56 1 150 1 247 1 227 1 15 2 305 2 134 2 184 1 353 2 87 1 44 1 158 1 253 1 
285 1 26 1 261 1 334 1 264 1 337 1 99 3 128 1 146 1 319 1 175 1 56 1 150 1 247 1 227 1 15 2 305 2 134 3 184 1 353 3 86 1 87 1 44 1 158 1 
285 1 26 1 261 2 334 1 264 1 337 1 99 3 128 1 146 1 319 1 175 1 56 1 150 1 247 1 227 1 15 2 305 2 134 3 117 1 184 1 353 3 86 1 87 1 44 1 158 1 253 1 
261 1 227 1 15 1 305 1 319 1 
285 1 49 1 26 1 334 1 264 1 337 1 358 1 99 2 128 1 341 1 241 1 146 1 148 1 175 1 56 1 13 1 150 1 247 1 59 1 178 1 15 2 305 2 134 3 63 1 250 1 184 1 353 2 354 1 87 1 138 1 44 1 158 1 372 1 254 1 
285 2 49 1 94 1 334 1 337 1 98 1 99 3 341 1 241 1 146 1 148 1 56 2 13 1 150 2 207 1 247 1 15 2 305 2 117 1 63 1 308 1 250 1 353 4 354 1 158 1 253 1 254 1 26 1 261 2 69 1 264 1 30 1 358 1 268 1 128 1 319 1 81 1 175 2 223 1 178 1 228 1 134 4 328 1 184 1 86 1 87 1 44 1 372 1 
285 1 49 1 26 1 261 2 94 1 334 1 264 1 337 1 358 1 99 2 268 1 128 1 341 1 241 1 146 1 319 1 148 1 175 1 56 1 13 1 150 1 247 1 207 1 178 1 15 2 305 2 117 1 134 2 63 1 250 1 184 1 308 1 353 2 354 1 87 1 44 1 158 1 253 1 372 1 254 1 
285 1 26 1 261 2 334 1 264 1 337 1 99 2 268 1 167 1 128 1 341 1 241 1 145 1 146 1 242 1 220 1 319 1 148 1 175 1 56 1 13 1 150 1 247 1 178 1 15 2 305 2 117 1 134 2 118 1 63 1 250 1 184 1 353 2 87 1 138 1 44 1 158 1 253 1 372 1 254 1 
285 2 49 1 94 1 334 1 337 1 98 1 99 4 341 1 241 1 146 1 148 1 56 2 13 1 150 2 247 1 207 1 15 2 305 2 117 2 63 1 308 1 250 1 353 5 354 1 158 1 253 2 254 1 26 1 261 3 69 1 264 1 30 1 358 1 268 1 314 1 128 1 319 1 81 1 175 2 223 1 178 1 228 1 134 5 328 1 184 1 86 2 87 1 44 1 372 1 
285 2 49 1 94 1 334 1 337 1 98 1 99 4 341 1 241 1 146 1 148 1 56 2 13 1 150 2 247 1 207 1 15 2 305 2 117 2 63 1 308 1 250 1 353 5 354 1 158 1 253 2 254 1 26 1 261 3 69 1 264 1 30 1 358 1 268 1 314 1 128 1 319 1 81 1 175 2 223 1 178 1 228 1 134 5 328 1 184 1 86 2 87 1 44 1 372 1 
285 1 26 1 261 2 334 1 264 1 337 1 99 3 128 1 341 1 241 1 145 1 146 1 220 2 319 1 148 1 175 1 56 1 13 1 150 1 247 1 59 1 178 1 15 2 305 2 117 1 134 3 118 1 63 1 250 2 184 1 86 1 353 3 87 1 138 1 44 1 158 1 253 1 372 1 254 2 
0 1 259 3 260 1 265 1 359 1 238 1 289 1 269 1 315 2 10 1 11 1 12 1 114 1 304 1 36 1 368 2 62 2 232 1 329 3 120 1 22 1 280 1 140 2 330 1 309 1 282 6 
67 1 0 2 259 8 260 2 357 1 190 3 71 1 265 11 164 2 289 1 103 1 78 1 315 1 269 2 270 2 10 4 11 11 33 1 112 1 246 1 304 2 36 1 37 1 368 4 155 1 62 2 329 6 42 1 279 3 280 2 140 1 330 2 282 14 
256 1 0 1 259 1 260 1 357 1 50 1 71 1 30 1 125 1 51 1 239 1 289 1 103 1 315 1 342 1 269 1 293 1 10 1 108 1 175 1 56 2 149 1 113 1 276 1 131 1 226 1 150 2 304 1 181 1 368 2 154 1 327 1 208 1 328 1 329 1 280 1 282 2 186 1 
0 3 50 2 51 2 239 2 103 1 289 3 142 1 340 2 106 1 293 3 10 7 11 7 108 3 12 1 56 3 149 2 113 2 150 3 304 3 62 8 208 2 20 2 120 1 21 2 22 1 309 1 256 3 257 2 259 10 260 3 357 1 71 1 30 1 265 7 164 2 359 1 125 2 315 2 269 3 270 2 33 2 175 1 132 1 276 1 36 3 181 1 37 4 368 6 327 1 232 1 182 1 328 1 329 10 280 3 140 4 330 3 332 2 282 20 186 2 
256 8 0 2 259 1 260 2 357 1 95 1 50 2 71 1 30 1 51 3 289 2 53 1 142 1 105 1 199 2 269 2 293 7 108 8 272 1 79 1 175 1 365 1 56 1 57 1 111 1 149 2 276 2 35 1 114 1 150 1 304 2 368 4 327 1 349 1 208 2 328 1 329 1 280 2 282 2 
0 1 259 1 260 1 265 1 30 1 164 1 289 1 103 1 269 1 270 1 10 1 11 1 33 1 81 1 175 1 297 1 56 1 150 1 304 1 36 1 368 2 62 1 328 1 329 2 280 1 140 1 370 1 330 1 282 3 
0 1 259 2 260 1 114 1 304 1 37 1 265 1 164 1 368 2 62 1 289 1 307 1 269 1 280 1 10 1 330 1 11 1 282 2 
33 1 0 1 260 1 114 1 304 1 36 1 265 1 368 2 62 1 351 1 289 1 329 2 269 1 280 1 140 1 10 1 11 1 282 2 
0 1 259 2 260 1 164 1 265 2 289 1 269 1 270 1 10 2 11 2 33 1 114 1 304 1 36 1 37 1 368 2 62 2 329 2 280 1 140 1 330 1 282 4 
0 1 259 2 260 1 304 1 37 1 265 1 164 1 368 2 62 1 289 1 307 1 105 1 269 1 280 1 10 1 330 1 11 1 282 2 
33 1 0 1 260 1 304 1 36 1 265 1 368 2 62 1 351 1 289 1 329 2 105 1 269 1 280 1 140 1 10 1 11 1 282 2 
0 1 259 2 260 1 164 1 265 2 289 1 105 1 269 1 270 1 10 2 11 2 33 1 304 1 36 1 37 1 368 2 62 2 329 2 280 1 140 1 330 1 282 4 
0 1 259 2 260 1 164 1 265 2 289 1 269 1 270 1 10 2 11 2 33 1 304 1 36 1 37 1 368 2 62 2 329 2 280 1 140 1 330 1 282 4 
256 1 0 1 259 1 260 1 357 1 50 1 71 1 125 1 51 1 239 1 289 1 315 1 269 1 293 1 108 1 56 1 149 1 113 1 276 1 150 1 304 1 368 2 208 1 329 1 21 1 280 1 282 2 186 1 
256 1 0 1 259 1 260 1 357 1 50 1 71 1 125 1 51 1 289 1 315 1 269 1 293 1 108 1 56 1 149 1 113 1 276 1 324 1 150 1 302 1 304 1 368 2 208 1 329 1 280 1 251 1 282 2 
0 1 259 2 260 1 164 1 265 2 289 1 103 1 269 1 270 1 10 2 11 2 33 1 304 1 36 1 37 1 368 2 62 2 329 2 280 1 140 1 330 1 282 4 
256 1 0 1 259 2 260 1 50 1 265 2 164 1 125 1 51 1 239 1 289 1 340 1 269 1 293 1 270 1 10 2 11 2 108 1 33 1 56 1 149 1 113 1 150 1 304 1 36 1 37 1 368 2 349 1 62 2 208 1 329 2 21 1 280 1 140 1 330 1 282 4 186 1 
0 1 259 2 260 1 262 1 30 1 164 1 265 1 289 1 103 1 269 1 270 1 10 1 11 1 33 1 81 1 175 1 297 1 56 1 150 1 304 1 36 1 37 1 368 2 62 1 328 1 329 1 280 1 330 1 282 3 
0 2 259 7 5 1 190 1 164 2 74 1 269 2 270 2 318 2 33 2 320 2 296 1 322 1 246 1 304 2 36 2 37 2 368 4 61 1 62 4 229 1 135 1 329 7 279 1 280 2 140 2 330 2 282 14 373 1 
295 1 296 1 0 1 259 3 322 2 190 1 246 1 304 1 74 1 368 2 135 1 229 2 329 3 279 1 269 1 280 1 282 6 318 2 
0 2 259 7 5 1 190 2 164 1 74 1 269 2 107 1 270 1 318 3 33 1 320 1 296 1 295 1 322 1 246 2 304 2 36 1 37 1 368 4 62 1 229 2 135 1 329 7 279 2 280 2 330 1 282 14 373 1 
0 2 259 7 5 1 190 2 164 1 74 1 269 2 107 1 270 1 318 3 33 1 320 1 296 1 295 1 322 1 246 2 304 2 36 1 37 1 368 4 62 2 229 2 135 1 329 7 279 2 280 2 140 1 330 1 282 14 373 1 
0 1 259 6 190 1 74 1 359 1 269 1 318 2 12 1 296 1 295 1 322 1 246 1 304 1 36 1 368 2 229 1 135 1 62 1 232 1 329 5 120 1 279 1 280 1 22 1 140 1 330 1 309 1 282 11 
76 1 84 1 119 1 55 1 292 1 210 1 352 1 286 1 331 1 243 1 
214 1 371 1 
119 1 55 1 210 1 352 1 286 1 200 1 331 1 271 1 173 1 
34 1 326 1 
1 1 201 1 310 1 
174 1 258 1 55 1 286 1 15 1 116 1 305 1 134 1 84 1 119 1 292 1 352 1 210 1 331 1 343 2 281 1 243 1 47 1 
174 1 258 1 55 1 286 1 15 1 116 1 305 1 134 1 84 1 119 1 292 1 352 1 210 1 331 1 343 2 281 1 243 1 47 1 
174 1 258 1 55 1 286 1 15 1 116 1 305 1 134 1 84 1 119 1 292 1 352 1 210 1 331 1 343 2 281 1 243 1 47 1 
1 1 34 1 326 1 
1 1 34 1 326 1 
201 1 310 1 
1 1 201 1 310 1 
346 1 144 1 
286 1 27 1 214 1 30 2 315 1 144 1 343 1 174 1 346 1 175 2 56 2 55 1 150 2 15 1 305 1 83 1 119 1 328 2 210 1 352 1 331 1 281 1 211 1 371 1 23 1 356 1 122 1 
256 2 0 1 259 1 260 1 357 1 50 1 71 1 193 1 267 1 194 1 51 1 288 1 289 1 103 1 360 1 199 2 269 1 293 2 108 2 272 1 175 2 56 2 57 1 149 1 150 2 304 1 368 2 208 1 329 1 280 1 282 2 
256 2 160 1 298 1 3 1 4 1 335 1 50 1 301 1 38 1 349 1 231 1 195 2 208 1 142 1 54 1 293 2 355 1 363 1 108 2 
256 1 160 1 3 1 4 1 335 1 50 1 38 1 231 1 195 2 208 1 142 1 54 1 293 1 355 1 363 1 108 1 344 1 
256 1 365 1 123 1 298 1 149 1 50 1 276 1 35 1 72 1 208 1 51 1 293 1 363 1 108 1 
256 1 160 1 298 1 3 1 4 1 335 1 50 1 301 1 38 1 231 1 195 2 208 1 142 1 54 1 293 1 355 1 363 1 108 1 
197 1 
148 1 134 1 238 1 19 1 353 1 362 1 178 1 
148 1 49 1 13 1 178 1 358 1 134 1 63 1 341 1 241 1 354 1 138 1 
256 1 24 1 149 1 176 1 50 2 113 1 13 1 276 1 70 1 60 1 208 1 51 2 63 1 341 1 241 1 293 1 108 1 
285 1 190 1 98 1 6 1 52 1 341 2 241 2 148 8 56 1 347 1 13 2 150 1 246 1 115 1 63 2 353 2 156 1 354 3 261 1 69 1 164 2 30 1 77 2 270 2 32 1 319 1 33 2 81 1 175 1 223 1 225 1 178 5 36 2 228 1 278 1 134 5 41 5 328 1 279 1 138 6 330 2 333 1 91 1 187 5 
285 1 69 1 30 1 98 1 359 1 77 2 196 1 341 1 241 1 148 2 81 1 175 1 223 1 56 1 13 1 150 1 115 1 207 1 178 2 15 1 36 1 228 1 305 1 328 1 63 1 120 1 330 2 309 1 
148 1 13 1 178 1 134 1 19 1 63 1 341 1 353 1 241 1 362 1 
33 1 148 2 178 2 36 1 164 1 134 1 41 2 354 1 270 1 138 3 330 1 187 2 
285 1 175 1 81 1 223 1 56 1 261 1 69 1 150 1 228 1 30 1 98 1 134 1 328 1 353 1 319 1 
148 1 256 1 261 2 347 1 276 1 162 1 13 1 178 1 6 1 230 1 198 1 63 1 341 1 293 1 241 1 108 1 319 1 
256 1 0 1 260 1 50 1 71 1 30 2 125 1 51 1 239 1 289 1 315 1 269 1 293 1 108 1 147 1 175 2 81 2 223 1 56 3 149 1 276 1 113 1 150 3 304 1 368 2 208 1 328 2 329 1 21 1 280 1 282 1 186 1 
148 1 347 1 13 1 178 2 134 4 41 2 6 1 232 1 63 1 341 1 353 2 354 2 241 1 138 4 187 2 
55 1 210 1 311 1 
218 1 84 1 55 1 210 1 144 1 
55 1 210 1 311 1 
55 1 210 1 311 1 
55 1 210 1 75 1 
55 1 210 1 75 1 
55 1 210 1 75 1 
55 1 210 1 
119 1 352 1 
12 1 0 2 259 4 304 2 36 1 37 1 368 4 266 1 359 1 62 3 232 1 329 4 120 1 269 2 280 2 22 1 140 2 330 1 309 1 282 8 
12 1 259 3 36 1 359 1 62 2 232 1 238 1 329 3 120 1 22 1 140 2 330 1 309 1 282 6 
33 1 0 1 259 2 263 1 304 1 36 1 164 1 37 1 368 2 62 2 329 2 269 1 280 1 140 1 270 1 330 1 282 4 
259 1 329 1 279 1 190 1 246 1 282 2 
67 1 0 2 259 11 190 2 164 2 266 2 359 2 78 1 269 2 270 2 12 1 33 2 304 2 36 3 37 4 368 4 62 9 232 1 329 12 120 1 279 2 42 1 22 1 280 2 140 5 330 3 309 2 282 23 48 1 
329 1 190 1 282 1 
259 1 279 1 282 1 
33 1 0 1 259 3 263 1 304 1 36 1 164 1 37 1 368 2 62 3 20 1 329 3 269 1 280 1 270 1 140 2 330 1 282 6 
0 1 259 6 190 1 164 2 52 1 269 1 270 2 32 1 33 2 296 1 246 1 304 1 36 2 37 1 278 1 368 2 62 2 329 6 279 1 156 1 280 1 140 1 330 2 282 12 91 1 
259 3 36 1 37 1 359 1 62 2 329 3 120 1 140 1 330 1 309 1 282 6 
12 1 0 1 259 1 304 1 37 1 266 1 368 2 359 1 62 2 329 2 269 1 22 1 280 1 140 1 309 1 282 3 48 1 
0 1 296 1 259 5 304 1 36 2 37 2 368 2 359 2 62 5 196 1 329 5 120 1 269 1 280 1 140 3 330 2 309 2 282 10 
296 1 0 1 259 2 304 1 164 1 37 1 368 2 62 1 269 1 280 1 330 1 282 2 
33 1 296 1 0 1 259 2 304 1 36 1 164 1 37 1 368 2 62 2 329 2 269 1 280 1 140 1 270 1 330 1 282 4 
296 1 0 3 259 1 5 1 304 3 37 1 266 1 368 6 359 1 62 2 329 2 269 3 280 3 140 1 309 1 282 3 48 1 
0 4 259 12 5 1 190 3 263 1 164 2 266 1 359 2 339 1 269 4 270 2 12 1 33 2 296 1 246 1 325 1 304 4 36 3 37 4 368 8 62 8 232 1 329 12 120 1 279 3 22 1 280 4 140 4 330 3 309 2 159 1 282 24 
0 1 259 4 190 1 359 1 52 1 269 1 12 1 296 1 246 1 304 1 36 1 368 2 62 2 232 1 329 4 279 1 120 1 280 1 22 1 140 2 330 1 309 1 282 8 
0 2 259 4 190 1 263 1 359 1 52 1 269 2 12 1 296 1 246 1 304 2 36 1 368 4 62 2 232 1 329 4 120 1 279 1 280 2 22 1 140 2 330 1 309 1 282 8 
0 3 259 9 190 1 263 1 164 2 266 1 359 1 52 1 269 3 270 2 32 1 12 1 33 2 296 1 246 1 304 3 36 3 37 1 278 1 368 6 62 4 232 1 329 10 120 1 279 1 156 1 22 1 280 3 140 3 330 3 309 1 282 19 91 1 
0 3 259 10 190 1 263 1 164 2 266 1 359 1 52 1 269 3 270 2 32 1 12 1 33 1 296 1 246 1 304 3 36 2 37 2 278 1 368 6 62 5 232 1 329 7 120 1 279 1 156 1 22 1 280 3 140 3 330 3 309 1 282 17 91 1 
0 1 259 4 190 1 359 1 52 1 269 1 12 1 296 1 246 1 304 1 36 1 368 2 62 2 232 1 329 4 279 1 120 1 280 1 22 1 140 2 330 1 309 1 282 8 
0 1 259 6 190 1 164 2 52 1 269 1 270 2 32 1 33 2 296 1 246 1 304 1 36 2 37 1 278 1 368 2 62 2 329 6 279 1 156 1 280 1 140 1 330 2 282 12 91 1 
0 4 259 10 190 1 263 1 164 2 266 2 359 1 52 1 269 4 270 2 32 1 12 1 33 1 296 1 246 1 304 4 36 2 37 2 278 1 368 8 62 5 232 1 329 8 120 1 279 1 156 1 22 1 280 4 140 3 330 3 309 1 282 18 91 1 
0 4 259 9 5 1 190 1 164 3 266 2 52 1 269 4 270 3 32 1 33 2 296 1 246 1 304 4 36 2 37 3 278 1 368 8 62 6 329 7 279 1 156 1 280 4 140 3 330 3 282 16 91 1 
12 1 259 3 36 1 37 3 359 3 62 6 329 4 120 1 22 2 140 3 330 1 309 3 282 7 
0 4 259 10 5 1 190 1 164 2 266 2 359 1 52 1 269 4 270 2 32 1 12 1 33 1 296 1 246 1 304 4 36 2 37 1 278 1 368 8 62 4 232 1 329 8 120 1 279 1 156 1 22 1 280 4 140 3 330 3 309 1 282 18 91 1 
175 1 93 1 56 1 315 1 150 1 44 1 97 1 
175 1 93 1 244 1 56 1 127 1 315 1 361 1 150 1 44 1 97 1 9 1 80 1 
256 1 365 1 208 1 51 1 238 1 149 1 50 1 276 1 35 1 293 1 108 1 
256 1 175 1 56 2 149 1 113 1 50 1 276 1 150 2 30 1 125 1 327 1 51 1 208 1 328 1 239 1 315 1 293 1 108 1 
256 1 285 1 175 2 56 2 149 2 113 2 50 1 150 2 337 1 30 1 153 1 125 1 327 1 51 3 350 1 208 1 328 2 239 1 184 1 315 1 293 1 108 1 345 1 
256 2 285 1 50 1 337 1 30 1 125 1 51 3 315 1 293 2 108 2 345 1 175 2 56 2 149 2 113 2 150 2 302 1 153 1 327 1 248 1 208 1 350 1 328 2 184 1 
256 3 261 1 50 1 287 1 51 4 293 3 108 3 345 1 224 1 149 1 176 1 113 1 276 1 15 2 305 2 153 1 134 1 248 1 208 1 350 1 353 1 158 1 252 1 
256 3 261 1 149 1 275 1 224 1 276 1 113 1 50 1 176 1 15 2 305 2 153 1 134 1 248 1 350 1 51 4 208 1 353 1 293 3 158 1 108 3 345 1 
256 1 208 1 53 1 50 1 293 1 108 1 
256 7 24 1 57 1 111 1 149 2 95 1 276 2 113 1 50 3 28 1 349 1 51 3 208 2 53 1 142 1 199 1 219 1 293 6 108 7 79 1 204 1 
256 1 0 2 259 3 260 2 50 1 193 1 265 1 30 1 359 1 125 1 51 1 239 1 289 2 103 1 315 2 269 2 340 1 293 1 10 1 11 1 108 1 12 1 175 1 56 2 149 1 113 1 150 2 304 2 36 1 368 4 327 1 349 1 62 2 232 1 208 1 328 1 329 3 120 1 21 1 22 1 280 2 140 2 330 1 309 1 332 1 282 6 186 1 
285 1 98 1 51 2 196 1 240 1 341 2 241 2 293 1 108 1 148 4 56 1 13 2 150 1 115 1 15 2 305 2 19 1 63 2 120 1 353 2 158 1 309 1 356 1 256 1 212 1 261 2 162 1 69 1 312 1 30 1 359 1 77 2 362 1 319 1 81 1 175 1 223 1 224 1 275 1 176 1 276 1 178 5 36 2 228 1 134 2 328 1 330 2 
256 1 24 1 224 1 149 1 113 1 50 2 60 1 51 2 208 1 53 1 291 1 293 1 108 1 
256 4 365 1 149 1 50 1 276 1 35 1 206 1 349 1 248 1 51 1 208 1 293 4 108 4 
256 2 189 1 149 1 14 1 113 1 50 2 28 1 350 1 51 1 208 1 106 1 293 2 108 2 204 1 
256 1 195 1 160 1 208 1 4 1 54 1 50 1 276 1 293 1 108 1 
256 2 57 1 149 1 50 1 349 1 194 1 51 1 208 1 142 1 293 2 108 2 
256 5 365 1 57 1 149 2 111 1 276 1 50 2 35 1 206 1 349 1 350 1 51 3 208 2 293 4 108 5 79 1 
256 5 365 1 57 1 149 2 111 1 276 1 50 2 35 1 206 1 348 1 349 1 350 1 51 3 208 2 293 4 108 5 
256 1 175 1 56 2 149 1 113 1 50 1 276 1 150 2 302 1 30 1 125 1 327 1 51 1 208 1 328 1 315 1 293 1 108 1 
256 1 24 1 149 1 113 1 50 2 28 1 350 1 51 1 208 1 219 1 293 1 108 1 204 1 
285 1 175 1 56 1 150 1 267 1 166 1 288 1 104 2 102 1 360 1 315 1 89 1 
285 2 213 1 69 1 337 1 30 1 98 1 267 1 166 1 288 1 102 1 104 2 360 1 81 1 175 2 223 1 56 2 205 1 245 1 150 2 247 1 228 1 15 2 180 1 305 2 134 1 328 1 184 1 353 1 158 1 356 1 
166 1 102 1 
104 1 213 1 180 1 
169 1 238 1 185 1 92 1 
294 1 169 1 300 1 316 1 7 1 185 1 92 1 
66 1 136 1 300 1 
40 2 294 3 338 1 169 1 366 1 300 3 274 1 316 1 7 1 185 1 92 1 46 1 
294 2 169 1 18 1 249 1 300 2 316 1 7 1 185 1 92 1 
195 1 294 1 338 1 300 1 54 1 335 1 316 1 7 1 185 1 303 1 90 1 
294 1 338 1 300 1 316 1 7 1 185 1 92 1 
294 1 338 1 169 1 300 1 316 1 7 1 92 2 
31 1 294 2 338 1 300 2 316 2 7 2 367 1 185 1 92 1 237 1 
294 3 338 1 169 1 249 2 300 3 64 1 316 1 7 1 185 2 303 1 92 1 65 1 188 1 
231 1 294 2 338 1 195 2 169 1 249 1 300 2 4 1 54 1 335 1 316 1 7 1 185 1 92 1 283 1 
294 4 300 4 303 1 338 1 169 1 18 1 249 2 7 2 316 2 185 2 45 1 92 1 188 1 
294 1 338 1 169 1 300 1 316 1 7 1 185 1 92 1 
294 4 366 1 300 4 303 1 40 1 169 2 249 2 7 1 316 1 185 3 129 1 46 1 92 2 188 1 
294 2 338 1 169 1 101 1 249 1 300 2 316 1 7 1 185 1 215 1 92 1 126 1 
40 2 294 3 338 1 169 1 366 1 300 3 177 1 316 1 7 1 185 1 92 1 46 2 
39 2 183 1 185 2 43 1 
17 1 294 1 338 1 300 1 316 1 7 1 
294 2 338 1 169 1 249 1 300 2 64 1 316 1 7 1 185 1 92 1 
109 1 
294 1 338 1 169 1 300 1 316 1 7 1 185 1 92 1 
40 1 294 3 338 1 169 1 249 1 300 3 64 1 316 1 7 1 185 1 92 1 
185 1 129 1 303 1 188 1 
185 1 92 1 

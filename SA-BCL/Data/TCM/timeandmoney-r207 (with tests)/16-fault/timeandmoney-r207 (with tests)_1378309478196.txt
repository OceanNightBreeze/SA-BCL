#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 245 (125,143,163) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 79 120 328 71 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 251 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | CONSTANT | 1903 | 12 -> 1
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4739 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7245 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> >>
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | ASSIGN | 1600 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1740 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
146 1 127 1 348 1 322 3 299 1 118 2 365 1 342 2 291 3 242 1 258 1 168 2 10 1 
322 1 342 1 318 1 291 1 168 1 127 1 
322 1 342 1 318 1 291 1 168 1 127 1 
322 1 342 1 318 1 291 1 168 1 127 1 
322 1 342 1 318 1 291 1 168 1 127 1 
173 1 146 2 127 1 322 4 99 2 256 1 118 3 365 1 240 1 342 1 291 4 153 1 242 1 258 3 168 1 144 1 375 1 10 1 
173 1 27 1 40 1 127 1 322 2 299 1 114 1 118 1 214 1 342 1 291 2 242 1 168 1 312 1 375 1 10 1 
146 4 173 1 13 1 127 1 99 2 101 1 365 3 342 2 240 1 291 9 153 1 242 1 250 1 348 1 322 9 299 1 198 1 256 1 118 5 258 7 168 2 144 1 375 1 10 1 
146 4 173 1 13 1 127 1 99 2 101 1 365 3 342 2 240 1 291 9 153 1 242 1 250 1 348 1 322 9 299 1 198 1 256 1 118 5 258 7 168 2 144 1 375 1 10 1 
285 1 330 1 273 1 334 1 47 1 346 1 279 1 209 1 49 1 307 1 238 1 225 1 373 1 302 1 
276 1 
338 1 113 1 307 1 276 1 199 1 334 2 319 1 47 2 
286 2 276 1 231 1 38 1 87 1 334 5 319 1 47 5 362 1 176 1 337 1 296 1 338 1 224 1 307 2 20 2 199 2 326 1 191 2 
251 1 
276 1 53 1 361 2 
330 1 273 2 238 2 225 2 126 1 346 2 279 2 49 2 
285 1 330 1 121 1 303 2 61 1 39 1 126 1 81 1 82 2 336 2 234 1 235 1 238 2 213 1 18 2 102 1 21 1 366 2 86 1 106 2 22 1 273 3 25 1 110 1 159 1 88 1 346 3 279 3 196 1 49 3 29 2 350 1 225 2 353 2 9 1 370 1 226 1 374 1 55 1 94 1 201 1 
285 1 330 1 273 1 238 1 225 1 346 1 373 1 279 1 209 1 49 1 
285 1 273 1 276 1 123 1 334 1 319 1 47 1 279 1 49 1 9 1 369 1 370 1 104 1 311 1 
285 1 273 1 276 1 334 2 319 1 47 2 346 1 279 1 49 1 238 1 225 1 9 1 369 1 370 1 311 1 
307 1 199 1 334 1 47 1 347 1 
338 1 307 1 276 1 199 1 130 1 334 2 319 1 47 2 
199 1 334 1 47 1 
273 2 26 1 12 1 126 2 346 1 279 2 49 2 238 1 225 1 
35 1 187 1 252 1 
285 1 273 1 303 1 158 1 126 1 82 1 346 1 279 1 49 1 29 1 235 1 9 1 102 1 18 2 370 1 226 1 21 1 366 2 374 1 106 2 22 1 201 1 
251 1 
0 1 285 1 273 4 12 1 147 1 126 1 346 4 279 4 49 4 238 4 364 1 225 1 186 1 23 2 
285 1 273 2 238 2 218 1 346 2 279 2 209 1 49 2 
285 1 303 1 82 1 235 1 238 1 364 1 102 1 18 2 21 1 366 2 22 1 23 1 106 2 273 2 346 2 279 2 252 1 49 2 29 1 9 1 226 1 370 1 374 1 201 1 
273 3 238 3 225 1 126 1 346 3 279 3 49 3 23 1 
285 1 273 1 238 1 346 1 279 1 209 1 49 1 
285 1 273 1 238 1 225 1 26 1 12 1 346 1 279 1 49 1 
285 2 330 1 121 1 303 1 61 1 12 1 39 1 126 1 81 1 334 1 82 1 336 1 234 1 235 1 238 3 364 1 213 1 18 2 102 1 21 1 366 2 86 1 311 1 106 2 23 1 22 1 273 4 25 1 88 1 47 1 346 4 279 4 49 4 30 1 29 1 350 1 225 2 353 2 9 2 226 1 369 1 370 2 374 1 201 1 95 1 
236 1 273 2 238 1 123 1 126 1 346 1 279 2 49 2 23 1 
285 1 273 3 276 1 12 1 334 1 220 1 47 1 346 3 279 3 49 3 238 3 225 1 364 1 9 1 369 1 370 1 311 1 23 2 95 1 
273 2 238 2 225 1 12 1 35 1 346 2 252 1 279 2 49 2 23 1 
285 1 273 1 303 1 126 1 82 1 346 1 279 1 49 1 29 1 235 1 9 1 102 1 18 2 370 1 226 1 21 1 366 2 374 1 22 1 201 1 106 2 
285 1 273 1 303 1 126 1 82 1 346 1 279 1 49 1 29 1 235 1 265 1 9 1 18 2 370 1 226 1 21 1 167 1 366 2 22 1 201 1 106 2 
259 1 121 1 61 1 25 1 81 1 252 1 336 2 234 2 50 1 213 1 353 2 187 1 86 1 216 1 189 1 105 1 
285 1 273 1 238 1 218 1 370 1 346 1 279 1 49 1 
245 1 163 1 125 1 228 1 
143 1 163 1 228 1 
163 1 228 1 
163 1 228 1 
245 1 125 1 
245 1 125 1 
245 1 163 1 125 1 228 1 
119 1 163 1 228 1 
119 1 163 1 228 1 
119 1 163 1 228 1 
163 1 136 1 228 1 
163 1 136 1 228 1 
163 1 136 1 228 1 
287 1 124 1 175 1 126 1 334 1 335 1 206 1 306 1 238 2 308 1 154 1 270 1 247 1 273 2 195 1 47 1 346 2 279 2 49 2 112 1 74 1 143 1 163 1 228 1 
108 1 247 2 24 1 287 2 276 1 175 1 334 2 47 2 335 2 253 1 112 3 308 2 264 1 163 2 64 2 228 2 93 1 313 1 268 1 
134 1 173 2 256 1 207 2 40 1 
173 1 256 1 375 1 
173 1 40 1 375 1 
134 1 212 1 173 3 256 2 207 1 40 1 
134 1 173 2 256 1 359 1 207 1 40 1 
286 1 172 2 79 1 124 1 361 3 334 5 176 1 208 1 337 3 338 1 307 4 20 1 215 1 216 1 189 1 190 1 191 1 314 2 276 2 195 1 317 1 87 2 140 1 47 5 319 1 160 1 351 2 74 1 53 1 301 1 199 1 120 1 
285 1 330 1 289 1 334 2 209 1 307 2 238 1 273 1 276 1 47 2 319 1 222 1 346 1 279 1 347 1 49 1 297 1 225 1 199 1 373 1 302 1 
286 1 172 1 79 1 231 1 361 4 334 3 208 1 337 3 307 2 20 1 215 1 216 1 189 1 190 1 191 1 314 2 276 3 317 1 87 2 319 1 47 3 160 1 351 2 74 1 53 2 120 1 
286 1 172 2 79 2 231 1 361 7 334 4 208 1 337 5 307 3 20 1 215 2 267 1 216 2 189 2 190 1 191 1 314 4 276 4 317 1 87 4 345 1 319 1 47 4 160 1 7 1 351 4 74 2 53 3 120 2 
367 1 
251 1 
145 1 106 1 
18 1 366 1 106 1 
48 1 106 1 
366 1 106 1 
219 2 290 1 367 1 52 1 18 1 366 1 106 2 
57 1 336 7 234 3 150 1 223 1 128 1 368 1 117 2 54 1 164 1 43 1 165 2 215 1 3 1 36 1 189 1 55 4 193 3 
57 1 121 1 79 3 288 1 336 31 234 15 150 2 128 2 213 1 185 1 43 2 215 4 3 1 86 1 216 3 189 4 193 10 194 4 25 1 137 1 294 3 280 1 223 1 352 1 368 5 353 2 323 1 117 5 164 1 165 3 227 1 36 2 55 16 120 3 
230 1 57 1 121 2 261 1 336 9 234 4 150 1 128 1 213 2 43 1 215 1 86 2 3 1 189 1 193 4 25 2 280 1 223 1 368 1 353 4 117 3 165 2 36 1 55 5 
57 1 336 7 234 3 150 1 223 1 128 1 368 1 117 2 164 1 43 1 165 2 215 1 3 1 36 1 189 1 55 4 193 3 
57 1 336 7 234 3 150 1 223 1 128 1 368 1 117 2 164 1 43 1 165 2 215 1 3 1 36 1 189 1 55 4 193 3 
78 2 303 1 82 1 84 1 85 1 41 1 309 1 183 1 342 1 291 1 366 1 22 1 106 1 269 1 138 2 29 1 322 1 34 1 299 2 226 1 168 1 355 2 201 1 
357 1 329 1 78 1 173 2 303 1 204 1 82 1 40 1 127 1 212 1 42 1 342 1 291 1 138 1 197 1 29 1 322 1 255 1 73 1 299 1 256 1 226 1 168 1 375 1 355 1 201 1 
329 1 78 1 173 2 303 1 204 1 82 1 40 1 127 1 212 1 42 1 342 1 291 2 242 1 132 1 138 1 197 1 29 1 322 2 255 1 73 1 299 1 256 1 118 1 226 1 258 1 168 1 375 1 355 1 10 1 201 1 
357 1 329 1 78 1 173 2 303 1 204 1 82 1 40 1 212 1 41 1 42 1 342 1 291 3 242 1 138 1 29 1 322 3 349 1 255 1 73 1 299 1 256 1 118 1 226 1 258 2 168 1 375 1 355 1 10 1 201 1 
357 1 78 1 173 2 303 1 204 1 82 1 40 1 212 1 42 1 291 2 242 1 138 1 29 1 322 2 349 1 73 1 299 1 256 1 118 1 226 1 258 2 355 1 375 1 10 1 201 1 
274 1 
285 1 286 1 123 1 334 5 82 2 176 1 337 2 339 2 338 3 340 1 182 1 183 1 188 1 4 1 191 1 5 1 249 2 87 2 292 1 139 2 47 5 141 1 49 1 89 2 53 2 9 1 257 2 199 6 201 1 358 1 303 2 361 2 205 4 363 2 20 1 366 1 104 1 311 1 22 2 106 1 107 1 269 1 273 1 276 2 317 1 319 1 72 1 279 1 29 2 226 1 369 1 370 1 324 1 169 1 283 2 
285 1 273 1 249 1 123 1 292 1 334 3 205 2 47 3 141 1 279 1 49 1 338 1 113 1 9 1 199 2 370 1 369 1 188 1 4 1 311 1 104 1 169 1 
285 1 123 1 334 3 205 3 339 1 338 1 188 1 104 1 311 1 4 1 273 1 276 1 292 1 47 3 319 1 279 1 141 1 49 1 113 1 9 1 199 1 369 1 370 1 169 1 
285 1 123 1 334 3 205 3 338 1 339 1 188 1 104 1 311 1 4 1 273 1 249 1 276 1 292 1 47 3 319 1 279 1 141 1 49 1 113 1 89 1 9 1 369 1 370 1 199 2 169 1 
285 1 286 1 332 1 123 1 334 5 205 6 176 1 337 1 363 2 339 4 338 3 340 1 100 1 20 1 188 1 104 1 311 1 4 1 191 1 273 1 70 1 276 5 249 4 87 1 292 1 139 2 319 5 47 5 278 1 141 1 279 1 49 1 113 1 89 4 53 2 162 1 9 1 257 2 324 1 199 7 369 1 370 1 169 1 283 2 
285 1 286 1 123 1 334 4 176 1 337 1 338 2 339 2 340 1 188 1 4 1 191 1 249 2 87 1 292 1 139 2 47 4 141 1 49 1 89 2 9 1 53 2 257 2 199 4 361 2 205 4 363 2 20 1 311 1 104 1 107 1 273 1 276 2 319 1 279 1 324 1 370 1 369 1 169 1 283 2 
285 1 286 1 123 1 334 4 205 4 176 1 337 1 363 2 339 2 338 2 340 1 100 1 20 1 188 1 104 1 311 1 4 1 191 1 273 1 70 1 276 1 249 2 87 1 292 1 139 2 319 1 47 4 279 1 141 1 49 1 89 2 53 2 162 1 9 1 199 4 257 2 324 1 369 1 370 1 169 1 283 2 
285 1 286 1 123 1 334 4 205 4 176 1 337 1 363 2 339 2 338 2 340 1 100 1 20 1 188 1 104 1 311 1 4 1 191 1 273 1 70 1 276 1 249 2 87 1 292 1 139 2 319 1 47 4 279 1 141 1 49 1 89 2 53 2 162 1 9 1 199 4 257 2 324 1 369 1 370 1 169 1 283 2 
285 1 286 1 123 1 361 2 334 4 205 4 176 1 337 1 363 2 339 2 338 2 151 1 340 1 20 1 188 1 104 1 311 1 4 1 191 1 273 1 276 1 249 2 87 1 292 1 319 1 47 4 279 1 141 1 28 1 49 1 142 1 111 2 89 2 162 1 9 1 91 2 199 4 369 1 370 1 169 1 283 2 
285 1 286 1 123 1 334 4 205 5 176 1 337 1 363 2 338 2 339 3 340 1 100 1 20 1 188 1 104 1 311 1 4 1 191 1 273 1 70 1 276 1 249 3 87 1 292 1 139 2 319 1 47 4 278 1 279 1 141 1 49 1 89 3 53 2 162 1 9 1 257 2 324 1 369 1 370 1 199 5 169 1 283 2 
285 1 286 1 123 1 334 4 205 5 176 1 337 1 363 2 338 2 339 3 340 1 100 1 20 1 188 1 104 1 311 1 4 1 191 1 273 1 70 1 276 1 249 3 87 1 292 1 139 2 319 1 47 4 278 1 279 1 141 1 49 1 89 3 53 2 162 1 9 1 257 2 324 1 369 1 370 1 199 5 169 1 283 2 
285 1 286 1 123 1 334 4 176 1 337 1 338 2 339 2 340 1 188 1 4 1 191 1 249 2 87 1 292 1 47 4 141 1 49 1 89 2 9 1 91 2 199 4 361 2 205 4 363 2 20 1 311 1 104 1 107 1 273 1 276 1 319 1 279 1 28 1 111 2 370 1 369 1 169 1 283 2 
357 1 121 2 303 7 232 1 61 2 82 8 81 2 336 2 234 1 238 1 213 2 183 1 241 1 366 2 86 2 132 1 105 1 23 1 106 3 22 2 269 1 315 1 273 1 277 1 25 2 110 2 159 1 346 1 279 1 49 1 29 8 350 1 353 4 90 1 226 2 325 1 92 1 55 1 201 2 
121 1 79 1 12 1 61 1 81 1 336 3 234 2 238 1 213 1 187 1 215 1 86 1 216 1 189 1 193 1 273 1 25 1 346 1 252 1 279 1 49 1 321 1 33 1 225 1 117 1 353 2 35 1 120 1 55 1 
121 1 353 2 25 1 213 1 61 1 81 1 86 1 251 1 105 1 
121 2 79 3 61 2 126 1 81 1 336 15 234 5 305 1 213 2 187 8 215 3 86 2 271 1 194 4 248 1 25 2 137 1 159 1 294 3 252 8 321 1 350 1 116 1 353 4 323 2 35 5 55 10 120 3 
285 1 121 1 81 1 82 1 126 1 336 2 234 1 235 1 238 1 86 1 346 2 49 2 350 1 353 2 9 1 55 1 201 1 303 1 61 1 364 1 213 1 102 1 18 2 21 1 366 2 23 1 22 1 106 2 155 1 273 2 25 1 158 1 159 1 221 1 279 2 29 1 321 1 35 1 226 1 370 1 372 1 374 1 
285 1 121 2 79 1 333 1 39 1 82 1 81 2 336 5 234 2 235 1 238 1 187 2 86 2 343 1 193 1 45 1 346 2 252 2 49 2 350 1 353 4 9 1 55 3 201 1 97 1 303 1 61 2 364 1 213 2 102 1 18 2 21 1 215 1 366 2 22 1 23 1 106 2 273 2 25 2 279 2 29 1 321 1 368 1 226 1 370 1 75 1 374 1 120 1 
121 1 79 1 61 1 25 1 81 1 252 1 336 2 179 1 213 1 353 2 187 1 215 1 86 1 55 2 105 1 
259 1 121 1 61 1 25 1 81 1 252 1 336 2 234 2 213 1 353 2 187 1 86 1 216 1 189 1 105 1 
121 1 79 1 61 1 25 1 81 1 252 1 336 2 213 1 353 2 187 1 215 1 86 1 120 1 55 2 105 1 
121 1 79 1 61 1 25 1 81 1 252 1 336 2 179 1 213 1 353 2 187 1 215 1 92 1 86 1 55 2 
259 1 121 1 61 1 25 1 81 1 252 1 336 2 234 2 213 1 353 2 187 1 92 1 86 1 216 1 189 1 
121 1 79 1 61 1 25 1 81 1 252 1 336 2 213 1 353 2 187 1 215 1 92 1 86 1 120 1 55 2 
121 1 79 1 61 1 25 1 81 1 252 1 336 2 213 1 353 2 187 1 215 1 86 1 120 1 55 2 
285 1 121 1 303 1 61 1 39 1 126 1 82 1 81 1 336 2 234 1 235 1 18 2 102 1 213 1 21 1 366 2 86 1 22 1 106 2 273 1 25 1 159 1 346 1 279 1 49 1 29 1 350 1 353 2 9 1 226 1 370 1 374 1 55 1 201 1 
285 1 121 1 303 1 61 1 122 1 126 1 82 1 81 1 336 2 234 1 235 1 265 1 18 2 213 1 21 1 366 2 86 1 22 1 106 2 273 1 25 1 159 1 346 1 279 1 49 1 29 1 350 1 353 2 9 1 226 1 370 1 167 1 55 1 201 1 
121 1 79 1 61 1 25 1 81 1 252 1 336 2 321 1 213 1 353 2 187 1 215 1 86 1 120 1 55 2 
285 1 121 1 79 1 303 1 61 1 39 1 82 1 81 1 336 2 235 1 213 1 18 2 102 1 187 1 215 1 21 1 366 2 86 1 343 1 132 1 106 2 273 1 25 1 346 1 252 1 279 1 49 1 29 1 353 2 9 1 226 1 370 1 374 1 55 2 120 1 201 1 
203 1 121 1 79 1 12 1 61 1 81 1 336 2 238 1 213 1 215 1 187 1 86 1 193 1 273 1 25 1 346 1 279 1 252 1 49 1 321 1 225 1 368 1 353 2 35 1 120 1 55 2 
328 1 77 1 121 2 261 1 79 2 233 1 336 13 234 7 213 2 266 1 215 2 86 2 216 2 189 2 193 4 194 2 25 2 71 1 137 1 293 1 294 1 368 2 117 2 353 4 323 1 166 1 55 6 120 2 76 1 
328 1 77 4 121 3 261 1 79 3 233 2 336 26 234 12 213 3 266 2 131 1 215 3 86 3 216 2 189 2 193 4 194 2 25 3 6 1 293 1 137 2 294 2 280 2 281 1 161 1 115 1 368 2 117 2 353 6 166 1 55 14 120 3 282 1 171 1 
328 1 57 1 77 4 121 3 261 1 79 4 233 1 336 41 234 21 213 3 266 2 43 1 131 1 215 5 3 1 86 3 216 4 189 5 67 1 193 8 194 4 25 3 6 1 137 3 293 1 294 3 280 1 223 1 281 1 161 1 115 1 368 4 117 4 353 6 323 1 165 1 166 1 36 1 55 20 120 4 76 1 282 1 171 1 
328 1 57 1 77 4 121 4 261 1 79 4 233 1 336 38 234 18 213 4 266 2 43 1 131 1 215 5 3 1 86 4 216 3 189 4 67 1 193 7 194 4 25 4 6 1 137 3 293 1 294 3 280 2 223 1 281 1 161 1 115 1 368 3 117 4 353 8 323 1 165 1 166 1 36 1 55 20 120 4 76 1 282 1 171 1 
328 1 57 1 77 4 121 2 261 1 79 5 233 1 336 42 234 20 213 2 266 1 43 1 131 1 215 6 3 1 216 5 86 2 189 6 193 10 248 1 194 3 25 2 6 1 137 2 293 1 294 3 280 1 223 1 281 1 161 1 115 1 368 5 117 5 353 4 323 1 165 1 166 1 36 1 55 22 120 5 282 1 171 1 
247 1 24 1 308 1 287 1 63 1 163 1 335 1 228 1 313 1 268 1 
143 1 154 1 
32 1 174 1 247 1 308 1 287 1 80 1 163 1 335 1 228 1 
119 1 304 1 
2 1 136 1 16 1 
108 1 247 1 24 1 287 1 276 1 175 1 334 1 47 1 335 1 112 2 308 1 264 1 163 1 64 1 228 1 93 1 313 1 268 1 
108 1 247 1 24 1 287 1 276 1 175 1 334 1 47 1 335 1 112 2 308 1 264 1 163 1 64 1 228 1 93 1 313 1 268 1 
108 1 247 1 24 1 287 1 276 1 175 1 334 1 47 1 335 1 112 2 308 1 264 1 163 1 64 1 228 1 93 1 313 1 268 1 
2 1 119 1 304 1 
2 1 119 1 304 1 
136 1 16 1 
2 1 136 1 16 1 
206 1 306 1 
287 1 124 1 126 1 334 1 335 1 206 1 306 1 307 1 238 2 308 1 64 1 154 1 108 1 270 1 247 1 273 2 157 1 195 1 47 1 346 2 279 2 49 2 112 1 74 1 143 1 163 1 228 1 
121 1 303 2 61 1 82 2 81 1 336 2 149 1 234 1 180 1 213 1 310 1 86 1 217 1 315 1 273 2 25 1 110 2 159 1 279 2 49 2 29 2 321 1 31 1 350 1 353 2 226 1 55 1 201 1 
269 1 303 1 82 1 138 1 29 1 84 1 183 1 19 1 226 1 152 1 366 1 201 1 106 1 22 1 
357 1 37 1 173 2 303 1 275 1 204 1 82 1 138 1 40 1 29 1 212 1 255 1 256 1 42 1 152 1 226 1 375 1 201 1 
357 1 37 1 173 2 303 2 275 1 204 1 82 2 138 1 40 1 29 2 212 1 255 1 256 1 42 1 226 1 152 1 132 1 375 1 201 1 
357 1 58 1 173 2 303 1 275 1 204 1 82 1 138 1 40 1 29 1 212 1 255 1 256 1 42 1 226 1 375 1 201 1 
83 1 
286 1 276 1 87 1 319 1 362 1 176 1 337 1 224 1 20 1 191 1 
314 2 79 1 276 2 87 2 361 4 337 2 351 2 53 2 215 1 216 1 120 1 189 1 
338 1 276 1 199 1 334 1 319 1 47 1 
356 1 358 1 286 2 303 4 231 1 82 4 334 3 176 1 177 2 337 2 338 2 183 1 20 2 366 1 106 1 191 2 22 2 269 1 5 2 317 2 87 2 47 3 72 1 29 4 226 1 371 1 199 4 170 1 201 1 
251 1 
286 1 361 1 334 1 176 1 337 1 338 1 20 1 191 1 276 2 87 1 139 1 47 1 319 1 53 1 257 1 324 1 199 1 
145 2 286 2 79 1 303 1 14 1 361 6 334 2 290 1 82 1 62 1 176 2 337 4 338 1 237 1 18 1 20 2 215 1 103 1 366 1 216 1 311 1 189 1 22 1 191 2 106 4 314 3 344 1 316 1 276 3 135 1 45 1 317 1 87 3 219 1 47 2 29 1 351 3 53 3 199 2 226 1 120 1 201 2 
286 2 79 2 11 1 361 4 334 1 176 2 337 8 338 1 131 1 20 2 215 2 216 2 244 1 189 2 192 2 191 2 156 1 314 4 5 1 194 1 276 4 317 1 87 5 137 1 47 1 294 1 319 2 281 1 351 4 161 1 53 2 199 1 120 2 282 1 171 1 
285 1 57 1 330 1 286 1 334 1 176 1 209 1 337 2 100 1 238 1 43 1 20 1 215 2 189 1 192 2 191 1 156 1 273 1 87 2 47 1 346 1 279 1 49 1 225 1 373 1 36 1 302 1 56 1 
330 1 285 1 121 1 303 1 61 1 39 1 126 1 81 1 82 1 336 1 234 1 235 1 238 2 213 1 102 1 18 2 21 1 366 2 86 1 22 1 106 2 273 3 25 1 88 1 346 3 279 3 49 3 29 1 350 1 225 2 353 2 9 1 226 1 370 1 374 1 201 1 
286 1 5 1 276 2 317 1 87 1 361 2 319 1 176 1 337 1 351 1 53 1 20 1 191 1 
298 1 247 1 24 1 335 1 306 1 
247 1 295 1 335 1 
247 1 295 1 335 1 
247 1 295 1 335 1 
60 1 247 1 335 1 
60 1 247 1 335 1 
60 1 247 1 335 1 
247 1 335 1 
163 1 228 1 
57 1 121 1 261 1 25 1 336 10 234 5 368 2 353 2 213 1 117 3 43 2 215 2 86 1 36 2 55 5 189 2 56 1 193 5 
121 1 261 1 79 1 25 1 336 2 368 1 213 1 353 2 215 1 86 1 55 2 193 1 
121 1 261 1 79 1 25 1 336 4 234 2 368 1 117 1 213 1 353 2 215 1 216 1 86 1 189 1 120 1 55 2 193 2 
121 3 261 1 25 3 336 3 280 1 234 2 368 1 213 3 353 6 117 1 43 1 86 3 36 1 133 1 55 1 76 1 193 2 
57 2 121 5 261 1 79 3 288 1 336 34 234 18 210 1 213 5 185 1 43 3 215 5 3 1 86 5 216 3 133 1 189 5 193 12 194 4 25 5 137 1 294 3 280 2 223 1 368 5 353 10 323 1 117 7 165 1 227 1 36 3 55 16 120 3 76 1 
57 1 121 1 261 1 336 8 234 4 213 1 43 1 215 1 86 1 3 1 189 1 193 2 194 1 25 1 137 1 294 1 223 1 353 2 117 2 165 1 36 1 55 4 282 1 
57 1 121 2 261 1 79 1 336 11 234 5 210 1 213 2 43 1 215 2 3 1 86 2 189 1 193 3 194 2 25 2 137 1 294 1 223 1 368 1 117 2 353 4 323 1 165 1 36 1 55 6 120 1 282 1 
57 1 121 3 261 1 79 2 336 19 234 10 210 1 213 3 43 1 131 1 215 3 3 1 86 3 216 2 189 3 193 4 194 1 25 3 137 1 294 1 280 1 223 1 281 1 161 1 368 1 353 6 117 3 165 1 36 1 55 9 120 2 282 1 171 1 
57 1 121 3 261 1 79 2 336 17 234 7 210 1 213 3 43 1 131 1 215 3 3 1 86 3 216 1 189 2 193 5 194 1 25 3 137 1 294 1 280 1 223 1 281 1 161 1 368 2 353 6 117 3 165 1 36 1 55 10 120 2 282 1 171 1 
57 1 121 1 261 1 336 8 234 4 213 1 43 1 215 1 86 1 3 1 189 1 193 2 194 1 25 1 137 1 294 1 223 1 353 2 117 2 165 1 36 1 55 4 282 1 
121 1 261 1 79 2 336 12 234 6 213 1 131 1 215 2 86 1 216 2 189 2 193 2 194 1 25 1 137 1 294 1 281 1 161 1 368 1 353 2 117 1 55 6 120 2 282 1 171 1 
57 1 121 4 261 1 79 2 336 18 234 8 210 1 213 4 43 1 131 1 215 3 3 1 86 4 216 1 189 2 193 5 194 1 25 4 137 1 294 1 280 2 223 1 281 1 161 1 368 2 353 8 117 3 165 1 36 1 55 10 120 2 282 1 171 1 
121 4 261 1 79 3 336 16 234 7 213 4 131 1 215 3 86 4 216 2 189 2 193 6 194 1 25 4 137 1 294 1 280 2 281 1 161 1 368 3 353 8 117 3 55 9 120 3 282 1 76 1 171 1 
57 1 336 7 234 4 223 1 368 3 117 3 43 3 215 1 3 2 36 3 189 1 55 3 193 6 
57 1 121 4 261 1 79 2 336 18 234 8 213 4 43 1 131 1 215 3 3 1 86 4 216 1 189 2 193 4 194 1 25 4 137 1 294 1 280 2 223 1 281 1 161 1 368 1 353 8 117 3 165 1 36 1 55 10 120 2 282 1 76 1 171 1 
57 1 121 2 25 2 336 8 234 4 280 1 223 1 368 1 117 2 213 2 353 4 165 1 43 1 215 1 86 2 3 1 36 1 189 1 55 4 193 3 
251 1 
121 1 79 1 25 1 336 4 234 2 210 1 368 1 117 1 213 1 353 2 215 1 216 1 86 1 189 1 120 1 55 2 193 2 
194 1 137 1 294 1 336 2 55 1 234 1 
57 2 121 1 79 2 336 25 234 12 213 1 43 2 215 5 3 1 216 2 86 1 189 5 193 8 194 2 248 1 25 1 294 2 280 1 223 1 116 1 368 4 117 4 323 1 353 2 165 1 36 2 120 2 55 13 56 1 
194 1 336 1 234 1 
294 1 336 1 55 1 
121 1 79 1 25 1 45 1 336 6 234 3 210 1 368 2 353 2 213 1 117 2 215 1 86 1 216 1 120 1 55 3 189 1 193 4 
121 1 261 1 79 2 336 12 234 6 213 1 131 1 215 2 86 1 216 2 189 2 193 2 194 1 25 1 137 1 294 1 281 1 161 1 368 1 353 2 117 1 55 6 120 2 282 1 171 1 
57 1 336 6 234 3 368 1 117 1 43 1 215 1 36 1 55 3 189 1 193 2 
121 1 25 1 336 3 234 2 280 1 223 1 368 1 117 1 213 1 353 2 43 1 3 1 86 1 36 1 55 1 133 1 193 2 
236 1 273 1 123 1 126 1 279 1 49 1 327 1 
272 1 273 1 123 1 126 1 279 1 49 1 262 1 1 1 320 1 236 1 66 1 327 1 
269 1 69 1 303 4 82 4 29 4 263 1 183 1 226 1 366 1 132 1 201 1 22 1 106 1 
303 2 82 2 177 1 29 2 178 1 211 1 300 1 18 1 239 1 184 1 226 1 366 1 106 1 201 2 
173 1 303 1 204 1 226 1 82 1 40 1 375 1 29 1 201 1 22 1 
357 1 303 2 226 1 82 2 132 1 29 2 201 1 217 1 
269 1 303 4 232 1 82 5 177 1 29 5 263 1 183 1 90 1 226 2 325 1 366 2 132 1 22 1 106 3 201 2 
269 1 303 4 232 1 82 5 177 1 29 5 263 1 129 1 183 1 226 2 325 1 366 2 132 1 22 1 106 3 201 2 
303 1 82 1 251 1 29 1 22 1 
285 1 273 2 303 1 126 1 82 1 346 2 279 2 49 2 29 1 235 1 238 1 9 1 18 2 370 1 226 1 21 1 366 2 374 1 106 2 201 1 23 1 22 1 
285 1 303 1 147 1 82 1 126 1 177 1 238 1 18 1 21 1 366 1 23 1 106 1 273 1 346 1 279 2 49 2 29 1 226 1 374 1 201 1 
285 1 303 1 147 1 82 1 126 1 177 1 238 1 265 1 18 1 21 1 366 1 23 1 106 1 273 1 346 1 279 2 49 2 29 1 226 1 201 1 
145 1 303 3 82 3 334 2 177 1 235 1 18 1 366 1 44 1 311 1 106 4 22 1 69 1 276 1 219 1 47 2 319 1 48 1 29 3 226 1 199 1 96 1 201 1 
69 1 145 1 303 3 316 1 276 1 219 1 334 2 82 3 319 1 47 2 48 1 177 1 29 3 235 1 18 1 199 1 226 1 366 1 311 1 22 1 201 1 106 4 
303 1 277 1 226 1 82 1 29 1 201 1 
357 1 331 1 303 6 232 1 277 1 110 1 82 7 290 1 29 7 300 1 18 1 239 1 90 1 226 2 325 1 241 1 366 2 132 1 22 2 106 3 201 3 
285 2 121 2 39 1 126 3 82 1 81 2 336 14 234 7 235 1 238 1 43 2 187 1 343 1 86 2 3 1 132 1 189 3 193 5 346 2 252 1 49 2 353 4 9 1 55 7 56 1 201 1 57 2 97 1 303 1 61 2 147 1 102 1 310 1 213 2 18 2 21 1 215 3 366 2 23 1 106 2 273 2 25 2 279 2 29 1 321 1 223 1 368 1 117 4 165 1 226 1 370 1 374 1 36 2 
145 1 286 2 303 1 334 3 82 1 62 1 362 1 176 2 337 1 338 1 307 1 20 2 311 1 22 1 191 2 106 2 344 1 316 1 276 1 135 1 87 1 219 1 319 1 47 3 29 1 224 1 371 1 199 2 
303 2 277 1 14 1 219 1 82 2 290 1 29 2 18 1 226 1 366 1 132 1 106 2 201 2 
285 1 273 2 303 1 126 1 82 1 346 2 279 2 49 2 29 1 235 1 238 1 265 1 9 1 18 2 370 1 226 1 21 1 366 2 106 2 201 1 23 1 22 1 
331 1 303 1 82 1 290 1 177 1 29 1 300 1 18 1 239 1 226 1 366 1 106 1 201 2 
360 1 126 1 354 1 200 1 202 1 
285 1 59 1 260 1 276 1 360 2 126 1 334 2 319 1 47 2 307 1 9 1 370 1 369 1 243 1 311 1 354 2 202 1 200 2 95 1 
273 1 279 1 354 1 49 1 149 1 180 1 202 1 31 1 200 1 
59 1 260 1 202 1 
322 1 118 1 342 1 291 1 242 1 168 1 10 1 127 1 
146 1 51 1 322 4 341 1 118 3 365 1 342 1 291 4 242 2 258 2 168 1 229 1 312 1 10 2 
109 1 15 1 127 1 322 2 198 1 118 1 342 1 291 2 258 1 242 1 168 1 10 1 
127 1 322 3 341 2 8 1 118 1 342 1 291 3 242 1 168 1 229 1 312 2 10 1 
284 1 118 2 254 2 68 1 
322 1 65 1 342 1 291 1 168 1 127 1 
322 2 101 1 118 1 342 1 291 2 242 1 258 1 168 1 10 1 127 1 
98 1 
322 1 118 1 342 1 291 1 242 1 168 1 10 1 127 1 
251 1 
322 1 118 1 342 1 291 1 242 1 168 1 10 1 
299 1 78 1 291 1 
181 1 322 3 341 1 118 1 342 1 291 3 242 1 168 1 229 1 312 2 10 1 127 1 
322 2 99 1 118 1 342 1 291 2 242 1 258 1 168 1 10 1 
146 1 173 1 127 1 322 1 256 1 118 1 342 1 291 1 168 1 144 1 375 1 
322 1 118 1 342 1 291 1 168 1 10 1 127 1 
322 1 342 1 291 1 242 1 168 1 10 2 127 1 
246 1 46 1 127 1 322 2 17 1 118 1 342 2 291 2 168 2 10 1 
146 1 13 1 127 1 322 3 101 1 118 2 365 1 342 1 291 3 242 1 258 2 168 1 10 1 
173 2 148 1 40 1 127 1 322 2 212 1 256 1 118 1 342 1 291 2 242 1 258 1 168 1 375 1 10 1 
146 1 127 1 322 4 99 1 118 2 365 1 342 2 240 1 291 4 242 1 258 2 168 2 10 1 
127 1 322 3 101 1 118 1 342 1 291 3 258 1 242 1 168 1 312 1 10 1 
51 1 146 1 118 1 365 1 
118 1 10 1 

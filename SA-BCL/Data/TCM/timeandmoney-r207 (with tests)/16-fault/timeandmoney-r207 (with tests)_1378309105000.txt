#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 290 227 178 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 245 318 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (213,308) 69 46 311 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 280 80 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 290 333 206 283 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 290 234 206 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 290 333 206 283 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 290 333 206 283 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 290 333 206 283 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 280 80 260 234 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 290 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 46 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 290 227 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 290 234 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 335 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1079 | > -> ==
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2439 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
193 1 214 2 273 1 76 2 244 1 135 1 246 1 136 1 218 5 183 2 138 2 63 1 342 1 64 2 66 1 223 2 139 1 259 9 224 3 11 1 119 6 142 1 120 1 228 1 306 2 97 1 235 9 351 4 
193 1 214 2 273 1 76 2 244 1 135 1 246 1 136 1 218 5 183 2 138 2 63 1 342 1 64 2 66 1 223 2 139 1 259 9 224 3 11 1 119 6 142 1 120 1 228 1 306 2 97 1 235 9 351 4 
193 1 214 2 273 1 76 2 244 1 135 1 246 1 136 1 218 6 183 2 138 2 63 1 342 1 64 2 66 1 223 2 139 1 259 10 224 4 11 1 119 7 142 1 120 1 228 1 306 2 97 1 235 10 351 5 
193 1 214 2 273 1 76 2 244 1 135 1 246 1 136 1 218 4 183 2 138 2 63 1 342 1 64 2 66 1 223 1 139 1 259 7 224 2 11 1 119 4 142 1 228 1 306 2 97 1 235 7 351 3 
223 2 214 1 139 1 259 4 224 1 76 1 244 1 135 1 119 3 142 1 120 1 306 1 218 3 183 1 342 1 64 1 235 4 351 2 
155 1 139 1 259 2 76 1 135 1 195 1 228 1 306 1 218 1 183 1 266 1 138 1 342 1 63 1 235 2 64 1 
139 1 259 3 224 1 135 1 119 1 306 2 136 1 218 2 183 2 138 1 342 1 235 3 351 1 
193 1 214 1 76 1 78 1 244 1 135 1 246 1 136 1 218 5 183 2 138 1 342 1 64 1 223 2 139 1 259 9 224 3 119 7 142 1 72 1 120 1 306 2 235 9 351 4 
193 1 214 1 76 1 78 1 244 1 135 1 246 1 136 1 218 5 183 2 138 1 342 1 64 1 223 2 139 1 259 9 224 3 119 7 142 1 72 1 120 1 306 2 235 9 351 4 
335 1 
49 1 
115 1 122 2 256 2 312 1 109 2 176 2 74 2 32 2 
127 1 0 1 272 1 312 1 100 1 102 1 176 2 103 1 147 2 148 1 339 1 247 1 320 1 61 1 109 3 27 1 111 1 153 1 7 1 115 1 204 1 86 1 158 2 284 1 256 2 70 2 32 2 324 1 33 1 122 3 12 1 287 1 307 2 190 1 96 1 74 2 16 2 
304 1 122 1 256 1 312 1 197 1 109 1 176 1 74 1 233 1 32 1 
8 1 221 1 175 1 188 1 24 1 32 1 305 1 122 1 37 1 109 1 110 1 291 1 233 1 39 1 
8 2 221 1 256 1 176 1 188 1 24 1 32 1 305 1 122 1 37 1 109 1 110 1 74 1 291 2 233 1 
8 1 319 1 298 1 291 1 126 1 
8 2 319 1 110 1 295 1 24 1 291 2 83 1 126 1 
8 1 319 1 291 1 
8 1 312 1 256 1 176 1 32 1 304 1 122 1 197 1 109 1 74 1 291 1 233 1 126 1 154 1 
24 1 
8 2 319 1 110 1 323 1 295 1 24 1 291 2 126 1 
21 1 312 1 58 1 176 1 22 2 295 1 24 1 134 2 180 1 340 1 319 2 197 1 60 1 219 1 109 1 110 1 281 2 154 1 202 3 8 5 220 2 162 2 297 4 256 1 257 1 163 1 300 1 302 1 32 1 304 1 263 2 122 1 168 1 74 1 291 5 233 1 126 2 40 1 
335 1 
115 2 256 1 176 1 32 2 25 1 122 2 109 2 74 1 192 1 
213 1 69 1 343 1 
115 1 158 1 100 1 70 1 147 1 148 1 324 1 33 1 122 1 287 1 320 1 109 1 108 1 111 1 153 1 7 1 
213 1 158 1 332 1 256 1 100 1 176 1 70 1 147 1 148 1 303 1 32 1 324 1 33 1 122 2 287 1 320 1 109 2 111 1 153 1 7 1 
115 1 122 3 332 1 256 3 109 3 176 3 74 1 32 3 
304 1 122 1 256 1 109 1 176 1 233 1 32 1 
25 1 122 1 256 1 109 1 176 1 74 1 192 1 233 1 32 1 
270 1 99 1 0 1 272 1 332 1 312 1 100 1 176 3 103 1 147 1 148 1 25 1 339 1 247 1 320 1 61 1 109 4 27 1 111 1 153 1 7 1 8 1 115 1 204 1 86 1 158 1 221 1 256 3 188 1 70 1 32 3 303 1 324 1 33 1 305 1 122 4 287 1 307 2 37 1 96 1 74 2 16 1 291 1 233 1 
115 1 122 2 256 1 332 1 175 1 109 2 176 1 132 1 32 2 
8 1 270 1 221 1 332 2 256 3 176 3 188 1 24 1 303 1 32 3 25 1 305 1 122 3 59 1 37 1 109 3 74 1 291 1 233 1 
213 1 332 1 256 2 176 2 32 2 25 1 122 2 109 2 74 1 343 1 
115 1 158 1 100 1 70 1 147 1 148 1 324 1 33 1 122 1 287 1 320 1 109 1 111 1 153 1 7 1 
115 1 158 1 100 1 70 1 147 1 148 1 324 1 122 1 287 1 199 1 109 1 26 1 111 1 153 1 7 1 
213 1 0 1 1 1 134 1 339 1 247 1 61 1 280 1 343 1 204 1 205 1 86 2 284 1 69 1 161 1 285 1 89 1 263 1 308 1 307 2 123 1 96 1 16 3 237 1 
122 1 256 1 109 1 176 1 188 1 309 1 233 1 32 1 
115 1 332 2 256 4 175 1 176 4 132 1 32 5 303 1 25 1 264 1 122 5 109 5 74 1 231 1 
304 1 122 2 256 2 109 2 176 2 309 1 233 1 32 2 
121 1 314 1 
121 1 314 1 
166 1 150 1 
166 1 150 1 
166 1 150 1 
121 1 314 1 170 1 
91 1 121 1 314 1 
166 1 156 1 150 1 121 2 240 1 314 2 
121 1 314 1 170 1 
121 1 314 1 170 1 
121 1 314 1 310 1 
121 1 314 1 310 1 
121 1 314 1 310 1 
173 2 8 2 239 2 240 1 186 2 314 2 334 1 53 2 274 1 24 1 3 1 90 1 121 2 286 1 288 1 55 3 350 1 144 2 291 2 
173 1 238 1 239 1 314 1 241 1 176 2 77 1 198 1 109 2 151 1 8 1 115 1 253 1 186 1 256 2 32 2 121 1 286 1 91 1 122 2 55 1 144 1 291 1 172 1 
214 1 76 1 64 1 
195 1 76 1 64 1 
293 1 195 1 214 2 42 1 177 1 76 3 
293 1 195 1 214 1 242 1 177 1 76 2 
293 1 195 1 214 1 177 2 76 2 
241 1 22 1 77 1 295 1 23 1 24 1 134 1 338 1 49 1 319 1 60 1 198 1 248 1 80 1 110 1 152 1 280 1 112 1 28 1 202 3 8 5 220 1 297 1 162 1 117 2 140 1 263 1 35 1 291 5 126 4 237 1 
146 1 174 1 241 4 315 1 22 2 295 1 24 2 23 1 134 3 338 2 49 3 319 6 60 1 248 2 80 3 110 1 152 3 280 3 341 1 28 3 202 8 185 1 8 9 220 2 68 1 297 3 162 2 163 1 298 5 165 5 263 3 291 9 126 7 237 3 
241 1 22 1 24 2 338 1 134 1 49 2 248 1 80 1 110 1 280 1 152 1 112 1 28 1 202 3 8 3 220 1 162 1 297 1 163 1 117 1 31 1 140 1 263 1 291 3 126 2 237 1 
174 1 241 2 22 1 24 2 134 2 338 1 49 3 248 1 80 2 110 1 152 2 280 2 341 1 112 1 28 2 202 5 8 4 220 1 68 1 162 1 297 2 163 1 117 2 31 1 140 1 263 2 291 4 126 3 237 2 
335 1 
153 1 18 1 
349 1 
100 1 153 1 
254 2 159 1 100 1 250 1 148 1 153 3 
100 1 148 1 153 1 
249 1 153 1 
86 2 344 2 284 1 1 3 116 1 285 4 300 1 71 1 302 1 261 1 134 1 180 1 263 1 137 1 326 1 16 3 52 1 
344 2 86 3 284 1 1 3 116 1 285 4 300 1 71 1 302 1 261 1 134 1 180 1 263 1 137 1 326 1 16 4 52 1 
86 2 344 2 284 1 1 3 116 1 285 4 300 1 71 1 302 1 261 1 134 1 180 1 263 1 137 1 326 1 16 3 52 1 269 1 
344 1 86 2 284 1 1 1 116 2 294 1 285 1 178 1 227 1 137 1 16 3 290 1 191 1 
0 2 1 4 134 1 179 1 180 1 339 2 247 2 137 1 62 1 52 1 86 4 344 2 284 2 116 1 285 5 300 1 71 1 302 1 261 1 263 1 346 1 307 4 96 2 16 6 
329 1 214 1 42 1 131 1 76 2 147 1 276 1 135 1 195 1 218 1 183 1 200 1 138 1 111 1 342 1 64 1 113 1 158 1 139 1 259 2 208 1 70 1 301 1 119 1 306 1 287 1 94 1 169 1 235 2 20 1 
329 1 129 1 214 1 42 1 131 1 76 2 147 1 276 1 135 1 195 1 278 1 218 1 183 1 138 1 111 1 64 1 113 1 158 1 139 1 259 3 208 1 70 1 301 1 119 2 306 1 287 1 169 1 232 1 235 3 20 1 
329 1 129 1 42 1 214 1 131 1 76 2 147 1 276 1 135 1 195 1 218 1 138 1 111 1 113 1 64 1 158 1 139 1 259 2 208 1 70 1 119 2 287 1 169 1 232 1 235 2 
329 2 158 1 100 1 299 1 259 1 70 1 209 1 147 1 210 1 104 1 276 2 324 1 6 1 278 1 306 1 287 1 183 1 138 2 111 1 153 1 292 1 235 1 113 2 
329 1 214 1 42 1 131 1 76 2 147 1 276 1 195 1 183 1 138 1 111 1 342 1 64 1 113 1 158 1 259 1 208 1 70 1 301 1 306 1 287 1 94 1 169 1 232 1 235 1 20 1 
317 1 
100 1 194 1 22 1 147 2 295 1 245 1 338 1 318 1 319 2 60 1 182 1 81 1 111 1 153 1 202 1 8 2 322 1 220 1 158 2 162 1 297 1 70 2 209 1 324 2 287 1 125 1 291 2 292 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 2 318 1 322 1 319 1 194 1 323 1 295 1 291 2 
245 1 8 1 318 1 322 1 220 1 162 1 60 1 194 1 22 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 194 1 291 1 
245 1 8 1 318 1 322 1 220 1 162 1 60 1 194 1 22 1 291 1 
339 1 0 1 204 1 247 1 307 2 123 1 61 1 335 1 96 1 
213 3 204 1 0 1 311 1 86 1 284 1 69 3 294 1 46 1 167 1 339 1 247 1 307 2 61 1 96 1 16 2 191 1 
127 1 0 1 332 1 100 1 176 1 103 1 147 1 148 1 339 1 296 1 247 1 320 1 61 1 108 1 109 2 111 1 153 1 343 1 7 1 115 1 204 1 157 1 86 1 158 1 284 1 256 1 70 1 225 1 32 1 303 1 324 1 33 1 167 1 122 2 287 1 307 2 96 1 16 2 
213 4 0 2 1 4 176 1 277 2 180 1 134 4 320 1 80 2 280 2 52 1 85 1 7 1 86 10 284 7 285 5 324 1 287 1 96 2 16 17 233 1 327 1 98 2 237 2 21 1 332 1 100 1 103 1 147 1 148 1 339 2 247 2 61 2 109 2 27 1 111 1 153 1 343 4 204 2 67 1 158 1 69 4 256 1 300 1 70 1 71 1 302 1 303 1 32 1 261 1 167 1 33 1 263 4 122 2 34 1 307 4 265 1 
127 1 0 2 332 1 100 2 176 1 102 2 103 1 147 7 133 1 47 1 339 2 247 2 61 2 109 1 200 1 251 1 111 2 153 3 204 2 86 1 158 8 284 1 256 1 70 8 209 1 32 1 54 1 324 2 143 1 92 1 122 1 287 2 123 1 307 4 96 2 230 1 16 2 232 1 292 1 
204 1 0 1 284 2 256 1 176 1 32 1 25 1 167 1 339 1 263 1 122 1 247 1 95 1 307 2 80 1 61 1 109 1 96 1 74 1 16 2 280 1 
204 1 0 1 161 1 284 1 339 1 263 1 247 1 123 1 307 2 61 1 96 1 16 1 280 1 
213 1 204 1 0 1 205 1 86 2 1 1 69 1 285 1 134 1 339 1 247 1 123 1 307 2 61 1 96 1 16 2 343 1 237 1 
213 1 0 1 1 1 134 1 339 1 247 1 80 1 61 1 280 1 343 1 204 1 86 2 284 1 69 1 285 1 263 1 307 2 123 1 96 1 16 3 237 1 
204 1 0 1 161 1 284 1 47 1 339 1 263 1 247 1 307 2 61 1 96 1 16 1 280 1 
213 1 204 1 0 1 205 1 86 2 1 1 69 1 285 1 47 1 134 1 339 1 247 1 307 2 61 1 96 1 16 2 343 1 237 1 
213 1 0 1 1 1 47 1 134 1 339 1 247 1 80 1 61 1 280 1 343 1 204 1 86 2 284 1 69 1 285 1 263 1 307 2 96 1 16 3 237 1 
213 1 0 1 1 1 134 1 339 1 247 1 80 1 61 1 280 1 343 1 204 1 86 2 284 1 69 1 285 1 263 1 307 2 96 1 16 3 237 1 
127 1 0 1 100 1 103 1 147 1 148 1 339 1 247 1 320 1 61 1 109 1 27 1 111 1 153 1 7 1 115 1 204 1 86 1 158 1 284 1 70 1 324 1 33 1 122 1 287 1 307 2 96 1 16 2 
127 1 0 1 100 1 103 1 316 1 147 1 148 1 339 1 247 1 199 1 61 1 26 1 109 1 111 1 153 1 7 1 115 1 204 1 86 1 158 1 284 1 70 1 324 1 122 1 287 1 307 2 96 1 16 2 
213 1 0 1 1 1 134 1 339 1 247 1 80 1 61 1 280 1 343 1 204 1 86 2 284 1 69 1 285 1 167 1 263 1 307 2 96 1 16 3 237 1 
213 1 0 1 1 1 100 1 147 1 148 1 134 1 339 1 247 1 320 1 61 1 80 1 109 1 200 1 280 1 27 1 111 1 153 1 343 1 7 1 204 1 86 2 158 1 69 1 284 1 285 1 70 1 33 1 263 1 122 1 287 1 307 2 96 1 16 3 327 1 237 1 
0 1 176 1 25 1 134 1 339 1 247 1 61 1 80 1 109 1 280 1 204 1 86 1 284 1 256 1 32 1 167 1 263 1 122 1 289 1 307 2 74 1 96 1 16 2 237 1 
0 1 86 2 283 1 206 1 284 2 333 1 294 1 339 1 247 1 50 1 307 2 73 1 62 1 96 1 16 4 191 1 290 1 
0 1 283 1 206 2 86 4 284 4 294 2 333 2 339 1 247 1 50 2 307 2 73 1 62 1 96 1 16 8 191 2 290 2 234 1 
0 1 86 2 283 1 206 1 284 2 333 1 294 1 339 1 247 1 50 1 307 2 73 1 62 1 96 1 16 4 191 1 290 1 
0 1 86 2 283 1 206 1 284 2 333 1 294 1 339 1 247 1 50 1 307 2 73 1 62 1 96 1 16 4 191 1 290 1 
0 1 86 2 283 1 206 1 284 2 333 1 294 1 339 1 247 1 50 1 307 2 73 1 62 1 96 1 16 4 191 1 290 1 
173 1 239 1 121 1 240 1 288 1 186 1 314 1 274 1 144 1 88 1 
173 1 252 1 65 1 239 1 121 1 186 1 314 1 258 1 144 1 
91 1 151 1 
8 1 173 1 239 1 240 1 186 1 314 1 334 1 53 1 274 1 24 1 90 1 286 1 121 1 288 1 55 2 350 1 144 1 291 1 
8 1 173 1 239 1 240 1 186 1 314 1 334 1 53 1 274 1 24 1 90 1 286 1 121 1 288 1 55 2 350 1 144 1 291 1 
8 1 173 1 239 1 240 1 186 1 314 1 334 1 53 1 274 1 24 1 90 1 286 1 121 1 288 1 55 2 350 1 144 1 291 1 
156 1 14 1 170 1 
156 1 14 1 170 1 
156 1 310 1 164 1 
310 1 164 1 
238 1 253 1 
173 1 238 1 239 1 314 1 241 1 334 1 176 2 77 1 198 1 109 2 151 1 8 1 115 1 253 1 186 1 256 2 53 1 32 2 226 1 121 1 91 1 122 2 55 1 144 1 291 1 126 1 172 1 
14 1 170 1 
310 1 164 1 
127 1 128 1 0 1 75 1 100 1 102 2 103 1 147 2 217 1 339 1 247 1 61 1 109 2 111 1 153 1 203 1 204 1 86 1 158 2 284 1 10 1 70 2 32 2 167 1 143 1 122 2 287 1 307 2 96 1 230 1 16 2 
329 1 158 2 214 1 42 1 131 1 76 2 70 2 147 2 44 1 45 1 195 1 287 1 189 1 169 1 200 1 111 1 232 1 64 1 20 1 
329 1 158 1 214 1 42 1 131 1 76 2 70 1 147 1 195 1 189 1 287 1 169 1 56 1 232 1 111 1 64 1 20 1 
329 1 158 1 100 1 70 1 147 1 209 1 44 1 324 1 6 1 287 1 111 1 153 1 292 1 236 1 
329 1 158 1 214 1 42 1 131 1 76 2 70 1 147 1 44 1 45 1 195 1 287 1 189 1 169 1 232 1 111 1 64 1 20 1 
345 1 
335 1 
22 1 295 1 24 2 49 1 319 1 60 1 107 1 110 1 282 1 202 1 8 1 220 1 297 1 162 1 31 1 124 1 291 1 
5 2 277 2 181 1 134 2 216 1 49 8 319 5 182 1 80 2 280 2 281 2 8 5 220 3 221 2 324 1 287 2 291 5 18 3 237 2 330 2 100 1 22 3 147 1 295 3 148 1 24 5 338 2 60 3 110 1 152 4 201 1 111 1 153 6 28 4 202 8 207 2 158 1 159 1 30 2 254 2 162 3 297 5 70 1 31 4 263 2 267 2 
220 1 297 3 162 1 294 1 31 2 22 1 2 1 24 2 260 1 263 1 49 4 60 1 80 1 280 1 152 3 191 1 290 1 234 1 28 3 202 2 
21 1 312 1 176 1 22 1 180 1 134 1 60 1 197 1 109 1 281 2 154 1 202 2 8 1 220 1 162 1 297 2 256 1 300 1 302 1 32 1 304 1 263 2 122 1 13 1 168 1 74 1 291 1 233 1 
220 1 162 1 297 1 22 1 24 1 340 1 60 1 110 1 40 1 202 1 
297 3 31 3 24 3 277 1 134 2 263 2 49 6 80 2 280 2 152 3 281 2 28 3 237 2 202 5 
8 1 319 1 110 1 295 1 24 1 291 1 
100 2 215 1 22 2 147 4 295 2 148 1 4 1 338 2 319 4 60 1 182 2 106 1 81 1 111 2 153 2 202 2 8 3 220 2 255 1 160 1 158 4 187 1 162 2 297 2 163 1 70 4 209 1 324 2 262 1 347 2 287 3 125 1 291 3 292 1 
0 1 272 1 312 1 100 1 176 2 103 1 147 1 148 1 339 1 247 1 320 1 61 1 109 3 27 1 111 1 153 1 7 1 115 1 204 1 86 1 158 1 256 2 70 1 32 2 324 1 33 1 122 3 287 1 307 2 96 1 74 2 16 1 
22 1 24 3 338 1 49 4 60 1 182 1 110 1 152 2 281 1 28 2 202 2 220 1 344 1 162 1 297 1 31 2 
239 1 87 1 144 1 
253 1 239 1 288 1 212 1 144 1 
239 1 87 1 144 1 
239 1 87 1 144 1 
239 1 144 1 243 1 
239 1 144 1 243 1 
239 1 144 1 243 1 
239 1 144 1 
121 1 314 1 
0 2 344 1 86 3 284 2 1 2 285 3 300 1 71 1 302 1 261 1 134 1 180 1 339 2 263 1 346 1 247 2 307 4 96 2 16 5 52 1 
335 1 
0 1 86 2 1 1 284 1 285 1 134 1 339 1 263 1 247 1 307 2 80 1 96 1 184 1 280 1 16 3 237 1 
86 1 284 1 294 1 16 2 191 1 290 1 
86 1 284 1 294 1 16 2 191 1 46 1 
86 1 294 1 16 1 
284 1 16 1 191 1 
0 1 86 3 284 2 1 2 285 2 277 1 134 1 339 1 263 1 247 1 307 2 80 1 96 1 184 1 16 5 280 1 237 1 
339 1 0 1 86 1 247 1 284 1 294 1 307 2 96 1 62 1 16 2 191 1 290 1 234 1 
134 1 86 1 263 1 284 1 16 2 302 1 
0 1 86 2 284 1 1 1 285 2 300 1 71 1 261 1 180 1 339 1 346 1 247 1 36 1 307 2 96 1 16 3 52 1 
0 1 21 1 86 4 1 2 284 4 285 4 300 1 71 2 302 1 180 1 134 2 339 1 263 2 247 1 307 2 96 1 62 1 16 8 
0 1 284 1 339 1 263 1 247 1 307 2 62 1 96 1 280 1 16 1 
0 1 86 2 1 1 284 1 285 1 134 1 339 1 263 1 247 1 307 2 80 1 62 1 96 1 280 1 16 3 237 1 
0 3 86 2 1 1 284 1 130 1 285 2 300 1 71 1 180 1 339 3 346 1 247 3 36 1 307 6 62 1 96 3 16 3 
0 3 86 1 284 1 294 1 130 1 227 1 339 3 247 3 307 6 62 1 96 3 16 2 184 1 191 1 290 1 
339 1 0 1 86 1 247 1 284 1 294 1 307 2 96 1 62 1 16 2 191 1 290 1 234 1 
0 2 86 1 284 1 294 1 339 2 247 2 307 4 96 2 62 1 184 1 16 2 191 1 290 1 234 1 
0 3 41 1 1 3 294 1 2 1 180 1 134 3 339 3 247 3 80 2 62 1 184 1 280 2 52 1 344 1 86 9 284 5 285 3 300 1 302 1 261 1 260 1 263 3 346 1 307 6 96 3 16 14 191 1 290 1 234 1 237 2 268 1 
339 1 0 1 86 1 247 1 284 1 294 1 307 2 96 1 62 1 16 2 191 1 290 1 234 1 
339 1 0 1 86 1 247 1 284 1 294 1 307 2 96 1 62 1 16 2 191 1 290 1 234 1 
0 1 1 1 41 1 294 1 2 1 134 2 339 1 247 1 80 2 62 1 280 2 86 6 284 4 285 1 260 1 263 2 307 2 96 1 16 10 191 1 290 1 234 1 237 2 268 1 
0 2 86 1 284 1 294 1 339 2 247 2 307 4 62 1 96 2 184 1 16 2 191 1 290 1 234 1 
0 2 86 1 284 1 294 1 130 1 339 2 247 2 307 4 96 2 62 1 16 2 191 1 290 1 234 1 
21 1 344 1 86 4 1 4 284 4 285 7 300 2 71 3 302 2 261 1 134 3 180 2 263 3 16 8 52 1 
0 2 86 1 284 1 294 1 130 1 339 2 247 2 307 4 96 2 62 1 16 2 191 1 290 1 234 1 
115 1 122 1 175 1 109 1 348 1 132 1 32 1 
115 1 331 1 175 1 132 1 32 1 122 1 93 1 51 1 79 1 109 1 348 1 19 1 
158 1 335 1 70 1 147 1 324 1 
115 1 158 1 332 1 256 1 100 1 176 1 70 1 147 1 148 1 32 1 324 1 33 1 122 2 287 1 109 2 111 1 153 1 7 1 
115 1 158 1 332 1 256 1 100 2 176 2 188 1 70 1 147 1 148 2 32 2 325 1 33 1 305 1 122 2 347 1 287 1 249 1 109 2 111 1 233 1 153 3 7 1 
332 1 100 2 176 2 147 2 148 2 26 1 109 2 249 1 111 1 153 3 7 1 115 1 158 2 222 1 256 1 188 1 70 2 32 2 325 1 305 1 347 1 122 2 287 1 233 1 
100 1 101 1 147 3 148 1 24 1 275 1 319 1 249 1 110 1 111 1 153 4 8 2 254 1 158 3 221 1 222 1 70 3 325 1 324 1 347 1 287 1 291 2 18 1 
8 2 158 3 254 1 221 1 222 1 100 1 70 3 147 3 24 1 148 1 324 1 325 1 347 1 287 1 319 1 249 1 110 1 267 1 291 2 111 1 18 1 153 4 
158 1 287 1 70 1 147 1 251 1 111 1 
158 1 159 1 187 1 100 1 215 1 70 1 147 1 148 1 324 1 211 1 287 2 111 1 153 1 
213 1 0 2 1 2 332 1 100 1 176 1 147 1 148 1 134 1 180 1 217 1 339 2 247 2 320 1 61 2 109 2 200 1 27 1 111 1 153 1 343 1 52 1 7 1 204 2 344 1 86 2 158 1 69 1 284 1 256 1 285 2 300 1 70 1 302 1 32 1 261 1 167 1 33 1 263 1 122 2 34 1 287 1 307 4 96 2 16 3 327 1 
22 2 147 1 295 1 24 1 5 1 340 1 319 2 60 2 110 1 153 2 202 1 8 3 220 2 158 1 160 1 207 1 30 1 254 1 297 1 162 2 221 1 70 1 324 1 267 1 291 3 126 1 18 1 40 1 
254 1 158 2 159 1 100 1 70 2 147 2 148 1 216 1 287 2 200 1 251 1 111 1 153 2 
9 1 158 4 222 1 100 1 70 4 147 4 209 1 324 1 287 1 200 1 111 1 292 1 153 1 
158 1 255 1 187 1 100 1 215 1 70 1 147 1 148 1 4 1 48 1 287 2 111 1 153 1 
195 1 158 1 287 1 131 1 76 1 70 1 147 1 111 1 64 1 324 1 
158 2 75 1 100 1 70 2 147 2 143 1 287 1 200 1 232 1 111 1 153 1 
9 1 158 5 100 2 70 5 209 1 147 4 324 1 54 1 143 1 347 1 92 1 287 2 200 1 111 2 292 1 153 3 
9 1 158 5 100 2 70 5 209 1 147 4 324 1 143 1 347 1 92 1 287 2 200 1 111 2 292 1 153 3 171 1 
115 1 158 1 332 1 256 1 100 1 176 1 70 1 147 1 148 1 32 1 324 1 122 2 287 1 109 2 26 1 111 1 153 1 7 1 
158 1 159 1 187 1 100 1 215 1 70 1 147 1 148 1 211 1 347 1 287 2 111 1 153 1 
115 1 321 1 29 1 229 1 149 1 
8 2 270 1 115 1 321 1 271 1 29 2 221 1 188 1 24 1 149 2 305 1 196 1 37 1 229 2 110 1 17 1 291 2 233 1 126 1 
128 1 321 1 29 1 10 1 32 1 122 1 229 1 109 1 203 1 
321 1 271 1 17 1 
335 1 
135 1 306 1 218 1 183 1 139 1 259 1 235 1 
138 1 113 1 235 1 
135 1 141 1 228 2 306 1 279 1 218 1 183 1 139 1 259 3 342 1 84 1 235 3 
135 1 119 1 306 1 223 1 218 1 183 1 139 1 259 2 235 2 
142 1 306 1 214 1 218 1 183 1 259 1 76 1 342 1 64 1 235 1 351 1 
306 1 218 1 183 1 139 1 259 1 342 1 235 1 
135 1 306 1 183 1 139 2 259 1 342 1 235 1 
114 1 139 1 259 2 118 1 306 2 218 1 183 2 57 1 342 1 235 2 
193 1 139 1 259 3 224 1 135 1 119 2 246 1 306 1 218 2 183 1 342 1 235 3 351 1 
42 1 214 1 43 1 139 1 259 2 76 2 135 1 195 1 119 1 306 1 218 1 183 1 342 1 235 2 64 1 
223 1 139 1 259 4 224 1 135 1 119 2 120 1 306 2 218 2 183 2 342 1 235 4 351 1 
135 1 306 1 218 1 183 1 139 1 259 1 342 1 235 1 
139 2 259 4 224 1 337 1 135 2 119 2 228 1 306 1 279 1 218 3 183 1 84 1 235 4 351 1 
139 1 259 2 78 1 119 1 135 1 306 1 105 1 218 1 183 1 38 1 342 1 235 2 
135 1 228 2 306 1 279 1 218 1 183 1 139 1 259 3 342 1 84 2 145 1 235 3 
218 2 82 1 15 2 328 1 
306 1 313 1 183 1 259 1 342 1 235 1 
135 1 119 1 246 1 306 1 218 1 183 1 139 1 259 2 342 1 235 2 
336 1 
135 1 306 1 218 1 183 1 139 1 259 1 342 1 235 1 
259 3 139 1 119 1 135 1 228 1 246 1 306 1 218 1 183 1 342 1 235 3 
218 1 224 1 337 1 351 1 
218 1 139 1 

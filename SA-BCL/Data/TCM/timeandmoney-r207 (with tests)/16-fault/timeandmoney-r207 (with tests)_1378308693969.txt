#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 64 301 268 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 64 301 268 2 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 64 301 268 (177,289) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 64 301 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 64 301 268 (177,289) (177,289) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 64 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 64 301 268 (177,289) (177,289) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 0 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 64 301 268 (177,289) (177,289) 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 162 55 316 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 64 164 85 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 48 99 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 64 301 268 2 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 64 213 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 64 213 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 64 213 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 64 213 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 64 213 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 275 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (38,262,291,294) (38,262,291,294) 82 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 980 | = null
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3137 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String; | RETURN | 2871 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
291 2 3 1 176 1 294 9 5 1 7 1 8 1 94 1 53 1 262 6 217 1 264 1 265 2 300 3 19 9 148 4 150 2 188 2 152 1 321 2 32 1 284 5 81 1 38 2 168 2 39 1 247 1 331 1 
291 2 3 1 176 1 294 9 5 1 7 1 8 1 94 1 53 1 262 6 217 1 264 1 265 2 300 3 19 9 148 4 188 2 150 2 152 1 321 2 32 1 284 5 81 1 38 2 168 2 39 1 247 1 331 1 
291 2 3 1 176 1 294 10 5 1 7 1 8 1 94 1 53 1 262 7 217 1 264 1 265 2 300 4 19 10 148 5 188 2 150 2 152 1 321 2 32 1 284 6 81 1 38 2 168 2 39 1 247 1 331 1 
291 2 3 1 176 1 294 7 5 1 7 1 8 1 94 1 53 1 262 4 217 1 265 2 300 2 19 7 148 3 188 2 150 1 152 1 321 2 32 1 284 4 81 1 38 2 168 2 39 1 247 1 331 1 
291 1 176 1 294 4 5 1 7 1 8 1 321 1 262 3 264 1 265 1 300 1 284 3 19 4 148 2 168 1 38 1 39 1 150 2 
248 1 291 1 176 1 294 2 7 1 114 1 182 1 321 1 32 1 284 1 19 2 81 1 38 1 168 1 39 1 188 1 
291 2 176 1 294 3 7 1 53 1 262 1 300 1 284 2 19 3 148 1 38 2 39 1 188 1 
251 1 291 2 176 1 294 9 5 1 7 1 295 1 8 1 53 1 262 7 217 1 265 1 264 1 300 3 19 9 148 4 188 1 150 2 321 1 284 5 38 2 168 1 39 1 331 1 
251 1 291 2 176 1 294 9 5 1 7 1 295 1 8 1 53 1 262 7 217 1 265 1 264 1 300 3 19 9 148 4 188 1 150 2 321 1 284 5 38 2 168 1 39 1 331 1 
275 1 
322 1 93 1 83 2 
301 1 268 1 64 1 
2 1 301 1 268 1 64 1 
289 1 301 1 268 1 64 1 
250 1 273 1 234 1 178 1 215 1 322 1 279 1 78 1 143 1 56 1 126 1 165 1 244 1 224 1 
301 1 64 1 
90 1 273 1 56 1 68 1 125 1 
322 1 208 1 273 2 56 2 68 1 125 1 178 1 156 1 
273 1 56 1 125 1 
289 1 301 1 273 1 56 1 68 1 177 1 268 1 64 1 
322 1 
322 1 208 1 211 1 273 2 56 2 68 1 125 1 178 1 
41 1 208 1 89 2 68 2 273 5 292 1 178 1 298 1 297 2 183 1 159 1 261 1 141 1 322 1 56 5 220 1 125 2 328 1 103 2 
161 1 138 1 
161 1 138 1 
272 1 330 1 
272 1 330 1 
272 1 330 1 
218 1 161 1 138 1 
218 1 161 1 138 1 
123 1 161 1 138 1 
272 1 161 2 314 1 330 1 319 1 138 2 
218 1 161 1 138 1 
161 1 21 1 138 1 
161 1 21 1 138 1 
161 1 21 1 138 1 
184 1 161 1 273 1 56 1 20 1 312 1 129 1 64 1 169 1 320 1 138 1 
192 1 273 2 312 1 314 1 52 1 158 1 138 2 320 2 184 2 322 1 282 1 238 2 161 2 56 2 285 1 286 1 20 2 129 3 169 2 
321 1 265 1 168 1 
321 1 168 1 182 1 
84 1 265 2 61 1 49 1 168 3 182 1 
26 1 265 1 61 1 49 1 168 2 182 1 
265 1 49 1 61 2 168 2 182 1 
41 2 42 2 208 1 174 1 89 1 91 1 93 1 293 1 178 1 51 1 297 1 298 1 98 1 56 5 103 1 149 1 269 2 228 1 191 1 273 5 68 4 233 1 73 2 115 1 119 1 322 2 281 1 240 1 125 1 205 1 328 3 171 1 83 3 
289 1 68 2 273 2 134 1 90 1 177 1 109 1 178 1 322 1 301 1 56 2 125 1 101 1 268 1 64 1 
41 2 42 2 89 1 174 1 91 1 93 2 293 1 178 1 297 1 51 1 98 1 56 3 103 1 149 1 228 1 269 1 68 2 273 3 233 1 73 2 159 1 119 1 322 3 205 1 328 3 171 1 83 4 
41 4 42 4 209 1 89 1 174 2 91 1 93 3 293 2 178 1 9 1 297 1 51 2 98 2 56 4 103 1 149 2 228 1 269 2 273 4 68 3 233 2 154 1 73 4 159 1 119 1 322 4 205 1 328 5 171 2 83 7 
67 1 275 1 236 1 
241 1 102 1 
324 1 
304 1 167 1 102 1 
45 1 102 1 
304 1 102 1 
252 1 155 1 304 1 167 1 102 3 318 2 
189 5 271 1 231 1 233 1 293 1 253 3 48 1 6 1 116 1 12 2 202 1 33 1 16 1 17 4 59 9 127 2 305 1 
189 5 271 1 231 1 233 1 293 1 253 3 48 1 6 1 116 1 12 2 202 1 33 1 16 1 17 4 59 9 127 2 305 1 
189 5 271 1 231 1 233 1 293 1 253 3 48 1 6 1 116 1 12 2 202 1 33 1 16 1 17 4 59 9 127 2 305 1 206 1 
189 1 0 1 16 1 59 1 305 2 12 1 
293 1 253 4 6 1 48 1 257 1 12 2 96 4 16 1 59 11 17 5 60 2 100 2 305 1 189 6 270 1 271 1 232 1 233 1 116 1 237 2 33 1 202 1 166 2 127 3 
84 1 291 1 176 1 294 2 7 1 214 1 182 1 262 1 265 1 221 1 19 2 147 1 226 1 188 1 151 1 66 1 153 2 193 1 29 1 315 1 31 1 198 1 321 1 203 2 79 1 284 1 242 2 128 1 168 2 38 1 39 1 
84 1 291 1 294 3 7 1 214 1 182 1 262 2 265 1 221 1 147 1 19 3 187 1 226 1 188 1 151 1 153 1 29 1 315 1 31 1 198 1 321 1 203 1 204 1 284 1 242 1 128 1 131 1 38 1 168 2 39 1 
84 1 294 2 7 1 214 1 182 1 262 2 265 1 147 1 19 2 226 1 188 1 151 1 153 1 29 1 31 1 198 1 321 1 203 1 204 1 284 1 242 1 128 1 131 1 168 2 39 1 
291 1 46 1 294 1 214 1 13 1 142 1 263 1 19 1 147 2 304 1 185 1 102 1 187 1 226 2 188 2 153 1 31 2 198 1 277 1 121 1 203 1 242 1 38 1 
84 1 151 1 291 1 176 1 153 1 294 1 29 1 214 1 315 1 31 1 182 1 198 1 321 1 265 1 203 1 79 1 204 1 221 1 242 1 128 1 19 1 147 1 168 2 38 1 226 1 188 1 
136 1 
87 1 89 1 88 1 93 2 4 2 259 1 263 1 266 2 267 1 102 1 23 1 103 1 24 1 107 2 273 4 111 1 198 1 201 2 203 2 125 6 287 1 41 2 208 3 46 2 214 1 296 1 298 1 297 1 142 1 56 4 146 2 304 1 306 2 228 1 153 2 310 1 72 1 313 2 235 2 322 1 162 1 242 2 328 2 83 2 
24 1 208 1 88 1 273 2 211 1 72 1 111 1 56 2 266 1 125 2 267 1 
24 1 88 1 273 1 56 1 4 1 267 1 111 1 72 1 235 1 
24 1 208 1 88 1 211 1 273 2 4 1 72 1 111 1 235 1 201 1 56 2 266 1 125 2 267 1 
41 1 289 1 208 3 88 1 89 1 211 1 177 1 93 2 4 3 178 2 298 1 297 1 55 1 301 1 56 4 266 4 146 2 267 1 268 1 306 2 225 1 64 1 103 1 190 1 24 1 107 2 273 4 309 1 310 1 313 2 111 1 72 1 235 3 322 2 201 4 162 1 125 7 80 1 328 1 
41 1 208 2 88 1 89 1 4 2 93 2 178 1 296 1 297 1 298 1 56 3 266 2 146 2 267 1 306 2 103 1 24 1 107 2 273 3 310 1 111 1 72 1 313 2 235 2 322 2 201 2 162 1 125 4 328 1 83 2 
41 1 208 2 88 1 89 1 4 2 93 2 178 1 297 1 298 1 55 1 56 3 266 2 146 2 267 1 306 2 103 1 190 1 24 1 107 2 309 1 273 3 310 1 111 1 72 1 313 2 235 2 322 1 201 2 162 1 125 4 328 1 
41 1 208 2 88 1 89 1 4 2 93 2 178 1 297 1 298 1 55 1 56 3 266 2 146 2 267 1 306 2 103 1 190 1 24 1 107 2 309 1 273 3 310 1 111 1 72 1 313 2 235 2 322 1 201 2 162 1 125 4 328 1 
24 1 88 1 273 1 313 1 72 1 111 1 316 1 55 1 56 1 162 1 146 1 267 1 
41 1 208 2 88 1 89 1 93 2 4 3 178 1 298 1 297 1 55 1 56 3 266 3 146 2 267 1 306 2 103 1 190 1 24 1 107 2 273 3 309 1 310 1 313 2 111 1 72 1 235 3 322 1 201 3 162 1 125 5 80 1 328 1 
41 1 208 2 88 1 89 1 93 2 4 3 178 1 298 1 297 1 55 1 56 3 266 3 146 2 267 1 306 2 103 1 190 1 24 1 107 2 273 3 309 1 310 1 313 2 111 1 72 1 235 3 322 1 201 3 162 1 125 5 80 1 328 1 
249 2 41 1 208 2 88 1 89 1 4 2 178 1 296 1 297 1 298 1 56 3 266 2 146 2 267 1 103 1 24 1 273 3 108 2 111 1 72 1 313 2 235 2 322 1 201 2 162 1 125 4 163 1 328 1 83 2 
43 1 174 7 92 1 293 7 253 13 48 1 6 1 257 1 180 1 51 7 216 1 181 1 95 1 96 8 14 1 17 22 59 46 60 4 100 4 63 2 105 1 189 24 270 2 271 1 28 4 233 6 274 2 276 1 116 7 199 1 118 1 237 4 280 1 323 4 33 1 124 3 243 1 326 2 127 6 166 4 171 6 
174 3 92 2 293 3 253 3 257 1 180 1 51 3 181 2 216 1 95 1 96 6 14 1 17 11 59 24 60 3 100 3 63 2 105 1 189 13 270 2 28 2 233 2 113 1 116 1 118 1 199 1 237 3 280 1 323 2 124 3 243 1 127 2 166 3 171 2 
174 7 92 1 293 7 253 14 48 1 6 1 257 1 180 1 51 7 216 1 181 1 95 1 96 8 14 1 17 22 59 46 60 4 100 4 63 2 105 1 189 24 270 2 271 1 28 4 233 6 274 2 113 1 276 1 116 7 199 1 118 1 237 4 280 1 323 4 33 1 124 3 243 1 326 2 127 7 166 4 171 6 
174 7 92 1 293 7 253 14 48 1 6 1 257 1 180 1 51 7 216 1 181 1 95 1 96 8 14 1 17 22 59 46 60 4 100 4 63 2 105 1 189 24 270 2 271 1 28 4 233 6 274 2 113 1 276 1 116 7 199 1 118 1 237 4 280 1 323 4 33 1 124 3 243 1 326 2 127 7 166 4 171 6 
174 7 92 1 293 8 253 14 48 1 6 1 257 1 180 1 51 7 216 1 181 1 12 1 95 1 96 4 14 1 17 25 59 52 60 2 100 2 63 2 105 1 189 27 270 1 271 1 28 4 233 8 274 2 113 1 116 7 199 1 118 1 237 2 280 1 323 4 202 1 33 1 124 3 243 1 326 2 127 7 166 2 171 7 
184 1 161 1 285 1 286 1 110 1 20 1 314 1 169 1 320 1 138 1 
123 1 325 1 
76 1 184 1 161 1 57 1 283 1 20 1 169 1 320 1 138 1 
218 1 157 1 
21 1 319 1 299 1 
273 1 312 1 314 1 52 1 158 1 138 1 320 1 184 1 322 1 282 1 238 1 56 1 161 1 285 1 286 1 20 1 129 2 169 1 
273 1 312 1 314 1 52 1 158 1 138 1 320 1 184 1 322 1 282 1 238 1 56 1 161 1 285 1 286 1 20 1 129 2 169 1 
273 1 312 1 314 1 52 1 158 1 138 1 320 1 184 1 322 1 282 1 238 1 56 1 161 1 285 1 286 1 20 1 129 2 169 1 
218 1 319 1 157 1 
218 1 319 1 157 1 
21 1 299 1 
21 1 319 1 299 1 
34 1 170 1 
85 1 191 1 68 1 273 1 138 1 320 1 184 1 281 1 98 1 282 1 238 1 123 1 325 1 161 1 56 1 34 1 164 1 20 1 129 1 64 1 170 1 169 1 
40 1 133 1 86 1 135 1 214 1 255 1 11 1 140 1 96 2 143 2 59 2 17 1 100 1 60 1 304 1 62 1 102 1 189 1 308 1 193 2 153 2 234 2 75 1 74 1 198 1 237 1 279 2 203 2 242 2 327 1 166 1 
84 1 151 1 66 1 153 2 214 1 315 1 182 1 198 1 321 1 200 1 265 1 203 2 204 1 242 2 36 1 147 1 128 1 168 2 245 1 
84 1 151 1 106 1 153 1 214 1 315 1 182 1 198 1 321 1 265 1 203 1 204 1 242 1 36 1 147 1 128 1 168 2 
46 1 153 1 214 1 198 1 200 1 142 1 263 1 203 1 145 1 242 1 147 1 304 1 102 1 185 1 
84 1 151 1 153 1 214 1 315 1 182 1 198 1 321 1 200 1 265 1 203 1 204 1 242 1 36 1 147 1 128 1 168 2 245 1 
196 1 
275 1 
41 1 208 1 89 1 93 1 178 1 297 1 298 1 56 1 306 1 103 1 107 1 273 1 310 1 322 2 125 1 328 1 83 1 
89 4 174 2 93 6 178 2 183 1 261 1 102 10 103 4 25 2 273 5 195 2 197 1 198 4 203 3 125 5 130 2 287 1 288 1 41 8 208 3 42 6 290 1 45 2 46 1 293 2 214 3 50 2 298 4 297 4 51 2 56 5 222 2 58 1 302 2 304 3 227 1 149 2 228 2 66 1 153 3 233 2 155 1 73 6 318 2 322 8 241 3 242 3 165 2 167 3 328 9 246 2 329 2 83 12 171 2 
41 5 208 1 42 5 89 2 174 2 93 3 293 2 178 2 297 2 298 2 51 2 216 1 95 1 56 1 63 1 103 2 149 3 228 1 105 1 273 1 28 1 233 2 73 5 117 1 199 1 322 5 323 1 239 1 125 1 243 1 130 1 287 1 328 8 83 6 171 2 
190 1 41 1 271 1 89 1 273 1 56 1 99 1 48 1 328 1 297 1 298 1 103 1 149 1 
261 1 322 1 41 1 89 1 178 1 328 1 297 1 298 1 103 1 183 1 
41 5 42 5 174 2 293 2 93 5 233 2 73 5 51 2 322 5 302 1 130 1 328 5 83 10 171 2 149 2 
322 1 208 1 273 1 56 1 125 1 178 1 
41 2 208 2 89 2 46 2 214 1 297 2 298 1 259 1 142 1 263 1 56 3 58 1 304 1 102 1 23 1 103 2 228 2 230 1 273 3 153 4 197 2 159 1 198 1 120 1 203 4 125 4 242 4 328 2 287 2 
2 1 301 1 268 1 64 1 
228 1 41 2 42 2 89 1 93 2 73 2 178 2 298 1 297 1 12 1 322 4 328 1 287 1 83 4 103 1 
184 1 71 1 320 1 
184 1 71 1 320 1 
184 1 97 1 286 1 170 1 320 1 
184 1 71 1 320 1 
184 1 219 1 320 1 
184 1 219 1 320 1 
184 1 219 1 320 1 
184 1 320 1 
161 1 138 1 
270 1 271 1 253 2 6 1 48 1 116 1 96 4 237 2 33 1 127 1 100 2 166 2 60 2 
275 1 
189 2 174 1 233 1 293 1 253 1 179 1 51 1 96 2 237 1 17 2 59 4 127 1 100 1 166 1 60 1 171 1 
189 6 174 2 28 2 233 2 293 2 253 4 274 1 51 2 116 2 323 2 326 1 17 6 59 12 127 2 63 1 171 2 
1 1 174 2 293 3 253 9 48 2 6 1 51 2 12 1 96 4 59 21 17 11 100 2 60 2 189 10 270 2 271 2 229 1 28 2 233 3 274 1 116 4 237 2 323 2 202 1 33 1 326 1 127 5 166 2 171 2 
28 1 59 1 17 1 
189 1 323 1 59 1 
189 3 174 1 293 1 233 1 253 3 179 1 51 1 116 2 96 2 237 1 302 1 17 3 59 6 60 1 166 1 100 1 127 1 171 1 
174 2 293 2 253 2 257 1 51 2 216 1 95 1 96 2 59 12 17 6 60 1 100 1 63 1 189 6 105 1 28 1 233 2 116 1 199 1 237 1 323 1 243 1 127 1 166 1 171 2 
189 3 271 1 293 1 233 1 253 2 48 1 116 1 202 1 59 6 17 3 127 1 
270 1 271 1 1 1 253 2 48 1 6 1 116 1 96 2 237 1 33 1 17 1 59 1 127 1 100 1 166 1 60 1 
189 5 271 1 293 2 233 2 253 4 48 1 257 1 116 2 96 2 237 1 202 1 99 1 59 10 17 5 60 1 166 1 100 1 127 2 
189 2 174 1 293 1 253 1 257 1 116 1 96 2 237 1 59 2 100 1 166 1 60 1 
189 2 174 1 233 1 293 1 253 2 257 1 51 1 116 1 96 2 237 1 17 2 59 4 127 1 100 1 166 1 60 1 171 1 
189 1 271 1 253 1 48 1 257 1 96 2 237 1 17 1 59 2 100 1 166 1 60 1 127 1 
1 1 174 4 293 5 253 13 48 3 6 1 257 1 10 1 179 1 51 4 260 1 96 10 17 15 59 29 60 5 100 5 63 1 189 14 270 2 271 3 28 4 233 5 274 1 276 1 116 7 278 1 237 5 323 4 202 1 33 1 326 1 166 5 127 6 171 4 
293 1 253 2 6 1 48 1 257 1 12 1 95 1 96 2 59 10 17 5 60 1 100 1 63 1 189 5 271 1 28 1 233 1 237 1 323 1 33 1 202 1 166 1 127 2 
174 1 293 2 253 3 48 1 6 1 257 1 179 1 51 1 12 1 95 1 96 4 59 13 17 6 60 2 100 2 63 1 189 7 271 1 28 2 233 1 274 1 116 1 237 2 323 1 202 1 33 1 127 2 166 2 
174 2 293 3 253 5 48 1 6 1 257 1 179 1 51 2 216 1 12 1 95 1 96 6 59 21 17 11 60 3 100 3 63 1 189 10 105 1 270 1 271 1 28 1 233 3 116 1 199 1 237 3 323 1 202 1 33 1 243 1 166 3 127 4 171 2 
174 2 293 3 253 4 48 1 6 1 257 1 179 1 51 2 216 1 12 1 95 1 96 6 59 19 17 8 60 3 100 3 63 1 189 11 105 1 270 1 271 1 28 1 233 2 116 2 199 1 237 3 323 1 202 1 33 1 243 1 127 2 166 3 171 1 
293 1 253 2 6 1 48 1 257 1 12 1 95 1 96 2 59 10 17 5 60 1 100 1 63 1 189 5 271 1 28 1 233 1 237 1 323 1 33 1 202 1 166 1 127 2 
174 2 293 2 253 2 257 1 51 2 216 1 95 1 96 2 59 12 17 6 60 1 100 1 63 1 189 6 105 1 28 1 233 2 116 1 199 1 237 1 323 1 243 1 127 1 166 1 171 2 
174 2 293 3 253 5 48 1 6 1 257 1 179 1 51 2 216 1 12 1 95 1 96 8 59 20 17 9 60 4 100 4 63 1 105 1 189 11 270 2 271 1 28 1 233 2 116 2 199 1 237 4 323 1 202 1 33 1 243 1 166 4 127 3 171 1 
174 2 293 2 253 2 257 1 51 2 216 1 95 1 96 6 59 11 17 4 60 3 100 3 63 1 189 7 105 1 270 1 28 1 233 1 276 1 116 2 199 1 237 3 323 1 243 1 166 3 171 1 
189 2 271 2 253 4 6 2 48 2 116 2 33 1 59 4 17 2 127 2 
174 2 293 3 253 4 48 1 6 1 257 1 51 2 216 1 12 1 95 1 96 8 59 20 17 9 60 4 100 4 63 1 105 1 189 11 270 2 271 1 28 1 233 2 276 1 116 1 199 1 237 4 323 1 202 1 33 1 243 1 166 4 127 3 171 1 
279 1 78 1 143 1 35 1 234 1 112 1 173 1 
234 1 112 1 279 1 78 1 144 1 143 1 35 1 37 1 303 1 186 1 22 1 173 1 
203 1 153 1 46 1 242 1 275 1 
213 1 64 1 
213 1 64 1 
213 1 64 1 
45 1 46 1 214 1 254 1 178 1 139 1 56 2 304 1 102 4 69 1 273 2 153 3 197 1 318 1 198 1 322 1 203 3 241 1 125 1 242 3 165 1 167 1 329 1 
25 1 45 1 273 2 46 1 153 3 214 1 254 1 178 1 197 1 318 1 198 1 322 1 203 3 56 2 241 1 125 1 242 3 165 1 304 1 167 1 102 4 329 1 
203 1 153 1 242 1 18 1 214 1 198 1 
66 1 133 1 27 1 193 1 46 2 153 6 212 1 155 1 214 2 137 1 256 1 30 1 198 3 160 1 203 7 204 1 242 7 18 1 167 1 304 2 102 3 
213 1 64 1 
41 1 208 1 89 2 46 1 178 1 297 2 298 2 50 1 183 1 261 1 56 3 58 1 102 2 103 2 25 1 273 3 68 1 153 1 195 1 318 1 322 1 203 1 241 1 125 2 242 1 165 1 328 1 246 1 
288 1 66 1 153 2 155 1 214 1 318 1 198 2 203 2 242 2 18 1 167 1 304 1 102 2 
66 1 46 1 153 4 47 1 214 1 254 1 198 1 142 1 263 1 203 4 242 4 304 1 102 1 
207 1 27 1 153 2 214 1 197 1 30 1 198 2 54 1 203 2 15 1 242 2 167 1 304 1 102 1 
321 1 151 1 203 1 153 1 46 1 242 1 214 1 168 1 182 1 198 1 
66 1 133 1 153 2 214 1 140 1 198 1 203 2 204 1 242 2 304 1 102 1 
66 1 133 1 46 1 153 4 47 1 214 2 137 1 197 1 198 2 160 1 263 1 142 1 203 5 242 5 304 2 102 3 
66 1 133 1 46 1 153 4 311 1 47 1 214 2 137 1 197 1 198 2 263 1 142 1 203 5 242 5 304 2 102 3 
213 1 64 1 
27 1 153 1 212 1 155 1 214 1 197 1 30 1 198 2 203 1 242 1 167 1 304 1 102 1 
275 1 
291 1 284 1 294 1 7 1 19 1 38 1 39 1 
19 1 226 1 188 1 
291 1 176 1 294 3 7 1 258 1 77 1 284 1 19 3 81 2 38 1 39 1 104 1 
262 1 291 1 284 1 294 2 7 1 19 2 38 1 39 1 150 1 
321 1 265 1 291 1 284 1 176 1 294 1 19 1 148 1 8 1 168 1 38 1 
291 1 284 1 176 1 294 1 19 1 38 1 39 1 
291 1 176 1 294 1 7 1 19 1 38 1 39 2 
65 1 132 1 291 2 176 1 294 2 122 1 284 1 19 2 38 2 39 1 
291 1 176 1 294 3 7 1 217 1 262 2 300 1 284 2 19 3 148 1 38 1 39 1 331 1 
262 1 291 1 176 1 294 2 19 1 38 1 168 1 82 1 182 1 
291 2 176 1 294 4 7 1 262 2 264 1 300 1 284 2 19 4 148 1 38 2 39 1 150 1 
291 1 284 1 176 1 294 1 7 1 19 1 38 1 39 1 
291 1 294 4 7 2 258 1 262 2 300 1 284 3 19 4 81 1 223 1 148 1 38 1 39 2 104 1 
251 1 291 1 176 1 294 2 194 1 7 1 317 1 262 1 284 1 19 2 38 1 39 1 
291 1 70 1 176 1 294 3 7 1 258 1 284 1 19 3 81 2 38 1 39 1 104 2 
307 1 44 1 175 2 284 2 
291 1 210 1 176 1 294 1 19 1 38 1 
262 1 291 1 284 1 176 1 294 2 7 1 19 2 38 1 39 1 331 1 
172 1 
291 1 284 1 176 1 294 1 7 1 19 1 38 1 39 1 
262 1 291 1 284 1 176 1 294 3 7 1 19 3 81 1 38 1 331 1 39 1 
300 1 284 1 223 1 148 1 
284 1 39 1 

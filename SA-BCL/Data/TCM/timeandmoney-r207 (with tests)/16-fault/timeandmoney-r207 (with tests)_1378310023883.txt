#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) (280,358) (280,358) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) (280,358) (280,358) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) (280,358) (280,358) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) (280,358) (280,358) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) 144 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (208,353) 144 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 96 323 260 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 238 345 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 238 345 34 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 238 345 34 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 238 345 34 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 238 345 34 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 96 323 260 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | RETURN | 1194 | return null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONSTANT | 6207 | 1 -> 0
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 9719 | stmt -> ;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 2175 | = null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> /=
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
28 1 124 1 228 2 364 1 353 1 149 1 208 1 92 1 61 2 280 1 344 1 72 1 358 1 372 1 359 1 192 1 
28 1 124 1 228 2 364 1 353 1 149 1 208 1 92 1 61 2 280 1 344 1 72 1 358 1 372 1 359 1 192 1 
28 1 124 1 228 2 364 1 353 1 149 1 208 1 92 1 61 2 280 1 344 1 72 1 358 1 372 1 359 1 192 1 
28 1 124 1 228 2 364 1 353 1 149 1 208 1 92 1 61 2 280 1 344 1 72 1 358 1 372 1 359 1 192 1 
237 3 28 1 124 1 228 4 184 1 231 1 135 3 186 1 149 1 220 1 92 1 61 4 336 2 344 1 311 1 372 1 152 1 328 2 
28 1 228 2 125 1 157 1 135 1 149 1 220 1 92 1 61 2 344 1 311 1 72 1 234 1 372 1 359 1 192 1 
353 1 149 1 61 1 92 1 228 1 372 1 
353 1 144 1 237 1 149 1 61 2 92 1 228 2 372 1 292 1 
353 1 144 1 237 1 149 1 61 2 92 1 228 2 372 1 292 1 
76 1 190 1 22 1 
215 1 97 2 190 1 
324 1 7 2 216 2 2 2 126 1 350 2 202 2 69 2 
47 1 330 1 303 1 2 2 30 1 350 2 55 1 5 1 7 3 62 1 166 1 235 1 167 2 83 1 84 1 11 1 123 1 297 1 214 1 271 1 216 2 14 1 126 1 86 1 68 1 241 2 366 1 42 2 69 2 324 1 177 2 219 1 246 1 129 1 249 1 110 2 202 3 
216 1 2 1 350 1 69 1 324 1 116 1 7 1 253 1 226 1 202 1 
287 1 122 1 2 1 76 1 116 1 342 1 218 1 7 1 119 1 312 1 190 1 46 1 202 1 362 1 
122 1 216 1 2 1 76 1 350 1 69 1 116 1 342 1 218 1 7 1 119 2 190 1 46 1 362 2 202 1 
119 1 273 1 115 1 80 1 362 1 
67 1 119 2 64 1 76 1 190 1 115 1 80 1 362 2 
119 1 115 1 362 1 
213 1 216 1 2 1 350 1 69 1 116 1 324 1 7 1 119 1 226 1 80 1 253 1 362 1 202 1 
190 1 
325 1 67 1 119 2 76 1 190 1 115 1 80 1 362 2 
347 1 67 1 203 1 48 1 288 1 76 1 274 1 115 2 87 2 207 1 90 1 119 5 267 2 190 1 224 1 121 1 80 2 211 2 362 5 
126 1 22 1 
216 1 172 1 2 2 126 1 350 1 69 1 116 1 136 1 7 2 361 1 202 2 
302 1 173 1 349 1 
47 1 84 1 297 1 214 1 126 1 366 1 55 1 177 1 7 1 100 1 249 1 110 1 166 1 235 1 167 1 202 1 
302 1 47 1 84 1 297 1 214 1 132 1 2 1 107 1 350 1 366 1 55 1 69 1 177 1 7 2 249 1 110 1 166 1 235 1 167 1 202 2 
216 1 2 3 107 1 126 1 350 3 69 3 116 1 7 3 202 3 361 1 
116 1 7 1 2 1 350 1 226 1 202 1 69 1 
216 1 2 1 172 1 350 1 69 1 116 1 136 1 7 1 202 1 
47 1 132 1 330 1 2 3 30 1 350 3 55 1 5 1 116 1 136 1 7 4 62 1 338 1 119 1 166 1 235 1 167 1 362 1 122 1 84 1 11 1 297 1 214 1 271 1 216 2 147 1 107 1 126 1 86 1 68 1 241 1 366 1 42 2 69 3 324 1 177 1 219 1 246 1 342 1 218 1 249 1 110 1 46 1 202 4 
7 2 2 2 290 1 107 1 126 1 312 1 350 1 202 2 69 1 
122 1 132 1 216 1 2 3 107 2 350 3 334 1 69 3 116 1 136 1 218 1 342 1 7 3 119 1 338 1 190 1 46 1 362 1 202 3 
302 1 216 1 2 2 349 1 107 1 350 2 69 2 136 1 7 2 202 2 
47 1 84 1 297 1 214 1 126 1 366 1 55 1 177 1 7 1 249 1 110 1 166 1 235 1 167 1 202 1 
84 1 297 1 214 1 126 1 366 1 55 1 177 1 7 1 249 1 110 1 179 1 166 1 167 1 202 1 227 1 
302 2 26 1 49 1 349 2 30 1 159 1 352 1 293 1 5 1 62 1 164 1 38 1 191 1 173 2 86 2 68 1 241 4 42 2 176 1 219 1 246 1 129 2 250 1 286 1 
318 1 
216 1 2 2 107 1 126 1 350 2 69 2 116 1 136 1 7 2 361 1 202 2 
116 1 318 1 7 1 2 1 350 1 226 1 202 1 69 1 
6 1 171 1 
6 1 171 1 
248 1 31 1 
248 1 31 1 
248 1 31 1 
6 1 171 1 130 1 
6 1 171 1 109 1 
6 2 171 2 248 1 258 1 41 1 31 1 
6 1 171 1 130 1 
6 1 171 1 130 1 
6 1 171 1 105 1 
6 1 171 1 105 1 
6 1 171 1 105 1 
23 1 66 1 171 2 291 1 332 2 41 1 304 2 333 2 367 2 262 1 6 2 137 2 138 1 370 1 119 2 139 3 190 1 201 1 362 2 
329 1 171 1 85 1 183 1 2 2 331 1 217 1 332 1 126 1 304 1 350 2 333 1 69 2 15 1 6 1 7 2 137 1 138 1 119 1 139 1 109 1 223 1 202 2 362 1 
28 1 124 1 344 1 
28 1 344 1 234 1 
43 1 124 2 344 3 234 1 305 1 232 1 
43 1 124 1 344 2 234 1 305 1 340 1 
43 2 124 1 344 2 234 1 305 1 
329 1 49 1 50 1 97 3 76 1 54 1 206 2 115 1 114 1 293 1 207 1 264 1 209 1 119 5 267 1 190 2 121 2 38 1 211 1 80 4 212 1 362 5 316 2 67 1 85 1 215 1 87 1 90 3 223 1 94 1 286 1 181 2 
2 1 76 1 350 1 115 1 116 1 7 1 119 2 190 1 37 1 80 2 362 2 142 1 213 1 216 1 273 1 69 1 324 1 44 1 226 1 253 1 202 1 
329 1 48 1 49 1 50 1 97 4 76 1 206 2 114 1 293 1 264 1 209 1 119 3 267 1 190 3 121 2 80 2 211 1 38 1 212 1 362 3 316 1 215 2 87 1 90 3 286 1 181 2 
329 2 48 1 289 1 49 2 50 2 97 7 76 1 206 4 351 1 114 1 293 2 307 1 264 1 209 1 119 4 267 1 190 4 121 4 211 1 80 3 38 2 362 4 212 1 316 2 215 3 87 1 90 5 286 2 181 4 
265 1 249 1 22 1 
257 1 249 1 
244 1 
249 1 166 1 
84 1 265 2 249 3 365 1 166 1 20 1 
84 1 249 1 166 1 
182 1 249 1 
24 1 49 1 229 1 86 3 241 7 196 1 275 1 176 3 98 1 294 1 188 2 247 1 164 2 310 1 129 4 286 1 254 1 
24 1 49 1 229 1 86 3 241 7 196 1 275 1 176 3 98 1 294 1 188 2 247 1 164 2 310 1 129 4 286 1 254 1 
24 1 154 1 49 1 229 1 86 3 241 7 196 1 275 1 176 3 98 1 294 1 188 2 247 1 164 2 310 1 129 4 286 1 254 1 
24 5 74 1 49 4 229 1 50 3 3 4 113 1 293 3 5 1 98 2 294 2 188 3 62 1 164 5 310 2 210 1 38 3 65 1 40 3 239 1 86 15 68 1 241 31 275 1 42 2 196 2 176 10 219 1 247 1 326 1 129 16 286 4 225 1 254 1 
24 1 49 1 229 1 113 1 86 4 68 2 241 9 275 1 196 1 42 4 176 4 5 2 98 1 294 1 219 2 188 2 99 1 164 3 62 2 310 1 129 5 286 1 254 1 81 1 
28 1 256 1 228 2 135 1 185 1 232 1 162 1 61 2 311 1 36 1 234 1 167 1 192 1 143 1 145 1 237 1 297 1 214 1 124 1 127 1 276 1 177 1 16 1 149 1 220 1 92 1 222 1 344 2 110 1 372 1 
153 1 28 1 256 1 228 3 156 1 135 1 232 1 185 1 162 1 61 3 311 1 36 1 234 1 167 1 192 1 143 1 145 1 237 2 297 1 214 1 124 1 322 1 127 1 177 1 149 1 220 1 92 1 222 1 344 2 110 1 
256 1 28 1 228 2 156 1 135 1 185 1 232 1 162 1 61 2 311 1 36 1 234 1 167 1 192 1 143 1 237 2 297 1 214 1 124 1 322 1 177 1 220 1 222 1 344 2 110 1 
153 1 228 1 185 2 354 1 162 2 61 1 166 1 313 1 167 1 192 2 143 2 297 1 214 1 363 1 148 1 366 1 175 1 128 1 177 1 149 1 92 1 249 1 110 1 
28 1 256 1 228 1 185 1 232 1 162 1 61 1 36 1 234 1 167 1 192 1 143 1 145 1 297 1 214 1 124 1 322 1 127 1 276 1 177 1 149 1 92 1 222 1 344 2 110 1 372 1 
197 1 
287 1 2 1 97 2 134 1 335 2 7 1 63 1 189 1 190 2 236 2 67 3 297 1 106 2 243 1 342 1 71 1 198 2 249 1 110 2 202 1 76 1 115 6 114 1 207 1 116 1 78 1 35 1 309 2 356 4 119 5 267 1 268 1 312 1 166 1 313 1 121 2 211 1 167 2 362 5 122 1 214 1 215 2 363 1 320 2 366 2 87 1 278 2 177 2 218 1 90 2 178 1 45 1 95 1 46 1 327 1 
122 1 287 1 67 1 2 1 134 1 115 2 116 1 325 1 218 1 342 1 7 1 71 1 356 2 63 1 119 3 45 1 95 1 312 1 236 1 46 1 362 3 202 1 
122 1 287 1 67 1 2 1 76 1 134 1 115 1 116 1 325 1 218 1 342 1 7 1 71 1 309 1 356 3 63 1 119 3 45 1 95 1 312 1 190 1 46 1 362 3 202 1 
287 1 2 1 76 1 134 1 115 2 335 1 116 1 7 1 356 3 309 1 63 1 119 3 312 1 190 1 236 1 362 3 122 1 67 1 325 1 342 1 218 1 71 1 95 1 45 1 46 1 202 1 
287 1 131 1 2 2 134 1 335 4 295 1 7 2 63 1 190 1 236 4 67 3 106 2 301 1 243 1 69 1 342 1 71 1 198 2 253 1 202 2 76 1 350 1 115 7 116 2 207 1 78 1 356 4 309 2 119 5 267 1 312 1 121 1 211 1 362 5 122 1 39 1 213 1 216 1 215 2 320 2 87 1 278 2 324 1 325 1 218 1 90 1 45 1 95 1 226 1 46 1 180 1 
287 1 2 1 97 2 134 1 335 2 7 1 63 1 190 2 236 2 67 2 106 2 243 1 342 1 71 1 198 2 202 1 76 1 115 4 78 1 116 1 207 1 356 4 309 2 119 4 267 1 268 1 312 1 121 1 211 1 362 4 122 1 215 2 320 2 87 1 278 2 218 1 90 1 45 1 95 1 46 1 
287 1 131 1 2 1 76 1 134 1 115 4 335 2 78 1 116 1 207 1 7 1 309 2 356 4 63 1 119 4 267 1 312 1 190 1 236 2 121 1 211 1 362 4 122 1 39 1 67 2 215 2 106 2 320 2 243 1 301 1 87 1 278 2 342 1 218 1 90 1 71 1 198 2 95 1 45 1 46 1 202 1 
287 1 131 1 2 1 76 1 134 1 115 4 335 2 78 1 116 1 207 1 7 1 309 2 356 4 63 1 119 4 267 1 312 1 190 1 236 2 121 1 211 1 362 4 122 1 39 1 67 2 215 2 106 2 320 2 243 1 301 1 87 1 278 2 342 1 218 1 90 1 71 1 198 2 95 1 45 1 46 1 202 1 
287 1 2 1 97 2 52 1 76 1 158 2 134 1 115 4 335 2 116 1 207 1 7 1 309 2 356 4 63 1 119 4 267 1 312 1 190 1 236 2 121 1 211 1 362 4 122 1 67 2 194 1 106 2 243 1 301 1 87 1 278 2 342 1 218 1 90 1 343 2 71 1 18 1 95 1 45 1 46 1 202 1 
287 1 131 1 2 2 134 1 335 3 7 2 63 1 190 1 236 3 67 2 106 2 301 1 243 1 69 1 342 1 71 1 198 2 253 1 202 2 76 1 350 1 115 5 116 2 207 1 78 1 309 3 356 5 119 4 267 1 312 1 121 1 211 1 362 4 122 1 39 1 213 1 216 1 215 2 320 2 87 1 278 2 324 1 218 1 90 1 45 1 95 1 226 1 46 1 180 1 
287 1 131 1 2 2 134 1 335 3 7 2 63 1 190 1 236 3 67 2 106 2 301 1 243 1 69 1 342 1 71 1 198 2 253 1 202 2 76 1 350 1 115 5 116 2 207 1 78 1 309 3 356 5 119 4 267 1 312 1 121 1 211 1 362 4 122 1 39 1 213 1 216 1 215 2 320 2 87 1 278 2 324 1 218 1 90 1 45 1 95 1 226 1 46 1 180 1 
287 1 2 1 97 2 134 1 335 2 7 1 63 1 190 1 236 2 67 2 106 2 243 1 342 1 71 1 343 2 18 1 202 1 158 2 76 1 115 4 116 1 207 1 356 4 309 2 119 4 267 1 268 1 312 1 121 1 211 1 362 4 122 1 87 1 278 2 218 1 90 1 45 1 95 1 46 1 
302 1 49 1 173 1 229 1 349 1 126 2 86 3 30 1 68 1 241 6 42 2 275 1 176 2 5 1 98 1 246 1 219 1 188 1 164 2 62 1 310 1 129 3 250 1 286 1 254 1 22 1 
5 1 341 1 219 1 246 1 62 1 68 1 30 1 42 2 4 1 
47 1 132 1 2 1 349 1 30 1 350 1 55 1 5 1 100 1 7 2 62 1 120 1 166 1 103 1 235 1 167 1 169 1 341 1 84 1 297 1 123 1 214 1 271 1 107 1 126 1 86 1 68 1 366 1 241 2 42 2 69 1 177 1 246 1 219 1 249 1 129 1 110 1 202 2 
47 2 132 1 2 1 49 3 229 1 50 2 55 2 293 2 5 3 98 1 188 1 7 3 62 3 235 2 341 1 11 2 297 2 107 1 68 3 241 20 69 1 246 3 249 2 110 3 19 2 254 1 202 3 302 7 24 4 73 2 255 1 349 7 75 1 350 1 30 3 261 2 164 4 310 1 166 2 167 3 38 2 84 2 123 1 214 2 271 1 173 7 126 2 321 1 86 10 322 1 366 1 275 1 42 6 176 8 177 3 219 3 89 2 129 10 286 3 
348 1 96 1 2 1 350 1 30 2 260 1 5 2 7 1 62 2 9 1 166 2 313 1 167 5 168 1 193 1 297 2 123 1 214 2 271 1 363 1 14 1 107 1 86 1 322 1 323 1 68 2 366 2 241 2 42 4 69 1 177 6 16 1 219 2 246 2 250 1 249 3 129 1 110 6 202 1 
302 1 2 1 49 1 50 1 349 1 350 1 30 1 293 1 5 1 136 1 7 1 164 1 62 1 38 1 341 1 216 1 173 1 86 2 68 1 241 3 42 2 69 1 176 1 245 1 219 1 246 1 129 1 286 1 202 1 
302 1 24 1 49 1 173 1 349 1 30 1 68 1 241 2 352 1 42 2 176 1 5 1 246 1 219 1 62 1 250 1 129 2 38 1 
302 1 26 1 173 1 349 1 86 2 30 1 68 1 241 2 42 2 293 1 176 1 5 1 246 1 219 1 164 1 62 1 250 1 286 1 
302 2 24 1 49 1 50 1 349 2 30 1 293 1 5 1 62 1 164 1 38 1 173 2 86 2 68 1 241 4 42 2 176 2 219 1 246 1 129 2 250 1 286 1 
302 1 24 1 49 1 173 1 349 1 30 1 68 1 241 2 352 1 42 2 176 1 5 1 246 1 219 1 62 1 129 2 38 1 193 1 
302 1 26 1 173 1 349 1 86 2 30 1 68 1 241 2 42 2 293 1 176 1 5 1 246 1 219 1 164 1 62 1 286 1 193 1 
302 2 24 1 49 1 50 1 349 2 30 1 293 1 5 1 62 1 164 1 38 1 193 1 173 2 86 2 68 1 241 4 42 2 176 2 219 1 246 1 129 2 286 1 
302 2 24 1 49 1 173 2 50 1 349 2 86 2 30 1 68 1 241 4 42 2 293 1 176 2 5 1 246 1 219 1 164 1 62 1 129 2 286 1 38 1 
47 1 30 1 55 1 5 1 7 1 62 1 166 1 235 1 167 1 84 1 11 1 123 1 297 1 214 1 271 1 126 1 86 1 68 1 241 2 366 1 42 2 177 1 246 1 219 1 129 1 249 1 110 1 202 1 
30 1 55 1 5 1 7 1 62 1 166 1 167 1 84 1 123 1 297 1 214 1 271 1 126 1 86 1 68 1 241 2 366 1 42 2 368 1 177 1 246 1 219 1 129 1 249 1 179 1 110 1 227 1 202 1 
302 2 24 1 49 1 50 1 349 2 30 1 293 1 5 1 62 1 164 1 38 1 341 1 173 2 86 2 68 1 241 4 42 2 176 2 219 1 246 1 129 2 286 1 
302 2 47 1 24 1 73 1 49 1 50 1 349 2 30 1 55 1 293 1 5 1 7 1 164 1 62 1 166 1 235 1 38 1 167 1 84 1 11 1 297 1 214 1 173 2 86 2 68 1 241 4 42 2 176 2 177 1 16 1 246 1 219 1 129 2 249 1 110 1 286 1 202 1 
302 1 24 1 2 1 49 1 50 1 349 1 350 1 30 1 293 1 5 1 136 1 7 1 62 1 38 1 341 1 216 1 173 1 86 1 68 1 241 3 42 2 69 1 176 1 219 1 246 1 129 2 286 1 21 1 202 1 
5 1 238 1 219 1 59 1 34 1 62 1 345 1 68 1 42 2 81 1 
5 1 238 1 219 1 59 1 34 1 62 1 345 1 68 1 42 2 81 1 
5 1 238 1 219 1 59 1 34 1 62 1 345 1 68 1 42 2 81 1 
5 1 238 1 219 1 59 1 34 1 62 1 345 1 68 1 42 2 81 1 
5 1 238 1 219 1 59 1 34 1 62 1 345 1 68 1 42 2 81 1 
23 1 66 1 6 1 171 1 137 1 151 1 332 1 41 1 304 1 333 1 
331 1 109 1 
6 1 171 1 137 1 155 1 281 1 332 1 53 1 304 1 333 1 
23 1 66 1 171 1 291 1 332 1 41 1 304 1 333 1 367 1 262 1 6 1 137 1 138 1 119 1 139 2 190 1 201 1 362 1 
23 1 66 1 171 1 291 1 332 1 41 1 304 1 333 1 367 1 262 1 6 1 137 1 138 1 119 1 139 2 190 1 201 1 362 1 
23 1 66 1 171 1 291 1 332 1 41 1 304 1 333 1 367 1 262 1 6 1 137 1 138 1 119 1 139 2 190 1 201 1 362 1 
133 1 258 1 130 1 
133 1 258 1 130 1 
170 1 105 1 
170 1 105 1 258 1 
183 1 217 1 
329 1 183 1 2 2 331 1 332 1 304 1 350 2 333 1 160 1 6 1 7 2 137 1 119 1 139 1 80 1 362 1 171 1 85 1 217 1 126 1 367 1 69 2 15 1 109 1 223 1 201 1 202 2 
133 1 130 1 
170 1 105 1 258 1 
96 1 2 2 30 1 5 1 7 2 8 1 62 1 166 1 168 1 167 2 341 1 297 1 123 1 214 1 271 1 14 2 195 1 240 1 86 1 68 1 241 2 42 2 177 2 246 1 219 1 249 1 129 1 282 1 251 1 110 2 202 2 
143 1 145 1 297 1 27 1 214 1 28 1 124 1 322 1 57 1 232 1 177 2 16 1 222 1 344 2 36 1 234 1 110 2 93 1 167 2 
143 1 145 1 297 1 214 1 28 1 124 1 322 1 232 1 177 1 91 1 222 1 344 2 36 1 234 1 110 1 93 1 167 1 
143 1 297 1 27 1 214 1 363 1 259 1 366 1 128 1 177 1 249 1 110 1 166 1 313 1 167 1 
143 1 145 1 297 1 27 1 214 1 28 1 124 1 322 1 57 1 232 1 177 1 222 1 344 2 36 1 234 1 110 1 93 1 167 1 
319 1 
90 1 203 1 76 1 190 1 224 1 121 1 22 1 
97 1 76 1 115 1 78 1 207 1 119 1 267 1 190 2 121 1 211 1 362 1 67 1 215 1 320 1 87 1 90 1 198 1 
182 2 49 2 50 2 97 12 293 2 101 1 189 1 190 8 296 1 146 1 297 4 67 3 16 1 17 2 249 10 110 3 19 2 346 1 20 1 111 2 25 2 203 1 257 3 76 2 206 6 114 2 115 5 207 4 118 2 265 2 119 5 267 4 357 1 166 3 121 8 211 4 167 3 38 2 362 5 84 3 269 2 214 3 215 6 272 2 366 1 277 2 87 4 177 3 218 2 90 9 283 2 224 1 286 2 181 6 
25 1 49 2 50 2 29 1 51 1 97 6 3 1 205 1 76 2 206 5 114 1 115 1 293 2 207 2 119 1 267 2 189 1 190 5 210 1 121 5 141 1 211 2 38 2 362 1 317 1 67 1 269 2 215 3 40 1 299 1 174 1 87 2 90 8 286 2 181 5 
25 1 49 2 2 1 350 1 116 1 207 1 98 1 7 1 310 1 119 1 267 1 121 2 211 1 362 1 39 1 213 1 269 2 216 1 87 1 69 1 324 1 150 1 90 2 286 1 226 1 253 1 202 1 254 1 
203 1 76 1 87 1 207 1 90 1 267 1 224 1 190 1 121 1 211 1 
25 1 269 2 215 5 49 2 50 2 97 10 206 5 293 2 90 5 19 1 190 5 286 2 121 5 38 2 181 5 
67 1 119 1 76 1 190 1 115 1 362 1 
48 1 114 2 115 4 207 1 35 1 101 2 119 3 267 2 189 2 357 1 166 1 313 1 121 2 211 2 167 4 362 3 82 1 297 1 67 2 214 1 363 1 366 2 87 2 279 1 177 4 90 2 178 1 249 1 110 4 
47 1 330 1 2 2 350 2 30 1 55 1 5 1 7 3 62 1 166 1 235 1 167 1 11 1 84 1 297 1 214 1 271 1 216 2 126 1 86 1 68 1 241 1 366 1 42 2 69 2 324 1 177 1 219 1 246 1 249 1 110 1 202 3 
215 2 97 4 76 2 206 2 114 1 87 1 207 1 188 1 90 1 267 1 189 1 190 4 121 2 211 1 181 2 
266 1 332 1 304 1 
23 1 217 1 332 1 304 1 56 1 
266 1 332 1 304 1 
266 1 332 1 304 1 
332 1 304 1 306 1 
332 1 304 1 306 1 
332 1 304 1 306 1 
332 1 304 1 
6 1 171 1 
40 1 49 1 229 1 3 1 205 1 86 4 68 1 241 8 275 1 42 2 176 2 5 1 98 1 219 1 188 1 164 2 62 1 310 1 129 4 286 1 210 1 254 1 81 1 
24 1 49 2 229 1 50 1 3 2 205 1 5 2 98 1 188 1 164 2 62 2 310 1 210 1 314 1 38 1 81 1 40 1 86 5 68 2 241 11 275 1 42 4 176 3 219 2 129 6 286 1 225 1 254 1 
24 1 49 3 229 1 50 2 29 1 3 1 113 1 205 1 293 2 5 3 98 1 188 1 62 3 164 3 310 1 210 1 141 1 314 1 38 2 81 1 40 1 86 10 299 1 68 3 174 1 241 19 275 1 42 6 176 4 219 3 129 9 286 3 254 1 
24 2 49 3 229 1 50 2 29 1 113 1 3 1 205 1 293 1 5 3 98 1 188 1 62 3 164 3 310 1 210 1 141 1 314 1 38 2 81 1 40 1 86 7 299 1 68 3 174 1 241 17 275 1 42 6 176 5 219 3 129 10 286 2 254 1 
40 1 49 1 229 1 3 1 205 1 86 4 68 1 241 8 275 1 42 2 176 2 5 1 98 1 219 1 188 1 164 2 62 1 310 1 129 4 286 1 210 1 254 1 81 1 
24 1 49 2 50 2 29 1 3 1 205 1 293 2 5 1 62 1 164 1 210 1 141 1 38 2 81 1 40 1 86 6 299 1 68 1 174 1 241 12 42 2 176 2 219 1 129 6 286 2 
24 2 49 3 229 1 50 2 29 1 3 1 113 2 205 1 293 1 5 4 98 1 188 1 62 4 164 3 310 1 210 1 141 1 314 1 38 2 81 1 40 1 299 1 86 8 68 4 174 1 241 18 275 1 42 8 176 5 219 4 129 10 286 2 254 1 
24 3 49 3 50 3 29 1 3 1 113 2 205 1 293 2 5 4 62 4 164 3 210 1 141 1 38 3 81 1 40 1 299 1 86 7 68 4 174 1 241 16 242 1 42 8 176 6 219 4 129 9 286 2 
24 3 49 1 229 2 86 4 241 7 275 1 176 6 98 3 164 3 310 3 129 3 286 1 254 1 
24 1 49 3 229 1 50 2 29 1 3 1 113 2 205 1 293 1 5 4 98 1 188 1 62 4 164 3 310 1 210 1 141 1 38 2 81 1 40 1 299 1 86 8 68 4 174 1 241 18 242 1 275 1 42 8 176 4 219 4 129 10 286 2 254 1 
24 1 49 1 229 1 113 1 86 4 68 2 241 8 42 4 275 1 176 3 5 2 219 2 98 1 188 1 164 2 62 2 310 1 129 4 286 1 254 1 
176 2 98 1 188 1 164 2 49 1 310 1 229 1 129 3 86 3 286 1 241 6 275 1 254 1 22 1 
24 1 49 1 50 1 86 2 68 1 241 4 42 2 293 1 176 2 5 1 219 1 164 1 62 1 129 2 286 1 314 1 38 1 
24 1 40 1 49 1 50 1 3 2 86 4 241 7 293 1 176 2 164 1 129 3 286 1 210 1 225 1 38 1 
24 4 1 1 49 3 229 1 50 2 3 2 113 2 293 2 5 2 98 2 188 1 164 5 62 2 310 2 360 1 38 2 40 2 86 12 68 2 241 23 275 1 42 4 176 9 219 2 129 11 286 3 285 1 225 1 254 1 
3 1 86 1 241 1 
40 1 129 1 241 1 
24 1 49 1 50 1 86 3 68 1 241 6 42 2 293 1 5 1 176 3 219 1 62 1 164 2 129 3 19 1 286 1 314 1 38 1 
24 1 49 2 50 2 29 1 3 1 205 1 293 2 5 1 62 1 164 1 210 1 141 1 38 2 81 1 40 1 86 6 299 1 68 1 174 1 241 12 42 2 176 2 219 1 129 6 286 2 
24 1 49 1 86 3 241 6 176 2 98 1 164 1 310 1 129 3 286 1 254 1 
24 1 229 1 113 1 86 2 68 1 241 3 42 2 275 1 176 2 5 1 98 1 219 1 164 1 62 1 310 1 129 1 285 1 
24 2 49 2 86 5 68 1 241 10 42 2 5 1 176 5 219 1 150 1 98 2 62 1 164 3 310 2 129 5 286 2 81 1 254 1 
24 1 49 1 68 1 241 2 42 2 5 1 176 1 219 1 62 1 129 2 38 1 81 1 
24 1 49 1 50 1 86 2 68 1 241 4 42 2 293 1 176 2 5 1 219 1 164 1 62 1 129 2 286 1 38 1 81 1 
24 1 113 1 86 2 68 3 242 1 241 3 42 6 5 3 176 2 219 3 98 1 62 3 164 1 310 1 129 1 285 1 81 1 
24 5 74 1 49 5 229 1 50 3 113 2 3 4 293 3 5 5 98 3 188 1 62 5 164 7 310 3 210 1 65 1 314 1 38 3 81 1 40 3 86 18 68 5 242 1 241 34 275 1 42 10 176 12 219 5 326 1 129 16 285 1 286 5 225 1 254 2 
7 1 163 1 2 1 290 1 126 1 312 1 202 1 
12 1 2 1 290 1 126 1 58 1 88 1 7 1 163 1 221 1 312 1 315 1 202 1 
177 1 297 1 214 1 363 1 249 1 110 1 166 1 313 1 366 1 167 1 22 1 
84 1 297 1 214 1 2 1 107 1 126 1 350 1 366 1 55 1 69 1 177 1 7 2 249 1 110 1 166 1 235 1 167 1 202 2 
122 1 84 2 297 1 182 1 214 1 2 2 107 1 126 1 350 1 55 1 69 2 116 1 177 1 342 1 7 2 118 1 101 1 249 3 110 1 166 2 235 1 167 1 202 2 
122 1 0 1 84 2 297 1 182 1 214 1 2 2 107 1 126 1 350 1 55 1 69 2 116 1 177 2 342 1 7 2 118 1 101 1 249 3 110 2 166 2 167 2 202 2 227 1 
0 1 84 1 297 1 182 1 214 1 257 1 76 1 366 1 115 1 177 3 218 1 118 1 101 1 79 1 108 1 265 1 119 2 249 4 110 3 166 1 190 1 167 3 362 2 
0 1 84 1 297 1 182 1 214 1 257 1 76 1 366 1 115 1 177 3 218 1 118 1 101 1 265 1 119 2 249 4 110 3 283 1 166 1 190 1 167 3 362 2 
9 1 
348 1 96 1 84 1 297 3 214 2 322 1 323 1 366 2 260 1 177 5 33 1 16 1 308 1 9 1 165 1 249 3 110 5 166 2 20 1 167 4 
302 1 47 1 73 1 49 1 2 1 229 1 349 1 30 2 350 1 55 1 261 1 5 2 98 1 188 1 7 2 164 2 62 2 310 1 166 1 235 1 167 1 341 1 84 1 11 1 297 1 214 1 173 1 195 1 107 1 126 2 86 3 68 2 241 6 275 1 42 4 69 1 176 2 177 1 246 2 219 2 16 1 129 3 249 1 110 1 286 1 254 1 202 2 
203 1 257 1 76 1 115 2 207 2 265 1 119 3 267 2 357 1 190 1 121 1 167 1 211 2 80 1 362 3 67 1 272 1 366 1 277 1 87 2 177 1 218 1 90 1 249 2 110 1 283 1 224 1 111 1 
9 1 
0 1 297 1 214 1 363 1 366 1 263 1 177 4 16 1 249 1 110 4 166 1 313 1 167 4 
84 1 297 2 214 1 75 1 32 1 177 2 308 1 101 1 165 1 371 1 249 1 110 2 166 1 167 2 
177 1 297 1 214 1 28 1 222 1 344 1 234 1 110 1 366 1 167 1 
177 2 96 1 16 1 297 1 214 1 249 1 282 1 110 2 166 1 322 1 167 2 
348 1 96 1 297 2 214 2 363 1 323 1 366 1 263 1 177 5 16 1 101 1 249 3 110 5 166 2 313 1 167 4 
348 1 96 1 297 2 214 2 363 1 366 1 263 1 177 5 16 1 101 1 249 3 199 1 110 5 166 2 313 1 167 4 
84 1 297 1 214 1 2 1 107 1 126 1 350 1 366 1 55 1 69 1 177 1 7 2 249 1 110 1 166 1 167 1 202 2 227 1 
84 1 297 2 214 1 177 1 33 1 308 1 101 1 165 1 249 1 110 1 166 1 20 1 167 1 
7 1 60 1 8 1 2 1 339 1 298 1 251 1 240 1 202 1 
117 1 60 1 140 1 
60 1 112 1 339 1 298 1 126 1 
213 1 216 1 2 1 230 1 76 1 350 1 69 1 116 1 324 1 117 1 7 1 60 1 119 1 140 1 190 1 226 1 253 1 80 1 202 1 362 1 
220 1 311 1 135 1 22 1 
149 1 220 1 61 1 92 1 228 1 311 1 135 1 
162 1 228 1 192 1 
13 1 228 2 135 1 149 1 220 1 92 1 61 2 355 1 311 1 200 1 72 1 372 1 10 1 
237 1 149 1 220 1 61 2 92 1 228 2 311 1 135 1 328 1 
124 1 28 1 228 1 184 1 135 1 149 1 92 1 61 1 336 1 344 1 372 1 
149 1 61 1 92 1 228 1 311 1 372 1 135 1 
149 1 220 1 61 1 92 1 228 1 311 2 372 1 
161 1 149 2 61 2 92 2 233 1 228 2 311 1 102 1 372 1 135 1 
104 1 13 1 228 1 149 1 220 1 92 1 61 1 311 1 372 1 
237 1 124 1 28 1 228 2 204 1 135 1 232 1 149 1 220 1 92 1 61 2 344 2 311 1 234 1 372 1 
237 2 228 4 231 1 135 2 149 2 220 1 92 2 61 4 336 1 311 1 372 1 152 1 328 1 
149 1 220 1 61 1 92 1 228 1 311 1 372 1 135 1 
237 2 13 1 228 4 231 1 135 3 149 1 220 2 355 1 61 4 92 1 336 1 311 2 72 1 200 1 
237 1 228 2 135 1 292 1 149 1 220 1 92 1 61 2 337 1 311 1 252 1 372 1 
228 3 135 1 187 1 149 1 220 1 92 1 61 3 355 2 311 1 200 1 72 2 372 1 
300 1 135 2 77 1 70 2 
149 1 61 1 92 1 228 1 284 1 372 1 
237 1 149 1 220 1 270 1 61 2 92 1 228 2 311 1 372 1 135 1 
369 1 
149 1 220 1 61 1 92 1 228 1 311 1 372 1 135 1 
237 1 270 1 228 3 135 1 149 1 220 1 92 1 61 3 311 1 72 1 372 1 
13 1 336 1 231 1 135 1 
311 1 135 1 

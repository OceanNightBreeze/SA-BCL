#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (214,355) 223 (0,202) (0,202) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (214,355) 223 (0,202) (0,202) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (214,355) 223 (0,202) (0,202) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (214,355) 223 (0,202) (0,202) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 252 294 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 252 286 350 293 (109,295) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 21 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 21 147 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 252 246 102 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 252 246 102 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 252 246 102 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 252 246 102 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 252 246 102 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 255 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 93 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 252 237 339 213 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 252 294 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 252 294 257 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 252 286 350 293 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 252 286 350 293 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 252 294 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 252 138 140 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 252 138 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 252 138 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 252 138 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 252 138 140 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 252 294 257 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 93 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 340 344 73 (45,251) (45,251) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 93 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 252 237 181 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 252 237 339 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 252 237 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 252 286 350 244 185 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 252 286 53 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 340 344 73 (45,251) (45,251) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 252 286 53 158 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 252 286 350 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 252 286 350 244 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 340 344 73 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 252 237 181 128 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 340 344 73 (45,251) (45,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 252 237 181 249 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 1 307 (283,318) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 252 286 53 (45,251) (45,251) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 3453 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 899 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 26 1 202 1 195 1 8 1 145 1 223 1 317 1 34 1 214 1 51 1 
0 1 26 1 202 1 195 1 8 1 145 1 223 1 317 1 34 1 214 1 51 1 
0 1 26 1 202 1 195 1 8 1 145 1 223 1 317 1 34 1 214 1 51 1 
0 1 26 1 202 1 195 1 8 1 145 1 223 1 317 1 34 1 214 1 51 1 
135 1 26 4 8 1 78 1 61 1 60 1 180 2 274 3 100 2 219 1 276 1 174 1 129 3 145 1 34 1 317 4 269 1 280 1 
135 1 26 2 8 1 195 1 30 1 348 1 43 1 276 1 129 1 145 1 34 1 317 2 269 1 15 1 280 1 51 1 
135 1 26 3 8 1 195 1 274 1 100 1 219 1 129 2 145 2 34 2 317 3 269 1 355 1 
195 1 78 1 60 1 61 1 180 2 219 3 129 5 267 1 317 9 162 1 269 1 270 1 135 1 26 9 8 1 68 1 274 7 100 4 276 1 174 1 145 2 34 2 280 1 355 1 
195 1 78 1 60 1 61 1 180 2 219 3 129 5 267 1 317 9 162 1 269 1 270 1 135 1 26 9 8 1 68 1 274 7 100 4 276 1 174 1 145 2 34 2 280 1 355 1 
93 1 336 1 200 1 
173 2 221 1 336 1 
98 1 91 1 149 2 321 2 259 2 323 2 33 2 88 2 
18 1 79 1 149 3 259 2 81 2 291 1 2 1 124 2 50 1 186 1 88 2 89 1 188 1 91 1 134 1 294 1 27 1 248 1 191 1 10 1 321 3 322 1 323 2 297 1 141 1 98 1 143 2 115 1 252 1 58 1 33 2 278 1 236 1 178 1 35 1 330 1 76 1 
98 1 149 1 272 1 321 1 259 1 82 1 323 1 33 1 88 1 40 1 
247 1 149 1 285 1 62 1 321 1 82 1 347 1 66 1 336 1 200 1 88 1 302 1 212 1 305 1 
247 1 149 1 285 1 62 1 259 1 321 1 323 1 82 1 66 1 33 1 336 1 200 1 88 1 302 2 212 2 
130 1 302 1 120 1 212 1 312 1 
336 1 200 1 327 1 302 2 120 1 288 1 212 2 312 1 
302 1 120 1 212 1 
149 1 272 1 259 1 321 1 82 1 323 1 40 1 241 1 312 1 98 1 33 1 302 1 88 1 212 1 
336 1 
336 1 200 1 302 2 120 1 288 1 212 2 84 1 312 1 
105 1 149 1 106 4 259 1 286 2 82 1 40 1 289 4 288 1 241 1 263 1 312 2 85 2 158 1 265 2 88 1 336 1 200 1 189 1 165 1 344 1 273 1 272 1 321 1 53 1 323 1 29 1 98 1 210 1 99 1 116 1 73 1 33 1 302 5 120 2 212 5 
91 1 93 1 
91 2 190 1 149 2 321 2 216 1 259 1 323 1 33 1 88 2 
25 1 47 1 109 1 
91 1 27 1 149 1 321 1 81 1 297 1 208 1 141 1 124 1 143 1 115 1 236 1 178 1 330 1 89 1 76 1 
27 1 149 2 215 1 259 1 321 2 297 1 323 1 81 1 141 1 71 1 124 1 143 1 115 1 25 1 88 1 236 1 178 1 89 1 330 1 76 1 
91 1 149 3 321 3 259 3 33 1 323 3 88 3 71 1 
149 1 272 1 321 1 259 1 82 1 323 1 88 1 
190 1 149 1 321 1 259 1 216 1 82 1 323 1 33 1 88 1 
18 1 79 1 149 4 285 1 215 1 62 1 216 1 259 3 82 1 81 1 2 1 124 1 66 1 50 1 186 1 88 3 89 1 91 1 134 1 247 1 27 1 191 1 10 1 321 4 322 1 297 1 323 3 141 1 71 1 98 1 143 1 115 1 56 1 58 1 33 2 236 1 278 1 302 1 178 1 212 1 35 1 104 1 330 1 76 1 
91 1 149 2 321 2 259 1 323 1 88 2 71 1 305 1 24 1 
247 1 285 1 149 3 94 1 215 1 62 1 216 1 259 3 321 3 82 1 323 3 71 2 66 1 33 1 336 1 302 1 88 3 212 1 104 1 
149 2 216 1 259 2 321 2 323 2 71 1 25 1 109 1 33 1 88 2 
91 1 27 1 149 1 321 1 81 1 297 1 141 1 124 1 143 1 115 1 236 1 178 1 330 1 89 1 76 1 
91 1 226 1 283 1 149 1 321 1 81 1 297 1 141 1 124 1 143 1 115 1 178 1 330 1 89 1 76 1 
295 1 271 1 10 1 79 1 191 1 286 1 228 1 322 1 2 2 350 1 144 1 265 1 252 1 25 1 47 1 109 1 58 1 50 2 186 1 5 1 35 1 293 1 
127 1 149 1 62 1 321 1 259 1 82 1 323 1 88 1 
91 1 136 1 149 5 215 1 259 4 321 5 216 1 323 4 71 2 24 1 14 1 33 1 88 5 305 1 
127 1 149 2 272 1 321 2 259 2 82 1 323 2 88 2 
230 1 211 1 
230 1 211 1 
11 1 239 1 
11 1 239 1 
11 1 239 1 
230 1 211 1 41 1 
230 1 211 1 41 1 
230 1 211 1 41 1 
230 1 211 1 245 1 
230 2 196 1 211 2 11 1 239 1 12 1 
230 1 345 1 211 1 
230 1 345 1 211 1 
230 1 345 1 211 1 
319 3 111 1 92 2 320 1 205 1 196 1 20 2 193 2 311 1 179 2 64 1 230 2 334 2 199 1 211 2 254 1 336 1 302 2 212 2 
149 2 20 1 259 2 179 1 242 1 199 1 245 1 88 2 4 1 110 1 91 1 319 1 92 1 342 1 193 1 194 1 321 2 323 2 324 1 230 1 175 1 211 1 302 1 212 1 
276 1 78 1 280 1 
276 1 30 1 280 1 
243 1 125 1 276 3 78 2 159 1 30 1 
243 1 125 1 276 2 78 1 258 1 30 1 
125 1 243 2 276 2 78 1 30 1 
284 1 106 2 286 1 21 1 331 2 288 1 289 3 23 2 312 4 242 1 265 1 244 1 221 1 132 1 200 1 336 2 189 1 165 1 52 1 139 1 228 1 206 1 324 1 29 1 298 2 99 1 350 1 173 3 175 1 302 5 120 1 212 5 
302 1 212 1 75 1 312 1 
210 1 284 1 21 1 132 1 302 2 212 2 312 1 
210 1 284 1 21 1 302 1 132 1 147 1 212 1 
93 1 204 1 178 1 
253 1 178 1 
80 1 
178 1 141 1 
204 2 113 1 178 3 141 1 155 1 76 1 
178 1 141 1 76 1 
178 1 354 1 
252 1 246 1 102 1 281 1 
252 1 246 1 102 1 281 1 
231 1 252 1 246 1 102 1 281 1 
252 1 246 1 102 1 281 1 
252 1 246 1 102 1 281 1 
78 1 195 1 19 1 81 1 124 1 129 1 46 1 315 1 159 1 224 1 317 2 269 1 135 1 26 2 8 1 9 1 95 1 297 1 30 1 274 1 143 1 115 1 276 2 277 1 301 1 232 1 145 1 34 1 177 1 280 1 
78 1 195 1 19 1 81 1 240 1 124 1 129 1 46 1 159 1 224 1 317 3 269 1 135 1 26 3 95 1 297 1 30 1 209 1 274 2 143 1 115 1 276 2 277 1 118 1 301 1 232 1 145 1 34 1 177 1 280 1 
195 1 78 1 81 1 240 1 124 1 129 1 46 1 159 1 224 1 317 2 269 1 135 1 26 2 297 1 30 1 209 1 274 2 143 1 115 1 276 2 277 1 301 1 232 1 177 1 280 1 
195 2 260 1 81 1 124 1 197 1 87 1 131 1 224 2 317 1 26 1 7 1 297 1 141 1 143 1 115 1 277 2 118 1 232 2 145 1 233 1 34 1 178 1 330 1 
78 1 195 1 19 1 81 1 124 1 46 1 315 1 159 1 224 1 317 1 26 1 8 1 95 1 297 1 30 1 209 1 143 1 115 1 276 2 277 1 301 1 232 1 145 1 34 1 177 1 280 1 
198 1 
282 1 77 1 106 2 260 1 81 2 289 2 288 1 217 1 126 1 124 2 161 1 187 1 189 1 6 1 165 1 201 1 297 1 346 1 206 1 29 1 172 1 141 1 325 1 143 2 115 1 99 1 117 1 32 1 233 1 103 1 302 2 178 1 212 2 120 2 330 2 
77 1 288 1 84 1 126 1 32 1 161 1 302 2 212 2 353 1 120 2 187 1 
126 1 77 1 32 1 153 1 161 1 302 1 212 1 67 1 187 1 
77 1 153 1 288 1 84 1 126 1 333 1 32 1 161 1 302 2 212 2 353 1 120 2 67 1 187 1 
77 1 259 1 82 1 40 1 84 1 126 1 88 1 187 1 133 1 189 1 6 2 272 1 321 1 323 1 98 1 325 2 99 1 282 1 149 1 106 1 151 1 289 1 288 1 241 1 157 1 333 2 161 1 200 1 336 1 165 1 29 1 117 1 32 1 176 1 33 1 302 2 353 2 212 2 120 3 303 1 
282 1 77 1 106 1 289 1 217 1 126 1 161 1 187 1 189 1 165 1 6 1 29 1 325 1 99 1 117 1 32 1 302 1 212 1 
282 1 77 1 149 1 151 1 106 1 259 1 82 1 40 1 289 1 241 1 126 1 161 1 88 1 336 1 200 1 187 1 133 1 189 1 165 1 6 2 272 1 321 1 323 1 29 1 98 1 325 2 99 1 117 1 32 1 176 1 33 1 302 1 212 1 
282 1 77 1 149 1 151 1 106 1 259 1 82 1 40 1 289 1 241 1 126 1 161 1 88 1 336 1 200 1 187 1 133 1 189 1 165 1 6 2 272 1 321 1 323 1 29 1 98 1 325 2 99 1 117 1 32 1 176 1 33 1 302 1 212 1 
126 1 77 1 32 1 161 1 302 1 212 1 187 1 255 1 
77 1 259 1 82 1 40 1 126 1 88 1 187 1 133 1 189 1 6 2 272 1 321 1 323 1 98 1 325 2 99 1 282 1 149 1 106 1 151 1 153 1 289 1 241 1 333 1 161 1 200 1 336 1 67 1 165 1 29 1 117 1 32 1 176 1 33 1 302 1 212 1 353 1 120 1 303 1 
77 1 259 1 82 1 40 1 126 1 88 1 187 1 133 1 189 1 6 2 272 1 321 1 323 1 98 1 325 2 99 1 282 1 149 1 106 1 151 1 153 1 289 1 241 1 333 1 161 1 200 1 336 1 67 1 165 1 29 1 117 1 32 1 176 1 33 1 302 1 212 1 353 1 120 1 303 1 
282 1 77 1 106 1 289 1 217 1 126 1 161 1 187 1 189 1 165 1 6 1 296 1 29 1 325 1 99 1 32 1 302 1 212 1 
112 1 93 1 344 1 10 1 79 1 191 1 286 1 53 1 152 1 322 1 45 1 251 1 73 1 252 1 58 1 186 1 5 1 35 1 
238 1 227 1 10 1 79 1 191 1 322 1 2 1 252 1 25 1 47 1 58 1 237 1 186 1 50 1 35 1 213 1 339 1 
134 1 294 1 227 1 191 1 149 1 10 1 79 1 215 1 259 1 321 1 322 1 323 1 22 1 71 1 2 1 250 1 252 1 58 1 50 1 88 1 186 1 35 1 
227 1 191 1 149 1 10 1 79 1 215 1 259 1 321 1 81 1 322 1 323 1 71 1 124 1 143 1 72 1 58 1 88 1 186 1 35 1 330 1 
294 1 257 1 10 1 79 1 191 1 322 1 81 1 124 1 143 1 55 1 252 1 58 1 186 1 35 1 330 1 
227 1 149 1 10 1 79 1 191 1 192 1 286 1 321 1 259 1 216 1 322 1 323 1 350 1 252 1 244 1 58 1 33 1 88 1 186 1 35 1 
350 1 252 1 191 1 79 1 10 1 286 1 58 1 322 1 186 1 35 1 5 1 293 1 
10 1 79 1 191 1 228 1 322 1 2 2 144 1 265 1 25 1 47 1 109 1 58 1 186 1 50 2 5 1 35 1 
350 1 252 1 244 1 191 1 79 1 10 1 286 1 58 1 322 1 186 1 35 1 5 1 
350 1 55 1 252 1 191 1 79 1 10 1 286 1 58 1 322 1 186 1 35 1 293 1 
10 1 79 1 191 1 228 1 322 1 2 2 144 1 55 1 265 1 25 1 47 1 109 1 58 1 186 1 50 2 35 1 
350 1 55 1 252 1 244 1 191 1 79 1 10 1 286 1 58 1 322 1 186 1 35 1 
350 1 252 1 244 1 191 1 79 1 10 1 286 1 58 1 322 1 186 1 35 1 
149 1 79 1 81 1 2 1 124 1 186 1 50 1 89 1 91 1 134 1 294 1 27 1 10 1 191 1 321 1 297 1 322 1 141 1 143 1 115 1 252 1 58 1 236 1 278 1 178 1 35 1 330 1 76 1 
226 1 283 1 149 1 321 1 81 1 297 1 141 1 124 1 143 1 115 1 3 1 178 1 330 1 89 1 76 1 
350 1 252 1 227 1 244 1 191 1 79 1 10 1 286 1 58 1 322 1 186 1 35 1 
149 1 79 1 286 1 81 1 124 1 244 1 186 1 89 1 27 1 203 1 9 1 10 1 191 1 321 1 297 1 322 1 141 1 143 1 115 1 350 1 252 1 58 1 236 1 278 1 178 1 35 1 76 1 
227 1 149 1 10 1 79 1 191 1 286 1 321 1 259 1 216 1 322 1 323 1 350 1 252 1 244 1 49 1 58 1 33 1 88 1 186 1 35 1 
138 1 79 1 191 1 28 1 322 1 140 1 182 1 2 1 332 1 252 1 57 1 58 1 186 1 50 1 
138 1 79 1 191 1 28 1 322 1 140 1 182 1 2 1 332 1 252 1 57 1 58 1 186 1 50 1 
138 1 79 1 191 1 28 1 322 1 140 1 182 1 2 1 332 1 252 1 57 1 58 1 186 1 50 1 
138 1 79 1 191 1 28 1 322 1 140 1 182 1 2 1 332 1 252 1 57 1 58 1 186 1 50 1 
138 1 79 1 191 1 28 1 322 1 140 1 182 1 2 1 332 1 252 1 57 1 58 1 186 1 50 1 
230 1 111 1 92 1 205 1 196 1 211 1 193 1 20 1 179 1 170 1 
230 1 92 1 184 1 37 1 211 1 193 1 20 1 179 1 207 1 
245 1 4 1 
319 2 111 1 92 1 205 1 196 1 20 1 193 1 311 1 179 1 64 1 230 1 334 1 199 1 211 1 254 1 336 1 302 1 212 1 
319 2 111 1 92 1 205 1 196 1 20 1 193 1 311 1 179 1 64 1 230 1 334 1 199 1 211 1 254 1 336 1 302 1 212 1 
319 2 111 1 92 1 205 1 196 1 20 1 193 1 311 1 179 1 64 1 230 1 334 1 199 1 211 1 254 1 336 1 302 1 212 1 
310 1 41 1 12 1 
310 1 41 1 12 1 
256 1 345 1 
256 1 345 1 12 1 
342 1 194 1 
149 2 20 1 179 1 259 2 156 1 312 1 242 1 334 1 245 1 4 1 88 2 110 1 91 1 319 1 92 1 342 1 193 1 194 1 321 2 323 2 324 1 230 1 175 1 211 1 254 1 302 1 212 1 
310 1 41 1 
256 1 345 1 12 1 
122 1 294 1 257 1 227 1 191 1 149 2 10 1 79 1 309 1 321 2 322 1 38 1 252 1 58 1 186 1 88 2 35 1 164 1 
78 1 9 1 95 1 297 1 81 2 30 1 209 1 96 1 123 1 124 2 143 2 115 1 276 2 277 1 301 1 159 1 234 1 177 1 280 1 
124 1 143 1 115 1 276 2 277 1 78 1 301 1 159 1 95 1 107 1 297 1 81 1 177 1 30 1 96 1 209 1 280 1 
260 1 297 1 81 1 141 1 123 1 124 1 143 1 115 1 277 1 233 1 131 1 222 1 178 1 330 1 
78 1 95 1 297 1 81 1 30 1 209 1 96 1 123 1 124 1 143 1 115 1 276 2 277 1 301 1 159 1 234 1 177 1 280 1 
287 1 
93 1 
189 1 165 1 137 1 106 1 29 1 288 1 289 1 114 1 99 1 117 1 173 1 221 1 200 1 302 1 336 2 212 1 120 1 
36 2 1 2 81 3 262 1 124 3 265 2 314 2 185 2 221 6 189 4 9 1 273 3 228 2 141 3 54 2 143 3 99 4 235 1 330 1 285 2 106 8 286 2 289 9 288 3 155 1 23 6 292 2 244 2 200 2 336 8 201 1 165 4 204 2 206 2 297 4 69 1 171 1 29 4 70 1 298 6 115 3 350 2 351 2 173 12 119 1 352 1 253 3 302 5 178 10 120 5 212 5 354 2 76 3 
238 1 106 5 286 2 288 1 289 8 181 1 183 1 23 5 85 2 265 2 244 2 221 3 336 5 200 2 268 1 189 2 201 1 165 2 343 1 273 1 228 2 206 1 29 2 298 5 249 1 299 1 99 2 349 1 350 2 101 1 173 6 302 1 237 1 212 1 120 1 
149 1 151 1 106 2 286 2 259 1 82 1 40 1 289 2 241 1 85 2 158 1 265 1 88 1 189 1 165 1 344 1 273 1 272 1 321 1 53 1 323 1 29 1 98 1 99 1 73 1 33 1 302 1 212 1 
189 1 165 1 99 1 29 1 
336 1 200 1 302 1 212 1 120 1 288 1 
106 1 260 1 81 2 289 1 288 1 124 2 189 1 165 1 201 1 297 1 346 1 206 1 29 1 69 1 172 1 141 1 210 1 143 2 115 1 99 1 233 1 302 2 178 1 120 2 212 2 330 2 
18 1 149 3 79 1 259 2 81 1 2 1 124 1 50 1 186 1 88 2 89 1 91 1 134 1 27 1 191 1 10 1 321 3 322 1 323 2 297 1 141 1 98 1 143 1 115 1 58 1 33 2 278 1 236 1 178 1 35 1 330 1 76 1 
189 1 165 1 201 1 106 2 206 1 29 1 289 1 298 2 23 2 99 1 173 4 246 1 221 2 200 2 336 4 
92 1 179 1 290 1 
92 1 179 1 290 1 
92 1 179 1 290 1 
92 1 205 1 194 1 108 1 179 1 
92 1 146 1 179 1 
92 1 146 1 179 1 
92 1 146 1 179 1 
92 1 179 1 
230 1 211 1 
166 1 112 1 79 2 191 2 344 1 152 1 322 2 45 1 251 1 73 1 58 2 186 2 340 1 
112 1 73 1 251 1 45 1 93 1 252 1 344 1 286 1 53 1 152 1 
148 1 350 1 252 1 244 1 191 1 79 1 286 1 58 1 322 1 186 1 
2 1 238 1 252 1 237 1 50 1 181 1 
2 1 238 1 252 1 237 1 50 1 339 1 
2 1 238 1 50 1 
252 1 237 1 
2 1 350 1 252 1 244 1 185 1 286 1 50 1 
2 1 238 1 252 1 191 1 79 1 58 1 322 1 237 1 50 1 186 1 181 1 249 1 182 1 
252 1 286 1 53 1 
166 1 112 1 344 1 79 1 191 1 152 1 322 1 2 1 73 1 251 1 45 1 58 1 50 1 186 1 340 1 304 1 
158 1 112 1 73 1 252 1 344 1 286 1 53 1 152 1 
350 1 252 1 191 1 79 1 286 1 58 1 322 1 186 1 182 1 
350 1 252 1 244 1 191 1 79 1 286 1 58 1 322 1 186 1 182 1 
112 1 79 2 191 2 344 1 152 1 322 2 182 1 73 1 58 2 186 2 337 1 340 1 
148 1 238 1 79 3 191 3 322 3 181 1 182 1 2 1 252 1 128 1 58 3 237 1 186 3 50 1 337 1 
2 1 238 1 252 1 191 1 79 1 58 1 322 1 237 1 50 1 186 1 181 1 249 1 182 1 
148 1 238 1 79 2 191 2 322 2 181 1 249 1 182 1 2 1 252 1 58 2 237 1 186 2 50 1 
2 1 238 1 252 1 191 1 79 1 58 1 322 1 237 1 50 1 186 1 181 1 249 1 182 1 
2 1 238 1 252 1 191 1 79 1 58 1 322 1 237 1 50 1 186 1 181 1 249 1 182 1 
2 1 238 1 252 1 191 1 79 1 58 1 322 1 237 1 50 1 186 1 181 1 249 1 182 1 
2 1 238 1 252 1 191 1 79 1 58 1 322 1 237 1 50 1 186 1 181 1 249 1 182 1 
148 1 238 1 79 2 191 2 322 2 181 1 249 1 182 1 2 1 252 1 58 2 237 1 186 2 50 1 
238 1 79 2 191 2 322 2 181 1 249 1 182 1 2 1 252 1 58 2 237 1 186 2 50 1 337 1 
112 1 73 1 251 1 45 1 344 1 152 1 340 1 
238 1 79 2 191 2 322 2 181 1 249 1 182 1 2 1 252 1 58 2 237 1 186 2 50 1 337 1 
91 1 167 1 149 1 321 1 88 1 305 1 24 1 
90 1 91 1 167 1 149 1 321 1 24 1 142 1 13 1 88 1 225 1 341 1 305 1 
124 1 143 1 115 1 93 1 233 1 260 1 297 1 81 1 178 1 141 1 330 1 
91 1 27 1 149 2 259 1 321 2 297 1 323 1 81 1 141 1 71 1 124 1 143 1 115 1 88 1 178 1 89 1 330 1 76 1 
91 1 247 1 1 1 27 1 149 2 62 1 259 2 321 2 82 1 297 1 323 1 81 1 141 2 71 1 124 1 143 1 115 1 119 1 88 2 178 3 354 1 89 1 76 2 
91 1 247 1 283 1 1 1 149 2 62 1 259 2 321 2 82 1 297 1 323 1 81 2 141 2 71 1 124 2 143 2 115 1 119 1 326 1 88 2 178 3 354 1 89 1 76 2 
1 1 307 1 204 1 81 1 297 1 141 1 124 1 143 1 115 1 119 1 253 1 302 1 212 1 178 4 354 1 76 1 318 1 
36 1 1 1 285 1 204 1 297 1 81 3 141 1 124 3 143 3 115 1 119 1 253 1 326 1 336 1 200 1 302 2 212 2 178 4 120 1 354 1 330 1 76 1 
124 1 143 1 115 1 308 1 297 1 81 1 
59 1 308 1 9 1 168 1 81 7 297 3 39 1 209 1 155 1 141 2 291 1 124 6 143 7 115 2 220 1 160 1 328 1 178 3 330 2 121 1 76 1 
79 2 149 2 286 1 152 1 259 1 81 1 124 1 45 1 186 2 88 1 89 1 164 1 27 1 112 1 227 1 203 1 344 1 10 2 191 2 9 1 53 1 321 2 297 1 323 1 322 2 141 1 71 1 143 1 115 1 73 1 251 1 252 1 58 2 278 1 236 1 178 1 35 2 76 1 17 1 
36 1 285 1 106 1 81 1 289 1 288 1 312 1 124 1 292 1 336 1 200 1 189 2 165 2 204 1 171 1 29 2 69 1 143 1 54 1 99 2 351 1 352 1 253 1 302 3 212 3 178 2 120 2 330 1 
9 1 204 1 308 1 81 2 297 2 70 1 155 1 141 1 124 2 143 2 115 1 178 2 76 1 
9 1 260 1 297 1 81 4 229 1 141 1 124 4 143 4 115 1 233 1 326 1 178 1 330 1 
168 1 81 2 297 2 141 1 124 2 143 2 115 1 266 1 119 1 160 1 178 1 163 1 329 1 76 1 
124 1 143 1 115 1 276 1 301 1 297 1 81 1 30 1 280 1 330 1 
124 2 59 1 143 2 115 1 86 1 9 1 297 1 81 2 178 1 141 1 209 1 
59 1 9 1 260 1 81 5 297 2 229 1 141 2 124 4 143 5 115 2 119 1 233 1 220 1 178 3 330 1 121 1 
59 1 9 1 260 1 81 5 297 2 229 1 141 2 124 4 143 5 218 1 115 2 119 1 233 1 178 3 330 1 121 1 
91 1 283 1 149 2 259 1 321 2 297 1 323 1 81 1 141 1 71 1 124 1 143 1 115 1 88 1 178 1 89 1 330 1 76 1 
168 1 81 1 297 2 39 1 155 1 141 1 124 1 143 1 115 1 119 1 160 1 178 1 76 1 
91 1 300 1 150 1 169 1 83 1 
91 1 247 1 306 1 285 1 150 2 62 1 169 1 82 1 83 2 312 1 65 1 66 1 300 2 336 1 200 1 279 1 302 2 212 2 104 1 
122 1 300 1 149 1 169 1 309 1 321 1 38 1 88 1 83 1 
65 1 306 1 169 1 
135 1 93 1 129 1 269 1 
135 1 26 1 129 1 145 1 317 1 34 1 269 1 
195 1 232 1 317 1 
26 3 135 1 8 1 63 1 31 1 129 1 145 1 48 1 34 1 317 3 269 1 15 2 
135 1 26 2 129 1 145 1 180 1 317 2 34 1 269 1 274 1 
100 1 26 1 276 1 78 1 8 1 60 1 129 1 145 1 317 1 34 1 280 1 
135 1 26 1 8 1 129 1 145 1 317 1 34 1 
135 2 26 1 8 1 145 1 317 1 34 1 269 1 
135 1 26 2 8 1 154 1 97 1 264 1 129 1 145 2 34 2 317 2 
135 1 26 3 8 1 274 2 100 1 219 1 129 2 145 1 267 1 34 1 317 3 162 1 269 1 
135 1 26 2 8 1 78 1 30 1 274 1 276 2 129 1 145 1 159 1 34 1 317 2 269 1 338 1 280 1 
135 1 26 4 8 1 61 1 180 1 274 2 100 1 219 1 129 2 145 2 34 2 317 4 269 1 
135 1 26 1 8 1 129 1 145 1 317 1 34 1 269 1 
135 2 26 4 274 2 31 1 100 1 44 1 219 1 129 3 145 1 48 1 317 4 34 1 269 2 15 1 
135 1 26 2 8 1 68 1 42 1 274 1 313 1 129 1 145 1 34 1 317 2 269 1 
26 3 135 1 8 1 31 2 129 1 145 1 48 1 316 1 34 1 317 3 269 1 15 2 
275 1 129 2 335 2 16 1 
26 1 8 1 145 1 261 1 317 1 34 1 
135 1 26 2 8 1 129 1 145 1 162 1 317 2 34 1 269 1 274 1 
74 1 
135 1 26 1 8 1 129 1 145 1 317 1 34 1 269 1 
135 1 26 3 8 1 129 1 145 1 162 1 317 3 34 1 269 1 15 1 274 1 
100 1 44 1 219 1 129 1 
135 1 129 1 

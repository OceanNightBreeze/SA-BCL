#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (109,135) (109,135) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 207 13 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 207 79 189 9 (252,341) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 76 199 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 207 281 110 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 207 281 110 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 207 281 110 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 207 281 110 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 207 281 110 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (89,322,327) (31,98,331) (31,98,331) (31,98,331) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (89,322,327) (31,98,331) (31,98,331) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (89,322,327) (31,98,331) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (89,322,327) (31,98,331) (31,98,331) (31,98,331) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 207 29 173 124 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 207 13 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 207 79 189 112 278 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 207 13 286 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 207 79 189 9 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 207 79 189 9 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 207 13 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 207 13 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 207 250 44 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 207 250 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 207 250 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 207 250 44 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 207 250 44 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (89,322,327) (89,322,327) (89,322,327) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (89,322,327) (89,322,327) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (89,322,327) (89,322,327) (89,322,327) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 76 (4,104) 53 61 (153,179) 273 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 258 251 15 (277,311) (277,311) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 149 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 207 29 260 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 207 29 173 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 207 29 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 207 79 189 112 278 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 207 79 202 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 258 251 15 (277,311) (277,311) 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 207 79 202 41 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 207 79 189 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 207 79 189 112 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 258 251 15 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 207 29 260 152 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 258 251 15 (277,311) (277,311) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 207 29 260 190 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 76 (4,104) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 207 79 202 (277,311) (277,311) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 76 (4,104) 53 61 (153,179) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 76 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 34 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3451 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource; | RETURN | 431 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money; | RETURN | 2675 | return null
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
128 2 170 1 148 6 280 4 302 2 50 1 51 2 106 1 5 9 84 1 83 1 113 1 288 1 263 2 87 1 32 9 289 1 268 3 37 5 291 2 206 1 293 1 92 1 270 1 212 1 97 2 216 2 69 1 
128 2 170 1 148 6 280 4 302 2 50 1 51 2 106 1 5 9 84 1 83 1 113 1 288 1 263 2 87 1 32 9 289 1 268 3 37 5 291 2 206 1 293 1 92 1 270 1 212 1 97 2 216 2 69 1 
128 2 170 1 148 7 280 5 302 2 50 1 51 2 106 1 5 10 84 1 83 1 113 1 288 1 263 2 87 1 32 10 289 1 268 4 37 6 291 2 206 1 293 1 92 1 270 1 212 1 97 2 216 2 69 1 
128 2 170 1 148 4 280 3 302 2 50 1 51 2 106 1 5 7 84 1 83 1 288 1 263 1 87 1 32 7 289 1 268 2 37 4 291 2 206 1 293 1 92 1 270 1 212 1 97 2 216 2 69 1 
128 1 170 1 148 3 32 4 268 1 280 2 302 1 37 3 106 1 291 1 293 1 92 1 5 4 84 1 97 1 113 1 216 1 263 2 
170 1 32 1 212 1 135 1 205 1 302 1 51 1 216 1 109 1 5 1 
170 1 148 1 32 3 268 1 280 1 302 2 37 2 51 1 206 1 92 1 5 3 84 1 216 2 
128 1 148 7 170 1 280 4 174 1 302 2 51 1 106 1 197 1 5 9 84 1 113 1 288 1 263 2 32 9 268 3 37 5 291 1 206 1 293 1 92 1 270 1 97 1 216 2 
128 1 148 7 170 1 280 4 174 1 302 2 51 1 106 1 197 1 5 9 84 1 113 1 288 1 263 2 32 9 268 3 37 5 291 1 206 1 293 1 92 1 270 1 97 1 216 2 
58 1 149 1 194 1 
194 1 167 2 117 1 
94 2 317 2 210 2 157 1 187 2 20 2 11 2 264 1 
255 1 217 2 74 1 238 1 48 1 239 1 240 2 3 1 4 1 308 1 181 1 330 1 157 1 184 1 224 1 264 1 86 1 8 1 317 2 334 1 36 1 187 2 119 1 335 2 121 1 63 1 11 2 207 1 94 3 210 2 13 1 211 1 215 1 297 1 20 3 192 1 99 1 
317 1 187 1 248 1 11 1 94 1 210 1 157 1 111 1 19 1 20 1 
58 1 317 1 194 1 290 1 1 1 94 1 230 1 350 1 285 1 42 1 321 1 111 1 161 1 20 1 
194 1 105 1 1 1 285 1 157 1 111 2 161 2 58 1 317 2 290 1 187 2 248 1 11 2 230 1 94 2 210 2 321 2 20 2 19 1 
266 1 321 1 161 1 342 1 107 1 
58 1 266 1 194 1 321 2 17 1 161 2 342 1 355 1 
321 1 161 1 342 1 
266 1 317 1 105 1 187 1 248 1 11 1 94 1 210 1 157 1 321 1 111 1 161 1 19 1 20 1 
194 1 
58 1 266 1 194 1 321 2 161 2 342 1 355 1 166 1 
171 1 194 2 105 1 2 5 79 2 157 1 246 1 200 4 111 1 222 2 161 5 342 2 225 1 58 2 317 1 266 2 202 1 187 1 248 1 62 2 38 2 11 1 90 2 229 1 94 1 210 1 271 1 251 1 41 1 272 2 337 1 15 1 321 5 168 1 20 1 19 1 355 1 45 1 
149 1 264 1 
317 2 300 1 151 1 187 1 11 1 94 2 210 1 309 1 111 1 20 2 264 1 
325 1 341 1 178 1 
309 1 111 1 30 1 264 1 
255 1 317 1 217 1 175 1 239 1 48 1 187 1 240 1 178 1 335 1 219 1 4 1 63 1 94 2 210 1 211 1 184 1 215 1 20 2 99 1 
317 2 175 1 187 2 94 2 210 2 309 1 111 1 20 2 264 1 
94 1 317 1 210 1 187 1 111 1 248 1 20 1 
317 1 300 1 187 1 151 1 11 1 94 1 210 1 111 1 20 1 
255 1 300 1 217 1 74 1 175 1 239 1 48 1 1 1 240 1 3 1 26 1 219 1 4 1 308 1 181 1 285 1 330 1 157 1 184 1 111 1 161 1 264 1 86 1 8 1 317 3 334 1 290 1 36 1 187 3 119 1 335 1 63 1 121 1 11 2 94 4 230 1 210 3 211 1 295 1 321 1 215 1 20 4 192 1 99 1 
317 2 175 1 187 1 336 1 94 2 210 1 309 1 42 1 111 1 20 2 264 1 
317 3 300 1 194 1 290 1 175 2 187 3 1 1 219 1 11 1 94 3 230 1 285 1 210 3 321 1 295 1 111 1 161 1 67 1 20 3 
94 2 317 2 210 2 300 1 175 1 187 2 341 1 178 1 20 2 11 1 
255 1 217 1 48 1 239 1 240 1 335 1 4 1 63 1 94 1 211 1 184 1 215 1 20 1 99 1 264 1 
255 1 217 1 239 1 240 1 335 1 63 1 94 1 231 1 211 1 184 1 215 1 354 1 20 1 99 1 264 1 
9 1 334 1 74 1 325 1 176 1 36 1 178 1 3 2 119 1 79 1 27 1 207 1 189 1 181 1 308 1 272 1 55 1 341 1 252 1 192 2 100 1 8 1 
317 1 187 1 94 1 230 1 210 1 111 1 274 1 20 1 
317 5 300 1 218 1 175 2 196 1 187 4 219 1 11 1 336 1 94 5 210 4 309 1 42 1 111 1 20 5 264 1 
94 1 317 1 210 1 187 1 111 1 248 1 20 1 
6 1 326 1 
6 1 326 1 
132 1 287 1 
132 1 287 1 
132 1 287 1 
6 1 326 1 162 1 
6 1 326 1 261 1 
244 1 6 2 326 2 132 1 18 1 287 1 
6 1 326 1 162 1 
6 1 326 1 162 1 
6 1 326 1 66 1 
6 1 326 1 66 1 
6 1 326 1 66 1 
194 1 129 2 326 2 283 1 122 1 292 1 80 2 340 3 6 2 320 1 351 2 321 2 145 1 18 1 161 2 114 2 68 2 70 1 333 1 
72 1 129 1 326 1 340 1 80 1 284 1 108 1 6 1 161 1 261 1 114 1 264 1 317 2 33 1 187 2 123 1 94 2 64 1 210 2 351 1 321 1 145 1 20 2 338 1 
128 1 97 1 291 1 
205 1 
205 1 
205 1 
205 1 
194 2 176 1 2 2 282 2 79 1 108 1 328 1 246 1 200 3 161 5 112 1 342 1 137 1 58 1 266 4 318 2 203 2 35 1 117 1 62 1 227 1 38 1 90 1 123 1 208 1 189 1 64 1 272 1 167 3 321 5 296 1 355 1 
234 1 171 1 194 5 176 3 49 1 2 6 79 3 107 5 156 1 246 1 200 8 161 9 112 3 342 6 58 1 266 7 318 6 203 6 117 3 62 2 118 5 227 2 249 1 38 2 120 1 90 2 208 1 189 3 64 4 272 3 167 9 43 1 321 9 296 2 355 1 
171 1 194 3 176 1 282 1 2 2 79 1 200 3 161 3 112 1 137 1 58 1 266 2 318 2 35 1 203 2 117 2 62 1 227 1 38 1 90 1 64 1 189 1 272 1 167 4 321 3 296 1 
234 1 171 1 194 4 176 2 282 2 2 4 79 2 156 1 200 5 161 4 112 2 137 1 58 1 266 3 318 4 203 4 35 1 117 3 62 1 227 1 38 1 90 1 64 2 189 2 272 2 167 7 43 1 321 4 296 1 
149 1 76 1 
235 1 211 1 
213 1 
211 1 99 1 
211 1 199 1 76 1 215 1 99 1 316 1 
211 1 215 1 99 1 
211 1 241 1 
207 1 110 1 281 1 75 1 
207 1 110 1 281 1 75 1 
207 1 110 1 281 1 75 1 257 1 
207 1 110 1 281 1 75 1 
207 1 110 1 281 1 75 1 
170 1 59 1 32 1 217 1 239 1 205 1 302 1 240 1 51 1 335 1 5 1 81 1 14 1 331 1 184 1 185 1 322 1 126 1 275 1 98 1 216 1 31 1 
148 1 59 1 32 2 217 1 239 1 205 1 302 1 240 1 51 1 335 1 52 1 339 1 5 2 81 1 133 1 14 1 184 1 185 1 322 1 126 1 98 1 216 1 31 1 
148 1 59 1 32 1 217 1 239 1 205 1 240 1 335 1 51 1 339 1 5 1 81 1 133 1 184 1 185 1 322 1 126 1 98 1 
255 1 32 1 217 1 256 1 239 1 302 1 131 1 140 1 240 1 51 2 335 1 52 1 40 1 81 2 5 1 294 1 209 1 211 1 184 1 185 2 126 2 216 1 99 1 
170 1 59 1 32 1 217 1 239 1 205 1 302 1 240 1 51 1 335 1 339 1 5 1 81 1 14 1 331 1 184 1 185 1 322 1 126 1 98 1 216 1 31 1 
116 1 
276 4 194 2 279 1 239 1 195 1 240 2 1 1 242 2 2 2 285 1 246 1 200 2 332 2 111 1 161 5 58 1 290 1 164 1 117 2 62 1 335 2 10 2 209 1 211 1 167 2 20 1 253 1 255 2 71 1 217 2 23 2 130 1 25 2 307 1 183 1 184 1 342 6 85 2 317 1 227 1 38 1 90 1 40 1 94 1 230 1 142 1 350 1 42 1 353 2 321 5 355 3 147 1 323 1 99 1 233 1 
71 1 276 2 317 1 279 1 290 1 195 1 130 1 25 1 1 1 166 1 230 1 94 1 285 1 350 1 42 1 183 1 321 3 111 1 161 3 342 2 20 1 355 1 
276 3 71 1 279 1 194 1 130 1 195 1 1 1 242 1 285 1 183 1 111 1 161 3 342 1 58 1 317 1 290 1 166 1 94 1 230 1 350 1 42 1 321 3 20 1 355 1 
276 3 71 1 279 1 194 1 130 1 195 1 1 1 25 1 242 1 285 1 183 1 111 1 161 3 342 2 58 1 317 1 290 1 166 1 94 1 230 1 350 1 42 1 321 3 353 1 20 1 355 1 
276 6 71 1 194 5 279 1 23 2 130 1 195 1 1 1 25 4 2 1 242 4 285 1 183 1 54 1 246 1 200 1 201 1 332 2 111 1 161 5 342 7 85 2 7 1 58 5 317 1 290 1 117 2 62 1 38 1 228 1 166 1 10 2 90 1 94 1 230 1 350 1 42 1 321 5 353 4 146 1 20 1 323 1 355 3 253 1 
276 4 71 1 194 2 279 1 23 2 130 1 195 1 25 2 1 1 242 2 2 1 307 1 285 1 183 1 246 1 200 1 332 2 111 1 161 4 342 4 85 2 58 1 317 1 290 1 117 2 62 1 38 1 10 2 90 1 94 1 230 1 350 1 42 1 167 2 353 2 321 4 20 1 355 2 323 1 253 1 
276 4 71 1 194 1 279 1 23 2 130 1 195 1 25 2 1 1 242 2 2 1 285 1 183 1 246 1 200 1 201 1 332 2 111 1 161 4 342 4 85 2 7 1 58 1 317 1 290 1 117 2 62 1 38 1 228 1 10 2 90 1 94 1 230 1 350 1 42 1 353 2 321 4 20 1 355 2 323 1 253 1 
276 4 71 1 194 1 279 1 23 2 130 1 195 1 25 2 1 1 242 2 2 1 285 1 183 1 246 1 200 1 201 1 332 2 111 1 161 4 342 4 85 2 7 1 58 1 317 1 290 1 117 2 62 1 38 1 228 1 10 2 90 1 94 1 230 1 350 1 42 1 353 2 321 4 20 1 355 2 323 1 253 1 
276 4 71 1 194 1 279 1 102 1 130 1 195 1 25 2 1 1 242 2 2 1 82 1 285 1 183 1 246 1 200 1 201 1 332 2 111 1 161 4 342 4 85 2 58 1 317 1 290 1 62 1 38 1 39 1 90 1 94 1 230 1 65 2 350 1 42 1 167 2 353 2 321 4 20 1 355 2 169 2 253 1 
276 3 71 1 194 1 279 1 130 1 195 1 105 1 1 1 25 1 242 1 285 1 157 1 183 1 111 2 161 2 342 1 58 1 317 2 290 1 187 1 248 1 11 1 94 2 230 1 210 1 350 1 42 1 321 2 353 1 146 1 19 1 20 2 
276 3 71 1 194 1 279 1 130 1 195 1 105 1 1 1 25 1 242 1 285 1 157 1 183 1 111 2 161 2 342 1 58 1 317 2 290 1 187 1 248 1 11 1 94 2 230 1 210 1 350 1 42 1 321 2 353 1 146 1 19 1 20 2 
276 4 71 1 194 1 279 1 130 1 195 1 25 2 1 1 242 2 2 1 307 1 285 1 183 1 246 1 200 1 332 2 111 1 161 4 342 4 85 2 58 1 317 1 290 1 62 1 38 1 39 1 90 1 94 1 230 1 65 2 350 1 42 1 167 2 353 2 321 4 20 1 355 2 169 2 253 1 
149 1 277 1 202 1 334 1 74 1 36 1 78 1 119 1 79 1 27 1 207 1 181 1 308 1 251 1 310 1 311 1 15 1 8 1 
173 1 334 1 74 1 325 1 36 1 226 1 178 1 119 1 3 1 207 1 349 1 29 1 181 1 308 1 124 1 192 1 8 1 
317 1 334 1 74 1 175 1 187 1 36 1 88 1 3 1 119 1 219 1 207 1 94 1 349 1 245 1 308 1 210 1 181 1 13 1 20 1 192 1 86 1 8 1 
255 1 278 1 217 1 175 1 74 2 325 1 239 1 48 1 150 1 240 1 178 1 3 2 79 1 219 1 4 1 179 1 181 2 308 2 184 1 341 1 112 1 8 2 86 1 186 1 317 1 334 2 36 2 187 1 119 2 335 1 63 1 121 1 207 1 94 2 189 1 349 1 210 1 211 1 191 1 215 1 20 2 99 1 192 2 
255 1 334 1 217 1 74 1 36 1 240 1 119 1 335 1 207 1 28 1 181 1 308 1 13 1 286 1 8 1 
317 1 334 1 300 1 74 1 187 1 36 1 119 1 79 1 11 1 207 1 94 1 189 1 349 1 181 1 308 1 210 1 112 1 20 1 115 1 8 1 
207 1 189 1 308 1 181 1 9 1 334 1 74 1 36 1 119 1 79 1 27 1 8 1 
334 1 74 1 325 1 176 1 36 1 78 1 178 1 119 1 3 2 27 1 181 1 308 1 272 1 310 1 55 1 341 1 192 2 8 1 
207 1 189 1 308 1 181 1 334 1 74 1 36 1 119 1 79 1 112 1 27 1 8 1 
207 1 189 1 28 1 308 1 181 1 9 1 334 1 74 1 36 1 119 1 79 1 8 1 
334 1 74 1 325 1 176 1 36 1 78 1 178 1 119 1 3 2 28 1 181 1 308 1 272 1 310 1 55 1 341 1 192 2 8 1 
207 1 189 1 28 1 308 1 181 1 334 1 74 1 36 1 119 1 79 1 112 1 8 1 
207 1 189 1 308 1 181 1 334 1 74 1 36 1 119 1 79 1 112 1 8 1 
255 1 217 1 74 1 239 1 48 1 240 1 3 1 4 1 181 1 308 1 184 1 264 1 8 1 86 1 334 1 36 1 335 1 119 1 63 1 121 1 207 1 94 1 13 1 211 1 215 1 20 1 192 1 99 1 
255 1 217 1 74 1 239 1 240 1 3 1 181 1 308 1 184 1 264 1 8 1 86 1 334 1 36 1 347 1 335 1 119 1 63 1 207 1 94 1 231 1 13 1 211 1 215 1 354 1 20 1 192 1 99 1 
207 1 189 1 349 1 308 1 181 1 334 1 74 1 36 1 119 1 79 1 112 1 8 1 
217 1 74 1 239 1 48 1 240 1 79 1 4 1 181 1 308 1 184 1 112 1 8 1 334 1 36 1 335 1 119 1 63 1 121 1 207 1 94 1 189 1 211 1 191 1 215 1 275 1 20 1 99 1 
317 1 334 1 300 1 74 1 187 1 36 1 119 1 79 1 11 1 207 1 94 1 189 1 349 1 181 1 308 1 210 1 96 1 112 1 20 1 8 1 
207 1 308 1 334 1 74 1 134 1 44 1 36 1 221 1 16 1 3 1 119 1 192 1 298 1 250 1 
207 1 308 1 334 1 74 1 134 1 44 1 36 1 221 1 16 1 3 1 119 1 192 1 298 1 250 1 
207 1 308 1 334 1 74 1 134 1 44 1 36 1 221 1 16 1 3 1 119 1 192 1 298 1 250 1 
207 1 308 1 334 1 74 1 134 1 44 1 36 1 221 1 16 1 3 1 119 1 192 1 298 1 250 1 
207 1 308 1 334 1 74 1 134 1 44 1 36 1 221 1 16 1 3 1 119 1 192 1 298 1 250 1 
188 1 6 1 351 1 129 1 326 1 18 1 114 1 122 1 80 1 333 1 
261 1 338 1 
6 1 345 1 125 1 351 1 103 1 129 1 326 1 114 1 80 1 
194 1 129 1 326 1 122 1 292 1 80 1 340 2 6 1 320 1 351 1 145 1 321 1 18 1 161 1 114 1 68 1 70 1 333 1 
194 1 129 1 326 1 122 1 292 1 80 1 340 2 6 1 320 1 351 1 145 1 321 1 18 1 161 1 114 1 68 1 70 1 333 1 
194 1 129 1 326 1 122 1 292 1 80 1 340 2 6 1 320 1 351 1 145 1 321 1 18 1 161 1 114 1 68 1 70 1 333 1 
244 1 139 1 162 1 
244 1 139 1 162 1 
329 1 66 1 
244 1 329 1 66 1 
72 1 33 1 
72 1 129 1 326 1 305 1 80 1 340 1 284 1 108 1 6 1 161 1 261 1 114 1 264 1 266 1 317 2 33 1 187 2 123 1 94 2 64 1 320 1 210 2 351 1 321 1 20 2 68 1 338 1 
139 1 162 1 
244 1 329 1 66 1 
94 1 317 1 57 1 20 1 
59 1 217 2 239 1 205 1 240 2 335 2 339 1 327 1 89 1 81 1 14 1 184 1 322 1 275 1 314 1 
180 1 59 1 14 1 217 1 239 1 184 1 205 1 322 1 240 1 335 1 89 1 339 1 81 1 
255 1 254 1 217 1 239 1 131 1 240 1 335 1 81 1 40 1 209 1 211 1 184 1 99 1 314 1 
59 1 217 1 239 1 205 1 240 1 335 1 339 1 327 1 89 1 81 1 14 1 184 1 322 1 314 1 
301 1 
58 1 271 1 149 1 194 1 200 1 2 1 229 1 
58 1 194 2 23 1 62 1 117 1 2 1 38 1 10 1 90 1 167 1 246 1 321 1 200 1 161 1 342 1 355 1 323 1 
255 1 235 2 217 1 76 1 104 1 239 2 240 1 153 1 53 1 259 1 246 1 184 1 200 1 342 1 316 1 61 1 62 1 335 1 227 1 38 1 90 1 211 3 273 1 215 1 99 1 
47 1 194 4 176 2 2 4 79 2 29 1 182 1 159 1 246 1 200 7 260 1 112 2 58 1 318 5 203 5 226 1 62 1 117 3 38 1 90 1 189 2 190 1 272 2 167 6 232 1 
105 1 2 2 79 2 157 1 246 1 200 2 111 1 222 2 161 1 225 1 317 1 202 1 187 1 248 1 62 1 38 1 228 1 90 1 11 1 94 1 210 1 251 1 41 1 272 1 15 1 321 1 20 1 19 1 
58 1 194 1 62 1 2 1 38 1 90 1 229 1 271 1 246 1 200 1 
278 1 318 5 194 5 203 5 176 2 117 5 2 5 79 2 189 2 272 2 167 10 200 5 222 2 112 2 225 1 
58 1 194 1 321 1 161 1 342 1 355 1 
255 2 171 1 21 1 22 1 217 3 239 3 24 1 77 1 240 3 2 1 303 1 184 2 246 1 200 1 161 2 342 2 164 1 62 2 335 3 227 1 319 1 348 1 38 2 90 2 40 1 209 1 142 1 211 2 321 2 215 1 147 1 355 1 99 2 
255 1 217 1 74 1 48 1 239 1 240 1 3 1 4 1 308 1 181 1 330 1 157 1 184 1 264 1 86 1 8 1 317 2 334 1 36 1 187 2 335 1 119 1 121 1 63 1 11 2 94 3 210 2 211 1 215 1 20 3 192 1 99 1 
58 2 318 2 194 4 281 1 203 2 117 2 62 1 2 2 227 1 38 1 90 1 167 4 246 1 200 1 147 1 
351 1 304 1 114 1 
33 1 351 1 313 1 114 1 122 1 
351 1 304 1 114 1 
351 1 304 1 114 1 
351 1 114 1 299 1 
351 1 114 1 299 1 
351 1 114 1 299 1 
351 1 114 1 
6 1 326 1 
277 1 334 2 74 2 36 2 78 1 119 2 258 1 308 2 251 1 310 1 311 1 15 1 312 1 
207 1 277 1 149 1 202 1 251 1 310 1 15 1 311 1 78 1 79 1 
207 1 189 1 308 1 334 1 74 1 36 1 119 1 79 1 112 1 127 1 
207 1 29 1 260 1 226 1 3 1 192 1 
207 1 29 1 173 1 226 1 3 1 192 1 
226 1 3 1 192 1 
207 1 29 1 
207 1 189 1 278 1 3 1 79 1 112 1 192 1 
207 1 29 1 308 1 190 1 334 1 74 1 260 1 36 1 226 1 3 1 119 1 192 1 298 1 
207 1 202 1 79 1 
277 1 334 1 74 1 36 1 78 1 3 1 119 1 198 1 258 1 308 1 251 1 310 1 15 1 311 1 312 1 192 1 
207 1 202 1 251 1 41 1 310 1 15 1 78 1 79 1 
207 1 189 1 308 1 334 1 74 1 36 1 119 1 79 1 298 1 
207 1 189 1 308 1 334 1 74 1 36 1 119 1 79 1 112 1 298 1 
138 1 334 2 74 2 36 2 119 2 78 1 258 1 308 2 251 1 15 1 310 1 298 1 
138 1 334 3 74 3 36 3 152 1 226 1 119 3 3 1 207 1 29 1 308 3 260 1 127 1 192 1 298 1 
207 1 29 1 308 1 190 1 334 1 74 1 260 1 36 1 226 1 3 1 119 1 192 1 298 1 
334 2 74 2 36 2 226 1 119 2 3 1 207 1 29 1 308 2 190 1 260 1 127 1 192 1 298 1 
207 1 29 1 308 1 190 1 334 1 74 1 260 1 36 1 226 1 3 1 119 1 192 1 298 1 
207 1 29 1 308 1 190 1 334 1 74 1 260 1 36 1 226 1 3 1 119 1 192 1 298 1 
207 1 29 1 308 1 190 1 334 1 74 1 260 1 36 1 226 1 3 1 119 1 192 1 298 1 
207 1 29 1 308 1 190 1 334 1 74 1 260 1 36 1 226 1 3 1 119 1 192 1 298 1 
334 2 74 2 36 2 226 1 119 2 3 1 207 1 29 1 308 2 190 1 260 1 127 1 192 1 298 1 
138 1 334 2 74 2 36 2 226 1 119 2 3 1 207 1 29 1 308 2 190 1 260 1 192 1 298 1 
277 1 251 1 310 1 15 1 311 1 78 1 258 1 
138 1 334 2 74 2 36 2 226 1 119 2 3 1 207 1 29 1 308 2 190 1 260 1 192 1 298 1 
94 1 317 1 42 1 20 1 262 1 264 1 336 1 
236 1 317 1 155 1 336 1 94 1 42 1 144 1 95 1 223 1 20 1 262 1 264 1 
209 1 255 1 149 1 211 1 217 1 239 1 184 1 240 1 335 1 99 1 40 1 
255 1 317 1 217 1 175 1 239 1 187 1 240 1 335 1 4 1 63 1 94 2 210 1 211 1 184 1 215 1 20 2 99 1 264 1 
317 2 217 1 204 1 175 1 239 1 187 2 241 1 1 1 240 1 335 1 319 1 4 1 63 1 230 1 94 2 210 1 211 3 184 1 215 2 111 1 20 2 99 2 264 1 
217 1 175 1 239 1 240 1 1 1 241 1 309 1 184 1 111 2 264 1 317 2 204 1 187 2 335 1 319 1 63 1 94 2 230 1 231 1 210 1 211 3 215 2 20 2 99 2 
235 1 217 1 194 1 0 1 105 1 240 1 157 1 111 1 161 1 58 1 317 1 187 1 248 1 335 1 319 1 11 1 94 1 210 1 211 1 321 1 19 1 20 1 
235 1 211 1 217 1 76 1 104 1 321 1 240 1 335 1 161 1 342 1 319 1 
217 1 239 1 184 1 240 1 141 1 335 1 
46 1 255 2 217 6 239 3 77 1 141 1 346 1 240 7 335 7 348 1 339 1 143 1 211 3 220 1 184 2 352 1 297 1 215 1 275 1 99 2 316 1 
277 1 217 1 175 1 74 2 239 1 48 1 240 1 78 1 79 1 4 1 179 1 181 2 308 2 310 1 311 1 184 1 8 2 317 1 202 1 334 2 36 2 187 1 119 2 335 1 63 1 121 1 91 1 207 1 94 2 349 1 210 1 251 1 211 1 15 1 191 1 215 1 275 1 20 2 99 1 
255 1 235 1 266 1 22 1 217 1 76 1 104 1 61 1 240 1 62 1 335 1 38 1 153 1 53 1 90 1 211 1 246 1 321 1 161 1 342 1 
217 1 76 1 239 2 141 1 240 1 335 1 211 1 259 1 184 1 215 1 99 1 316 1 
255 1 172 1 217 4 239 1 240 4 335 4 40 1 209 1 12 1 211 1 184 1 275 1 99 1 
217 2 21 1 239 2 77 1 240 2 335 2 319 1 303 1 348 1 154 1 211 1 184 1 215 1 99 1 
255 1 59 1 217 1 239 1 184 1 205 1 240 1 335 1 
211 1 143 1 217 2 239 1 184 1 160 1 240 2 335 2 275 1 99 1 339 1 
255 1 172 1 217 4 239 2 240 5 346 1 335 5 319 1 40 1 209 1 143 1 211 3 220 1 184 2 275 1 99 2 
255 1 172 1 217 4 101 1 239 2 240 5 346 1 335 5 319 1 40 1 209 1 143 1 211 3 184 2 275 1 99 2 
255 1 317 1 217 1 175 1 239 1 187 1 240 1 335 1 63 1 94 2 210 1 231 1 211 1 184 1 215 1 20 2 99 1 264 1 
217 1 239 2 77 1 240 1 335 1 319 1 348 1 211 1 184 1 352 1 215 1 99 1 316 1 
93 1 265 1 269 1 243 1 264 1 
194 1 105 1 1 1 243 1 285 1 157 1 136 1 111 2 161 2 58 1 317 1 265 1 267 1 266 1 290 1 187 1 248 1 269 1 165 1 11 1 94 1 93 1 230 1 210 1 295 1 321 2 20 1 19 1 
93 1 265 1 57 1 243 1 
93 1 267 1 136 1 
149 1 37 1 84 1 92 1 
32 1 37 1 302 1 84 1 216 1 92 1 5 1 
32 1 126 1 51 1 
170 1 32 3 73 1 37 1 302 1 5 3 92 1 214 1 84 1 216 1 344 1 87 2 
148 1 32 2 37 1 302 1 84 1 216 1 263 1 92 1 5 2 
128 1 170 1 32 1 280 1 302 1 37 1 106 1 291 1 5 1 97 1 216 1 
170 1 32 1 37 1 302 1 84 1 216 1 5 1 
170 1 32 1 302 1 84 2 216 1 92 1 5 1 
170 1 32 2 237 1 37 1 177 1 302 2 247 1 5 2 84 1 216 2 
170 1 148 2 32 3 268 1 280 1 302 1 37 2 92 1 5 3 270 1 84 1 216 1 288 1 
170 1 32 1 34 1 302 1 205 1 216 1 5 1 
170 1 148 2 32 4 268 1 280 1 302 2 37 2 92 1 5 4 84 1 113 1 216 2 263 1 
170 1 32 1 37 1 302 1 84 1 216 1 92 1 5 1 
148 2 60 1 32 4 73 1 268 1 280 1 302 1 37 3 92 2 5 4 84 2 216 1 87 1 344 1 
170 1 148 1 32 2 174 1 37 1 302 1 5 2 92 1 84 1 56 1 216 1 315 1 
170 1 32 3 193 1 73 1 37 1 302 1 5 3 92 1 84 1 216 1 344 2 87 2 
324 2 37 2 163 1 306 1 
170 1 32 1 302 1 216 1 343 1 5 1 
148 1 170 1 32 2 37 1 302 1 84 1 216 1 92 1 270 1 5 2 
158 1 
170 1 32 1 37 1 302 1 84 1 216 1 92 1 5 1 
148 1 170 1 32 3 302 1 37 1 5 3 92 1 270 1 84 1 216 1 87 1 
60 1 280 1 268 1 37 1 
37 1 84 1 

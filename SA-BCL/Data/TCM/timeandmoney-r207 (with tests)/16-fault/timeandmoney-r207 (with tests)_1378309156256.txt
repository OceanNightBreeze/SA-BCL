#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 47 274 29 192 326 6 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 219 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (4,251) 341 47 274 29 141 299 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (67,151) (67,151) (91,118) 268 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 187 108 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 187 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 187 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 187 108 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 187 108 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 47 274 29 192 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 47 274 29 141 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 47 274 29 192 326 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 47 274 29 192 48 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 47 274 29 192 48 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 47 274 29 192 48 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 238 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 310 275 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 278 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | CONSTANT | 4016 | 1 -> -1
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | STATEMENT | 10137 | stmt -> ;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 674 | && -> ||
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | RETURN | 891 | return null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
149 1 229 1 94 1 128 1 16 1 99 1 
149 1 229 1 94 1 128 1 16 1 99 1 
149 1 229 1 94 1 128 1 16 1 99 1 
149 1 229 1 94 1 128 1 16 1 99 1 
1 1 305 1 262 3 149 1 121 2 94 4 176 1 204 2 99 1 16 4 246 1 19 1 229 1 231 1 142 1 21 3 255 1 169 1 
149 1 94 2 99 1 16 2 244 1 50 1 273 1 31 1 19 1 229 1 231 1 252 1 340 1 21 1 142 1 169 1 
262 1 149 2 121 1 94 3 99 1 16 3 226 1 246 1 19 1 229 2 231 1 340 1 21 2 
1 1 305 1 262 7 261 1 121 4 176 1 223 1 16 9 226 1 228 1 19 1 229 2 231 1 21 5 142 1 149 2 94 9 204 2 99 1 246 3 104 1 340 1 255 1 169 1 
1 1 305 1 262 7 261 1 121 4 176 1 223 1 16 9 226 1 228 1 19 1 229 2 231 1 21 5 142 1 149 2 94 9 204 2 99 1 246 3 104 1 340 1 255 1 169 1 
339 1 173 1 165 1 
339 1 330 1 175 2 
114 2 20 1 164 1 46 2 205 2 225 2 88 2 113 2 
72 1 2 2 114 3 116 1 220 1 171 1 117 1 309 1 12 2 46 2 13 1 225 3 272 1 82 1 132 1 20 1 322 1 88 2 236 1 145 2 26 1 93 1 28 1 292 1 202 1 30 1 205 2 103 1 63 1 160 2 33 2 67 1 110 1 164 1 344 1 166 1 113 2 
114 1 239 1 20 1 35 1 154 1 46 1 205 1 225 1 88 1 113 1 
114 1 286 1 7 1 154 1 97 1 46 1 225 1 159 1 339 1 248 1 106 1 277 1 165 1 280 1 
114 1 286 1 7 1 154 1 97 2 205 1 46 1 225 1 159 2 339 1 106 1 277 1 165 1 88 1 113 1 
159 1 119 1 230 1 97 1 336 1 
159 2 339 1 147 1 119 1 234 1 165 1 97 2 336 1 
159 1 119 1 97 1 
114 1 284 1 239 1 154 1 97 1 336 1 205 1 46 1 225 1 159 1 20 1 35 1 88 1 113 1 
339 1 
159 2 339 1 147 1 119 1 197 1 165 1 97 2 336 1 
147 1 119 2 58 2 222 1 291 1 196 2 97 5 336 2 243 1 207 1 159 5 339 1 208 1 319 1 298 2 109 1 300 1 165 1 325 1 
173 1 164 1 
114 2 260 1 46 2 205 1 225 2 183 1 164 2 88 1 113 1 
4 1 59 1 341 1 
2 1 114 1 236 1 117 1 93 1 26 1 30 1 12 1 225 1 156 1 160 1 132 1 110 1 164 1 344 1 166 1 
2 1 160 1 117 1 12 1 337 1 
114 2 260 1 290 1 154 1 205 2 46 2 337 1 225 2 68 1 164 1 88 2 113 1 
114 2 162 1 35 1 154 1 46 2 205 2 225 2 88 2 
114 3 290 1 164 1 46 3 205 3 225 3 88 3 113 1 
114 1 35 1 154 1 46 1 205 1 225 1 88 1 
183 1 114 1 260 1 154 1 46 1 205 1 225 1 88 1 113 1 
114 1 260 1 46 1 205 1 225 1 88 1 337 1 113 1 
114 2 290 1 248 1 250 1 164 1 46 2 205 1 225 2 88 1 
337 1 
4 1 114 2 260 1 290 1 59 1 46 2 205 2 225 2 88 2 113 1 
2 1 114 1 236 1 117 1 93 1 26 1 12 1 30 1 225 1 160 1 132 1 110 1 164 1 344 1 166 1 
2 1 114 1 236 1 117 1 93 1 26 1 12 1 30 1 225 1 160 1 52 1 105 1 110 1 164 1 166 1 
4 2 116 2 306 1 309 1 39 1 178 1 78 1 47 1 272 1 130 1 82 1 322 1 144 1 145 2 59 2 28 2 203 1 202 1 63 1 33 4 251 1 341 2 
114 1 106 1 162 1 154 1 46 1 205 1 225 1 88 1 
307 1 199 1 
307 1 199 1 
240 1 61 1 
240 1 61 1 
240 1 61 1 
288 1 307 1 199 1 
194 1 307 2 240 1 199 2 153 1 61 1 
66 1 307 1 199 1 
288 1 307 1 199 1 
288 1 307 1 199 1 
307 1 199 1 315 1 
307 1 199 1 315 1 
307 1 199 1 315 1 
218 1 329 1 114 2 307 1 199 1 311 1 313 1 201 1 97 1 46 2 205 2 225 2 79 1 159 1 338 1 297 1 66 1 65 1 137 1 320 1 164 1 258 1 167 1 88 2 
218 2 307 2 120 1 199 2 311 2 313 3 153 1 314 1 201 2 179 1 98 1 97 2 80 1 338 2 159 2 339 1 65 1 87 1 89 2 
305 1 142 1 169 1 
244 1 142 1 169 1 
244 1 305 2 184 1 190 1 155 1 169 3 
244 1 305 1 190 1 155 1 101 1 169 2 
244 1 305 1 190 1 155 2 169 2 
306 1 119 1 39 1 40 2 175 3 177 1 47 1 317 2 53 2 274 1 320 1 147 1 330 1 332 1 58 1 196 1 203 1 97 5 336 4 243 3 245 1 159 5 208 1 339 2 209 1 247 1 298 1 109 2 69 1 165 1 258 1 167 1 
10 3 175 3 177 1 274 1 20 1 88 1 284 1 196 1 203 1 97 6 205 1 208 1 107 1 298 1 109 2 35 1 113 1 114 1 306 1 119 4 221 1 39 1 46 1 225 1 47 1 317 2 53 2 230 3 147 1 239 1 330 1 58 1 154 1 336 5 243 3 245 1 159 6 339 3 247 1 163 1 165 1 167 2 
306 1 40 1 39 1 175 4 47 1 317 2 274 1 53 2 330 2 58 1 196 1 291 1 203 1 97 3 336 2 243 3 245 1 159 3 339 3 209 1 247 1 298 1 69 1 109 2 165 1 167 1 
306 2 308 1 40 2 39 2 175 7 174 1 47 2 317 4 53 4 274 2 327 1 330 3 58 1 196 1 291 1 203 2 97 4 336 3 243 5 245 1 159 4 339 4 209 1 247 1 298 1 69 1 109 4 165 1 167 2 
173 1 9 1 30 1 
321 1 30 1 
25 1 
236 1 26 1 30 1 
188 1 30 1 
26 1 30 1 
236 1 26 1 9 2 185 1 30 3 36 1 
193 1 116 3 306 1 148 1 8 1 39 1 28 4 15 1 102 1 33 7 83 2 186 3 71 2 281 1 38 1 168 1 259 1 
193 1 116 3 306 1 148 1 8 1 39 1 28 4 15 1 102 1 33 7 83 2 186 3 71 2 281 1 38 1 168 1 259 1 
193 1 0 1 116 3 306 1 148 1 8 1 39 1 28 4 15 1 102 1 33 7 83 2 186 3 281 1 71 2 38 1 168 1 259 1 
116 1 6 1 148 1 8 2 39 1 28 4 312 1 29 1 47 1 33 5 18 1 274 1 71 1 192 1 326 1 
219 1 82 1 145 2 63 1 33 1 148 1 8 1 28 1 293 1 322 1 202 1 71 1 
2 1 305 1 262 1 74 1 12 1 16 2 184 1 19 1 229 1 231 1 21 1 142 1 143 1 90 1 92 1 149 1 27 1 150 1 94 2 95 1 198 1 294 1 99 1 244 1 160 1 210 1 340 1 110 1 166 1 169 2 
2 1 305 1 262 2 124 1 43 1 12 1 16 3 129 1 184 1 19 1 229 1 231 1 21 1 142 1 143 1 90 1 149 1 27 1 150 1 94 3 95 1 198 1 294 1 244 1 160 1 210 1 340 1 110 1 166 1 169 2 
2 1 305 1 262 2 43 1 12 1 16 2 129 1 184 1 19 1 231 1 21 1 142 1 143 1 90 1 150 1 94 2 95 1 294 1 244 1 160 1 210 1 340 1 110 1 166 1 169 2 
3 1 2 1 57 1 26 1 149 1 117 1 124 1 94 1 150 2 265 1 30 1 12 1 45 1 270 1 14 1 16 1 160 1 210 2 229 1 340 2 110 1 143 2 166 1 
2 1 305 1 90 1 149 1 74 1 27 1 94 1 150 1 95 1 198 1 294 1 12 1 99 1 16 1 244 1 129 1 184 1 160 1 210 1 229 1 340 1 110 1 142 1 143 1 166 1 169 2 
55 1 
2 2 117 2 119 2 122 1 263 1 126 1 265 1 12 2 49 1 136 1 232 1 236 1 147 1 57 1 26 2 58 1 196 1 152 1 30 2 97 2 243 1 245 1 159 2 160 2 208 1 298 1 110 3 109 1 166 2 
114 1 5 2 7 1 119 2 42 1 44 1 46 1 224 1 225 1 277 1 280 1 324 1 147 1 286 1 197 1 154 1 97 3 159 3 248 1 106 1 301 1 345 1 
114 1 5 3 119 1 7 1 11 1 44 1 46 1 224 1 225 1 277 1 280 1 324 1 286 1 147 1 197 1 154 1 97 3 159 3 339 1 248 1 106 1 301 1 165 1 345 1 
114 1 5 3 7 1 119 2 42 1 11 1 44 1 46 1 224 1 225 1 277 1 280 1 324 1 147 1 286 1 197 1 154 1 97 3 159 3 339 1 248 1 106 1 301 1 112 1 165 1 345 1 
5 6 7 1 264 2 11 4 180 2 17 1 277 1 23 1 280 1 286 1 285 1 196 1 197 1 97 5 208 1 106 1 298 1 109 1 301 1 112 4 37 1 217 2 114 1 119 7 42 4 44 1 224 1 46 1 225 1 138 1 324 1 147 3 330 2 58 1 334 1 154 1 243 1 159 5 339 5 64 2 161 1 248 1 165 5 345 1 
5 4 7 1 264 2 175 2 11 2 180 2 277 1 23 1 280 1 286 1 196 1 97 4 208 1 106 1 298 1 109 1 301 1 112 2 217 2 114 1 119 4 42 2 44 1 46 1 224 1 225 1 233 1 324 1 147 2 330 2 58 1 154 1 243 1 159 4 64 2 339 2 161 1 248 1 165 1 345 1 
114 1 5 4 119 4 7 1 264 2 42 2 11 2 44 1 180 2 46 1 224 1 225 1 17 1 277 1 23 1 280 1 324 1 147 2 286 1 285 1 330 2 58 1 196 1 154 1 97 4 243 1 159 4 339 1 64 2 208 1 161 1 248 1 106 1 298 1 109 1 301 1 112 2 165 1 345 1 217 2 37 1 
114 1 5 4 119 4 7 1 264 2 42 2 11 2 44 1 180 2 46 1 224 1 225 1 17 1 277 1 23 1 280 1 324 1 147 2 286 1 285 1 330 2 58 1 196 1 154 1 97 4 243 1 159 4 339 1 64 2 208 1 161 1 248 1 106 1 298 1 109 1 301 1 112 2 165 1 345 1 217 2 37 1 
114 1 5 4 119 4 7 1 264 2 42 2 175 2 11 2 44 1 46 1 224 1 225 1 17 1 277 1 22 1 86 1 23 1 235 2 280 1 324 1 147 2 286 1 58 1 196 1 154 1 97 4 243 1 159 4 339 1 208 1 32 2 248 1 106 1 298 1 109 1 343 1 301 1 112 2 165 1 345 1 217 2 
114 1 5 5 7 1 119 5 264 2 42 3 11 3 44 1 180 2 46 1 224 1 225 1 17 1 277 1 23 1 280 1 324 1 147 2 286 1 285 1 330 2 58 1 196 1 334 1 154 1 97 4 243 1 159 4 339 1 64 2 208 1 161 1 248 1 106 1 298 1 109 1 301 1 112 3 165 1 345 1 217 2 37 1 
114 1 5 5 7 1 119 5 264 2 42 3 11 3 44 1 180 2 46 1 224 1 225 1 17 1 277 1 23 1 280 1 324 1 147 2 286 1 285 1 330 2 58 1 196 1 334 1 154 1 97 4 243 1 159 4 339 1 64 2 208 1 161 1 248 1 106 1 298 1 109 1 301 1 112 3 165 1 345 1 217 2 37 1 
5 4 7 1 264 2 175 2 11 2 277 1 23 1 280 1 286 1 196 1 97 4 208 1 32 2 106 1 298 1 109 1 301 1 112 2 217 2 114 1 119 4 42 2 44 1 46 1 224 1 225 1 233 1 235 2 324 1 147 2 58 1 154 1 243 1 159 4 339 1 248 1 343 1 165 1 345 1 
4 1 116 3 306 1 173 1 309 1 39 1 272 1 130 1 82 1 83 2 186 2 322 1 281 1 193 1 145 2 59 1 28 3 202 1 63 1 33 6 341 1 164 2 71 1 168 1 259 1 38 1 
4 4 145 2 116 1 39 1 309 1 28 3 29 1 312 1 202 1 47 1 272 1 227 1 63 1 82 1 33 4 18 1 274 1 299 1 341 4 141 1 322 1 
116 1 145 2 309 1 28 1 292 1 202 1 271 1 337 1 272 1 181 1 227 1 103 1 63 1 82 1 33 2 322 1 
2 1 91 1 116 1 145 2 117 1 151 1 309 1 268 1 202 1 12 1 337 1 272 1 227 1 103 1 160 1 63 1 82 1 33 1 67 1 322 1 
2 8 72 2 114 1 116 1 117 2 309 2 310 1 265 1 12 7 46 1 225 1 272 2 129 1 130 1 81 1 82 2 135 1 54 1 140 1 322 2 88 1 24 1 145 4 92 1 57 1 290 1 26 2 28 1 292 1 30 3 202 2 205 1 160 8 63 2 103 1 33 2 110 2 214 1 166 2 
4 1 260 1 114 1 116 2 306 1 309 1 39 1 266 1 46 1 225 1 47 1 272 1 227 1 82 1 274 1 322 1 88 1 145 2 59 1 28 1 202 1 203 1 205 1 63 1 33 3 341 1 113 1 
4 1 145 2 59 1 309 1 39 1 28 2 202 1 47 1 272 1 102 1 130 1 63 1 82 1 33 2 186 1 341 1 322 1 144 1 
4 1 145 2 116 2 306 1 59 1 309 1 202 1 203 1 78 1 272 1 130 1 63 1 82 1 33 2 341 1 322 1 
4 2 116 2 145 2 306 1 59 2 309 1 39 1 28 2 203 1 202 1 47 1 272 1 130 1 63 1 82 1 33 4 274 1 341 2 322 1 
4 1 145 2 59 1 309 1 39 1 28 2 202 1 47 1 272 1 102 1 63 1 82 1 33 2 54 1 186 1 341 1 322 1 144 1 
4 1 145 2 116 2 306 1 59 1 309 1 202 1 203 1 78 1 272 1 63 1 82 1 33 2 54 1 341 1 322 1 
4 2 116 2 145 2 306 1 59 2 309 1 39 1 28 2 203 1 202 1 47 1 272 1 102 1 63 1 82 1 33 4 274 1 54 1 186 1 341 2 322 1 
4 2 116 2 145 2 306 1 59 2 309 1 39 1 28 2 203 1 202 1 47 1 272 1 63 1 82 1 33 4 274 1 341 2 322 1 
2 1 114 1 116 1 117 1 309 1 12 1 225 1 272 1 132 1 82 1 322 1 236 1 145 2 26 1 93 1 28 1 292 1 30 1 202 1 160 1 63 1 103 1 33 2 67 1 110 1 164 1 344 1 166 1 
2 1 114 1 116 1 117 1 309 1 12 1 225 1 272 1 82 1 52 1 322 1 236 1 145 2 26 1 93 1 28 1 292 1 30 1 202 1 160 1 63 1 103 1 33 2 105 1 212 1 110 1 164 1 166 1 
4 2 116 2 145 2 306 1 59 2 309 1 39 1 28 2 203 1 202 1 47 1 272 1 227 1 63 1 82 1 33 4 274 1 341 2 322 1 
2 1 4 2 114 1 116 2 306 1 39 1 309 1 12 1 47 1 225 1 272 1 132 1 82 1 274 1 322 1 236 1 145 2 92 1 93 1 26 1 59 2 151 1 28 2 203 1 30 1 202 1 160 1 63 1 33 4 67 1 341 2 110 1 344 1 166 1 
260 1 114 1 4 1 116 1 306 1 309 1 39 1 46 1 225 1 47 1 272 1 227 1 82 1 274 1 186 1 322 1 88 1 145 2 59 1 28 2 203 1 202 1 205 1 102 1 63 1 33 3 341 1 216 1 113 1 
82 1 145 2 63 1 84 1 187 1 108 1 293 1 322 1 202 1 
82 1 145 2 63 1 84 1 187 1 108 1 293 1 322 1 202 1 
82 1 145 2 63 1 84 1 187 1 108 1 293 1 322 1 202 1 
82 1 145 2 63 1 84 1 187 1 108 1 293 1 322 1 202 1 
82 1 145 2 63 1 84 1 187 1 108 1 293 1 322 1 202 1 
2 2 72 2 114 2 116 1 309 1 310 1 12 2 46 2 225 2 272 1 316 1 227 1 82 1 139 1 140 1 322 1 145 2 26 1 28 1 292 1 30 1 202 1 62 1 160 2 63 1 103 1 33 2 110 1 213 1 253 1 166 1 
2 2 305 1 92 1 27 1 95 1 294 1 12 2 244 1 129 1 184 1 160 2 110 1 342 1 279 1 142 1 143 1 323 1 166 1 169 2 
2 1 305 1 27 1 95 1 294 1 12 1 244 1 129 1 158 1 184 1 160 1 279 1 110 1 142 1 143 1 166 1 169 2 
2 1 57 1 26 1 117 1 265 1 30 1 12 1 270 1 296 1 160 1 110 1 342 1 143 1 166 1 
2 1 305 1 27 1 95 1 294 1 12 1 244 1 129 1 184 1 160 1 110 1 342 1 279 1 142 1 143 1 323 1 166 1 169 2 
77 1 
339 1 173 1 222 1 109 1 165 1 325 1 243 1 
119 1 175 1 180 1 147 1 330 1 58 1 196 1 97 1 243 1 159 1 64 1 208 1 339 2 161 1 298 1 109 1 165 1 
2 1 9 1 175 6 12 1 274 1 282 1 283 1 286 1 26 1 196 2 30 4 97 2 203 1 100 1 208 2 298 2 110 2 109 3 215 1 36 1 306 1 118 1 117 1 119 2 39 1 47 1 317 3 318 1 53 3 321 2 236 1 237 1 147 1 330 3 58 2 241 1 243 4 245 1 159 2 160 1 339 3 254 1 166 1 
306 2 119 1 39 2 175 6 127 1 312 1 48 1 47 2 317 5 131 1 18 1 53 5 274 2 56 1 192 1 283 1 147 1 330 3 58 1 196 1 97 1 203 2 206 1 243 7 159 1 208 1 339 4 249 1 298 1 109 4 165 1 
114 1 306 1 39 2 269 1 46 1 225 1 20 1 283 2 88 1 193 1 284 1 239 1 58 1 196 1 154 1 97 1 205 1 243 2 159 1 208 1 298 1 109 2 70 1 35 1 38 1 168 1 37 1 113 1 
58 1 222 1 196 1 243 1 208 1 339 1 298 1 109 1 165 1 325 1 
306 1 330 2 39 1 175 4 203 1 47 1 243 2 317 2 339 2 274 1 53 2 109 2 
159 1 339 1 147 1 119 1 165 1 97 1 
2 2 117 2 119 2 122 1 263 1 126 1 265 1 12 2 49 1 136 1 232 1 236 1 147 1 57 1 26 2 58 1 196 1 152 1 30 2 97 1 243 1 245 1 159 1 208 1 160 2 298 1 110 3 109 1 256 1 166 2 
2 1 114 3 116 1 220 1 117 1 309 1 12 1 46 2 225 3 272 1 82 1 132 1 20 1 322 1 88 2 236 1 145 2 93 1 26 1 202 1 30 1 205 2 103 1 160 1 63 1 33 1 67 1 110 1 164 1 344 1 166 1 113 2 
330 2 58 1 196 1 175 4 243 1 317 2 245 1 208 1 339 4 53 2 232 1 298 1 109 2 71 1 165 2 
218 1 172 1 311 1 
218 1 297 1 123 1 311 1 98 1 
218 1 172 1 311 1 
218 1 172 1 311 1 
218 1 311 1 242 1 
218 1 311 1 242 1 
218 1 311 1 242 1 
218 1 311 1 
307 1 199 1 
193 1 116 4 145 4 306 1 39 1 28 4 202 2 102 1 63 2 82 2 33 8 83 2 85 1 186 3 322 2 71 1 281 1 259 1 168 1 38 1 
193 1 116 3 306 1 173 1 39 1 28 3 33 6 83 2 186 2 71 1 281 1 259 1 168 1 38 1 
116 2 115 1 145 2 306 1 39 1 28 2 203 1 202 1 47 1 102 1 63 1 82 1 33 4 274 1 186 1 322 1 
116 1 33 4 18 1 274 1 39 1 28 3 29 1 312 1 192 1 47 1 
116 1 33 4 18 1 274 1 39 1 28 3 141 1 29 1 312 1 47 1 
116 1 33 1 18 1 
33 1 28 1 312 1 
116 3 306 1 39 1 28 3 203 1 47 1 102 1 33 6 274 1 83 1 186 2 254 1 
116 7 306 2 39 2 127 1 312 1 48 1 47 2 131 1 82 2 18 1 274 2 83 1 85 1 186 2 322 2 56 1 192 1 145 4 28 6 293 1 202 2 203 2 206 1 102 1 63 2 33 13 
193 1 116 3 306 1 39 1 28 3 102 1 33 6 83 1 186 2 168 1 38 1 
116 2 145 2 28 1 60 1 202 1 102 1 63 1 82 1 33 3 83 1 85 1 186 2 322 1 281 1 38 1 168 1 259 1 
193 1 145 2 116 5 306 2 39 2 28 5 293 1 202 1 269 1 102 2 82 1 63 1 33 10 83 3 186 5 322 1 168 2 38 2 
145 2 39 1 28 2 293 1 202 1 47 1 102 1 63 1 82 1 33 2 186 1 322 1 
116 2 145 2 306 1 39 1 28 2 293 1 202 1 203 1 47 1 63 1 82 1 33 4 274 1 322 1 
116 2 145 6 60 1 28 1 293 1 202 3 157 1 102 1 63 3 82 3 33 3 83 1 85 1 186 2 322 3 168 1 38 1 
145 6 115 1 116 1 39 1 28 3 293 1 29 1 312 1 202 3 47 1 157 1 63 3 82 3 33 4 18 1 274 1 322 3 192 1 326 1 
145 2 116 1 39 1 28 3 293 1 29 1 312 1 202 1 47 1 48 1 63 1 82 1 18 1 33 4 274 1 322 1 192 1 
115 1 145 4 116 1 39 1 28 3 293 1 29 1 312 1 202 2 47 1 48 1 63 2 82 2 18 1 33 4 274 1 322 2 192 1 
115 1 116 10 306 3 39 3 127 1 312 1 48 1 47 2 131 1 82 3 18 1 274 2 83 3 85 1 186 4 322 3 56 1 281 1 192 1 193 1 145 6 28 9 293 1 202 3 203 2 206 1 102 1 63 3 33 19 71 1 38 1 168 1 259 1 
115 1 116 5 306 1 39 2 127 1 312 1 48 1 47 2 131 1 82 4 18 1 274 2 83 1 85 2 186 2 322 4 56 1 192 1 145 8 28 7 293 1 202 4 203 1 206 1 102 1 63 4 33 12 
145 2 116 1 39 1 28 3 293 1 29 1 312 1 202 1 47 1 48 1 63 1 82 1 18 1 33 4 274 1 322 1 192 1 
116 7 306 2 39 2 127 1 312 1 48 1 47 2 131 1 82 2 18 1 274 2 83 1 85 1 186 2 322 2 56 1 192 1 145 4 28 6 293 1 202 2 203 2 206 1 102 1 63 2 33 13 
116 8 115 1 306 2 39 3 127 1 312 1 48 1 47 2 131 1 82 4 18 1 274 2 83 3 85 2 186 5 56 1 322 4 281 1 192 1 193 1 145 8 28 10 293 1 202 4 203 1 206 1 102 2 63 4 33 18 71 1 38 1 168 1 259 1 
116 7 306 2 39 3 127 1 312 1 48 1 47 3 131 1 82 4 18 1 274 3 83 1 85 2 186 4 56 1 322 4 192 1 145 8 28 9 293 1 202 4 203 2 206 1 157 1 102 3 63 4 33 16 
193 1 116 4 306 1 39 1 28 3 102 3 33 7 83 3 186 6 281 2 259 1 168 3 38 3 
116 8 306 2 39 3 127 1 312 1 48 1 47 2 131 1 82 4 18 1 274 2 83 3 85 2 186 4 56 1 322 4 281 1 192 1 193 1 145 8 28 10 293 1 202 4 203 1 206 1 157 1 102 1 63 4 33 18 71 1 38 1 168 1 259 1 
114 1 248 1 250 1 164 1 96 1 46 1 225 1 
133 1 238 1 289 1 34 1 302 1 
2 1 160 1 57 1 26 1 117 1 173 1 110 1 265 1 30 1 12 1 166 1 
2 1 236 1 114 2 26 1 93 1 290 1 117 1 30 1 12 1 205 1 46 1 225 2 160 1 110 1 164 1 344 1 88 1 166 1 
114 1 290 1 75 1 46 1 205 1 225 1 88 1 
114 1 290 1 75 1 46 1 205 1 225 1 88 1 
159 1 75 1 97 1 
159 1 75 1 97 1 
2 1 24 1 160 1 110 1 12 1 166 1 
72 1 2 7 170 1 24 1 236 1 92 1 117 2 26 2 122 1 310 1 152 1 12 6 30 3 129 1 81 1 160 7 135 1 110 3 214 1 36 1 166 2 
2 1 4 1 12 1 272 2 82 2 83 2 186 2 281 1 88 1 193 1 91 1 92 1 290 1 93 1 26 1 28 3 202 2 30 1 205 1 33 6 110 1 38 1 114 2 116 3 306 1 309 2 39 1 46 1 225 2 316 1 227 1 132 1 322 2 236 1 145 4 59 1 151 1 160 1 63 2 67 1 341 1 164 2 71 1 344 1 166 1 259 1 168 1 
2 1 117 1 118 1 119 2 222 1 9 1 12 1 321 1 325 1 282 1 237 1 286 1 147 1 58 2 196 2 97 3 30 2 336 1 243 1 159 3 339 1 208 2 160 1 298 2 109 1 165 1 256 1 215 1 
2 2 24 1 236 1 92 1 26 1 9 1 12 2 30 2 160 2 318 1 110 2 36 1 166 1 
2 4 92 1 57 1 117 1 26 1 265 1 76 1 335 1 12 4 30 1 160 4 110 1 166 1 
2 1 236 1 287 1 26 1 263 1 122 1 75 1 152 1 126 1 12 1 30 1 160 1 110 2 166 1 
244 1 2 1 160 1 117 1 110 1 142 1 294 1 12 1 166 1 169 1 
2 2 92 1 26 1 310 1 12 2 30 1 129 1 160 2 213 1 110 1 166 1 
2 4 57 1 92 1 117 1 26 2 75 1 265 1 310 1 76 1 12 3 30 3 81 1 160 4 135 1 110 2 166 2 
2 4 57 1 92 1 117 1 26 2 75 1 265 1 310 1 76 1 12 3 30 3 160 4 275 1 135 1 110 2 166 2 
2 1 236 1 114 2 26 1 93 1 290 1 117 1 30 1 12 1 205 1 46 1 225 2 160 1 105 1 110 1 164 1 88 1 166 1 
75 1 
303 1 211 1 111 1 257 1 
303 1 159 1 211 1 333 1 278 1 111 1 41 1 97 1 257 1 336 1 
303 1 114 1 211 1 139 1 253 1 46 1 257 1 225 1 62 1 
303 1 278 1 41 1 
19 1 173 1 231 1 21 1 
149 1 19 1 229 1 231 1 94 1 21 1 16 1 
210 1 340 1 94 1 
304 1 146 1 149 1 94 3 99 1 16 3 50 2 134 1 229 1 19 1 231 1 21 1 
262 1 149 1 19 1 229 1 231 1 94 2 21 1 204 1 16 2 
1 1 305 1 149 1 229 1 121 1 94 1 142 1 21 1 16 1 99 1 169 1 
149 1 19 1 229 1 94 1 21 1 16 1 99 1 
149 1 19 2 229 1 231 1 94 1 16 1 99 1 
195 1 149 2 125 1 94 2 99 1 16 2 51 1 19 1 229 2 21 1 
262 2 149 1 121 1 94 3 99 1 16 3 104 1 228 1 246 1 19 1 229 1 231 1 21 2 
305 1 262 1 149 1 94 2 99 1 16 2 244 1 182 1 184 1 19 1 229 1 231 1 21 1 142 1 169 2 
262 2 149 2 121 1 94 4 204 1 99 1 16 4 246 1 19 1 229 2 231 1 21 2 255 1 
149 1 19 1 229 1 231 1 94 1 21 1 16 1 99 1 
304 1 262 2 149 1 121 1 94 4 267 1 16 4 50 1 134 1 246 1 19 2 229 1 231 2 21 3 
73 1 261 1 262 1 149 1 94 2 200 1 99 1 16 2 19 1 229 1 231 1 21 1 
304 1 50 2 134 2 149 1 19 1 229 1 231 1 94 3 21 1 295 1 16 3 99 1 
328 1 331 2 21 2 191 1 
149 1 229 1 94 1 189 1 16 1 99 1 
262 1 228 1 149 1 19 1 229 1 231 1 94 2 21 1 16 2 99 1 
276 1 
149 1 19 1 229 1 231 1 94 1 21 1 16 1 99 1 
50 1 262 1 228 1 149 1 19 1 229 1 231 1 94 3 21 1 16 3 99 1 
246 1 121 1 21 1 267 1 
19 1 21 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (30,272) 171 (126,180) (126,180) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (30,272) 171 (126,180) (126,180) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (30,272) 171 (126,180) (126,180) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (30,272) 171 (126,180) (126,180) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (92,118,267,273) (92,118,267,273) 119 332 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (92,118,267,273) (92,118,267,273) 119 332 16 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (92,118,267,273) (92,118,267,273) 119 332 16 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 78 (33,121,122) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 286 1 35 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 286 57 35 301 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 286 1 220 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 286 1 35 301 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 286 57 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 286 57 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 375 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 375 5 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (92,118,267,273) (92,118,267,273) 119 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (92,118,267,273) (92,118,267,273) 119 208 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 7034 | return null
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | ASSIGN | 4735 | = null
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> -1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7825 | return null
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
272 1 273 2 176 1 232 3 247 1 331 1 92 2 0 1 118 1 267 3 338 1 173 2 329 1 
370 1 126 1 273 1 180 1 267 1 232 1 331 1 92 1 171 1 0 1 30 1 
370 1 126 1 273 1 180 1 267 1 232 1 331 1 92 1 171 1 0 1 30 1 
370 1 126 1 273 1 180 1 267 1 232 1 331 1 92 1 171 1 0 1 30 1 
370 1 126 1 273 1 180 1 267 1 232 1 331 1 92 1 171 1 0 1 30 1 
273 1 267 2 232 1 92 1 332 1 118 1 0 1 119 1 
370 1 273 1 176 1 232 2 247 1 72 1 331 1 92 1 372 1 0 1 55 1 267 2 250 1 231 1 173 1 314 1 
272 1 273 2 12 1 232 6 331 1 92 2 332 1 0 1 118 5 119 1 16 1 267 7 207 1 338 2 6 1 173 2 329 2 
272 1 273 2 12 1 232 6 331 1 92 2 332 1 0 1 118 5 119 1 16 1 267 7 207 1 338 2 6 1 173 2 329 2 
225 1 99 1 345 1 246 1 177 1 215 1 58 1 239 1 169 1 251 1 339 1 296 1 20 1 61 1 
218 1 
255 1 218 1 169 2 239 1 233 1 61 2 164 1 136 1 
233 1 28 1 29 1 164 2 136 1 218 1 323 2 239 2 169 5 353 2 3 1 4 1 18 1 153 1 270 2 222 1 363 1 61 5 44 1 
218 1 136 1 266 1 
36 1 218 1 253 2 
225 2 345 1 246 2 132 1 339 2 177 2 20 2 215 2 
225 2 128 1 246 3 27 1 132 1 160 1 306 1 276 1 107 1 210 1 339 2 49 2 283 1 341 1 313 1 110 2 192 1 256 1 345 1 258 1 290 1 316 1 214 2 177 3 54 1 74 2 265 1 198 1 215 2 350 1 42 1 321 1 240 1 269 1 200 2 20 2 328 1 
225 1 345 1 58 1 246 1 251 1 339 1 296 1 177 1 20 1 215 1 
66 1 315 1 130 1 246 1 177 1 136 1 319 1 215 1 218 1 138 1 374 1 169 1 296 1 61 1 
225 1 66 1 246 1 177 1 136 1 319 1 215 1 218 1 138 1 169 2 374 1 339 1 296 1 20 1 61 2 
169 1 239 1 86 1 61 1 164 1 
218 1 169 2 239 1 233 1 356 1 61 2 164 1 136 1 
169 1 61 1 164 1 
192 1 256 1 225 1 258 1 316 1 246 2 160 1 214 1 177 2 265 1 215 1 321 1 168 1 325 1 339 1 312 1 49 1 283 1 313 1 110 1 
225 1 246 2 132 2 177 2 215 2 349 1 221 1 339 1 20 1 
351 1 354 1 168 1 
256 1 192 1 258 1 246 1 316 1 132 1 160 1 214 1 177 1 265 1 321 1 167 1 49 1 283 1 313 1 110 1 
132 1 266 1 
225 4 130 1 246 5 83 1 132 1 177 5 304 1 215 5 349 1 325 2 339 4 152 1 312 1 20 1 
225 2 246 2 185 1 251 1 339 2 296 1 177 2 215 2 
225 3 325 1 246 3 132 1 339 3 20 1 177 3 215 3 
225 1 246 1 251 1 339 1 296 1 177 1 215 1 
349 1 225 1 246 1 221 1 339 1 296 1 177 1 20 1 215 1 
225 3 128 1 66 1 246 4 27 1 132 1 160 1 138 1 169 1 210 1 170 1 339 3 312 1 49 1 283 1 341 1 313 1 88 1 110 1 192 1 256 1 258 1 345 1 290 1 316 1 214 1 54 1 177 4 74 1 265 1 319 1 215 3 350 1 42 1 321 1 349 1 374 1 325 1 240 1 269 1 200 2 296 1 20 2 61 1 
225 1 130 1 325 1 246 2 132 1 339 1 152 1 177 2 215 2 
225 3 66 1 246 3 177 3 15 1 319 1 215 3 349 1 218 1 138 1 169 1 325 2 374 1 170 1 339 3 296 1 312 1 20 1 61 1 
225 2 246 2 177 2 215 2 349 1 325 1 354 1 168 1 339 2 20 1 
256 1 192 1 258 1 246 1 316 1 132 1 160 1 214 1 177 1 265 1 321 1 49 1 283 1 313 1 110 1 
256 1 192 1 71 1 246 1 316 1 132 1 160 1 214 1 194 1 177 1 265 1 321 1 296 1 49 1 230 1 283 1 110 1 
330 1 128 1 184 1 27 1 161 1 84 1 107 2 168 2 210 2 341 1 211 1 175 1 74 4 14 1 264 1 350 1 42 1 351 2 354 2 240 1 200 2 326 1 95 1 124 1 
225 1 246 1 185 1 339 1 296 1 177 1 319 1 215 1 
121 1 122 1 371 1 78 1 
121 1 371 1 33 1 
121 1 371 1 
121 1 371 1 
122 1 78 1 
122 1 78 1 
121 1 122 1 371 1 78 1 
121 1 371 1 147 1 
121 1 371 1 147 1 
121 1 371 1 147 1 
121 1 371 1 51 1 
121 1 371 1 51 1 
121 1 371 1 51 1 
225 2 245 1 129 1 246 2 132 1 186 1 105 1 31 1 169 1 339 2 33 1 142 1 52 1 371 1 260 1 115 1 177 2 215 2 322 1 121 1 149 1 94 1 61 1 377 1 
274 1 245 2 371 2 52 2 234 1 305 1 216 1 105 2 218 1 188 2 31 1 121 2 2 1 169 2 94 3 61 2 377 2 34 1 89 1 
139 2 287 1 352 1 250 1 314 2 
287 1 55 1 314 1 
250 1 55 1 314 1 
139 1 287 2 352 1 250 1 263 1 314 3 
139 1 287 1 352 1 250 1 146 1 314 2 
183 1 23 1 129 1 184 1 82 1 186 1 302 2 28 2 161 1 164 1 204 1 136 1 169 5 141 1 253 3 363 1 112 2 36 1 260 1 233 1 264 1 348 2 179 1 218 2 323 1 353 1 239 4 326 1 18 3 270 1 61 5 299 1 
183 1 225 1 99 1 129 1 101 1 226 2 246 1 302 1 28 2 161 1 204 1 164 3 136 1 309 1 169 5 86 2 251 1 339 1 253 1 363 1 112 1 345 1 233 1 177 1 264 1 179 1 215 1 218 1 323 1 58 1 353 1 239 4 18 1 296 1 270 1 20 1 61 5 299 1 
183 1 129 1 184 1 82 1 28 2 302 2 161 1 204 1 136 1 169 3 141 1 253 4 112 2 36 2 348 1 264 1 218 3 323 1 239 2 353 1 326 1 18 3 270 1 153 1 61 3 299 1 
183 1 225 1 129 2 82 1 184 1 136 1 141 1 339 1 345 1 348 1 58 1 239 2 353 1 295 1 296 1 18 3 153 1 20 1 61 3 202 1 299 1 64 1 99 1 246 1 28 2 302 2 161 1 204 1 169 3 251 1 253 4 112 2 36 2 177 1 264 1 215 1 218 3 323 1 326 1 270 1 
178 1 
265 1 62 1 266 1 
265 1 165 1 
321 1 192 1 265 1 
213 1 265 1 
192 1 265 1 
321 1 192 1 311 1 265 3 62 2 223 1 
330 3 184 1 175 2 102 1 261 1 318 2 161 1 74 7 107 4 210 3 228 1 7 1 8 1 21 1 365 1 63 1 80 1 369 1 
183 3 330 10 128 1 184 4 102 1 161 4 135 4 107 16 210 15 228 1 360 1 282 3 7 2 8 2 341 1 365 2 369 1 285 1 286 1 175 5 318 3 261 2 347 1 40 1 74 31 264 3 236 1 350 1 240 1 200 2 326 3 21 1 63 5 300 1 
330 4 128 2 184 1 102 1 161 1 107 5 210 4 228 1 7 1 8 1 341 2 111 1 365 1 175 3 318 2 261 1 291 1 74 9 350 2 240 2 200 4 21 1 63 1 300 1 
330 3 184 1 175 2 102 1 261 1 318 2 161 1 74 7 107 4 210 3 228 1 7 1 8 1 21 1 365 1 63 1 369 1 
330 3 184 1 175 2 102 1 261 1 318 2 161 1 74 7 107 4 210 3 228 1 7 1 8 1 21 1 365 1 63 1 369 1 
192 1 273 1 65 1 316 1 232 1 331 2 92 1 73 1 160 1 214 1 56 1 265 1 69 1 106 1 217 2 293 1 308 1 267 1 209 2 96 2 49 1 283 1 110 1 
273 1 155 1 331 1 0 1 203 1 310 1 337 1 209 1 250 1 49 1 283 1 314 2 110 1 257 1 287 1 232 1 316 1 92 1 214 1 117 1 55 1 263 1 217 1 267 1 75 1 96 1 
273 1 155 1 247 1 331 1 0 1 310 1 337 1 209 1 250 1 49 1 283 1 173 1 314 2 110 1 257 1 287 1 176 1 232 2 316 1 92 1 118 1 214 1 117 1 55 1 263 1 217 1 267 2 75 1 96 1 79 1 
273 1 155 1 247 1 331 1 203 1 337 1 209 1 250 1 49 1 283 1 173 1 362 1 314 2 110 1 257 1 287 1 176 1 232 3 316 1 92 1 214 1 118 2 117 1 55 1 263 1 56 1 217 1 267 3 75 1 96 1 
155 1 247 1 331 1 203 1 209 1 250 1 49 1 283 1 173 1 362 1 314 2 110 1 257 1 287 1 176 1 232 2 316 1 214 1 118 2 117 1 263 1 55 1 217 1 267 2 96 1 
333 1 
130 1 46 2 134 2 136 1 85 1 138 1 278 1 336 1 49 2 283 1 192 1 289 1 233 3 196 4 237 2 238 2 293 1 199 1 294 1 353 1 18 2 151 1 296 1 61 5 154 1 357 1 299 1 244 2 65 1 66 1 246 1 28 2 160 2 68 2 358 1 164 6 169 5 253 2 363 1 110 2 368 1 36 2 315 1 316 1 116 2 214 2 177 1 265 1 319 1 215 1 218 2 323 1 374 1 77 1 270 1 
255 1 66 1 289 1 315 1 130 1 246 1 233 1 177 1 134 1 164 2 196 2 319 1 215 1 138 1 278 1 199 1 294 1 169 3 374 1 296 1 151 1 61 3 
66 1 130 1 246 1 68 1 164 1 136 1 138 1 278 1 169 3 255 1 315 1 289 1 233 1 177 1 196 3 319 1 215 1 218 1 294 1 199 1 374 1 151 1 296 1 61 3 
255 1 66 1 289 1 315 1 130 1 246 1 233 1 68 1 177 1 134 1 164 2 196 3 136 1 319 1 215 1 218 1 238 1 138 1 278 1 199 1 294 1 169 3 374 1 296 1 151 1 61 3 
244 2 66 1 156 1 130 1 246 1 28 1 46 2 68 4 358 1 134 4 164 7 136 5 138 1 336 1 278 1 169 5 190 1 48 1 363 1 36 2 255 1 143 1 315 1 289 1 233 3 116 2 177 1 196 6 319 1 215 1 237 2 218 5 238 4 323 1 294 1 199 1 353 1 374 1 18 1 151 1 296 1 270 1 61 5 98 1 
130 1 46 2 134 2 136 1 138 1 336 1 278 1 289 1 233 2 196 4 237 2 238 2 199 1 294 1 353 1 296 1 151 1 18 1 61 4 244 2 66 1 246 1 28 1 68 2 358 1 164 4 169 4 253 2 363 1 368 1 36 2 315 1 116 2 177 1 319 1 215 1 218 2 323 1 374 1 270 1 
244 2 66 1 130 1 246 1 28 1 68 2 46 2 134 2 358 1 164 4 136 1 138 1 336 1 278 1 169 4 190 1 363 1 36 2 143 1 315 1 289 1 233 2 116 2 177 1 196 4 319 1 215 1 237 2 218 1 238 2 294 1 199 1 323 1 353 1 374 1 18 1 151 1 296 1 270 1 61 4 98 1 
244 2 66 1 130 1 246 1 28 1 68 2 46 2 134 2 358 1 164 4 136 1 138 1 336 1 278 1 169 4 190 1 363 1 36 2 143 1 315 1 289 1 233 2 116 2 177 1 196 4 319 1 215 1 237 2 218 1 238 2 294 1 199 1 323 1 353 1 374 1 18 1 151 1 296 1 270 1 61 4 98 1 
244 2 66 1 130 1 246 1 131 2 159 1 28 1 68 2 134 2 358 1 164 4 136 1 138 1 278 1 335 1 169 4 190 1 253 2 363 1 315 1 289 1 233 2 346 1 177 1 196 4 319 1 215 1 237 2 218 1 238 2 294 1 199 1 323 1 353 1 374 1 18 1 151 1 296 1 376 2 270 1 61 4 
225 1 130 1 46 2 134 3 136 1 138 1 278 1 336 1 190 1 48 1 339 1 143 1 345 1 289 1 233 2 196 5 237 2 238 3 58 1 199 1 294 1 353 1 296 2 151 1 18 1 20 1 61 4 98 1 244 2 99 1 66 1 246 2 28 1 68 3 358 1 164 5 169 4 251 1 363 1 36 2 315 1 116 2 177 2 319 1 215 2 218 1 323 1 374 1 270 1 
225 1 130 1 46 2 134 3 136 1 138 1 278 1 336 1 190 1 48 1 339 1 143 1 345 1 289 1 233 2 196 5 237 2 238 3 58 1 199 1 294 1 353 1 296 2 151 1 18 1 20 1 61 4 98 1 244 2 99 1 66 1 246 2 28 1 68 3 358 1 164 5 169 4 251 1 363 1 36 2 315 1 116 2 177 2 319 1 215 2 218 1 323 1 374 1 270 1 
244 2 66 1 130 1 246 1 131 2 159 1 28 1 68 2 134 2 358 1 164 4 136 1 138 1 278 1 169 4 253 2 363 1 368 1 315 1 289 1 233 2 177 1 196 4 319 1 215 1 237 2 218 1 238 2 294 1 199 1 323 1 353 1 374 1 18 1 151 1 296 1 376 2 270 1 61 4 
225 1 128 2 84 1 334 1 281 1 339 1 49 6 283 4 341 2 191 1 192 3 290 1 13 1 195 1 198 1 350 2 293 1 240 2 200 4 297 1 65 1 246 1 27 2 67 1 160 2 203 1 103 1 306 2 107 1 210 1 110 7 316 3 214 7 177 1 74 2 265 4 215 1 42 2 321 1 325 1 123 1 43 1 271 1 
330 1 225 1 183 1 128 1 184 1 246 1 27 1 161 1 107 1 168 1 210 2 339 1 341 1 288 1 175 1 177 1 74 3 264 1 197 1 215 1 349 1 350 1 42 1 351 1 354 1 240 1 200 2 326 1 20 1 
330 2 128 1 184 1 102 1 27 1 132 2 161 1 84 1 107 3 168 1 210 3 228 1 8 1 341 1 365 1 175 2 318 1 74 6 266 1 350 1 42 1 351 1 354 1 240 1 200 2 21 1 
330 2 183 2 128 2 184 1 27 1 132 1 161 2 135 3 32 1 108 1 107 8 168 11 210 6 282 3 341 2 174 1 286 1 288 1 290 1 175 1 74 14 40 1 264 2 198 1 350 2 42 2 351 11 354 4 355 1 240 2 200 4 326 1 63 1 
225 1 128 1 246 2 27 1 132 1 160 1 163 1 107 1 167 1 210 1 339 1 49 1 312 1 283 1 313 1 172 1 341 1 110 1 192 1 256 1 258 1 288 1 290 1 316 1 214 1 177 2 74 2 265 1 215 1 198 1 321 1 42 1 350 1 354 1 325 1 240 1 150 1 200 2 
225 1 183 2 330 8 128 3 184 3 132 2 275 2 228 1 339 1 340 1 49 3 8 1 283 2 341 3 192 2 288 1 290 1 145 2 54 2 198 1 350 3 351 7 354 7 240 3 200 6 21 1 63 4 246 3 102 1 27 3 160 1 161 3 203 1 162 1 107 10 168 7 210 10 312 1 313 2 110 3 365 1 256 2 258 2 175 4 316 2 259 2 318 1 214 3 177 3 74 20 265 2 264 2 215 1 42 3 321 2 219 1 325 1 268 2 326 2 
330 1 128 1 27 1 161 1 84 1 74 2 264 1 42 1 350 1 107 2 351 1 354 1 168 1 240 1 200 2 95 1 341 1 63 1 
330 1 211 1 128 1 175 1 184 1 27 1 84 1 74 2 42 1 350 1 351 1 354 1 168 1 240 1 210 2 200 2 326 1 341 1 
183 1 330 2 128 1 184 1 27 1 161 1 84 1 107 2 168 2 210 2 341 1 175 1 74 4 264 1 350 1 42 1 351 2 354 2 240 1 200 2 326 1 63 1 
330 1 128 1 27 1 161 1 74 2 264 1 42 1 350 1 107 2 351 1 354 1 168 1 240 1 200 2 123 1 95 1 341 1 63 1 
330 1 211 1 128 1 175 1 184 1 27 1 74 2 42 1 350 1 351 1 354 1 168 1 240 1 210 2 200 2 123 1 326 1 341 1 
183 1 330 2 128 1 184 1 27 1 161 1 107 2 168 2 210 2 341 1 175 1 74 4 264 1 350 1 42 1 351 2 354 2 240 1 200 2 123 1 326 1 63 1 
183 1 330 2 128 1 184 1 27 1 161 1 107 2 168 2 210 2 341 1 175 1 74 4 264 1 350 1 42 1 351 2 354 2 240 1 200 2 326 1 63 1 
256 1 192 1 258 1 128 1 290 1 246 1 316 1 27 1 132 1 160 1 214 1 177 1 54 1 74 2 265 1 198 1 350 1 42 1 321 1 107 1 210 1 240 1 200 2 49 1 283 1 341 1 313 1 110 1 
128 1 246 1 27 1 132 1 160 1 210 1 49 1 230 1 283 1 341 1 110 1 192 1 256 1 71 1 290 1 316 1 194 1 214 1 177 1 74 1 265 1 321 1 373 1 42 1 350 1 240 1 200 2 296 1 
183 1 330 2 128 1 184 1 27 1 161 1 107 2 168 2 210 2 341 1 288 1 175 1 74 4 264 1 350 1 42 1 351 2 354 2 240 1 200 2 326 1 63 1 
330 2 183 1 128 1 184 1 246 1 27 1 161 1 107 2 168 2 210 2 49 1 283 1 313 1 341 1 110 1 256 1 192 1 258 1 175 1 316 1 145 1 214 1 54 1 177 1 74 4 264 1 265 1 321 1 42 1 350 1 351 2 354 2 240 1 200 2 326 1 79 1 63 1 
330 1 225 1 183 1 128 1 184 1 246 1 27 1 161 1 107 2 168 1 210 1 339 1 254 1 341 1 288 1 177 1 74 3 264 1 215 1 349 1 350 1 42 1 351 1 354 1 240 1 200 2 326 1 20 1 63 1 
301 1 183 3 330 6 128 2 184 3 227 1 161 3 135 2 107 9 166 2 1 1 210 10 361 2 282 1 87 1 341 2 111 1 367 1 35 1 286 1 175 3 74 19 40 1 264 3 350 2 60 1 240 2 200 4 326 3 63 3 
301 1 286 1 128 1 227 1 135 1 74 4 350 1 107 2 1 2 240 1 210 2 200 2 282 1 361 1 341 1 111 1 35 2 
301 1 183 2 330 3 128 2 184 2 227 1 161 2 135 4 107 10 166 1 1 2 210 11 361 3 282 3 87 1 341 2 111 1 367 1 35 1 286 3 175 1 57 1 74 21 40 1 264 2 350 2 220 1 240 2 200 4 326 2 63 2 
301 1 183 2 330 4 128 2 184 2 227 1 161 2 135 3 107 8 166 1 1 2 210 9 361 2 282 2 87 1 341 2 111 1 367 1 35 1 286 2 175 2 74 17 40 1 264 2 350 2 220 1 240 2 200 4 326 2 63 2 
301 1 330 1 128 1 184 1 227 1 102 1 161 1 135 1 107 5 1 1 210 4 228 1 282 1 361 1 8 1 341 1 111 1 365 1 35 1 286 1 175 1 318 1 74 9 350 1 240 1 200 2 21 1 
245 1 121 1 2 1 52 1 371 1 201 1 377 1 216 1 34 1 105 1 
322 1 33 1 
277 1 245 1 121 1 59 1 52 1 371 1 9 1 377 1 105 1 
127 1 147 1 
157 1 262 1 51 1 
274 1 245 1 371 1 52 1 305 1 216 1 105 1 218 1 188 1 31 1 121 1 2 1 169 1 94 2 61 1 377 1 34 1 89 1 
274 1 245 1 371 1 52 1 305 1 216 1 105 1 218 1 188 1 31 1 121 1 2 1 169 1 94 2 61 1 377 1 34 1 89 1 
274 1 245 1 371 1 52 1 305 1 216 1 105 1 218 1 188 1 31 1 121 1 2 1 169 1 94 2 61 1 377 1 34 1 89 1 
127 1 157 1 147 1 
127 1 157 1 147 1 
262 1 51 1 
157 1 262 1 51 1 
149 1 115 1 
225 2 245 1 129 1 246 2 132 1 186 1 105 1 188 1 169 1 339 2 33 1 89 1 142 1 37 1 52 1 371 1 260 1 115 1 177 2 215 2 322 1 121 1 149 1 239 1 94 1 61 1 377 1 
128 1 26 1 246 2 158 1 27 1 137 1 306 2 334 1 107 1 210 1 49 2 283 1 341 1 110 2 192 1 288 1 290 1 316 1 214 2 177 2 195 1 74 2 265 1 215 2 198 1 93 1 42 1 350 1 240 1 200 2 125 1 
192 1 65 1 316 1 235 1 160 1 214 1 265 1 106 1 293 1 109 1 209 1 49 1 283 1 110 1 
81 1 287 1 24 1 155 1 316 1 214 1 117 1 55 1 263 1 203 1 109 1 337 1 250 1 209 1 49 1 283 1 314 2 110 1 
81 1 287 1 24 1 155 1 316 1 214 2 117 1 55 1 263 1 203 1 109 1 337 1 250 1 209 1 49 2 283 1 314 2 110 2 79 1 
81 1 90 1 287 1 155 1 316 1 214 1 117 1 55 1 263 1 203 1 337 1 250 1 209 1 49 1 283 1 314 2 110 1 
113 1 
28 1 29 1 136 1 218 1 323 1 353 1 3 1 18 1 270 1 363 1 
36 5 183 2 184 2 28 5 302 5 161 2 275 1 120 2 264 2 218 5 140 1 326 2 18 5 253 10 112 5 
218 1 169 1 233 1 61 1 164 1 136 1 
100 1 65 1 28 2 160 2 164 4 85 1 70 1 169 3 252 2 49 4 283 1 363 1 110 4 192 1 316 1 233 2 214 4 265 1 41 1 293 1 323 2 353 2 77 1 18 2 153 1 270 2 61 3 357 2 299 2 
218 1 3 1 28 1 18 1 29 1 136 1 266 1 
36 1 233 1 116 1 28 1 46 1 164 1 136 1 218 2 323 1 336 1 169 1 353 1 18 1 253 1 270 1 61 1 363 1 
45 1 183 2 184 2 133 1 275 2 136 2 138 2 140 2 3 1 49 3 283 4 50 2 192 3 233 3 148 2 353 4 18 9 243 2 61 5 357 1 62 2 299 2 302 6 28 8 160 1 161 2 29 1 249 2 164 5 165 3 70 1 169 5 252 1 253 12 363 4 110 3 364 2 112 6 36 6 316 3 317 2 213 2 214 3 120 2 265 10 264 2 320 1 321 3 218 8 323 4 326 2 270 4 79 1 223 1 
183 2 184 2 302 5 28 5 161 2 135 1 164 1 136 2 206 1 140 1 169 1 282 1 253 6 363 2 112 5 36 3 11 1 286 1 233 1 57 1 292 1 120 2 264 2 218 5 323 2 353 2 241 1 326 2 18 8 270 2 61 1 298 1 357 1 97 1 299 1 
225 1 99 1 184 1 246 1 102 1 303 1 28 2 161 2 140 1 169 1 251 1 339 1 8 1 363 1 365 1 143 1 345 1 177 1 120 2 215 1 323 1 58 1 353 1 296 1 18 2 270 1 20 1 61 1 
225 2 128 1 246 3 27 1 132 1 160 1 210 1 339 2 49 1 283 1 341 1 313 1 110 1 256 1 192 1 345 1 258 1 290 1 316 1 214 1 177 3 54 1 74 1 265 1 215 2 350 1 321 1 42 1 269 1 240 1 200 2 20 2 
36 2 318 1 302 2 28 2 136 2 218 4 323 1 353 1 18 1 253 4 270 1 363 1 112 2 357 1 299 1 
149 1 245 1 279 1 52 1 216 1 
245 1 25 1 52 1 
245 1 25 1 52 1 
245 1 25 1 52 1 
245 1 52 1 229 1 
245 1 52 1 229 1 
245 1 52 1 229 1 
245 1 52 1 
121 1 371 1 
330 5 128 1 175 3 184 2 102 1 303 1 161 2 74 10 350 1 107 5 240 1 210 5 200 2 8 2 341 1 111 1 365 2 63 2 
330 1 128 1 161 1 74 2 264 1 350 1 107 2 240 1 200 2 341 1 111 1 63 1 
330 2 183 1 128 1 175 1 184 1 161 1 74 4 264 1 350 1 107 2 210 2 240 1 200 2 326 1 341 1 111 1 63 1 
91 1 330 2 128 3 175 1 74 3 350 3 107 1 210 2 240 3 200 6 87 1 8 1 341 3 111 1 365 1 63 1 300 1 
183 3 330 12 128 5 184 5 102 2 161 5 135 4 107 16 210 18 228 1 360 1 282 3 8 3 87 1 341 5 365 3 111 1 91 1 286 1 175 7 318 1 347 1 74 34 40 1 264 3 236 1 350 5 240 5 200 10 326 3 182 1 21 1 63 5 300 2 
330 2 128 1 184 1 102 1 161 1 135 1 107 4 210 4 228 1 282 1 8 1 341 1 111 1 365 1 286 1 175 2 318 1 74 8 57 1 350 1 240 1 200 2 21 1 
183 1 330 3 128 2 184 1 102 1 161 2 135 2 107 6 210 5 228 1 282 1 8 1 341 2 365 1 111 1 286 1 175 2 318 1 74 11 57 1 40 1 264 1 350 2 240 2 200 4 182 1 21 1 63 1 
286 1 128 1 57 1 135 1 74 2 350 1 107 1 240 1 210 1 200 2 282 1 341 1 111 1 
183 2 330 5 128 3 184 2 102 1 161 3 135 1 107 10 210 7 228 1 282 1 8 1 341 3 365 1 111 1 11 1 286 1 175 3 318 1 74 17 57 1 264 2 292 1 350 3 240 3 200 6 241 1 326 1 182 1 21 1 298 1 63 2 300 1 
330 2 128 1 184 1 102 1 161 1 135 1 107 4 210 4 228 1 282 1 8 1 341 1 111 1 365 1 286 1 175 2 318 1 74 8 57 1 350 1 240 1 200 2 21 1 
286 1 128 1 57 1 135 1 74 2 350 1 107 1 240 1 210 1 200 2 282 1 341 1 111 1 
183 2 330 5 128 4 184 2 102 1 161 3 135 1 107 10 210 8 228 1 282 1 8 1 341 4 365 1 111 1 11 1 286 1 175 3 318 1 74 18 57 1 292 1 264 2 350 4 240 4 200 8 241 1 326 1 182 1 21 1 298 1 63 2 300 2 
183 3 330 6 128 4 184 2 161 3 135 1 107 9 210 7 282 1 87 1 341 4 111 1 11 1 286 1 175 3 74 16 57 1 292 1 264 3 350 4 240 4 200 8 241 1 326 2 298 1 63 3 300 2 
330 6 184 1 175 3 102 1 161 1 74 7 107 3 210 4 228 2 8 3 21 1 365 3 63 3 
183 2 330 4 128 4 184 2 102 1 161 3 135 1 107 10 210 8 228 1 282 1 8 1 87 1 341 4 365 1 111 1 11 1 286 1 175 3 318 1 74 18 57 1 292 1 264 2 350 4 240 4 200 8 241 1 326 1 21 1 298 1 63 1 300 2 
330 3 128 2 184 1 175 2 102 1 318 1 161 1 74 8 350 2 107 4 210 4 240 2 228 1 200 4 8 1 341 2 21 1 365 1 63 1 300 1 
330 2 107 3 184 1 175 2 210 3 102 1 228 1 318 1 161 1 8 1 74 6 21 1 365 1 266 1 
330 2 183 1 128 1 175 1 184 1 161 1 74 4 264 1 350 1 107 2 210 2 240 1 200 2 326 1 182 1 341 1 63 1 
107 1 286 1 210 1 282 1 74 2 135 1 
183 2 330 8 128 1 184 5 102 2 303 1 161 5 135 2 107 13 210 12 228 1 282 2 8 2 341 1 365 2 174 1 175 4 318 1 40 1 74 25 264 2 350 1 355 1 240 1 200 2 326 2 21 1 63 4 300 1 
210 1 74 1 135 1 
107 1 282 1 74 1 
183 1 330 3 128 1 184 1 175 2 161 1 275 1 74 6 264 1 350 1 107 3 240 1 210 3 200 2 326 1 182 1 341 1 63 1 
183 2 330 2 128 1 184 2 161 2 135 1 107 6 210 6 282 1 341 1 111 1 11 1 286 1 175 1 74 12 57 1 264 2 292 1 350 1 240 1 200 2 241 1 326 2 298 1 63 1 
330 2 184 1 175 1 102 1 161 1 74 6 107 3 210 3 8 1 365 1 63 1 
330 2 91 1 128 1 175 1 74 3 350 1 107 1 210 2 240 1 228 1 200 2 8 1 341 1 21 1 365 1 63 1 300 1 
130 1 246 1 132 1 152 1 19 1 177 1 215 1 
212 1 130 1 246 1 132 1 248 1 38 1 177 1 215 1 359 1 242 1 19 1 152 1 
344 1 192 1 293 1 65 1 316 1 214 4 49 4 160 1 283 1 265 1 110 4 79 1 343 1 
192 1 316 1 67 1 214 2 265 1 103 1 321 1 219 1 252 1 49 2 297 1 283 2 191 1 110 2 
250 1 316 1 117 1 214 1 49 1 160 1 283 1 55 1 314 1 110 1 
192 1 316 1 214 2 203 1 265 1 137 1 334 1 49 2 283 1 110 2 79 1 
344 1 192 2 65 1 316 2 160 1 214 5 13 1 265 3 293 1 334 1 252 1 49 4 43 1 283 2 110 5 79 1 
344 1 192 2 65 1 316 2 160 1 214 5 13 1 265 3 293 1 187 1 334 1 252 1 49 4 283 2 110 5 79 1 
192 1 293 1 65 1 316 1 214 1 49 1 160 1 283 1 265 1 110 1 266 1 
192 1 256 1 225 1 258 1 246 2 316 1 132 1 160 1 214 1 177 2 265 1 215 1 321 1 325 1 339 1 49 1 283 1 110 1 
192 2 256 1 225 1 258 1 66 1 246 2 316 1 213 1 317 1 132 1 214 1 177 2 265 3 319 1 215 2 321 2 325 1 339 2 296 1 252 1 49 1 283 1 110 1 
225 1 66 1 246 2 132 1 339 2 49 1 252 1 230 1 283 1 110 1 256 1 192 2 71 1 316 1 317 1 213 1 214 1 177 2 265 3 319 1 215 2 321 2 325 1 296 2 
192 1 316 1 213 1 317 1 193 1 53 1 160 1 214 3 265 4 164 1 136 1 165 1 321 1 218 1 138 1 169 2 252 1 49 3 283 1 61 2 110 3 62 1 343 1 
192 1 316 1 213 1 317 1 160 1 214 3 249 1 265 4 164 1 136 1 165 1 321 1 218 1 138 1 169 2 252 1 49 3 283 1 61 2 110 3 62 1 343 1 
316 1 214 1 49 1 283 1 110 1 271 1 
192 2 316 2 160 2 214 6 13 1 203 1 265 3 306 1 321 1 334 1 281 1 43 1 49 5 297 1 283 3 284 1 271 1 191 1 110 6 223 1 
225 1 330 2 128 2 184 1 132 2 228 1 339 1 49 1 283 1 8 1 341 2 192 1 288 1 145 1 54 1 93 1 350 2 351 1 354 1 240 2 200 4 21 1 246 2 102 1 27 2 161 1 107 3 168 1 210 3 313 1 110 1 365 1 256 1 258 1 175 2 316 1 318 1 214 1 177 2 74 6 265 1 215 1 42 2 321 1 268 1 325 1 79 1 
28 1 160 1 29 1 249 1 164 2 136 1 165 1 70 1 138 1 169 3 3 1 49 1 363 2 110 1 364 1 50 1 233 1 214 1 265 2 218 1 323 2 353 2 239 1 18 1 270 2 243 1 61 3 62 1 
192 1 316 1 214 2 265 2 320 1 321 1 49 2 283 2 271 1 110 2 79 1 62 1 223 1 
192 1 256 1 225 1 71 1 246 2 316 1 132 1 160 1 214 1 177 2 265 1 215 1 321 1 325 1 339 1 296 1 49 1 230 1 283 1 110 1 
192 1 316 1 214 1 265 1 321 1 252 1 49 1 297 1 283 2 284 1 191 1 110 1 223 1 
158 1 375 1 144 2 366 1 
169 1 239 1 158 1 375 1 144 2 5 1 39 1 61 1 342 1 366 1 
144 1 158 1 375 1 366 1 
144 1 5 1 39 1 
273 1 267 1 176 1 232 1 247 1 92 1 0 1 173 1 
224 1 273 1 176 2 232 3 247 2 92 1 118 2 47 1 267 3 338 1 181 2 173 2 329 1 
273 1 22 1 232 2 176 1 247 1 92 1 0 1 118 1 205 1 267 2 6 1 173 1 
273 1 232 1 176 1 247 1 92 1 0 1 104 1 47 1 267 1 181 1 
307 1 324 2 173 2 10 1 
273 1 267 1 232 1 76 1 92 1 0 1 
273 1 267 2 207 1 176 1 232 2 247 1 92 1 118 1 0 1 173 1 
327 1 
273 1 267 1 176 1 232 1 247 1 92 1 0 1 173 1 
176 1 247 1 173 1 266 1 
273 1 267 1 176 1 232 1 247 1 92 1 173 1 
217 1 232 1 331 1 
273 1 224 1 232 1 176 1 247 1 92 1 0 1 47 1 267 1 181 1 
273 1 267 2 232 1 92 1 118 1 119 1 
273 1 287 1 267 1 338 1 114 1 232 1 92 1 0 1 55 1 314 1 173 1 
273 1 267 1 232 1 247 1 92 1 0 1 173 1 
273 1 267 1 176 1 232 1 247 2 92 1 0 1 
273 1 232 1 92 1 0 1 17 1 267 1 280 1 
273 1 176 1 232 3 12 1 247 1 92 1 0 1 118 2 267 3 207 1 338 1 173 2 329 1 
273 1 287 1 176 1 232 2 247 1 92 1 0 1 118 1 263 1 55 1 267 2 250 1 189 1 173 1 314 2 
273 1 267 2 208 1 232 1 92 1 118 1 0 1 119 1 
273 1 232 3 176 1 72 1 247 1 92 1 118 1 0 1 267 3 207 1 173 1 
338 1 181 1 173 1 329 1 
247 1 173 1 

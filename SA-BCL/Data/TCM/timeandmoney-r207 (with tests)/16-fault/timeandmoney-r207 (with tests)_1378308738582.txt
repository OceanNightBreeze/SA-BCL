#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (228,269) (228,269) 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 286 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 161 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 207 245 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 207 245 62 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 19 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 19 199 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) (171,214) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) 277 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (59,80,144,241) (171,214) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (59,80,144,241) (59,80,144,241) (171,214) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 131 206 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 99 108 177 98 260 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 99 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 99 108 177 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 99 108 177 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 99 108 177 98 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 99 108 177 98 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 76 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 156 46 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 156 46 104 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 156 46 104 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 156 46 104 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (228,269) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 131 206 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 76 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 20 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 271 273 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 119 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 207 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (228,269) (228,269) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable; | RETURN | 1077 | return null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12227 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V | ASSIGN | 1238 | = null
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3455 | < -> >
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
154 1 63 1 137 1 138 1 122 1 141 1 279 1 165 1 204 1 183 1 249 1 205 1 60 1 170 1 
219 1 
154 1 259 1 178 1 116 1 219 1 165 2 220 1 170 2 
154 2 193 1 21 2 178 1 105 1 84 1 165 5 128 1 259 1 228 1 130 1 244 2 265 1 34 1 15 2 219 1 269 1 220 2 170 5 
76 1 178 1 219 1 
250 1 12 2 219 1 
137 2 63 2 204 2 183 2 162 1 205 2 122 1 279 2 
3 2 40 1 82 1 159 2 162 1 122 1 125 1 127 1 6 1 203 1 261 2 8 1 204 3 89 1 205 3 60 1 14 2 234 1 61 1 97 1 268 1 235 1 64 2 137 2 63 2 272 1 100 1 101 1 279 3 280 2 109 2 181 1 110 1 288 1 215 1 183 3 146 1 216 2 251 1 185 1 188 1 
137 1 63 1 138 1 204 1 183 1 205 1 60 1 122 1 141 1 279 1 
137 1 63 1 172 1 138 1 82 1 42 1 178 1 224 1 122 1 141 1 279 2 204 2 183 2 249 1 205 1 60 2 219 1 188 1 
63 2 137 2 138 1 82 1 178 1 224 1 122 1 141 1 279 2 165 1 204 2 183 2 249 1 205 2 60 2 219 1 188 1 170 1 
154 1 158 1 165 1 220 1 170 1 
154 1 259 1 178 1 264 1 219 1 165 2 220 1 170 2 
165 1 220 1 170 1 
63 1 137 1 22 1 162 2 279 2 204 2 183 2 205 1 168 1 
252 1 92 1 94 1 
272 1 3 1 82 1 159 1 100 1 162 1 279 1 109 2 181 1 8 1 261 2 204 1 183 1 31 1 216 1 251 1 205 1 60 1 14 2 61 1 188 1 235 1 
137 1 272 1 3 1 82 1 100 1 159 1 160 1 102 1 279 2 109 2 181 1 261 2 8 1 204 2 183 2 251 1 216 1 205 2 60 1 92 1 14 2 61 1 188 1 235 1 
76 1 162 1 
63 1 137 3 204 3 183 3 160 1 162 1 205 3 279 3 
137 1 138 1 204 1 183 1 205 1 60 1 279 1 
137 1 63 1 204 1 183 1 205 1 22 1 60 1 168 1 279 1 
137 2 63 1 82 1 160 1 22 1 224 1 102 1 279 2 286 1 204 2 183 2 205 2 13 1 60 1 188 1 
172 1 137 1 204 2 183 2 160 1 162 1 114 1 205 1 279 2 
137 1 82 1 160 1 161 1 224 1 102 1 279 1 204 1 183 1 205 1 13 1 60 1 188 1 
63 1 137 2 160 1 22 1 279 2 204 2 183 2 205 2 252 1 92 1 
272 1 3 1 82 1 159 1 100 1 162 1 279 1 109 2 181 1 8 1 261 2 204 1 183 1 216 1 251 1 205 1 60 1 14 2 61 1 188 1 235 1 
272 1 3 1 82 1 159 1 162 1 279 1 109 2 8 1 261 2 204 1 287 1 183 1 216 1 251 1 205 1 60 1 230 1 14 2 61 1 188 1 235 1 
64 2 40 1 280 2 6 1 285 1 27 1 110 2 203 1 215 1 288 1 78 1 89 1 217 1 91 1 252 1 92 1 233 1 94 1 221 1 
137 1 51 1 204 1 183 1 205 1 60 1 188 1 279 1 
172 1 137 4 63 1 160 2 22 1 162 1 102 1 279 5 26 1 52 1 204 5 183 5 114 1 205 4 
137 2 51 1 138 1 204 2 183 2 205 2 60 1 279 2 
229 1 209 1 136 1 
111 1 30 1 209 2 281 1 270 1 136 2 
209 1 136 1 
209 1 136 1 
281 1 270 1 
281 1 270 1 
281 1 270 1 
209 1 186 1 136 1 
209 1 186 1 136 1 
209 1 186 1 136 1 
29 1 209 1 136 1 
29 1 209 1 136 1 
29 1 209 1 136 1 
209 1 245 1 207 1 187 1 107 1 136 1 
62 1 209 1 245 1 207 1 187 1 107 1 165 1 136 1 170 1 
290 2 121 1 58 1 213 2 164 1 
56 1 121 1 213 1 
56 1 213 1 164 1 
290 1 58 1 121 2 198 1 213 3 164 1 
290 1 54 1 58 1 121 1 213 2 164 1 
154 3 41 1 19 1 21 1 178 1 240 1 105 1 126 1 165 4 49 1 259 1 130 1 244 1 57 1 15 1 219 1 220 1 170 4 
154 3 158 1 19 1 21 1 178 1 124 1 105 1 126 1 86 1 165 4 49 1 259 1 244 1 130 1 246 1 15 1 219 1 220 2 170 4 
154 1 41 1 19 1 21 1 105 1 84 1 165 2 49 1 244 1 57 1 15 1 170 2 
41 1 19 1 21 1 199 1 105 1 84 1 165 1 49 1 244 1 57 1 15 1 170 1 
43 1 
76 1 14 1 225 1 
14 1 16 1 
14 1 109 1 
261 1 53 1 68 1 14 3 225 2 109 1 
261 1 14 1 109 1 
142 1 14 1 
174 1 64 7 83 1 239 1 278 1 50 1 110 3 10 1 55 1 266 1 91 2 90 1 185 4 267 2 233 3 255 1 254 1 221 1 
153 1 0 1 83 1 223 4 257 1 44 3 50 4 203 1 10 5 55 2 89 1 266 2 90 2 91 5 267 3 233 10 174 1 271 1 64 31 139 1 239 1 278 1 72 1 280 2 285 3 110 15 28 3 288 1 215 1 145 3 148 1 185 16 255 2 221 4 
174 1 0 1 64 9 175 1 83 1 239 1 280 4 50 1 10 1 110 4 203 2 215 2 288 2 55 1 89 2 263 1 266 1 91 3 90 1 185 5 267 2 233 4 255 1 221 1 
64 7 174 1 83 1 239 1 278 1 50 1 110 3 10 1 55 1 266 1 91 2 90 1 185 4 267 2 233 3 255 1 221 1 
64 7 174 1 83 1 239 1 278 1 50 1 110 3 10 1 55 1 266 1 91 2 90 1 185 4 267 2 233 3 255 1 221 1 
171 1 176 1 144 1 80 1 241 1 
176 1 144 1 80 1 277 1 241 1 
176 1 144 1 80 1 277 1 241 1 
171 1 176 1 144 1 80 1 241 1 
176 1 80 1 59 1 214 1 
201 1 
3 1 21 1 159 1 105 1 165 1 49 1 130 1 244 1 131 1 216 1 206 1 15 1 170 1 235 1 
172 1 194 1 222 1 82 1 42 1 224 1 5 1 279 1 166 1 165 2 259 1 204 1 167 1 183 1 60 1 116 1 188 1 190 1 220 2 170 2 
172 1 194 1 222 1 82 1 42 1 224 1 5 1 179 1 279 1 165 1 204 1 262 1 167 1 183 1 60 1 188 1 190 1 170 1 
194 1 222 1 82 1 42 1 224 1 5 1 165 2 166 1 259 1 204 1 167 1 262 1 60 1 170 2 172 1 179 1 279 1 183 1 35 1 116 1 188 1 190 1 220 2 
2 1 194 1 222 1 82 1 42 1 224 1 5 1 165 2 166 2 9 1 259 1 260 1 130 1 204 1 167 1 60 1 15 1 98 1 170 2 208 1 172 1 99 1 177 1 21 1 105 1 279 1 108 1 25 1 244 1 183 1 115 1 34 1 35 2 116 1 188 1 190 1 220 3 
194 1 2 1 222 1 82 1 42 1 224 1 5 1 165 1 9 1 130 1 204 1 167 1 60 1 15 1 170 1 208 1 172 1 99 1 21 1 105 1 279 1 244 1 183 1 115 1 34 1 188 1 190 1 
194 1 2 1 222 1 82 1 42 1 224 1 5 1 165 1 9 1 204 1 130 1 167 1 60 1 15 1 170 1 208 1 172 1 99 1 177 1 21 1 105 1 279 1 108 1 25 1 244 1 183 1 115 1 34 1 188 1 190 1 
194 1 2 1 222 1 82 1 42 1 224 1 5 1 165 1 9 1 204 1 130 1 167 1 60 1 15 1 170 1 208 1 172 1 99 1 177 1 21 1 105 1 279 1 108 1 25 1 244 1 183 1 115 1 34 1 188 1 190 1 
194 1 155 1 222 1 82 1 42 1 120 2 224 1 5 1 166 2 165 3 259 2 9 2 204 1 130 1 262 2 167 1 12 2 60 1 15 1 96 1 170 3 172 1 17 1 99 1 21 1 178 1 179 2 23 2 105 1 279 1 108 1 244 1 183 1 35 2 115 2 34 1 219 1 188 1 190 1 220 4 
2 1 194 1 222 1 82 1 42 1 224 1 5 1 165 1 166 1 9 1 130 1 204 1 167 1 262 1 60 1 15 1 98 1 170 1 208 1 172 1 99 1 177 1 21 1 105 1 179 1 279 1 108 1 25 1 244 1 183 1 115 1 34 1 35 1 188 1 190 1 220 1 
2 1 194 1 222 1 82 1 42 1 224 1 5 1 165 1 166 1 9 1 130 1 204 1 167 1 262 1 60 1 15 1 98 1 170 1 208 1 172 1 99 1 177 1 21 1 105 1 179 1 279 1 108 1 25 1 244 1 183 1 115 1 34 1 35 1 188 1 190 1 220 1 
194 1 222 1 82 1 42 1 120 2 224 1 5 1 166 2 165 3 259 2 9 2 130 1 204 1 262 2 167 1 12 2 60 1 15 1 170 3 172 1 17 1 99 1 21 1 178 1 179 2 23 2 105 1 279 1 244 1 183 1 35 2 115 2 34 1 219 1 188 1 190 1 118 1 220 4 
3 7 157 1 40 2 159 8 160 1 125 1 6 2 8 2 203 2 227 1 204 1 89 2 205 1 14 3 97 2 235 2 236 1 137 1 64 2 66 1 67 1 101 1 274 1 279 1 280 4 109 2 242 1 110 1 288 2 215 2 183 1 78 1 33 1 251 2 216 8 218 1 185 1 117 1 37 1 
40 1 6 1 50 1 203 1 204 1 88 1 89 1 205 1 91 1 92 1 132 1 233 1 94 1 137 1 63 1 64 3 22 1 279 1 280 2 285 1 28 1 110 2 288 1 215 1 183 1 145 1 252 1 185 1 221 1 
40 1 83 1 162 2 6 1 50 1 203 1 89 1 55 1 266 1 91 2 92 1 267 1 233 2 94 1 174 1 64 6 239 1 280 2 76 1 110 3 288 1 215 1 78 1 252 1 185 3 221 1 
40 2 223 4 162 1 125 1 44 3 6 1 50 3 129 1 203 2 10 2 88 1 89 2 92 13 94 13 233 2 271 1 64 17 139 2 101 1 280 4 285 1 74 1 110 7 28 3 288 2 215 2 145 3 184 1 252 3 185 10 38 1 221 1 
3 1 159 1 82 1 160 1 162 1 6 1 8 1 88 1 89 1 14 2 95 1 235 1 100 1 101 1 102 1 109 2 181 1 110 1 183 2 31 1 251 1 252 1 185 1 188 1 40 1 125 1 203 1 261 2 204 2 205 2 60 1 61 1 64 2 137 1 272 1 140 1 276 1 279 2 280 2 288 1 215 1 216 1 
3 1 159 1 82 1 160 1 4 1 6 2 10 2 8 1 88 1 89 2 14 2 92 2 233 2 234 1 94 2 235 1 100 1 102 1 109 2 181 1 110 2 28 1 183 2 251 1 252 2 185 3 188 1 40 2 125 1 50 1 203 2 261 2 204 2 205 2 60 1 61 1 137 1 64 5 272 1 275 1 279 2 280 4 288 2 215 2 216 1 145 1 151 1 292 1 152 1 
64 2 40 1 280 2 6 1 50 1 10 1 203 1 28 1 215 1 288 1 87 1 78 1 89 1 252 1 92 1 185 2 233 1 94 1 
64 2 40 1 280 2 6 1 285 1 203 1 110 2 215 1 288 1 78 1 89 1 217 1 91 1 252 1 92 1 233 1 94 1 221 1 
40 1 6 1 50 1 203 1 10 1 89 1 91 1 92 2 94 2 233 2 64 4 280 2 285 1 28 1 110 2 288 1 215 1 78 1 145 1 252 2 185 2 221 1 
64 2 40 1 66 1 280 2 6 1 50 1 10 1 203 1 28 1 215 1 288 1 87 1 89 1 252 1 92 1 185 2 233 1 94 1 
64 2 40 1 66 1 280 2 6 1 285 1 203 1 110 2 215 1 288 1 89 1 217 1 91 1 252 1 92 1 233 1 94 1 221 1 
64 2 40 1 66 1 280 2 6 1 50 1 10 1 203 1 28 1 215 1 288 1 89 1 145 1 252 1 92 1 185 2 233 1 94 1 
64 2 40 1 280 2 6 1 50 1 10 1 203 1 28 1 215 1 288 1 89 1 145 1 252 1 92 1 185 2 233 1 94 1 
3 1 40 1 159 1 82 1 162 1 125 1 6 1 203 1 261 2 8 1 204 1 89 1 205 1 60 1 14 2 61 1 234 1 235 1 64 2 272 1 100 1 101 1 279 1 280 2 109 2 181 1 110 1 288 1 215 1 183 1 251 1 216 1 185 1 188 1 
3 1 40 1 159 1 82 1 162 1 163 1 125 1 6 1 203 1 261 2 8 1 204 1 89 1 205 1 230 1 60 1 14 2 61 1 235 1 64 2 272 1 101 1 279 1 280 2 109 2 110 1 288 1 287 1 215 1 183 1 251 1 216 1 185 1 188 1 
64 2 40 1 280 2 6 1 50 1 10 1 203 1 28 1 215 1 288 1 88 1 89 1 145 1 252 1 92 1 185 2 233 1 94 1 
3 1 40 1 159 1 82 1 6 1 50 1 10 1 203 1 261 2 8 1 204 1 89 1 205 1 60 1 92 1 14 2 233 1 94 1 61 1 234 1 64 2 236 1 272 1 100 1 279 1 280 2 109 2 181 1 28 1 288 1 215 1 183 1 145 1 251 1 216 1 252 1 185 2 188 1 292 1 
40 1 6 1 50 1 10 1 203 1 204 1 88 1 89 1 205 1 92 1 233 1 94 1 137 1 63 1 64 2 210 1 22 1 279 1 280 2 28 1 288 1 215 1 183 1 145 1 252 1 185 2 
223 2 123 1 44 1 46 1 50 3 203 2 10 3 89 2 91 3 233 6 271 1 64 19 175 1 139 1 212 2 69 1 103 2 104 1 280 4 283 1 285 3 110 10 28 3 288 2 215 2 145 3 147 1 185 9 191 1 221 3 
0 1 156 1 223 2 44 2 46 2 50 2 203 2 89 2 91 1 231 1 232 1 133 1 233 1 64 18 271 2 175 1 273 1 103 2 104 1 280 4 283 1 284 1 285 1 110 8 28 2 288 2 215 2 145 2 185 10 221 1 191 2 
0 1 156 1 223 4 123 1 44 3 46 1 50 4 203 3 10 3 89 3 91 2 231 1 232 1 133 1 233 5 271 3 64 32 175 1 139 1 273 1 212 1 69 1 70 1 103 3 104 1 280 6 283 1 284 1 285 4 110 17 28 4 288 3 215 3 145 4 185 15 191 2 221 4 
0 1 156 1 223 4 123 1 44 3 46 1 50 4 203 3 10 2 89 3 91 3 231 1 232 1 133 1 233 5 271 3 64 31 175 1 139 1 273 1 212 1 69 1 70 1 103 3 104 1 280 6 283 1 284 1 285 3 110 15 28 4 288 3 215 3 145 4 185 16 191 2 221 3 
156 1 83 1 223 4 44 4 46 1 50 7 129 2 203 1 10 4 55 1 89 1 266 1 91 6 231 1 267 1 232 1 133 1 233 10 174 1 271 2 64 42 175 1 139 2 273 1 239 1 103 2 104 1 280 2 283 1 284 1 285 5 110 19 28 6 288 1 215 1 145 6 185 23 191 1 221 6 
3 2 40 1 159 2 125 1 6 1 48 1 202 1 8 1 203 1 204 2 88 1 89 1 14 1 97 2 64 2 101 1 279 2 280 2 109 1 243 1 110 1 215 1 288 1 32 1 183 2 248 1 251 1 216 2 185 1 117 1 37 1 
3 1 159 1 274 1 71 1 109 1 8 1 227 1 251 1 216 1 79 1 14 1 253 1 81 1 235 1 
3 1 18 1 157 1 159 1 121 1 198 1 213 2 164 1 8 1 143 1 56 1 216 1 251 1 79 1 149 1 291 1 81 1 135 1 
236 1 3 2 18 1 157 1 159 2 121 1 198 1 213 2 164 1 8 1 143 1 56 1 251 1 216 2 79 1 149 1 291 1 81 1 135 1 
3 1 18 1 157 1 159 1 121 1 198 1 213 2 164 1 143 1 8 1 56 1 247 1 216 1 251 1 291 1 81 1 135 1 
195 1 
228 1 244 1 130 1 21 1 178 1 34 1 105 1 15 1 219 1 
192 1 237 1 105 1 285 1 50 1 28 1 145 1 250 1 12 2 34 2 219 1 221 1 
259 1 178 1 219 1 165 1 220 1 170 1 
3 1 159 1 21 1 105 1 49 1 130 1 244 1 131 1 216 1 11 1 206 1 15 1 235 1 
76 1 228 1 178 1 34 1 105 1 219 1 269 1 
208 1 2 1 244 1 130 1 21 1 34 1 105 1 15 1 
3 1 21 1 159 1 20 1 68 1 105 1 109 1 24 1 49 1 8 2 261 1 130 1 244 1 251 1 216 1 14 2 16 1 15 1 235 1 
271 1 244 1 130 1 273 1 21 1 223 1 34 1 105 1 15 1 44 1 
21 1 83 1 105 1 165 1 50 1 25 1 130 1 244 1 55 1 266 1 34 1 15 1 293 1 170 1 119 1 
3 1 40 1 159 1 82 1 162 1 122 1 125 1 6 1 203 1 8 1 261 2 204 3 89 1 205 3 60 1 14 2 234 1 61 1 235 1 64 1 137 2 63 2 272 1 100 1 279 3 280 2 109 2 181 1 110 1 288 1 215 1 183 3 216 1 146 1 251 1 188 1 
122 1 49 1 130 1 204 1 205 1 60 1 15 1 63 1 137 1 138 1 21 1 178 1 141 1 105 1 279 1 244 1 183 1 249 1 219 1 
207 1 187 1 
207 1 187 1 
207 1 187 1 
207 1 187 1 
207 1 187 1 
207 1 187 1 
207 1 187 1 
207 1 187 1 
209 1 136 1 
64 5 83 1 50 1 110 3 55 1 266 1 91 1 185 2 233 1 119 1 221 1 
64 2 175 1 280 2 50 1 203 1 28 1 10 1 215 1 288 1 89 1 185 2 233 1 
64 4 175 1 280 2 285 1 50 1 110 2 203 1 28 1 10 1 215 1 288 1 89 1 145 1 91 1 185 2 233 2 221 1 
0 1 64 3 175 1 69 1 280 6 110 2 203 3 10 1 215 3 288 3 89 3 55 1 266 1 91 1 185 1 233 2 189 1 
0 2 153 1 83 2 223 4 257 1 44 3 50 5 203 5 10 5 55 3 89 5 266 3 91 7 267 1 233 12 174 1 271 1 64 34 175 1 139 1 239 1 69 1 72 1 73 1 280 10 285 3 110 18 28 3 288 5 215 5 145 3 185 16 189 1 221 5 
64 8 0 1 174 1 83 1 239 1 280 4 50 1 110 4 10 1 203 2 215 2 288 2 89 2 55 1 266 1 91 2 185 4 267 1 233 3 221 1 
174 1 64 6 239 1 83 1 50 1 110 3 76 1 55 1 266 1 91 2 185 3 267 1 233 2 221 1 
64 4 73 1 280 2 285 1 50 1 110 2 203 1 28 1 10 1 215 1 288 1 89 1 145 1 91 1 185 2 233 2 221 1 
271 1 64 7 139 1 223 2 44 1 285 1 50 1 110 4 28 1 10 1 145 1 91 1 185 3 233 2 221 1 
0 2 83 1 223 2 44 2 50 3 129 1 10 4 203 2 55 2 89 2 266 2 91 5 267 1 233 9 174 1 64 23 139 1 239 1 280 4 285 2 28 2 110 12 215 2 288 2 145 2 184 1 185 11 189 1 221 3 
64 1 110 1 223 1 
64 1 185 1 44 1 
64 6 275 1 280 2 73 1 285 1 50 1 203 1 110 3 28 1 10 1 288 1 215 1 89 1 145 1 91 2 185 3 233 3 221 1 
223 1 44 1 50 2 10 1 203 1 89 1 91 1 231 1 232 1 233 2 133 1 64 12 271 1 175 1 273 1 280 2 284 1 285 2 110 6 28 2 288 1 215 1 145 2 185 6 221 2 
64 6 83 1 50 1 110 3 10 1 55 1 266 1 91 1 185 3 233 2 221 1 
174 1 64 3 0 1 239 1 280 2 10 1 110 2 203 1 215 1 288 1 55 1 89 1 266 1 91 1 185 1 233 2 189 1 
174 1 271 1 64 8 175 1 273 1 83 1 239 1 223 1 280 2 44 1 50 1 203 1 110 4 215 1 288 1 55 1 89 1 266 1 91 2 185 4 267 1 233 2 221 1 
83 1 223 2 44 1 50 2 203 2 10 1 55 1 89 2 266 1 91 2 267 1 233 3 174 1 64 11 271 1 175 1 139 1 273 1 239 1 280 4 73 1 110 5 28 1 288 2 215 2 145 1 185 6 221 1 
0 1 83 1 223 1 44 1 50 3 10 1 203 3 55 1 89 3 266 1 91 3 231 1 267 1 232 1 233 4 133 1 174 1 64 19 271 1 175 1 273 1 239 1 73 1 280 6 284 1 285 2 110 10 28 2 288 3 215 3 145 2 185 9 221 3 
223 1 44 1 50 2 203 2 89 2 91 1 231 1 232 1 233 1 133 1 64 11 271 1 175 1 273 1 73 1 280 4 284 1 285 1 110 4 28 2 288 2 215 2 145 2 185 7 221 1 
174 1 271 1 64 8 175 1 273 1 83 1 239 1 223 1 280 2 44 1 50 1 203 1 110 4 215 1 288 1 55 1 89 1 266 1 91 2 185 4 267 1 233 2 221 1 
223 1 44 1 50 2 10 1 203 1 89 1 91 1 231 1 232 1 233 2 133 1 64 12 271 1 175 1 273 1 280 2 284 1 285 2 110 6 28 2 288 1 215 1 145 2 185 6 221 2 
0 1 223 1 44 1 50 2 203 3 89 3 91 1 231 1 232 1 133 1 233 1 64 12 271 1 175 1 273 1 73 1 280 6 284 1 285 1 110 5 28 2 288 3 215 3 145 2 185 7 221 1 
0 1 223 1 44 1 50 2 10 2 203 3 89 3 91 2 231 1 232 1 133 1 233 4 64 12 271 1 175 1 273 1 69 1 280 6 284 1 285 1 110 5 28 2 288 3 215 3 145 2 185 7 221 1 
64 7 174 2 239 1 83 1 50 1 110 4 10 3 55 3 266 3 91 3 185 3 233 6 221 1 
0 1 223 1 44 1 50 2 203 3 89 3 91 1 231 1 232 1 133 1 233 1 64 12 271 1 175 1 273 1 69 1 280 6 284 1 285 1 110 5 28 2 288 3 215 3 145 2 185 7 221 1 
172 1 182 1 204 1 183 1 162 1 114 1 279 1 
1 1 172 1 211 1 162 1 106 1 279 1 282 1 258 1 182 1 204 1 183 1 114 1 
236 1 3 4 159 4 197 1 274 1 109 1 226 1 8 1 227 1 216 4 251 1 14 1 235 1 
39 1 3 2 159 2 196 1 45 1 109 1 180 1 261 1 8 2 216 2 113 1 251 1 14 1 150 1 
8 1 3 1 56 1 159 1 251 1 216 1 213 1 164 1 291 1 235 1 
236 1 202 1 8 1 3 2 157 1 159 2 251 1 216 2 14 1 37 1 109 1 
236 1 3 4 159 5 197 1 196 1 67 1 274 1 109 2 227 1 8 2 216 5 251 2 218 1 14 3 37 1 235 1 
236 1 3 4 159 5 197 1 196 1 67 1 274 1 109 2 227 1 8 2 216 5 112 1 251 2 14 3 37 1 235 1 
8 1 227 1 76 1 3 1 159 1 251 1 216 1 274 1 14 1 109 1 235 1 
137 1 272 1 3 1 82 1 159 1 100 1 160 1 162 1 279 2 109 2 261 2 8 1 204 2 183 2 216 1 251 1 205 2 60 1 14 2 61 1 188 1 235 1 
3 1 159 1 196 1 160 1 162 1 8 1 261 1 204 1 205 1 60 1 14 1 93 1 61 1 137 1 100 1 279 2 109 1 183 2 251 1 216 1 
3 1 159 1 196 1 160 1 162 1 8 1 261 1 204 1 205 1 230 1 60 1 14 1 93 1 61 1 137 1 279 2 109 1 183 2 251 1 216 1 
3 1 159 1 196 1 122 1 200 1 165 1 204 1 205 1 60 1 14 1 16 1 170 1 63 1 137 1 138 1 178 1 141 1 279 1 183 1 249 1 216 1 219 1 
272 1 65 1 3 3 159 3 178 1 196 1 165 2 225 1 109 1 226 1 142 1 261 1 8 1 216 3 251 1 14 4 16 1 219 1 134 1 220 1 235 1 170 2 
8 1 3 1 159 1 251 1 216 1 33 1 
236 1 39 1 3 6 157 1 159 7 67 1 68 1 109 2 180 1 242 1 47 1 261 1 8 3 33 1 216 7 251 2 218 1 14 3 97 1 37 1 235 2 
3 1 159 1 82 1 160 1 83 2 162 3 4 1 6 2 8 1 88 1 89 2 91 3 93 1 92 1 14 2 94 1 234 1 233 3 236 1 174 1 100 1 239 1 109 2 181 1 110 6 183 2 248 1 251 1 252 1 185 5 188 1 119 1 40 2 50 2 203 2 261 2 204 2 55 2 205 2 266 2 60 2 267 1 61 1 137 1 64 11 272 1 279 2 280 4 288 2 215 2 216 1 292 1 221 2 
154 1 3 1 159 1 256 1 165 3 225 1 259 1 228 1 130 2 11 1 14 2 15 2 16 1 269 1 134 1 169 1 235 1 170 3 65 1 21 2 238 1 178 1 105 1 244 2 216 1 34 1 219 1 220 2 
236 1 8 2 261 1 3 2 159 2 251 1 216 2 33 1 68 1 14 2 225 1 109 1 24 1 
137 1 272 1 3 1 82 1 159 1 160 1 162 1 279 2 109 2 261 2 8 1 204 2 183 2 216 1 251 1 205 2 60 1 230 1 14 2 61 1 188 1 235 1 
39 1 3 1 159 1 196 1 68 1 109 1 180 1 47 1 261 1 8 2 216 1 251 1 14 1 
7 1 75 1 289 1 162 1 85 1 
154 1 82 1 224 1 122 1 85 1 165 1 7 1 204 1 205 1 13 1 60 2 170 1 137 1 63 1 173 1 138 1 178 1 141 1 279 1 75 1 289 1 77 1 183 1 249 1 36 1 188 1 219 1 
279 1 48 1 7 1 243 1 75 1 289 1 204 1 32 1 183 1 
75 1 77 1 36 1 

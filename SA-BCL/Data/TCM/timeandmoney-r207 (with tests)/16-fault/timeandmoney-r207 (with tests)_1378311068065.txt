#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (167,225) 202 (213,284) (213,284) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (167,225) 202 (213,284) (213,284) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (167,225) 202 (213,284) (213,284) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (167,225) 202 (213,284) (213,284) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 215 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 215 43 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 215 43 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 42 (69,108,275) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (4,300,301) (4,300,301) 257 332 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9375 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONSTANT | 7160 | 0 -> 1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | OPERATOR | 1659 | < -> >
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 893 | = null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z | OPERATOR | 1180 | < -> ==
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 1 84 1 213 1 202 1 225 1 196 1 282 1 277 1 80 1 284 1 345 1 
22 1 84 1 213 1 202 1 225 1 196 1 282 1 277 1 80 1 284 1 345 1 
22 1 84 1 213 1 202 1 225 1 196 1 282 1 277 1 80 1 284 1 345 1 
22 1 84 1 213 1 202 1 225 1 196 1 282 1 277 1 80 1 284 1 345 1 
176 2 196 4 215 1 106 2 327 1 247 3 345 1 21 1 70 1 317 1 84 1 22 4 304 1 74 1 277 1 153 2 
187 1 100 1 176 1 196 2 65 1 298 1 282 1 314 1 80 1 345 1 317 1 84 1 22 2 304 1 277 1 227 1 
100 1 176 2 167 1 196 3 65 1 282 1 247 1 345 2 84 1 22 3 277 2 74 1 153 1 
176 4 17 1 167 1 144 1 106 2 215 1 196 9 327 1 247 7 282 1 345 2 21 1 70 1 317 1 84 1 22 9 50 1 304 1 277 2 74 3 43 1 153 4 
176 4 17 1 167 1 144 1 106 2 215 1 196 9 327 1 247 7 282 1 345 2 21 1 70 1 317 1 84 1 22 9 50 1 304 1 277 2 74 3 43 1 153 4 
39 1 216 1 31 1 
39 1 312 1 129 2 
281 2 123 2 326 2 155 2 251 2 208 1 11 2 138 1 
244 1 281 2 326 2 155 2 131 2 2 1 199 1 25 1 288 1 48 1 51 1 28 1 335 1 251 2 226 1 208 1 138 1 118 1 101 2 269 2 270 1 313 1 9 1 299 1 192 2 36 2 217 1 104 1 11 3 316 1 171 1 147 1 347 1 151 1 123 3 349 1 276 1 
45 1 281 1 123 1 326 1 155 1 27 1 160 1 251 1 11 1 138 1 
300 1 4 1 
281 1 155 1 326 1 33 1 216 1 263 1 11 1 39 1 4 1 301 2 123 1 72 1 160 1 88 2 251 1 
212 1 301 1 261 1 272 1 88 1 
39 1 134 1 212 1 301 2 116 1 216 1 272 1 88 2 
301 1 272 1 88 1 
45 1 212 1 281 1 155 1 326 1 68 1 11 1 301 1 27 1 123 1 160 1 88 1 251 1 138 1 
39 1 
39 1 134 1 212 1 301 2 216 1 272 1 310 1 88 2 
99 1 254 1 62 2 140 1 212 2 188 1 216 1 54 1 272 2 67 1 283 1 3 1 39 1 134 1 238 2 301 5 258 2 274 1 88 5 
31 1 208 1 
281 1 155 1 326 1 11 2 123 2 251 2 7 1 53 1 208 2 
64 1 92 1 309 1 
211 1 118 1 244 1 101 1 269 1 2 1 192 1 11 1 151 1 288 1 48 1 123 1 51 1 28 1 335 1 208 1 
118 1 244 1 101 1 269 1 155 1 326 1 79 1 92 1 2 1 192 1 11 2 151 1 288 1 48 1 123 2 28 1 51 1 335 1 319 1 251 1 
281 1 123 3 326 3 155 3 79 1 251 3 208 1 11 3 
45 1 123 1 326 1 155 1 160 1 251 1 11 1 
281 1 123 1 326 1 155 1 160 1 251 1 7 1 53 1 11 1 
244 1 281 2 326 3 155 3 263 1 131 2 2 1 111 1 4 1 25 1 288 1 48 1 72 1 28 1 51 1 160 1 335 1 251 3 226 1 7 1 208 1 138 1 118 1 141 1 101 1 269 1 270 1 313 1 33 1 79 1 192 1 36 1 217 1 11 4 316 1 171 1 147 1 151 1 301 1 123 4 349 1 276 1 319 1 88 1 
18 1 123 2 326 1 155 1 297 1 79 1 251 2 208 1 11 2 
218 1 141 1 281 1 155 3 326 3 33 1 79 2 263 1 11 3 39 1 4 1 301 1 72 1 123 3 160 1 319 1 88 1 251 3 7 1 
281 1 155 2 326 2 79 1 64 1 92 1 11 2 123 2 251 2 7 1 
118 1 101 1 269 1 244 1 2 1 192 1 11 1 151 1 288 1 48 1 123 1 51 1 28 1 335 1 208 1 
118 1 101 1 269 1 244 1 214 1 192 1 11 1 151 1 288 1 48 1 123 1 28 1 335 1 30 1 208 1 
0 1 131 2 92 2 64 2 306 1 25 1 309 2 293 1 168 1 76 1 270 2 294 1 102 1 296 1 217 1 36 4 37 1 104 2 316 1 171 1 147 1 150 1 276 1 124 1 
123 1 326 1 155 1 160 1 33 1 251 1 94 1 11 1 
267 1 18 1 281 1 155 4 326 4 297 1 79 2 331 1 11 5 123 5 319 1 251 5 7 1 208 1 
45 1 123 2 326 2 155 2 160 1 251 2 94 1 11 2 
126 1 275 1 
126 1 275 1 
108 1 42 1 
108 1 42 1 
108 1 42 1 
126 1 275 1 35 1 
126 1 275 1 108 1 42 1 
126 1 275 1 69 1 
126 1 275 1 35 1 
126 1 275 1 35 1 
126 1 275 1 198 1 
126 1 275 1 198 1 
126 1 275 1 198 1 
126 2 166 2 142 1 229 1 195 1 130 1 103 3 113 2 39 1 159 1 301 2 348 1 240 1 275 2 41 2 88 2 252 2 206 1 242 2 
126 1 61 1 243 1 127 1 326 2 155 2 69 1 113 1 95 1 96 1 251 2 208 1 166 1 77 1 103 1 11 2 301 1 123 2 240 1 275 1 41 1 58 1 88 1 242 1 
317 1 304 1 21 1 
317 1 304 1 227 1 
317 3 256 1 26 1 163 1 21 2 227 1 
317 2 256 1 73 1 163 1 21 1 227 1 
317 2 256 2 163 1 21 1 227 1 
62 1 61 1 127 1 129 3 157 2 158 1 114 1 134 1 96 1 338 1 137 1 254 1 99 3 212 4 76 1 312 1 188 2 102 1 272 1 216 1 37 1 55 1 39 2 150 1 238 1 258 1 301 5 302 1 15 2 88 5 44 1 105 2 
212 1 245 1 301 1 88 1 
62 1 61 1 129 4 157 1 114 1 338 1 137 1 99 3 212 2 76 1 312 2 188 2 102 1 216 1 55 1 37 1 39 3 150 1 238 1 258 1 301 3 302 1 274 1 15 2 88 3 105 2 
62 1 61 2 129 7 157 2 114 2 203 1 338 1 137 1 99 5 212 3 76 2 312 3 188 4 102 2 216 1 55 1 37 2 120 1 39 4 150 2 238 1 258 1 301 4 302 1 274 1 15 4 278 1 88 4 105 4 
260 1 244 1 31 1 
244 1 253 1 
132 1 
244 1 335 1 
260 2 244 3 151 1 335 1 179 1 146 1 
244 1 151 1 335 1 
244 1 344 1 
323 1 177 1 294 2 109 1 1 1 20 1 36 1 104 1 334 1 181 1 124 1 320 1 16 1 
323 1 177 1 294 2 109 1 1 1 20 1 36 1 104 1 334 1 181 1 124 1 320 1 16 1 
323 1 177 1 294 2 109 1 1 1 20 1 235 1 36 1 104 1 334 1 181 1 124 1 320 1 16 1 
323 2 177 1 262 1 131 2 20 2 1 2 109 5 307 1 23 1 114 3 24 1 334 2 181 1 185 4 336 1 76 3 270 12 294 9 102 3 217 1 36 25 37 3 104 13 316 1 273 1 171 1 150 3 86 1 276 1 152 3 124 4 320 1 16 2 
323 1 177 1 143 1 294 3 270 1 262 1 109 1 1 1 20 1 131 4 346 1 36 3 217 2 104 2 316 2 171 2 334 1 181 1 124 2 276 2 16 1 
176 1 196 2 107 1 65 1 247 1 282 1 110 1 21 1 200 1 287 1 22 2 26 1 183 1 28 1 227 1 186 1 100 1 118 1 269 1 101 1 169 1 342 1 345 1 192 1 317 2 84 1 193 1 304 1 305 1 277 1 
176 1 196 3 107 1 65 1 282 1 247 2 110 1 21 1 200 1 287 1 22 3 201 1 26 1 183 1 28 1 227 1 186 1 100 1 118 1 269 1 101 1 230 1 145 1 345 1 192 1 317 2 193 1 304 1 305 1 277 1 
176 1 196 2 107 1 65 1 282 1 247 2 110 1 21 1 200 1 287 1 22 2 26 1 28 1 227 1 186 1 100 1 118 1 269 1 101 1 230 1 145 1 192 1 317 2 305 1 304 1 
186 2 228 1 118 1 244 1 101 1 269 1 196 1 107 2 119 1 282 2 345 1 192 1 13 1 237 1 201 1 22 1 264 1 48 1 28 1 117 1 335 1 305 2 277 1 
196 1 107 1 282 1 110 1 21 1 200 1 287 1 22 1 26 1 183 1 28 1 227 1 186 1 118 1 269 1 101 1 169 1 230 1 345 1 192 1 317 2 84 1 193 1 304 1 305 1 277 1 
78 1 
62 1 244 1 219 1 332 1 4 1 134 1 48 2 28 1 335 1 311 1 254 1 99 1 118 1 269 2 101 2 188 1 234 1 272 2 192 2 13 1 300 1 237 1 148 1 257 1 238 1 85 1 258 1 301 2 302 1 88 2 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 134 1 219 1 301 2 272 1 310 1 88 2 332 1 
254 1 62 1 219 1 332 1 300 1 4 1 148 1 238 1 257 1 301 1 258 1 88 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
300 1 4 1 148 1 257 1 219 1 301 1 88 1 332 1 
254 1 62 1 219 1 332 1 300 1 4 1 148 1 238 1 257 1 301 1 258 1 88 1 
177 1 294 1 131 2 306 1 217 1 316 1 147 1 171 1 334 1 25 1 181 1 124 1 276 1 31 1 16 1 
91 1 109 1 131 4 92 11 64 4 286 1 307 1 114 2 25 2 185 3 309 11 266 1 208 1 165 1 75 1 76 1 294 2 270 6 313 1 9 1 102 2 217 2 36 14 37 2 104 8 316 2 171 2 147 1 150 1 86 1 124 1 276 2 152 3 
244 1 326 1 155 1 64 1 131 2 2 1 25 1 288 1 48 1 28 1 51 1 335 1 251 1 208 1 211 1 118 1 269 1 101 1 75 1 270 1 271 1 313 1 9 1 79 1 192 1 217 1 36 2 11 2 121 1 104 1 316 1 171 1 147 1 151 1 123 2 319 1 276 1 350 1 
177 1 131 6 92 6 2 2 221 2 223 2 181 1 48 1 51 2 309 6 226 2 269 3 101 3 270 7 230 1 313 1 9 1 102 2 192 3 11 3 104 7 316 3 147 3 150 2 151 2 276 3 319 1 16 1 280 1 63 1 244 2 155 1 326 1 64 6 109 4 71 2 114 2 334 1 25 3 288 2 28 2 335 2 251 1 32 1 118 2 75 1 76 2 294 7 343 2 79 1 217 3 36 14 37 2 171 3 123 3 124 3 
90 1 244 3 326 1 155 1 156 1 131 4 306 1 25 2 48 2 249 1 28 2 335 2 251 1 340 1 118 2 269 8 101 7 270 1 230 1 342 1 313 1 9 1 79 1 299 2 192 8 217 2 36 2 11 1 104 1 13 1 316 2 171 2 147 2 237 1 149 1 173 1 57 1 123 1 276 2 
324 1 281 1 155 1 326 1 64 1 92 1 131 2 114 1 25 1 309 1 251 1 7 1 75 1 76 1 294 1 270 2 102 1 217 1 37 1 36 3 11 1 104 1 316 1 171 1 147 1 150 1 123 1 124 1 276 1 
168 1 294 1 102 1 109 1 64 1 92 1 131 2 306 1 36 2 217 1 37 1 104 2 316 1 147 1 171 1 25 1 276 1 309 1 
0 1 76 1 294 1 270 2 64 1 92 1 131 2 306 1 36 2 217 1 316 1 147 1 171 1 150 1 25 1 124 1 276 1 309 1 
131 2 92 2 64 2 109 1 306 1 114 1 25 1 309 2 76 1 294 2 270 2 102 1 37 1 217 1 36 4 104 2 316 1 171 1 147 1 150 1 276 1 124 1 
168 1 294 1 156 1 102 1 109 1 64 1 92 1 131 2 36 2 217 1 37 1 104 2 316 1 147 1 171 1 25 1 276 1 309 1 
0 1 76 1 294 1 270 2 156 1 64 1 92 1 131 2 36 2 217 1 316 1 147 1 171 1 150 1 25 1 124 1 276 1 309 1 
156 1 131 2 92 2 64 2 109 1 114 1 25 1 309 2 76 1 294 2 270 2 102 1 37 1 217 1 36 4 104 2 316 1 171 1 147 1 150 1 276 1 124 1 
76 1 270 2 294 2 102 1 109 1 64 2 92 2 131 2 217 1 37 1 36 4 104 2 316 1 147 1 171 1 114 1 150 1 25 1 124 1 276 1 309 2 
244 1 131 2 2 1 25 1 288 1 48 1 28 1 51 1 335 1 226 1 208 1 118 1 269 1 101 1 270 1 313 1 9 1 192 1 36 2 217 1 104 1 11 1 316 1 147 1 171 1 151 1 123 1 276 1 
244 1 128 1 131 2 25 1 288 1 48 1 28 1 335 1 30 1 208 1 118 1 269 1 101 1 214 1 270 1 313 1 9 1 192 1 36 2 217 1 104 1 11 1 316 1 147 1 171 1 151 1 123 1 276 1 
131 2 92 2 64 2 109 1 114 1 25 1 309 2 75 1 76 1 294 2 270 2 102 1 37 1 217 1 36 4 104 2 316 1 171 1 147 1 150 1 276 1 124 1 
244 1 109 1 64 2 92 2 131 2 2 1 221 1 114 1 25 1 288 1 28 1 51 1 335 1 309 2 226 1 118 1 269 1 101 1 76 1 270 2 294 2 342 1 102 1 192 1 36 4 37 1 217 1 104 2 11 1 316 1 147 1 171 1 150 1 151 1 123 1 124 1 276 1 
281 1 155 1 326 1 109 1 131 2 92 1 64 1 114 1 25 1 29 1 309 1 251 1 7 1 75 1 76 1 270 1 294 1 102 1 217 1 37 1 36 3 11 1 104 2 316 1 171 1 147 1 150 1 123 1 276 1 
325 1 131 4 109 3 220 1 5 1 307 1 114 3 49 2 185 2 292 1 143 1 76 3 270 10 294 6 102 3 10 1 191 1 315 1 217 2 36 19 37 3 104 9 255 2 316 2 171 2 150 3 86 1 124 3 276 2 152 1 
325 1 262 2 328 1 66 1 109 1 131 6 19 1 220 2 112 1 307 2 114 3 49 1 185 2 292 2 164 1 339 1 76 2 143 1 294 2 270 12 102 3 10 1 191 1 217 3 36 26 37 3 104 14 255 4 316 3 171 3 150 2 124 1 276 3 152 2 
177 1 262 1 131 6 220 2 307 3 181 1 49 1 185 4 143 1 270 19 102 4 10 1 191 1 315 1 104 17 316 3 150 4 56 1 152 3 276 3 16 1 325 1 328 1 109 4 19 1 66 1 112 1 114 4 334 1 292 1 164 1 339 1 76 4 294 7 37 4 36 36 217 3 255 4 171 3 86 1 124 3 
177 1 262 2 131 8 220 2 307 3 181 1 49 1 185 4 143 1 270 16 102 4 10 1 191 1 315 1 104 17 316 4 150 3 56 1 152 3 276 4 16 1 325 1 328 1 109 3 19 1 66 1 112 1 114 4 334 1 292 1 164 1 339 1 76 3 294 7 37 4 36 33 217 4 255 4 171 4 86 1 124 4 
177 1 91 1 325 1 262 1 328 1 66 1 19 1 131 4 109 5 220 1 112 1 307 2 114 5 334 1 181 1 49 1 185 3 292 1 164 1 339 1 76 5 143 1 270 18 294 9 102 5 10 1 191 1 217 2 36 37 37 5 104 19 316 2 255 4 171 2 150 5 86 1 124 4 276 2 152 3 16 1 
90 1 244 1 131 2 178 1 333 1 25 1 249 1 28 1 335 1 251 2 118 1 269 2 75 1 101 2 270 1 313 1 9 1 233 1 190 1 299 2 192 2 217 1 36 2 11 2 104 1 316 1 171 1 147 1 123 2 303 1 276 1 
118 1 101 2 269 2 230 1 342 1 231 1 110 1 21 1 192 2 200 1 317 2 26 1 28 1 183 1 304 1 305 1 135 1 174 1 227 1 
118 1 101 1 269 1 230 1 110 1 21 1 192 1 83 1 200 1 317 2 26 1 183 1 28 1 304 1 305 1 174 1 227 1 
118 1 244 1 101 1 269 1 231 1 192 1 47 1 13 1 237 1 48 1 28 1 117 1 335 1 305 1 
118 1 101 1 269 1 230 1 231 1 110 1 21 1 192 1 200 1 317 2 26 1 183 1 28 1 304 1 305 1 135 1 174 1 227 1 
197 1 
99 1 39 1 188 1 216 1 54 1 67 1 31 1 
99 1 254 1 62 1 238 1 188 1 258 1 295 1 52 1 
89 2 260 2 129 12 179 1 134 3 48 1 182 1 99 7 101 1 269 1 312 6 188 7 102 2 272 5 192 1 150 2 151 1 238 3 14 2 15 6 105 6 62 3 244 6 71 2 114 2 72 2 28 1 290 2 161 2 335 1 253 3 209 2 254 3 210 1 118 2 76 2 170 1 37 2 38 2 39 6 85 1 258 3 301 5 302 1 88 5 
62 2 129 6 328 1 19 1 112 1 307 1 114 2 134 1 204 1 185 1 164 1 339 1 209 2 99 8 254 2 312 3 188 5 76 2 102 2 272 1 216 2 81 1 37 2 39 5 150 2 238 2 85 1 301 1 258 2 302 1 152 1 15 5 40 1 88 1 105 5 
45 1 62 1 281 1 155 1 326 1 68 1 329 1 334 1 224 1 27 1 160 1 251 1 209 2 138 1 254 1 99 2 188 2 76 1 102 2 11 1 236 1 238 1 258 1 301 1 123 1 40 1 88 1 16 1 
254 1 99 1 62 1 188 1 54 1 216 1 67 1 39 1 238 1 258 1 
99 5 188 5 312 5 76 2 102 2 129 10 37 2 71 1 114 2 39 5 150 2 15 5 40 1 105 5 209 2 
39 1 134 1 301 1 216 1 272 1 88 1 
62 2 244 1 46 2 134 2 48 2 28 1 97 1 335 1 311 1 254 1 99 2 118 1 269 4 101 4 188 2 189 1 234 1 272 4 192 4 13 1 237 1 238 2 85 2 258 2 301 3 302 2 318 1 274 1 88 3 
244 1 281 2 326 2 155 2 131 2 2 1 25 1 288 1 48 1 51 1 28 1 335 1 251 2 226 1 208 1 138 1 118 1 269 1 101 1 270 1 313 1 192 1 36 1 217 1 11 3 316 1 147 1 171 1 151 1 123 3 349 1 276 1 
254 1 99 1 62 1 312 2 188 2 129 4 216 2 20 1 39 4 238 1 85 1 258 1 302 1 15 2 105 2 
41 1 322 1 242 1 
142 1 58 1 41 1 285 1 242 1 
41 1 322 1 242 1 
41 1 322 1 242 1 
308 1 41 1 242 1 
308 1 41 1 242 1 
308 1 41 1 242 1 
41 1 242 1 
126 1 275 1 
177 1 270 1 294 2 262 1 109 1 131 4 36 2 217 2 104 1 316 2 171 2 334 1 181 1 124 1 276 2 16 1 
334 1 181 1 177 1 294 1 124 1 31 1 16 1 
268 1 76 1 270 2 294 2 102 1 131 2 109 1 217 1 37 1 36 4 104 2 316 1 171 1 114 1 150 1 124 1 276 1 
307 1 270 1 152 1 185 1 36 2 104 1 
177 1 91 1 262 2 20 1 109 6 131 4 286 1 114 2 334 4 224 1 181 1 185 2 337 1 76 3 294 13 270 14 102 3 37 2 36 27 217 2 104 13 236 1 316 2 171 2 150 2 86 1 152 2 124 7 276 2 16 4 
270 1 185 1 36 1 
152 1 36 1 104 1 
268 1 76 1 270 3 294 3 102 1 131 2 109 1 217 1 36 6 37 1 71 1 104 3 316 1 171 1 114 1 150 1 276 1 124 2 
328 1 109 1 131 2 19 1 112 1 307 1 114 2 185 1 164 1 339 1 143 1 76 2 270 6 294 2 102 2 36 12 217 1 37 2 104 6 316 1 171 1 150 2 152 1 276 1 124 1 
76 1 270 3 294 2 102 1 109 1 36 6 104 3 236 1 334 1 124 1 16 1 
177 1 262 1 131 2 109 3 20 1 334 3 224 1 181 1 337 1 76 1 270 6 294 6 102 1 217 1 36 12 104 6 316 1 236 1 171 1 276 1 124 3 16 3 
143 1 76 2 294 5 270 5 102 2 131 2 109 2 217 1 36 10 104 5 316 1 236 1 171 1 334 2 224 1 276 1 124 3 16 2 
143 1 294 1 102 1 131 2 109 1 217 1 37 1 36 2 104 2 316 1 171 1 276 1 
76 1 143 1 270 2 294 2 102 1 131 2 109 1 217 1 37 1 36 4 104 2 316 1 171 1 114 1 150 1 124 1 276 1 
143 1 270 2 294 2 262 1 131 6 109 1 315 1 36 3 217 3 104 1 316 3 171 3 334 1 276 3 124 1 337 1 16 1 
177 1 262 2 131 10 109 5 24 1 307 1 23 1 114 3 334 3 181 1 185 4 337 1 268 1 143 1 76 4 270 15 294 11 102 4 315 1 217 5 36 28 37 3 104 13 236 1 273 1 316 5 171 5 150 3 86 1 276 5 152 3 124 6 16 3 
177 1 143 1 294 1 270 1 131 2 217 1 36 2 104 1 112 1 316 1 171 1 307 1 334 1 181 1 124 1 276 1 185 1 152 1 16 1 
177 1 131 4 109 1 112 1 307 1 114 1 334 1 181 1 185 2 268 1 143 1 270 2 294 2 102 1 36 5 217 2 37 1 104 3 316 2 171 2 86 1 124 1 276 2 152 1 16 1 
177 1 262 1 328 1 109 1 131 6 19 1 112 1 307 1 114 2 334 1 181 1 185 1 164 1 339 1 268 1 143 1 76 2 270 7 294 3 102 2 36 13 217 3 37 2 104 6 316 3 171 3 150 2 152 1 276 3 124 2 16 1 
177 1 262 1 328 1 109 2 131 6 19 1 112 1 307 1 114 2 334 1 181 1 185 1 164 1 339 1 268 1 143 1 76 1 270 4 294 4 102 2 36 11 217 3 37 2 104 7 316 3 171 3 150 1 152 1 276 3 124 2 16 1 
177 1 143 1 294 1 270 1 131 2 217 1 36 2 104 1 112 1 316 1 171 1 307 1 334 1 181 1 124 1 276 1 185 1 152 1 16 1 
328 1 109 1 131 2 19 1 112 1 307 1 114 2 185 1 164 1 339 1 143 1 76 2 270 6 294 2 102 2 36 12 217 1 37 2 104 6 316 1 171 1 150 2 152 1 276 1 124 1 
177 1 262 2 328 1 109 2 131 8 19 1 112 1 307 1 114 2 334 1 181 1 185 1 164 1 339 1 268 1 143 1 76 1 270 5 294 4 102 2 36 12 217 4 37 2 104 7 316 4 171 4 150 1 276 4 152 1 124 2 16 1 
262 2 328 1 109 3 131 8 19 1 112 1 307 1 114 3 185 1 164 1 339 1 143 1 76 2 270 7 294 6 102 3 315 1 36 16 217 4 37 3 104 9 316 4 171 4 150 2 276 4 152 1 124 3 
177 1 294 4 270 1 109 2 36 2 104 1 334 2 181 2 124 2 16 2 
177 1 262 2 328 1 109 1 131 8 19 1 112 1 307 1 114 2 334 1 181 1 185 1 164 1 339 1 143 1 76 1 270 5 294 3 102 2 315 1 36 12 217 4 37 2 104 7 316 4 171 4 150 1 276 4 152 1 124 2 16 1 
18 1 8 1 123 1 297 1 251 1 208 1 11 1 
18 1 8 1 232 1 297 1 82 1 11 1 172 1 123 1 184 1 279 1 251 1 208 1 
237 1 118 1 244 1 269 1 101 1 48 1 28 1 335 1 31 1 192 1 13 1 
118 1 244 1 101 1 269 1 155 1 326 1 79 1 192 1 11 2 151 1 288 1 48 1 123 2 51 1 28 1 335 1 251 1 208 1 
118 1 244 3 101 1 269 1 155 1 326 2 33 1 344 1 263 1 79 1 46 1 192 1 11 2 151 2 288 1 123 2 160 1 51 1 28 1 335 2 251 2 175 1 208 1 
118 1 244 3 101 2 269 2 155 1 326 2 33 1 344 1 263 1 79 1 46 1 192 2 11 2 180 1 151 2 288 1 123 2 160 1 28 1 335 2 251 2 30 1 175 1 208 1 
154 1 259 1 118 1 260 1 101 3 269 3 244 4 216 1 344 1 272 1 46 1 192 3 39 1 180 1 151 1 48 1 301 2 72 1 28 1 335 1 88 2 175 1 253 1 
118 1 260 1 101 3 269 3 244 4 216 1 344 1 272 1 46 1 192 3 39 1 180 1 151 1 48 1 301 2 72 1 28 1 290 1 335 1 88 2 175 1 253 1 
118 1 269 1 101 1 28 1 192 1 340 1 
341 1 118 2 101 1 269 1 244 1 192 1 179 1 151 1 48 1 28 1 335 1 59 1 207 1 
244 1 177 1 326 1 155 1 131 4 2 1 221 1 334 1 223 1 181 1 25 2 288 1 28 1 51 1 335 1 251 1 226 1 118 1 75 1 101 1 269 1 294 1 342 1 79 1 190 1 192 1 217 2 11 2 316 2 171 2 147 2 151 1 123 2 124 1 276 2 16 1 
89 1 62 2 260 1 244 2 67 1 134 1 48 1 72 1 290 1 161 1 253 1 99 1 254 2 269 1 101 1 212 1 188 1 189 1 216 1 54 1 272 2 192 1 38 1 39 1 238 2 258 2 301 3 88 3 
210 1 260 1 118 2 101 2 269 2 244 2 342 1 192 2 179 1 151 1 28 1 335 1 340 1 
118 1 101 4 269 4 244 1 342 1 192 4 13 1 237 1 180 1 48 1 239 1 28 1 335 1 
341 1 118 2 101 1 269 1 244 1 192 1 151 1 28 1 136 1 335 1 87 1 32 1 207 1 
317 1 118 1 269 1 101 1 48 1 28 1 304 1 110 1 192 1 227 1 
90 1 118 1 101 2 269 2 244 1 342 1 230 1 233 1 192 2 28 1 335 1 
90 1 118 2 101 4 269 5 244 3 342 1 46 1 192 5 13 1 237 1 149 1 48 1 239 1 173 1 28 2 335 2 
90 1 118 2 101 4 269 5 244 3 342 1 46 1 192 5 13 1 122 1 237 1 48 1 239 1 173 1 28 2 335 2 
118 1 244 1 101 1 269 1 155 1 326 1 79 1 192 1 11 2 151 1 288 1 48 1 123 2 28 1 335 1 251 1 30 1 208 1 
341 1 118 2 101 1 269 1 244 1 46 1 192 1 179 1 151 1 28 1 335 1 59 1 207 1 
178 1 12 1 11 1 333 1 123 1 289 1 303 1 205 1 251 1 
194 1 205 1 321 1 
133 1 289 1 205 1 208 1 12 1 
194 1 141 1 212 1 33 1 216 1 263 1 34 1 12 2 39 1 4 1 133 2 301 2 72 1 160 1 289 2 205 1 88 2 321 1 208 1 
100 1 176 1 65 1 31 1 
100 1 22 1 176 1 196 1 65 1 277 1 345 1 
186 1 22 1 282 1 
100 1 125 1 22 3 84 1 176 1 196 3 65 1 298 2 277 1 250 1 345 1 330 1 
100 1 22 2 176 1 106 1 196 2 65 1 247 1 277 1 345 1 
317 1 22 1 84 1 176 1 196 1 304 1 277 1 345 1 21 1 153 1 70 1 
100 1 22 1 84 1 176 1 196 1 277 1 345 1 
100 2 22 1 84 1 196 1 65 1 277 1 345 1 
100 1 176 1 196 2 345 2 84 1 22 2 248 1 241 1 6 1 277 2 
100 1 176 2 144 1 196 3 65 1 247 2 345 1 84 1 22 3 50 1 277 1 74 1 153 1 
100 1 176 1 246 1 196 2 65 1 247 1 345 1 21 1 317 2 84 1 22 2 26 1 304 1 277 1 227 1 
100 1 176 2 196 4 106 1 327 1 65 1 247 2 345 2 84 1 22 4 277 2 74 1 153 1 
100 1 22 1 84 1 176 1 196 1 65 1 277 1 345 1 
125 1 100 2 176 3 196 4 298 1 65 2 247 2 345 1 330 1 22 4 277 1 74 1 265 1 153 1 
100 1 176 1 17 1 196 2 247 1 65 1 93 1 345 1 84 1 22 2 291 1 277 1 
125 1 100 1 176 1 196 3 298 2 65 1 345 1 330 2 84 1 22 3 277 1 60 1 
176 2 115 1 162 2 98 1 
222 1 22 1 84 1 196 1 277 1 345 1 
100 1 22 2 84 1 176 1 196 2 50 1 65 1 247 1 277 1 345 1 
139 1 
100 1 22 1 84 1 176 1 196 1 65 1 277 1 345 1 
100 1 176 1 196 3 247 1 298 1 65 1 345 1 84 1 22 3 50 1 277 1 
176 1 74 1 265 1 153 1 
100 1 176 1 

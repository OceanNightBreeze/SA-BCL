#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 143 (220,342) (220,342) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 143 (220,342) (220,342) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 143 (220,342) (220,342) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 143 (220,342) (220,342) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 235 48 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 235 48 58 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 235 204 243 11 (72,262) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 121 254 337 (3,301) (3,301) 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 235 241 30 329 273 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 235 339 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 121 254 337 (3,301) (3,301) 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 121 254 337 (3,301) (3,301) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 95 264 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 235 48 277 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 235 241 71 134 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 235 48 239 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 235 48 252 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 235 204 243 11 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 235 204 243 11 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 235 48 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 235 48 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 235 59 338 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 235 59 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 235 59 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 235 59 338 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 235 59 338 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 235 48 277 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 45 296 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 235 48 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 121 254 337 265 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 121 254 337 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 235 241 30 329 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 121 254 337 (3,301) (3,301) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 121 254 337 (3,301) (3,301) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 235 204 243 131 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 235 241 30 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 235 241 71 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 235 241 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 235 251 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 235 241 30 90 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 235 204 179 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 235 136 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 121 254 337 (3,301) (3,301) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | + -> -
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | CONSTANT | 907 | 0 -> -1
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4583 | % -> <<
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
168 1 170 1 247 1 67 1 172 1 70 3 8 1 124 2 24 1 51 2 126 1 214 2 341 3 
34 1 8 1 271 1 124 1 51 1 67 1 220 1 143 1 70 1 341 1 342 1 
34 1 8 1 271 1 124 1 51 1 67 1 220 1 143 1 70 1 341 1 342 1 
34 1 8 1 271 1 124 1 51 1 67 1 220 1 143 1 70 1 341 1 342 1 
34 1 8 1 271 1 124 1 51 1 67 1 220 1 143 1 70 1 341 1 342 1 
168 1 170 1 247 3 187 1 67 1 141 1 88 2 70 4 149 1 44 1 124 1 24 1 51 1 126 2 214 3 28 1 341 4 12 1 
34 1 170 1 67 1 328 1 70 2 151 1 44 1 8 1 197 1 124 1 24 1 51 1 214 1 198 1 28 1 341 2 
187 1 141 1 88 2 191 1 149 1 44 1 8 1 51 2 12 1 168 3 170 1 247 7 172 1 67 1 70 9 210 1 292 1 294 1 124 2 24 1 126 4 214 5 28 1 341 9 
187 1 141 1 88 2 191 1 149 1 44 1 8 1 51 2 12 1 168 3 170 1 247 7 172 1 67 1 70 9 210 1 292 1 294 1 124 2 24 1 126 4 214 5 28 1 341 9 
135 1 325 1 111 1 1 1 39 1 145 1 288 1 290 1 155 1 231 1 315 1 234 1 133 1 132 1 
81 1 
231 2 233 1 81 1 319 1 298 1 237 1 132 2 133 1 
139 1 91 1 153 1 154 1 268 1 269 2 158 1 182 1 183 2 272 1 231 5 232 1 233 1 216 2 81 1 319 1 298 2 133 2 132 5 
63 1 
218 1 23 2 81 1 
290 2 325 2 135 1 155 2 74 1 111 2 39 2 234 2 
135 1 35 1 185 1 82 1 2 1 39 2 4 1 144 1 155 3 48 1 228 1 50 1 274 1 56 1 234 3 235 1 325 2 282 1 108 2 109 1 111 2 205 1 176 1 175 1 287 2 177 1 333 2 290 2 21 2 78 1 130 1 80 1 184 1 
290 1 325 1 135 1 155 1 111 1 1 1 39 1 234 1 145 1 288 1 
245 1 248 1 303 1 288 1 290 1 155 1 49 1 54 1 231 1 234 1 81 1 319 1 340 1 132 1 
325 1 245 1 111 1 39 1 303 1 288 1 290 1 155 1 49 1 231 2 54 1 234 1 81 1 319 1 132 2 
188 1 231 1 298 1 132 1 133 1 
13 1 231 2 233 1 81 1 319 1 298 1 132 2 133 1 
231 1 298 1 132 1 
325 1 257 1 261 1 111 1 39 1 288 1 290 2 155 2 74 1 234 2 106 1 
246 1 262 1 304 1 
35 1 108 1 109 1 82 1 2 1 4 1 287 1 144 1 21 1 155 1 74 1 22 1 78 1 234 1 130 1 184 1 
63 1 
35 1 107 1 325 1 82 1 108 1 109 1 2 1 262 1 39 1 4 1 287 1 144 1 290 1 21 1 155 2 78 1 234 2 130 1 184 1 344 1 
107 2 325 4 257 1 248 1 260 1 111 1 189 1 39 4 290 5 155 5 74 1 55 1 234 5 344 1 
290 1 325 1 155 1 39 1 234 1 145 1 288 1 
290 3 107 1 325 3 155 3 111 1 74 1 39 3 234 3 
290 1 325 1 155 1 39 1 234 1 145 1 288 1 
325 1 257 1 111 1 261 1 39 1 288 1 290 1 155 1 234 1 
35 1 135 1 185 1 82 1 257 1 2 1 303 1 39 3 4 1 144 1 155 4 48 1 49 1 50 1 228 1 274 1 54 1 231 1 234 4 58 1 235 1 325 3 107 1 282 1 109 1 245 1 108 1 111 2 205 1 176 1 287 1 177 1 288 1 333 2 290 3 21 1 75 1 78 1 130 1 184 1 344 1 132 1 
107 1 325 1 260 1 248 1 39 1 288 1 290 2 155 2 74 1 234 2 106 1 
107 2 325 3 257 1 245 1 111 1 171 1 39 3 303 1 288 1 290 3 155 3 75 1 49 1 231 1 54 1 234 3 81 1 344 1 132 1 
107 1 325 2 246 1 257 1 111 1 39 2 262 1 290 2 155 2 234 2 
35 1 108 1 109 1 82 1 2 1 4 1 287 1 144 1 21 1 155 1 74 1 78 1 234 1 130 1 184 1 
35 1 108 1 82 1 4 1 287 1 144 1 147 1 21 1 155 1 74 1 312 1 78 1 234 1 130 1 184 1 
243 1 72 1 185 1 282 1 186 1 204 1 205 1 274 1 176 1 177 1 235 1 11 1 333 2 
325 1 112 1 39 1 288 1 290 1 155 1 54 1 234 1 
213 1 26 1 122 1 
15 1 219 1 213 2 253 1 26 2 194 1 
213 1 26 1 
213 1 26 1 
253 1 194 1 
253 1 194 1 
253 1 194 1 
97 1 213 1 26 1 
97 1 213 1 26 1 
97 1 213 1 26 1 
242 1 213 1 26 1 
242 1 213 1 26 1 
242 1 213 1 26 1 
258 1 39 2 267 1 223 1 155 2 311 1 231 1 162 1 164 1 234 2 325 2 14 1 173 1 174 1 286 1 330 1 332 1 122 1 290 2 74 1 293 1 213 1 26 1 132 1 
323 1 258 3 219 1 68 1 286 2 192 1 209 1 223 2 332 2 20 2 293 2 213 2 275 1 231 2 79 1 26 2 164 1 81 1 132 2 
141 1 28 2 328 1 222 2 62 1 
44 1 141 1 28 1 
44 1 28 1 328 1 
141 2 28 3 328 1 222 1 62 1 217 1 
141 1 28 2 328 1 222 1 146 1 62 1 
218 1 37 1 42 2 153 2 269 1 313 1 272 1 231 5 233 1 57 1 60 2 319 1 321 1 280 1 243 1 281 1 14 1 204 1 173 1 330 1 334 1 23 3 183 1 182 3 27 1 131 1 216 1 81 2 298 1 256 2 132 5 133 4 
218 3 188 5 37 1 193 1 152 1 154 1 153 6 226 1 269 2 196 5 160 1 313 2 272 1 231 9 233 1 57 3 60 6 319 1 321 3 243 3 204 3 330 4 23 9 76 1 183 2 182 8 27 2 131 3 216 2 81 5 32 1 298 6 256 6 132 9 133 7 
218 2 42 1 154 1 153 2 269 1 313 1 231 3 57 1 319 1 60 2 280 1 321 1 243 1 281 1 204 1 330 1 23 4 183 1 182 3 27 1 216 1 131 1 81 3 133 2 132 3 256 2 
218 3 193 1 42 2 152 1 154 1 153 4 226 1 269 1 313 1 231 4 57 2 319 1 60 4 280 1 321 2 243 2 281 1 204 2 330 2 23 7 183 1 182 5 27 1 216 1 131 2 81 4 256 4 132 4 133 3 
322 1 
63 1 
45 1 144 1 
82 1 4 1 144 1 
144 1 104 1 
4 1 144 1 
181 2 43 1 82 1 4 1 144 3 212 1 
301 1 36 1 3 1 69 1 331 1 148 1 121 1 337 1 229 1 99 1 128 1 254 1 
36 1 273 1 229 1 128 2 329 1 30 1 69 1 235 1 331 1 241 1 
36 1 185 1 205 1 176 1 69 1 177 1 331 1 93 1 333 2 229 1 128 1 339 1 235 1 
301 1 36 1 3 1 69 1 331 1 121 1 337 1 229 1 99 1 128 1 254 1 
301 1 36 1 3 1 69 1 331 1 121 1 337 1 229 1 99 1 128 1 254 1 
108 1 64 2 66 2 285 1 4 1 287 1 144 1 120 1 70 1 211 2 19 1 21 1 156 1 8 2 96 1 124 1 51 1 78 1 130 1 184 1 200 1 341 1 345 1 
141 1 263 1 307 1 150 1 44 1 8 1 51 1 230 1 166 1 108 1 64 1 66 1 67 1 287 1 328 1 70 1 211 1 180 1 335 1 21 1 124 1 78 1 28 2 341 1 184 1 217 1 
141 1 86 1 307 1 150 1 44 1 8 1 51 1 230 1 166 1 170 1 247 1 108 1 64 1 66 1 67 1 287 1 328 1 70 2 211 1 180 1 335 1 21 1 124 1 24 1 214 1 78 1 28 2 341 2 184 1 217 1 
141 1 263 1 307 1 150 1 44 1 8 1 51 1 200 1 199 1 166 1 170 1 108 1 247 2 64 1 66 1 287 1 328 1 70 3 211 1 180 1 335 1 21 1 124 1 24 1 214 1 78 1 28 2 341 3 184 1 217 1 
141 1 263 1 307 1 44 1 8 1 199 1 166 1 170 1 108 1 247 2 64 1 66 1 287 1 328 1 70 2 211 1 180 1 21 1 24 1 214 1 78 1 28 2 341 2 184 1 217 1 
167 1 
303 1 4 1 264 1 144 1 40 1 153 1 269 1 155 1 156 1 46 1 157 1 95 1 49 1 313 1 272 1 54 1 231 3 233 1 234 1 245 1 108 2 248 1 285 1 207 1 287 2 288 1 290 1 21 2 183 1 182 1 78 1 130 2 29 1 216 1 340 1 184 1 298 2 132 3 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 3 233 1 234 1 29 1 340 1 298 1 237 1 132 3 
245 1 248 1 303 1 264 1 288 1 290 1 269 1 155 1 46 1 95 1 49 1 183 1 272 1 54 1 231 2 234 1 216 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 155 1 46 1 95 1 49 1 54 1 231 2 234 1 29 1 340 1 132 2 
245 1 248 1 303 1 264 1 288 1 290 1 269 1 155 1 46 1 95 1 49 1 183 1 272 1 54 1 231 2 234 1 216 1 29 1 340 1 132 2 
36 1 282 1 185 1 108 1 205 1 87 1 176 1 287 1 69 1 177 1 309 1 333 2 21 1 48 1 274 1 277 1 130 1 235 1 
243 1 325 1 36 1 282 1 185 1 257 1 111 1 204 1 205 1 39 1 176 1 69 1 177 1 178 1 250 1 333 2 290 1 155 1 274 1 57 1 234 1 131 1 235 1 321 1 
185 1 282 1 186 1 205 1 274 1 176 1 177 1 333 2 63 1 
134 1 185 1 282 1 205 1 274 1 176 1 177 1 235 1 250 1 333 2 241 1 71 1 
107 1 325 1 282 1 185 1 205 1 39 1 176 1 177 1 250 1 333 2 290 1 155 1 48 1 274 1 234 1 235 1 239 1 344 1 
107 1 325 1 108 1 282 1 185 1 205 1 39 1 176 1 287 1 177 1 250 1 333 2 290 1 21 1 155 1 48 1 274 1 252 1 130 1 234 1 235 1 344 1 
246 1 36 2 186 1 282 1 185 1 205 1 262 1 304 1 176 1 221 1 177 1 69 2 333 2 123 1 274 1 25 1 57 1 321 1 
243 1 185 1 282 1 186 1 204 1 205 1 274 1 176 1 177 1 235 1 11 1 333 2 
243 1 246 1 36 2 186 1 282 1 185 1 204 1 205 1 262 1 304 1 176 1 177 1 69 2 333 2 274 1 57 1 131 1 235 1 321 1 
246 1 36 2 282 1 185 1 205 1 262 1 304 1 87 1 176 1 221 1 177 1 69 2 333 2 123 1 274 1 25 1 57 1 321 1 
243 1 185 1 282 1 204 1 205 1 274 1 176 1 87 1 177 1 235 1 11 1 333 2 
243 1 246 1 36 2 282 1 185 1 204 1 205 1 262 1 304 1 87 1 176 1 177 1 69 2 333 2 274 1 57 1 131 1 235 1 321 1 
243 1 246 1 282 1 185 1 36 2 204 1 205 1 262 1 304 1 176 1 177 1 69 2 333 2 274 1 57 1 131 1 235 1 321 1 
35 1 185 1 282 1 108 1 109 1 82 1 205 1 2 1 176 1 4 1 287 1 177 1 144 1 333 2 21 1 155 1 48 1 50 1 274 1 78 1 234 1 130 1 235 1 184 1 
35 1 185 1 282 1 108 1 82 1 205 1 176 1 4 1 287 1 177 1 144 1 147 1 308 1 333 2 21 1 155 1 48 1 312 1 274 1 78 1 234 1 130 1 235 1 184 1 
243 1 246 1 36 2 282 1 185 1 204 1 205 1 262 1 304 1 176 1 177 1 69 2 250 1 333 2 274 1 57 1 131 1 235 1 321 1 
35 1 36 2 82 1 185 1 2 1 262 1 304 1 86 1 4 1 144 1 155 1 50 1 274 1 57 1 102 1 234 1 235 1 321 1 243 1 246 1 109 1 108 1 282 1 204 1 205 1 176 1 287 1 69 2 177 1 333 2 21 1 78 1 131 1 184 1 
257 1 185 1 36 2 39 1 262 1 304 1 89 1 155 1 274 1 234 1 57 1 235 1 321 1 243 1 325 1 282 1 246 1 111 1 204 1 205 1 176 1 177 1 69 2 250 1 333 2 290 1 131 1 
185 1 284 1 205 1 176 1 338 1 59 1 177 1 235 1 236 1 333 2 93 1 92 1 
185 1 284 1 205 1 176 1 338 1 59 1 177 1 235 1 236 1 333 2 93 1 92 1 
185 1 284 1 205 1 176 1 338 1 59 1 177 1 235 1 236 1 333 2 93 1 92 1 
185 1 284 1 205 1 176 1 338 1 59 1 177 1 235 1 236 1 333 2 93 1 92 1 
185 1 284 1 205 1 176 1 338 1 59 1 177 1 235 1 236 1 333 2 93 1 92 1 
323 1 293 1 219 1 213 1 275 1 286 1 100 1 26 1 332 1 223 1 
174 1 122 1 
293 1 213 1 161 1 286 1 26 1 118 1 332 1 223 1 94 1 
291 1 97 1 
242 1 15 1 318 1 
323 1 258 2 219 1 68 1 286 1 209 1 223 1 332 1 20 1 293 1 213 1 275 1 231 1 79 1 164 1 26 1 81 1 132 1 
323 1 258 2 219 1 68 1 286 1 209 1 223 1 332 1 20 1 293 1 213 1 275 1 231 1 79 1 164 1 26 1 81 1 132 1 
323 1 258 2 219 1 68 1 286 1 209 1 223 1 332 1 20 1 293 1 213 1 275 1 231 1 79 1 164 1 26 1 81 1 132 1 
291 1 15 1 97 1 
291 1 15 1 97 1 
242 1 318 1 
242 1 15 1 318 1 
311 1 162 1 
258 1 138 1 39 2 267 1 223 1 155 2 311 1 231 1 162 1 234 2 325 2 14 1 173 1 174 1 286 1 330 1 332 1 122 1 290 2 20 1 74 1 293 1 213 1 79 1 26 1 132 1 133 1 
36 1 185 1 282 1 205 1 114 1 176 1 69 1 177 1 309 1 17 1 250 1 333 2 290 2 155 2 47 1 48 1 274 1 277 1 234 2 235 1 61 1 
108 1 66 1 285 1 140 1 4 1 287 1 144 1 120 1 21 1 156 1 78 1 130 1 184 1 343 1 
108 1 66 1 141 1 263 1 16 1 328 1 287 1 180 1 335 1 44 1 21 1 78 1 28 2 166 1 184 1 320 1 217 1 343 1 
108 2 66 1 141 1 263 1 86 1 16 1 328 1 287 2 180 1 335 1 44 1 21 2 78 1 28 2 184 1 166 1 320 1 217 1 343 1 
108 1 66 1 141 1 263 1 328 1 287 1 18 1 180 1 335 1 44 1 21 1 78 1 28 2 166 1 184 1 320 1 217 1 
302 1 
153 1 269 1 158 1 183 1 182 1 272 1 232 1 216 1 319 1 81 1 
218 5 243 2 204 2 153 5 251 1 23 10 182 5 57 2 131 2 60 5 81 5 279 1 321 2 256 5 
231 1 233 1 81 1 319 1 298 1 132 1 
82 1 259 2 0 1 85 1 4 2 144 2 310 1 40 2 154 1 153 2 269 2 156 1 157 1 313 2 272 1 231 3 233 2 108 4 326 1 65 1 285 1 115 1 249 1 207 1 287 4 21 4 183 2 182 2 78 3 130 2 216 2 184 2 298 4 132 3 
63 1 
218 1 153 1 269 1 272 1 231 1 233 1 319 1 244 1 203 1 117 1 23 1 182 1 183 1 216 1 81 2 298 1 132 1 
82 1 108 1 206 1 4 1 287 1 144 1 212 1 45 1 269 1 21 1 183 1 272 1 296 1 78 2 130 1 216 1 184 1 
218 3 83 1 90 1 142 1 225 1 153 4 269 1 272 1 231 1 233 1 163 1 57 2 60 5 319 1 241 1 321 2 324 1 243 2 204 2 208 1 119 1 23 6 182 7 183 1 30 1 216 1 131 2 81 4 298 1 132 1 256 5 
135 1 1 1 39 1 145 1 265 1 153 2 269 1 155 1 272 1 231 1 315 1 234 1 165 1 279 1 321 2 325 1 111 1 204 1 208 2 288 1 179 1 290 1 183 1 182 2 337 1 254 1 216 1 132 1 
135 1 35 1 185 1 82 1 2 1 39 2 4 1 144 1 155 3 48 1 228 1 50 1 274 1 234 3 235 1 325 2 108 1 109 1 282 1 111 2 205 1 176 1 287 1 177 1 333 2 290 2 21 1 78 1 130 1 184 1 
218 2 40 1 153 2 269 1 23 4 183 1 313 1 182 1 272 1 229 1 216 1 60 2 319 2 81 4 256 2 
275 1 286 1 162 1 305 1 332 1 
84 1 286 1 332 1 
84 1 286 1 332 1 
84 1 286 1 332 1 
286 1 317 1 332 1 
286 1 317 1 332 1 
286 1 317 1 332 1 
286 1 332 1 
213 1 26 1 
337 1 254 1 265 1 121 1 
185 1 36 2 205 1 176 1 177 1 69 2 93 1 333 2 123 1 25 1 57 1 321 1 
243 1 185 1 36 2 204 1 205 1 176 1 177 1 69 2 93 1 333 2 57 1 131 1 235 1 321 1 
185 1 205 1 337 1 176 1 254 1 177 1 121 1 333 2 93 1 
185 3 205 3 176 3 329 1 30 1 177 3 235 1 105 1 333 6 93 1 241 1 255 1 
185 1 205 1 176 1 90 1 30 1 177 1 235 1 333 2 93 1 241 1 
185 2 205 2 176 2 90 1 30 1 177 2 235 1 93 1 333 4 105 1 241 1 
185 1 205 1 176 1 90 1 30 1 177 1 235 1 333 2 93 1 241 1 
185 1 205 1 176 1 90 1 30 1 177 1 235 1 333 2 93 1 241 1 
185 1 205 1 176 1 90 1 30 1 177 1 235 1 333 2 93 1 241 1 
185 1 205 1 176 1 90 1 30 1 177 1 235 1 333 2 93 1 241 1 
185 2 205 2 176 2 90 1 30 1 177 2 235 1 105 1 333 4 93 1 241 1 
185 2 205 2 176 2 90 1 30 1 177 2 235 1 93 1 333 4 241 1 255 1 
301 1 337 1 3 1 254 1 121 1 
185 2 205 2 176 2 90 1 30 1 177 2 235 1 93 1 333 4 241 1 255 1 
301 1 185 2 205 2 3 1 176 2 177 2 121 1 333 4 9 1 337 1 254 1 
63 1 
243 1 185 1 36 2 204 1 205 1 176 1 177 1 69 2 333 2 57 1 131 1 235 1 105 1 321 1 
30 1 235 1 241 1 
235 1 241 1 71 1 
235 1 241 1 
225 1 36 1 69 1 
251 1 235 1 
185 1 205 1 176 1 90 1 30 1 177 1 235 1 333 2 93 1 241 1 
36 1 204 1 69 1 235 1 179 1 321 1 
136 1 235 1 
290 1 155 1 74 1 248 1 260 1 336 1 234 1 
300 1 137 1 260 1 248 1 289 1 290 1 155 1 74 1 295 1 336 1 129 1 234 1 
108 4 285 1 113 1 86 1 4 1 6 1 287 4 144 1 21 4 156 1 78 1 130 1 184 1 
108 2 82 1 259 1 0 1 326 1 4 1 249 1 287 2 144 1 310 1 21 2 78 2 184 1 240 1 
44 1 21 1 108 1 78 1 28 1 328 1 287 1 130 1 184 1 180 1 
108 2 86 1 263 1 4 1 287 2 144 1 21 2 78 1 297 1 184 1 238 1 
108 5 259 1 283 1 285 1 86 1 4 2 6 1 287 4 144 3 21 5 156 1 276 1 78 2 130 1 297 1 184 2 
108 5 259 1 283 1 285 1 86 1 4 2 6 1 287 4 144 3 195 1 21 5 156 1 78 2 130 1 297 1 184 2 
21 1 108 1 287 1 130 1 63 1 
35 1 107 1 325 1 82 1 108 1 2 1 39 1 4 1 287 1 144 1 290 1 21 1 155 2 74 1 78 1 234 2 130 1 184 1 
35 1 82 2 259 1 2 1 39 1 4 2 144 3 155 2 54 1 234 2 104 1 106 1 325 2 107 1 108 1 245 1 287 1 288 2 290 2 21 1 74 1 78 1 184 1 31 1 
35 1 82 2 259 1 39 1 4 2 144 3 155 2 312 1 54 1 234 2 104 1 106 1 325 2 107 1 108 1 245 1 287 1 288 2 290 2 21 1 74 1 78 1 184 1 31 1 
135 1 82 1 259 1 1 1 39 1 4 1 5 1 190 1 145 1 144 4 45 1 155 1 49 1 315 1 231 2 234 1 319 1 104 1 325 1 108 2 111 1 287 2 288 1 290 1 181 1 21 2 78 1 130 1 184 1 31 1 81 1 298 1 132 2 
82 1 108 3 259 1 113 1 4 1 287 3 144 4 41 1 181 1 21 3 45 1 49 1 231 2 78 1 130 1 81 1 319 1 31 1 184 1 104 1 298 1 132 2 
21 1 108 1 159 1 78 1 287 1 184 1 
108 7 82 1 283 1 175 1 263 1 86 1 4 2 249 1 287 6 144 3 310 1 212 1 21 7 159 1 52 1 276 1 78 3 215 1 130 2 297 1 184 2 
301 1 35 1 82 1 185 2 2 1 3 1 39 1 4 1 86 1 144 1 266 1 155 2 47 1 50 1 274 2 234 2 102 1 325 1 107 1 282 2 108 1 109 1 205 2 176 2 287 1 177 2 250 1 121 1 333 4 290 1 21 1 337 1 78 1 254 1 184 1 
85 1 144 2 41 1 153 1 269 2 45 1 158 1 49 1 272 2 231 3 232 1 233 1 319 1 108 1 110 1 116 1 287 1 181 1 21 1 73 1 182 1 183 2 130 1 216 2 81 1 298 2 132 3 133 1 
322 1 108 1 82 1 206 1 4 1 287 1 144 1 212 1 181 1 21 1 159 1 78 2 184 1 
35 1 107 1 325 1 82 1 108 1 39 1 4 1 287 1 144 1 290 1 21 1 155 2 74 1 312 1 78 1 234 2 130 1 184 1 
108 1 82 1 259 1 4 1 249 1 287 1 144 1 310 1 212 1 21 1 52 1 78 2 184 1 
74 1 125 1 306 1 316 1 201 1 
135 1 1 1 39 1 303 1 306 1 145 1 155 1 49 1 98 1 231 2 53 1 54 1 315 1 234 1 101 1 316 1 319 1 201 1 325 1 245 1 111 1 288 2 290 1 75 1 125 1 81 1 132 2 133 1 
114 1 306 1 17 1 290 1 155 1 316 1 234 1 61 1 201 1 
98 1 101 1 316 1 
170 1 124 1 24 1 51 1 67 1 214 1 70 1 341 1 
168 1 170 2 247 2 70 4 224 1 124 1 24 2 51 1 126 1 214 3 198 1 341 4 33 1 299 1 
170 1 247 1 67 1 7 1 70 2 227 1 124 1 294 1 51 1 24 1 214 1 341 2 
169 1 170 1 67 1 70 3 224 1 124 1 51 1 24 1 214 1 198 2 341 3 33 2 
202 2 270 1 214 2 278 1 
124 1 51 1 67 1 103 1 70 1 341 1 
170 1 247 1 124 1 24 1 51 1 67 1 214 1 70 2 341 2 210 1 
10 1 
170 1 124 1 24 1 51 1 67 1 214 1 70 1 341 1 
63 1 
170 1 124 1 24 1 51 1 214 1 70 1 341 1 
8 1 70 1 211 1 
170 1 67 1 327 1 70 3 224 1 124 1 51 1 24 1 214 1 198 2 341 3 33 1 
170 1 247 1 124 1 24 1 51 1 214 1 88 1 70 2 341 2 
187 1 67 1 141 1 70 1 44 1 124 1 51 1 126 1 214 1 28 1 341 1 
170 1 124 1 51 1 67 1 214 1 70 1 341 1 
170 2 124 1 24 1 51 1 67 1 70 1 341 1 
170 1 38 1 67 1 70 2 77 1 124 2 51 2 214 1 314 1 341 2 
168 1 170 1 247 2 67 1 70 3 210 1 292 1 124 1 24 1 51 1 126 1 214 2 341 3 
170 1 247 1 67 1 141 1 328 1 70 2 44 1 124 1 24 1 51 1 214 1 127 1 28 2 341 2 217 1 
168 1 170 1 247 2 67 1 88 1 70 4 149 1 124 2 24 1 51 2 126 1 214 2 341 4 
247 1 170 1 67 1 70 3 210 1 124 1 51 1 24 1 214 1 198 1 341 3 
168 1 214 1 126 1 299 1 
170 1 214 1 

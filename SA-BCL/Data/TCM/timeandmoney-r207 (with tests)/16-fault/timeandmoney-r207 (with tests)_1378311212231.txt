#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 258 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 258 239 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 337 89 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 308 189 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (62,280) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (141,164) 198 249 (105,254) 268 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (85,225) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 337 89 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 69 (141,164) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (141,164) 198 249 (105,254) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 1085 | stmt -> ;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 4578 | return null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 3080 | = null
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> >>>
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
255 1 31 2 344 1 32 1 87 1 59 1 155 3 110 1 176 1 310 1 113 1 157 1 263 4 287 2 346 1 183 2 224 1 205 1 146 9 208 2 295 2 83 1 354 5 230 1 102 9 125 2 342 6 151 2 
255 1 31 2 344 1 32 1 87 1 59 1 155 3 110 1 176 1 310 1 113 1 157 1 263 4 287 2 346 1 183 2 224 1 205 1 146 9 208 2 295 2 83 1 354 5 230 1 102 9 125 2 342 6 151 2 
255 1 31 2 344 1 32 1 87 1 59 1 155 4 110 1 176 1 310 1 113 1 157 1 263 5 287 2 346 1 183 2 224 1 205 1 146 10 208 2 295 2 83 1 354 6 230 1 102 10 125 2 342 7 151 2 
255 1 31 2 344 1 32 1 87 1 59 1 155 2 110 1 310 1 113 1 157 1 263 3 287 1 346 1 183 2 224 1 205 1 146 7 208 2 295 2 83 1 354 4 230 1 102 7 125 2 342 4 151 2 
255 1 344 1 32 1 87 1 155 1 183 1 146 4 110 1 176 1 208 1 295 1 263 2 354 3 125 1 102 4 287 2 342 3 151 1 
255 1 344 1 31 1 32 1 59 1 304 1 51 1 146 2 111 1 208 1 113 1 295 1 354 1 102 2 125 1 151 1 
255 1 344 1 31 1 32 1 155 1 224 1 146 3 208 2 295 2 263 1 354 2 102 3 342 1 
107 1 255 1 31 1 344 1 32 1 87 1 155 3 110 1 176 1 157 1 263 4 287 2 183 1 224 1 146 9 248 1 208 2 295 2 354 5 230 1 342 7 102 9 125 1 151 1 
107 1 255 1 31 1 344 1 32 1 87 1 155 3 110 1 176 1 157 1 263 4 287 2 183 1 224 1 146 9 248 1 208 2 295 2 354 5 230 1 342 7 102 9 125 1 151 1 
311 1 
100 1 352 1 13 2 
159 2 142 2 8 2 170 1 325 2 49 2 158 1 236 2 
128 2 322 2 29 1 60 1 286 1 170 1 325 2 5 1 236 2 156 1 8 3 138 1 137 2 264 1 196 1 158 1 197 1 70 1 332 1 159 2 117 1 142 2 143 1 200 1 16 1 49 3 99 2 76 1 22 1 185 1 164 1 24 1 278 2 101 1 55 1 343 1 321 1 
23 1 159 1 142 1 8 1 144 1 302 1 325 1 49 1 158 1 236 1 
15 1 58 1 35 1 245 1 49 1 52 1 236 1 23 1 247 1 8 1 210 1 352 1 179 1 127 1 
15 1 58 2 159 1 142 1 35 1 325 1 49 1 52 1 236 1 23 1 247 1 8 1 210 2 352 1 127 1 
267 1 58 1 210 1 313 1 319 1 
58 1 325 1 302 1 236 1 8 1 158 1 267 1 159 1 347 1 142 1 144 1 49 1 319 1 52 1 23 1 148 1 210 1 352 1 124 1 
267 1 58 1 210 1 
58 1 159 1 347 1 142 1 144 1 302 1 325 1 49 1 319 1 236 1 23 1 210 1 8 1 158 1 
352 1 
58 1 256 1 325 1 302 1 236 1 8 1 158 1 267 1 159 1 347 1 142 1 144 1 49 1 319 1 52 1 23 1 148 1 210 1 352 1 
58 4 88 1 302 1 325 1 191 2 39 1 345 1 235 1 236 1 193 1 68 1 8 1 195 1 158 1 266 1 96 1 97 2 267 2 159 1 347 1 142 1 116 2 144 1 49 1 319 2 203 4 272 2 225 1 20 1 52 1 23 1 147 3 148 1 210 4 82 2 352 1 126 2 85 1 
311 1 
159 1 142 1 325 1 170 1 17 1 49 2 234 1 236 2 23 1 8 2 168 1 
237 1 33 1 62 1 
322 1 29 1 117 1 143 1 60 1 200 1 170 1 49 1 5 1 164 1 240 1 8 1 137 1 278 1 197 1 101 1 
159 3 142 1 8 3 170 1 93 1 325 3 49 3 236 3 
23 1 159 1 8 1 302 1 325 1 49 1 236 1 
159 1 142 1 325 1 17 1 49 1 234 1 236 1 23 1 8 1 
322 1 58 1 60 1 286 1 325 3 5 1 236 3 8 4 197 1 158 1 196 1 70 1 332 1 15 1 159 3 117 1 200 1 17 1 76 1 23 2 247 1 164 1 210 1 24 1 168 1 127 1 343 1 128 1 28 1 29 1 35 1 301 1 170 1 137 1 93 1 138 1 264 1 315 1 142 2 143 1 49 4 99 2 185 1 278 1 101 1 
159 1 325 1 170 1 245 1 49 2 90 1 236 2 23 1 8 2 93 1 168 1 
15 1 28 1 58 1 159 3 142 1 35 1 325 3 17 1 49 3 236 3 23 1 247 1 260 1 210 1 8 3 93 2 352 1 315 1 127 1 
159 2 142 1 325 2 17 1 49 2 62 1 236 2 237 1 8 2 93 1 
322 1 29 1 143 1 60 1 117 1 200 1 170 1 49 1 5 1 164 1 8 1 137 1 278 1 197 1 101 1 
322 1 29 1 140 1 60 1 117 1 200 1 170 1 49 1 5 1 219 1 8 1 137 1 278 1 197 1 101 1 
129 1 128 4 57 1 33 2 286 1 61 1 62 2 329 1 237 2 138 1 264 1 196 1 316 1 332 2 317 1 97 1 72 1 116 1 99 2 22 2 227 1 24 1 280 1 343 1 
159 1 48 1 325 1 49 1 236 1 23 1 8 1 127 1 
322 1 29 1 159 1 117 1 60 1 143 1 200 1 325 1 49 2 5 1 236 1 237 1 164 1 8 2 93 1 137 1 278 1 101 1 197 1 315 1 
159 4 142 1 348 1 325 4 170 1 245 1 17 1 49 5 50 1 90 1 236 5 8 5 93 2 315 1 
23 1 159 1 8 1 302 1 325 1 49 1 236 1 
241 1 18 1 
241 1 18 1 
145 1 63 1 
145 1 63 1 
145 1 63 1 
27 1 241 1 18 1 
274 1 241 1 18 1 
91 1 241 2 18 2 281 1 145 1 63 1 
27 1 241 1 18 1 
27 1 241 1 18 1 
7 1 241 1 18 1 
7 1 241 1 18 1 
7 1 241 1 18 1 
106 1 58 2 37 1 132 1 233 1 18 2 216 1 174 3 292 2 218 2 220 2 44 2 210 2 352 1 178 1 241 2 281 1 244 2 341 1 
58 1 36 1 170 1 325 2 303 1 135 1 174 1 216 1 236 2 109 1 218 1 44 1 8 2 241 1 244 1 159 2 49 2 18 1 292 1 161 1 274 1 77 1 210 1 56 1 
183 1 125 1 151 1 
304 1 125 1 151 1 
188 1 324 1 183 2 166 1 304 1 125 3 
324 1 183 1 166 1 243 1 304 1 125 2 
183 1 324 1 166 2 304 1 125 2 
323 1 58 4 154 1 131 1 36 1 3 1 61 1 134 2 303 1 258 1 193 1 309 1 94 1 265 1 13 1 97 1 267 1 72 1 116 1 203 1 319 4 272 1 52 1 161 1 147 3 148 1 210 4 82 1 352 1 54 1 126 1 
58 2 302 1 325 1 327 1 236 1 8 1 313 1 158 1 267 1 159 1 73 1 347 1 142 1 144 1 49 1 319 2 52 1 23 1 210 2 352 1 252 1 
58 2 154 1 345 1 319 1 272 1 258 1 147 1 210 2 82 1 54 1 94 1 126 1 
58 1 154 1 345 1 272 1 258 1 147 1 239 1 210 1 82 1 54 1 94 1 126 1 
311 1 
117 1 314 1 
214 1 
29 1 117 1 
29 1 153 1 117 3 38 1 46 2 101 1 
29 1 117 1 101 1 
212 1 117 1 
57 3 128 7 97 1 169 1 181 1 116 1 306 1 335 1 20 1 119 1 22 4 163 2 227 2 68 1 195 1 81 1 332 3 
57 3 128 7 97 1 169 1 181 1 116 1 306 1 335 1 20 1 119 1 22 4 163 2 227 2 68 1 195 1 81 1 332 3 
57 3 128 7 97 1 169 1 181 1 116 1 306 1 335 1 20 1 119 1 22 4 163 2 227 2 68 1 195 1 81 1 332 3 282 1 
128 6 57 2 30 1 169 1 306 2 192 1 64 1 68 1 138 1 196 1 264 1 332 3 199 1 99 2 273 1 119 1 20 1 22 3 163 1 227 1 81 1 24 1 296 1 340 1 
128 16 57 9 169 4 88 1 306 1 108 1 68 2 138 2 195 2 264 2 196 2 332 7 97 3 181 1 116 3 291 1 99 4 335 1 119 1 20 2 22 9 163 2 227 5 24 2 340 1 
322 1 255 1 344 1 31 1 188 1 32 1 300 1 60 1 326 1 215 1 4 1 304 1 137 1 200 1 183 1 182 1 293 1 21 1 204 1 146 2 208 1 149 1 295 1 278 1 229 1 354 1 342 1 102 2 125 2 151 1 
322 1 255 1 187 1 188 1 31 1 32 1 300 1 60 1 326 1 4 1 304 1 175 1 137 1 200 1 183 1 182 1 271 1 293 1 21 1 146 3 208 1 149 1 295 1 278 1 229 1 354 1 102 3 342 2 125 2 151 1 
322 1 255 1 188 1 31 1 32 1 60 1 200 1 183 1 182 1 326 1 4 1 304 1 271 1 293 1 21 1 146 2 175 1 137 1 278 1 229 1 354 1 125 2 342 2 102 2 151 1 
322 1 29 1 187 1 31 2 60 1 117 1 200 1 182 2 133 1 98 1 293 2 66 1 21 2 146 1 208 1 209 1 330 1 295 1 137 1 278 1 197 1 102 1 253 1 
322 1 344 1 31 1 188 1 300 1 60 1 326 1 215 1 4 1 304 1 175 1 137 1 200 1 183 1 182 1 293 1 21 1 146 1 208 1 149 1 295 1 278 1 229 1 102 1 125 2 151 1 
53 1 
322 1 267 2 58 1 203 1 272 1 89 1 147 1 193 1 337 1 148 1 210 1 82 1 137 1 278 1 54 1 197 1 47 1 126 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
267 1 58 1 148 1 256 1 210 1 
15 1 58 2 189 1 35 1 245 1 49 1 272 1 236 1 246 1 23 1 193 1 247 1 308 1 8 1 210 2 82 1 9 1 279 1 179 1 127 1 126 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 236 1 246 1 23 1 247 1 308 1 210 2 8 1 9 1 279 1 179 1 127 1 
15 1 58 2 189 1 35 1 245 1 49 1 272 1 236 1 246 1 23 1 193 1 247 1 308 1 8 1 210 2 82 1 9 1 279 1 179 1 127 1 126 1 
129 1 311 1 286 1 138 1 24 1 99 2 264 1 196 1 343 1 
57 4 128 22 30 1 169 2 33 16 286 2 170 1 3 4 61 4 62 6 192 4 65 2 237 16 156 1 177 1 138 2 264 2 196 2 332 9 223 1 97 4 199 4 72 2 116 2 99 4 22 13 185 1 206 1 227 2 165 1 277 2 24 2 343 1 
128 1 159 1 286 1 325 1 184 1 49 1 99 2 62 1 236 1 22 1 156 1 177 1 8 1 138 1 93 1 24 1 196 1 264 1 103 1 315 1 343 1 
57 8 322 3 190 1 60 2 286 3 325 1 3 2 61 2 5 2 62 7 236 1 237 7 68 1 156 1 8 3 195 1 242 1 197 1 196 3 11 1 70 2 332 10 159 1 72 2 116 3 117 2 200 2 335 1 20 1 22 10 163 1 164 2 24 3 343 3 128 20 29 2 169 4 33 7 170 2 175 1 177 1 137 3 138 3 93 1 221 2 264 3 315 1 97 3 181 1 143 2 49 3 99 6 185 1 227 4 275 2 278 3 150 2 101 2 105 2 
129 1 128 2 322 8 29 2 60 2 286 2 325 1 173 1 236 1 66 1 175 1 40 1 259 1 156 1 8 1 93 1 137 8 138 2 197 2 264 2 196 2 332 1 159 1 290 1 117 3 200 2 49 1 99 4 98 1 204 1 22 1 185 1 278 7 24 2 123 1 343 2 321 2 86 1 299 1 
57 1 128 3 33 1 286 1 325 1 3 1 61 1 62 1 236 1 237 1 177 1 8 1 138 1 264 1 196 1 332 2 139 1 97 1 159 1 72 1 142 1 116 1 17 1 49 1 99 2 22 1 227 1 24 1 343 1 
57 1 128 2 129 1 317 1 97 1 169 1 33 1 286 1 61 1 99 2 62 1 237 1 22 2 138 1 24 1 196 1 264 1 343 1 
57 1 128 2 129 1 72 1 33 1 116 1 286 1 99 2 62 1 237 1 227 1 138 1 24 1 196 1 264 1 343 1 316 1 332 2 
129 1 128 4 57 2 169 1 33 2 286 1 3 1 61 1 62 2 237 2 138 1 264 1 196 1 332 2 97 1 72 1 116 1 99 2 22 2 227 1 24 1 343 1 
57 1 128 2 317 1 97 1 169 1 33 1 286 1 61 1 99 2 62 1 173 1 237 1 22 2 138 1 24 1 196 1 264 1 343 1 
57 1 128 2 72 1 33 1 116 1 286 1 99 2 62 1 173 1 237 1 227 1 138 1 24 1 196 1 264 1 343 1 316 1 332 2 
128 4 57 2 169 1 33 2 286 1 3 1 61 1 173 1 62 2 237 2 138 1 264 1 196 1 332 2 97 1 72 1 116 1 99 2 22 2 227 1 24 1 343 1 
128 4 57 2 169 1 33 2 286 1 3 1 61 1 62 2 237 2 138 1 264 1 196 1 332 2 97 1 72 1 116 1 99 2 22 2 227 1 24 1 343 1 
128 2 322 1 29 1 60 1 286 1 170 1 5 1 156 1 8 1 137 1 138 1 197 1 196 1 264 1 70 1 332 1 143 1 117 1 200 1 49 1 99 2 22 1 185 1 164 1 278 1 24 1 101 1 343 1 
128 2 322 1 29 1 60 1 286 1 170 1 5 1 156 1 219 1 8 1 137 1 138 1 197 1 196 1 264 1 332 1 140 1 117 1 200 1 49 1 99 2 22 1 185 1 278 1 24 1 167 1 101 1 343 1 
128 4 57 2 169 1 33 2 286 1 3 1 61 1 62 2 237 2 177 1 138 1 264 1 196 1 332 2 97 1 72 1 116 1 99 2 22 2 227 1 24 1 343 1 
57 2 128 4 322 1 29 1 169 1 33 2 60 1 286 1 3 1 61 1 62 2 5 1 237 2 8 1 137 1 138 1 196 1 264 1 70 1 332 2 97 1 72 1 116 1 143 1 117 1 200 1 49 1 99 2 22 2 204 1 227 1 164 1 275 1 278 1 24 1 101 1 343 1 
57 1 128 3 169 1 33 1 286 1 325 1 3 1 61 1 305 1 62 1 236 1 237 1 177 1 8 1 138 1 264 1 196 1 332 1 97 1 159 1 72 1 116 1 142 1 17 1 49 1 99 2 22 2 24 1 343 1 
130 1 57 6 128 33 30 2 2 1 169 3 34 1 3 3 61 3 172 1 192 2 238 1 68 1 195 1 138 4 312 1 264 4 196 4 332 16 97 4 181 1 199 2 72 3 116 4 160 1 291 1 118 1 99 8 335 1 20 1 22 17 163 1 120 1 227 3 350 3 339 1 276 1 25 1 24 4 250 1 340 2 
130 1 57 8 128 46 2 2 30 2 169 4 34 1 3 7 61 7 192 4 65 2 238 1 138 3 312 1 264 3 196 3 332 22 97 7 199 4 72 6 116 6 118 1 291 1 99 6 22 24 120 1 338 1 227 4 350 4 339 2 276 1 277 2 25 1 24 3 250 1 340 2 
57 13 2 1 3 7 61 7 192 5 65 2 238 1 68 2 195 2 196 4 332 27 72 5 199 5 116 7 160 1 291 1 118 1 335 2 20 2 22 33 120 1 163 2 338 1 339 2 24 4 25 1 340 2 250 1 128 60 130 1 30 3 169 7 34 1 136 1 138 4 312 1 264 4 97 9 181 2 99 8 227 6 350 4 276 1 277 2 
130 1 57 5 128 35 30 2 2 1 169 3 34 1 3 3 61 3 192 2 238 1 68 1 195 1 138 4 312 1 264 4 196 4 332 17 97 4 181 1 199 2 72 3 116 4 160 1 291 1 118 1 99 8 335 1 20 1 22 18 163 1 120 1 338 1 227 2 350 4 339 1 276 1 25 1 24 4 250 1 340 2 
130 1 128 42 57 8 30 2 2 1 169 3 34 1 3 5 61 5 192 3 65 1 238 1 68 1 195 1 138 3 312 1 264 3 196 3 332 20 97 6 181 1 199 3 72 4 116 5 118 1 291 1 99 6 335 1 20 1 22 22 163 1 120 1 338 1 227 5 350 4 339 1 276 1 277 1 25 1 24 3 250 1 340 2 
218 1 44 1 132 1 171 1 241 1 18 1 281 1 244 1 341 1 292 1 
274 1 135 1 
218 1 262 1 44 1 353 1 241 1 18 1 244 1 12 1 292 1 
58 1 37 1 132 1 233 1 18 1 216 1 174 2 292 1 218 1 220 1 210 1 44 1 352 1 178 1 241 1 281 1 244 1 341 1 
58 1 37 1 132 1 233 1 18 1 216 1 174 2 292 1 218 1 220 1 210 1 44 1 352 1 178 1 241 1 281 1 244 1 341 1 
58 1 37 1 132 1 233 1 18 1 216 1 174 2 292 1 218 1 220 1 210 1 44 1 352 1 178 1 241 1 281 1 244 1 341 1 
27 1 91 1 297 1 
27 1 91 1 297 1 
7 1 222 1 
7 1 91 1 222 1 
109 1 77 1 
58 1 36 1 170 1 325 2 233 1 303 1 135 1 174 1 236 2 109 1 218 1 220 1 8 2 44 1 241 1 244 1 159 2 49 2 319 1 18 1 292 1 226 1 161 1 274 1 77 1 210 1 56 1 
27 1 297 1 
7 1 91 1 222 1 
128 2 322 2 29 1 60 1 232 1 286 1 236 2 307 1 177 1 156 1 8 2 137 2 138 1 196 1 264 1 95 1 332 1 117 1 200 1 49 2 99 2 22 1 185 1 121 1 228 1 24 1 278 2 123 1 343 1 321 2 299 1 
322 2 188 1 257 1 60 1 200 1 183 1 4 1 304 1 21 1 204 1 175 1 112 1 149 1 137 2 278 2 229 1 125 2 151 1 298 1 
322 1 188 1 60 1 200 1 183 1 4 1 304 1 21 1 175 1 112 1 261 1 149 1 137 1 278 1 229 1 125 2 151 1 
322 1 29 1 257 1 60 1 117 1 200 1 98 1 21 1 66 1 122 1 330 1 137 1 278 1 197 1 
322 1 188 1 257 1 60 1 200 1 183 1 4 1 304 1 21 1 175 1 112 1 149 1 137 1 278 1 229 1 125 2 151 1 298 1 
318 1 
311 1 
333 1 267 1 270 1 203 1 272 1 52 1 193 1 147 1 100 1 148 1 82 1 352 1 10 1 13 1 126 1 
254 1 322 1 29 1 60 1 38 1 193 1 137 1 46 1 197 1 314 2 14 1 198 1 141 1 117 4 200 2 268 1 272 1 147 1 249 1 82 1 278 1 54 1 101 1 126 1 
325 1 3 4 191 3 61 4 192 2 236 1 65 1 238 1 193 2 8 1 158 1 13 10 114 1 159 1 72 4 199 2 116 4 118 1 203 8 336 1 23 1 120 1 82 2 250 1 126 2 30 1 34 1 302 1 309 8 47 1 265 8 266 1 97 4 267 1 347 1 142 1 144 1 49 1 272 2 52 2 100 5 147 13 148 1 277 1 352 7 54 1 
58 1 88 1 302 1 325 1 191 2 236 1 193 1 68 1 8 1 195 1 158 1 266 1 97 2 159 1 347 1 116 1 142 1 144 1 49 1 203 2 272 1 20 1 23 1 147 2 210 1 82 1 126 1 104 1 
147 1 193 1 82 1 352 1 203 1 225 1 272 1 52 1 126 1 
97 1 72 1 116 1 3 1 61 1 203 2 100 1 147 1 309 1 352 1 265 1 13 2 
267 1 159 1 347 1 142 1 144 1 302 1 325 1 49 1 52 1 236 1 23 1 148 1 8 1 352 1 158 1 
322 1 267 2 203 1 272 1 89 1 147 1 193 1 337 1 148 1 137 1 82 1 278 1 45 1 54 1 197 1 47 1 126 1 
128 1 322 1 29 1 60 1 286 1 170 1 325 2 5 1 236 2 8 3 138 1 137 1 264 1 197 1 158 1 196 1 70 1 332 1 159 2 142 2 143 1 117 1 200 1 49 3 99 2 76 1 185 1 164 1 24 1 278 1 101 1 343 1 
203 2 272 1 52 2 163 1 100 2 193 1 147 1 309 2 82 1 352 4 54 1 265 2 47 1 13 4 126 1 
78 1 218 1 292 1 
152 1 109 1 218 1 132 1 292 1 
78 1 218 1 292 1 
78 1 218 1 292 1 
218 1 202 1 292 1 
218 1 202 1 292 1 
218 1 202 1 292 1 
218 1 292 1 
241 1 18 1 
128 8 57 3 97 1 169 1 181 1 116 1 99 4 335 1 20 1 22 4 163 1 227 2 68 1 195 1 138 2 24 2 196 2 264 2 340 1 332 4 
311 1 
57 2 128 4 97 1 72 1 289 1 169 1 116 1 3 1 61 1 99 2 22 2 227 1 138 1 24 1 196 1 264 1 332 2 
57 2 128 12 30 1 97 2 169 1 199 2 72 2 116 2 3 2 61 2 192 2 65 1 22 6 227 1 277 1 332 6 
57 9 128 23 169 4 3 2 61 2 192 2 65 1 68 2 195 1 138 2 196 2 264 2 332 12 97 3 181 1 199 2 72 2 116 3 99 4 335 1 20 2 273 1 22 11 163 1 206 1 227 5 277 1 24 2 340 2 
128 1 192 1 332 1 
128 1 22 1 199 1 
128 6 57 3 97 1 289 1 169 1 72 1 116 1 3 1 61 1 99 2 22 3 227 2 138 1 24 1 221 1 264 1 196 1 332 3 
128 22 57 4 30 1 169 2 34 1 3 4 61 4 192 2 65 1 238 1 138 1 264 1 196 1 332 11 97 4 199 2 72 4 116 4 118 1 291 1 99 2 22 11 120 1 227 2 277 1 24 1 250 1 
128 6 57 2 97 1 169 1 116 1 20 1 22 3 227 1 68 1 195 1 332 3 
57 2 128 3 169 1 181 1 99 2 335 1 20 1 273 1 22 1 227 1 68 1 138 1 24 1 340 1 196 1 264 1 332 2 
57 5 128 10 97 2 169 2 88 1 116 2 291 1 99 2 20 2 22 5 227 3 68 2 138 1 195 1 24 1 264 1 196 1 332 5 
128 2 57 1 97 1 169 1 291 1 61 1 99 2 22 2 138 1 24 1 196 1 264 1 
57 2 128 4 97 1 72 1 169 1 116 1 3 1 291 1 61 1 99 2 22 2 227 1 138 1 24 1 196 1 264 1 332 2 
128 3 57 2 169 1 160 1 291 1 99 6 273 1 20 1 22 1 227 1 68 1 138 3 24 3 340 1 196 3 264 3 332 2 
57 6 128 15 30 1 169 3 88 1 192 1 68 2 195 1 138 4 264 4 196 4 332 8 97 2 289 1 199 1 181 1 116 2 160 1 291 1 99 8 335 1 273 1 20 2 22 7 227 3 24 4 296 1 340 1 
128 24 57 9 30 1 169 4 88 1 34 1 3 2 61 2 192 1 238 1 68 2 195 2 138 2 264 2 196 2 332 10 97 5 181 1 199 1 72 1 116 4 118 1 291 1 99 4 335 1 20 2 22 14 163 1 120 1 227 5 24 2 340 1 250 1 
128 17 57 4 30 1 169 1 34 1 3 2 61 2 192 1 238 1 68 1 195 1 138 3 264 3 196 3 332 7 97 3 181 1 289 1 199 1 72 1 116 2 118 1 291 1 99 6 335 1 20 1 22 10 163 1 120 1 227 3 24 3 340 1 250 1 
128 29 57 6 30 1 169 2 34 1 3 4 61 4 192 2 65 1 238 1 68 1 195 1 138 3 264 3 196 3 332 15 97 5 181 1 289 1 199 2 72 4 116 5 118 1 291 1 99 6 335 1 20 1 22 14 163 1 120 1 227 4 277 1 24 3 250 1 340 1 
128 27 57 7 30 1 169 3 34 1 3 4 61 4 192 2 65 1 238 1 68 1 195 1 138 3 264 3 196 3 332 12 97 5 181 1 289 1 199 2 72 3 116 4 118 1 291 1 99 6 335 1 20 1 22 15 163 1 120 1 227 4 277 1 24 3 340 1 250 1 
128 24 57 9 30 1 169 4 88 1 34 1 3 2 61 2 192 1 238 1 68 2 195 2 138 2 264 2 196 2 332 10 97 5 181 1 199 1 72 1 116 4 118 1 291 1 99 4 335 1 20 2 22 14 163 1 120 1 227 5 24 2 340 1 250 1 
128 22 57 4 30 1 169 2 34 1 3 4 61 4 192 2 65 1 238 1 138 1 264 1 196 1 332 11 97 4 199 2 72 4 116 4 118 1 291 1 99 2 22 11 120 1 227 2 277 1 24 1 250 1 
128 28 57 7 30 1 169 3 34 1 3 4 61 4 192 2 65 1 238 1 68 1 195 1 138 4 264 4 196 4 332 13 97 5 181 1 289 1 199 2 72 3 116 4 118 1 291 1 99 8 335 1 20 1 22 15 163 1 120 1 227 4 277 1 24 4 250 1 340 2 
128 7 57 1 30 1 3 1 61 1 192 2 138 2 264 2 196 2 332 4 97 1 199 1 72 1 116 1 160 1 118 1 291 1 99 4 22 3 227 1 277 1 24 2 
128 7 57 6 97 1 181 1 169 3 116 1 335 2 20 3 22 3 227 3 68 3 195 1 332 4 
128 7 57 1 30 1 3 1 61 1 192 2 138 2 264 2 196 2 332 4 97 1 199 1 72 1 116 1 160 1 118 1 291 1 99 4 22 3 227 1 277 1 24 2 
8 1 170 1 245 1 49 1 26 1 90 1 236 1 
170 1 213 1 75 1 245 1 49 1 90 1 236 1 6 1 43 1 8 1 26 1 320 1 
322 1 311 1 137 1 278 1 197 1 
322 1 29 1 159 1 117 1 60 1 200 1 170 1 325 1 49 2 5 1 236 1 164 1 8 2 93 1 137 1 278 1 101 1 197 1 
322 1 211 1 29 2 212 1 60 1 170 1 325 1 5 1 236 2 8 2 137 1 93 1 69 1 159 2 117 3 200 1 49 2 23 2 164 1 247 1 278 1 168 1 101 2 127 1 
322 1 211 1 29 2 212 1 60 1 170 1 325 1 5 1 236 2 8 2 137 1 93 1 69 1 140 1 159 2 117 3 200 1 49 2 23 2 247 1 278 1 168 1 101 2 127 1 
211 1 322 3 29 1 212 1 58 2 267 1 231 1 117 4 60 1 35 1 200 1 74 1 52 1 194 1 210 2 137 3 352 1 69 1 278 3 197 1 101 1 46 1 314 1 
211 1 322 1 29 1 212 1 58 1 141 1 117 4 60 1 200 1 210 1 137 1 69 1 278 1 101 1 46 1 314 1 
322 1 40 1 60 1 200 1 137 1 278 1 
284 1 322 7 29 2 290 1 117 3 60 2 200 3 38 1 204 1 175 1 40 1 259 1 137 7 278 6 351 1 123 1 197 2 101 1 321 1 180 1 86 1 
57 2 322 1 60 1 286 2 325 1 62 1 5 1 236 1 237 1 68 1 8 2 195 1 196 2 70 1 332 3 159 1 117 1 116 1 200 1 335 1 20 1 204 1 22 3 163 1 164 1 121 1 24 2 343 2 128 6 29 1 33 1 170 2 177 1 137 1 138 2 93 1 264 2 97 1 181 1 143 1 49 2 99 4 227 2 275 1 278 1 101 1 105 1 
254 1 322 1 198 1 58 1 141 1 117 2 319 1 272 1 193 1 249 1 210 1 82 1 137 1 278 1 45 1 46 1 197 1 314 1 126 1 
322 2 29 1 117 2 60 1 200 2 38 1 204 1 40 1 137 2 278 2 46 1 101 1 14 1 
1 1 322 4 29 1 117 1 60 1 200 1 98 1 204 1 66 1 194 1 137 4 278 4 197 1 
284 1 211 1 322 2 0 1 29 1 117 1 60 1 200 2 137 2 278 2 186 1 351 1 101 1 11 1 
322 1 60 1 200 1 137 1 278 1 229 1 304 1 197 1 125 1 151 1 
322 2 29 1 117 1 60 1 200 1 204 1 175 1 137 2 278 2 123 1 95 1 
1 1 211 1 322 5 29 2 117 3 60 2 290 1 200 2 98 1 66 1 204 1 259 1 137 5 278 4 123 1 197 1 
1 1 211 1 322 5 29 2 288 1 117 3 60 2 290 1 200 2 98 1 66 1 204 1 137 5 278 4 123 1 197 1 
322 1 29 1 140 1 159 1 117 1 60 1 200 1 170 1 325 1 49 2 5 1 236 1 8 2 93 1 137 1 278 1 101 1 197 1 
284 1 211 1 322 1 29 1 117 1 60 1 200 2 38 1 137 1 278 1 351 1 101 1 180 1 
67 1 285 1 170 1 19 1 283 1 
285 1 28 1 58 2 35 1 302 1 325 1 236 1 67 1 328 1 8 1 158 1 15 1 159 1 115 1 71 1 347 1 142 1 144 1 49 1 319 1 19 1 52 1 23 2 247 1 210 2 352 1 127 1 283 1 
285 1 232 1 49 1 19 1 236 1 67 1 307 1 228 1 8 1 
285 1 15 1 28 1 115 1 71 1 35 1 19 1 67 1 23 1 247 1 127 1 283 1 
311 1 
146 1 255 1 32 1 208 1 295 1 354 1 102 1 
31 1 182 1 102 1 
146 3 255 1 344 1 32 1 294 1 208 1 113 2 334 1 295 1 354 1 102 3 251 1 
146 2 255 1 32 1 208 1 295 1 354 1 342 1 287 1 102 2 
344 1 87 1 183 1 146 1 208 1 295 1 263 1 354 1 102 1 125 1 151 1 
146 1 344 1 32 1 208 1 295 1 354 1 102 1 
146 1 255 1 344 1 32 2 208 1 295 1 102 1 
344 1 32 1 349 1 217 1 146 2 41 1 208 2 295 2 354 1 102 2 
255 1 344 1 32 1 155 1 146 3 208 1 295 1 157 1 230 1 263 1 354 2 102 3 342 2 
255 1 344 1 188 1 32 1 183 1 304 1 146 2 208 1 295 1 354 1 125 2 102 2 342 1 84 1 151 1 
255 1 344 1 32 1 155 1 146 4 176 1 208 2 295 2 263 1 354 2 102 4 287 1 342 2 
146 1 255 1 344 1 32 1 208 1 295 1 354 1 102 1 
255 2 32 2 334 1 155 1 146 4 294 1 208 1 113 1 92 1 295 1 263 1 354 3 342 2 102 4 
107 1 255 1 344 1 32 1 201 1 146 2 80 1 208 1 295 1 354 1 102 2 342 1 
255 1 344 1 32 1 334 2 146 3 79 1 294 1 208 1 113 2 295 1 354 1 102 3 
162 1 42 2 331 1 354 2 
146 1 344 1 208 1 295 1 269 1 102 1 
146 2 255 1 344 1 32 1 208 1 295 1 354 1 230 1 342 1 102 2 
207 1 
146 1 255 1 344 1 32 1 208 1 295 1 354 1 102 1 
255 1 344 1 32 1 146 3 208 1 113 1 295 1 354 1 230 1 342 1 102 3 
92 1 155 1 354 1 263 1 
32 1 354 1 

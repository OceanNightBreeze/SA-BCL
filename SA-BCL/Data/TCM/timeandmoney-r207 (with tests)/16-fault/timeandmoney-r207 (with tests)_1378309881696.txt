#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (262,363) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (69,210) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 26 31 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 235 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | STATEMENT | 2497 | stmt -> ;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4378 | == -> <
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | CONDITION | 675 | if (x) -> if (!x)
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 5062 | return null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1071 | stmt -> ;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
137 1 27 2 284 1 236 1 56 1 79 9 223 1 59 2 63 2 249 2 268 1 228 1 205 6 338 1 126 9 361 2 10 3 207 1 274 1 13 1 19 1 48 2 215 1 305 2 234 5 158 4 133 1 136 1 
137 1 27 2 284 1 236 1 56 1 79 9 223 1 59 2 63 2 249 2 268 1 228 1 205 6 338 1 126 9 361 2 10 3 207 1 274 1 13 1 19 1 48 2 215 1 305 2 234 5 158 4 133 1 136 1 
137 1 27 2 284 1 236 1 56 1 79 10 223 1 59 2 63 2 249 2 268 1 228 1 205 7 338 1 126 10 361 2 10 4 207 1 274 1 13 1 19 1 48 2 215 1 305 2 234 6 158 5 133 1 136 1 
137 1 27 2 284 1 236 1 56 1 79 7 223 1 59 2 63 2 249 2 268 1 228 1 205 4 338 1 126 7 361 2 10 2 207 1 13 1 19 1 48 1 215 1 305 2 234 4 158 3 133 1 136 1 
137 1 205 3 27 1 126 4 56 1 10 1 361 1 79 4 274 1 59 1 13 1 48 2 305 1 234 3 158 2 249 1 228 1 136 1 
137 1 350 1 27 1 126 2 56 1 222 1 361 1 79 2 207 1 12 1 59 1 234 1 63 1 249 1 133 1 228 1 
137 1 205 1 126 3 56 1 10 1 79 3 59 2 215 1 63 1 234 2 158 1 249 2 228 1 
137 1 284 1 27 1 56 1 79 9 59 2 63 1 249 2 268 1 228 1 205 7 126 9 10 3 361 1 274 1 232 1 13 1 48 2 215 1 305 1 234 5 158 4 77 1 136 1 
137 1 284 1 27 1 56 1 79 9 59 2 63 1 249 2 268 1 228 1 205 7 126 9 10 3 361 1 274 1 232 1 13 1 48 2 215 1 305 1 234 5 158 4 77 1 136 1 
235 1 
156 2 182 1 261 1 
349 1 278 2 251 2 272 2 336 2 41 1 282 2 7 2 
283 2 349 1 98 1 28 1 221 1 197 1 62 2 290 1 170 1 293 1 144 1 336 2 41 1 146 2 296 1 176 2 7 2 149 1 316 1 251 2 299 1 43 1 272 2 209 1 73 1 18 1 278 2 157 1 257 1 282 2 193 2 52 1 96 1 
278 1 35 1 251 1 170 1 272 1 336 1 41 1 166 1 282 1 7 1 
123 1 272 1 182 1 111 1 264 1 254 1 247 1 170 1 122 1 336 1 131 1 67 1 7 1 24 1 
123 1 251 1 272 1 182 1 111 1 278 1 254 2 247 1 170 1 122 2 336 1 131 1 282 1 7 1 24 1 
254 1 245 1 246 1 104 1 122 1 
254 2 246 1 104 1 122 2 182 1 127 1 111 1 325 1 
254 1 246 1 122 1 
251 1 272 1 166 1 254 1 35 1 278 1 104 1 170 1 122 1 294 1 41 1 336 1 282 1 7 1 
182 1 
251 1 272 1 340 1 182 1 166 1 111 1 278 1 35 1 254 2 104 1 246 1 170 1 122 2 336 1 41 1 294 1 282 1 7 1 325 1 
337 1 327 2 182 1 165 1 196 2 111 1 185 1 103 1 254 5 188 1 104 2 246 2 122 5 366 1 365 1 3 2 147 1 51 1 325 1 
235 1 
9 1 349 2 251 1 272 2 278 1 306 1 336 2 282 1 7 2 
69 1 174 1 262 1 
178 1 283 1 349 1 43 1 221 1 18 1 170 1 176 1 193 1 52 1 
283 1 43 1 272 1 262 1 18 1 113 1 278 1 336 1 134 1 282 1 176 1 7 1 193 1 52 1 
9 1 349 1 251 1 272 5 253 1 113 1 278 4 321 1 217 1 336 5 134 2 282 4 67 1 7 5 
278 2 170 1 272 2 336 2 192 1 166 1 282 2 7 2 
349 1 278 3 251 1 272 3 336 3 134 1 282 3 7 3 
278 1 170 1 272 1 336 1 166 1 282 1 7 1 
278 1 9 1 251 1 170 1 272 1 306 1 336 1 282 1 7 1 
283 1 349 1 28 1 98 1 197 1 62 2 290 1 247 1 170 1 122 1 336 3 41 1 146 1 296 1 176 1 7 3 149 1 123 1 316 1 9 1 251 2 43 1 11 1 272 3 209 1 73 1 18 1 113 1 278 3 254 1 157 1 279 1 131 1 282 3 134 1 24 1 193 1 52 1 
349 1 278 1 272 2 336 2 253 1 282 1 134 1 67 1 7 2 
123 1 9 1 251 1 272 3 182 1 233 1 113 1 254 1 278 3 247 1 170 1 122 1 279 1 336 3 131 1 134 2 282 3 24 1 7 3 
9 1 251 1 69 1 272 2 262 1 278 2 336 2 134 1 282 2 7 2 
283 1 349 1 43 1 221 1 18 1 170 1 176 1 193 1 52 1 
283 1 349 1 117 1 78 1 272 1 44 1 301 1 314 1 155 1 336 1 280 1 176 1 193 1 95 1 52 1 
28 1 163 1 195 1 197 2 260 1 262 2 62 2 296 1 4 1 146 4 174 2 149 1 316 1 107 1 299 2 69 2 91 1 209 1 343 1 275 1 210 1 363 1 157 1 76 1 
278 1 170 1 272 1 336 1 131 1 192 1 282 1 7 1 
266 1 101 1 
266 1 101 1 
97 1 39 1 
97 1 39 1 
97 1 39 1 
318 1 266 1 101 1 
189 1 97 1 121 1 39 1 266 2 101 2 
2 1 266 1 101 1 
318 1 266 1 101 1 
318 1 266 1 101 1 
266 1 153 1 101 1 
266 1 153 1 101 1 
266 1 153 1 101 1 
349 1 151 1 351 1 272 2 164 1 14 1 313 1 101 1 168 1 17 1 288 1 254 1 278 2 2 1 304 1 49 1 122 1 266 1 336 2 22 1 282 2 7 2 148 1 369 1 
326 1 151 1 182 1 164 2 183 2 101 2 17 2 254 2 358 1 200 1 121 1 320 1 266 2 122 2 367 1 22 2 5 1 148 3 369 2 
27 1 361 1 305 1 
27 1 361 1 12 1 
315 1 27 3 305 2 335 1 12 1 15 1 
315 1 27 2 305 1 12 1 15 1 286 1 
315 1 27 2 305 1 12 1 15 2 
163 1 310 1 327 1 351 1 196 1 330 1 261 1 260 1 246 1 104 4 1 1 226 1 122 5 3 1 40 1 89 1 337 1 271 1 179 2 125 1 182 2 111 1 302 1 254 5 156 2 304 1 49 1 366 2 365 1 325 1 
55 1 166 1 35 1 245 1 246 1 104 2 170 1 122 2 203 1 336 1 294 1 41 1 177 1 7 1 251 1 272 1 182 1 111 1 254 2 278 1 282 1 
310 1 163 1 327 1 166 1 196 1 261 1 260 1 35 1 104 2 170 1 226 1 122 3 336 1 41 1 294 1 40 1 3 1 147 1 7 1 89 1 337 1 179 1 271 1 125 1 251 1 272 1 182 2 111 1 302 1 278 1 254 3 156 2 304 1 366 2 282 1 
327 1 140 1 196 1 240 1 104 3 3 1 294 1 336 1 147 1 7 1 337 1 251 1 111 1 213 1 302 2 254 4 156 4 304 2 163 2 310 1 166 1 260 2 261 2 35 1 170 1 226 1 122 4 40 1 41 1 89 1 179 2 271 2 125 2 272 1 182 3 278 1 366 4 282 1 
235 1 
20 1 280 1 
295 1 
280 1 314 1 95 1 
231 1 280 1 
280 1 314 1 
359 1 280 3 314 1 95 1 347 1 82 2 
116 1 26 1 163 1 107 3 29 1 299 4 30 1 239 1 195 2 197 3 343 1 242 1 356 2 37 1 85 1 146 7 21 1 
116 1 26 1 163 1 107 3 29 1 299 4 30 1 239 1 195 2 197 3 343 1 242 1 356 2 37 1 85 1 146 7 21 1 
116 1 26 1 163 1 107 3 29 1 299 4 30 1 239 1 195 2 197 3 343 1 242 1 356 2 37 1 85 1 146 7 21 1 105 1 
116 2 26 1 118 1 163 5 29 2 30 2 238 1 239 2 195 4 312 1 197 12 260 4 242 1 331 1 356 3 62 4 37 1 38 2 85 5 146 31 269 1 149 2 68 4 316 2 107 9 299 19 209 2 343 2 16 4 302 4 255 1 157 2 50 1 21 1 368 1 76 1 
116 1 26 1 163 1 29 1 239 1 30 1 195 3 58 1 197 4 242 1 356 2 62 4 38 1 85 1 146 9 149 2 316 2 339 1 107 4 299 5 209 2 343 1 157 2 21 1 
283 1 137 1 27 2 329 1 56 1 79 2 59 1 291 1 84 1 335 1 63 1 64 1 145 1 249 1 228 1 176 1 8 1 205 1 126 2 361 1 12 1 301 1 46 1 155 1 94 1 305 1 234 1 132 1 220 1 193 1 
283 1 27 2 56 1 79 3 59 1 263 1 291 1 335 1 84 1 63 1 64 1 145 1 249 1 228 1 176 1 205 2 126 3 361 1 12 1 301 1 45 1 46 1 155 1 94 1 305 1 234 1 132 1 220 1 193 1 25 1 
283 1 27 2 56 1 79 2 263 1 291 1 84 1 335 1 63 1 145 1 228 1 176 1 205 2 126 2 361 1 12 1 301 1 155 1 94 1 305 1 234 1 132 1 220 1 193 1 25 1 
283 1 126 1 311 1 79 1 100 1 355 1 59 1 342 1 301 1 314 1 45 1 93 1 155 1 83 1 84 2 63 2 145 2 249 1 280 1 176 1 220 2 193 1 52 1 
283 1 137 1 27 2 329 1 79 1 59 1 263 1 291 1 84 1 335 1 63 1 64 1 145 1 249 1 176 1 126 1 361 1 12 1 301 1 46 1 155 1 94 1 305 1 132 1 220 1 193 1 
162 1 
283 2 54 1 327 1 196 1 287 1 61 1 243 2 246 6 247 1 3 1 336 1 6 2 67 1 7 1 337 2 106 2 111 1 301 1 344 2 254 5 155 1 156 2 75 1 23 1 24 1 161 2 80 1 81 1 119 4 355 1 261 2 314 1 34 2 264 1 83 1 170 1 122 5 176 2 86 1 89 1 124 1 123 1 272 1 182 2 184 1 92 1 186 1 364 2 366 2 365 1 131 1 280 1 193 2 325 3 52 2 
81 1 119 2 287 1 264 1 247 1 246 2 170 1 122 3 336 1 7 1 67 1 86 1 124 1 123 1 340 1 272 1 184 1 254 3 364 1 131 1 24 1 325 1 
81 1 119 3 287 1 264 1 246 1 247 1 170 1 122 3 336 1 7 1 67 1 86 1 124 1 123 1 272 1 340 1 182 1 184 1 111 1 254 3 344 1 131 1 24 1 325 1 
81 1 119 3 287 1 264 1 243 1 247 1 246 2 170 1 122 3 336 1 7 1 67 1 86 1 124 1 123 1 340 1 272 1 184 1 254 3 344 1 364 1 131 1 24 1 325 1 
327 1 60 1 196 1 287 1 61 1 243 4 247 1 246 7 294 1 336 2 3 1 67 1 7 2 6 2 337 1 106 2 251 1 252 1 340 1 111 1 254 5 344 2 75 1 24 1 309 1 161 2 119 4 81 1 166 1 261 2 34 2 264 1 35 1 170 2 122 5 41 1 86 1 123 1 124 1 180 1 272 2 182 1 184 1 278 1 47 1 364 4 365 1 366 1 131 1 282 1 325 3 
327 1 196 1 287 1 61 1 243 2 247 1 246 4 336 1 3 1 7 1 67 1 6 2 337 1 106 2 111 1 254 4 344 2 75 1 156 2 24 1 161 2 119 4 81 1 80 1 261 2 34 2 264 1 170 1 122 4 86 1 123 1 124 1 272 1 182 2 184 1 364 2 365 1 366 1 131 1 325 2 
309 1 161 2 327 1 81 1 119 4 196 1 261 2 287 1 34 2 61 1 243 2 264 1 246 4 247 1 170 1 122 4 336 1 3 1 6 2 7 1 67 1 86 1 337 1 124 1 123 1 106 2 252 1 272 1 182 1 184 1 111 1 344 2 47 1 254 4 75 1 364 2 366 1 365 1 131 1 24 1 325 2 
309 1 161 2 327 1 81 1 119 4 196 1 261 2 287 1 34 2 61 1 243 2 264 1 246 4 247 1 170 1 122 4 336 1 3 1 6 2 7 1 67 1 86 1 337 1 124 1 123 1 106 2 252 1 272 1 182 1 184 1 111 1 344 2 47 1 254 4 75 1 364 2 366 1 365 1 131 1 24 1 325 2 
327 1 354 2 81 1 119 4 196 1 287 1 243 2 264 1 246 4 36 2 247 1 170 1 122 4 336 1 3 1 6 2 7 1 67 1 86 1 337 1 124 1 123 1 106 2 272 1 182 1 208 1 184 1 111 1 128 1 344 2 47 1 254 4 156 2 75 1 364 2 366 1 129 1 365 1 131 1 24 1 325 2 
81 1 119 3 166 1 287 1 264 1 243 1 35 1 247 1 246 1 170 2 122 2 41 1 294 1 336 2 7 2 67 1 86 1 124 1 123 1 180 1 251 1 272 2 182 1 184 1 111 1 278 1 254 2 344 1 364 1 131 1 282 1 24 1 
81 1 119 3 166 1 287 1 264 1 243 1 35 1 247 1 246 1 170 2 122 2 41 1 294 1 336 2 7 2 67 1 86 1 124 1 123 1 180 1 251 1 272 2 182 1 184 1 111 1 278 1 254 2 344 1 364 1 131 1 282 1 24 1 
327 1 196 1 287 1 243 2 247 1 246 4 336 1 3 1 7 1 67 1 6 2 337 1 106 2 208 1 111 1 254 4 344 2 75 1 156 2 24 1 119 4 81 1 354 2 80 1 264 1 36 2 170 1 122 4 86 1 123 1 124 1 272 1 182 1 184 1 364 2 365 1 366 1 131 1 325 2 
149 1 316 1 62 2 28 1 157 1 209 1 235 1 296 1 4 1 
349 1 28 1 118 1 163 2 238 1 195 1 99 1 197 6 198 1 260 2 262 11 62 4 85 1 360 1 296 2 146 14 174 11 204 1 149 2 316 2 68 3 107 2 299 8 69 3 209 2 73 1 343 1 16 3 302 2 157 2 255 1 76 1 96 1 
283 1 349 1 28 1 285 1 139 1 99 1 197 1 62 2 199 1 336 1 296 1 146 2 176 1 7 1 178 1 149 1 316 1 299 1 43 1 69 1 272 1 209 1 73 1 18 1 113 1 278 1 157 1 282 1 134 1 193 1 52 1 96 1 
283 1 28 1 99 1 197 2 62 2 289 1 227 1 336 1 146 2 296 1 297 1 176 1 7 1 149 1 316 1 272 1 209 1 73 1 113 1 278 1 157 1 282 1 134 1 193 1 52 1 308 1 
283 8 28 2 355 1 197 1 314 2 263 1 62 4 83 1 336 1 4 1 296 2 146 2 176 7 270 1 7 1 8 1 149 2 150 1 316 2 299 1 229 1 272 1 209 2 73 1 301 2 187 1 278 1 155 2 319 1 157 2 257 2 281 1 280 3 282 1 134 1 324 1 193 8 52 2 96 1 
28 1 163 1 99 1 260 1 102 1 62 2 336 1 296 1 146 1 7 1 149 1 9 1 316 1 251 1 299 1 272 1 209 1 302 1 278 1 157 1 282 1 
149 1 316 1 28 1 107 1 163 1 299 2 69 1 209 1 275 1 260 1 262 1 62 2 157 1 85 1 174 1 146 2 4 1 296 1 
149 1 316 1 28 1 107 1 69 1 91 1 195 1 209 1 343 1 197 2 262 1 62 2 157 1 174 1 146 2 4 1 296 1 76 1 
149 1 316 1 28 1 163 1 299 2 69 1 209 1 260 1 262 1 302 1 62 2 157 1 174 1 146 2 4 1 296 1 
149 1 316 1 28 1 107 1 163 1 299 2 69 1 209 1 275 1 260 1 262 1 62 2 157 1 85 1 174 1 146 2 296 1 270 1 
149 1 316 1 28 1 69 1 91 1 209 1 343 1 197 2 262 1 62 2 157 1 174 1 146 2 296 1 270 1 76 1 
149 1 316 1 28 1 163 1 299 2 69 1 209 1 260 1 262 1 302 1 62 2 157 1 174 1 146 2 296 1 270 1 
149 1 316 1 28 1 163 1 299 2 69 1 209 1 260 1 262 1 302 1 62 2 157 1 174 1 296 1 146 2 
283 1 349 1 28 1 98 1 221 1 197 1 62 2 170 1 296 1 146 2 176 1 149 1 316 1 299 1 43 1 209 1 73 1 18 1 157 1 193 1 52 1 96 1 
283 1 349 1 117 1 28 1 78 1 197 1 314 1 62 2 333 1 336 1 146 2 296 1 176 1 149 1 316 1 299 1 272 1 209 1 44 1 73 1 301 1 155 1 157 1 280 1 95 1 193 1 52 1 96 1 
149 1 316 1 28 1 163 1 299 2 69 1 99 1 209 1 260 1 262 1 302 1 62 2 157 1 174 1 146 2 296 1 
283 1 28 1 98 1 163 1 260 1 62 2 296 1 146 1 176 1 8 1 149 1 316 1 299 1 43 1 209 1 18 1 212 1 302 1 157 1 193 1 
28 1 163 1 99 1 197 1 260 1 262 1 62 2 336 1 296 1 146 3 174 1 7 1 149 1 9 1 316 1 251 1 299 2 272 1 209 1 343 1 302 1 278 1 157 1 216 1 282 1 76 1 
328 1 238 2 195 3 58 1 197 16 141 1 242 1 62 6 244 1 143 4 202 1 248 1 146 44 149 3 68 4 206 1 107 10 299 28 209 3 343 3 16 4 74 1 302 7 214 1 255 2 157 3 218 1 21 1 76 2 26 1 118 2 163 8 29 1 30 1 260 7 224 1 356 1 169 1 38 1 85 7 316 3 277 1 322 1 
328 1 238 2 195 3 58 1 197 16 141 1 242 1 62 6 244 1 143 4 202 1 248 1 146 44 149 3 68 4 206 1 107 10 299 28 209 3 343 3 16 4 74 1 302 7 214 1 255 2 157 3 218 1 21 1 76 2 26 1 118 2 163 8 29 1 30 1 260 7 224 1 356 1 169 1 38 1 85 7 316 3 277 1 322 1 
26 1 118 2 163 8 29 1 328 1 30 1 238 2 195 3 58 1 197 14 141 1 260 7 242 1 224 1 356 1 244 1 62 2 143 3 169 1 202 1 85 6 146 39 149 1 316 1 68 4 206 1 107 9 299 25 209 1 343 3 16 4 74 1 214 1 302 7 277 1 157 1 255 2 218 1 322 1 21 1 76 2 
26 1 118 2 163 8 29 1 328 1 30 1 238 2 195 2 58 1 197 13 141 1 260 7 242 1 224 1 356 1 244 1 62 6 143 3 169 1 38 1 202 1 85 7 248 1 146 40 149 3 316 3 68 4 206 1 107 9 299 27 209 3 343 2 16 4 276 1 74 1 214 1 302 7 277 1 157 3 255 2 322 1 21 1 76 1 
163 2 328 2 238 2 195 1 58 1 197 7 141 1 260 2 224 1 62 2 244 1 143 2 169 1 202 1 146 16 149 1 316 1 68 2 206 1 107 1 299 9 209 1 343 1 16 2 74 1 214 2 302 2 277 1 157 1 218 1 322 1 76 1 
283 2 28 1 99 1 197 1 314 1 142 1 62 2 336 2 296 1 146 2 176 2 7 2 149 1 316 1 299 1 272 2 209 1 73 1 301 1 187 1 155 1 114 1 157 1 257 2 219 1 280 1 281 1 307 1 193 2 135 1 96 1 
283 2 53 1 90 1 27 2 361 1 12 1 301 1 154 1 263 1 46 1 155 1 291 1 94 1 305 1 335 1 176 2 193 2 220 1 8 1 
283 1 90 1 27 2 361 1 12 1 301 1 263 1 46 1 155 1 291 1 94 1 305 1 335 1 159 1 176 1 193 1 220 1 
283 1 53 1 355 1 301 1 314 1 120 1 93 1 155 1 83 1 280 1 176 1 193 1 220 1 52 1 
283 1 53 1 90 1 27 2 361 1 12 1 301 1 154 1 263 1 46 1 155 1 291 1 94 1 305 1 335 1 176 1 193 1 220 1 
241 1 
235 1 
161 1 327 1 196 1 261 1 34 1 61 1 246 1 122 1 3 1 337 1 182 2 111 1 254 1 156 1 366 1 365 1 325 1 
283 1 138 2 327 3 196 3 246 5 3 3 337 6 341 1 72 2 343 1 111 1 301 1 302 2 155 2 254 5 20 3 303 1 156 9 347 1 24 2 76 1 163 2 258 2 32 2 314 1 261 4 260 2 82 2 225 2 122 5 227 2 176 1 89 2 271 5 125 5 181 1 273 2 182 5 92 1 317 1 365 3 366 7 280 6 95 1 193 1 52 1 325 3 
163 2 327 1 238 1 196 1 261 2 141 1 260 2 244 1 3 1 337 2 271 3 68 1 125 3 206 1 182 2 16 1 74 1 302 2 156 4 365 1 366 4 322 1 
337 2 309 1 26 1 163 1 327 1 29 1 31 1 30 1 196 1 343 1 254 1 303 1 122 1 366 2 365 1 3 1 
337 1 327 1 182 1 196 1 165 1 111 1 103 1 365 1 3 1 366 1 
271 1 125 1 156 2 163 1 182 1 366 2 261 1 260 1 302 1 
254 1 246 1 122 1 182 1 111 1 325 1 
54 1 283 4 327 2 57 1 196 2 355 1 314 1 246 4 83 1 122 3 3 2 172 1 147 1 176 4 89 2 337 2 230 2 71 1 301 1 92 2 155 1 254 3 365 1 366 2 280 1 23 1 193 4 52 2 325 2 
283 1 349 1 98 1 28 1 197 1 290 1 62 2 336 2 41 1 146 1 296 1 176 1 7 2 149 1 316 1 251 2 43 1 272 2 209 1 73 1 18 1 278 2 157 1 282 2 193 1 52 1 
89 1 337 1 271 2 125 2 327 1 182 4 196 1 261 2 111 2 92 1 356 1 156 4 366 2 365 1 3 1 
250 1 22 1 369 1 
288 1 346 1 367 1 22 1 369 1 
250 1 22 1 369 1 
250 1 22 1 369 1 
173 1 22 1 369 1 
173 1 22 1 369 1 
173 1 22 1 369 1 
22 1 369 1 
266 1 101 1 
26 1 163 1 29 1 238 1 30 1 195 2 58 1 197 4 242 1 356 1 62 2 146 8 149 1 68 1 316 1 206 1 107 2 299 4 209 1 343 1 16 1 157 1 21 1 
118 1 163 4 238 1 195 3 58 1 197 9 141 1 260 4 244 1 62 4 85 2 146 20 149 2 316 2 68 2 206 1 107 5 299 11 209 2 343 3 16 2 74 1 302 4 157 2 255 1 190 1 322 1 76 3 
163 2 238 1 58 1 197 2 141 1 260 2 62 4 244 1 85 1 146 8 149 2 68 1 316 2 206 1 107 1 299 6 209 2 16 1 74 1 302 2 157 2 190 1 322 1 
163 2 238 1 195 1 58 1 197 4 141 1 260 2 62 4 244 1 146 10 149 2 68 1 316 2 206 1 107 1 299 6 209 2 343 1 16 1 74 1 302 2 157 2 190 1 322 1 76 1 
26 1 163 1 29 1 238 1 30 1 195 2 58 1 197 4 242 1 356 1 62 2 146 8 149 1 68 1 316 1 206 1 107 2 299 4 209 1 343 1 16 1 157 1 21 1 
163 2 238 1 58 1 197 2 141 1 260 2 62 2 244 1 85 1 146 8 149 1 68 1 316 1 206 1 107 1 299 6 209 1 16 1 74 1 302 2 157 1 322 1 
163 2 238 1 195 1 58 1 197 4 141 1 260 2 62 4 244 1 146 10 149 2 316 2 68 1 206 1 107 1 299 6 209 2 343 1 16 1 74 1 302 2 157 2 190 1 322 1 76 1 
163 2 238 1 195 1 58 1 197 4 141 1 260 2 62 6 244 1 38 1 85 2 248 1 146 11 149 3 316 3 68 1 206 1 107 3 299 7 209 3 343 1 16 1 74 1 302 2 157 3 322 1 76 1 
26 1 107 6 163 1 29 3 299 3 30 3 195 3 197 4 343 1 242 2 85 3 146 7 21 1 
163 2 238 1 195 1 58 1 197 4 141 1 260 2 62 6 244 1 38 1 85 1 248 1 146 11 149 3 316 3 68 1 206 1 107 2 299 7 209 3 343 1 16 1 74 1 302 2 157 3 322 1 76 1 
149 2 26 1 316 2 163 1 107 3 299 4 29 1 30 1 195 2 209 2 343 1 197 4 242 1 356 1 62 4 157 2 38 1 85 1 146 8 21 1 
235 1 
149 1 316 1 163 1 299 2 209 1 260 1 302 1 62 2 157 1 190 1 146 2 
68 2 118 1 163 2 107 2 299 6 238 1 197 2 16 2 260 2 302 2 255 1 85 2 146 8 
26 2 118 1 163 4 29 4 31 1 30 4 195 5 197 12 260 2 242 1 356 1 62 4 38 2 85 5 360 1 146 26 149 2 68 2 316 2 107 10 299 14 209 2 343 2 16 2 302 2 255 1 157 2 21 1 368 1 
146 1 197 1 16 1 
68 1 299 1 146 1 
163 1 107 1 299 3 197 1 260 1 302 1 85 1 227 1 146 4 
163 2 238 1 58 1 197 2 141 1 260 2 62 2 244 1 85 1 146 8 149 1 68 1 316 1 206 1 107 1 299 6 209 1 16 1 74 1 302 2 157 1 322 1 
26 1 163 1 107 2 299 3 29 1 30 1 195 1 343 1 197 3 85 1 146 6 
149 1 316 1 107 2 299 1 29 1 30 1 195 1 209 1 197 2 242 1 62 2 38 1 157 1 85 1 146 3 21 1 368 1 
149 1 316 1 26 1 107 5 163 2 29 2 299 5 31 1 30 2 195 3 209 1 58 1 197 5 343 2 62 2 157 1 85 2 146 10 
149 1 316 1 163 1 107 1 299 2 58 1 209 1 260 1 62 2 157 1 85 1 146 2 
149 1 316 1 107 2 163 1 299 2 195 1 58 1 209 1 197 2 343 1 260 1 302 1 62 2 157 1 85 1 146 4 76 1 
149 3 316 3 107 2 29 1 299 1 30 1 195 1 58 1 209 3 197 2 62 6 38 1 157 3 85 1 248 1 146 3 368 1 
26 2 118 1 163 6 29 3 30 3 238 1 195 7 58 1 312 1 197 19 260 4 242 1 331 1 356 1 62 10 38 2 85 6 248 1 146 39 149 5 316 5 68 4 107 13 299 20 209 5 343 5 16 4 302 4 157 5 255 1 190 1 50 1 21 1 368 1 76 3 
349 1 272 1 336 1 253 1 323 1 7 1 67 1 
349 1 352 1 272 1 253 1 0 1 332 1 112 1 336 1 323 1 67 1 7 1 87 1 
283 1 235 1 176 1 193 1 52 1 
283 1 349 1 221 1 272 1 18 1 278 1 170 1 336 1 134 1 282 1 176 1 7 1 193 1 52 1 
283 1 349 1 221 1 272 1 230 1 18 1 278 1 170 1 336 1 134 1 282 1 176 1 7 1 193 1 
283 2 349 1 78 1 314 2 170 1 336 2 176 2 7 2 123 1 272 2 230 1 44 1 231 1 301 1 278 2 155 1 345 1 130 1 131 1 280 3 282 1 134 1 193 2 95 2 
283 1 166 1 35 1 170 1 122 1 171 1 294 1 41 1 336 1 176 1 7 1 251 1 272 1 182 1 230 1 111 1 254 1 278 1 20 1 280 1 282 1 193 1 
283 1 138 1 166 1 35 1 170 1 122 1 294 1 41 1 336 1 176 1 7 1 251 1 272 1 182 1 230 1 111 1 254 1 278 1 20 1 280 1 282 1 193 1 
283 1 155 1 150 1 301 1 176 1 193 1 
283 7 150 1 229 1 109 1 152 1 314 2 301 2 263 1 155 3 319 1 257 1 66 1 281 1 280 3 176 6 324 1 193 7 347 1 95 1 52 2 8 1 
283 1 349 1 26 1 28 1 163 2 29 1 221 1 30 1 31 1 195 2 99 1 197 4 242 1 62 2 170 1 85 1 336 1 146 8 296 1 176 1 297 1 7 1 8 1 149 1 316 1 107 3 299 4 272 1 209 1 343 2 278 1 157 1 21 1 282 1 134 1 193 1 135 1 
283 1 138 1 327 2 258 1 32 1 165 1 196 2 82 1 225 1 103 1 104 1 246 2 122 3 3 2 176 1 337 1 182 1 71 1 111 1 254 3 20 1 366 1 365 2 280 2 193 1 24 1 52 1 325 1 
283 2 150 1 314 1 301 1 82 1 317 1 155 2 280 2 176 2 193 2 347 1 95 1 8 1 
283 4 355 1 314 1 301 1 211 1 155 1 83 1 130 1 280 1 176 4 193 4 52 1 8 1 
283 2 109 1 230 1 110 1 314 1 301 1 155 2 66 1 280 1 176 2 193 2 95 1 348 1 194 1 
283 1 155 1 27 1 94 1 361 1 12 1 301 1 176 1 193 1 52 1 
283 2 314 1 301 1 263 1 155 1 281 1 280 1 176 2 193 2 307 1 8 1 
283 5 229 1 230 1 355 1 314 2 301 2 211 1 155 2 83 1 319 1 281 1 280 3 176 4 193 5 52 1 8 1 
283 5 229 1 230 1 355 1 314 2 301 2 211 1 155 2 83 1 281 1 280 3 176 4 42 1 193 5 52 1 8 1 
283 1 349 1 78 1 272 2 44 1 314 1 301 1 155 1 278 1 336 2 280 1 134 1 282 1 176 1 95 1 7 1 193 1 52 1 
283 1 109 1 152 1 230 1 314 1 301 1 155 2 66 1 280 1 176 1 193 1 347 1 95 1 
349 1 298 1 300 1 267 1 65 1 
123 1 349 1 298 1 70 1 237 1 182 1 300 2 111 1 254 2 104 1 247 1 170 1 122 2 191 1 279 1 131 1 65 2 267 2 24 1 
114 1 298 1 272 1 336 1 219 1 267 1 65 1 7 1 142 1 
298 1 191 1 237 1 
235 1 
126 1 56 1 234 1 79 1 249 1 59 1 228 1 
63 1 79 1 145 1 
137 1 126 3 108 1 56 1 79 3 59 1 234 1 256 1 249 1 133 2 228 1 88 1 
205 1 48 1 126 2 56 1 234 1 79 2 249 1 59 1 228 1 
137 1 27 1 126 1 361 1 79 1 59 1 305 1 234 1 158 1 249 1 136 1 
137 1 126 1 56 1 234 1 79 1 249 1 59 1 
137 1 126 1 56 2 79 1 249 1 59 1 228 1 
137 1 126 2 56 1 79 2 59 2 33 1 234 1 249 2 175 1 160 1 
137 1 205 2 284 1 126 3 56 1 10 1 79 3 59 1 234 2 158 1 249 1 268 1 228 1 
137 1 205 1 27 2 126 2 56 1 361 1 79 2 12 1 59 1 334 1 335 1 305 1 234 1 249 1 228 1 
137 1 205 2 126 4 56 1 10 1 79 4 274 1 59 2 48 1 234 2 158 1 249 2 228 1 
137 1 126 1 56 1 234 1 79 1 249 1 59 1 228 1 
205 2 126 4 56 2 10 1 79 4 59 1 256 1 234 3 158 1 249 1 133 1 115 1 228 2 88 1 
137 1 205 1 126 2 56 1 353 1 79 2 59 1 292 1 234 1 249 1 228 1 77 1 
137 1 126 3 56 1 79 3 59 1 362 1 256 1 234 1 249 1 133 2 228 1 88 2 
265 1 234 2 259 1 167 2 
137 1 357 1 126 1 79 1 249 1 59 1 
205 1 137 1 126 2 56 1 234 1 79 2 249 1 59 1 268 1 228 1 
201 1 
137 1 126 1 56 1 234 1 79 1 249 1 59 1 228 1 
205 1 137 1 126 3 56 1 79 3 59 1 234 1 249 1 133 1 268 1 228 1 
10 1 234 1 158 1 115 1 
56 1 234 1 

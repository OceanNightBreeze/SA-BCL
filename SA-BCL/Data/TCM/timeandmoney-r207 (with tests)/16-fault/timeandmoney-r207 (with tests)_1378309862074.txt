#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 38 299 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 213 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 213 183 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 213 183 371 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 213 183 48 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 213 183 48 205 4 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 213 183 48 205 4 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 213 183 48 205 163 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 213 183 30 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 213 183 30 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 213 183 48 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 184 322 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 38 299 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3771 | 1 -> 2
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | ASSIGN | 1389 | = null
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6510 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10499 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 3 221 2 78 1 222 1 111 1 336 1 339 1 291 9 59 9 160 1 137 2 67 6 44 5 207 1 141 1 96 1 164 2 302 1 257 1 352 2 303 4 100 2 235 2 286 1 127 2 216 1 220 1 375 1 
109 3 221 2 78 1 222 1 111 1 336 1 339 1 291 9 59 9 160 1 137 2 67 6 44 5 207 1 141 1 96 1 164 2 302 1 257 1 352 2 303 4 100 2 235 2 286 1 127 2 216 1 220 1 375 1 
109 4 221 2 78 1 222 1 111 1 336 1 339 1 291 10 59 10 160 1 137 2 67 7 44 6 207 1 141 1 96 1 164 2 302 1 257 1 352 2 303 5 100 2 235 2 286 1 127 2 216 1 220 1 375 1 
109 2 221 2 78 1 222 1 111 1 336 1 291 7 59 7 160 1 137 1 67 4 44 4 207 1 141 1 96 1 164 2 302 1 257 1 352 2 303 3 100 2 235 2 286 1 127 2 216 1 220 1 375 1 
109 1 44 3 207 1 96 1 222 1 164 1 339 1 291 4 302 1 59 4 352 1 303 2 235 1 100 1 286 1 137 2 127 1 67 3 
44 1 221 1 141 1 96 1 222 1 164 1 291 2 59 2 362 1 352 1 160 1 235 1 286 1 127 1 6 1 25 1 
109 1 44 2 221 1 96 1 222 1 291 3 59 3 352 2 303 1 286 1 127 2 67 1 220 1 
109 3 221 1 78 1 222 1 291 9 339 1 59 9 137 2 67 7 180 1 69 1 44 5 207 1 96 1 164 1 302 1 257 1 303 4 352 2 100 1 235 1 286 1 127 2 220 1 
109 3 221 1 78 1 222 1 291 9 339 1 59 9 137 2 67 7 180 1 69 1 44 5 207 1 96 1 164 1 302 1 257 1 303 4 352 2 100 1 235 1 286 1 127 2 220 1 
153 1 101 1 276 1 
276 1 126 2 230 1 
54 2 365 2 194 2 373 1 89 2 20 1 113 2 242 2 
77 1 54 2 172 1 310 1 361 1 194 3 79 1 135 1 113 2 340 1 35 1 36 1 198 2 365 2 89 2 320 1 181 1 10 1 42 1 253 1 45 1 72 2 284 1 17 2 46 1 20 1 99 1 351 1 261 1 23 1 373 1 264 2 238 2 242 3 267 1 107 1 189 1 
54 1 365 1 194 1 329 1 373 1 89 1 113 1 242 1 
153 1 54 1 269 1 55 1 194 2 58 1 113 1 276 1 365 2 89 1 118 1 179 1 182 1 98 1 304 1 354 1 329 1 373 1 217 1 242 2 
182 1 153 1 54 2 269 1 55 1 194 2 58 1 98 1 113 2 276 1 365 2 354 1 329 1 373 1 217 2 89 2 118 2 242 2 
343 1 185 1 217 1 202 1 118 1 
153 1 75 1 276 1 343 1 344 1 185 1 217 2 118 2 
343 1 217 1 118 1 
182 1 54 1 185 1 194 1 113 1 365 1 329 1 373 1 217 1 89 1 118 1 242 1 
276 1 
153 1 75 1 276 1 343 1 185 1 217 2 118 2 105 1 
76 1 153 1 2 2 271 1 185 2 144 1 75 1 22 1 276 1 236 1 343 2 293 2 295 1 85 1 217 5 203 1 118 5 204 1 43 2 
54 1 45 1 72 1 361 1 194 2 284 1 312 1 46 1 32 1 36 1 122 1 198 1 261 1 23 1 365 1 238 1 89 1 242 2 107 1 181 1 
101 1 20 1 
54 1 194 2 156 1 20 2 113 1 365 2 89 1 242 2 131 1 
138 1 228 1 122 1 
45 1 72 1 361 1 194 1 284 1 46 1 20 1 36 1 198 1 261 1 23 1 238 1 242 1 92 1 181 1 107 1 
54 4 194 5 312 1 325 1 47 1 32 2 20 1 113 1 304 1 365 5 330 1 89 4 242 5 131 1 
54 2 365 2 194 2 224 1 98 1 89 2 292 1 242 2 
54 3 365 3 194 3 89 3 20 1 32 1 113 1 242 3 
54 1 365 1 194 1 98 1 89 1 292 1 242 1 
54 1 365 1 194 1 98 1 156 1 89 1 113 1 242 1 131 1 
54 3 55 1 194 4 58 1 113 2 340 1 198 1 118 1 250 1 253 1 72 1 17 2 20 1 351 1 261 1 354 1 23 1 128 1 217 1 264 1 131 1 267 1 77 1 172 1 269 1 361 1 312 1 32 1 36 1 365 3 89 3 320 1 181 1 42 1 45 1 142 1 284 1 98 2 46 1 99 1 373 1 238 1 242 4 107 1 189 1 
54 1 365 2 194 2 89 1 20 1 47 1 32 1 242 2 304 1 
54 3 269 1 142 1 55 1 194 3 312 1 58 1 98 1 32 2 113 1 276 1 365 3 354 1 217 1 89 3 118 1 131 1 242 3 9 1 
54 2 194 2 32 1 113 1 228 1 122 1 365 2 89 2 131 1 242 2 
45 1 72 1 361 1 194 1 284 1 46 1 20 1 36 1 198 1 261 1 23 1 238 1 242 1 181 1 107 1 
72 1 361 1 194 1 284 1 46 1 20 1 226 1 198 1 114 1 261 1 23 1 238 1 242 1 181 1 107 1 
191 1 192 1 310 2 228 2 274 1 248 1 201 1 138 2 249 1 320 1 42 2 121 1 253 1 17 2 18 1 99 1 351 1 122 2 104 1 356 1 264 4 240 1 267 1 189 1 
54 1 354 1 365 1 194 1 98 1 89 1 224 1 242 1 
56 1 268 1 
56 1 268 1 
5 1 308 1 
5 1 308 1 
5 1 308 1 
294 1 56 1 268 1 
56 1 369 1 268 1 
5 1 29 1 56 2 308 1 175 1 268 2 
294 1 56 1 268 1 
294 1 56 1 268 1 
0 1 56 1 268 1 
0 1 56 1 268 1 
0 1 56 1 268 1 
110 1 54 2 56 1 194 2 134 1 364 1 159 1 345 1 247 1 365 2 89 2 118 1 90 1 120 1 282 1 300 1 211 1 20 1 369 1 301 1 145 1 217 1 242 2 268 1 
56 2 211 2 315 1 175 1 159 2 364 2 276 1 200 2 345 1 62 1 247 2 178 1 217 2 278 1 118 2 120 3 359 1 281 1 268 2 
235 1 100 1 164 1 
235 1 164 1 6 1 
100 2 372 1 164 3 6 1 251 1 80 1 
100 1 372 1 164 2 6 1 251 1 91 1 
100 1 372 2 164 2 6 1 251 1 
110 1 331 1 153 1 2 1 192 1 193 2 311 2 227 1 274 1 343 1 276 2 293 1 248 1 295 2 319 1 296 1 39 1 203 1 118 5 230 1 249 1 41 1 43 1 185 4 301 1 259 1 145 1 75 1 22 3 126 3 355 2 166 1 217 5 
110 4 153 1 2 2 192 3 193 6 311 6 227 3 136 1 274 3 343 6 276 5 63 1 293 2 248 3 295 6 319 1 296 2 202 5 118 9 203 1 68 1 230 3 249 3 43 2 140 1 185 7 259 2 75 1 236 1 22 8 306 1 126 9 166 3 188 1 217 9 239 5 
110 1 153 1 331 1 54 1 2 1 192 1 194 1 311 2 193 2 113 1 227 1 274 1 276 3 365 1 293 1 248 1 295 2 296 1 89 1 118 3 230 2 41 1 249 1 43 1 182 1 185 2 259 1 236 1 22 3 355 1 126 4 329 1 166 1 373 1 263 1 217 3 242 1 
110 2 331 1 153 1 54 1 2 1 192 2 194 1 193 4 113 1 293 1 63 1 248 2 295 4 296 1 118 4 249 2 259 1 22 5 355 2 126 7 166 2 263 1 217 4 311 4 227 2 136 1 274 2 276 4 365 1 89 1 41 1 230 3 43 1 182 1 140 1 185 3 236 1 329 1 373 1 242 1 
101 1 261 1 187 1 
261 1 125 1 
190 1 
261 1 23 1 107 1 
261 1 97 1 
261 1 107 1 
11 1 261 3 23 1 187 2 107 1 152 1 
171 1 95 1 283 1 334 1 192 1 270 1 310 3 18 1 19 1 157 1 275 1 237 1 264 6 249 1 42 3 121 2 298 1 
171 1 95 1 283 1 334 1 192 1 270 1 310 3 18 1 19 1 157 1 275 1 237 1 264 6 249 1 42 3 121 2 298 1 
171 1 95 1 283 1 334 1 192 1 270 1 310 3 18 1 19 1 157 1 275 1 237 1 264 6 249 1 241 1 42 3 121 2 298 1 
171 2 333 1 28 1 334 2 270 1 192 4 310 15 272 1 157 1 197 1 274 3 275 2 248 3 320 1 249 4 42 15 298 2 121 9 95 1 253 1 71 1 283 5 255 1 17 2 18 4 19 1 351 1 49 1 186 3 166 3 237 2 264 30 130 4 189 1 
171 1 334 1 192 1 270 1 310 4 272 1 157 1 275 1 249 1 320 2 298 1 42 4 121 3 253 2 283 1 324 1 17 4 18 2 19 1 370 1 351 2 237 1 264 8 189 2 
221 1 222 1 291 2 59 2 80 1 198 1 84 1 6 1 67 1 206 1 44 1 252 1 96 1 72 1 284 1 16 1 164 2 46 1 352 1 235 1 100 1 305 1 286 1 214 1 102 1 103 1 127 1 238 1 357 1 358 1 
221 1 243 1 222 1 314 1 291 3 225 1 59 3 80 1 198 1 84 1 6 1 67 2 206 1 44 1 96 1 72 1 284 1 16 1 164 2 46 1 352 1 235 1 100 1 214 1 102 1 103 1 127 1 238 1 357 1 358 1 
221 1 243 1 222 1 314 1 291 2 59 2 80 1 198 1 84 1 6 1 67 2 206 1 44 1 96 1 72 1 284 1 164 2 46 1 100 1 235 1 214 1 102 1 103 1 238 1 358 1 
221 2 72 1 284 1 46 1 225 1 291 1 246 1 59 1 352 1 82 1 341 1 198 1 261 1 214 2 103 2 84 2 127 1 238 1 150 1 107 1 366 1 181 1 169 1 
221 1 314 1 291 1 59 1 80 1 198 1 84 1 6 1 206 1 72 1 284 1 16 1 164 2 46 1 352 1 235 1 100 1 305 1 286 1 214 1 102 1 103 1 127 1 238 1 357 1 358 1 
326 1 
2 1 72 1 299 1 259 1 38 1 198 1 343 1 22 1 293 1 217 1 238 1 118 1 203 1 181 1 43 1 
212 1 277 1 213 1 217 1 87 1 338 1 118 1 139 1 
212 1 277 1 210 1 217 1 87 1 338 1 118 1 279 1 139 1 
212 1 277 1 213 1 183 1 217 1 87 1 338 1 118 1 139 1 
212 1 75 1 277 1 343 1 213 1 183 1 217 2 87 1 338 1 118 2 105 1 139 1 371 1 
2 1 335 1 196 1 338 1 343 1 277 1 293 1 295 1 87 1 203 1 118 2 230 1 139 1 43 1 183 1 48 1 212 1 75 1 22 1 213 1 262 1 126 1 217 2 167 1 309 1 
2 1 335 1 196 1 338 1 4 1 343 1 277 1 293 1 295 1 87 1 203 1 118 2 230 1 205 1 139 1 43 1 183 1 48 1 212 1 75 1 22 1 213 1 262 1 217 2 218 1 167 1 309 1 
2 1 335 1 196 1 338 1 4 1 343 1 277 1 293 1 295 1 87 1 203 1 118 2 230 1 205 1 139 1 43 1 183 1 48 1 212 1 75 1 22 1 213 1 262 1 217 2 218 1 167 1 309 1 
2 1 195 1 338 1 245 1 343 1 277 1 293 1 295 1 87 1 117 1 203 1 118 2 205 1 139 1 43 1 163 1 183 1 48 1 212 1 75 1 22 1 213 1 262 1 126 1 217 2 167 1 168 1 
212 1 277 1 213 1 183 1 30 1 217 1 87 1 338 1 118 1 139 1 
212 1 277 1 213 1 183 1 30 1 217 1 87 1 338 1 118 1 139 1 
2 1 195 1 338 1 245 1 343 1 277 1 293 1 295 1 87 1 117 1 203 1 118 2 139 1 43 1 183 1 48 1 212 1 75 1 22 1 213 1 262 1 126 1 217 2 167 1 
191 1 253 1 192 1 270 1 310 2 18 1 17 2 20 2 19 1 157 1 99 1 351 1 101 1 275 1 237 1 264 5 249 1 320 1 267 1 42 3 121 1 189 1 
77 1 133 1 310 1 138 3 250 1 320 2 297 1 280 1 42 3 70 1 253 2 98 1 17 4 20 1 99 2 351 2 186 1 122 3 50 1 264 4 130 1 267 1 189 2 
77 1 54 1 361 1 310 1 194 2 312 1 32 1 36 1 228 1 198 1 365 1 86 1 89 1 320 1 92 1 181 1 42 1 10 1 45 1 253 1 72 1 284 1 46 1 256 1 17 2 20 1 99 1 351 1 261 1 23 1 50 1 238 1 264 2 242 2 106 1 107 1 267 1 189 1 
54 1 192 3 194 3 157 1 198 3 248 2 249 3 10 1 121 7 253 3 72 3 209 1 18 3 17 6 20 2 19 1 351 3 122 6 261 2 23 2 166 2 264 19 267 3 77 1 172 2 270 1 361 2 310 9 312 1 313 2 314 1 32 1 34 2 36 2 228 6 274 2 275 1 365 1 138 6 89 1 320 3 321 1 181 1 42 10 94 2 45 2 283 4 284 2 46 2 99 3 328 1 50 1 237 1 238 3 242 3 151 2 107 2 189 3 
77 1 154 1 191 1 54 1 360 1 310 1 194 1 314 1 337 1 32 1 135 2 82 1 342 1 198 6 83 1 176 1 365 1 115 1 89 1 320 2 181 2 366 1 10 1 42 1 252 1 253 2 72 7 143 1 284 3 46 4 17 4 348 1 99 2 74 1 351 2 261 4 23 1 238 7 264 2 242 1 267 2 107 3 189 2 
54 1 192 1 310 1 194 1 113 1 228 1 274 1 365 1 248 1 138 1 89 1 320 1 249 1 121 1 42 2 253 1 18 1 17 2 99 1 351 1 327 1 122 1 50 1 166 1 264 3 131 1 242 1 267 1 189 1 
191 1 283 1 253 1 310 2 17 2 99 1 351 1 228 1 122 1 274 1 201 1 138 1 264 2 320 1 249 1 267 1 121 1 189 1 
191 1 253 1 192 1 18 1 17 2 99 1 351 1 228 1 122 1 248 1 104 1 138 1 264 2 320 1 267 1 121 1 189 1 42 2 
191 1 192 1 310 2 274 1 228 2 248 1 138 2 249 1 320 1 121 2 42 2 253 1 283 1 17 2 18 1 99 1 351 1 122 2 166 1 264 4 267 1 189 1 
283 1 253 1 310 2 17 2 99 1 351 1 228 1 122 1 274 1 83 1 201 1 138 1 264 2 320 1 249 1 267 1 121 1 189 1 
253 1 192 1 18 1 17 2 99 1 351 1 228 1 122 1 83 1 248 1 104 1 138 1 264 2 320 1 267 1 121 1 189 1 42 2 
192 1 310 2 274 1 228 2 83 1 248 1 138 2 249 1 320 1 121 2 42 2 253 1 283 1 17 2 18 1 99 1 351 1 122 2 166 1 264 4 267 1 189 1 
192 1 310 2 274 1 228 2 248 1 138 2 249 1 320 1 121 2 42 2 253 1 283 1 17 2 18 1 99 1 351 1 122 2 166 1 264 4 267 1 189 1 
77 1 172 1 310 1 361 1 194 1 36 1 198 1 320 1 181 1 10 1 42 1 45 1 253 1 72 1 284 1 46 1 17 2 20 1 99 1 351 1 261 1 23 1 264 2 238 1 242 1 107 1 267 1 189 1 
77 1 53 1 310 1 361 1 194 1 226 1 198 1 114 1 320 1 181 1 10 1 42 1 253 1 72 1 284 1 46 1 17 2 20 1 99 1 351 1 261 1 23 1 264 2 238 1 242 1 107 1 267 1 189 1 
192 1 310 2 274 1 228 2 248 1 138 2 249 1 320 1 121 2 42 2 253 1 283 1 17 2 18 1 99 1 351 1 122 2 50 1 166 1 264 4 267 1 189 1 
172 1 192 1 310 2 361 1 194 1 36 1 228 2 274 1 198 1 248 1 138 2 249 1 320 1 42 2 121 2 252 1 283 1 45 1 253 1 72 1 284 1 18 1 46 1 17 2 99 1 351 1 122 2 261 1 23 1 166 1 264 4 238 1 151 1 242 1 107 1 267 1 189 1 
54 1 192 1 310 2 194 1 113 1 274 1 228 1 365 1 248 1 138 1 89 1 320 1 231 1 249 1 42 1 121 1 283 1 253 1 17 2 99 1 351 1 122 1 50 1 166 1 264 3 131 1 242 1 267 1 189 1 
26 2 192 4 310 15 174 1 272 1 274 4 199 3 177 1 318 1 64 1 248 4 65 1 7 1 320 3 249 4 322 1 42 17 121 5 367 1 253 3 71 1 283 3 184 1 254 1 18 2 17 6 370 1 258 1 49 3 351 3 186 3 123 1 285 1 166 4 264 32 130 4 189 3 
26 2 192 3 310 17 174 1 272 2 274 4 199 4 177 1 318 1 64 1 248 3 65 1 7 1 320 4 249 4 322 1 42 16 121 6 367 1 253 4 71 1 283 3 184 1 254 1 18 3 17 8 370 1 258 1 49 3 351 4 186 3 123 1 285 1 166 4 264 33 130 4 189 4 
26 1 270 1 192 7 310 23 174 1 272 1 157 1 274 6 275 1 199 3 177 1 318 1 64 1 248 6 65 1 320 2 249 7 322 1 42 23 121 12 367 1 253 2 71 2 283 6 184 1 254 1 18 6 17 4 19 1 370 1 258 1 49 2 351 2 186 4 123 1 166 6 237 1 51 2 264 46 130 4 189 2 
26 1 192 3 310 9 274 3 199 2 64 1 248 3 65 1 320 2 249 3 322 1 42 10 121 6 253 2 71 1 283 3 184 2 254 1 18 3 17 4 370 1 49 1 351 2 186 1 285 1 166 3 287 1 264 19 130 2 189 2 
26 2 192 2 310 13 174 1 272 2 274 3 199 3 177 1 318 1 64 2 248 2 65 1 320 3 249 3 322 1 121 2 42 11 367 1 283 1 253 3 184 1 254 1 18 1 17 6 370 1 258 1 351 3 49 2 186 2 123 1 166 3 264 24 130 2 189 3 
173 1 247 1 56 1 211 1 315 1 175 1 359 1 364 1 268 1 159 1 
369 1 90 1 
247 1 56 1 211 1 24 1 8 1 61 1 364 1 268 1 159 1 
294 1 73 1 
0 1 29 1 223 1 
56 1 211 1 315 1 175 1 159 1 364 1 276 1 200 1 345 1 62 1 247 1 178 1 217 1 278 1 118 1 120 2 359 1 268 1 
56 1 211 1 315 1 175 1 159 1 364 1 276 1 200 1 345 1 62 1 247 1 178 1 217 1 278 1 118 1 120 2 359 1 268 1 
56 1 211 1 315 1 175 1 159 1 364 1 276 1 200 1 345 1 62 1 247 1 178 1 217 1 278 1 118 1 120 2 359 1 268 1 
29 1 294 1 73 1 
29 1 294 1 73 1 
0 1 223 1 
0 1 29 1 223 1 
300 1 134 1 
110 1 54 2 194 2 56 1 134 1 364 1 159 1 200 1 247 1 365 2 178 1 89 2 118 1 90 1 120 1 282 1 185 1 300 1 211 1 20 1 369 1 301 1 145 1 146 1 217 1 242 2 268 1 
77 1 27 1 155 1 3 1 310 1 194 2 135 2 198 2 365 2 162 1 320 1 10 1 42 1 208 1 253 1 72 2 143 1 284 1 46 1 17 2 348 1 99 1 351 1 261 1 50 1 238 2 264 2 242 2 107 1 267 1 189 1 
252 1 72 2 284 1 164 2 314 1 46 1 158 1 80 1 235 1 100 1 198 2 229 1 124 1 102 1 103 1 6 1 238 2 357 1 358 1 
72 1 284 1 164 2 314 1 46 1 158 1 165 1 80 1 235 1 100 1 198 1 102 1 103 1 6 1 238 1 357 1 358 1 
72 1 284 1 57 1 46 1 246 1 82 1 198 1 229 1 261 1 103 1 238 1 107 1 181 1 366 1 
72 1 284 1 164 2 314 1 46 1 158 1 80 1 235 1 100 1 198 1 229 1 124 1 102 1 103 1 6 1 238 1 357 1 358 1 
363 1 
76 1 153 1 101 1 22 1 276 1 295 1 271 1 
153 1 2 1 335 1 196 1 75 1 343 1 276 2 22 1 293 1 126 1 295 1 217 1 118 1 203 1 230 1 43 1 309 1 
2 2 192 1 55 1 290 1 193 3 198 1 343 2 293 2 248 1 295 3 203 2 118 2 249 1 72 1 15 1 259 1 75 1 22 4 261 4 125 2 23 1 126 6 166 1 263 1 217 2 265 1 266 1 132 1 311 3 313 1 227 1 274 1 37 1 276 3 230 3 181 1 43 2 284 1 46 2 149 1 187 1 238 1 107 1 152 1 
153 1 2 2 192 2 112 1 193 5 311 5 174 1 274 2 343 1 276 4 177 1 293 2 248 2 295 4 118 1 203 2 230 3 249 2 43 2 367 1 258 1 49 1 186 1 123 1 75 1 22 7 126 6 166 2 263 1 217 1 130 1 
54 1 2 1 192 1 194 1 227 1 157 1 113 1 275 1 293 1 365 1 295 2 89 1 203 1 118 1 249 2 43 1 182 1 22 2 329 1 263 1 237 1 373 1 217 1 218 1 219 1 242 1 
76 1 153 1 2 1 271 1 276 1 22 1 293 1 295 1 203 1 43 1 
192 1 311 2 193 2 227 1 274 1 22 2 276 2 126 4 248 1 166 1 295 2 263 1 249 1 230 2 
153 1 75 1 276 1 343 1 217 1 118 1 
2 1 72 1 299 1 259 1 198 1 38 1 343 1 22 1 293 1 238 1 307 1 203 1 181 1 43 1 
77 1 54 2 172 1 361 1 194 3 113 2 340 1 36 1 198 1 365 2 89 2 320 1 181 1 42 1 253 1 45 1 72 1 284 1 17 2 46 1 20 1 99 1 351 1 261 1 23 1 373 1 264 1 238 1 242 3 107 1 267 1 189 1 
153 1 2 1 193 1 259 1 22 1 276 2 293 1 126 2 215 1 295 1 203 1 230 1 43 1 
332 1 247 1 364 1 
247 1 315 1 134 1 119 1 364 1 
332 1 247 1 364 1 
332 1 247 1 364 1 
247 1 88 1 364 1 
247 1 88 1 364 1 
247 1 88 1 364 1 
247 1 364 1 
56 1 268 1 
192 1 270 1 310 3 157 1 275 1 249 1 320 1 42 4 121 1 253 1 17 2 18 1 19 1 370 1 49 1 351 1 186 1 123 1 237 1 264 7 130 1 189 1 
192 1 270 1 310 5 157 1 274 1 275 1 320 2 249 2 42 5 121 2 253 2 12 1 71 1 283 1 18 1 17 4 19 1 370 1 49 1 351 2 186 1 123 1 166 1 237 1 264 10 130 2 189 2 
192 2 310 6 174 1 272 1 274 2 177 1 248 2 320 3 249 2 42 7 121 2 367 1 12 1 283 1 253 3 17 6 18 1 370 1 258 1 49 1 351 3 186 1 123 1 166 2 264 13 130 1 189 3 
192 1 310 7 174 1 272 1 274 2 177 1 248 1 320 3 249 2 42 4 121 2 367 1 12 1 283 1 253 3 17 6 18 1 370 1 258 1 49 1 351 3 186 1 123 1 166 2 264 11 130 1 189 3 
192 1 270 1 310 3 157 1 275 1 249 1 320 1 42 4 121 1 253 1 17 2 18 1 19 1 370 1 49 1 351 1 186 1 123 1 237 1 264 7 130 1 189 1 
192 2 310 6 174 1 274 2 177 1 248 2 320 1 249 2 42 6 121 2 367 1 283 1 253 1 17 2 18 1 370 1 258 1 49 1 351 1 186 1 123 1 166 2 264 12 130 1 189 1 
192 1 310 7 174 1 272 2 274 2 177 1 248 1 320 4 249 2 42 5 121 2 367 1 283 1 12 1 253 4 17 8 18 1 370 1 258 1 49 1 351 4 186 1 123 1 166 2 264 12 130 1 189 4 
192 1 310 7 174 1 272 2 274 2 177 1 248 1 320 4 249 2 42 5 121 4 367 1 283 2 253 4 17 8 18 2 370 1 258 1 49 1 351 4 186 1 123 1 285 1 166 2 264 12 130 1 189 4 
171 1 283 4 192 2 270 1 310 5 18 5 19 1 157 2 275 4 237 4 264 10 219 1 249 2 42 5 121 9 
192 1 310 7 174 1 272 2 274 2 177 1 248 1 320 4 249 2 42 5 121 2 367 1 283 1 253 4 17 8 18 1 370 1 258 1 49 1 351 4 186 1 123 1 285 1 166 2 264 12 130 1 189 4 
283 1 253 2 192 1 270 1 310 3 18 1 17 4 272 1 19 1 157 1 351 2 275 1 237 1 264 7 249 1 320 2 42 4 121 2 189 2 
270 1 192 1 310 2 18 1 19 1 157 1 101 1 275 1 237 1 264 5 249 1 42 3 121 1 
12 1 253 1 283 1 192 1 310 2 18 1 17 2 351 1 274 1 248 1 166 1 264 4 320 1 249 1 42 2 121 2 189 1 
71 1 283 1 192 1 310 3 18 1 49 1 186 1 274 1 248 1 166 1 264 7 130 2 249 1 42 4 121 2 
192 2 270 1 310 7 272 1 157 1 275 2 249 2 320 1 297 1 280 1 42 8 121 5 253 1 283 3 17 2 18 2 19 1 351 1 186 1 237 2 264 15 130 1 219 1 189 1 
264 1 130 1 42 1 
310 1 264 1 186 1 
253 1 12 1 283 1 192 1 310 3 313 1 17 2 18 2 351 1 274 1 248 1 166 1 264 6 320 1 249 1 189 1 42 3 121 3 
192 2 310 6 174 1 274 2 177 1 248 2 320 1 249 2 42 6 121 2 367 1 283 1 253 1 17 2 18 1 370 1 258 1 49 1 351 1 186 1 123 1 166 2 264 12 130 1 189 1 
283 1 192 1 310 3 18 1 157 1 275 1 237 1 264 6 249 1 42 3 121 2 
283 1 253 1 270 1 310 1 18 1 17 2 272 1 19 1 351 1 275 1 237 1 264 3 297 1 320 1 121 2 42 2 189 1 
283 1 192 2 310 4 18 1 157 1 275 1 237 1 264 8 219 1 249 2 121 2 42 4 
253 1 283 1 310 2 17 2 370 1 351 1 274 1 264 2 320 1 249 1 189 1 121 1 
253 1 283 1 192 1 310 2 18 1 17 2 370 1 351 1 274 1 248 1 166 1 264 4 320 1 249 1 42 2 121 2 189 1 
253 3 283 1 310 1 17 6 18 1 272 1 370 1 351 3 285 1 275 1 237 1 264 3 297 1 320 3 42 2 189 3 121 2 
333 1 270 1 192 5 310 15 272 2 157 2 197 1 274 3 275 3 248 3 297 1 320 5 249 5 42 18 121 11 12 1 253 5 71 1 283 5 255 1 17 10 18 6 19 1 370 1 49 1 351 5 186 3 285 1 166 3 237 3 264 33 130 4 189 5 
365 1 194 1 20 1 47 1 242 1 33 1 304 1 
368 1 346 1 14 1 194 1 20 1 47 1 33 1 304 1 365 1 93 1 289 1 242 1 
101 1 198 1 261 1 72 1 284 1 238 1 46 1 107 1 366 1 181 1 82 1 
54 1 45 1 72 1 361 1 194 2 284 1 46 1 20 1 32 1 198 1 261 1 23 1 365 1 238 1 89 1 242 2 107 1 181 1 
54 1 361 1 194 2 58 1 32 1 198 1 161 1 365 2 66 1 89 2 45 1 72 1 97 1 284 1 46 1 98 1 20 1 261 3 23 2 354 1 238 1 242 2 107 2 
54 1 361 1 194 2 58 1 32 1 198 2 114 1 161 1 365 2 66 1 89 2 72 2 97 1 284 1 46 1 98 1 20 1 350 1 261 3 23 2 354 1 238 2 242 2 107 2 
153 1 54 1 55 1 194 1 113 1 198 1 343 1 161 1 276 1 365 1 66 1 89 1 118 2 182 1 72 1 97 1 284 1 46 1 349 1 261 4 125 1 23 1 329 1 187 1 373 1 238 1 217 2 242 1 107 1 170 1 
153 1 54 1 55 1 194 1 113 1 198 1 343 1 161 1 276 1 365 1 66 1 89 1 118 2 182 1 72 1 97 1 284 1 46 1 261 4 125 1 23 1 329 1 187 1 373 1 238 1 217 2 242 1 266 1 107 1 
198 1 260 1 72 1 284 1 238 1 46 1 
72 1 284 1 337 1 46 2 74 1 198 1 261 1 23 1 238 1 374 1 181 1 107 1 152 1 
54 1 172 1 192 1 270 1 155 1 310 2 361 1 194 2 32 1 157 1 34 1 36 1 275 1 198 1 365 1 89 1 249 1 320 2 42 3 121 1 252 1 253 2 45 1 72 1 284 1 18 1 46 1 17 4 20 2 19 1 99 2 351 2 261 1 23 1 50 1 237 1 264 5 238 1 242 2 151 1 107 1 267 2 189 2 
153 2 54 1 2 2 192 2 55 1 290 1 194 1 157 1 113 1 198 1 343 2 293 2 295 5 118 3 203 2 249 2 72 1 75 1 22 4 261 2 125 1 263 1 217 3 307 1 219 1 266 1 265 1 76 1 271 1 227 1 275 1 276 2 365 1 89 1 181 1 43 2 182 1 185 1 149 1 187 1 329 1 237 1 373 1 238 1 242 1 
252 1 72 2 284 1 46 2 260 1 198 2 261 2 23 1 187 1 238 2 107 1 132 1 152 1 
252 1 233 1 72 4 284 1 46 1 350 1 82 1 198 4 261 1 238 4 181 1 366 1 107 1 
154 1 72 1 284 1 337 1 46 2 74 1 198 1 176 1 261 1 328 1 23 1 238 1 107 1 
235 1 198 1 102 1 72 1 284 1 164 1 6 1 238 1 46 1 181 1 
252 1 72 2 3 1 284 1 314 1 46 1 348 1 198 2 261 1 238 2 107 1 
252 1 233 1 72 5 284 2 46 2 348 1 82 1 342 1 198 4 161 1 261 3 115 1 238 5 366 1 181 1 107 2 
252 1 233 1 72 5 284 2 46 2 348 1 82 1 342 1 198 4 161 1 353 1 261 3 238 5 366 1 181 1 107 2 
54 1 72 1 361 1 194 2 284 1 46 1 20 1 32 1 198 1 114 1 261 1 23 1 365 1 238 1 89 1 242 2 107 1 181 1 
72 1 284 1 337 1 46 2 74 1 198 1 161 1 261 1 23 1 238 1 374 1 107 1 152 1 
234 1 20 1 316 1 273 1 244 1 
153 1 54 1 269 1 55 1 194 1 58 1 113 1 316 1 273 1 244 1 60 1 276 1 365 1 89 1 118 2 182 1 142 1 185 1 234 1 98 1 354 1 329 1 373 1 129 1 217 2 242 1 108 1 
208 1 27 1 365 1 194 1 234 1 273 1 244 1 162 1 242 1 
129 1 234 1 108 1 
44 1 101 1 96 1 222 1 
44 1 96 1 222 1 127 1 291 1 59 1 352 1 
221 1 214 1 291 1 
44 1 96 1 222 1 31 1 291 3 59 3 352 1 21 1 160 2 147 1 286 1 127 1 
44 1 96 1 137 1 222 1 127 1 67 1 291 2 59 2 352 1 
235 1 100 1 44 1 286 1 127 1 164 1 302 1 291 1 59 1 303 1 352 1 
44 1 286 1 222 1 127 1 291 1 59 1 352 1 
286 1 96 1 222 2 127 1 291 1 59 1 352 1 
44 1 286 1 13 1 222 1 127 2 116 1 347 1 291 2 59 2 352 2 
109 1 44 2 96 1 78 1 222 1 291 3 59 3 257 1 352 1 303 1 286 1 127 1 67 2 
44 1 96 1 222 1 164 2 291 2 59 2 352 1 80 1 100 1 235 1 286 1 127 1 6 1 67 1 232 1 
109 1 44 2 96 1 222 1 291 4 339 1 59 4 352 2 303 1 286 1 137 1 127 2 67 2 
44 1 286 1 96 1 222 1 127 1 291 1 59 1 352 1 
109 1 44 3 96 2 222 2 291 4 59 4 81 1 352 1 303 1 21 1 160 1 147 1 127 1 67 2 
44 1 1 1 317 1 286 1 96 1 222 1 127 1 67 1 291 2 59 2 180 1 352 1 
44 1 323 1 96 1 222 1 291 3 59 3 352 1 21 1 160 2 147 2 286 1 127 1 
44 1 40 1 288 1 
148 1 286 1 127 1 291 1 59 1 352 1 
44 1 286 1 96 1 222 1 127 1 67 1 291 2 257 1 59 2 352 1 
52 1 
44 1 286 1 96 1 222 1 127 1 291 1 59 1 352 1 
44 1 96 1 222 1 291 3 59 3 257 1 352 1 160 1 286 1 127 1 67 1 
44 1 109 1 81 1 303 1 
44 1 222 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 145 (208,300) (208,300) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 145 (208,300) (208,300) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 145 (208,300) (208,300) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 145 (208,300) (208,300) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 145 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 145 87 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 145 87 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (176,333) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (176,333) 240 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (176,333) 240 164 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 88 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 156 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 20 189 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 20 189 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 20 189 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 20 189 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 20 189 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 229 (112,202,320) (112,202,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 229 (112,202,320) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (64,274) (13,120,292) (112,202,320) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (223,294) (51,197) (51,197) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 229 (112,202,320) (112,202,320) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 32 29 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 32 29 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 150 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 226 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 132 26 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 229 (13,120,292) (13,120,292) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException 229 (13,120,292) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (223,294) (223,294) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException 229 (13,120,292) (13,120,292) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 334 65 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 20 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 219 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 150 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 20 (139,307) (139,307) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 132 26 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2279 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | ASSIGN | 2976 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 642 | stmt -> ;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | - -> %
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z | OPERATOR | 5039 | && -> ||
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
300 1 208 1 160 9 127 4 310 2 268 1 312 1 84 1 314 2 11 1 90 2 317 4 93 1 181 1 98 1 187 1 59 2 282 2 60 6 107 1 145 1 70 9 290 2 115 2 262 3 298 1 
300 1 208 1 160 9 127 4 310 2 268 1 312 1 84 1 314 2 11 1 90 2 317 4 93 1 181 1 98 1 187 1 59 2 282 2 60 6 107 1 145 1 70 9 290 2 115 2 262 3 298 1 
300 1 208 1 160 9 127 4 310 2 268 1 312 1 84 1 314 2 11 1 90 2 317 4 93 1 181 1 98 1 187 1 59 2 282 2 60 6 107 1 145 1 70 9 290 2 115 2 262 3 298 1 
300 1 59 2 208 1 60 4 282 2 160 7 127 3 107 1 268 1 310 2 145 1 312 1 84 1 314 2 70 7 11 1 290 1 317 3 90 2 93 1 115 2 98 1 298 1 262 2 187 1 
59 1 282 1 160 4 60 3 127 2 268 1 145 1 312 1 314 1 70 4 90 1 290 2 317 2 181 1 115 1 262 1 
282 1 160 2 78 1 5 1 268 1 310 1 85 1 314 1 70 2 317 1 90 1 93 1 56 1 115 1 258 1 187 1 
282 2 160 3 60 1 127 1 5 1 268 1 310 1 85 1 70 3 317 2 115 2 98 1 262 1 
59 1 282 2 160 9 60 7 127 4 326 1 268 1 310 1 145 1 312 1 84 1 314 1 87 1 70 9 90 1 290 2 317 4 181 1 115 2 98 1 298 1 262 3 
59 1 282 2 160 9 60 7 127 4 326 1 268 1 310 1 145 1 312 1 84 1 314 1 87 1 70 9 90 1 290 2 317 4 181 1 115 2 98 1 298 1 262 3 
142 1 48 1 150 1 
99 1 
25 2 338 2 337 1 152 1 106 2 172 2 158 2 215 2 
205 2 265 2 2 1 3 2 41 1 129 1 44 1 43 1 172 3 215 2 216 1 175 1 86 1 49 1 136 1 188 1 104 1 238 1 106 3 330 1 68 2 111 1 146 1 25 2 288 1 338 2 337 1 152 1 253 1 74 2 157 1 35 1 158 2 117 1 341 1 119 1 118 1 
25 1 338 1 337 1 72 1 106 1 340 1 172 1 158 1 215 1 235 1 
142 1 190 1 106 1 144 1 172 1 147 1 221 1 45 1 335 1 48 1 338 1 28 1 31 1 340 1 
142 1 106 1 144 1 215 1 172 1 25 1 45 2 221 1 335 1 48 1 338 1 28 1 31 2 340 1 158 1 
45 1 239 1 30 1 31 1 297 1 
76 1 45 2 142 1 48 1 18 1 30 1 31 2 297 1 
45 1 31 1 297 1 
62 1 106 1 215 1 172 1 25 1 45 1 337 1 338 1 72 1 30 1 31 1 340 1 235 1 158 1 
142 1 
76 1 45 2 142 1 48 1 148 1 30 1 31 2 297 1 
204 2 76 1 142 1 209 1 4 1 168 1 83 1 45 5 46 1 48 1 27 1 89 2 275 1 53 1 255 2 30 2 228 1 31 5 297 2 
205 1 188 1 104 1 238 1 3 1 106 2 22 1 129 1 330 1 215 1 172 2 68 1 86 1 338 1 252 1 14 1 136 1 117 1 158 1 118 1 
150 1 152 1 
123 1 106 2 172 2 215 1 25 1 338 2 152 2 186 1 158 1 
47 1 252 1 244 1 
205 1 188 1 104 1 238 1 3 1 106 1 167 1 129 1 330 1 172 1 68 1 86 1 152 1 136 1 117 1 118 1 
25 1 338 3 152 1 106 3 14 1 172 3 158 3 215 3 
338 1 72 1 106 1 340 1 172 1 158 1 215 1 
25 1 123 1 338 1 106 1 340 1 172 1 158 1 215 1 186 1 
205 1 265 2 3 1 41 1 129 1 44 1 172 4 215 3 216 1 175 1 221 1 45 1 86 1 177 1 49 1 14 1 136 1 186 1 188 1 104 1 238 1 106 4 22 1 144 1 330 1 111 1 249 1 68 1 25 2 335 1 338 3 337 1 152 1 28 1 31 1 74 1 157 1 340 1 35 1 117 1 158 3 341 1 119 1 118 1 
147 1 338 2 152 1 106 2 14 1 172 2 158 1 215 1 24 1 
142 1 106 3 22 1 144 1 215 3 172 3 25 1 45 1 221 1 133 1 335 1 338 3 177 1 28 1 14 2 31 1 340 1 186 1 158 3 
106 2 244 1 215 2 172 2 25 1 338 2 252 1 14 1 186 1 158 2 
205 1 188 1 238 1 104 1 3 1 106 1 129 1 330 1 172 1 68 1 86 1 152 1 136 1 117 1 118 1 
205 1 0 1 238 1 104 1 3 1 106 1 129 1 172 1 68 1 86 1 152 1 57 1 136 1 117 1 118 1 
265 2 41 1 44 1 216 1 173 1 175 1 47 2 49 1 179 1 227 1 182 1 237 1 61 1 324 1 244 2 146 2 151 1 252 2 259 1 339 1 157 2 74 4 299 1 119 1 
338 1 28 1 106 1 340 1 172 1 158 1 215 1 217 1 
25 1 147 1 338 5 152 1 106 5 22 1 14 2 212 1 130 1 186 1 172 5 158 4 215 4 24 1 
338 2 72 1 106 2 340 1 172 2 158 2 215 2 217 1 
94 1 333 1 
94 1 333 1 
38 1 176 1 
38 1 176 1 
38 1 176 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
240 1 94 1 313 1 333 1 
45 1 164 1 240 1 94 1 31 1 313 1 333 1 
59 1 90 1 314 1 
90 1 258 1 314 1 
59 2 134 1 64 1 267 1 258 1 314 3 
59 1 274 1 134 1 267 1 258 1 314 2 
59 1 134 1 267 2 258 1 314 2 
263 1 76 1 4 2 271 2 172 1 89 1 179 1 99 4 106 1 25 1 27 3 30 4 31 5 297 1 204 1 306 1 42 1 215 1 45 5 48 1 53 1 235 1 58 2 142 3 62 1 324 1 242 1 246 1 331 1 337 1 338 1 149 2 151 1 73 2 72 1 255 1 257 1 259 1 340 1 158 1 
263 1 76 1 4 2 271 2 172 1 12 1 89 1 179 1 279 1 99 4 106 1 286 2 25 1 27 3 30 4 31 5 297 3 204 1 306 1 215 1 45 5 48 1 53 1 235 1 58 2 142 3 62 1 324 1 239 2 242 1 246 1 331 1 338 1 337 1 149 2 151 1 72 1 255 1 259 1 340 1 158 1 
204 1 263 1 306 1 4 2 42 1 271 2 172 1 215 1 45 3 46 1 48 1 89 1 179 1 235 1 58 2 99 4 142 3 62 1 324 1 106 1 246 1 331 1 25 1 338 1 337 1 149 2 27 3 151 1 72 1 73 1 255 1 30 2 257 1 31 3 259 1 340 1 158 1 
204 1 263 1 306 1 4 2 271 2 42 1 45 2 46 1 88 1 89 1 179 1 99 4 58 2 142 2 324 1 246 1 331 1 149 2 27 3 151 1 73 1 255 1 30 1 31 2 257 1 259 1 
104 1 163 1 150 1 
104 1 247 1 
6 1 
104 1 136 1 
156 1 
104 1 136 1 118 1 
315 1 104 1 
146 1 189 1 20 1 153 1 74 1 
146 1 189 1 20 1 153 1 74 1 
146 1 189 1 20 1 153 1 318 1 74 1 
146 1 189 1 20 1 153 1 74 1 
146 1 189 1 20 1 153 1 74 1 
205 1 302 1 282 1 160 1 3 1 266 1 310 1 268 1 241 1 68 1 70 1 229 1 115 1 202 1 261 1 320 1 
205 1 60 1 282 1 160 2 3 1 63 1 266 1 310 1 241 1 311 1 68 1 70 2 229 1 55 1 115 1 261 1 320 1 
120 1 205 1 60 1 160 1 238 1 3 1 63 1 64 1 266 1 241 1 310 1 314 1 68 1 112 1 70 1 55 1 258 1 233 1 261 1 117 1 
205 1 282 1 160 1 3 1 266 2 310 2 241 2 311 1 68 1 86 1 197 1 70 1 51 1 294 1 115 1 261 2 17 1 
205 1 282 1 160 1 3 1 266 1 310 1 268 1 241 1 68 1 70 1 229 1 55 1 115 1 202 1 261 1 320 1 
201 1 
76 1 1 1 3 2 79 1 4 2 169 1 8 1 170 2 172 1 86 2 273 1 89 1 276 1 104 1 190 1 106 1 23 1 27 2 28 1 31 3 297 2 117 1 204 1 205 2 301 1 305 1 131 1 45 3 221 1 225 1 53 1 136 1 140 1 234 1 236 1 323 1 238 1 144 1 331 1 68 2 147 1 335 1 338 1 255 1 260 1 340 1 
236 1 76 1 305 1 284 1 190 1 106 1 144 1 170 2 172 1 221 1 45 3 273 1 147 1 335 1 148 1 338 1 28 1 225 1 276 1 31 3 297 2 340 1 
76 1 305 1 170 3 214 1 172 1 273 1 45 3 221 1 48 1 276 1 225 1 236 1 142 1 190 1 106 1 144 1 147 1 335 1 338 1 148 1 28 1 31 3 297 1 340 1 
76 1 305 1 170 3 214 1 172 1 273 1 45 3 221 1 48 1 276 1 225 1 236 1 142 1 190 1 284 1 106 1 144 1 147 1 335 1 148 1 338 1 113 1 28 1 31 3 340 1 297 2 
76 1 79 2 4 1 8 1 170 2 172 2 273 1 89 1 276 1 281 1 102 1 284 2 190 1 106 2 110 1 25 1 113 2 27 1 28 1 29 1 31 3 32 1 297 3 204 1 305 1 215 1 221 1 45 3 48 1 225 1 53 1 235 1 236 1 142 1 323 2 62 1 144 1 147 1 335 1 337 1 148 1 338 2 72 1 255 1 260 1 340 2 158 1 
204 1 305 1 79 1 4 1 8 1 170 2 172 1 273 1 45 2 221 1 89 1 276 1 225 1 53 1 140 1 236 1 323 1 190 1 106 1 144 1 147 1 335 1 338 1 27 1 28 1 255 1 31 2 260 1 340 1 
79 2 4 1 8 1 170 2 172 2 273 1 89 1 276 1 102 1 190 1 106 2 110 1 25 1 27 1 28 1 32 1 31 2 204 1 305 1 215 1 221 1 45 2 48 1 225 1 53 1 235 1 236 1 142 1 323 2 62 1 144 1 147 1 335 1 338 2 337 1 72 1 255 1 260 1 340 2 158 1 
79 2 4 1 8 1 170 2 172 2 273 1 89 1 276 1 102 1 190 1 106 2 110 1 25 1 27 1 28 1 32 1 31 2 204 1 305 1 215 1 221 1 45 2 48 1 225 1 53 1 235 1 236 1 142 1 323 2 62 1 144 1 147 1 335 1 338 2 337 1 72 1 255 1 260 1 340 2 158 1 
204 1 305 1 79 2 4 1 8 1 170 2 215 1 172 2 273 1 45 2 221 1 48 1 89 1 276 1 225 1 277 1 53 1 235 1 236 1 142 1 323 2 62 1 190 1 106 2 327 1 144 1 110 1 25 1 147 1 335 1 337 1 338 2 69 1 27 1 72 1 28 1 255 1 31 2 340 2 158 1 
236 1 305 1 284 1 190 1 106 1 144 1 214 1 170 3 172 1 221 1 45 2 273 1 147 1 335 1 338 1 113 1 28 1 225 1 276 1 29 1 32 1 31 2 297 1 340 1 
236 1 305 1 284 1 190 1 106 1 144 1 214 1 170 3 172 1 221 1 45 2 273 1 147 1 335 1 338 1 113 1 28 1 225 1 276 1 29 1 32 1 31 2 297 1 340 1 
204 1 305 1 79 1 4 1 8 1 170 2 172 1 273 1 45 2 221 1 89 1 276 1 225 1 53 1 277 1 140 1 236 1 323 1 190 1 106 1 144 1 147 1 335 1 338 1 27 1 28 1 255 1 31 2 340 1 
61 1 265 2 324 1 307 1 20 1 41 1 82 1 44 1 216 1 146 4 175 1 334 1 49 1 150 1 152 2 179 1 182 1 157 3 74 7 139 1 299 1 36 1 119 1 
121 1 206 1 124 1 265 4 2 1 128 1 41 2 308 3 44 2 216 2 175 1 47 11 49 2 179 1 96 3 232 1 61 1 324 2 285 1 191 1 244 4 246 2 146 8 151 2 152 1 252 11 293 1 259 1 157 6 74 14 299 2 341 1 119 2 
205 1 265 2 3 1 2 1 41 1 129 1 167 1 44 1 172 2 215 1 216 1 86 1 175 1 49 1 14 1 180 1 136 1 232 1 188 1 104 1 238 1 106 2 244 1 22 1 108 1 330 1 68 1 146 1 336 1 338 1 152 1 157 1 74 2 117 1 158 1 118 1 119 1 341 1 
265 6 2 1 3 1 162 2 80 2 82 1 172 3 86 1 175 3 179 3 14 1 188 2 101 1 104 2 20 1 106 3 22 1 111 2 299 3 117 2 36 1 119 3 37 2 118 2 205 1 307 1 39 1 41 3 129 2 44 3 215 1 216 3 47 6 49 3 136 2 232 1 139 1 238 2 61 3 324 3 244 6 66 2 246 2 330 2 68 1 146 11 334 1 338 1 151 2 152 2 252 6 259 2 157 10 74 21 158 1 341 1 
205 8 159 1 302 1 1 1 265 4 3 8 2 1 40 1 210 1 41 2 131 1 132 1 44 2 43 2 172 1 215 1 216 2 86 2 175 2 49 2 14 1 55 1 182 1 136 2 238 2 104 3 21 1 106 1 68 7 146 1 338 1 200 1 296 1 74 2 157 1 158 1 117 2 119 2 341 1 
265 2 41 1 44 1 215 1 172 1 216 1 175 1 47 1 49 1 179 1 232 1 186 1 61 1 324 1 106 1 244 1 193 1 246 1 25 1 146 1 338 1 151 1 252 1 259 1 74 3 157 2 299 1 158 1 119 1 
265 2 324 1 41 1 244 1 44 1 216 1 146 2 175 1 47 1 49 1 151 1 252 1 293 1 182 1 339 1 74 2 299 1 119 1 
237 1 61 1 265 2 41 1 244 1 44 1 216 1 175 1 47 1 49 1 252 1 179 1 182 1 259 1 74 2 157 2 299 1 119 1 
265 2 41 1 44 1 216 1 175 1 47 2 49 1 179 1 182 1 61 1 324 1 244 2 246 1 146 2 151 1 252 2 293 1 259 1 74 4 157 2 299 2 119 1 
265 2 324 1 41 1 244 1 44 1 216 1 146 2 175 1 47 1 49 1 151 1 252 1 293 1 339 1 74 2 296 1 299 1 119 1 
237 1 61 1 265 2 41 1 244 1 44 1 216 1 175 1 47 1 49 1 252 1 179 1 259 1 74 2 296 1 157 2 299 1 119 1 
265 2 41 1 44 1 216 1 175 1 47 2 49 1 179 1 61 1 324 1 244 2 246 1 146 2 151 1 252 2 293 1 259 1 296 1 74 4 157 2 299 2 119 1 
265 2 41 1 44 1 216 1 175 1 47 2 49 1 179 1 61 1 324 1 244 2 246 1 146 2 151 1 252 2 293 1 259 1 74 4 157 2 299 2 119 1 
205 1 265 2 2 1 3 1 41 1 129 1 44 1 172 1 216 1 86 1 175 1 49 1 136 1 188 1 238 1 104 1 106 1 330 1 111 1 68 1 146 1 152 1 74 2 157 1 117 1 118 1 119 1 341 1 
0 1 205 1 265 2 2 1 3 1 41 1 129 1 44 1 172 1 216 1 86 1 175 1 49 1 57 1 136 1 230 1 238 1 104 1 106 1 68 1 146 1 152 1 74 2 157 1 117 1 118 1 119 1 341 1 
265 2 41 1 44 1 216 1 175 1 47 2 49 1 179 1 232 1 61 1 324 1 244 2 246 1 146 2 151 1 252 2 293 1 259 1 74 4 157 2 299 2 119 1 
205 1 302 1 265 2 3 1 41 1 129 1 44 1 172 1 216 1 175 1 47 2 49 1 179 1 136 1 188 1 61 1 238 1 104 1 324 1 106 1 244 2 246 1 330 1 111 1 68 1 146 2 151 1 252 2 293 1 259 1 157 2 74 4 299 2 117 1 118 1 37 1 119 1 
265 2 41 1 44 1 215 1 172 1 216 1 175 1 47 1 49 1 179 1 232 1 186 1 324 1 106 1 244 1 246 1 25 1 146 2 338 1 151 1 252 1 293 1 199 1 259 1 157 1 74 3 299 1 158 1 119 1 
206 1 124 1 265 4 41 2 308 1 269 1 44 2 216 2 218 1 174 1 49 2 179 2 226 1 95 1 96 2 141 1 143 1 61 2 324 2 19 1 109 1 67 1 246 2 146 6 151 2 293 2 259 2 157 7 74 13 299 4 
124 2 265 6 41 3 308 2 269 1 44 3 216 3 218 1 174 2 49 3 179 1 54 1 226 1 278 1 96 2 138 1 141 3 61 1 324 2 109 2 67 1 246 2 332 1 287 1 146 11 289 1 151 2 293 1 259 1 157 9 74 20 75 2 299 2 
206 1 124 1 265 4 41 2 308 1 269 1 44 2 216 2 218 1 174 1 49 2 179 1 226 1 96 2 141 1 61 1 324 1 19 1 109 1 67 1 246 1 146 4 151 1 293 1 259 1 157 5 74 9 299 2 
206 1 124 1 265 4 41 2 308 1 269 1 44 2 216 2 218 1 174 1 49 2 179 1 226 1 96 2 141 1 61 1 324 1 19 1 109 1 67 1 246 1 146 4 151 1 293 1 259 1 157 5 74 9 299 2 
124 1 61 1 265 2 324 1 307 1 20 1 308 1 41 1 109 1 82 1 67 1 44 1 218 1 216 1 146 6 174 1 334 1 49 1 179 1 226 1 96 1 139 1 74 11 157 5 299 1 141 1 36 1 
205 2 265 2 3 2 2 1 41 1 81 1 7 1 132 1 44 1 43 2 172 2 216 1 175 1 49 1 232 1 184 1 106 2 194 1 68 2 146 1 338 2 26 1 200 1 74 2 157 1 119 1 341 1 
205 2 302 1 50 1 3 2 292 1 266 1 13 1 229 1 55 1 68 2 
205 1 3 1 292 1 266 1 229 1 55 1 34 1 68 1 
205 1 86 1 223 1 50 1 3 1 266 1 294 1 68 1 
205 1 50 1 3 1 292 1 266 1 13 1 229 1 55 1 68 1 
198 1 
142 1 209 1 48 1 150 1 27 1 4 1 83 1 
204 1 142 1 4 1 149 1 89 1 27 1 53 1 255 1 114 1 260 1 99 1 
76 3 161 2 77 1 3 1 163 2 4 7 271 6 86 1 89 3 179 2 99 12 100 2 104 6 103 1 27 8 31 5 295 2 297 5 117 2 118 1 204 3 205 1 301 1 125 2 309 2 221 2 45 5 48 1 53 3 136 1 58 6 142 7 238 1 324 2 329 1 66 2 246 2 247 3 331 2 248 2 68 1 149 6 151 2 255 3 155 1 259 2 
204 2 301 1 76 1 124 1 4 5 309 2 308 1 271 5 45 1 48 2 89 2 53 2 179 2 54 1 278 1 96 1 138 1 16 1 99 6 58 5 142 5 324 2 246 2 331 1 287 1 289 1 149 3 27 8 151 2 255 2 256 1 31 1 33 1 259 2 297 1 
204 1 102 1 4 1 309 1 65 1 82 1 45 1 334 1 27 1 89 1 53 1 255 1 31 1 
204 1 209 1 142 1 4 1 83 1 48 1 89 1 27 1 53 1 255 1 
142 2 324 1 4 2 309 1 246 1 271 2 149 2 151 1 27 2 179 1 259 1 58 2 99 4 
45 1 76 1 142 1 48 1 31 1 297 1 
204 2 205 4 301 2 76 2 1 1 3 4 4 2 169 1 131 1 270 2 46 1 86 2 45 3 316 1 89 2 53 1 136 1 238 1 104 1 23 1 331 2 68 4 27 2 255 2 154 1 31 3 203 1 297 4 117 1 
205 1 265 2 3 1 41 1 129 1 44 1 172 3 215 2 216 1 86 1 175 1 49 1 136 1 188 1 238 1 104 1 106 3 330 1 68 1 111 1 25 2 338 2 337 1 152 1 74 1 157 1 35 1 158 2 117 1 341 1 118 1 119 1 
204 1 301 1 142 2 20 1 4 2 271 1 331 1 149 1 48 1 89 1 27 1 53 1 255 1 58 1 99 2 
219 1 321 1 
219 1 321 1 
219 1 321 1 
219 1 321 1 
219 1 321 1 
219 1 321 1 
219 1 321 1 
219 1 321 1 
94 1 333 1 
61 1 265 4 307 1 41 2 82 1 44 2 216 2 334 1 49 2 293 1 139 1 299 2 75 1 
146 4 334 1 61 1 324 1 150 1 307 1 20 1 179 1 82 1 157 3 74 7 139 1 299 1 36 1 
61 1 265 2 324 1 41 1 246 1 44 1 216 1 146 2 49 1 151 1 179 1 293 1 259 1 183 1 157 2 74 4 299 2 
206 1 124 1 61 1 324 1 308 1 246 1 146 3 151 1 179 1 293 1 96 2 259 1 157 4 74 7 299 2 
121 1 206 1 265 2 307 1 308 2 41 1 82 1 44 1 216 1 49 1 179 3 96 2 139 1 61 2 324 3 20 1 191 1 246 2 146 10 334 1 151 2 293 1 259 2 74 19 157 9 299 3 75 1 36 1 
96 1 74 1 157 1 
146 1 308 1 74 1 
265 2 61 2 324 1 41 1 66 1 246 1 44 1 216 1 146 3 49 1 151 1 179 1 293 1 183 1 259 1 157 3 74 6 299 3 
124 1 265 2 308 1 41 1 44 1 216 1 49 1 179 2 54 1 278 1 96 1 138 1 61 1 324 2 67 1 246 2 287 1 146 6 289 1 151 2 293 1 259 2 74 12 157 6 299 2 
61 1 324 1 82 1 146 3 334 1 179 1 293 1 74 6 157 3 299 2 36 1 
61 1 265 2 307 1 41 1 82 1 44 1 216 1 334 1 196 1 49 1 293 1 157 1 74 1 139 1 299 2 75 1 
265 2 61 2 324 2 41 1 65 1 67 1 82 1 44 1 216 1 146 5 334 1 49 1 179 2 293 2 74 10 157 5 299 4 36 1 
265 2 324 1 41 1 67 1 44 1 216 1 146 2 49 1 151 1 293 1 74 2 299 1 
61 1 265 2 324 1 41 1 67 1 246 1 44 1 216 1 146 2 49 1 151 1 179 1 293 1 259 1 157 2 74 4 299 2 
265 2 61 1 41 1 67 1 82 1 44 1 216 1 146 1 334 1 49 1 157 1 74 2 299 1 
206 1 124 1 265 10 307 1 41 5 308 3 213 1 82 3 44 5 216 5 49 5 179 4 15 1 96 4 97 1 183 1 139 1 61 6 324 4 19 1 67 1 246 3 146 12 334 3 196 1 151 3 293 5 259 3 157 14 74 26 75 2 299 11 36 1 
124 1 265 2 307 1 308 1 41 1 82 1 44 1 216 1 49 1 179 1 96 1 139 1 61 1 324 1 20 1 67 1 146 5 289 1 334 1 74 9 157 4 299 1 36 1 
206 1 124 1 265 4 307 1 41 2 308 1 82 1 44 2 216 2 49 2 179 1 96 2 183 1 139 1 61 1 324 2 20 1 67 1 246 1 146 7 334 1 289 1 151 1 293 1 74 12 157 5 299 2 36 1 
124 1 265 6 307 1 308 1 41 3 82 1 44 3 216 3 49 3 179 3 54 1 278 1 96 1 183 1 139 1 138 1 61 2 324 3 20 1 67 1 246 2 287 1 146 10 334 1 289 1 151 2 293 1 259 2 74 20 157 10 299 3 75 1 36 1 
124 1 265 6 307 1 308 1 41 3 82 1 44 3 216 3 49 3 179 2 54 1 278 1 96 1 183 1 139 1 138 1 61 2 324 3 20 1 67 1 246 2 287 1 146 11 334 1 289 1 151 2 293 2 259 1 74 18 157 7 75 1 299 4 36 1 
124 1 265 2 307 1 308 1 41 1 82 1 44 1 216 1 49 1 179 1 96 1 139 1 61 1 324 1 20 1 67 1 146 5 289 1 334 1 74 9 157 4 299 1 36 1 
124 1 265 2 308 1 41 1 44 1 216 1 49 1 179 2 54 1 278 1 96 1 138 1 61 1 324 2 67 1 246 2 287 1 146 6 289 1 151 2 293 1 259 2 74 12 157 6 299 2 
124 1 265 8 307 1 41 4 308 1 82 1 44 4 216 4 49 4 179 2 54 1 278 1 96 1 183 1 139 1 138 1 61 2 324 3 20 1 67 1 246 2 287 1 146 11 334 1 289 1 151 2 293 1 259 1 74 19 157 8 299 3 75 2 36 1 
124 1 265 8 41 4 308 1 44 4 216 4 49 4 179 2 54 1 278 1 96 1 138 1 61 3 324 3 19 1 67 1 246 3 287 1 146 9 289 1 151 3 293 3 259 2 74 16 157 7 299 6 75 2 
61 2 307 2 82 2 146 2 334 2 293 2 139 1 74 4 157 2 299 4 
124 1 265 8 307 1 41 4 308 1 82 1 44 4 216 4 49 4 179 2 54 1 278 1 96 1 139 1 138 1 61 2 324 3 20 1 19 1 67 1 246 2 287 1 146 11 334 1 289 1 151 2 293 1 259 1 74 19 157 8 299 3 75 2 36 1 
147 1 338 1 152 1 106 1 135 1 172 1 24 1 
106 1 243 1 172 1 10 1 24 1 147 1 338 1 152 1 92 1 135 1 319 1 185 1 
205 1 86 1 1 1 238 1 104 1 150 1 3 1 136 1 131 1 117 1 68 1 
205 1 104 1 238 1 3 1 106 2 129 1 330 1 215 1 172 2 68 1 86 1 338 1 152 1 14 1 136 1 117 1 158 1 118 1 
205 1 207 1 3 1 129 1 270 1 172 2 215 1 315 1 14 1 136 2 238 1 104 3 106 2 144 1 330 1 68 1 338 2 152 1 28 1 116 1 340 2 158 2 117 1 118 2 
205 1 207 1 3 1 129 1 270 1 172 2 215 1 315 1 14 1 57 1 136 2 238 1 104 3 106 2 144 1 68 1 338 2 152 1 28 1 116 1 340 2 158 2 117 1 118 2 
205 1 163 1 3 1 270 1 172 1 215 1 221 1 45 2 48 1 235 1 142 1 104 2 62 1 106 1 247 1 68 1 25 1 338 1 337 1 71 1 72 1 31 2 340 1 297 1 158 1 
205 1 163 1 3 1 270 1 172 1 215 1 45 2 221 1 315 1 48 1 136 1 235 1 100 1 142 1 238 1 104 4 62 1 106 1 247 1 68 1 25 1 338 1 337 1 72 1 31 2 116 1 340 1 297 1 158 1 117 1 118 1 
205 1 238 1 3 1 40 1 117 1 68 1 
205 7 159 1 302 1 104 3 238 2 3 7 40 1 21 1 210 1 43 1 132 1 171 1 68 6 86 2 224 1 55 1 155 1 136 2 137 1 117 3 118 1 
205 1 302 1 265 4 3 1 307 1 41 2 80 1 129 1 82 1 44 2 172 2 215 1 216 2 175 2 49 2 179 1 14 1 136 1 232 1 139 1 188 1 61 1 104 1 238 1 324 1 20 1 106 2 194 1 330 1 68 1 111 1 146 4 334 1 338 1 152 2 157 3 74 7 299 1 117 1 158 1 36 1 118 1 119 2 37 1 
205 1 204 2 76 1 209 1 161 1 125 1 3 1 163 1 4 1 83 1 86 1 45 3 221 1 48 1 89 2 53 2 100 1 142 1 104 2 247 1 68 1 27 1 255 2 30 1 31 3 295 1 203 1 297 2 
205 2 302 1 77 1 104 2 238 1 163 1 3 2 40 1 68 2 155 1 136 1 117 2 118 1 
205 4 302 1 1 1 104 1 238 1 3 4 131 1 68 4 86 1 222 1 231 1 136 1 117 1 
205 2 104 1 238 1 3 2 166 1 192 1 270 1 9 1 171 1 68 2 224 1 136 1 117 2 118 1 
205 1 86 1 238 1 3 1 90 1 258 1 233 1 117 1 314 1 68 1 
205 2 302 1 26 1 3 2 55 1 132 1 68 2 
205 5 302 1 159 1 1 1 104 3 238 2 3 5 21 1 131 1 270 1 132 1 68 4 86 1 222 1 136 2 117 2 
205 5 302 1 1 1 304 1 104 3 238 2 3 5 21 1 131 1 270 1 132 1 68 4 86 1 222 1 136 2 117 2 
205 1 104 1 238 1 3 1 106 2 129 1 215 1 172 2 68 1 86 1 338 1 152 1 14 1 57 1 136 1 117 1 158 1 118 1 
205 1 104 1 238 1 3 1 270 1 171 1 68 1 224 1 155 1 136 1 137 1 117 2 118 1 
250 1 251 1 152 1 178 1 272 1 
142 1 303 1 325 1 144 1 272 2 221 1 45 2 250 1 335 1 48 1 177 1 52 1 251 2 152 1 28 1 178 2 30 1 31 2 340 1 
250 1 338 1 251 1 178 1 106 1 81 1 7 1 184 1 172 1 
250 1 325 1 52 1 
150 1 317 1 5 1 85 1 
160 1 282 1 70 1 317 1 5 1 115 1 85 1 
160 1 310 1 241 1 
160 3 282 1 283 1 70 3 317 1 5 1 268 1 245 1 328 1 115 1 187 2 85 1 
60 1 160 2 282 1 70 2 317 1 290 1 5 1 115 1 85 1 
59 1 160 1 282 1 127 1 70 1 90 1 317 1 268 1 115 1 312 1 314 1 
160 1 282 1 70 1 317 1 5 1 268 1 115 1 
160 1 282 1 70 1 5 2 268 1 115 1 85 1 
282 2 160 2 126 1 322 1 5 1 268 1 70 2 317 1 291 1 115 2 
282 1 160 3 60 2 127 1 5 1 268 1 84 1 85 1 70 3 317 2 115 1 298 1 262 1 
59 1 282 1 160 2 60 1 64 1 5 1 268 1 85 1 314 2 70 2 317 1 91 1 90 1 115 1 258 1 
282 2 160 4 60 2 127 1 5 1 268 1 85 1 70 4 290 1 317 2 115 2 181 1 262 1 
160 1 282 1 70 1 317 1 5 1 268 1 115 1 85 1 
60 2 160 4 282 1 127 1 283 1 5 2 245 1 85 2 70 4 317 3 115 1 187 1 280 1 262 1 
282 1 160 2 60 1 264 1 326 1 5 1 268 1 211 1 85 1 70 2 317 1 115 1 
282 1 160 3 283 1 268 1 5 1 245 2 85 1 70 3 317 1 254 1 115 1 187 2 
195 1 105 2 317 2 165 1 
220 1 160 1 282 1 70 1 268 1 115 1 
60 1 160 2 282 1 70 2 317 1 5 1 268 1 115 1 84 1 85 1 
122 1 
160 1 282 1 70 1 317 1 5 1 268 1 115 1 85 1 
60 1 282 1 160 3 268 1 5 1 84 1 85 1 70 3 317 1 115 1 187 1 
127 1 317 1 280 1 262 1 
317 1 5 1 

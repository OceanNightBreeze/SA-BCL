#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (42,69,84,179) (42,69,84,179) (19,163,253,293) 118 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (42,69,84,179) (42,69,84,179) (19,163,253,293) 118 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException 216 125 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 284 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 271 20 245 140 286 164 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 236 17 54 115 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 236 17 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 17 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 236 258 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 236 17 54 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 236 17 54 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (0,135) 132 271 20 245 224 244 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 154 20 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 271 20 245 140 15 345 27 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 230 305 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 271 20 245 140 15 345 27 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 271 20 245 140 15 345 27 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 271 20 245 140 15 345 27 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (9,308) (9,308) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 309 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 107 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException 216 125 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException 216 125 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException 216 125 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 309 210 158 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 154 20 197 319 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 271 20 245 140 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 271 20 245 224 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 271 20 245 140 286 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 271 20 245 140 319 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 271 20 245 140 319 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (42,69,84,179) (42,69,84,179) (19,163,253,293) (19,163,253,293) (19,163,253,293) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute; | RETURN | 520 | return null
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | CONDITION | 5413 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2973 | 1 -> 0
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8289 | = null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 5 133 1 42 6 208 1 84 2 169 1 250 1 64 1 318 2 108 4 33 1 352 2 237 1 114 1 238 1 47 2 69 2 257 1 323 2 119 2 150 1 302 3 51 9 52 1 282 1 19 1 227 1 179 9 
229 5 133 1 42 6 208 1 84 2 169 1 250 1 64 1 318 2 108 4 33 1 352 2 237 1 114 1 238 1 47 2 69 2 257 1 323 2 119 2 150 1 302 3 51 9 52 1 282 1 19 1 227 1 179 9 
229 6 133 1 42 7 208 1 84 2 169 1 250 1 64 1 318 2 108 5 33 1 352 2 237 1 114 1 238 1 47 2 69 2 257 1 323 2 119 2 150 1 302 4 51 10 52 1 282 1 19 1 227 1 179 10 
229 4 133 1 42 4 208 1 84 2 169 1 250 1 64 1 318 2 108 3 33 1 352 2 237 1 114 1 238 1 47 1 69 2 257 1 323 2 119 2 302 2 51 7 52 1 282 1 19 1 227 1 179 7 
33 1 352 1 237 1 229 3 114 1 47 2 69 1 257 1 42 3 323 1 84 1 119 1 302 1 150 1 51 4 19 1 179 4 108 2 
33 1 229 1 114 1 133 1 69 1 257 1 323 1 84 1 119 1 51 2 347 1 77 1 190 1 179 2 227 1 318 1 
33 1 229 2 114 1 69 2 257 1 42 1 84 2 302 1 51 3 169 1 179 3 318 1 108 1 
118 1 84 1 293 1 51 1 179 2 69 1 42 1 257 1 
118 1 84 1 293 1 51 1 179 2 69 1 42 1 257 1 
213 1 316 1 83 1 
324 1 316 1 88 2 
103 2 26 1 100 2 202 1 35 2 106 2 328 2 101 2 
103 3 311 1 310 2 201 1 333 1 202 1 287 1 204 2 104 1 166 1 23 2 86 1 26 1 106 2 147 1 351 1 111 2 296 2 255 1 11 1 172 1 35 2 71 1 50 1 14 1 96 1 99 1 223 1 152 1 39 1 100 2 356 1 177 1 178 1 329 1 328 3 101 2 
103 1 94 1 184 1 100 1 202 1 35 1 106 1 328 1 37 1 101 1 
103 1 194 1 184 1 83 1 342 1 259 1 137 1 272 1 281 1 316 1 274 1 78 1 106 1 328 1 
103 1 194 1 184 1 35 1 83 1 342 1 137 2 272 1 100 1 281 1 316 1 78 2 106 1 328 1 101 1 
60 1 137 1 176 1 78 1 240 1 
60 1 137 2 176 1 280 1 46 1 316 1 78 2 83 1 
60 1 137 1 78 1 
103 1 94 1 184 1 202 1 35 1 37 1 176 1 137 1 196 1 100 1 78 1 106 1 328 1 101 1 
316 1 
60 1 137 2 176 1 280 1 200 1 316 1 78 2 83 1 
157 1 269 1 277 1 83 1 343 2 176 2 137 5 344 1 60 2 280 1 6 1 316 1 89 1 78 5 43 2 307 2 28 1 90 1 123 1 
213 1 26 1 
103 2 35 1 98 1 100 1 26 2 106 2 328 2 251 1 101 1 
263 1 132 1 135 1 
103 1 111 1 201 1 204 1 14 1 96 1 166 1 23 1 86 1 152 1 39 1 26 1 177 1 225 1 328 1 329 1 
103 2 111 1 201 1 35 1 135 1 204 1 96 1 14 1 166 1 86 1 23 1 152 1 235 1 39 1 100 1 177 1 191 1 106 1 329 1 328 2 
103 5 294 1 35 4 242 1 247 1 235 1 100 4 26 1 274 1 191 2 106 5 328 5 251 1 101 1 
103 2 184 1 100 2 35 2 106 2 226 1 328 2 37 1 
103 3 26 1 100 3 35 3 191 1 106 3 328 3 101 1 
103 1 184 1 100 1 35 1 106 1 328 1 37 1 
98 1 103 1 184 1 100 1 35 1 106 1 328 1 251 1 101 1 
103 4 310 2 201 1 81 1 333 1 184 1 202 1 287 1 204 1 104 1 342 1 166 1 137 1 86 1 23 1 235 1 272 1 26 1 191 1 106 3 211 1 251 1 147 1 194 1 111 1 296 1 255 1 172 1 35 3 96 1 14 1 50 1 99 1 223 1 152 1 39 1 356 1 100 3 281 1 177 1 78 1 329 1 328 4 101 2 
103 2 294 1 26 1 100 1 274 1 35 1 191 1 106 2 328 2 
194 1 103 3 184 1 35 3 342 1 290 1 137 1 235 1 272 1 100 3 281 1 316 1 78 1 191 2 106 3 328 3 251 1 211 1 101 1 
103 2 35 2 135 1 100 2 191 1 263 1 106 2 328 2 251 1 101 1 
103 1 111 1 201 1 204 1 14 1 96 1 166 1 23 1 86 1 152 1 39 1 26 1 177 1 328 1 329 1 
103 1 111 1 201 1 322 1 204 1 166 1 23 1 86 1 152 1 39 1 26 1 177 1 328 1 329 1 350 1 
332 1 310 2 333 1 21 1 287 1 336 1 132 1 0 1 135 1 271 1 249 1 348 1 147 1 110 1 255 1 296 3 11 1 172 1 48 1 99 1 120 1 223 2 154 1 263 1 
103 1 184 1 281 1 100 1 35 1 106 1 328 1 226 1 
127 1 
127 1 
146 1 254 1 
146 1 254 1 
146 1 254 1 
127 1 
127 1 
127 1 
127 1 
127 1 
146 1 127 2 254 1 
127 1 
127 1 
38 1 103 1 100 1 35 1 106 1 328 1 
181 1 40 1 127 1 103 1 184 1 129 1 202 1 134 1 186 1 137 1 141 1 106 1 94 1 216 1 35 1 37 1 38 1 196 1 100 1 78 1 328 1 101 1 359 1 125 1 
323 1 119 1 352 1 
323 1 119 1 77 1 
206 1 119 3 330 1 352 2 77 1 262 1 
206 1 119 2 330 1 352 1 77 1 68 1 
206 1 119 2 352 1 330 2 77 1 
20 1 332 1 285 1 336 1 83 1 343 1 168 1 271 1 60 1 137 5 4 1 88 1 316 1 89 1 43 1 275 1 171 1 66 1 239 1 277 3 222 1 353 1 72 2 278 1 176 4 280 1 355 1 260 1 154 1 78 5 307 1 123 1 
156 1 284 1 20 3 332 3 269 1 336 3 83 1 343 2 85 1 168 3 271 3 60 6 137 9 88 3 316 2 89 3 43 2 30 5 275 4 171 2 66 3 221 1 240 5 277 8 95 1 222 3 353 1 176 7 280 1 260 2 18 1 154 3 78 9 307 2 123 1 
20 1 103 1 332 1 285 1 269 1 184 1 202 1 83 1 336 1 343 1 168 1 137 3 271 1 316 2 88 2 89 1 43 1 106 1 275 1 171 1 66 1 94 1 35 1 277 3 37 1 222 1 72 1 324 1 278 1 196 1 176 2 260 1 100 1 78 3 154 1 307 1 328 1 101 1 
284 1 20 1 332 1 285 1 269 1 336 1 343 1 271 1 137 2 316 1 88 2 89 1 43 1 275 1 171 1 66 1 277 3 222 1 72 1 324 1 278 1 176 1 260 1 78 2 154 1 307 1 
213 1 177 1 161 1 
177 1 241 1 
298 1 
152 1 177 1 329 1 
177 1 338 1 
177 1 329 1 
152 1 177 3 161 2 329 1 313 1 165 1 
292 1 8 1 10 2 332 1 296 7 11 4 130 1 336 1 1 1 315 1 120 2 223 3 348 3 358 1 124 1 268 1 126 1 
292 1 8 1 10 2 332 1 296 7 11 4 130 1 336 1 1 1 315 1 120 2 223 3 348 3 358 1 124 1 268 1 126 1 
292 1 8 1 10 2 332 1 296 7 11 4 130 1 336 1 1 1 116 1 315 1 120 2 223 3 348 3 358 1 124 1 268 1 126 1 
20 1 332 1 310 2 245 1 286 1 333 1 130 1 164 1 336 1 315 1 271 1 140 1 348 2 8 2 147 1 10 1 296 9 255 1 11 4 218 1 300 1 279 1 120 1 99 1 223 5 358 1 154 1 199 1 268 1 
292 1 8 1 147 2 10 2 332 1 310 4 296 9 255 2 218 1 11 5 333 2 130 1 233 1 336 1 1 1 315 1 120 3 99 2 223 4 53 1 358 1 348 4 268 1 126 1 
229 1 201 1 41 1 162 1 42 1 204 1 341 1 84 1 166 1 23 1 62 1 318 1 7 1 33 1 352 1 320 1 111 1 114 1 217 1 69 1 257 1 323 1 119 2 51 2 304 1 77 1 306 1 262 1 179 2 228 1 
229 1 201 1 41 1 162 1 204 1 42 2 341 1 84 1 166 1 23 1 170 1 318 1 7 1 33 1 352 1 111 1 114 1 217 1 69 1 323 1 354 1 119 2 51 3 304 1 77 1 262 1 306 1 179 3 228 1 56 1 
229 1 201 1 41 1 162 1 204 1 42 2 166 1 23 1 170 1 318 1 7 1 33 1 352 1 111 1 114 1 217 1 323 1 354 1 119 2 51 2 77 1 306 1 262 1 179 2 228 1 
111 1 201 1 295 1 41 2 69 1 204 1 339 1 166 1 84 1 51 1 23 1 39 1 177 1 306 2 80 1 329 1 209 1 179 1 56 1 228 2 57 1 31 1 318 2 
7 1 352 1 111 1 201 1 41 1 217 1 162 1 69 1 257 1 204 1 341 1 323 1 166 1 84 1 119 2 51 1 23 1 62 1 77 1 304 1 262 1 170 1 306 1 179 1 228 1 318 1 
29 1 
103 1 201 1 184 1 337 1 204 2 205 1 342 1 343 1 166 1 137 3 60 2 23 2 61 1 272 1 274 1 89 2 43 1 106 1 276 2 194 1 214 1 111 2 112 1 277 2 175 1 13 1 325 1 259 1 151 1 280 1 39 2 260 1 281 1 177 1 78 3 307 1 55 1 80 1 328 1 329 1 122 1 123 1 57 1 
331 1 276 2 200 1 194 1 214 1 103 1 184 1 175 1 337 1 342 1 325 1 60 2 137 3 151 1 259 1 280 1 272 1 281 1 274 1 78 3 106 1 328 1 
103 1 200 1 184 1 83 1 337 1 342 1 60 1 137 3 272 1 274 1 316 1 106 1 276 3 214 1 194 1 175 1 325 1 259 1 151 1 280 1 121 1 281 1 78 3 328 1 
331 1 200 1 103 1 184 1 83 1 337 1 3 1 342 1 137 3 60 2 272 1 274 1 316 1 106 1 276 3 214 1 194 1 175 1 325 1 259 1 151 1 280 1 121 1 281 1 78 3 328 1 
331 2 200 1 103 1 184 1 337 1 205 1 3 2 343 1 342 1 60 3 137 3 272 1 236 1 274 1 89 1 43 1 106 1 276 2 214 1 194 1 112 1 115 1 277 1 175 1 325 1 259 1 151 1 280 1 17 1 75 1 281 1 54 1 78 3 307 1 328 1 123 1 
103 1 184 1 337 1 205 1 343 1 342 1 137 2 272 1 274 1 89 1 43 1 106 1 276 2 214 1 194 1 112 1 277 1 175 1 325 1 259 1 151 1 281 1 78 2 307 1 328 1 123 1 
103 1 184 1 337 1 205 1 342 1 343 1 137 2 272 1 236 1 274 1 89 1 43 1 106 1 276 2 214 1 194 1 112 1 277 1 175 1 325 1 259 1 151 1 17 1 75 1 281 1 78 2 307 1 328 1 123 1 
103 1 184 1 337 1 205 1 342 1 343 1 137 2 272 1 236 1 274 1 89 1 43 1 106 1 276 2 214 1 194 1 112 1 277 1 175 1 325 1 259 1 151 1 17 1 75 1 281 1 78 2 307 1 328 1 123 1 
103 1 184 1 335 1 337 1 342 1 343 1 105 1 137 2 272 1 236 1 274 1 89 1 43 1 106 1 276 2 214 1 194 1 112 1 277 1 175 1 258 1 325 1 259 1 151 1 281 1 78 2 307 1 328 1 123 1 
331 1 103 1 184 1 337 1 205 1 3 1 343 1 342 1 137 2 60 1 272 1 236 1 274 1 89 1 43 1 106 1 276 3 214 1 194 1 112 1 277 1 175 1 325 1 259 1 151 1 121 1 17 1 75 1 281 1 78 2 54 1 307 1 328 1 123 1 
331 1 103 1 184 1 337 1 205 1 3 1 343 1 342 1 137 2 60 1 272 1 236 1 274 1 89 1 43 1 106 1 276 3 214 1 194 1 112 1 277 1 175 1 325 1 259 1 151 1 121 1 17 1 75 1 281 1 78 2 54 1 307 1 328 1 123 1 
103 1 184 1 337 1 343 1 342 1 105 1 137 2 272 1 274 1 89 1 43 1 106 1 276 2 214 1 194 1 112 1 277 1 175 1 325 1 259 1 151 1 281 1 78 2 307 1 328 1 123 1 
292 1 147 1 10 1 213 1 332 1 310 2 296 6 255 1 11 3 172 1 333 1 287 1 132 1 336 1 135 1 1 1 120 2 99 1 223 3 26 2 249 1 348 2 358 1 263 1 126 1 268 1 
147 1 20 1 332 1 310 2 244 1 245 1 296 5 255 1 11 2 172 1 333 1 334 1 287 1 336 1 132 4 135 4 271 1 279 1 99 1 223 3 224 1 154 1 199 1 
103 2 201 1 310 2 311 1 333 1 334 1 287 1 58 1 204 1 104 1 166 1 86 1 23 1 235 1 26 1 191 1 106 1 147 1 111 1 255 1 296 2 172 1 11 1 35 1 36 1 96 1 14 1 16 1 99 1 152 1 223 1 39 1 100 1 177 1 225 1 263 1 329 1 328 2 
311 1 310 6 132 5 135 5 1 1 271 2 86 2 235 1 191 1 145 2 147 3 10 1 321 2 11 8 14 2 96 2 99 3 152 2 100 1 154 2 328 3 329 2 20 2 103 3 102 2 332 3 201 2 333 3 334 1 287 3 336 3 204 1 203 2 104 1 166 2 23 1 26 2 348 4 106 1 292 1 111 1 255 3 296 18 172 3 35 1 70 1 120 4 223 10 39 1 356 2 261 1 177 2 358 1 263 5 268 1 126 1 
103 1 201 2 310 4 311 1 333 2 160 1 287 2 82 1 312 1 204 8 207 1 104 1 166 2 23 8 87 1 170 1 249 1 191 1 349 1 106 1 147 2 320 1 111 7 255 2 296 2 172 2 11 1 219 1 35 1 71 2 99 2 223 1 39 2 100 1 177 3 80 1 328 1 329 2 57 1 
147 1 20 1 103 1 310 2 296 2 255 1 11 2 172 1 333 1 334 1 287 1 35 1 336 1 99 1 100 1 154 1 106 1 328 1 251 1 267 1 101 1 
147 1 310 2 296 1 255 1 172 1 333 1 11 1 287 1 336 1 48 1 99 1 249 1 154 1 
147 1 110 1 332 1 310 2 296 2 255 1 172 1 333 1 287 1 132 1 135 1 271 1 120 1 99 1 223 2 249 1 348 1 263 1 
20 1 332 1 310 2 333 1 287 1 336 1 132 1 135 1 271 1 249 1 348 1 147 1 255 1 296 3 11 1 172 1 99 1 120 1 223 2 154 1 263 1 
147 1 310 2 296 1 255 1 172 1 333 1 11 1 287 1 336 1 48 1 99 1 87 1 154 1 
147 1 110 1 332 1 310 2 296 2 255 1 172 1 333 1 287 1 132 1 135 1 271 1 120 1 99 1 223 2 87 1 348 1 263 1 
20 1 332 1 310 2 333 1 287 1 336 1 132 1 135 1 271 1 87 1 348 1 147 1 255 1 296 3 11 1 172 1 99 1 120 1 223 2 154 1 263 1 
20 1 332 1 310 2 333 1 287 1 336 1 132 1 135 1 271 1 348 1 147 1 296 3 255 1 11 1 172 1 99 1 120 1 223 2 154 1 263 1 
103 1 311 1 201 1 310 2 333 1 287 1 204 1 104 1 166 1 86 1 23 1 26 1 147 1 111 1 296 2 255 1 11 1 172 1 96 1 14 1 99 1 152 1 223 1 39 1 356 1 177 1 329 1 328 1 
103 1 311 1 201 1 310 2 333 1 287 1 204 1 104 1 166 1 86 1 23 1 26 1 350 1 147 1 111 1 296 2 255 1 11 1 172 1 322 1 99 1 152 1 223 1 39 1 177 1 329 1 328 1 266 1 
20 1 332 1 310 2 333 1 334 1 287 1 336 1 132 1 135 1 271 1 348 1 147 1 255 1 296 3 11 1 172 1 99 1 120 1 223 2 154 1 263 1 
20 1 332 1 103 1 201 1 310 2 333 1 287 1 132 1 336 1 135 1 203 1 204 1 166 1 271 1 86 1 23 1 348 1 147 1 320 1 111 1 296 3 255 1 11 1 172 1 96 1 14 1 120 1 99 1 223 2 152 1 356 1 177 1 154 1 263 1 329 1 328 1 
20 1 103 1 332 1 310 2 333 1 334 1 287 1 336 1 271 1 106 1 251 1 193 1 147 1 255 1 296 2 172 1 11 1 35 1 99 1 223 1 100 1 154 1 328 1 101 1 
147 1 20 1 332 1 310 2 245 1 296 7 255 1 11 3 333 1 233 1 336 1 271 1 279 1 15 1 99 1 223 4 345 1 140 1 154 1 27 1 44 1 199 1 291 1 
20 2 332 2 310 4 230 1 159 1 333 2 232 1 233 1 336 2 187 1 2 1 271 2 345 2 140 2 348 1 27 1 44 1 291 3 319 1 147 2 255 2 296 19 218 1 11 8 15 2 279 2 197 1 120 1 99 2 223 11 305 1 154 2 199 2 
147 1 20 1 332 1 310 2 245 1 296 7 255 1 11 3 333 1 233 1 336 1 271 1 279 1 15 1 99 1 223 4 345 1 140 1 154 1 27 1 44 1 199 1 291 1 
147 1 20 1 332 1 310 2 245 1 296 7 255 1 11 3 333 1 233 1 336 1 271 1 279 1 15 1 99 1 223 4 345 1 140 1 154 1 27 1 44 1 199 1 291 1 
147 1 20 1 332 1 310 2 245 1 296 7 255 1 11 3 333 1 233 1 336 1 271 1 279 1 15 1 99 1 223 4 345 1 140 1 154 1 27 1 44 1 199 1 291 1 
181 1 40 1 9 1 127 1 129 1 134 1 308 1 
309 1 
181 1 40 1 127 1 129 1 134 1 107 1 
128 1 
45 1 
103 1 94 1 216 1 184 1 202 1 35 1 37 1 186 1 38 1 196 1 100 1 106 1 141 1 328 1 101 1 359 1 125 1 
103 1 94 1 216 1 184 1 202 1 35 1 37 1 186 1 38 1 196 1 100 1 106 1 141 1 328 1 101 1 359 1 125 1 
103 1 94 1 216 1 184 1 202 1 35 1 37 1 186 1 38 1 196 1 100 1 106 1 141 1 328 1 101 1 359 1 125 1 
128 1 
128 1 
45 1 
45 1 
299 1 174 1 
181 1 40 1 309 1 127 1 129 1 158 1 239 1 134 1 186 1 176 1 137 1 4 1 78 1 141 1 210 1 275 1 359 1 
103 2 201 1 310 2 311 1 333 1 334 1 287 1 312 1 204 2 207 1 104 1 166 1 23 2 24 1 5 1 106 2 92 1 147 1 111 2 255 1 296 2 172 1 11 1 71 2 74 1 99 1 223 1 177 1 329 1 328 2 265 1 
7 1 352 1 320 1 111 2 201 1 162 1 204 2 323 1 166 1 119 2 23 2 25 1 189 1 77 1 304 1 262 1 170 1 306 1 357 1 
7 1 352 1 111 1 201 1 162 1 204 1 323 1 166 1 119 2 23 1 303 1 77 1 304 1 262 1 170 1 306 1 357 1 
155 1 111 1 201 1 204 1 339 1 166 1 23 1 25 1 39 1 177 1 306 1 80 1 329 1 57 1 
7 1 352 1 111 1 201 1 162 1 204 1 323 1 166 1 119 2 23 1 25 1 189 1 77 1 304 1 262 1 170 1 306 1 357 1 
326 1 
213 1 157 1 6 1 316 1 89 1 277 1 83 1 
83 1 185 1 205 1 343 1 60 1 137 1 88 1 316 2 89 1 43 1 67 1 277 1 324 1 280 1 78 1 307 1 123 1 
131 2 83 1 313 1 137 5 271 2 88 8 316 5 89 5 43 3 91 2 143 2 194 2 277 8 241 3 324 4 280 3 152 1 154 2 55 1 329 1 20 2 102 2 332 2 201 2 161 2 336 2 204 1 343 3 166 1 22 1 60 5 168 2 23 1 248 2 109 1 66 4 111 1 173 2 220 1 222 4 260 2 39 1 177 6 78 5 307 3 123 3 
20 1 66 3 232 1 277 2 336 1 222 3 343 1 324 2 197 1 279 1 316 2 140 1 88 4 154 1 89 3 43 1 307 1 199 1 123 1 319 1 
103 1 332 1 184 1 202 1 336 2 1 1 343 1 136 1 168 2 137 1 89 2 43 1 106 1 34 1 94 1 35 1 277 2 37 1 196 1 75 1 100 1 358 1 78 1 307 1 328 1 123 1 101 1 268 1 
157 1 277 1 83 1 343 1 6 1 316 1 89 1 43 1 307 1 123 1 
20 1 66 1 332 1 277 2 336 1 222 1 324 1 168 1 271 1 88 2 316 1 154 1 89 1 
137 1 60 1 280 1 316 1 78 1 83 1 
201 3 269 1 246 1 314 1 234 1 204 4 343 2 166 2 60 4 137 3 138 1 61 1 23 4 139 1 89 2 43 2 111 4 149 1 277 2 12 1 13 1 280 2 152 1 39 2 260 2 76 2 177 2 78 3 307 2 55 2 80 1 329 2 123 1 57 1 
103 3 310 2 201 1 333 1 202 1 287 1 204 1 104 1 166 1 23 1 86 1 26 1 106 2 147 1 111 1 296 1 255 1 172 1 35 2 50 1 14 1 96 1 99 1 223 1 152 1 39 1 100 2 356 1 177 1 328 3 329 1 101 2 
10 1 66 2 277 1 83 2 222 2 343 1 324 2 260 1 88 4 316 4 89 2 43 1 307 1 55 1 123 1 
181 1 40 1 65 1 
181 1 40 1 65 1 
181 1 40 1 65 1 
212 1 181 1 40 1 
183 1 181 1 32 1 40 1 174 1 
212 1 181 1 40 1 
212 1 181 1 40 1 
181 1 40 1 
127 1 
292 1 147 2 10 1 332 1 310 4 296 8 255 2 11 4 333 2 218 1 336 1 1 1 315 1 120 2 99 2 223 4 348 3 358 1 126 1 268 1 
292 1 10 1 213 1 332 1 296 6 11 3 336 1 1 1 120 2 223 3 358 1 348 2 126 1 268 1 
283 1 147 1 20 1 332 1 310 2 255 1 296 3 333 1 11 1 336 1 271 1 120 1 99 1 223 2 348 1 154 1 
271 1 20 1 279 1 332 1 223 3 245 1 296 5 11 2 140 1 154 1 336 1 199 1 
271 1 20 1 279 1 332 1 223 3 245 1 296 5 224 1 11 2 154 1 336 1 199 1 
223 1 296 1 199 1 
279 1 296 1 11 1 
147 1 283 1 20 1 102 1 332 1 310 2 255 1 296 5 333 1 11 2 336 1 271 1 99 1 120 2 223 3 154 1 348 2 
20 2 332 2 310 2 333 1 232 1 233 1 336 2 2 1 187 1 271 2 140 1 348 1 319 1 147 1 296 10 255 1 11 4 279 1 197 1 99 1 120 1 223 6 154 2 199 1 
332 1 296 6 11 3 336 1 1 1 315 1 120 1 223 3 358 1 348 2 268 1 
292 1 147 1 310 2 296 3 255 1 11 1 218 1 333 1 315 1 300 1 120 1 99 1 223 2 348 2 358 1 268 1 126 1 
147 1 332 2 310 2 34 1 255 1 296 10 333 1 11 5 233 1 336 2 1 1 315 2 99 1 120 3 223 5 358 2 348 5 268 2 
147 1 310 2 255 1 296 1 333 1 11 1 233 1 336 1 99 1 154 1 
147 1 20 1 332 1 310 2 255 1 296 3 333 1 11 1 233 1 336 1 271 1 120 1 99 1 223 2 348 1 154 1 
147 3 310 6 296 3 255 3 218 1 333 3 11 1 233 1 315 1 97 1 300 1 99 3 120 1 223 2 358 1 348 2 268 1 
147 3 283 1 20 1 332 1 310 6 245 1 296 5 255 3 11 2 333 3 286 1 233 1 336 1 97 1 271 1 279 1 99 3 223 3 140 1 154 1 199 1 
147 1 20 1 332 1 310 2 245 1 255 1 296 5 11 2 333 1 233 1 336 1 271 1 279 1 99 1 223 3 140 1 154 1 199 1 319 1 
292 1 283 1 147 2 10 1 332 1 310 4 255 2 296 8 11 4 333 2 233 1 336 1 1 1 279 1 120 2 99 2 223 4 140 1 348 2 358 1 199 1 268 1 126 1 319 1 
283 1 20 2 332 2 310 6 333 3 232 1 233 1 336 2 187 1 2 1 271 2 140 1 348 1 319 1 147 3 296 11 255 3 11 4 218 1 279 1 197 1 99 3 120 1 223 7 154 2 199 1 
283 1 20 2 332 4 310 4 333 2 232 1 233 1 336 4 1 1 2 1 187 1 315 2 271 2 140 1 348 4 319 1 292 1 147 2 34 1 296 18 255 2 11 8 279 1 197 1 120 2 99 2 223 10 358 1 154 2 199 1 268 1 126 1 
147 1 20 1 332 1 310 2 245 1 255 1 296 5 11 2 333 1 233 1 336 1 271 1 279 1 99 1 223 3 140 1 154 1 199 1 319 1 
20 2 332 2 310 2 333 1 232 1 233 1 336 2 2 1 187 1 271 2 140 1 319 1 147 1 296 10 255 1 11 4 279 1 197 1 99 1 223 6 154 2 199 1 
283 1 20 2 332 5 310 6 333 3 232 1 233 1 336 5 1 2 187 1 2 1 315 2 271 2 140 1 348 7 319 1 292 1 147 3 10 1 34 1 296 25 255 3 11 11 218 1 279 1 197 1 99 3 120 5 223 14 358 2 154 2 199 1 268 2 126 1 
20 3 332 3 310 6 333 3 232 1 233 1 336 3 187 1 2 1 271 3 140 1 348 3 319 1 147 3 296 14 255 3 11 5 218 1 97 1 279 1 197 1 99 3 120 3 223 9 154 3 199 1 
292 2 332 1 296 7 11 3 336 1 1 1 315 3 120 3 223 4 358 3 348 6 126 1 268 3 
20 2 332 5 310 6 333 3 232 1 233 1 336 5 1 2 187 1 2 1 315 1 271 2 140 1 348 6 319 1 292 1 147 3 10 1 34 1 296 25 255 3 11 11 218 1 97 1 279 1 197 1 99 3 120 5 223 14 358 2 154 2 199 1 268 2 126 1 
103 1 294 1 26 1 274 1 106 1 328 1 297 1 
103 1 294 1 231 1 297 1 73 1 26 1 274 1 79 1 106 1 328 1 142 1 317 1 
166 1 213 1 23 1 111 1 201 1 39 1 177 1 80 1 329 1 204 1 57 1 
103 2 111 1 201 1 35 1 204 1 96 1 166 1 86 1 23 1 152 1 39 1 26 1 100 1 177 1 191 1 106 1 329 1 328 2 
103 2 201 1 184 1 338 1 204 1 166 1 23 1 86 1 272 1 26 1 191 1 106 2 111 1 215 1 35 1 96 1 152 2 76 1 100 2 281 1 177 3 328 2 329 2 
103 2 201 1 184 1 338 1 204 2 166 1 23 2 86 1 272 1 26 1 191 1 106 2 350 1 111 2 215 1 35 1 152 2 76 1 100 2 281 1 177 3 198 1 328 2 329 2 
194 1 215 1 111 3 201 1 161 1 83 1 338 1 241 1 204 3 166 1 59 1 167 1 137 2 60 1 23 3 152 1 39 1 76 1 316 1 177 4 78 2 198 1 329 1 
194 1 215 1 111 3 201 1 161 1 83 1 338 1 241 1 204 3 166 1 137 2 60 1 23 3 152 1 39 1 248 1 76 1 316 1 177 4 78 2 198 1 329 1 
166 1 23 1 111 1 201 1 219 1 204 1 
111 1 201 2 314 1 204 1 313 1 234 1 117 1 166 1 23 1 152 1 39 1 177 1 329 1 
332 1 103 2 201 1 310 4 333 2 334 1 287 2 132 1 336 1 135 1 1 1 204 1 203 1 166 1 86 1 23 1 26 2 348 2 191 1 106 1 145 1 292 1 147 2 10 1 320 1 111 1 296 6 255 2 11 3 172 2 35 1 14 1 96 1 120 2 99 2 223 3 152 1 100 1 356 1 177 1 358 1 263 1 329 1 328 2 265 1 268 1 126 1 
157 1 161 1 83 1 204 1 343 2 137 3 60 2 23 1 248 1 6 1 316 1 89 1 43 2 91 1 143 1 111 1 194 1 173 1 277 1 149 1 241 1 176 1 280 1 39 1 177 2 78 3 307 2 123 2 
320 1 111 2 201 2 219 1 161 1 220 1 204 2 313 1 166 1 23 2 152 1 177 2 329 1 
180 1 320 1 111 4 201 1 204 4 166 1 23 4 39 1 177 1 198 1 80 1 329 1 57 1 
111 1 201 2 246 1 12 1 314 1 204 1 234 1 166 1 23 1 152 1 346 1 177 1 329 1 
323 1 166 1 7 1 119 1 23 1 111 1 201 1 39 1 77 1 204 1 
320 1 111 2 201 1 204 2 207 1 166 1 74 1 23 2 170 1 177 1 329 1 
180 1 320 1 111 4 201 2 160 1 82 1 204 5 207 1 166 2 23 5 39 1 76 1 177 3 80 1 329 2 57 1 
180 1 320 1 111 4 201 2 160 1 204 5 207 1 166 2 23 5 39 1 76 1 177 3 63 1 80 1 329 2 57 1 
103 2 111 1 201 1 35 1 204 1 166 1 86 1 23 1 152 1 39 1 26 1 100 1 177 1 191 1 106 1 329 1 328 2 350 1 
111 1 201 2 314 1 204 1 313 1 234 1 117 1 166 1 23 1 152 1 76 1 177 1 329 1 
243 1 26 1 148 1 288 1 252 1 
194 1 243 2 184 1 148 2 288 1 83 1 340 1 289 1 342 1 176 1 137 2 272 1 26 1 281 1 316 1 78 2 264 1 211 1 252 2 
103 1 24 1 5 1 148 1 106 1 288 1 328 1 92 1 252 1 
289 1 288 1 264 1 
33 1 213 1 229 1 114 1 
84 1 33 1 229 1 51 1 114 1 179 1 69 1 
51 1 41 1 318 1 
33 1 229 1 113 1 114 1 133 2 69 1 257 1 49 1 84 1 51 3 327 1 179 3 
84 1 33 1 229 1 51 2 114 1 47 1 179 2 69 1 42 1 
352 1 229 1 69 1 257 1 323 1 84 1 119 1 51 1 19 1 179 1 108 1 
84 1 33 1 229 1 51 1 179 1 69 1 257 1 
84 1 33 2 51 1 114 1 179 1 69 1 257 1 
192 1 33 1 229 1 69 2 270 1 257 1 84 2 301 1 51 2 179 2 
33 1 229 2 114 1 238 1 69 1 257 1 42 2 84 1 302 1 51 3 282 1 179 3 108 1 
33 1 352 1 229 1 114 1 69 1 257 1 42 1 323 1 84 1 119 2 51 2 153 1 77 1 262 1 179 2 
33 1 229 2 114 1 47 1 69 2 257 1 42 2 84 2 150 1 302 1 51 4 179 4 108 1 
84 1 33 1 229 1 51 1 114 1 179 1 69 1 257 1 
33 2 229 3 114 2 256 1 133 1 69 1 49 1 42 2 84 1 302 1 51 4 327 1 179 4 108 1 
84 1 293 1 51 1 253 1 163 1 179 2 69 1 42 1 257 1 
33 1 229 1 114 1 133 2 69 1 257 1 49 2 84 1 51 3 327 1 273 1 179 3 
229 2 195 1 144 1 188 2 
182 1 84 1 51 1 179 1 69 1 257 1 
84 1 33 1 229 1 51 2 114 1 238 1 179 2 69 1 42 1 257 1 
93 1 
84 1 33 1 229 1 51 1 114 1 179 1 69 1 257 1 
33 1 229 1 114 1 238 1 133 1 69 1 42 1 257 1 84 1 51 3 179 3 
302 1 229 1 256 1 108 1 
33 1 229 1 

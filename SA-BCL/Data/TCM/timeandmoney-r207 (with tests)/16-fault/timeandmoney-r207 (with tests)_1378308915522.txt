#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (26,201) (153,291) (153,291) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (26,201) (153,291) (153,291) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (26,201) (153,291) (153,291) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (26,201) (153,291) (153,291) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (26,201) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (26,201) 164 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (26,201) 164 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 230 (42,80,172) (8,236,240) (8,236,240) (8,236,240) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 258 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 230 (42,80,172) (42,80,172) (42,80,172) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 318 18 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 258 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 25
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> >>
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 0
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | OPERATOR | 2465 | - -> <<
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
153 1 2 1 352 1 158 2 51 1 268 1 99 1 269 1 148 1 26 1 201 1 230 1 232 2 291 1 205 1 104 1 
153 1 2 1 352 1 158 2 51 1 268 1 99 1 269 1 148 1 26 1 201 1 230 1 232 2 291 1 205 1 104 1 
153 1 2 1 352 1 158 2 51 1 268 1 99 1 269 1 148 1 26 1 201 1 230 1 232 2 291 1 205 1 104 1 
153 1 2 1 352 1 158 2 51 1 268 1 99 1 269 1 148 1 26 1 201 1 230 1 232 2 291 1 205 1 104 1 
125 1 92 1 2 1 35 1 158 4 51 1 353 3 341 1 99 1 269 1 83 2 245 3 231 1 230 1 232 4 102 1 103 2 205 1 
92 1 2 1 319 1 352 1 158 2 61 1 268 1 99 1 269 1 148 1 245 1 231 1 230 1 232 2 336 1 205 1 
201 1 2 1 232 1 158 1 269 1 99 1 
201 1 2 1 220 1 164 1 232 2 158 2 353 1 269 1 99 1 
201 1 2 1 220 1 164 1 232 2 158 2 353 1 269 1 99 1 
334 1 258 1 174 1 
270 1 174 1 322 2 
298 2 351 2 130 2 85 2 11 1 238 2 142 2 239 1 
262 1 222 2 351 3 250 1 266 1 75 1 77 1 332 1 5 1 52 1 176 2 84 1 10 1 289 2 355 1 273 1 85 2 235 1 11 1 238 2 239 1 124 2 298 3 184 1 156 1 131 1 130 2 58 1 60 1 94 1 254 2 325 1 135 1 190 1 65 1 260 1 216 1 142 2 195 1 
47 1 298 1 155 1 351 1 130 1 85 1 94 1 238 1 142 1 239 1 
47 1 351 2 174 1 223 1 100 1 334 1 85 1 180 1 238 1 239 1 105 1 298 2 155 1 130 1 300 1 59 1 94 2 108 1 305 1 168 1 142 2 
47 1 298 2 105 1 155 1 130 2 351 2 174 1 223 1 59 1 300 2 94 2 100 2 108 1 334 1 85 2 168 1 238 2 239 1 142 2 
100 1 101 1 106 1 300 1 224 1 
100 2 217 1 334 1 101 1 286 1 174 1 300 2 224 1 
100 1 101 1 300 1 
47 1 298 1 155 1 130 1 351 1 300 1 94 1 224 1 100 1 85 1 168 1 238 1 239 1 142 1 
174 1 
100 2 334 1 101 1 286 1 174 1 167 1 300 2 224 1 
337 1 174 1 300 5 116 2 224 2 100 5 53 1 228 2 334 1 286 1 101 2 29 1 66 1 367 1 215 1 275 1 68 1 181 2 284 1 
262 1 298 2 16 1 250 1 351 2 60 1 75 1 254 1 5 1 176 1 135 1 20 1 190 1 257 1 289 1 273 1 85 1 260 1 238 1 142 1 
258 1 11 1 
298 2 351 2 130 1 248 1 85 1 11 2 114 1 238 1 142 2 
257 1 87 1 
262 1 298 1 351 1 250 1 60 1 75 1 94 1 254 1 5 1 176 1 135 1 190 1 65 1 289 1 294 1 273 1 11 1 260 1 
298 5 16 2 351 5 130 1 28 1 95 1 20 1 85 4 248 1 11 1 180 1 204 1 238 4 142 5 
298 2 155 1 351 2 315 1 85 2 94 1 238 2 142 2 
298 3 16 1 130 1 351 3 85 3 11 1 238 3 142 3 
298 1 155 1 351 1 85 1 94 1 238 1 142 1 
298 1 351 1 130 1 85 1 248 1 94 1 114 1 238 1 142 1 
262 1 222 2 250 1 351 4 223 1 75 1 77 1 332 1 5 1 52 1 100 1 176 1 177 1 84 1 289 1 355 1 273 1 85 3 11 1 238 3 239 1 124 1 298 4 105 1 184 1 16 1 156 1 130 2 58 1 59 1 300 1 60 1 94 2 254 1 108 1 19 1 325 1 135 1 20 1 190 1 65 1 248 1 260 1 216 1 142 3 
95 1 298 2 16 1 351 2 85 1 11 1 180 1 238 1 142 2 
298 3 105 1 16 2 130 1 351 3 174 1 300 1 59 1 223 1 94 1 100 1 108 1 20 1 177 1 248 1 85 3 111 1 238 3 142 3 
298 2 16 1 130 1 351 2 118 1 257 1 248 1 85 2 238 2 142 2 
262 1 298 1 351 1 250 1 60 1 75 1 94 1 254 1 5 1 176 1 135 1 190 1 65 1 289 1 273 1 11 1 260 1 
262 1 338 1 298 1 351 1 250 1 60 1 94 1 254 1 5 1 176 1 135 1 343 1 190 1 65 1 289 1 273 1 11 1 
73 1 222 2 77 1 332 1 178 1 9 1 118 2 119 1 10 2 355 1 237 1 86 1 87 2 124 4 206 1 297 1 184 1 156 1 58 2 325 1 257 2 141 1 
105 1 298 1 351 1 85 1 315 1 94 1 238 1 142 1 
309 1 202 1 
309 1 202 1 
335 1 306 1 
335 1 306 1 
335 1 306 1 
365 1 309 1 202 1 
128 1 309 1 202 1 
335 1 306 1 309 2 282 1 202 2 189 1 
365 1 309 1 202 1 
365 1 309 1 202 1 
218 1 309 1 202 1 
218 1 309 1 202 1 
218 1 309 1 202 1 
115 1 70 1 264 1 171 1 309 1 351 2 100 1 225 1 234 1 85 2 11 1 202 1 238 2 122 1 126 1 316 1 298 2 128 1 300 1 278 1 64 1 211 1 346 1 142 2 
115 2 316 2 219 2 70 3 309 2 349 1 174 1 300 2 100 2 211 2 344 1 234 1 314 1 354 1 110 1 282 1 202 2 346 2 46 1 
230 1 51 1 205 1 
230 1 61 1 205 1 
279 1 356 1 7 1 51 2 61 1 205 3 
356 1 7 1 50 1 51 1 61 1 205 2 
356 2 7 1 51 1 61 1 205 2 
47 1 264 1 145 2 351 1 174 2 116 1 224 4 270 1 100 5 228 1 178 1 311 1 101 1 286 1 81 1 334 1 119 1 120 1 85 1 203 1 237 1 238 1 181 1 239 1 337 2 297 1 298 1 182 2 155 1 130 1 300 5 322 3 94 1 364 2 342 1 66 3 246 1 215 1 168 1 142 1 
47 1 145 2 3 2 100 5 334 1 101 3 286 1 203 1 337 2 297 1 298 1 155 1 300 5 106 2 342 1 66 3 168 1 215 1 264 1 351 1 174 2 116 1 224 4 270 1 228 1 311 1 178 1 119 1 85 1 120 1 238 1 237 1 181 1 239 1 129 1 130 1 188 1 94 1 322 3 364 2 142 1 
47 1 264 1 145 2 351 1 174 2 116 1 224 2 270 1 100 3 228 1 334 1 81 1 311 1 178 1 119 1 85 1 120 1 203 1 238 1 237 1 181 1 239 1 337 2 297 1 298 1 182 1 155 1 130 1 300 3 94 1 322 3 364 2 246 1 66 3 168 1 142 1 284 1 
144 1 47 1 145 4 100 4 333 1 334 1 203 1 337 4 297 2 298 1 155 1 300 4 66 5 168 1 264 2 351 1 174 4 116 1 224 3 270 3 228 1 178 2 311 2 81 1 119 2 120 1 85 1 237 2 238 1 181 1 239 1 182 2 130 1 37 1 94 1 322 7 364 4 246 1 284 1 142 1 
190 1 307 1 258 1 
190 1 318 1 
271 1 
5 1 135 1 190 1 
190 1 193 1 
135 1 190 1 
5 1 208 1 154 1 135 1 190 3 307 2 
143 1 263 1 173 1 197 1 285 1 331 1 10 5 119 2 237 2 124 9 276 1 88 1 339 1 58 4 363 2 209 1 140 3 283 1 
143 1 263 2 173 1 197 1 285 1 331 1 10 5 119 2 237 2 124 9 276 1 88 1 339 1 58 4 363 2 209 1 140 4 283 1 
143 1 263 1 173 1 197 1 285 1 331 1 10 5 119 2 237 2 124 9 276 1 88 1 339 1 58 4 244 1 363 2 209 1 140 3 283 1 
143 2 263 6 347 1 265 1 222 4 173 2 285 2 197 2 331 1 332 2 311 4 178 4 229 1 82 4 10 20 119 6 355 2 237 6 124 39 276 1 88 1 297 4 184 2 339 1 241 1 156 2 58 19 360 2 320 1 363 3 134 1 280 1 281 4 209 2 169 1 140 9 283 1 
143 1 263 2 222 4 173 1 285 1 197 1 331 1 332 2 200 1 119 2 10 6 355 2 237 2 124 11 276 1 184 2 156 2 339 1 58 5 360 1 363 3 209 1 191 1 140 5 283 1 
262 1 2 1 352 1 51 1 269 1 99 1 27 1 176 1 8 1 150 1 230 1 289 1 232 1 273 1 236 1 205 2 240 1 186 1 158 1 301 1 61 1 254 1 279 1 328 1 42 1 69 1 
262 1 2 1 352 1 51 1 353 2 269 1 176 1 8 1 150 1 231 1 230 1 289 1 232 3 273 1 121 1 205 2 240 1 92 1 186 1 158 3 301 1 61 1 254 1 279 1 303 1 245 1 328 1 166 1 42 1 44 1 69 1 
262 1 352 1 51 1 353 2 176 1 8 1 150 1 231 1 289 1 230 1 232 2 273 1 205 2 92 1 186 1 158 2 61 1 254 1 279 1 303 1 245 1 328 1 166 1 42 1 44 1 69 1 
262 1 15 1 2 1 352 2 186 2 158 1 60 1 4 1 269 1 254 1 323 1 176 1 135 1 190 1 163 1 289 1 328 2 232 1 273 1 121 1 113 1 139 1 69 2 
262 1 2 1 352 1 51 1 269 1 99 1 176 1 8 1 150 1 230 1 289 1 232 1 273 1 236 1 205 2 240 1 186 1 158 1 301 1 61 1 254 1 279 1 328 1 42 1 44 1 69 1 
21 1 
49 1 100 5 286 3 101 6 334 2 149 1 289 2 293 2 151 1 14 2 337 2 298 1 105 1 300 5 60 2 59 1 107 1 254 2 255 1 108 1 66 2 305 1 215 1 261 1 262 1 72 4 348 1 351 1 174 3 223 1 116 1 270 2 228 1 176 2 273 1 120 1 180 1 181 1 91 1 90 1 185 2 132 1 243 2 322 2 94 1 323 1 135 1 190 1 138 2 329 2 45 1 139 1 249 2 194 1 142 1 
72 2 348 1 351 1 174 2 223 1 100 3 286 1 334 2 101 2 293 1 180 1 91 1 298 1 105 1 132 1 300 3 59 1 94 1 107 1 108 1 305 1 167 1 261 1 142 1 
91 1 105 1 298 1 348 1 72 3 132 1 351 1 174 2 59 1 300 2 223 1 94 1 107 1 100 2 108 1 334 2 305 1 261 1 180 1 249 1 142 1 
72 3 348 1 351 1 174 3 223 1 100 3 286 1 334 3 101 2 293 1 180 1 91 1 298 1 105 1 132 1 300 3 59 1 94 1 107 1 108 1 305 1 138 1 167 1 261 1 249 1 142 1 
47 1 100 5 334 4 286 3 101 7 293 4 337 1 14 2 105 1 298 2 155 1 59 1 300 5 107 1 108 1 256 1 305 1 212 1 66 1 167 1 168 1 215 1 261 1 71 1 348 1 72 5 351 2 174 4 223 1 116 1 270 2 228 1 85 1 180 1 238 1 181 1 239 1 91 1 90 1 185 2 130 1 132 1 243 2 361 1 94 2 138 4 97 1 329 2 45 1 249 3 142 2 
100 4 334 3 286 2 101 4 293 2 337 1 14 2 105 1 298 1 59 1 300 4 107 1 108 1 305 1 66 1 215 1 261 1 72 4 348 1 351 1 174 4 223 1 116 1 270 2 228 1 180 1 181 1 91 1 90 1 185 2 132 1 243 2 94 1 322 2 138 2 329 2 45 1 249 2 142 1 194 1 
71 1 72 4 348 1 351 1 174 3 223 1 116 1 270 2 100 4 228 1 101 4 286 2 334 3 293 2 180 1 181 1 14 2 337 1 90 1 91 1 298 1 105 1 185 2 132 1 243 2 300 4 59 1 94 1 107 1 256 1 108 1 66 1 305 1 138 2 97 1 329 2 215 1 261 1 45 1 249 2 142 1 
71 1 72 4 348 1 351 1 174 3 223 1 116 1 270 2 100 4 228 1 101 4 286 2 334 3 293 2 180 1 181 1 14 2 337 1 90 1 91 1 298 1 105 1 185 2 132 1 243 2 300 4 59 1 94 1 107 1 256 1 108 1 66 1 305 1 138 2 97 1 329 2 215 1 261 1 45 1 249 2 142 1 
72 4 348 1 351 1 174 3 223 1 116 1 198 1 100 4 228 1 101 4 286 2 334 3 287 1 293 2 180 1 54 2 181 1 337 1 91 1 298 1 105 1 132 1 243 2 300 4 59 1 322 2 94 1 107 1 256 1 108 1 136 2 66 1 305 1 138 2 329 2 215 1 67 1 261 1 45 1 249 2 142 1 
71 1 72 5 348 1 351 1 174 3 223 1 116 1 270 2 100 4 228 1 286 2 334 3 101 5 293 3 180 1 181 1 14 2 337 1 90 1 91 1 298 1 105 1 185 2 132 1 243 2 300 4 59 1 94 1 107 1 256 1 108 1 66 1 305 1 212 1 138 3 97 1 329 2 215 1 261 1 45 1 249 3 142 1 
71 1 72 5 348 1 351 1 174 3 223 1 116 1 270 2 100 4 228 1 286 2 334 3 101 5 293 3 180 1 181 1 14 2 337 1 90 1 91 1 298 1 105 1 185 2 132 1 243 2 300 4 59 1 94 1 107 1 256 1 108 1 66 1 305 1 212 1 138 3 97 1 329 2 215 1 261 1 45 1 249 3 142 1 
100 4 334 3 286 2 101 4 293 2 54 2 337 1 105 1 298 1 59 1 300 4 107 1 108 1 305 1 66 1 215 1 261 1 67 1 72 4 348 1 351 1 174 3 223 1 116 1 228 1 180 1 181 1 91 1 132 1 243 2 94 1 322 2 136 2 138 2 329 2 45 1 249 2 142 1 194 1 
325 1 184 1 339 1 156 1 258 1 355 1 222 2 77 1 141 1 283 1 332 1 
325 1 184 1 156 1 355 1 222 2 340 1 77 1 22 1 332 1 
250 1 332 1 5 1 10 1 289 1 294 1 11 1 296 1 56 1 298 2 16 1 156 1 58 1 340 1 60 1 254 1 20 1 65 1 260 1 262 1 222 2 351 2 75 1 77 1 176 1 84 1 118 1 355 1 273 1 85 1 238 1 124 2 184 1 131 1 321 1 94 1 325 1 135 1 190 1 142 1 
143 1 1 2 250 2 285 1 331 1 332 3 52 2 5 2 289 1 10 11 11 1 253 1 297 2 298 3 16 1 339 1 156 3 58 11 340 1 60 1 254 1 20 1 257 6 65 1 260 2 262 2 263 1 222 6 351 3 75 2 77 3 227 2 176 1 311 2 178 2 84 1 118 6 119 4 355 3 273 2 85 1 32 1 238 1 237 4 87 6 124 22 276 1 34 2 184 3 93 2 131 1 94 1 363 2 325 3 135 2 190 2 140 3 283 1 142 1 
262 2 222 2 266 1 147 1 77 1 332 1 5 1 226 1 176 2 84 1 289 2 10 1 273 3 355 1 13 1 55 1 124 2 184 1 156 1 131 1 58 1 60 1 254 2 324 1 323 1 325 1 135 2 190 2 259 1 139 1 
222 2 351 1 77 1 332 1 311 1 178 1 118 1 10 1 119 1 355 1 85 1 238 1 237 1 87 1 124 3 297 1 298 1 184 1 156 1 130 1 340 1 58 2 159 1 325 1 257 1 248 1 142 1 
124 2 263 1 184 1 156 1 222 2 77 1 332 1 325 1 178 1 9 1 118 1 257 1 10 2 355 1 237 1 140 1 141 1 87 1 
124 2 297 1 184 1 156 1 73 1 222 2 58 2 77 1 332 1 325 1 118 1 257 1 119 1 355 1 141 1 87 1 
263 1 222 2 77 1 332 1 178 1 311 1 118 2 10 2 119 1 355 1 237 1 87 2 124 4 297 1 184 1 156 1 58 2 325 1 257 2 141 1 140 1 
124 2 263 1 184 1 156 1 222 2 77 1 332 1 325 1 178 1 9 1 118 1 257 1 10 2 355 1 13 1 237 1 140 1 87 1 
124 2 297 1 184 1 156 1 73 1 222 2 58 2 77 1 332 1 325 1 118 1 257 1 119 1 355 1 13 1 87 1 
124 4 297 1 184 1 156 1 222 2 58 2 77 1 332 1 325 1 311 1 178 1 118 2 257 2 119 1 10 2 355 1 13 1 237 1 87 2 
124 4 297 1 263 1 184 1 156 1 222 2 58 2 77 1 332 1 325 1 311 1 178 1 118 2 257 2 119 1 10 2 355 1 237 1 140 1 87 2 
262 1 250 1 351 1 222 2 75 1 77 1 332 1 5 1 52 1 176 1 84 1 10 1 289 1 273 1 355 1 11 1 124 2 298 1 184 1 156 1 131 1 58 1 60 1 94 1 254 1 135 1 325 1 190 1 65 1 260 1 
262 1 250 1 351 1 222 2 77 1 332 1 5 1 176 1 84 1 289 1 273 1 355 1 11 1 124 1 338 1 298 1 184 1 156 1 58 1 60 1 94 1 254 1 135 1 96 1 325 1 343 1 190 1 65 1 
263 1 222 2 77 1 332 1 178 1 311 1 118 2 10 2 119 1 355 1 237 1 87 2 124 4 297 1 184 1 156 1 340 1 58 2 325 1 257 2 140 1 
262 1 263 1 250 1 351 1 222 2 75 1 77 1 332 1 5 1 52 1 27 1 176 1 178 1 311 1 118 2 119 1 10 2 289 1 273 1 355 1 237 1 87 2 124 4 34 1 297 1 298 1 184 1 156 1 58 2 254 1 135 1 325 1 190 1 257 2 260 1 140 1 
263 1 222 2 351 1 77 1 332 1 311 1 178 1 118 1 119 1 10 2 355 1 85 1 238 1 237 1 87 1 124 3 297 1 298 1 184 1 156 1 130 1 58 1 340 1 325 1 257 1 213 1 248 1 140 1 142 1 
0 1 23 1 263 6 222 6 25 1 146 1 332 3 251 1 200 1 311 6 178 6 82 4 229 2 312 1 179 1 10 21 119 5 292 1 355 3 237 6 124 39 357 1 317 1 297 5 184 3 339 1 241 2 156 3 299 1 360 1 58 18 362 3 280 2 281 4 63 1 43 1 140 6 283 1 
0 1 263 1 222 4 25 1 146 1 332 2 251 1 200 1 311 2 178 2 82 2 312 1 179 1 119 1 10 11 292 1 355 2 237 2 124 19 317 2 357 1 297 1 184 2 156 2 241 2 360 1 58 8 362 3 39 1 281 2 63 2 43 1 140 1 
0 1 23 1 263 6 222 6 25 1 146 1 332 3 251 1 200 1 311 6 178 6 82 4 229 2 312 1 179 1 10 21 119 5 292 1 355 3 237 6 124 39 357 1 317 1 297 5 184 3 339 1 241 2 156 3 360 1 58 18 362 3 39 1 280 2 281 4 63 1 43 1 140 6 283 1 
0 1 23 1 263 6 222 6 25 1 146 1 332 3 251 1 200 1 311 6 178 6 82 4 229 2 312 1 179 1 10 21 119 5 292 1 355 3 237 6 124 39 357 1 317 1 297 5 184 3 339 1 241 2 156 3 360 1 58 18 362 3 39 1 280 2 281 4 63 1 43 1 140 6 283 1 
0 1 263 6 222 6 25 1 146 1 332 3 251 1 200 1 311 6 178 6 82 4 229 2 312 1 179 1 10 21 119 6 292 1 355 3 237 6 124 42 357 1 317 1 297 6 184 3 339 1 241 2 156 3 360 2 58 21 362 3 363 1 39 1 280 2 281 4 63 1 43 1 140 7 283 1 
316 1 115 1 162 1 211 1 309 1 344 1 282 1 202 1 346 1 46 1 
128 1 171 1 
316 1 115 1 211 1 30 1 309 1 214 1 112 1 202 1 346 1 
365 1 123 1 
218 1 327 1 189 1 
115 1 316 1 219 1 70 2 309 1 349 1 174 1 300 1 100 1 211 1 344 1 234 1 314 1 354 1 282 1 202 1 346 1 46 1 
115 1 316 1 219 1 70 2 309 1 349 1 174 1 300 1 100 1 211 1 344 1 234 1 314 1 354 1 282 1 202 1 346 1 46 1 
115 1 316 1 219 1 70 2 309 1 349 1 174 1 300 1 100 1 211 1 344 1 234 1 314 1 354 1 282 1 202 1 346 1 46 1 
365 1 189 1 123 1 
365 1 189 1 123 1 
218 1 327 1 
218 1 327 1 189 1 
225 1 122 1 
115 1 219 1 70 1 264 1 171 1 349 1 309 1 351 2 224 1 100 1 225 1 85 2 11 1 202 1 238 2 122 1 126 1 316 1 298 2 128 1 300 1 278 1 64 1 211 1 368 1 346 1 142 2 
262 1 351 2 222 2 266 2 77 1 78 1 332 1 175 1 176 2 84 1 10 1 289 2 233 1 273 1 355 1 55 1 124 2 89 1 127 1 298 2 184 1 156 1 157 1 131 1 340 1 58 1 254 2 135 1 325 1 190 1 142 2 
262 1 48 1 172 1 51 1 301 1 61 1 254 2 279 1 27 1 176 2 80 1 150 1 230 1 289 2 273 1 42 1 44 1 205 2 69 1 
262 1 51 1 301 1 61 1 254 1 279 1 176 1 304 1 80 1 150 1 230 1 289 1 273 1 42 1 44 1 205 2 69 1 
262 1 15 1 48 1 60 1 254 1 323 1 176 1 135 1 190 1 288 1 289 1 273 1 139 1 69 1 
262 1 48 1 172 1 51 1 301 1 61 1 254 1 279 1 176 1 80 1 150 1 230 1 289 1 273 1 42 1 44 1 205 2 69 1 
12 1 
337 1 334 1 66 1 258 1 174 1 367 1 275 1 
174 2 116 1 270 1 100 1 228 1 286 1 101 1 334 1 181 1 337 1 14 1 90 1 185 1 300 1 322 1 66 1 215 1 
262 1 318 1 60 1 116 1 18 1 254 1 5 1 208 1 228 1 176 1 135 1 366 1 190 1 289 1 273 1 215 1 181 1 
145 5 25 1 174 3 116 1 146 1 270 3 228 1 311 2 178 2 82 1 179 1 312 1 119 2 237 2 181 1 337 4 357 1 297 2 241 1 322 6 364 5 281 1 66 6 215 1 
143 1 47 1 71 1 351 1 116 1 285 1 331 1 100 1 228 1 272 2 119 1 85 1 237 2 238 1 181 1 239 1 276 1 337 2 298 1 155 1 36 1 130 1 300 1 94 1 66 2 215 1 168 1 142 1 
337 1 174 1 116 1 228 1 334 1 66 1 367 1 215 1 275 1 181 1 
337 5 1 1 297 2 36 1 145 5 174 5 322 10 364 5 270 5 311 2 178 2 119 2 66 5 237 2 
100 1 334 1 101 1 286 1 174 1 300 1 
262 1 221 1 49 2 116 2 199 2 100 3 228 2 176 2 101 4 286 2 289 2 273 1 120 2 151 1 181 2 337 2 60 2 300 3 254 2 255 1 323 1 135 1 137 1 190 1 66 2 330 1 215 1 139 1 284 1 
262 1 222 2 351 3 250 1 75 1 77 1 332 1 52 1 5 1 176 1 84 1 289 1 355 1 273 1 85 2 11 1 238 2 239 1 124 1 298 3 184 1 156 1 130 2 58 1 60 1 254 1 135 1 325 1 190 1 260 1 216 1 142 2 
337 2 145 2 174 4 49 1 116 1 322 4 197 1 364 2 270 2 228 1 334 2 66 1 120 1 215 1 181 1 
316 1 115 1 57 1 
225 1 316 1 115 1 313 1 344 1 
316 1 115 1 57 1 
316 1 115 1 57 1 
316 1 115 1 109 1 
316 1 115 1 109 1 
316 1 115 1 109 1 
316 1 115 1 
309 1 202 1 
143 1 263 2 222 4 285 1 331 1 332 2 10 5 119 2 355 2 237 2 124 10 276 1 184 2 339 1 156 2 360 1 58 5 363 2 140 4 283 1 
339 1 258 1 283 1 
124 4 297 1 184 1 156 1 222 2 58 2 332 1 311 1 178 1 119 1 10 2 355 1 165 1 237 1 
124 12 297 2 263 2 241 1 58 6 280 1 281 2 311 2 178 2 82 2 229 1 119 2 10 6 237 2 140 2 
143 1 263 2 196 1 222 2 285 1 331 1 332 1 178 2 311 2 229 1 82 2 119 4 10 10 355 1 237 4 124 20 276 1 297 2 184 1 339 1 156 1 58 10 360 1 363 2 280 1 281 2 140 4 283 1 
124 1 82 1 58 1 
124 1 281 1 10 1 
124 6 1 1 263 1 297 1 184 1 156 1 222 2 58 3 332 1 311 1 178 1 10 3 119 1 355 1 165 1 237 1 140 1 
263 1 222 4 25 1 146 1 332 2 200 1 311 2 178 2 82 1 179 1 312 1 10 6 119 2 355 2 237 2 124 13 357 1 297 2 184 2 241 1 156 2 58 7 360 1 363 1 281 1 140 2 
124 6 143 1 263 1 58 3 285 1 331 1 363 1 10 3 119 1 237 1 140 2 
143 1 124 3 276 1 263 1 184 1 339 1 156 1 222 2 58 2 360 1 285 1 363 1 332 1 134 1 10 1 355 1 140 2 283 1 
143 2 124 10 276 1 263 2 184 1 156 1 222 2 58 5 285 2 363 3 331 1 332 1 200 1 10 5 119 2 355 1 237 2 140 5 
124 2 263 1 184 1 156 1 222 2 332 1 200 1 178 1 10 2 355 1 237 1 140 1 
124 4 297 1 263 1 184 1 156 1 222 2 58 2 332 1 200 1 311 1 178 1 119 1 10 2 355 1 237 1 140 1 
124 3 143 1 23 1 263 1 184 3 156 3 222 6 360 1 58 2 285 1 363 1 332 3 134 1 200 1 10 1 355 3 140 2 
143 1 23 1 263 3 265 1 222 8 285 1 331 1 332 4 200 1 311 2 178 2 82 3 10 12 119 4 355 4 237 4 124 24 276 1 297 2 184 4 339 1 241 1 156 4 360 1 58 12 320 1 363 2 281 3 165 1 169 1 140 5 283 1 
143 1 263 1 222 2 285 1 331 1 332 1 200 1 82 1 179 1 119 2 10 5 355 1 237 2 124 10 276 1 184 1 241 1 156 1 339 1 58 5 363 2 281 1 140 3 283 1 
143 1 263 2 222 4 285 1 331 1 332 2 200 1 311 1 178 1 82 2 229 1 179 1 119 2 10 7 355 2 237 3 124 13 276 1 184 2 339 1 241 1 156 2 58 6 363 2 281 1 165 1 140 4 283 1 
263 1 222 4 25 1 146 1 332 2 200 1 311 2 178 2 82 1 179 1 312 1 10 6 119 2 355 2 237 2 124 12 357 1 297 2 184 2 241 1 156 2 58 6 281 1 165 1 140 1 
263 1 222 8 25 1 146 1 332 4 200 1 311 2 178 2 82 1 179 1 312 1 10 7 119 1 355 4 237 2 124 12 357 1 297 1 184 4 241 1 156 4 58 5 360 2 363 1 281 1 165 1 140 2 
143 1 263 1 222 2 285 1 331 1 332 1 200 1 82 1 179 1 119 2 10 5 355 1 237 2 124 10 276 1 184 1 241 1 156 1 339 1 58 5 363 2 281 1 140 3 283 1 
263 1 222 4 25 1 146 1 332 2 200 1 311 2 178 2 82 1 179 1 312 1 10 6 119 2 355 2 237 2 124 13 357 1 297 2 184 2 241 1 156 2 58 7 360 1 363 1 281 1 140 2 
263 1 222 6 25 1 146 1 332 3 200 1 311 2 178 2 82 1 179 1 312 1 10 7 119 1 355 3 237 2 124 11 357 1 297 1 184 3 241 1 156 3 360 1 58 4 281 1 165 1 140 1 
23 1 263 3 222 8 25 1 146 1 332 4 200 1 311 3 178 3 82 1 312 1 179 1 10 9 119 2 355 4 237 3 124 16 357 1 297 2 184 4 241 1 156 4 58 7 360 2 363 1 281 1 140 4 
124 5 143 2 276 1 263 2 339 1 58 3 285 2 331 1 363 2 119 1 10 2 237 1 140 4 283 1 
23 1 263 1 222 6 25 1 146 1 332 3 200 1 311 2 178 2 82 1 179 1 312 1 10 7 119 1 355 3 237 2 124 11 357 1 297 1 184 3 241 1 156 3 360 1 58 4 281 1 140 1 
95 1 298 1 17 1 351 1 11 1 180 1 142 1 
298 1 74 1 17 1 24 1 351 1 310 1 38 1 95 1 210 1 11 1 180 1 142 1 
262 1 323 1 176 1 135 1 190 1 289 1 273 1 258 1 60 1 139 1 254 1 
262 1 351 2 250 1 75 1 5 1 176 1 289 1 273 1 85 1 11 1 238 1 298 2 16 1 60 1 94 1 254 1 135 1 190 1 65 1 142 1 
199 1 298 1 16 1 351 1 85 1 238 1 142 1 
199 1 298 1 16 1 351 1 85 1 238 1 142 1 
199 1 100 1 300 1 
199 1 100 1 300 1 
262 1 79 1 176 1 289 1 273 1 254 1 
262 1 242 1 60 1 147 1 254 1 324 1 208 1 5 1 176 1 135 1 190 1 289 1 273 2 
143 1 262 1 263 1 250 1 351 2 222 4 75 1 285 1 331 1 77 2 78 1 332 2 5 1 27 1 52 1 227 1 176 1 119 2 10 4 289 1 273 1 355 2 85 1 11 1 237 2 238 1 124 8 276 1 34 1 298 2 184 2 16 1 339 1 156 2 58 4 340 1 94 1 363 2 254 1 135 1 325 2 190 1 65 1 260 1 140 3 283 1 142 1 
143 1 47 1 285 1 331 1 252 1 100 3 286 1 101 2 334 2 289 1 337 5 298 1 155 1 59 1 300 3 60 1 207 1 254 1 66 4 307 1 215 2 168 1 170 1 351 1 174 2 116 2 224 1 228 2 176 1 117 1 272 2 119 2 85 1 275 1 237 2 238 1 181 2 239 1 276 1 318 1 36 1 130 1 94 1 190 2 330 1 367 1 142 1 
262 1 254 1 208 1 5 1 79 1 176 1 271 1 366 1 135 1 190 1 289 1 307 1 273 1 
262 2 60 1 147 1 254 2 324 1 5 1 27 1 323 1 226 1 176 2 135 2 190 2 289 2 273 3 259 1 139 1 
262 1 267 1 147 1 254 1 324 1 5 1 226 1 176 1 135 1 190 1 289 1 273 2 259 1 
262 1 60 1 61 1 254 1 176 1 150 1 289 1 230 1 273 1 205 1 
262 1 89 1 254 2 27 1 175 1 176 2 135 1 190 1 289 2 273 1 44 1 
262 3 60 1 147 1 254 3 324 1 5 1 323 1 27 1 302 1 175 1 226 1 176 3 135 3 190 4 289 2 247 1 273 4 259 1 139 1 
262 3 358 1 60 1 147 1 254 3 324 1 5 1 323 1 27 1 175 1 226 1 176 3 135 3 190 4 289 2 247 1 273 4 259 1 139 1 
262 1 351 2 250 1 5 1 176 1 289 1 273 1 85 1 11 1 238 1 338 1 298 2 16 1 60 1 94 1 254 1 135 1 190 1 65 1 142 1 
199 1 
6 1 40 1 308 1 11 1 192 1 
47 1 308 1 98 1 351 1 174 1 223 1 224 1 100 2 6 1 177 1 334 1 85 1 152 1 238 1 239 1 298 1 105 1 155 1 130 1 300 2 59 1 94 2 108 1 40 1 345 1 192 1 168 1 142 1 
127 1 298 1 157 1 351 1 6 1 40 1 233 1 192 1 142 1 
6 1 98 1 152 1 
92 1 245 1 231 1 258 1 
92 1 245 1 2 1 231 1 232 1 158 1 269 1 
352 1 186 1 158 1 
92 1 2 1 158 3 76 1 99 1 269 1 268 2 160 1 161 1 245 1 231 1 232 3 
92 1 245 1 2 1 231 1 232 2 103 1 158 2 353 1 269 1 
125 1 245 1 83 1 2 1 230 1 232 1 158 1 51 1 205 1 269 1 99 1 
245 1 2 1 231 1 232 1 158 1 269 1 99 1 
92 1 2 1 231 2 232 1 158 1 269 1 99 1 
2 2 359 1 158 2 187 1 99 1 269 2 245 1 231 1 232 2 274 1 
92 1 245 2 83 1 2 1 231 1 232 3 158 3 353 2 133 1 295 1 341 1 269 1 99 1 
92 1 2 1 158 2 51 1 61 1 353 1 62 1 99 1 269 1 279 1 245 1 231 1 230 1 232 2 205 2 
92 1 245 2 83 1 2 2 35 1 231 1 232 4 103 1 158 4 353 2 341 1 269 2 99 1 
92 1 245 1 2 1 231 1 232 1 158 1 269 1 99 1 
92 2 2 1 158 4 353 2 76 1 268 1 269 1 341 1 160 1 83 1 245 3 231 2 232 4 166 1 
33 1 92 1 2 1 220 1 158 2 353 1 99 1 269 1 245 1 231 1 232 2 290 1 
92 1 2 1 158 3 76 1 99 1 269 1 268 2 160 2 245 1 231 1 232 3 31 1 
326 1 245 2 41 2 277 1 
183 1 2 1 232 1 158 1 269 1 99 1 
92 1 245 1 2 1 231 1 232 2 158 2 353 1 133 1 269 1 99 1 
350 1 
92 1 245 1 2 1 231 1 232 1 158 1 269 1 99 1 
92 1 245 1 2 1 231 1 232 3 158 3 353 1 133 1 268 1 269 1 99 1 
245 1 83 1 166 1 341 1 
245 1 231 1 

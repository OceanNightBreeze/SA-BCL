#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 323 (213,227) (213,227) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 323 (213,227) (213,227) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 323 (213,227) (213,227) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 323 (213,227) (213,227) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 63 (48,159,236,352) 112 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 323 (247,301) (247,301) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (119,194,297,312) 190 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (119,194,297,312) 190 265 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (119,194,297,312) 190 265 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 23 302 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 23 77 9 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 23 
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 23 77 66 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 23 315 107 303 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 23 77 334 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 23 302 94 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 121 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 144 58 206 319 67 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.ArrayIndexOutOfBoundsException 117 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (32,125,138) (32,125,138) (32,125,138) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (32,125,138) (32,125,138) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (32,125,138) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (42,165) (42,165) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (119,194,297,312) (119,194,297,312) (32,125,138) (32,125,138) (32,125,138) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 23 14 268 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 23 30 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 23 77 66 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 23 30 359 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 23 77 66 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 23 77 211 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 23 77 211 47 145 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 23 77 211 47 145 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 23 77 211 47 355 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 23 30 359 50 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 23 30 359 50 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 23 77 211 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 29 17 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 29 17 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 29 17 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 29 17 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 29 17 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 23 77 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 23 (97,179) 260 192 (189,239) 337 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 23 77 201 274 287 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V ERROR java.lang.NullPointerException 23 77 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 23 14 268 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 144 58 206 319 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 23 (54,277) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 23 (97,179) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 23 (97,179) 260 192 (189,239) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 63 (48,159,236,352) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 63 308 81 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 63 308 270 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 63 308 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | ASSIGN | 5178 | = null
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | STATEMENT | 3734 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal; | RETURN | 998 | return null
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7629 | return null
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> 0
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> -1
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
156 1 213 1 194 1 323 1 26 1 119 1 312 1 227 1 212 1 
156 1 213 1 194 1 323 1 26 1 119 1 312 1 227 1 212 1 
156 1 213 1 194 1 323 1 26 1 119 1 312 1 227 1 212 1 
156 1 213 1 194 1 323 1 26 1 119 1 312 1 227 1 212 1 
194 1 26 1 91 1 119 1 297 1 112 1 63 1 325 1 312 2 78 1 236 1 212 2 
156 1 194 1 323 1 301 1 26 1 247 1 119 1 312 1 187 1 199 1 212 1 
156 1 190 1 194 2 26 1 119 2 312 2 212 1 
156 1 190 1 194 2 26 1 48 1 119 2 297 1 265 1 312 3 212 2 
156 1 190 1 194 2 26 1 48 1 119 2 297 1 265 1 312 3 212 2 
162 1 134 1 175 1 
129 2 241 1 134 1 
205 1 324 2 293 2 103 2 225 1 339 2 174 2 80 2 
289 1 25 1 309 2 215 1 217 1 218 2 178 1 179 1 180 1 100 1 311 1 2 1 324 3 293 2 345 1 103 2 294 1 128 1 106 1 80 2 296 1 53 1 316 1 278 1 163 2 333 1 225 1 111 2 205 1 37 1 140 2 339 3 19 1 170 1 20 1 21 1 174 2 
85 1 335 1 324 1 293 1 103 1 225 1 339 1 174 1 80 1 
230 1 168 1 75 1 324 1 339 1 5 1 261 1 330 1 162 1 132 1 134 1 198 1 266 1 174 1 
168 1 75 1 293 1 324 1 103 1 339 1 5 2 80 1 261 1 330 1 162 1 132 2 134 1 266 1 174 1 
357 1 302 1 132 1 23 1 5 1 
9 1 357 1 132 1 77 1 23 1 5 1 
132 1 23 1 5 1 
85 1 335 1 293 1 324 1 103 1 339 1 5 1 80 1 357 1 132 1 282 1 225 1 174 1 
134 1 
66 1 357 1 132 1 77 1 23 1 5 1 
107 1 13 1 342 1 357 2 132 3 346 1 303 1 23 1 315 1 304 1 5 3 
205 1 175 1 
127 1 205 2 324 2 293 1 103 1 339 2 80 1 122 1 174 2 
248 1 137 1 139 1 
309 1 25 1 179 1 100 1 111 1 205 1 101 1 2 1 324 1 345 1 339 1 106 1 170 1 278 1 163 1 333 1 
25 1 309 1 179 1 100 1 111 1 2 1 36 1 293 1 324 2 139 1 345 1 339 2 106 1 80 1 170 1 88 1 278 1 163 1 333 1 174 1 
205 1 36 1 324 3 293 3 103 1 339 3 174 3 80 3 
85 1 324 1 293 1 339 1 174 1 80 1 
127 1 122 1 75 1 324 1 293 1 103 1 339 1 174 1 80 1 
289 1 25 1 309 1 218 2 179 1 310 1 180 1 100 1 2 1 75 1 324 4 293 3 345 1 103 2 294 1 128 1 106 1 80 3 5 1 296 1 53 1 278 1 330 1 132 1 163 1 333 1 225 1 136 1 111 1 205 1 168 1 36 1 37 1 140 1 339 4 19 1 170 1 88 1 20 1 261 1 21 1 122 1 266 1 174 3 
142 1 205 1 324 2 293 1 36 1 198 1 339 2 174 2 80 1 
136 1 168 1 243 1 75 1 36 2 293 3 324 3 103 1 339 3 5 1 80 3 88 1 261 1 330 1 122 1 132 1 134 1 266 1 174 3 
137 1 36 1 293 2 324 2 139 1 103 1 339 2 80 2 122 1 174 2 
309 1 25 1 179 1 100 1 111 1 205 1 2 1 324 1 345 1 339 1 106 1 170 1 278 1 163 1 333 1 
309 1 25 1 200 1 100 1 111 1 205 1 2 1 324 1 345 1 339 1 106 1 170 1 277 1 278 1 163 1 
257 1 218 2 240 1 73 1 137 2 271 1 233 1 180 1 27 1 311 2 139 2 37 2 140 4 154 1 294 1 53 1 296 1 20 1 196 1 21 1 144 1 248 2 31 1 96 1 
261 1 75 1 324 1 293 1 339 1 338 1 174 1 80 1 
167 1 205 1 36 2 293 4 324 5 184 1 103 1 339 5 80 4 88 1 142 1 122 1 198 1 174 5 
85 1 324 1 293 1 339 1 174 1 80 1 
291 1 226 1 
291 1 226 1 
44 1 38 1 
44 1 38 1 
44 1 38 1 
279 1 291 1 226 1 
356 1 291 1 226 1 
0 1 291 2 44 1 38 1 226 2 276 1 
279 1 291 1 226 1 
279 1 291 1 226 1 
291 1 226 1 46 1 
291 1 226 1 46 1 
291 1 226 1 46 1 
214 2 124 1 291 2 324 1 293 1 103 1 5 2 80 1 222 1 221 1 251 1 132 2 282 1 226 2 225 1 85 1 335 1 339 1 18 1 141 2 341 1 238 2 92 1 288 2 174 1 95 2 177 1 
214 1 150 1 291 1 74 1 293 2 324 2 4 1 80 2 5 1 221 1 132 1 109 1 332 1 226 1 205 1 339 2 141 1 356 1 262 1 238 1 118 1 288 1 174 2 95 1 
157 1 187 1 295 1 
157 1 187 1 199 1 
90 1 290 1 187 3 295 2 51 1 199 1 
90 1 290 1 3 1 187 2 295 1 199 1 
90 2 290 1 187 2 295 1 199 1 
357 1 132 1 77 1 334 1 23 1 5 1 
40 1 357 2 302 1 94 1 132 2 76 1 23 1 5 2 
240 1 241 2 346 1 5 3 129 4 196 1 348 3 58 1 10 2 162 1 132 3 109 1 134 3 59 2 110 1 188 2 61 1 13 1 258 1 208 1 304 1 342 1 144 1 357 2 68 1 96 1 
61 1 13 1 346 1 5 1 304 1 342 1 68 1 121 1 132 1 
99 1 100 1 175 1 
100 1 93 1 
116 1 
25 1 100 1 
25 1 99 2 100 3 286 1 65 1 106 1 
25 1 100 1 106 1 
100 1 331 1 
240 1 73 3 203 1 271 2 311 4 151 1 191 1 207 1 37 3 140 7 6 1 8 1 317 1 57 2 249 1 298 1 96 1 
240 1 73 3 203 1 271 2 311 4 151 1 191 1 207 1 37 3 140 7 6 1 8 1 317 1 57 2 249 1 298 1 96 1 
240 1 73 3 203 1 271 2 311 4 151 1 191 1 207 1 37 3 140 7 6 1 8 1 317 1 55 1 57 2 249 1 298 1 96 1 
319 1 240 1 231 2 73 2 203 2 271 1 311 7 206 1 191 1 37 4 140 11 79 2 196 1 144 2 58 2 57 1 249 1 67 1 252 1 186 1 96 2 
82 1 117 1 21 1 218 2 57 1 249 1 203 1 180 1 311 1 140 1 296 1 53 1 
194 1 309 1 300 1 26 1 125 1 111 1 273 1 138 1 312 2 16 1 156 1 119 1 297 1 70 1 281 1 163 1 253 1 32 1 212 1 
194 1 309 1 300 1 125 1 111 1 62 1 273 1 138 1 312 3 320 1 156 1 89 1 119 1 297 2 70 1 281 1 163 1 253 1 212 2 
309 1 300 1 125 1 111 1 62 1 273 1 312 2 320 1 156 1 297 2 70 1 163 1 253 1 212 1 
25 1 194 1 309 1 300 2 165 1 100 1 111 1 2 1 35 1 28 1 273 2 312 1 345 1 305 1 7 1 156 2 89 1 42 1 278 1 119 1 253 2 163 1 212 1 
194 1 309 1 300 1 26 1 125 1 111 1 62 1 273 1 138 1 312 2 156 1 119 1 297 1 70 1 281 1 163 1 253 1 32 1 212 1 
195 1 
309 1 202 1 13 1 111 1 14 1 346 1 208 1 5 1 304 1 348 1 278 1 132 1 163 1 268 1 23 1 
49 1 230 1 168 1 75 1 324 1 347 1 339 1 5 2 130 2 261 1 161 1 330 1 30 1 132 2 266 1 198 1 299 1 11 1 23 1 174 1 
49 1 75 1 324 1 77 1 347 1 5 2 130 3 161 1 330 1 132 2 162 1 134 1 198 1 299 1 11 1 230 1 168 1 339 1 66 1 261 1 266 1 210 1 23 1 174 1 
49 1 230 1 168 1 75 1 324 1 347 1 339 1 5 2 130 2 261 1 161 1 330 1 30 1 132 2 359 1 198 1 266 1 299 1 11 1 23 1 174 1 
66 1 132 1 77 1 23 1 5 1 
49 1 241 1 242 1 75 1 324 1 183 1 77 1 244 1 346 1 347 1 5 2 129 1 348 1 130 2 161 1 330 1 132 2 135 1 318 1 198 1 59 1 299 1 11 1 230 1 13 1 202 1 168 1 339 1 304 1 261 1 266 1 23 1 211 1 174 1 
47 1 49 1 241 1 242 1 75 1 183 1 324 1 77 1 244 1 346 1 347 1 5 2 348 1 130 2 161 1 330 1 132 2 135 1 318 1 198 1 59 1 299 1 11 1 230 1 202 1 13 1 168 1 339 1 304 1 209 1 261 1 145 1 266 1 23 1 211 1 174 1 
47 1 49 1 241 1 242 1 75 1 183 1 324 1 77 1 244 1 346 1 347 1 5 2 348 1 130 2 161 1 330 1 132 2 135 1 318 1 198 1 59 1 299 1 11 1 230 1 202 1 13 1 168 1 339 1 304 1 209 1 261 1 145 1 266 1 23 1 211 1 174 1 
47 1 49 1 242 1 75 1 324 1 77 1 313 1 346 1 347 1 5 2 129 1 348 1 130 2 161 1 330 1 132 2 318 1 198 1 59 1 299 1 11 1 12 1 166 1 230 1 283 1 202 1 13 1 168 1 339 1 304 1 355 1 261 1 266 1 23 1 211 1 174 1 
49 1 230 1 168 1 75 1 324 1 50 1 347 1 339 1 5 2 130 2 261 1 161 1 330 1 30 1 132 2 359 1 198 1 266 1 299 1 11 1 23 1 174 1 
49 1 230 1 168 1 75 1 324 1 50 1 347 1 339 1 5 2 130 2 261 1 161 1 330 1 30 1 132 2 359 1 198 1 266 1 299 1 11 1 23 1 174 1 
49 1 242 1 75 1 324 1 77 1 313 1 346 1 347 1 5 2 129 1 348 1 130 2 161 1 330 1 132 2 318 1 198 1 59 1 299 1 11 1 12 1 230 1 166 1 13 1 202 1 168 1 339 1 304 1 261 1 266 1 23 1 211 1 174 1 
218 2 240 1 73 2 180 1 271 2 311 3 294 1 6 1 296 1 53 1 8 1 317 1 57 1 248 1 298 1 137 1 233 1 205 2 207 1 139 1 37 3 140 6 20 1 21 1 175 1 96 1 
289 1 215 1 269 1 218 4 240 1 73 2 271 1 180 2 311 8 326 1 294 2 79 3 296 2 53 2 196 1 248 11 58 2 197 1 252 1 186 1 231 3 354 1 137 4 205 1 191 1 37 6 139 11 140 14 20 1 237 1 21 2 144 2 96 2 
25 1 309 1 289 1 215 1 218 2 179 1 100 1 180 1 182 1 311 1 2 1 101 1 326 1 324 2 293 1 345 1 294 1 106 1 80 1 296 1 53 1 278 1 350 1 163 1 333 1 137 1 111 1 205 1 36 1 37 1 140 2 339 2 170 1 88 1 20 1 21 1 147 1 174 1 
289 1 240 3 292 2 100 2 2 2 293 1 324 3 326 1 294 3 106 2 6 1 53 3 296 3 196 2 8 1 57 1 248 7 58 2 163 3 254 2 298 1 333 2 111 3 205 2 62 1 207 1 339 3 170 2 20 3 21 3 264 1 174 1 309 3 25 2 216 1 215 1 218 6 179 2 73 8 271 4 180 3 311 10 275 1 345 2 128 2 80 1 349 2 317 1 278 1 137 7 36 1 191 4 37 10 139 7 140 20 88 1 144 2 239 2 96 3 
309 8 289 1 25 2 215 1 217 2 1 1 218 4 100 3 180 2 311 1 2 2 28 1 324 1 293 1 345 2 294 2 80 1 296 2 53 2 7 1 278 2 84 1 163 7 233 1 111 8 62 1 36 1 37 1 140 2 16 1 339 1 306 1 20 2 21 2 41 1 263 1 43 1 343 1 174 1 
218 2 240 1 73 1 271 1 180 1 311 1 293 1 326 1 324 1 103 1 294 1 80 1 296 1 53 1 196 1 248 1 58 1 137 1 139 1 37 2 140 3 339 1 20 1 21 1 144 1 122 1 267 1 174 1 96 1 
257 1 218 2 73 1 137 1 233 1 180 1 311 2 191 1 139 1 140 2 294 1 53 1 296 1 20 1 21 1 248 1 144 1 96 1 
218 2 240 1 73 1 137 1 271 1 233 1 180 1 139 1 37 2 140 2 154 1 294 1 53 1 296 1 20 1 196 1 21 1 248 1 
218 2 240 1 73 2 180 1 271 1 311 2 294 1 296 1 53 1 196 1 58 1 248 2 137 2 233 1 191 1 139 2 37 2 140 4 20 1 21 1 144 1 96 1 
257 1 218 2 73 1 137 1 180 1 311 2 191 1 139 1 140 2 294 1 53 1 296 1 20 1 21 1 248 1 144 1 43 1 96 1 
218 2 240 1 73 1 137 1 271 1 180 1 139 1 37 2 140 2 154 1 294 1 53 1 296 1 20 1 196 1 21 1 248 1 43 1 
218 2 240 1 73 2 180 1 271 1 311 2 294 1 296 1 53 1 196 1 58 1 248 2 137 2 191 1 139 2 37 2 140 4 20 1 21 1 144 1 43 1 96 1 
218 2 240 1 73 2 180 1 271 1 311 2 294 1 296 1 53 1 196 1 58 1 248 2 137 2 191 1 139 2 37 2 140 4 20 1 21 1 144 1 96 1 
25 1 309 1 289 1 215 1 218 2 179 1 100 1 180 1 311 1 2 1 324 1 345 1 128 1 294 1 106 1 53 1 296 1 278 1 163 1 333 1 111 1 205 1 37 1 140 2 339 1 170 1 20 1 21 1 
25 1 309 1 289 1 215 1 218 2 100 1 180 1 311 1 181 1 2 1 324 1 345 1 294 1 106 1 53 1 296 1 277 1 278 1 163 1 200 1 111 1 205 1 37 1 140 2 339 1 170 1 20 1 21 1 
218 2 240 1 73 2 180 1 271 1 311 2 326 1 294 1 296 1 53 1 196 1 58 1 248 2 137 2 191 1 139 2 37 2 140 4 20 1 21 1 144 1 96 1 
309 1 25 1 240 1 218 2 179 1 73 2 271 1 292 1 100 1 180 1 311 2 2 1 324 1 345 1 128 1 294 1 106 1 53 1 296 1 196 1 248 2 58 1 163 1 333 1 137 2 111 1 191 1 37 2 139 2 140 4 16 1 339 1 170 1 20 1 21 1 144 1 96 1 
240 1 218 2 73 1 180 1 311 2 293 1 326 1 324 1 103 1 294 1 80 1 296 1 53 1 196 1 160 1 58 1 248 1 137 1 191 1 37 1 139 1 140 3 339 1 20 1 21 1 144 1 122 1 174 1 96 1 
82 1 24 1 21 1 218 2 180 1 29 1 17 1 296 1 53 1 
82 1 24 1 21 1 218 2 180 1 29 1 17 1 296 1 53 1 
82 1 24 1 21 1 218 2 180 1 29 1 17 1 296 1 53 1 
82 1 24 1 21 1 218 2 180 1 29 1 17 1 296 1 53 1 
82 1 24 1 21 1 218 2 180 1 29 1 17 1 296 1 53 1 
141 1 214 1 148 1 238 1 291 1 69 1 226 1 276 1 328 1 95 1 
356 1 150 1 
141 1 214 1 246 1 238 1 291 1 284 1 224 1 226 1 95 1 
214 1 124 1 291 1 324 1 293 1 103 1 5 1 80 1 222 1 221 1 251 1 132 1 282 1 226 1 225 1 85 1 335 1 339 1 18 1 141 1 341 1 238 1 92 1 288 2 174 1 95 1 177 1 
214 1 124 1 291 1 324 1 293 1 103 1 5 1 80 1 222 1 221 1 251 1 132 1 282 1 226 1 225 1 85 1 335 1 339 1 18 1 141 1 341 1 238 1 92 1 288 2 174 1 95 1 177 1 
214 1 124 1 291 1 324 1 293 1 103 1 5 1 80 1 222 1 221 1 251 1 132 1 282 1 226 1 225 1 85 1 335 1 339 1 18 1 141 1 341 1 238 1 92 1 288 2 174 1 95 1 177 1 
0 1 279 1 22 1 
0 1 279 1 22 1 
33 1 46 1 
0 1 33 1 46 1 
262 1 4 1 
214 1 150 1 124 1 291 1 74 1 324 2 293 2 153 1 4 1 5 1 80 2 222 1 132 1 109 1 332 1 226 1 205 1 339 2 141 1 356 1 262 1 238 1 118 1 357 1 288 1 174 2 95 1 
279 1 22 1 
0 1 33 1 46 1 
25 1 309 2 289 1 215 1 217 2 1 1 149 1 218 2 100 1 180 1 311 1 2 1 326 1 324 2 345 1 294 1 105 1 53 1 296 1 163 2 60 1 111 2 113 1 37 1 140 2 339 2 20 1 21 1 41 1 45 1 174 2 
256 1 309 2 111 2 62 1 16 1 155 1 220 1 70 1 281 1 163 2 253 1 
256 1 309 1 111 1 62 1 70 1 281 1 163 1 253 1 72 1 
25 1 309 1 353 1 100 1 111 1 2 1 28 1 345 1 305 1 155 1 7 1 278 1 163 1 253 1 
256 1 220 1 309 1 70 1 111 1 281 1 62 1 253 1 163 1 155 1 
285 1 
348 1 340 1 162 1 134 1 59 1 175 1 351 1 
202 1 13 1 241 1 183 1 77 1 244 1 346 1 304 1 129 1 348 1 135 1 59 1 23 1 
97 1 309 1 25 1 100 3 2 1 346 1 345 2 52 1 106 1 348 1 278 1 163 1 189 1 13 1 202 1 111 1 337 1 286 1 208 1 304 1 260 1 192 1 93 2 23 1 
240 1 241 3 274 1 77 1 327 1 346 1 245 1 79 1 129 6 348 5 196 1 58 1 10 4 162 1 134 4 186 1 59 2 188 4 231 1 201 1 13 1 202 1 304 1 287 1 144 1 23 1 96 1 
240 1 324 1 293 1 327 2 346 1 103 1 5 1 80 1 348 2 158 1 317 1 185 1 132 1 282 1 298 1 59 2 225 1 85 1 13 1 202 1 335 1 207 1 339 1 304 1 209 1 174 1 96 2 
202 1 13 1 346 1 304 1 340 1 348 1 162 1 134 1 59 1 351 1 
240 2 241 5 327 2 129 10 196 2 348 5 58 2 144 2 185 1 10 5 254 1 134 5 59 5 188 5 96 2 
77 1 23 1 
309 1 202 1 13 1 111 1 14 1 346 1 208 1 304 1 348 1 278 1 358 1 163 1 268 1 23 1 
289 1 309 1 25 1 218 2 179 1 180 1 100 1 2 1 324 3 293 2 345 1 103 2 128 1 294 1 80 2 106 1 296 1 53 1 278 1 163 1 333 1 225 1 111 1 205 1 37 1 140 1 339 3 19 1 170 1 20 1 21 1 174 2 
98 1 241 2 202 1 13 1 346 1 208 1 304 1 129 4 348 1 57 1 10 2 162 2 134 4 59 2 188 2 
141 1 238 1 361 1 
141 1 262 1 238 1 123 1 328 1 
141 1 238 1 361 1 
141 1 238 1 361 1 
141 1 238 1 322 1 
141 1 238 1 322 1 
141 1 238 1 322 1 
141 1 238 1 
291 1 226 1 
240 1 218 2 73 2 180 1 271 2 311 4 79 1 296 1 53 1 6 1 82 1 8 1 317 1 57 1 298 1 186 1 231 1 207 1 37 4 140 8 287 1 21 1 96 1 
240 1 218 4 73 3 271 2 180 2 311 6 79 1 6 1 296 2 53 2 82 1 8 1 317 1 57 1 58 1 252 1 298 1 186 1 229 1 231 2 207 1 191 1 37 5 140 11 287 1 21 2 144 1 96 2 
218 6 240 3 73 4 180 3 271 3 311 9 274 1 245 1 79 1 6 1 296 3 53 3 82 1 196 2 8 1 317 1 57 1 58 2 280 1 298 1 186 1 229 1 231 1 207 1 191 1 37 10 140 19 287 1 21 3 144 2 172 1 146 1 96 3 
218 6 240 2 73 5 180 3 271 3 311 10 274 1 245 1 79 1 6 1 296 3 53 3 82 1 196 1 8 1 317 1 57 1 58 2 280 1 298 1 186 1 229 1 231 1 207 1 191 2 37 7 140 17 287 1 21 3 144 2 172 1 146 1 96 3 
240 1 218 2 73 2 180 1 271 2 311 4 79 1 296 1 53 1 6 1 82 1 8 1 317 1 57 1 298 1 186 1 231 1 207 1 37 4 140 8 287 1 21 1 96 1 
218 2 240 2 73 2 180 1 271 1 311 6 274 1 245 1 79 1 296 1 53 1 82 1 196 2 58 2 186 1 231 1 191 1 37 6 140 12 287 1 21 1 144 2 172 1 146 1 96 2 
218 8 240 2 73 5 180 4 271 3 311 10 274 1 245 1 79 1 6 1 296 4 53 4 82 1 196 1 8 1 317 1 57 1 58 2 280 2 298 1 186 1 229 1 231 1 207 1 191 2 37 8 140 18 287 1 21 4 144 2 172 1 146 1 96 3 
218 8 240 2 73 6 180 4 271 3 311 9 274 1 245 1 79 1 296 4 53 4 82 1 196 2 58 3 83 1 280 2 186 1 231 1 191 3 37 7 140 16 287 1 21 4 144 3 172 1 146 1 96 3 
240 1 73 6 271 3 311 3 207 3 191 3 37 4 140 7 6 2 8 1 317 1 298 3 96 1 
218 8 240 2 73 4 180 4 271 3 311 10 274 1 245 1 79 1 6 1 296 4 53 4 82 1 196 1 8 1 317 1 57 1 58 2 83 1 280 2 298 1 186 1 231 1 207 1 191 1 37 8 140 18 287 1 21 4 144 2 172 1 146 1 96 3 
240 1 218 4 73 3 271 2 180 2 311 4 191 1 207 1 37 4 140 8 53 2 296 2 6 1 8 1 317 1 21 2 57 1 280 1 298 1 96 1 
240 1 73 2 271 2 311 3 207 1 37 3 140 6 6 1 8 1 317 1 57 1 298 1 175 1 96 1 
240 1 218 2 73 2 271 1 180 1 311 2 191 1 37 2 140 4 53 1 296 1 196 1 21 1 58 1 144 1 229 1 96 1 
240 1 231 2 73 2 271 1 311 3 191 1 37 4 140 7 79 1 196 1 58 1 144 1 252 1 186 1 96 1 
269 1 240 3 218 4 73 9 271 5 180 2 311 11 152 1 79 2 6 1 53 2 296 2 196 2 8 1 317 1 57 1 58 2 197 1 280 2 252 1 298 2 231 2 207 2 191 4 37 12 140 23 21 2 144 2 96 3 
231 1 37 1 140 1 
311 1 140 1 79 1 
218 2 240 1 73 3 180 1 271 2 311 3 191 1 37 3 140 6 296 1 53 1 196 1 21 1 58 1 144 1 254 1 229 1 96 1 
218 2 240 2 73 2 180 1 271 1 311 6 274 1 245 1 79 1 296 1 53 1 82 1 196 2 58 2 186 1 231 1 191 1 37 6 140 12 287 1 21 1 144 2 172 1 146 1 96 2 
240 1 73 2 271 1 311 3 207 1 191 1 37 3 140 6 317 1 298 1 96 1 
218 2 73 2 271 1 180 1 311 1 191 1 207 1 37 2 152 1 140 3 6 1 53 1 296 1 8 1 21 1 280 1 298 1 
218 2 240 2 73 5 180 1 271 3 311 5 207 2 191 2 37 5 140 10 296 1 53 1 82 1 21 1 158 1 317 1 298 2 96 2 
218 2 73 1 180 1 311 2 191 1 140 2 53 1 296 1 82 1 21 1 144 1 96 1 
240 1 218 2 73 2 271 1 180 1 311 2 191 1 37 2 140 4 53 1 296 1 82 1 196 1 21 1 58 1 144 1 96 1 
218 6 73 2 180 3 271 1 311 1 207 1 191 1 37 2 152 1 140 3 53 3 296 3 82 1 21 3 83 1 280 1 298 1 
319 1 218 6 231 1 180 3 311 4 206 1 37 1 140 5 79 2 53 3 296 3 82 1 21 3 144 1 58 1 83 1 186 1 229 1 96 1 
142 1 329 1 205 1 324 1 198 1 339 1 174 1 
142 1 171 1 34 1 329 1 120 1 205 1 321 1 324 1 198 1 336 1 339 1 174 1 
7 1 25 1 309 1 278 1 100 1 111 1 2 1 28 1 163 1 345 1 175 1 
25 1 309 1 179 1 100 1 111 1 205 1 2 1 36 1 293 1 324 2 345 1 339 2 106 1 80 1 170 1 278 1 163 1 174 1 
309 1 25 2 179 1 100 3 2 1 75 2 324 1 293 1 345 1 80 1 106 2 131 1 330 1 331 1 163 1 111 1 259 1 205 1 36 1 64 1 339 1 170 1 261 1 174 1 
309 1 25 2 100 3 2 1 75 2 324 1 293 1 345 1 80 1 106 2 277 1 131 1 330 1 331 1 163 1 111 1 259 1 205 1 36 1 64 1 339 1 170 1 261 1 174 1 
309 1 54 1 100 1 131 1 93 1 111 1 132 1 163 1 23 1 5 1 
97 1 309 1 100 1 131 1 93 1 111 1 132 1 163 1 23 1 5 1 
309 1 111 1 2 1 163 1 345 1 306 1 
309 7 25 2 217 1 1 1 86 1 100 3 111 7 2 2 62 1 345 3 16 1 286 1 169 1 106 1 306 1 278 2 263 1 84 1 343 1 133 1 163 6 
25 1 309 1 240 1 218 4 179 1 73 2 271 2 100 1 180 2 292 1 311 3 2 1 326 1 324 2 293 1 345 1 294 2 128 1 106 1 80 1 6 1 296 2 53 2 8 1 317 1 248 1 57 1 163 1 298 1 333 1 60 1 137 1 111 1 205 2 207 1 36 1 139 1 37 3 140 6 339 2 16 1 170 1 20 2 21 2 239 1 174 1 96 1 
97 1 189 1 309 1 202 1 13 1 100 1 111 1 346 1 5 1 304 1 260 1 192 1 278 1 357 1 93 1 358 1 132 1 163 1 23 1 
309 2 25 1 99 1 100 2 111 2 2 1 345 2 16 1 286 1 52 1 106 1 306 1 163 2 
309 4 25 1 100 1 111 4 2 1 28 1 345 1 15 1 16 1 115 1 7 1 278 1 163 4 
309 2 25 1 216 1 86 1 100 1 111 2 234 1 2 1 345 2 169 1 106 1 131 1 163 2 360 1 
157 1 309 1 278 1 219 1 111 1 2 1 163 1 345 1 187 1 199 1 
309 2 25 1 1 1 100 1 111 2 2 1 62 1 345 1 16 1 163 2 45 1 
309 5 25 2 1 1 100 3 111 5 2 2 28 1 345 2 16 1 115 1 7 1 278 1 263 1 131 1 84 1 163 4 
309 5 25 2 1 1 100 3 111 5 2 2 28 1 345 2 314 1 16 1 115 1 7 1 278 1 131 1 84 1 163 4 
25 1 309 1 100 1 111 1 205 1 2 1 36 1 293 1 324 2 345 1 339 2 106 1 80 1 170 1 277 1 278 1 163 1 174 1 
309 1 25 1 86 1 100 1 111 1 2 1 345 2 286 1 169 1 106 1 131 1 133 1 163 1 
205 1 71 1 114 1 164 1 87 1 
136 1 205 1 168 1 75 1 114 2 5 2 87 2 261 1 307 1 357 1 330 1 223 1 71 1 162 1 344 1 132 2 134 1 266 1 164 2 
149 1 113 1 324 1 114 1 105 1 339 1 87 1 71 1 174 1 
307 1 223 1 71 1 
91 1 108 1 143 1 175 1 
194 1 91 1 108 1 143 1 119 1 312 1 212 1 
156 1 273 1 212 1 
194 1 26 1 232 1 312 3 39 1 91 1 108 1 143 1 119 1 250 2 176 1 212 3 
194 1 91 1 108 1 143 1 119 1 297 1 325 1 312 2 212 2 
194 1 26 1 91 1 119 1 63 1 312 1 78 1 236 1 212 1 
194 1 26 1 91 1 143 1 119 1 312 1 212 1 
194 1 26 1 108 1 143 2 119 1 312 1 212 1 
194 2 26 1 91 1 143 1 119 2 204 1 173 1 312 2 228 1 212 2 
81 1 308 1 194 1 26 1 91 1 119 1 297 1 193 1 63 1 312 2 78 1 212 2 
194 1 26 1 312 2 51 1 295 1 157 1 91 1 108 1 143 1 56 1 119 1 297 1 187 2 199 1 212 2 
308 1 194 1 26 1 91 1 270 1 119 1 297 1 63 1 325 1 312 2 78 1 212 2 
194 1 26 1 91 1 108 1 143 1 119 1 312 1 212 1 
308 1 194 1 91 1 119 1 297 1 63 1 312 2 78 2 212 2 
194 1 26 1 352 1 48 1 312 2 91 1 159 1 108 1 143 1 119 1 297 1 212 2 
194 1 26 1 235 1 312 3 39 2 91 1 108 1 143 1 119 1 250 2 176 1 212 3 
91 2 272 2 102 1 255 1 
194 1 26 1 119 1 312 1 104 1 212 1 
194 1 26 1 91 1 108 1 143 1 119 1 297 1 193 1 312 2 212 2 
126 1 
194 1 26 1 91 1 108 1 143 1 119 1 312 1 212 1 
194 1 26 1 312 3 108 1 91 1 143 1 119 1 297 1 193 1 250 1 212 3 
308 1 91 1 297 1 312 1 63 1 212 1 
91 1 143 1 

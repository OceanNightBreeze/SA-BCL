#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 91 40 (24,111) (24,111) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 91 40 (24,111) (24,111) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 91 40 144 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 91 40 144 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 343 93 14 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 343 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 343 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 343 93 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 343 93 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException (123,311) 219 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 245 182 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException (123,311) 219 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 170 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (123,311) 219 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (123,311) (123,311) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (123,311) (123,311) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11572 | if (x) -> if (!x)
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 3976 | stmt -> ;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2448 | if (x) -> if (!x)
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1937 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 7053 | = null
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3669 | - -> >>
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3154 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 1 215 1 38 2 335 1 354 1 108 1 336 1 140 1 272 3 292 1 209 2 291 2 278 3 
22 1 155 1 225 1 334 1 335 4 23 1 354 1 91 2 161 2 24 1 336 2 140 3 73 2 209 2 291 3 342 1 38 2 108 2 242 1 40 1 129 1 111 1 272 7 61 1 278 7 
22 1 155 1 225 1 334 1 335 4 23 1 354 1 91 2 161 2 24 1 336 2 140 3 73 2 209 2 291 3 342 1 38 2 108 2 242 1 40 1 129 1 111 1 272 7 61 1 278 7 
22 1 155 1 225 1 353 1 334 1 335 6 23 2 354 1 91 2 161 2 24 1 336 2 140 4 73 2 292 1 209 2 291 5 171 1 342 1 215 1 38 2 108 3 242 1 40 1 129 1 111 1 272 9 61 1 278 9 
22 1 155 1 225 1 334 1 335 4 23 1 354 1 91 2 161 2 24 1 336 2 140 3 73 2 292 1 209 2 291 4 342 1 215 1 38 2 108 2 242 1 40 1 129 1 111 1 272 7 61 1 278 7 
171 1 353 1 215 1 38 1 23 2 335 3 108 1 91 1 354 1 40 1 161 1 140 2 73 1 272 4 292 1 209 1 61 1 291 3 278 4 
22 1 215 1 205 1 38 1 354 1 91 1 39 1 242 1 336 1 73 1 272 2 291 1 292 1 209 1 32 1 278 2 
225 1 342 1 172 1 38 2 23 1 335 5 91 1 354 1 108 2 161 1 40 1 336 1 140 3 73 1 129 1 272 7 144 1 61 1 291 3 209 2 278 7 
225 1 342 1 172 1 38 2 23 1 335 5 91 1 354 1 108 2 161 1 40 1 336 1 140 3 73 1 129 1 272 7 144 1 61 1 291 3 209 2 278 7 
363 1 239 1 269 1 104 1 125 1 159 1 47 1 288 1 82 1 234 1 276 1 99 1 8 1 298 1 
293 1 
193 1 269 1 328 1 234 2 293 1 374 1 315 1 8 2 
65 1 202 1 269 2 105 1 56 2 322 1 337 1 142 2 346 1 60 1 112 1 328 1 234 5 74 2 275 1 293 1 374 1 8 5 315 2 
30 1 293 1 374 1 
179 1 
191 1 82 2 125 2 288 1 159 2 276 2 99 2 298 2 
352 1 66 1 89 2 159 2 70 1 283 1 259 1 285 1 164 1 207 1 27 1 232 1 49 2 5 1 288 1 290 1 53 2 190 1 75 2 99 3 237 2 298 2 191 1 148 1 267 1 54 1 34 1 149 1 301 1 125 2 217 1 41 1 82 2 132 1 330 1 276 3 277 1 
363 1 239 1 82 1 125 1 288 1 159 1 276 1 99 1 47 1 298 1 
363 1 88 1 35 1 103 1 160 1 312 1 82 1 234 1 293 1 52 1 276 1 374 1 99 1 8 1 
363 1 88 1 35 1 103 1 125 1 159 1 160 1 82 1 234 2 293 1 276 1 374 1 99 1 8 2 298 1 
269 1 234 1 63 1 315 1 8 1 
87 1 269 1 328 1 234 2 293 1 374 1 315 1 8 2 
234 1 315 1 8 1 
191 2 125 1 159 1 324 1 82 2 276 2 236 1 99 2 298 1 
221 1 84 1 296 1 
191 1 148 1 352 1 70 1 259 1 41 1 285 1 164 1 29 1 330 1 276 1 53 1 75 1 99 1 237 1 277 1 
148 1 352 1 125 1 270 1 159 1 70 1 259 1 285 1 41 1 48 1 164 1 82 1 84 1 330 1 276 2 53 1 75 1 277 1 99 2 237 1 
191 1 30 1 
191 1 318 1 125 4 159 4 270 1 48 2 349 1 82 5 131 1 52 1 276 5 236 1 99 5 298 1 
363 1 239 1 82 2 125 2 159 2 295 1 276 2 99 2 
191 1 82 3 125 3 159 3 276 3 99 3 298 1 48 1 
363 1 239 1 82 1 125 1 159 1 276 1 99 1 
363 1 324 1 82 1 125 1 159 1 276 1 236 1 99 1 298 1 
352 1 66 1 88 1 89 2 254 1 159 3 70 1 160 1 283 1 259 1 285 1 48 1 164 1 27 1 232 1 49 1 5 1 288 1 234 1 236 1 53 1 190 1 75 1 99 4 237 1 298 2 8 1 191 1 148 1 54 1 363 1 55 1 35 1 149 1 103 1 301 1 125 3 270 1 217 1 41 1 82 3 330 1 276 4 277 1 
191 1 318 1 82 2 125 1 159 1 52 1 276 2 99 2 48 1 
363 1 55 1 35 1 88 1 103 1 125 3 270 1 159 3 160 1 48 2 82 3 234 1 293 1 236 1 276 3 97 1 99 3 298 1 8 1 
125 2 159 2 48 1 82 2 84 1 236 1 276 2 296 1 99 2 298 1 
191 1 148 1 352 1 70 1 41 1 285 1 259 1 164 1 330 1 276 1 53 1 75 1 99 1 237 1 277 1 
191 1 148 1 299 1 352 1 41 1 285 1 259 1 330 1 276 1 53 1 188 1 75 1 99 1 237 1 277 1 
136 1 66 2 89 2 283 1 92 1 183 1 207 2 27 1 232 1 5 1 49 4 361 1 190 1 264 1 296 2 301 1 194 1 151 1 18 1 175 1 153 1 221 2 84 2 306 1 
363 1 103 1 82 1 125 1 159 1 276 1 295 1 99 1 
274 1 13 1 16 1 
192 1 13 2 72 1 16 2 279 1 76 1 
13 1 16 1 
13 1 16 1 
192 1 76 1 
192 1 76 1 
192 1 76 1 
13 1 162 1 16 1 
13 1 162 1 16 1 
13 1 162 1 16 1 
0 1 13 1 16 1 
0 1 13 1 16 1 
0 1 13 1 16 1 
191 1 177 1 226 1 125 2 159 2 13 1 15 1 260 1 128 1 16 1 358 1 347 1 143 1 4 1 82 2 274 1 234 1 294 1 276 2 339 1 99 2 169 1 8 1 316 1 
224 1 177 2 102 1 13 2 260 2 16 2 26 2 347 2 143 3 305 1 4 1 234 2 293 1 86 1 339 2 265 1 297 1 8 2 279 1 
147 1 307 2 32 1 161 1 73 2 
91 1 161 1 73 1 
91 1 32 1 73 1 
147 1 307 1 321 1 32 1 161 2 73 3 
147 1 307 1 216 1 32 1 161 1 73 2 
65 3 281 1 136 1 179 3 226 1 139 1 92 1 358 1 142 1 184 1 50 2 51 2 74 1 234 5 361 1 293 2 314 1 98 1 169 1 315 1 8 5 269 4 56 1 110 1 80 1 372 1 18 1 130 2 112 1 328 1 275 2 374 1 
65 8 281 1 136 3 179 9 226 4 67 1 92 3 142 2 184 2 50 6 234 9 74 2 361 3 293 5 314 2 98 3 315 6 8 9 317 5 101 1 269 7 368 1 150 1 56 2 110 3 199 1 81 1 18 3 130 6 60 1 328 1 112 1 275 6 63 5 374 1 
65 3 136 1 226 1 179 3 159 1 47 1 92 1 142 1 184 1 288 1 51 1 50 2 74 1 234 3 361 1 293 2 314 1 99 1 98 1 298 1 8 3 363 1 239 1 269 2 125 1 104 1 56 1 110 1 80 1 372 1 18 1 130 2 82 1 60 1 275 2 276 1 374 1 
136 2 226 2 179 6 47 1 92 2 142 1 184 1 51 2 50 4 288 1 234 4 293 3 99 1 98 2 8 4 298 1 239 1 104 1 150 1 56 1 110 2 199 1 18 2 60 1 65 5 159 1 74 1 361 2 314 1 363 1 269 3 368 1 125 1 80 1 372 1 130 4 82 1 275 4 276 1 374 1 
79 1 
10 1 30 1 259 1 
257 1 259 1 
148 1 259 1 277 1 
220 1 259 1 
148 1 259 1 
148 1 10 2 259 3 79 1 145 1 277 1 375 1 
66 3 213 1 11 1 151 2 228 1 181 1 258 1 183 3 152 1 207 4 371 1 304 1 18 1 313 1 49 7 360 1 361 1 210 2 
203 1 280 4 136 3 66 15 89 2 137 1 258 1 181 5 92 3 183 10 207 16 27 1 232 1 313 2 5 1 49 31 233 3 360 2 361 4 187 1 189 1 210 3 33 1 213 1 301 1 11 1 151 5 110 3 152 2 58 1 371 1 304 2 18 4 113 1 
66 4 89 2 68 1 181 1 258 1 355 1 183 3 207 5 27 1 287 1 232 1 313 1 5 1 49 9 360 1 361 2 210 1 301 1 151 2 11 1 152 1 371 1 304 1 18 2 
66 3 213 1 11 1 151 2 181 1 258 1 183 3 152 1 207 4 371 1 304 1 18 1 313 1 49 7 360 1 361 1 210 2 
66 3 213 1 11 1 151 2 181 1 258 1 183 3 152 1 207 4 371 1 304 1 18 1 313 1 49 7 360 1 361 1 210 2 
331 1 352 1 119 1 120 1 121 1 336 2 259 1 209 1 53 1 75 1 237 1 148 1 195 2 38 1 303 1 41 1 272 1 247 1 248 2 330 1 223 2 64 1 278 1 
352 1 91 1 354 1 161 1 336 1 286 1 73 2 261 1 209 1 53 1 32 1 75 1 237 1 195 1 106 1 38 1 344 1 321 1 243 1 41 1 272 1 348 1 248 1 223 1 278 1 116 1 
352 1 335 1 91 1 354 1 161 1 336 1 73 2 261 1 291 1 292 1 209 1 53 1 32 1 75 1 237 1 215 1 195 1 106 1 38 1 344 1 321 1 243 1 41 1 323 1 272 2 348 1 248 1 223 1 278 2 116 1 
134 1 352 1 335 2 91 1 161 1 121 1 336 1 286 1 73 2 291 1 292 1 209 1 53 1 32 1 75 1 237 1 215 1 195 1 106 1 38 1 344 1 321 1 243 1 41 1 272 3 348 1 248 1 223 1 278 3 116 1 
134 1 352 1 335 2 91 1 161 1 336 1 286 1 73 2 291 1 292 1 53 1 32 1 75 1 237 1 215 1 195 1 106 1 321 1 243 1 41 1 272 2 348 1 248 1 223 1 278 2 
308 1 
179 1 90 1 3 1 284 1 142 1 184 1 234 2 185 1 293 1 53 2 237 2 98 1 8 2 148 1 341 1 56 1 246 1 112 1 65 2 352 1 119 1 120 1 259 1 357 1 310 1 262 1 359 1 74 1 75 2 315 2 168 1 319 1 367 1 41 1 78 1 325 1 328 1 275 2 330 2 
341 1 193 1 367 1 325 1 359 1 328 1 234 2 185 1 114 1 8 2 315 2 
332 1 341 1 359 1 325 1 367 1 185 1 234 1 249 1 8 1 
332 1 341 1 193 1 367 1 241 1 325 1 359 1 328 1 234 2 185 1 249 1 114 1 8 2 315 2 
341 1 193 1 367 1 241 2 343 1 14 1 93 1 325 1 359 1 234 2 328 1 185 1 114 2 8 2 315 3 
65 1 179 1 90 1 3 1 357 1 262 1 142 1 310 1 359 1 185 1 74 1 234 1 293 1 98 1 8 1 168 1 341 1 367 1 56 1 325 1 112 1 275 1 
341 1 359 1 325 1 367 1 343 1 185 1 234 1 8 1 
341 1 359 1 325 1 367 1 343 1 185 1 234 1 8 1 
65 1 332 2 204 2 179 2 90 2 3 2 206 2 309 1 357 1 142 1 359 1 74 1 185 1 234 3 293 1 7 1 315 4 8 3 341 1 241 2 367 1 174 1 56 1 273 1 325 1 328 2 112 1 275 1 249 2 114 2 374 1 
332 1 341 1 367 1 241 1 343 1 93 1 325 1 359 1 234 1 185 1 249 1 114 1 8 1 315 1 
332 1 341 1 367 1 241 1 343 1 93 1 325 1 359 1 234 1 185 1 249 1 114 1 8 1 315 1 
65 1 332 2 204 2 179 2 90 2 3 2 309 1 206 2 357 1 262 1 142 1 359 1 185 1 74 1 234 3 293 1 315 4 8 3 341 1 241 2 367 1 56 1 325 1 328 2 112 1 275 1 249 2 114 2 374 1 
253 1 352 3 66 1 89 4 119 1 159 1 256 1 120 1 283 2 259 4 286 1 230 1 48 1 207 1 311 1 27 2 232 2 5 2 49 2 290 2 53 6 264 1 75 7 190 2 99 1 237 7 148 3 366 1 34 1 125 1 301 2 173 1 217 1 219 1 41 3 323 1 42 1 82 1 327 1 330 2 276 1 277 1 
136 1 66 2 89 2 159 1 283 1 92 1 183 1 163 1 207 1 27 1 232 1 5 1 49 3 361 1 236 1 167 1 190 1 296 1 99 1 298 1 125 1 301 1 151 1 110 1 18 1 82 1 221 1 84 1 276 1 
66 3 89 2 258 1 283 1 183 2 207 3 27 1 232 1 313 1 5 1 49 6 30 1 361 1 190 1 264 1 210 1 296 1 191 2 301 1 151 2 11 1 152 1 371 1 18 1 221 1 84 1 
280 3 203 1 136 2 66 6 89 4 181 1 283 1 92 1 183 2 207 8 27 2 28 1 232 2 5 2 49 14 233 3 361 2 187 1 167 1 190 2 296 4 191 1 9 1 34 1 301 2 151 1 217 1 110 2 59 1 18 1 221 11 84 11 251 1 
352 1 66 1 89 2 159 1 70 1 283 1 259 1 285 1 48 1 164 1 207 1 27 1 232 1 29 1 5 1 49 2 53 1 167 1 31 1 75 1 190 1 237 1 296 1 99 2 191 1 148 1 240 1 34 1 37 1 301 1 125 1 270 1 217 1 41 1 82 1 330 1 276 2 277 1 
136 2 89 6 283 3 181 4 285 2 286 1 92 2 48 1 183 8 232 3 5 3 49 20 53 3 190 3 237 3 99 3 296 7 191 2 148 2 54 2 301 3 11 1 151 4 12 2 110 2 152 1 18 3 62 1 201 2 352 2 66 10 159 1 70 2 69 2 258 1 259 2 164 2 207 10 27 3 313 1 361 3 167 1 210 1 75 3 170 2 34 1 125 1 270 1 217 1 218 1 41 2 371 1 82 1 43 1 221 7 84 7 330 1 276 3 277 2 
136 1 89 2 301 1 181 1 283 1 183 1 207 2 27 1 232 1 153 1 49 2 5 1 221 1 84 1 361 1 264 1 190 1 296 1 
66 2 89 2 301 1 151 1 194 1 283 1 92 1 183 1 27 1 232 1 18 1 49 2 5 1 221 1 84 1 264 1 190 1 296 1 
136 1 66 2 89 2 283 1 181 1 92 1 183 2 207 2 27 1 232 1 5 1 49 4 361 1 190 1 264 1 296 2 301 1 151 1 110 1 18 1 221 2 84 2 
136 1 89 2 301 1 181 1 283 1 230 1 183 1 207 2 27 1 232 1 153 1 49 2 5 1 221 1 84 1 361 1 190 1 296 1 
66 2 89 2 301 1 151 1 194 1 283 1 230 1 92 1 183 1 27 1 232 1 18 1 49 2 5 1 221 1 84 1 190 1 296 1 
136 1 66 2 89 2 283 1 181 1 230 1 92 1 183 2 207 2 27 1 232 1 5 1 49 4 361 1 190 1 296 2 301 1 151 1 110 1 18 1 221 2 84 2 
136 1 66 2 89 2 301 1 151 1 181 1 283 1 92 1 110 1 183 2 207 2 27 1 18 1 232 1 5 1 49 4 221 2 84 2 361 1 190 1 296 2 
352 1 66 1 89 2 70 1 283 1 285 1 259 1 164 1 207 1 27 1 232 1 49 2 5 1 53 1 75 1 190 1 237 1 99 1 191 1 148 1 54 1 34 1 301 1 217 1 41 1 330 1 276 1 277 1 
352 1 66 1 89 2 283 1 285 1 259 1 207 1 263 1 27 1 232 1 49 2 5 1 188 1 53 1 75 1 190 1 237 1 99 1 191 1 148 1 299 1 34 1 301 1 217 1 41 1 330 1 276 1 277 1 
136 1 66 2 89 2 283 1 181 1 92 1 183 2 207 2 27 1 232 1 5 1 49 4 361 1 167 1 190 1 296 2 301 1 151 1 110 1 18 1 221 2 84 2 
136 1 352 1 66 2 89 2 70 1 181 1 283 1 285 1 259 1 92 1 183 2 164 1 207 2 27 1 232 1 49 4 5 1 361 1 53 1 75 1 190 1 296 2 237 1 99 1 148 1 54 1 301 1 151 1 12 1 41 1 110 1 323 1 18 1 221 2 84 2 276 1 277 1 
136 1 66 1 89 2 159 1 181 1 283 1 92 1 183 1 207 2 27 1 232 1 5 1 49 3 361 1 236 1 167 1 190 1 99 1 296 1 298 1 125 1 301 1 302 1 110 1 18 1 82 1 221 1 84 1 276 1 
280 2 203 1 136 2 282 1 66 7 89 4 181 1 92 2 141 1 183 2 207 6 27 2 287 1 232 2 5 2 49 13 233 1 361 2 187 1 212 1 124 1 320 1 301 2 151 1 107 1 370 1 110 2 18 2 245 1 
154 1 280 2 118 1 136 3 66 11 282 1 89 6 1 1 181 1 92 2 182 1 183 2 141 3 207 13 27 3 287 1 232 3 5 3 49 24 233 2 361 3 187 2 124 1 301 3 151 1 107 2 370 2 110 3 58 2 18 2 245 1 85 1 250 1 133 1 
280 2 203 1 136 2 282 1 66 6 89 4 181 1 92 1 182 1 141 2 183 2 207 7 27 2 287 1 232 2 5 2 49 13 233 1 361 2 187 1 212 1 124 1 301 2 151 1 107 1 370 1 110 2 18 1 245 1 
280 2 203 1 136 2 282 1 66 6 89 4 181 1 92 1 182 1 141 2 183 2 207 7 27 2 287 1 232 2 5 2 49 13 233 1 361 2 187 1 212 1 124 1 301 2 151 1 107 1 370 1 110 2 18 1 245 1 
154 1 118 1 280 4 203 2 136 6 282 1 66 21 1 1 89 4 258 1 181 6 92 6 182 1 141 2 183 12 207 23 27 2 287 1 232 2 313 1 5 2 49 44 233 4 361 7 187 2 210 1 124 1 301 2 11 1 151 6 107 1 370 1 110 6 152 1 58 1 371 1 59 2 18 7 245 1 85 1 250 1 133 1 
224 1 347 1 177 1 13 1 339 1 265 1 127 1 260 1 16 1 279 1 
274 1 15 1 
252 1 347 1 177 1 176 1 126 1 13 1 339 1 260 1 16 1 
373 1 162 1 
0 1 72 1 115 1 
224 1 177 1 102 1 13 1 260 1 16 1 26 1 347 1 143 2 4 1 234 1 293 1 86 1 339 1 265 1 297 1 8 1 279 1 
224 1 177 1 102 1 13 1 260 1 16 1 26 1 347 1 143 2 4 1 234 1 293 1 86 1 339 1 265 1 297 1 8 1 279 1 
224 1 177 1 102 1 13 1 260 1 16 1 26 1 347 1 143 2 4 1 234 1 293 1 86 1 339 1 265 1 297 1 8 1 279 1 
373 1 72 1 162 1 
373 1 72 1 162 1 
0 1 115 1 
0 1 72 1 115 1 
294 1 128 1 
177 1 226 1 159 2 260 1 26 1 358 1 143 1 234 1 294 1 339 1 99 2 8 1 169 1 316 1 191 1 340 1 102 1 269 1 125 2 13 1 15 1 16 1 128 1 347 1 82 2 274 1 276 2 
253 1 352 1 66 1 227 1 89 2 71 1 283 1 259 1 207 1 27 1 232 1 5 1 49 2 290 2 167 1 53 2 75 2 190 1 237 2 99 2 362 1 148 1 34 1 36 1 301 1 173 1 217 1 41 1 345 1 82 2 276 2 
148 1 331 1 352 1 119 1 120 1 41 1 259 1 95 1 186 1 330 1 223 1 53 1 75 1 237 1 
178 1 352 1 106 1 91 1 321 1 161 1 41 1 243 1 73 2 286 1 20 1 186 1 223 1 32 1 53 1 75 1 237 1 116 1 
352 1 178 1 106 1 91 1 321 1 161 1 41 1 243 1 73 2 286 1 323 1 20 1 186 1 223 1 32 1 53 2 75 2 237 2 116 1 
178 1 352 1 106 1 91 1 321 1 161 1 243 1 41 1 73 2 286 1 223 1 32 1 53 1 75 1 237 1 266 1 116 1 
229 1 
65 1 202 1 56 1 322 1 142 1 112 1 74 1 275 1 293 1 374 1 
65 2 136 1 179 3 110 1 92 1 18 1 130 2 50 2 361 1 275 2 293 1 98 1 
234 1 328 1 293 1 374 1 8 1 315 1 
65 2 352 2 119 1 138 2 120 1 259 2 284 2 338 1 142 2 311 1 184 2 74 2 234 3 53 4 75 4 237 4 315 4 8 3 148 2 56 2 219 1 41 2 271 1 78 1 60 1 327 1 246 1 112 1 328 2 222 1 275 2 330 2 277 1 
65 1 202 1 30 1 275 1 293 1 374 1 322 1 
65 1 179 1 56 1 142 1 310 1 112 1 74 1 275 1 293 1 98 1 168 1 
65 2 352 1 2 1 257 1 259 2 142 1 184 1 74 1 146 1 53 1 75 1 237 1 170 1 148 1 56 1 109 1 41 2 112 1 330 1 45 1 277 1 375 1 
65 7 154 1 280 1 118 1 136 2 179 6 1 1 92 2 142 2 50 5 234 1 74 2 233 1 361 2 187 1 293 4 100 1 98 3 8 1 315 1 56 2 110 2 18 2 130 5 328 1 112 2 85 1 275 4 200 1 374 1 133 1 
65 2 159 1 355 1 47 1 231 1 142 1 313 1 288 1 74 1 234 1 361 2 6 1 99 1 100 2 8 1 298 1 363 1 239 1 104 1 125 1 11 1 56 1 152 1 18 1 82 1 112 1 275 2 276 1 
352 1 66 1 89 2 159 2 70 1 283 1 285 1 259 1 164 1 27 1 232 1 49 1 5 1 288 1 53 1 75 1 190 1 237 1 99 3 298 2 191 1 148 1 54 1 149 1 125 2 301 1 217 1 41 1 82 2 330 1 276 3 277 1 
65 1 179 4 56 1 284 1 142 1 130 2 184 1 50 2 112 1 74 1 275 2 293 4 210 1 98 2 374 2 
224 1 347 1 177 1 96 1 294 1 
347 1 177 1 156 1 
347 1 177 1 156 1 
347 1 177 1 156 1 
347 1 77 1 177 1 
347 1 77 1 177 1 
347 1 77 1 177 1 
347 1 177 1 
13 1 16 1 
66 5 89 2 301 1 151 3 11 1 355 1 181 2 152 2 183 5 207 5 27 1 287 1 232 1 18 2 313 2 5 1 49 10 361 2 
136 1 89 2 301 1 181 1 183 1 207 2 287 1 27 1 232 1 5 1 49 2 361 1 
136 1 66 2 89 2 301 1 151 1 181 1 92 1 110 1 183 2 207 2 287 1 27 1 18 1 232 1 5 1 49 4 361 1 
212 1 66 2 89 6 301 3 151 1 181 1 17 1 58 1 152 1 183 2 207 1 287 1 27 3 232 3 313 1 49 3 5 3 
280 4 203 1 136 3 66 18 89 10 258 1 181 5 92 3 183 12 207 16 27 5 287 1 232 5 313 3 5 5 49 34 233 3 361 5 187 1 189 1 210 1 33 1 364 1 212 1 301 5 11 2 151 7 110 3 17 1 152 3 58 2 371 1 18 5 113 1 
280 1 118 1 66 4 89 2 258 1 183 2 207 4 27 1 287 1 232 1 313 1 49 8 5 1 233 1 361 1 187 1 210 1 301 1 151 2 11 1 152 1 371 1 18 1 
280 2 118 1 203 1 136 1 66 5 89 4 258 1 181 1 183 3 207 6 287 1 27 2 232 2 313 1 49 11 5 2 233 1 361 2 187 1 210 1 364 1 301 2 11 1 151 2 110 1 152 1 371 1 18 1 
154 1 280 1 118 1 136 2 66 7 89 6 1 1 181 1 92 2 183 2 207 6 27 3 287 1 232 3 49 13 5 3 233 1 361 2 187 1 364 1 301 3 151 1 110 2 58 1 18 2 85 1 133 1 
154 1 280 1 118 1 136 2 66 4 89 6 1 1 181 1 92 1 183 2 207 7 27 3 287 1 232 3 49 11 5 3 233 1 361 2 187 1 364 1 301 3 151 1 110 2 58 1 18 1 85 1 133 1 
280 1 118 1 66 4 89 2 258 1 183 2 207 4 27 1 287 1 232 1 313 1 49 8 5 1 233 1 361 1 187 1 210 1 301 1 151 2 11 1 152 1 371 1 18 1 
154 1 280 1 118 1 136 2 66 6 89 2 1 1 181 1 92 2 183 2 207 6 27 1 287 1 232 1 49 12 5 1 233 1 361 2 187 1 301 1 151 1 110 2 18 2 85 1 133 1 
154 1 280 1 118 1 136 2 66 5 89 8 1 1 181 1 92 1 183 2 207 7 27 4 287 1 232 4 49 12 5 4 233 1 361 2 187 1 364 1 301 4 151 1 110 2 58 2 18 1 85 1 133 1 
154 1 280 1 118 1 136 2 66 5 89 8 1 1 181 2 92 1 183 4 207 7 287 1 27 4 232 4 49 12 5 4 233 1 361 2 187 1 212 1 301 4 151 2 110 2 58 2 18 1 85 1 133 1 
66 4 151 3 11 1 258 2 181 3 152 3 183 6 371 1 207 3 18 1 313 3 49 7 361 1 
154 1 280 1 118 1 136 2 66 5 89 8 1 1 181 1 92 1 183 2 207 7 287 1 27 4 232 4 49 12 5 4 233 1 361 2 187 1 212 1 301 4 151 1 110 2 58 2 18 1 85 1 133 1 
66 4 89 4 301 2 11 1 151 2 181 1 258 1 183 3 58 1 152 1 207 4 371 1 27 2 18 1 232 2 313 1 49 8 5 2 361 1 210 1 
66 3 151 2 11 1 258 1 152 1 183 2 371 1 207 3 18 1 313 1 49 6 30 1 361 1 210 1 
364 1 136 1 66 2 89 2 301 1 151 1 181 1 92 1 110 1 183 2 207 2 27 1 18 1 232 1 5 1 49 4 361 1 
280 2 203 1 136 1 66 4 151 1 181 1 92 1 110 1 183 2 207 3 18 1 49 7 233 1 361 1 187 1 
203 1 280 2 136 2 66 12 89 4 258 1 181 4 92 2 183 9 207 11 27 2 28 1 232 2 313 2 49 23 5 2 233 2 361 3 210 1 301 2 11 1 151 5 110 2 17 1 152 2 58 2 371 1 18 3 59 1 
280 1 66 1 49 1 
207 1 49 1 233 1 
170 1 364 1 136 1 66 3 89 2 301 1 151 2 181 1 110 1 92 1 183 3 207 3 27 1 232 1 18 1 5 1 49 6 361 1 
154 1 280 1 118 1 136 2 66 6 89 2 1 1 181 1 92 2 183 2 207 6 27 1 287 1 232 1 49 12 5 1 233 1 361 2 187 1 301 1 151 1 110 2 18 2 85 1 133 1 
66 3 11 1 151 1 181 1 152 1 183 2 207 3 18 1 313 1 49 6 361 1 
66 2 89 2 301 1 151 1 181 1 258 1 17 1 183 2 152 1 58 1 207 1 371 1 27 1 232 1 313 1 49 3 5 1 
191 1 318 1 82 1 158 1 276 1 52 1 99 1 
191 1 363 1 180 1 57 1 21 1 83 1 235 1 350 1 
148 1 352 1 46 1 119 1 120 1 196 1 41 1 259 1 323 1 330 1 53 4 75 4 237 4 
148 1 311 1 352 1 327 1 62 1 53 1 75 1 41 1 259 1 277 1 219 1 237 1 
352 1 91 1 330 1 32 1 53 1 75 1 41 1 243 1 237 1 73 1 
148 1 253 1 352 1 71 1 259 1 41 1 286 1 323 1 53 2 75 2 237 2 
148 2 253 1 352 2 119 1 138 1 120 1 256 1 196 1 259 3 41 2 323 1 42 1 330 1 53 4 75 5 237 5 
148 2 253 1 352 2 119 1 138 1 120 1 196 1 259 3 41 2 323 1 25 1 42 1 330 1 53 4 75 5 237 5 
148 1 352 1 119 1 120 1 30 1 330 1 53 1 75 1 41 1 259 1 237 1 
191 1 148 1 352 1 125 1 159 1 70 1 259 1 285 1 41 1 48 1 82 1 330 1 276 2 53 1 75 1 277 1 99 2 237 1 
352 1 88 1 138 1 159 2 70 1 285 1 259 3 48 1 94 1 53 1 75 1 237 1 99 2 191 1 148 2 363 1 103 1 125 1 41 1 220 1 82 2 276 2 277 2 
352 1 46 1 88 1 138 1 159 2 285 1 259 3 48 1 94 1 53 2 75 2 237 2 99 2 191 1 148 2 363 1 299 1 103 1 125 1 41 1 220 1 82 2 276 2 277 2 
352 1 46 1 138 1 257 1 259 4 122 1 94 1 234 2 293 1 53 3 75 3 237 3 315 1 8 2 148 1 35 1 10 1 197 1 41 1 220 1 330 1 277 1 374 1 
138 1 159 1 257 1 259 1 47 1 288 1 234 2 293 1 53 1 75 1 99 1 237 1 315 1 8 2 298 1 363 1 239 1 35 1 104 1 125 1 369 1 82 1 276 1 374 1 
352 1 44 1 53 1 75 1 41 1 237 1 
148 1 311 1 352 1 330 1 123 1 53 1 75 1 41 1 259 1 277 1 237 1 375 1 
89 4 283 2 285 1 48 1 183 2 232 2 5 2 49 6 53 1 190 2 296 1 237 1 99 2 148 1 191 2 54 1 301 2 151 2 11 1 12 1 152 1 18 1 201 1 352 1 66 3 159 1 70 1 258 1 259 1 164 1 207 3 27 2 313 1 361 1 167 1 75 1 210 1 36 1 125 1 41 1 323 1 371 1 82 1 221 1 84 1 276 2 277 1 
65 4 202 1 159 1 355 1 47 1 231 1 142 1 313 1 288 1 74 1 234 1 361 2 146 1 293 1 53 1 75 1 99 1 237 1 100 2 298 1 8 1 363 1 239 1 269 1 125 1 104 1 11 1 56 1 322 1 152 1 18 2 82 1 112 1 275 4 222 1 330 1 276 1 374 1 
148 1 352 1 10 1 109 1 259 2 41 2 323 1 44 1 53 2 75 2 237 2 277 1 375 1 
191 1 148 1 299 1 352 1 125 1 159 1 259 1 285 1 41 1 48 1 82 1 330 1 276 2 53 1 75 1 277 1 99 2 237 1 
148 1 311 1 352 1 138 1 123 1 53 1 75 1 41 1 259 1 277 1 237 1 375 1 
238 1 268 1 227 1 345 1 19 1 82 1 276 1 99 1 362 1 
351 1 238 1 198 1 
191 1 238 1 365 1 19 1 268 1 
191 1 351 1 363 1 55 1 238 1 35 1 88 1 268 2 365 2 103 1 269 1 214 1 160 1 198 1 19 2 234 2 293 1 374 1 8 2 
272 1 215 1 38 1 291 1 292 1 209 1 354 1 278 1 
117 1 171 1 22 1 215 2 38 1 335 2 108 1 140 1 272 4 289 1 292 2 209 1 291 3 278 4 
172 1 215 1 38 1 335 1 354 1 272 2 326 1 291 1 292 1 209 1 329 1 278 2 
117 2 22 2 215 1 38 1 354 1 272 3 289 1 291 1 209 1 292 1 278 3 211 1 
300 1 244 1 255 2 291 2 
272 1 38 1 209 1 354 1 356 1 278 1 
272 2 342 1 215 1 38 1 291 1 292 1 335 1 209 1 354 1 278 2 
208 1 
272 1 215 1 38 1 291 1 292 1 209 1 354 1 278 1 
215 1 30 1 291 1 292 1 
272 1 215 1 38 1 291 1 292 1 209 1 278 1 
272 1 195 1 336 1 
117 1 22 2 215 1 38 1 354 1 272 3 165 1 289 1 291 1 209 1 292 1 278 3 
171 1 215 1 38 1 23 1 335 1 272 2 209 1 292 1 291 1 278 2 
272 1 38 1 291 1 61 1 209 1 91 1 354 1 161 1 140 1 73 1 278 1 
272 1 38 1 291 1 292 1 209 1 354 1 278 1 
272 1 215 1 38 1 292 2 209 1 354 1 278 1 
333 1 135 1 38 2 354 1 272 2 291 1 292 1 209 2 166 1 278 2 
342 1 215 1 38 1 335 2 354 1 108 1 140 1 129 1 272 3 292 1 209 1 291 2 278 3 
157 1 215 1 38 1 335 1 354 1 91 1 321 1 161 1 73 2 272 2 291 1 292 1 209 1 32 1 278 2 
171 1 353 1 215 1 38 1 23 1 335 2 354 1 108 1 140 1 272 3 292 1 209 1 291 2 278 3 
22 1 342 1 215 1 38 1 335 1 354 1 272 3 209 1 292 1 291 1 278 3 
171 1 291 1 108 1 140 1 
291 1 292 1 

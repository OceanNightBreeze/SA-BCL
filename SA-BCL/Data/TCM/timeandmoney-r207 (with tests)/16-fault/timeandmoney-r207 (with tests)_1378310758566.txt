#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 231 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 231 199 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 128 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 149 (114,291,353) (79,236,297) (79,236,297) (79,236,297) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 362 108 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 22 264 258 135 115 275 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 22 264 258 135 115 275 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 22 264 258 135 115 275 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 22 264 258 135 115 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 149 (114,291,353) (114,291,353) (114,291,353) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 226 258 135 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 22 264 258 135 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4623 | == -> !=
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | CONSTANT | 8014 | 0 -> 1
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONSTANT | 4931 | 0 -> -1
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5209 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 2639 | < -> >
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 24 1 51 1 5 1 98 1 138 2 219 2 58 6 200 2 33 1 11 9 344 1 34 3 103 1 203 1 87 2 61 5 14 2 223 1 249 1 345 1 208 1 173 1 149 2 109 9 213 1 180 2 46 4 
1 1 24 1 51 1 5 1 98 1 138 2 219 2 58 6 200 2 33 1 11 9 344 1 34 3 103 1 87 2 203 1 61 5 14 2 223 1 249 1 345 1 208 1 173 1 149 2 109 9 213 1 180 2 46 4 
1 1 24 1 51 1 5 1 98 1 138 2 219 2 58 7 200 2 33 1 11 10 344 1 34 4 103 1 87 2 203 1 61 6 14 2 223 1 249 1 345 1 208 1 173 1 149 2 109 10 213 1 180 2 46 5 
1 1 24 1 51 1 5 1 98 1 138 2 219 1 58 4 200 2 33 1 11 7 344 1 34 2 87 2 203 1 61 4 14 2 223 1 249 1 345 1 208 1 173 1 149 2 109 7 213 1 180 2 46 3 
34 1 103 1 61 3 87 1 14 1 223 1 24 1 249 1 149 1 173 1 138 1 109 4 219 2 213 1 58 3 180 1 46 2 11 4 
61 1 14 1 223 1 235 1 249 1 5 1 149 1 98 1 138 1 109 2 56 1 90 1 213 1 180 1 200 1 11 2 
34 1 61 2 14 2 223 1 51 1 249 1 138 2 109 3 213 1 58 1 200 1 46 1 11 3 
314 1 1 1 24 1 51 1 138 2 274 1 219 2 58 7 200 1 11 9 34 3 61 5 87 1 103 1 14 2 223 1 249 1 345 1 173 1 149 1 109 9 213 1 180 1 46 4 
314 1 1 1 24 1 51 1 138 2 274 1 219 2 58 7 200 1 11 9 34 3 61 5 87 1 103 1 14 2 223 1 249 1 345 1 173 1 149 1 109 9 213 1 180 1 46 4 
185 1 239 1 67 1 
187 1 156 2 239 1 
131 2 40 2 315 2 99 1 357 1 146 2 65 2 182 2 
47 2 261 2 119 1 315 2 357 1 78 1 77 1 161 1 233 1 336 1 26 1 237 1 27 2 99 1 293 1 272 1 198 1 146 2 65 2 303 1 279 1 105 2 37 1 148 1 347 1 89 1 131 3 40 2 211 1 19 1 228 1 285 1 72 1 287 2 332 1 74 1 289 1 182 3 158 1 
131 1 40 1 315 1 357 1 78 1 146 1 65 1 241 1 83 1 182 1 
92 1 159 1 78 1 146 1 185 1 278 1 66 1 123 1 131 1 292 1 325 1 30 1 239 1 182 1 
92 1 159 1 315 1 78 1 146 1 185 1 65 1 66 1 123 2 131 1 40 1 292 2 30 1 239 1 182 1 
292 1 231 1 38 1 123 1 
315 1 357 1 78 1 185 1 318 1 123 2 83 1 292 2 239 1 241 1 246 1 146 1 65 1 38 1 131 1 40 1 70 1 227 1 182 1 
292 1 227 1 123 1 
315 1 357 1 78 1 146 1 65 1 38 1 83 1 123 1 131 1 40 1 292 1 70 1 241 1 182 1 
239 1 
315 1 357 1 78 1 185 1 123 2 83 1 292 2 239 1 241 1 246 1 146 1 65 1 38 1 18 1 131 1 40 1 70 1 227 1 182 1 
259 1 315 1 357 1 78 1 358 1 3 2 185 2 4 1 95 2 83 1 123 5 292 5 193 1 340 1 239 2 241 1 298 1 145 1 364 2 299 2 201 1 246 1 146 1 63 5 65 1 248 1 106 1 38 2 131 1 40 1 70 1 42 1 227 2 132 4 133 2 134 2 44 1 182 1 
47 1 261 1 315 1 161 1 146 1 304 1 233 1 279 1 105 1 347 1 88 1 131 2 237 1 40 1 72 1 74 1 198 1 276 1 158 1 182 2 
99 1 67 1 
315 1 146 2 65 1 81 1 131 2 40 1 99 2 310 1 182 2 
304 1 157 1 363 1 
47 1 261 1 78 1 161 1 233 1 105 1 279 1 347 1 131 1 237 1 99 1 72 1 74 1 198 1 289 1 117 1 182 1 158 1 
131 3 40 3 315 3 99 1 146 3 65 1 276 1 182 3 
131 1 40 1 315 1 78 1 146 1 83 1 182 1 
131 1 40 1 315 1 78 1 146 1 65 1 81 1 310 1 182 1 
92 1 159 1 47 1 261 1 315 3 357 1 77 1 78 1 161 1 233 1 81 1 26 1 338 1 123 1 237 1 27 1 99 1 292 1 293 1 272 1 30 1 198 1 276 1 146 3 303 1 65 2 279 1 105 1 66 1 37 1 347 1 89 1 88 1 131 4 40 3 19 1 228 1 72 1 287 2 332 1 74 1 348 1 158 1 182 4 
131 2 40 1 315 1 99 1 146 2 278 1 250 1 276 1 182 2 
92 1 159 1 315 3 356 1 78 1 146 3 65 1 81 1 66 1 123 1 88 1 131 3 40 3 292 1 30 1 239 1 348 1 276 2 182 3 
315 2 146 2 65 1 304 1 81 1 131 2 40 2 157 1 276 1 182 2 
47 1 261 1 78 1 161 1 233 1 105 1 279 1 347 1 131 1 237 1 99 1 72 1 74 1 198 1 289 1 182 1 158 1 
47 1 261 1 78 1 161 1 233 1 105 1 279 1 347 1 131 1 154 1 99 1 72 1 349 1 198 1 289 1 182 1 158 1 
22 1 77 1 93 1 23 1 26 1 359 1 124 1 27 4 272 1 86 1 363 2 299 1 304 2 89 1 211 2 19 2 228 1 286 1 112 1 212 1 287 2 157 2 332 1 134 1 
131 1 107 1 159 1 40 1 315 1 78 1 146 1 182 1 
315 4 146 5 65 1 278 1 81 1 250 1 225 1 88 1 131 5 40 4 99 1 29 1 276 2 182 5 
107 1 131 2 40 2 315 2 78 1 146 2 83 1 182 2 
142 1 252 1 
142 1 252 1 
113 1 82 1 
113 1 82 1 
113 1 142 1 82 1 252 1 
243 1 142 1 252 1 
243 1 142 1 252 1 
243 1 142 1 252 1 
361 1 280 1 113 1 142 2 82 1 252 2 
240 1 142 1 252 1 
142 1 339 1 252 1 
142 1 339 1 252 1 
142 1 339 1 252 1 
365 1 80 1 280 1 277 2 281 2 306 1 207 1 317 1 137 2 123 2 252 2 191 2 292 2 177 1 218 2 239 1 32 3 179 1 142 2 
315 2 265 1 137 1 123 1 191 1 99 1 292 1 54 1 294 1 32 1 142 1 240 1 143 1 168 1 300 1 146 2 277 1 281 1 306 1 329 1 252 1 131 2 40 2 182 2 
87 1 180 1 149 1 
56 1 180 1 149 1 
253 1 87 2 56 1 97 1 10 1 180 3 
253 1 87 1 56 1 97 1 180 2 221 1 
253 2 87 1 56 1 97 1 180 2 
22 1 355 1 263 1 23 1 185 1 187 1 95 1 264 1 265 1 123 5 266 2 54 1 322 1 292 5 59 1 239 2 102 1 364 1 300 1 299 1 201 1 244 2 246 1 63 2 38 4 251 2 152 1 227 1 132 3 156 3 133 1 134 1 
292 2 231 1 147 1 162 1 199 1 38 2 123 2 
22 1 315 1 357 1 78 1 263 1 185 1 23 1 187 2 95 1 264 1 265 1 83 1 123 3 266 1 322 1 292 3 239 3 59 1 102 1 241 1 364 1 299 1 244 2 146 1 63 2 65 1 38 2 251 2 131 1 40 1 70 1 42 1 132 3 156 4 133 1 134 1 182 1 
22 1 263 1 23 1 187 2 95 1 264 1 265 1 123 2 266 1 292 2 322 1 239 2 59 1 102 1 128 1 364 1 299 1 244 2 63 2 38 1 251 2 42 1 132 3 156 4 133 1 134 1 
161 1 67 1 68 1 
161 1 110 1 
257 1 
161 1 279 1 
346 1 
161 1 279 1 198 1 
160 1 161 1 
259 1 170 1 299 1 121 1 359 2 360 1 190 2 211 4 27 7 19 3 270 1 286 3 195 1 134 1 44 1 298 1 255 1 
259 1 170 1 299 1 121 1 359 2 360 1 190 2 211 4 27 7 19 3 270 1 286 3 195 1 134 1 44 1 298 1 255 1 
259 1 170 1 299 1 121 1 359 2 360 1 190 2 211 4 27 7 19 3 270 1 286 3 195 1 134 1 44 1 298 1 255 1 256 1 
259 2 22 3 23 3 121 2 264 3 337 1 26 1 25 1 359 5 188 1 190 3 360 5 27 31 270 1 272 1 195 1 298 1 170 1 169 1 299 4 150 3 210 1 155 1 211 16 19 15 228 1 331 4 286 10 287 2 332 1 44 2 134 4 255 2 76 1 
259 1 121 1 337 1 26 2 359 3 190 2 360 1 125 1 27 9 194 1 270 1 272 2 298 1 170 1 299 1 211 5 19 4 228 2 286 4 287 4 332 2 134 1 44 1 255 1 
261 1 47 1 79 1 216 1 52 1 236 1 138 1 7 1 217 1 56 1 10 1 200 1 297 1 11 1 87 1 14 1 105 1 307 1 149 1 347 1 109 1 369 1 213 1 114 1 180 2 158 1 
261 1 47 1 79 1 216 1 52 1 267 1 138 1 7 1 56 1 57 1 58 2 10 1 296 1 200 1 297 1 11 3 61 1 87 1 14 1 223 1 105 1 249 1 307 1 149 1 347 1 309 1 109 3 369 1 114 1 180 2 158 1 
261 1 47 1 79 1 216 1 267 1 7 1 56 1 58 2 10 1 296 1 200 1 11 2 61 1 87 1 223 1 105 1 249 1 307 1 347 1 149 1 309 1 109 2 369 1 114 1 180 2 158 1 
21 1 261 1 47 1 216 2 161 1 233 1 138 1 7 2 28 1 57 1 341 1 222 1 200 2 11 1 245 1 14 1 105 1 171 1 279 1 307 2 347 1 109 1 158 1 
261 1 47 1 79 1 216 1 52 1 236 1 138 1 7 1 56 1 10 1 296 1 200 1 297 1 11 1 87 1 14 1 105 1 307 1 149 1 347 1 109 1 369 1 213 1 114 1 180 2 158 1 
85 1 
92 1 47 2 136 1 233 2 187 2 95 1 238 1 292 4 239 1 144 3 343 1 201 1 246 2 63 2 302 1 15 1 146 1 247 1 105 2 66 1 347 1 153 1 156 2 75 1 214 1 158 1 21 1 261 2 159 1 78 1 161 1 263 1 262 1 123 4 320 1 28 1 271 1 324 1 325 1 30 1 220 1 127 1 364 1 279 1 278 1 282 1 36 2 131 1 227 4 176 2 132 2 133 1 45 2 182 1 
92 1 159 1 78 1 15 1 262 1 146 1 247 1 278 1 66 1 123 2 131 1 320 1 292 2 227 1 325 1 30 1 220 1 75 1 144 2 182 1 
92 1 159 1 78 1 262 1 185 1 123 3 320 1 292 3 271 1 325 1 30 1 239 1 144 3 246 1 146 1 15 1 247 1 278 1 66 1 131 1 18 1 227 1 75 1 182 1 
92 1 343 1 159 1 78 1 15 1 262 1 146 1 247 1 278 1 66 1 123 2 131 1 320 1 292 2 227 1 325 1 30 1 220 1 75 1 144 2 182 1 
92 1 159 1 315 1 357 1 78 2 262 1 185 1 83 1 123 3 320 1 292 3 271 1 325 1 30 1 239 1 220 1 241 1 144 3 343 1 246 1 146 2 15 1 65 1 247 1 278 1 66 1 18 1 131 2 39 1 40 1 70 1 227 2 75 1 182 2 
92 1 185 1 136 1 187 2 95 1 292 3 239 2 144 3 343 1 201 1 246 1 146 1 15 1 63 1 247 1 66 1 156 2 75 1 214 1 159 1 78 1 262 1 123 3 320 1 324 1 271 1 325 1 30 1 220 1 364 1 278 1 282 1 36 2 131 1 227 2 132 1 176 2 133 1 45 2 182 1 
92 1 159 1 78 1 262 1 185 1 187 2 95 1 290 1 123 4 320 1 292 4 271 2 324 1 325 1 30 1 239 1 220 2 362 1 295 1 144 4 364 1 343 2 201 1 246 2 63 1 146 1 15 1 247 1 278 1 282 1 66 1 36 2 131 1 227 4 176 2 132 1 133 1 75 1 214 2 45 2 182 1 
92 1 185 1 187 2 95 1 290 1 292 4 239 1 295 1 241 1 144 4 343 2 201 1 246 2 15 1 146 2 63 1 65 1 247 1 66 1 70 1 75 1 214 2 159 1 315 1 357 1 78 2 262 1 83 1 123 4 320 1 324 1 271 2 325 1 30 1 362 1 220 2 364 1 278 1 282 1 36 2 131 2 40 1 227 4 132 1 176 2 133 1 45 2 182 2 
92 1 50 1 185 1 95 1 290 1 292 4 8 2 239 1 241 1 144 4 343 2 201 1 246 2 15 1 146 2 63 1 65 1 247 1 66 1 70 1 156 2 75 1 351 2 159 1 315 1 357 1 78 2 262 1 83 1 123 4 319 1 320 1 271 2 325 1 30 1 220 2 364 1 278 1 282 1 36 2 283 1 131 2 40 1 227 4 132 1 133 1 45 2 182 2 
92 1 185 1 187 2 95 1 290 1 292 4 239 1 295 1 241 1 144 4 343 3 201 1 246 2 15 1 146 2 63 1 65 1 247 1 66 1 108 1 70 1 75 1 214 2 159 1 315 1 357 1 78 2 262 1 83 1 123 4 320 1 324 1 271 2 325 1 30 1 362 1 220 3 364 1 278 1 282 1 36 2 131 2 40 1 227 5 132 1 176 2 133 1 45 2 182 2 
92 1 343 1 159 1 78 1 15 1 262 1 146 1 247 1 278 1 66 1 123 2 131 1 320 1 108 1 292 2 227 1 271 1 325 1 30 1 362 1 220 1 75 1 144 3 182 1 
92 1 136 1 185 1 95 1 292 4 8 2 239 1 241 1 144 4 343 2 201 1 246 2 146 2 15 1 63 1 65 1 247 1 66 1 70 1 156 2 75 1 351 2 159 1 315 1 357 1 78 2 262 1 83 1 319 1 123 4 320 1 271 2 325 1 30 1 220 2 364 1 278 1 282 1 36 2 131 2 40 1 227 4 132 1 133 1 45 2 182 2 
259 1 170 1 299 1 77 1 304 1 67 1 359 2 26 1 89 1 190 1 124 1 27 6 211 3 99 2 19 3 228 1 270 1 286 2 272 1 287 2 157 1 332 1 134 1 44 1 298 1 363 1 
184 1 77 1 284 1 228 1 272 1 287 2 332 1 26 1 89 1 
47 1 233 1 6 1 237 1 99 1 293 1 198 1 146 1 105 1 347 1 211 1 19 1 72 1 73 1 157 1 74 1 117 1 158 1 261 1 119 1 315 1 120 1 77 1 78 1 161 1 26 1 27 2 272 1 276 1 279 1 88 1 89 1 131 2 40 1 284 1 228 1 287 2 332 1 289 1 182 2 
47 1 233 1 234 2 237 2 99 1 293 1 140 2 9 1 198 2 298 1 145 1 299 4 146 1 303 2 304 6 105 1 305 2 17 1 347 2 211 11 19 11 72 2 157 6 74 2 158 2 259 1 261 1 354 2 22 2 119 1 315 1 78 1 77 3 161 2 23 2 264 2 26 3 359 4 360 1 27 22 270 1 272 3 276 1 363 6 170 1 279 2 88 1 89 3 131 3 40 1 284 1 228 3 286 5 287 6 332 3 44 1 134 4 289 1 182 3 
21 1 261 2 47 2 119 1 77 1 161 2 233 1 26 1 84 1 27 2 28 1 272 1 293 1 198 1 342 1 202 1 105 2 279 2 209 1 347 2 89 1 211 1 71 1 19 1 228 1 285 1 287 2 332 1 333 1 158 3 
22 1 315 1 77 1 23 1 81 1 264 1 359 1 26 1 27 3 272 1 363 1 299 1 146 1 304 1 65 1 89 1 69 1 131 1 40 1 211 1 284 1 19 2 228 1 286 1 287 2 157 1 332 1 134 1 182 1 
22 1 77 1 304 1 26 1 89 1 360 1 124 1 27 2 211 2 228 1 286 1 272 1 287 2 157 1 332 1 134 1 86 1 363 1 
299 1 77 1 304 1 23 1 359 1 26 1 89 1 124 1 27 2 19 2 228 1 286 1 272 1 287 2 112 1 157 1 332 1 363 1 
22 1 77 1 23 1 264 1 26 1 359 1 124 1 360 1 27 4 272 1 363 2 299 1 304 2 89 1 211 2 19 2 228 1 286 2 287 2 157 2 332 1 134 1 
22 1 77 1 304 1 26 1 89 1 360 1 27 2 211 2 228 1 286 1 272 1 287 2 157 1 332 1 134 1 333 1 86 1 363 1 
299 1 77 1 304 1 23 1 359 1 26 1 89 1 27 2 19 2 228 1 286 1 272 1 287 2 112 1 157 1 332 1 333 1 363 1 
22 1 77 1 23 1 264 1 26 1 359 1 360 1 27 4 272 1 363 2 299 1 304 2 89 1 211 2 19 2 228 1 286 2 287 2 157 2 332 1 134 1 333 1 
299 1 22 1 77 1 23 1 304 2 264 1 359 1 26 1 89 1 360 1 211 2 27 4 19 2 228 1 286 2 272 1 287 2 157 2 332 1 134 1 363 2 
261 1 47 1 119 1 78 1 77 1 161 1 233 1 26 1 237 1 27 2 99 1 272 1 293 1 198 1 303 1 279 1 105 1 347 1 89 1 131 1 211 1 19 1 228 1 72 1 287 2 74 1 332 1 289 1 158 1 182 1 
261 1 47 1 78 1 77 1 161 1 233 1 26 1 27 1 99 1 272 1 293 1 198 1 104 1 279 1 105 1 347 1 89 1 131 1 154 1 19 1 228 1 72 1 287 2 349 1 332 1 289 1 158 1 182 1 
22 1 77 1 23 1 264 1 26 1 359 1 360 1 27 4 272 1 363 2 299 1 304 2 89 1 211 2 284 1 19 2 228 1 286 2 287 2 157 2 332 1 134 1 
22 1 261 1 47 1 77 1 161 1 23 1 264 1 359 1 26 1 237 1 27 4 217 1 272 1 140 1 198 1 363 2 299 1 304 2 303 1 105 1 279 1 347 1 89 1 131 1 211 2 19 2 228 1 286 1 72 1 287 2 157 2 74 1 332 1 134 1 158 1 182 1 
22 1 315 1 77 1 23 1 81 1 264 1 26 1 360 1 27 3 272 1 363 1 299 1 146 1 65 1 304 1 89 1 131 1 40 1 211 2 19 1 284 1 228 1 286 1 287 2 178 1 157 1 332 1 134 1 182 1 
22 4 232 1 135 1 23 3 94 2 337 1 264 4 359 2 26 3 360 2 125 1 27 30 268 1 272 3 275 1 169 1 129 1 299 3 13 1 226 1 366 3 150 3 130 1 155 3 211 15 19 15 331 4 228 3 286 4 287 6 288 1 332 3 134 4 115 1 118 1 258 1 
22 4 232 1 135 1 23 3 94 2 337 1 264 4 359 3 26 3 360 2 125 1 27 30 268 1 272 3 275 1 169 1 129 1 299 3 13 1 226 1 366 3 150 3 130 1 155 3 211 15 19 15 331 4 228 3 286 5 287 6 288 1 332 3 134 4 115 1 118 1 258 1 
259 1 22 6 232 1 135 1 23 5 94 1 264 6 359 6 26 1 190 1 360 4 125 1 27 41 270 1 272 1 275 1 167 2 298 1 170 1 169 2 299 6 13 1 226 1 366 2 150 4 130 1 155 2 211 22 19 19 331 4 228 1 286 10 287 2 332 1 44 1 134 7 115 1 258 1 
22 3 23 3 94 1 264 3 359 3 26 2 360 3 125 1 27 19 268 2 272 2 275 1 169 1 129 1 299 3 366 2 150 1 130 1 155 1 211 9 19 10 331 2 228 2 286 6 287 4 332 2 134 3 20 1 115 1 118 1 
22 2 232 1 135 1 23 1 94 2 337 1 264 2 359 1 26 2 125 1 27 17 272 2 275 1 299 1 13 1 226 1 366 2 150 2 130 1 211 9 155 2 19 8 228 2 331 2 286 1 287 4 332 2 134 2 115 2 258 1 
191 1 280 1 111 1 277 1 281 1 179 1 142 1 317 1 137 1 252 1 
191 1 316 1 277 1 281 1 350 1 142 1 137 1 308 1 252 1 
240 1 168 1 
365 1 80 1 280 1 277 1 306 1 281 1 317 1 137 1 123 1 252 1 191 1 292 1 177 1 218 1 239 1 32 2 179 1 142 1 
365 1 80 1 280 1 277 1 306 1 281 1 317 1 137 1 123 1 252 1 191 1 292 1 177 1 218 1 239 1 32 2 179 1 142 1 
365 1 80 1 280 1 277 1 306 1 281 1 317 1 137 1 123 1 252 1 191 1 292 1 177 1 218 1 239 1 32 2 179 1 142 1 
361 1 243 1 60 1 
361 1 243 1 60 1 
12 1 339 1 
12 1 361 1 339 1 
294 1 143 1 
315 2 265 1 137 1 123 1 191 1 192 1 99 1 292 1 54 1 218 1 294 1 32 1 142 1 240 1 143 1 168 1 300 1 365 1 146 2 277 1 281 1 329 1 38 1 252 1 131 2 40 2 182 2 
243 1 60 1 
12 1 361 1 339 1 
352 1 261 2 47 2 119 1 77 1 161 1 96 1 26 1 189 1 27 2 272 1 293 1 327 1 146 2 16 1 279 1 105 2 209 1 347 1 89 1 131 2 211 1 284 1 19 1 228 1 285 2 287 2 332 1 116 1 158 1 182 2 
47 2 261 2 353 1 87 1 105 2 224 1 52 1 149 1 347 1 291 1 7 1 56 1 217 1 369 1 10 1 180 2 114 1 296 1 158 1 
47 1 261 1 353 1 87 1 35 1 105 1 52 1 149 1 347 1 7 1 56 1 369 1 10 1 180 2 114 1 296 1 158 1 
21 1 47 1 261 1 161 1 233 1 279 1 105 1 122 1 224 1 347 1 7 1 28 1 222 1 158 1 
47 1 261 1 353 1 87 1 105 1 224 1 52 1 149 1 347 1 291 1 7 1 56 1 369 1 10 1 180 2 114 1 296 1 158 1 
323 1 
193 1 132 1 63 1 185 1 340 1 239 1 67 1 
185 1 187 1 95 1 123 1 292 1 324 1 239 2 364 1 201 1 246 1 63 1 227 1 176 1 132 1 156 1 133 1 214 1 
183 1 47 1 233 1 234 1 3 1 187 3 95 2 292 2 239 3 198 1 299 1 201 2 244 3 246 1 63 3 105 1 206 1 347 1 251 3 68 1 110 2 156 6 158 2 260 1 261 1 22 1 161 4 263 1 23 1 264 1 123 2 269 1 30 1 364 2 279 1 368 1 41 1 43 1 227 2 132 4 133 2 134 1 91 1 
22 1 232 1 3 1 135 1 23 1 185 1 187 3 95 2 264 1 123 1 292 1 239 4 364 2 299 1 201 2 244 4 13 1 246 1 63 3 226 1 251 4 150 1 155 1 330 1 227 1 331 1 132 5 156 6 133 2 134 1 258 1 
259 1 315 1 357 1 78 1 3 2 95 1 83 1 123 1 292 1 295 1 241 1 298 1 145 1 364 1 299 1 201 1 63 2 146 1 65 1 248 1 131 1 40 1 70 1 132 2 133 1 44 1 134 2 182 1 
364 1 201 1 63 1 185 1 95 1 193 1 132 1 340 1 133 1 239 1 
22 2 299 2 244 5 63 5 234 1 3 2 23 2 248 1 187 5 264 2 251 5 132 5 156 10 239 5 134 2 
315 1 357 1 78 1 246 1 146 1 65 1 185 1 83 1 123 1 131 1 40 1 292 1 70 1 227 1 239 1 241 1 182 1 
21 1 261 2 47 2 161 2 263 1 233 2 95 2 123 2 84 1 238 1 292 2 28 1 198 1 342 1 364 2 201 1 301 1 202 1 246 1 302 1 63 1 279 2 105 2 347 2 153 1 42 1 71 1 227 2 132 1 133 2 158 3 
261 1 47 1 315 2 357 1 77 1 161 1 233 1 26 1 237 1 27 1 99 1 293 1 272 1 198 1 146 2 65 2 303 1 105 1 279 1 37 1 347 1 89 1 131 3 40 2 19 1 228 1 72 1 287 2 74 1 332 1 182 3 158 1 
364 1 201 1 244 2 63 2 263 1 185 2 187 2 95 1 251 2 190 1 238 1 132 1 156 4 133 1 239 4 
191 1 335 1 277 1 
191 1 335 1 277 1 
191 1 335 1 277 1 
191 1 277 1 143 1 317 1 367 1 
191 1 277 1 311 1 
191 1 277 1 311 1 
191 1 277 1 311 1 
191 1 277 1 
142 1 252 1 
259 1 135 1 26 1 359 2 190 1 125 1 27 8 270 1 272 1 298 1 170 1 299 1 150 1 155 1 211 4 19 4 331 1 228 1 286 2 287 2 332 1 134 1 44 1 
259 1 22 1 135 1 264 1 359 2 26 2 190 1 360 1 125 1 27 11 270 1 272 2 298 1 170 1 169 1 299 1 150 1 155 1 211 6 19 5 331 2 228 2 286 3 287 4 332 2 44 1 134 2 334 1 
299 1 22 2 13 1 232 1 23 1 135 1 337 1 264 2 359 1 26 2 226 1 150 1 125 1 211 6 155 1 27 11 19 5 228 2 331 1 286 1 272 2 287 4 332 2 134 2 258 1 
299 1 22 2 13 1 232 1 23 1 135 1 264 2 359 1 26 1 226 1 150 1 125 1 211 6 155 1 27 10 19 4 228 1 331 1 286 1 272 1 287 2 332 1 134 2 258 1 
259 1 135 1 26 1 359 2 190 1 125 1 27 8 270 1 272 1 298 1 170 1 299 1 150 1 155 1 211 4 19 4 331 1 228 1 286 2 287 2 332 1 134 1 44 1 
299 1 22 2 13 1 232 1 23 1 135 1 264 2 359 1 26 1 226 1 150 1 125 1 211 6 155 1 27 10 19 4 228 1 331 1 286 1 272 1 287 2 332 1 134 2 258 1 
299 1 22 2 13 1 232 1 23 1 135 1 337 1 264 2 359 1 26 3 226 1 150 1 125 1 211 6 155 1 27 11 19 5 228 3 331 1 286 1 272 3 287 6 332 3 134 2 334 1 258 1 
299 1 22 2 129 1 13 1 232 1 23 1 135 1 337 1 264 2 359 2 26 3 226 1 150 1 125 1 211 6 155 1 27 11 19 5 228 3 331 1 286 2 272 3 287 6 332 3 134 2 258 1 
170 1 259 3 299 1 359 3 360 3 27 7 211 3 19 4 270 2 286 6 44 3 134 1 298 1 
299 1 22 2 129 1 13 1 232 1 23 1 135 1 337 1 264 2 359 1 26 3 226 1 150 1 125 1 211 6 155 1 27 11 19 5 228 3 331 1 286 1 272 3 287 6 332 3 134 2 258 1 
170 1 259 1 299 1 337 1 359 2 26 2 190 1 360 1 27 8 211 4 19 4 228 2 270 1 286 3 272 2 287 4 332 2 134 1 44 1 298 1 
259 1 170 1 299 1 27 6 211 3 19 3 270 1 286 2 67 1 134 1 359 2 44 1 298 1 190 1 
299 1 22 1 23 1 264 1 359 1 26 1 360 1 211 2 27 4 19 2 228 1 286 2 272 1 287 2 332 1 134 1 334 1 
169 1 299 1 22 1 23 1 264 1 359 1 150 1 360 1 155 1 27 7 211 3 19 4 331 2 286 2 134 1 
259 2 22 2 23 2 264 2 337 2 359 5 26 2 163 1 190 1 360 4 27 23 270 1 272 2 197 1 167 1 298 1 170 1 169 1 299 3 150 2 211 11 19 12 331 2 228 2 286 9 287 4 332 2 44 2 134 3 
27 1 19 1 331 1 
27 1 211 1 150 1 
22 1 299 1 234 1 23 1 264 1 26 1 359 2 360 1 27 6 211 3 19 3 228 1 272 1 286 3 287 2 332 1 134 1 334 1 
299 1 22 2 13 1 232 1 23 1 135 1 264 2 359 1 26 1 226 1 150 1 125 1 211 6 155 1 27 10 19 4 228 1 331 1 286 1 272 1 287 2 332 1 134 2 258 1 
259 1 299 1 359 1 360 1 211 3 27 6 19 3 286 2 134 1 44 1 298 1 
259 1 170 1 337 1 359 1 163 1 26 1 360 1 211 1 27 3 19 2 270 1 228 1 286 2 272 1 287 2 332 1 44 1 
259 2 299 2 26 1 359 3 360 2 125 1 211 5 27 10 19 5 228 1 272 1 286 5 287 2 332 1 44 2 134 2 298 1 145 1 
22 1 26 1 360 1 125 1 211 2 27 2 228 1 272 1 286 1 287 2 332 1 134 1 
299 1 22 1 23 1 264 1 359 1 26 1 360 1 125 1 211 2 27 4 19 2 228 1 286 2 272 1 287 2 332 1 134 1 
259 1 129 1 337 1 163 1 26 3 359 1 360 1 125 1 27 3 211 1 19 2 228 3 272 3 286 2 287 6 332 3 44 1 
259 3 22 3 23 3 337 2 264 3 163 1 25 1 26 5 359 7 190 1 360 5 125 1 27 34 270 1 272 5 298 2 170 1 169 1 129 1 299 5 210 1 150 3 155 1 211 16 19 18 331 4 228 5 286 12 287 10 332 5 44 3 134 5 334 1 76 1 
131 1 321 1 99 1 146 1 278 1 250 1 182 1 
131 1 321 1 99 1 146 1 49 1 186 1 278 1 250 1 229 1 141 1 182 1 230 1 
21 1 261 1 47 1 161 1 28 1 233 1 279 1 105 1 67 1 347 1 158 1 
261 1 47 1 315 1 78 1 161 1 233 1 237 1 99 1 276 1 198 1 146 1 105 1 279 1 347 1 131 2 40 1 72 1 289 1 182 2 158 1 
261 1 47 1 159 1 315 2 160 1 78 2 161 3 237 1 99 1 126 1 276 1 198 2 146 2 105 1 328 1 279 2 66 1 347 1 131 2 40 1 72 1 289 1 182 2 158 1 
261 1 47 1 159 1 315 2 160 1 78 2 161 3 99 1 126 1 276 1 198 2 146 2 105 1 328 1 279 2 66 1 347 1 131 2 40 1 72 1 349 1 289 1 182 2 158 1 
261 1 47 1 315 1 160 1 357 1 78 1 161 4 185 1 83 1 123 2 292 2 126 1 101 1 30 1 239 1 241 1 198 1 146 1 65 1 105 1 328 1 279 1 347 1 68 1 151 1 131 1 40 1 70 1 227 1 110 1 182 1 158 1 
260 1 261 1 47 1 315 1 160 1 357 1 78 1 161 4 185 1 83 1 123 2 292 2 126 1 30 1 239 1 241 1 198 1 146 1 65 1 105 1 328 1 279 1 347 1 68 1 131 1 40 1 70 1 227 1 110 1 182 1 158 1 
47 1 261 1 105 1 172 1 347 1 158 1 
47 1 261 1 202 1 161 1 233 1 105 1 279 1 347 1 53 1 269 1 198 1 342 1 158 2 
47 1 190 1 237 1 99 3 140 1 198 1 298 2 145 1 299 3 146 1 303 1 304 1 305 1 105 1 347 1 211 7 19 6 72 1 157 1 74 1 116 1 158 1 259 2 261 1 315 1 78 1 77 2 161 1 26 2 359 3 360 1 27 13 217 1 270 1 272 2 276 1 363 1 170 1 279 1 89 2 131 2 40 1 284 1 228 2 286 4 287 4 332 2 44 2 134 3 289 1 182 2 
183 1 47 1 233 1 185 2 3 2 95 2 292 3 193 1 340 1 239 2 241 1 298 1 145 1 299 2 301 1 201 2 246 1 63 5 146 1 65 1 248 1 105 1 68 1 70 1 110 1 260 1 259 1 261 1 315 1 357 1 78 1 161 2 83 1 123 3 30 1 364 2 38 1 131 1 368 1 40 1 227 2 132 4 133 2 44 1 134 2 91 1 182 1 
47 1 261 1 161 2 105 1 279 1 172 1 347 1 68 1 43 1 269 1 198 1 257 1 158 2 
21 1 47 2 261 2 202 1 161 2 233 1 105 2 279 2 347 2 84 1 71 1 217 1 28 1 198 1 342 1 158 3 
47 1 261 1 202 1 161 1 64 1 105 1 279 1 347 1 84 1 71 1 198 1 342 1 158 2 
47 1 261 1 233 1 105 1 347 1 149 1 56 1 369 1 180 1 158 1 
47 2 261 2 161 1 105 2 279 1 96 1 347 1 217 1 296 1 327 1 158 1 
21 1 261 3 47 2 161 4 233 1 84 1 217 1 28 1 198 1 327 1 242 1 342 1 202 1 204 1 279 3 105 3 347 3 71 1 158 4 
21 1 261 3 47 2 161 4 48 1 233 1 84 1 217 1 28 1 198 1 327 1 242 1 342 1 202 1 279 3 105 3 347 3 71 1 158 4 
261 1 47 1 315 1 78 1 161 1 233 1 99 1 276 1 198 1 146 1 105 1 279 1 347 1 131 2 40 1 72 1 349 1 289 1 182 2 158 1 
47 1 261 1 202 1 161 1 328 1 105 1 279 1 347 1 53 1 269 1 198 1 342 1 158 2 
99 1 2 1 254 1 31 1 312 1 
92 1 159 1 78 1 2 2 185 1 66 1 38 1 123 2 164 1 99 1 292 2 165 1 166 1 30 1 254 2 239 1 31 2 348 1 312 1 
131 1 352 1 2 1 146 1 16 1 31 1 182 1 189 1 312 1 
166 1 164 1 312 1 
61 1 223 1 249 1 67 1 
138 1 61 1 109 1 14 1 223 1 249 1 11 1 
109 1 307 1 200 1 
61 1 14 1 223 1 5 2 249 1 138 1 109 3 100 1 326 1 213 1 313 1 11 3 
138 1 61 1 109 2 14 1 223 1 249 1 219 1 58 1 11 2 
138 1 87 1 61 1 109 1 14 1 213 1 180 1 149 1 46 1 173 1 11 1 
138 1 61 1 109 1 14 1 249 1 213 1 11 1 
138 1 109 1 14 1 223 1 249 2 213 1 11 1 
0 1 61 1 14 2 249 1 205 1 138 2 109 2 196 1 213 1 11 2 
1 1 34 1 61 2 14 1 223 1 249 1 345 1 138 1 109 3 213 1 58 2 46 1 11 3 
61 1 87 1 14 1 223 1 249 1 149 1 138 1 56 1 109 2 273 1 213 1 58 1 180 2 10 1 11 2 
34 1 103 1 61 2 14 2 223 1 249 1 138 2 109 4 219 1 213 1 58 2 46 1 11 4 
138 1 61 1 109 1 14 1 223 1 249 1 213 1 11 1 
34 1 61 3 14 1 223 2 5 1 249 2 267 1 138 1 109 4 100 1 326 1 58 2 46 1 11 4 
61 1 62 1 14 1 223 1 249 1 138 1 109 2 274 1 213 1 58 1 181 1 11 2 
61 1 14 1 223 1 5 2 249 1 138 1 139 1 109 3 100 1 326 2 213 1 11 3 
61 1 175 1 55 1 
174 1 138 1 109 1 14 1 213 1 11 1 
138 1 61 1 109 2 14 1 223 1 249 1 345 1 58 1 213 1 11 2 
215 1 
138 1 61 1 109 1 14 1 223 1 249 1 213 1 11 1 
61 1 14 1 223 1 5 1 249 1 345 1 138 1 109 3 58 1 213 1 11 3 
34 1 61 1 46 1 267 1 
61 1 249 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (222,255) 240 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (170,191) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (234,273,308) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 46 (17,58,173) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 294 (101,263,322) (42,102,181) (42,102,181) (42,102,181) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (234,273,308) (234,273,308) 147 305 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 27 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (222,255) (222,255) (179,182) 69 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 120 156 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (222,255) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 94 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (222,255) (222,255) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 294 (101,263,322) (101,263,322) (101,263,322) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 56 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 256 93 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (170,191) (170,191) 226 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (222,255) 240 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 303 (25,80) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 303 (25,80) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 303 (207,217) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (170,191) (170,191) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 303 (207,217) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 285 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint; | RETURN | 3274 | return null
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 12144 | if (x) -> if (!x)
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 885 | 8 -> 9
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
298 2 199 1 267 3 12 1 326 2 277 1 104 2 310 1 252 1 143 3 18 1 216 1 65 1 
298 5 3 1 45 2 95 1 267 9 12 1 180 1 277 1 104 2 310 7 18 4 143 9 238 1 65 1 155 1 199 3 76 1 326 2 251 1 291 1 252 1 294 1 216 1 83 1 
298 5 3 1 45 2 95 1 267 9 12 1 180 1 277 1 104 2 310 7 18 4 143 9 238 1 65 1 155 1 199 3 76 1 326 2 251 1 291 1 252 1 294 1 216 1 83 1 
298 5 45 2 95 2 267 9 12 1 180 1 277 2 104 2 310 6 143 9 18 4 146 1 238 1 239 1 65 1 155 1 199 3 201 1 76 2 165 1 326 2 208 1 251 1 252 1 172 1 294 2 216 1 83 1 
298 5 45 2 95 2 267 9 12 1 180 1 277 2 104 2 310 6 143 9 18 4 146 1 238 1 239 1 65 1 155 1 199 3 201 1 76 2 165 1 326 2 208 1 251 1 252 1 172 1 294 2 216 1 83 1 
298 6 45 2 95 2 267 10 12 1 180 1 277 2 104 2 310 7 143 10 18 5 146 1 238 1 239 1 65 1 155 1 199 4 201 1 76 2 165 1 326 2 208 1 251 1 252 1 172 1 294 2 216 1 83 1 
298 4 45 1 95 2 267 7 12 1 180 1 277 2 104 2 310 4 143 7 18 3 146 1 238 1 239 1 65 1 155 1 199 2 201 1 76 2 165 1 326 2 208 1 252 1 172 1 294 2 216 1 83 1 
298 3 155 1 45 2 199 1 95 1 267 4 76 1 12 1 326 1 104 1 251 1 310 3 143 4 18 2 294 1 238 1 216 1 65 1 
298 1 242 1 95 1 267 2 12 1 165 1 326 1 277 1 104 1 57 1 143 2 294 1 214 1 216 1 239 1 65 1 
66 1 0 1 30 1 123 1 133 1 170 1 7 1 47 1 311 1 234 1 9 1 191 1 
62 1 
218 1 259 1 47 2 73 1 234 2 62 1 9 1 269 1 
84 1 86 2 70 1 218 2 260 1 259 1 134 1 47 5 73 1 75 1 9 2 28 1 54 1 327 1 234 5 62 1 189 1 126 2 297 2 
22 2 118 1 62 1 
66 2 0 2 30 2 123 1 133 2 7 2 311 2 
240 1 0 1 66 1 133 1 7 1 136 2 264 1 222 1 167 1 30 1 103 2 123 1 328 2 187 1 311 1 113 1 
66 1 0 1 30 1 123 1 133 1 170 1 7 1 311 1 
30 1 133 1 119 1 311 1 273 1 308 1 
66 1 0 1 30 1 133 1 7 1 311 1 308 1 
218 1 81 1 47 1 234 1 9 1 
66 1 0 1 218 1 133 1 259 1 7 1 47 2 73 1 9 1 122 1 30 1 123 1 170 1 311 1 234 2 62 1 191 1 
218 1 47 1 234 1 
73 1 254 1 62 1 
66 1 0 1 248 1 30 2 1 1 133 2 7 1 311 2 
254 1 
66 1 0 1 30 1 103 1 328 1 133 1 44 1 136 1 311 1 113 1 77 1 
66 4 0 4 248 1 206 1 30 5 133 5 44 2 7 1 119 1 311 5 63 1 77 1 194 1 
66 1 0 1 30 1 133 1 311 1 
66 3 0 3 30 3 44 1 133 3 7 1 311 3 
66 1 0 1 30 1 133 1 311 1 
66 1 0 1 248 1 30 1 1 1 133 1 7 1 311 1 
66 2 0 2 248 1 30 2 133 2 44 1 7 1 311 2 77 1 
66 1 0 1 30 2 133 2 44 1 119 1 311 2 63 1 
66 1 0 1 30 1 133 1 44 1 311 1 77 1 
66 1 0 1 248 1 30 1 133 1 7 1 311 1 
103 1 328 1 136 1 113 1 
103 1 328 1 136 1 113 1 
228 2 4 1 219 1 175 1 34 1 315 1 137 1 151 1 
66 1 0 1 30 1 133 1 106 1 311 1 
31 1 17 1 173 1 
31 1 17 1 46 1 58 1 
31 1 17 1 
31 1 17 1 
46 1 58 1 
46 1 58 1 
46 1 58 1 
153 1 31 1 17 1 
153 1 31 1 17 1 
153 1 31 1 17 1 
31 1 17 1 14 1 
31 1 17 1 14 1 
31 1 17 1 14 1 
0 2 133 2 300 1 47 1 266 1 52 1 227 1 183 1 17 1 232 1 234 1 311 2 66 2 117 1 200 1 202 1 324 1 31 1 30 2 174 1 173 1 296 1 130 1 
157 1 135 1 200 2 47 2 288 1 49 1 202 2 11 1 324 2 15 2 31 2 17 2 186 1 232 3 174 2 234 2 62 1 61 1 130 1 
177 2 57 1 95 2 76 1 307 1 
57 1 95 1 294 1 
177 1 57 1 35 1 95 3 76 2 307 1 
177 1 57 1 95 2 76 1 307 1 115 1 
95 1 294 1 76 1 
85 2 86 1 2 1 218 1 260 2 259 1 5 1 134 1 300 1 301 1 47 5 9 4 52 1 99 1 227 1 234 5 60 1 281 1 62 2 148 1 316 1 22 2 118 1 73 1 26 1 327 1 211 1 126 1 215 1 297 1 
0 1 86 1 218 4 260 2 259 1 133 1 5 1 134 1 7 1 301 1 47 6 9 5 227 2 311 1 234 6 281 1 62 3 191 1 148 1 316 1 193 1 66 1 317 1 22 2 118 1 73 1 26 1 164 1 30 1 327 1 123 1 170 1 81 3 211 1 292 3 126 1 215 1 297 1 
0 1 85 1 86 1 133 1 260 2 134 1 5 1 7 1 47 3 301 1 9 2 99 1 54 1 227 1 311 1 60 1 234 3 62 2 281 1 191 1 148 1 316 1 66 1 22 2 118 1 73 1 26 1 30 1 123 1 170 1 211 1 126 1 297 1 
0 1 85 2 86 1 133 1 260 4 5 2 134 1 7 1 47 4 301 2 9 3 99 1 54 1 227 2 311 1 234 4 60 1 62 3 281 2 191 1 149 1 148 2 316 1 66 1 22 4 320 1 118 2 73 1 26 1 30 1 123 1 170 1 171 1 211 2 126 1 297 1 
309 1 
282 1 323 1 
254 1 111 1 323 1 
205 1 43 1 323 1 
241 1 323 1 
205 1 323 1 
152 1 205 1 43 1 309 1 111 2 212 1 323 3 
41 1 318 1 198 1 220 1 48 2 221 4 159 1 10 2 160 1 247 1 16 3 32 7 231 1 211 1 295 1 112 1 213 1 176 3 
41 2 89 1 219 2 4 2 220 1 301 4 48 3 302 1 221 19 10 3 53 1 16 8 228 4 231 1 313 2 314 1 315 2 148 4 150 1 318 2 71 1 198 2 72 1 159 1 160 2 163 1 247 5 32 31 253 1 175 2 211 5 295 1 329 4 213 2 176 12 82 4 
41 1 4 1 219 1 48 2 221 8 10 3 272 1 226 1 16 4 228 2 231 1 315 1 318 2 284 1 198 1 159 2 160 3 247 1 32 14 175 1 211 3 295 1 213 2 176 6 
41 1 318 1 198 1 220 1 48 2 221 4 159 1 10 2 160 1 247 1 16 3 32 7 231 1 211 1 295 1 213 1 176 3 
41 1 318 1 198 1 220 1 48 2 221 4 159 1 10 2 160 1 247 1 16 3 32 7 231 1 211 1 295 1 213 1 176 3 
257 1 262 1 136 1 223 1 267 1 51 2 323 1 271 2 326 1 205 1 277 2 103 1 104 1 328 1 105 1 108 2 143 1 127 1 128 1 19 1 113 1 114 1 192 1 
42 1 136 1 263 1 95 2 267 1 223 1 51 1 271 1 12 1 225 1 181 1 102 1 103 1 277 1 104 1 57 1 107 1 108 1 143 1 192 1 76 1 326 1 79 1 328 1 35 1 294 1 
42 1 136 1 263 1 95 2 267 1 223 1 51 1 271 1 12 1 181 1 102 1 103 1 277 1 184 1 104 1 57 1 107 1 108 1 143 1 192 1 76 1 326 1 79 1 328 1 35 1 294 1 
298 1 42 1 136 1 263 1 8 1 95 2 267 3 223 1 51 1 271 1 225 1 181 1 103 1 277 1 104 1 57 1 310 2 107 1 142 1 108 1 143 3 114 1 192 1 65 1 76 1 326 1 79 1 328 1 35 1 294 1 216 1 
298 1 136 1 263 1 8 1 95 2 267 2 223 1 51 1 271 1 225 1 181 1 277 1 103 1 57 1 310 2 142 1 108 1 143 2 192 1 65 1 76 1 79 1 328 1 35 1 294 1 216 1 
185 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
86 1 133 1 119 1 47 1 98 1 305 1 245 1 273 1 308 1 30 1 327 1 311 1 234 1 126 1 147 1 297 1 
86 1 257 1 132 1 218 2 133 1 260 1 259 1 134 1 136 2 47 2 223 1 98 1 273 1 305 1 308 1 103 2 311 1 234 2 147 1 113 2 192 1 119 1 289 1 26 1 245 1 323 1 30 1 205 1 327 1 328 2 36 1 126 1 128 1 297 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
218 1 259 1 133 1 47 2 119 1 269 1 98 1 305 1 245 1 273 1 308 1 30 1 311 1 234 2 147 1 
86 1 133 1 119 1 47 1 98 1 305 1 245 1 273 1 308 1 30 1 327 1 311 1 234 1 126 1 147 1 297 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
30 1 133 1 119 1 47 1 311 1 234 1 147 1 98 1 273 1 245 1 305 1 308 1 
219 1 4 1 136 1 221 1 27 1 137 1 276 1 228 2 103 1 328 1 32 1 144 1 34 1 175 1 113 1 315 1 
0 1 4 1 219 1 133 1 7 1 301 1 221 1 268 1 137 1 228 2 311 1 315 1 148 1 66 1 248 1 30 1 209 1 32 1 175 1 34 1 211 1 
116 1 0 1 66 1 4 1 44 1 133 1 219 1 321 1 221 1 268 1 77 1 78 1 137 1 276 1 228 2 30 1 32 2 175 1 311 1 34 1 176 1 315 1 
0 1 66 1 69 1 4 1 44 1 133 1 219 1 136 1 222 1 268 1 77 1 78 1 137 1 182 1 228 2 30 1 103 1 328 1 32 1 175 1 311 1 34 1 255 1 113 1 176 1 315 1 
318 1 219 1 4 1 48 1 221 2 159 1 10 1 137 1 16 1 228 2 32 2 231 1 211 1 34 1 175 1 254 1 295 1 213 1 315 1 151 1 
219 1 4 1 156 1 120 1 221 1 268 1 137 1 228 2 32 2 34 1 175 1 329 1 315 1 82 1 176 1 
219 1 4 1 178 1 301 1 221 1 137 1 228 2 32 1 34 1 175 1 211 1 315 1 151 1 
219 1 4 1 302 1 160 1 137 1 228 2 229 1 32 1 34 1 175 1 315 1 176 1 151 1 
219 1 4 1 301 1 221 1 137 1 228 2 32 1 34 1 175 1 211 1 315 1 151 1 148 1 
219 1 4 1 178 1 301 1 221 1 137 1 228 2 32 1 144 1 34 1 175 1 211 1 315 1 
219 1 4 1 302 1 160 1 137 1 228 2 229 1 32 1 144 1 34 1 175 1 315 1 176 1 
219 1 4 1 301 1 221 1 137 1 228 2 32 1 144 1 34 1 175 1 211 1 315 1 148 1 
219 1 4 1 301 1 221 1 137 1 228 2 32 1 34 1 175 1 211 1 315 1 148 1 
103 1 328 1 136 1 222 1 113 1 
103 1 328 1 136 1 94 1 113 1 
219 1 4 1 301 1 221 1 268 1 137 1 228 2 32 1 34 1 175 1 211 1 315 1 148 1 
103 1 328 1 184 1 136 1 222 1 255 1 
0 1 4 1 219 1 133 1 7 1 301 1 221 1 268 1 137 1 228 2 311 1 315 1 148 1 66 1 248 1 30 1 32 1 175 1 34 1 211 1 332 1 
91 1 4 3 219 3 261 1 93 1 301 7 48 1 302 1 221 27 10 1 97 1 50 1 274 1 16 8 228 6 140 1 231 1 59 1 109 1 313 1 236 3 315 3 21 1 148 7 318 1 195 1 284 1 71 2 159 1 160 2 163 2 247 7 29 1 32 40 253 2 175 3 211 8 295 1 329 4 213 1 256 1 82 4 176 13 
91 1 4 2 219 2 261 2 93 1 301 3 302 1 221 14 97 1 50 1 274 1 16 1 228 4 140 1 141 1 313 1 236 4 315 2 21 2 148 3 195 1 284 1 71 2 160 1 247 1 29 1 32 23 175 2 211 3 329 2 176 9 82 2 256 1 
91 1 4 3 219 3 261 1 93 1 301 7 48 1 302 2 221 28 10 1 97 1 50 1 274 1 16 8 228 6 140 1 141 1 231 1 109 1 313 1 236 4 315 3 21 1 148 7 318 1 195 1 284 1 71 2 159 1 160 3 163 2 247 7 29 1 32 44 253 2 175 3 211 8 295 1 329 4 213 1 256 1 82 4 176 16 
91 1 4 3 219 3 261 1 93 1 301 7 48 1 302 2 221 28 10 1 97 1 50 1 274 1 16 8 228 6 140 1 141 1 231 1 109 1 313 1 236 4 315 3 21 1 148 7 318 1 195 1 284 1 71 2 159 1 160 3 163 2 247 7 29 1 32 44 253 2 175 3 211 8 295 1 329 4 213 1 256 1 82 4 176 16 
91 1 4 2 219 2 261 1 93 1 301 7 48 1 302 1 221 27 10 1 97 1 50 1 274 1 16 7 228 4 140 1 141 1 231 1 313 1 236 4 315 2 21 1 148 7 318 1 195 1 284 1 71 2 159 1 160 2 163 2 247 6 29 1 32 40 253 2 175 2 211 8 295 1 329 4 213 1 256 1 82 4 176 13 
31 1 17 1 135 1 174 1 200 1 288 1 243 1 49 1 202 1 324 1 
173 1 296 1 
31 1 17 1 110 1 174 1 200 1 145 1 202 1 324 1 13 1 
153 1 55 1 
90 1 96 1 14 1 
157 1 135 1 47 1 200 1 288 1 49 1 202 1 324 1 15 1 31 1 17 1 186 1 232 2 174 1 234 1 62 1 61 1 130 1 
157 1 135 1 47 1 200 1 288 1 49 1 202 1 324 1 15 1 31 1 17 1 186 1 232 2 174 1 234 1 62 1 61 1 130 1 
157 1 135 1 47 1 200 1 288 1 49 1 202 1 324 1 15 1 31 1 17 1 186 1 232 2 174 1 234 1 62 1 61 1 130 1 
153 1 90 1 55 1 
153 1 90 1 55 1 
96 1 14 1 
90 1 96 1 14 1 
117 1 266 1 
0 2 133 2 300 1 47 1 9 1 266 1 52 1 15 1 227 1 183 1 17 1 232 1 311 2 234 1 66 2 117 1 157 1 200 1 202 1 244 1 324 1 30 2 31 1 174 1 173 1 296 1 
30 2 133 2 311 2 331 1 40 1 246 1 
131 1 257 1 136 1 223 1 323 1 204 1 205 1 103 1 328 1 108 1 19 1 128 1 113 1 192 1 
131 1 136 1 322 1 263 1 95 2 223 1 76 1 225 1 101 1 79 1 103 1 57 1 328 1 107 1 108 1 35 1 294 1 192 1 
131 1 136 2 322 1 263 1 95 2 223 1 76 1 225 1 101 1 79 1 103 2 57 1 328 2 184 1 107 1 108 1 35 1 294 1 192 1 
87 1 136 1 322 1 263 1 95 2 223 1 76 1 225 1 79 1 103 1 57 1 328 1 107 1 108 1 35 1 294 1 192 1 
290 1 
86 1 260 1 134 1 73 1 75 1 327 1 189 1 126 1 62 1 297 1 
260 2 22 2 5 1 118 1 301 1 211 1 281 1 62 1 148 1 
218 1 259 1 47 1 73 1 234 1 62 1 
86 2 257 1 132 2 218 4 260 2 259 2 134 2 136 4 47 3 223 1 54 1 139 1 230 1 103 4 312 1 234 3 283 2 113 2 192 1 289 1 26 2 323 1 205 1 327 1 328 4 36 1 126 2 128 1 297 2 
86 1 218 1 260 1 259 1 134 1 47 1 234 1 62 2 22 1 118 1 73 1 327 1 126 1 293 1 330 1 39 1 297 1 
152 1 86 1 43 1 136 1 223 1 323 2 306 1 56 1 205 1 327 1 103 1 328 1 282 1 126 1 113 1 192 2 297 1 
86 1 260 5 22 4 134 2 5 3 71 1 118 2 301 2 93 1 50 1 29 1 327 1 140 1 211 2 329 1 62 2 126 1 281 3 256 1 82 1 148 2 297 1 
0 1 86 1 260 1 133 1 134 2 7 1 47 1 226 1 311 1 234 1 237 1 191 1 67 2 66 1 318 1 159 1 160 1 30 1 327 1 123 1 170 1 211 1 126 1 213 1 297 1 
260 1 134 1 73 1 254 1 62 1 75 1 189 1 
66 1 0 1 240 1 30 1 103 1 123 1 328 1 133 1 7 1 136 1 311 1 222 1 113 1 
86 1 132 1 22 4 260 2 5 2 134 1 118 2 48 1 73 2 26 1 327 1 281 2 126 1 62 4 297 1 
117 1 174 1 200 1 49 1 162 1 
319 1 174 1 200 1 
319 1 174 1 200 1 
319 1 174 1 200 1 
174 1 200 1 158 1 
174 1 200 1 158 1 
174 1 200 1 158 1 
174 1 200 1 
31 1 17 1 
318 2 4 1 219 1 284 1 221 5 10 3 159 1 160 2 226 1 16 5 247 2 228 2 32 10 175 1 211 2 213 2 315 1 176 5 
284 1 219 1 4 1 301 1 221 2 247 1 16 1 228 2 32 2 175 1 211 1 315 1 
284 1 219 1 4 1 301 1 302 1 221 2 160 1 16 1 247 1 228 2 32 4 175 1 211 1 176 2 315 1 148 1 
318 1 284 1 219 3 4 3 221 1 10 1 16 2 247 1 228 6 32 3 109 1 175 3 313 1 213 1 176 2 315 3 150 1 
89 1 4 5 219 5 301 4 48 1 221 20 302 3 10 4 53 1 16 10 228 10 231 1 109 1 313 2 235 1 314 1 315 5 150 1 148 4 318 3 284 1 71 1 159 2 160 5 163 1 247 6 32 39 253 1 175 5 211 6 295 1 329 4 213 3 176 19 82 4 
4 1 219 1 93 1 48 1 221 4 10 2 16 2 228 2 231 1 315 1 318 1 284 1 71 1 159 1 160 1 32 8 211 1 175 1 329 1 295 1 213 1 176 4 82 1 
4 3 219 3 93 1 301 4 48 1 221 15 302 3 10 2 50 1 16 5 228 6 140 1 231 1 313 1 235 1 315 3 148 4 318 1 284 1 71 1 159 1 160 4 163 1 247 3 29 1 32 27 253 1 175 3 211 5 295 1 329 2 213 1 256 1 176 12 82 2 
4 3 219 3 93 1 301 2 48 1 221 14 10 3 50 1 226 1 16 8 228 6 140 1 231 1 313 1 235 1 315 3 148 2 318 2 284 1 71 1 159 2 160 3 247 5 29 1 32 22 175 3 211 5 295 1 329 1 213 2 176 8 82 1 256 1 
4 3 219 3 93 1 301 2 48 1 221 10 302 1 10 2 50 1 16 4 228 6 140 1 231 1 235 1 313 1 315 3 148 2 318 1 284 1 71 1 159 1 160 2 247 2 29 1 32 17 175 3 211 3 295 1 329 1 213 1 176 7 82 1 256 1 
4 1 219 1 93 1 48 1 221 4 10 2 16 2 228 2 231 1 315 1 318 1 284 1 71 1 159 1 160 1 32 8 211 1 175 1 329 1 295 1 213 1 176 4 82 1 
4 2 219 2 93 1 301 2 221 7 50 1 16 2 228 4 140 1 313 1 315 2 148 2 284 1 71 1 247 2 29 1 32 9 175 2 211 2 329 1 176 2 82 1 256 1 
4 3 219 3 93 1 301 2 221 7 302 1 50 1 16 1 228 6 140 1 313 1 235 1 315 3 148 2 284 1 71 1 160 1 247 1 29 1 32 11 175 3 211 2 329 1 176 4 82 1 256 1 
4 3 219 3 93 1 301 2 221 7 302 1 50 1 16 2 228 6 140 1 109 1 313 1 315 3 148 2 284 1 71 1 160 1 247 2 29 1 32 11 175 3 211 2 329 1 176 4 82 1 256 1 
318 3 221 3 10 3 159 1 160 1 16 6 247 3 32 7 231 1 211 1 295 2 213 3 176 4 
4 3 219 3 93 1 301 2 221 7 302 1 50 1 16 1 228 6 140 1 109 1 313 1 315 3 148 2 284 1 71 1 160 1 247 1 29 1 32 11 175 3 211 2 329 1 176 4 82 1 256 1 
318 1 219 2 4 2 48 1 221 4 159 1 10 2 160 1 247 1 16 3 228 4 32 8 231 1 211 1 175 2 295 1 313 1 213 1 176 4 315 2 
318 1 48 1 221 3 10 2 159 1 160 1 16 2 32 6 231 1 254 1 211 1 295 1 213 1 176 3 
219 1 4 1 301 1 221 2 228 2 32 2 175 1 211 1 235 1 315 1 148 1 
71 1 301 2 221 6 163 1 247 2 16 2 32 8 253 1 211 2 329 2 82 2 176 2 148 2 
219 2 4 2 301 2 48 1 221 14 10 5 226 1 16 10 228 4 231 1 313 2 315 2 148 2 150 1 318 4 120 1 159 2 160 2 163 1 247 5 32 26 253 1 211 4 175 2 329 2 295 1 213 4 176 12 82 2 
32 1 176 1 82 1 
32 1 221 1 329 1 
197 1 301 1 221 3 247 1 16 1 32 4 211 1 176 1 148 1 
4 2 219 2 93 1 301 2 221 7 50 1 16 2 228 4 140 1 313 1 315 2 148 2 284 1 71 1 247 2 29 1 32 9 175 2 211 2 329 1 176 2 82 1 256 1 
318 1 221 3 159 1 10 1 160 1 16 2 247 1 32 6 211 1 213 1 176 3 
318 1 219 1 4 1 221 1 10 1 247 1 16 2 228 2 32 3 231 1 175 1 295 1 313 1 213 1 176 2 315 1 150 1 
133 1 196 1 119 1 265 1 121 1 168 1 30 1 210 1 311 1 37 1 63 1 
30 1 133 1 119 1 311 1 265 1 63 1 
257 1 43 1 136 2 223 2 323 2 203 1 205 2 103 2 328 2 184 1 124 1 280 1 125 1 128 1 113 1 192 3 
43 1 136 1 287 1 223 1 323 1 203 1 205 1 103 1 328 1 124 1 280 1 125 1 192 2 
136 1 95 1 223 1 79 1 103 1 328 1 57 1 294 1 113 1 192 1 
136 2 74 1 223 1 323 1 225 1 205 1 103 2 184 1 328 2 20 1 192 1 
257 1 43 1 154 1 136 3 223 3 323 4 203 1 205 3 103 3 328 2 184 1 124 1 280 1 125 1 188 1 128 1 113 1 20 1 192 4 
257 1 43 1 136 3 223 3 323 4 203 1 205 3 103 3 328 2 184 1 124 1 279 1 280 1 125 1 188 1 128 1 113 1 20 1 192 4 
0 1 66 1 43 1 44 1 133 1 136 1 303 1 223 1 323 1 205 1 30 1 103 1 328 1 80 1 311 1 113 1 192 1 
0 1 66 1 43 1 44 1 133 1 136 1 303 1 223 1 323 1 205 1 30 1 103 1 328 1 80 1 311 1 283 1 192 1 
0 1 66 1 43 1 44 1 133 1 136 1 303 1 223 1 323 1 205 1 30 1 103 1 207 1 328 1 311 1 283 1 192 1 
0 1 217 1 218 1 43 1 133 1 6 1 7 1 136 1 47 2 223 1 270 1 103 1 311 1 234 2 111 1 282 1 62 1 283 1 191 1 192 1 66 1 24 1 241 1 73 1 323 4 30 1 205 1 123 1 170 1 328 1 
0 1 218 1 43 1 133 1 6 1 7 1 136 1 47 2 223 1 103 1 311 1 234 2 111 1 282 1 62 1 283 1 191 1 192 1 66 1 24 1 241 1 25 1 73 1 323 4 30 1 205 1 123 1 170 1 328 1 
250 1 103 1 328 1 136 1 223 1 192 1 
152 1 258 1 43 1 136 1 223 1 323 1 205 1 103 1 328 1 280 1 125 1 113 1 192 2 
257 1 205 1 103 1 328 1 136 1 254 1 223 1 128 1 113 1 323 1 192 1 
0 1 66 1 43 1 44 1 133 1 136 1 303 1 223 1 323 1 205 1 30 1 103 1 207 1 328 1 311 1 113 1 192 1 
152 1 258 1 43 1 136 1 223 1 323 1 205 1 103 1 328 1 280 1 125 1 283 1 192 2 
66 1 0 1 30 1 133 1 44 1 311 1 
86 2 92 1 218 2 260 1 259 1 134 1 6 1 136 1 179 1 47 3 9 1 103 1 312 1 234 3 62 1 189 1 282 1 111 1 113 1 23 1 25 1 73 1 75 1 323 2 327 2 328 1 126 2 297 2 
152 1 43 1 136 1 223 1 306 1 323 2 250 1 205 1 103 1 309 1 328 1 111 1 192 2 
68 1 33 1 304 1 190 1 
68 1 166 1 285 1 33 1 47 1 234 1 9 1 304 1 129 1 190 1 
68 1 133 1 246 1 30 1 33 1 311 1 190 1 331 1 40 1 
285 1 33 1 129 1 
326 1 298 1 104 1 143 1 267 1 12 1 216 1 65 1 
298 3 199 1 267 4 100 1 165 1 275 1 326 1 104 1 310 2 142 1 143 4 18 1 216 2 65 2 
298 1 3 1 267 2 12 1 325 1 326 1 278 1 104 1 310 1 143 2 216 1 65 1 
298 1 267 3 12 1 224 1 100 2 275 1 165 2 326 1 104 1 143 3 216 1 65 1 
88 1 298 2 286 2 38 1 
326 1 169 1 104 1 143 1 267 1 12 1 
326 1 298 1 104 1 310 1 143 2 267 2 12 1 216 1 65 1 180 1 
299 1 
326 1 298 1 104 1 143 1 267 1 12 1 216 1 65 1 
298 1 254 1 216 1 65 1 
326 1 298 1 104 1 143 1 267 1 216 1 65 1 
277 1 267 1 271 1 
298 1 267 3 12 1 100 1 275 1 165 2 326 1 104 1 233 1 143 3 216 1 65 1 
326 1 298 1 104 1 310 1 45 1 143 2 267 2 216 1 65 1 
326 1 298 1 104 1 95 1 18 1 143 1 294 1 267 1 76 1 238 1 12 1 
326 1 298 1 104 1 143 1 267 1 12 1 216 1 
326 1 104 1 143 1 267 1 12 1 216 2 65 1 
298 1 267 2 12 1 138 1 326 2 249 1 104 2 143 2 216 1 64 1 
298 2 199 1 267 3 12 1 180 1 326 1 104 1 310 2 143 3 18 1 216 1 65 1 83 1 
298 1 95 2 267 2 76 1 12 1 161 1 326 1 57 1 104 1 310 1 143 2 35 1 294 1 216 1 65 1 
326 2 298 2 104 2 251 1 310 2 45 1 199 1 18 1 143 4 267 4 12 1 216 1 65 1 
165 1 326 1 298 1 104 1 310 1 143 3 267 3 12 1 216 1 180 1 65 1 
298 1 142 1 199 1 18 1 
298 1 216 1 

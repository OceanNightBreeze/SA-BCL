#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 226 113 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 226 113 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 157 (53,290) (53,290) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 157 (53,290) (53,290) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 157 (53,290) (53,290) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 157 (53,290) (53,290) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException (258,303) (258,303) 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 30 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 30 59 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 120 219 144 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (258,303) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 254 152 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 35 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 753 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 860 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6130 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1400 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
184 4 87 1 185 1 200 1 226 1 275 1 13 1 325 1 337 1 18 2 72 4 288 1 113 1 364 2 180 2 
184 4 87 1 185 1 200 1 226 1 275 1 13 1 325 1 337 1 18 2 72 4 288 1 113 1 364 2 180 2 
290 1 184 1 87 1 18 1 72 1 53 1 171 1 26 1 157 1 13 1 180 1 
290 1 184 1 87 1 18 1 72 1 53 1 171 1 26 1 157 1 13 1 180 1 
290 1 184 1 87 1 18 1 72 1 53 1 171 1 26 1 157 1 13 1 180 1 
290 1 184 1 87 1 18 1 72 1 53 1 171 1 26 1 157 1 13 1 180 1 
184 4 87 1 225 1 200 2 226 1 154 2 259 1 64 1 337 1 325 3 123 1 247 1 47 1 18 1 72 4 111 1 364 3 180 1 
184 2 87 1 225 1 259 1 13 1 41 1 325 1 361 1 247 1 47 1 18 1 72 2 171 1 345 1 356 1 180 1 
184 3 87 1 200 1 275 1 13 1 337 1 325 2 247 1 47 1 18 2 72 3 364 1 180 2 
35 1 
208 1 268 2 101 1 
128 1 332 2 210 2 341 2 186 1 125 2 253 2 360 2 
78 1 128 1 22 2 80 1 210 3 211 1 163 1 213 1 186 1 106 1 164 2 257 1 349 1 27 1 8 1 328 1 32 1 267 1 173 1 332 2 199 1 301 1 62 1 39 1 159 1 360 2 122 1 45 2 160 1 230 1 248 1 341 2 287 2 125 2 232 1 253 3 181 2 
332 1 109 1 210 1 162 1 341 1 161 1 186 1 125 1 253 1 360 1 
208 1 77 1 86 1 210 1 350 1 158 1 6 1 353 1 55 1 276 1 109 1 341 1 253 1 126 1 
208 1 77 1 86 2 332 1 210 1 350 1 158 1 360 1 353 2 6 1 55 1 109 1 341 1 125 1 253 1 
353 1 86 1 52 1 100 1 33 1 
353 2 208 1 77 1 86 2 116 1 19 1 100 1 33 1 
353 1 86 1 100 1 
86 1 242 1 332 1 162 1 210 1 186 1 360 1 353 1 109 1 341 1 161 1 125 1 33 1 253 1 
208 1 
353 2 208 1 77 1 236 1 86 2 19 1 100 1 33 1 
75 2 208 1 77 1 86 5 174 1 82 1 258 1 302 1 303 1 353 5 29 1 297 1 69 2 221 2 19 1 355 1 33 2 100 2 134 1 
35 1 
332 1 128 2 210 2 175 1 188 1 360 1 341 2 125 1 253 2 
1 1 265 1 61 1 
267 1 128 1 22 1 210 1 211 1 199 1 164 1 257 1 349 1 230 1 248 1 327 1 328 1 253 1 32 1 181 1 
267 1 1 1 22 1 211 1 210 2 199 1 257 1 215 1 164 1 349 1 216 1 360 1 230 1 248 1 341 1 328 1 125 1 32 1 253 2 181 1 
332 1 128 1 210 3 215 2 188 1 216 1 360 3 109 1 341 3 125 3 253 3 34 1 
109 1 210 2 341 2 161 1 125 2 172 1 253 2 360 2 
332 1 128 1 210 3 341 3 215 1 125 3 253 3 360 3 
109 1 210 1 341 1 161 1 125 1 253 1 360 1 
332 1 109 1 210 1 175 1 341 1 125 1 188 1 253 1 360 1 
128 1 22 1 80 1 211 1 210 4 163 1 186 1 257 1 188 1 215 1 106 1 164 1 349 1 216 1 350 1 6 1 353 1 55 1 109 1 8 1 328 1 32 1 267 1 86 1 332 2 199 1 301 1 62 1 39 1 158 1 201 1 159 1 360 3 45 1 160 1 248 1 230 1 341 3 287 2 74 1 125 3 232 1 253 4 181 1 
128 1 15 1 210 2 341 2 125 1 215 1 253 2 126 1 360 1 
208 1 86 1 332 1 210 3 188 1 215 2 216 1 350 1 89 1 158 1 360 3 353 1 6 1 55 1 109 1 341 3 125 3 74 1 253 3 
1 1 332 1 210 2 61 1 215 1 188 1 360 2 341 2 125 2 253 2 
267 1 128 1 22 1 210 1 211 1 199 1 164 1 257 1 349 1 230 1 248 1 328 1 253 1 32 1 181 1 
267 1 128 1 22 1 210 1 211 1 199 1 164 1 349 1 230 1 328 1 142 1 112 1 253 1 32 1 181 1 
1 2 80 1 163 1 130 1 149 1 265 2 8 1 329 1 224 1 173 2 335 1 61 2 62 1 159 1 202 1 271 1 45 4 44 1 160 1 309 1 287 2 232 2 233 1 273 1 
55 1 109 1 210 1 341 1 125 1 172 1 253 1 360 1 
91 1 198 1 
91 1 198 1 
292 1 165 1 
292 1 165 1 
292 1 165 1 
83 1 91 1 198 1 
300 1 91 1 198 1 
292 1 136 1 165 1 107 1 91 2 198 2 
83 1 91 1 198 1 
83 1 91 1 198 1 
245 1 91 1 198 1 
245 1 91 1 198 1 
245 1 91 1 198 1 
128 1 210 2 320 1 214 1 353 1 132 1 198 1 266 1 86 1 300 1 280 1 36 1 283 1 63 1 156 1 91 1 360 2 16 1 341 2 313 1 342 1 125 2 252 1 253 2 
208 1 266 3 86 2 209 1 280 2 36 2 136 1 214 2 91 2 353 2 28 2 17 1 16 2 57 1 342 1 49 1 240 1 21 1 198 2 
225 1 259 1 64 1 
225 1 259 1 361 1 
235 1 270 1 124 1 64 2 259 3 361 1 
235 1 124 1 129 1 64 1 259 2 361 1 
235 2 124 1 64 1 259 2 361 1 
75 1 77 1 208 2 291 2 81 1 3 1 82 1 353 5 30 1 150 2 132 1 221 1 197 2 33 4 86 5 174 2 333 1 268 3 119 1 335 1 281 1 283 1 63 1 302 3 137 1 44 1 69 1 309 1 19 1 233 1 100 1 101 1 
75 2 77 1 208 3 291 2 81 1 52 3 3 1 82 1 217 1 353 7 263 1 30 1 132 2 221 2 197 2 33 5 134 1 86 7 174 2 268 3 335 1 281 1 302 3 43 3 229 1 44 1 69 2 309 1 19 1 233 1 100 4 101 1 
75 1 86 2 333 1 119 1 3 1 302 1 353 2 30 1 69 1 221 1 33 1 134 1 
75 1 86 1 333 1 59 1 119 1 3 1 302 1 353 1 30 1 69 1 221 1 134 1 
35 1 
349 1 207 1 
212 1 
267 1 199 1 349 1 
205 1 349 1 
199 1 349 1 
362 2 267 1 199 1 255 1 349 3 37 1 
182 1 146 1 256 1 352 1 192 2 193 1 169 1 173 4 334 1 335 1 271 3 45 6 272 2 232 2 344 2 233 1 273 3 
182 1 146 1 256 1 352 1 192 2 193 1 169 1 173 4 334 1 335 1 271 5 45 6 250 2 272 2 232 2 344 2 233 1 273 3 
182 1 146 1 256 1 352 1 192 2 193 1 169 1 173 4 334 1 335 1 307 1 271 3 45 6 272 2 232 2 344 2 233 1 273 3 
80 1 323 1 192 1 219 1 193 1 169 2 8 1 173 3 334 1 120 1 159 1 271 2 45 6 286 1 46 1 160 1 250 1 272 1 204 1 287 2 179 1 232 3 344 1 273 1 
182 1 80 2 146 1 256 1 352 1 192 2 193 1 169 1 8 2 173 5 117 1 335 1 159 2 305 1 271 5 45 8 286 1 160 2 250 1 272 2 287 4 232 3 233 1 344 2 273 4 
76 1 22 1 184 2 211 1 164 1 259 2 238 1 325 1 262 1 7 1 131 1 170 1 32 1 87 1 225 1 244 1 64 1 13 1 361 1 92 1 270 1 247 1 47 1 18 1 72 2 251 1 364 1 99 1 180 1 181 1 
76 1 22 1 184 3 211 1 164 1 259 2 238 1 325 1 262 1 7 1 170 1 32 1 88 1 225 1 244 1 64 1 13 1 361 1 92 1 270 1 247 1 47 1 18 1 72 3 140 1 314 1 251 1 364 2 180 1 181 1 
76 1 22 1 184 2 211 1 164 1 259 2 325 1 262 1 7 1 170 1 32 1 88 1 244 1 225 1 13 1 64 1 361 1 270 1 247 1 47 1 72 2 140 1 251 1 364 2 181 1 
183 1 22 1 184 1 211 1 164 1 349 1 108 1 190 1 262 2 170 2 31 1 32 1 241 1 118 1 199 1 244 2 13 2 230 1 18 1 72 1 314 1 180 1 181 1 
76 1 22 1 184 1 211 1 164 1 259 2 238 1 262 1 7 1 131 1 170 1 32 1 87 1 225 1 244 1 64 1 13 1 361 1 92 1 270 1 18 1 72 1 140 1 251 1 180 1 181 1 
194 1 
102 1 105 2 186 1 6 1 55 1 276 1 109 2 239 1 58 1 242 1 332 1 12 1 284 3 158 1 65 1 285 2 68 2 249 1 69 1 341 2 161 1 19 2 125 1 253 2 126 1 75 1 208 1 77 1 162 1 210 2 82 1 350 1 294 5 353 4 221 1 222 2 86 4 174 1 269 1 40 1 90 1 302 1 360 1 42 3 97 1 96 1 178 3 100 5 101 2 
102 1 105 2 186 1 6 1 55 1 276 1 109 2 239 1 58 1 242 1 332 1 12 1 284 3 158 1 65 1 285 2 68 2 249 1 69 1 341 2 161 1 19 2 125 1 253 2 126 1 75 1 77 1 208 1 162 1 210 2 82 1 350 1 294 5 353 4 221 1 222 2 86 4 174 1 269 1 40 1 90 1 302 1 360 1 42 3 97 1 96 1 178 3 100 5 101 2 
274 1 6 1 55 1 276 1 109 1 239 1 58 1 11 1 284 2 158 1 68 2 69 1 341 1 19 2 206 2 253 1 126 1 75 1 77 1 208 1 210 1 82 1 167 2 350 1 294 4 353 4 221 1 222 2 86 4 174 1 268 2 40 1 90 1 302 1 42 2 97 1 96 1 178 2 100 4 
274 1 105 2 3 1 6 1 55 1 276 1 109 1 239 1 58 1 199 1 118 1 152 1 284 2 158 1 285 2 68 2 69 1 341 1 71 1 19 3 253 1 126 1 75 1 77 1 208 2 254 1 22 2 211 1 210 1 82 1 164 2 349 1 350 1 294 4 353 5 31 1 221 1 32 1 222 2 86 5 174 2 268 2 269 1 40 1 302 2 90 1 42 2 230 2 97 1 96 1 178 2 316 1 100 6 101 2 181 2 
236 1 210 1 350 1 294 2 353 3 6 1 55 1 276 1 109 1 239 1 58 1 86 3 284 1 40 1 158 1 90 1 97 1 341 1 19 1 253 1 100 2 126 1 
77 1 208 1 236 1 210 1 350 1 294 3 353 3 6 1 55 1 276 1 109 1 239 1 58 1 86 3 40 1 158 1 90 1 42 1 97 1 341 1 19 1 100 1 253 1 126 1 
236 1 77 1 208 1 210 1 350 1 294 3 353 3 6 1 55 1 276 1 109 1 239 1 58 1 86 3 284 1 40 1 158 1 90 1 42 1 97 1 341 1 178 1 19 1 253 1 100 2 126 1 
236 1 102 1 105 2 186 1 6 1 55 1 276 1 109 2 239 1 58 1 242 1 243 1 332 1 12 1 284 4 158 1 65 1 285 2 68 2 249 1 69 1 341 2 161 1 19 3 125 1 253 2 126 1 75 1 208 1 77 1 162 1 210 2 82 1 350 1 294 4 353 5 221 1 222 2 86 5 174 1 269 1 40 1 90 1 302 1 360 1 42 2 97 1 96 1 178 4 100 7 101 2 
274 1 105 2 6 1 55 1 276 1 109 1 239 1 58 1 284 2 158 1 285 2 68 2 69 1 341 1 19 2 253 1 126 1 75 1 208 2 77 1 210 1 82 1 350 1 294 4 353 4 221 1 222 2 86 4 174 1 268 2 269 1 40 1 90 1 302 1 42 2 97 1 96 1 178 2 100 4 101 2 
75 1 208 1 77 1 102 1 105 2 210 1 82 1 350 1 294 4 353 4 6 1 55 1 276 1 109 1 221 1 239 1 58 1 222 2 86 4 174 1 269 1 284 2 40 1 302 1 158 1 90 1 65 1 42 2 285 2 68 2 96 1 69 1 97 1 249 1 178 2 341 1 19 2 100 4 253 1 101 2 126 1 
75 1 208 1 77 1 102 1 105 2 210 1 82 1 350 1 294 4 353 4 6 1 55 1 276 1 109 1 221 1 239 1 58 1 222 2 86 4 174 1 269 1 284 2 40 1 302 1 158 1 90 1 65 1 42 2 285 2 68 2 96 1 69 1 97 1 249 1 178 2 341 1 19 2 100 4 253 1 101 2 126 1 
75 1 208 1 77 1 102 1 210 1 82 1 167 2 350 1 294 4 353 4 6 1 55 1 276 1 109 1 221 1 239 1 58 1 222 2 86 4 114 1 174 1 11 1 268 2 284 2 40 1 302 1 158 1 90 1 42 2 68 2 96 1 69 1 97 1 138 1 178 2 341 1 19 2 206 2 100 4 253 1 126 1 
130 1 35 1 160 1 80 1 163 1 287 2 8 1 62 1 159 1 
289 1 78 1 317 1 1 6 128 1 80 2 81 2 163 1 25 1 109 1 265 6 298 1 8 2 34 1 173 7 120 2 335 2 61 2 301 1 62 2 159 2 67 1 271 1 45 12 44 2 160 2 309 1 311 1 204 2 287 4 232 5 233 1 273 1 
317 1 78 1 51 1 128 1 22 1 211 1 210 2 80 1 163 1 257 1 164 1 215 1 349 1 216 1 327 1 8 1 328 1 32 1 279 1 267 1 173 1 199 1 61 1 301 1 155 1 62 1 159 1 360 1 45 2 248 1 230 1 160 1 341 1 287 2 125 1 232 1 253 2 181 1 
182 1 317 1 1 6 146 1 4 1 192 2 8 3 328 2 199 2 61 6 335 3 62 3 159 3 160 3 248 2 341 1 287 6 125 1 344 2 253 3 78 1 128 2 22 1 80 3 210 3 211 2 81 2 163 3 256 1 164 1 215 1 257 2 349 2 352 1 216 1 293 2 296 1 265 6 32 2 267 2 173 10 301 1 39 2 360 1 271 5 45 19 44 2 230 1 231 2 309 2 272 1 315 2 48 2 232 9 233 3 181 1 273 5 
103 1 78 1 22 8 210 1 211 2 80 2 163 2 215 1 164 8 349 3 27 2 130 1 261 1 220 1 31 1 8 2 32 2 173 1 118 1 199 2 301 1 62 2 336 1 360 1 159 2 338 1 45 2 230 2 160 2 341 1 140 1 287 4 125 1 232 1 99 1 141 1 253 1 50 1 181 7 
317 1 1 1 80 1 210 1 81 1 163 1 188 1 265 1 8 1 332 1 173 1 61 1 335 1 62 1 66 1 360 1 159 1 271 1 44 1 45 3 160 1 309 1 341 1 287 2 125 1 232 2 233 1 253 1 273 1 
1 1 173 2 80 1 61 1 163 1 335 1 62 1 159 1 202 1 130 1 271 1 45 2 44 1 160 1 250 1 265 1 8 1 287 2 
224 1 1 1 80 1 61 1 163 1 62 1 159 1 130 1 271 1 45 2 160 1 309 1 265 1 8 1 287 2 232 2 233 1 273 1 
1 2 80 1 81 1 163 1 130 1 265 2 8 1 173 2 335 1 61 2 62 1 159 1 271 2 44 1 45 4 160 1 250 1 309 1 287 2 232 2 233 1 273 1 
103 1 1 1 173 2 80 1 61 1 163 1 335 1 62 1 159 1 202 1 271 1 45 2 44 1 160 1 250 1 265 1 8 1 287 2 
224 1 103 1 1 1 80 1 61 1 163 1 62 1 159 1 271 1 45 2 160 1 309 1 265 1 8 1 287 2 232 2 233 1 273 1 
103 1 1 2 173 2 80 1 81 1 61 2 163 1 335 1 62 1 159 1 271 2 45 4 44 1 160 1 309 1 250 1 265 2 8 1 287 2 232 2 233 1 273 1 
1 2 173 2 80 1 81 1 61 2 163 1 335 1 62 1 159 1 271 2 44 1 45 4 160 1 309 1 250 1 265 2 8 1 287 2 232 2 233 1 273 1 
78 1 128 1 22 1 211 1 210 1 80 1 163 1 257 1 164 1 349 1 8 1 328 1 32 1 267 1 173 1 199 1 301 1 62 1 39 1 159 1 45 2 248 1 230 1 160 1 287 2 232 1 253 1 181 1 
78 1 128 1 22 1 211 1 210 1 80 1 163 1 164 1 349 1 8 1 328 1 112 1 32 1 267 1 173 1 199 1 176 1 301 1 62 1 159 1 45 2 230 1 160 1 287 2 232 1 142 1 253 1 181 1 
317 1 1 2 173 2 80 1 81 1 61 2 163 1 335 1 62 1 159 1 271 2 45 4 44 1 160 1 309 1 250 1 265 2 8 1 287 2 232 2 233 1 273 1 
1 2 22 1 211 1 210 1 80 1 81 1 163 1 257 1 164 1 349 1 293 1 265 2 8 1 328 1 32 1 267 1 173 2 199 1 61 2 335 1 62 1 39 1 159 1 271 2 45 4 44 1 248 1 160 1 309 1 250 1 287 2 232 2 233 1 99 1 253 1 273 1 181 1 
317 1 1 1 80 1 210 1 81 1 163 1 188 1 265 1 8 1 332 1 173 2 335 1 61 1 62 1 360 1 159 1 271 1 44 1 45 3 160 1 309 1 250 1 70 1 341 1 287 2 125 1 232 1 233 1 253 1 
104 1 80 2 81 2 187 1 237 1 219 2 326 1 195 1 8 2 223 3 173 9 115 1 117 1 120 2 335 2 282 1 177 1 159 2 271 2 45 19 44 2 160 2 309 2 311 1 204 3 287 4 232 10 233 2 144 1 273 2 
80 3 81 3 187 1 166 1 189 1 326 2 219 2 195 1 8 3 299 1 9 1 223 3 173 13 115 1 117 1 120 2 335 3 282 2 177 1 159 3 271 2 286 2 45 24 44 3 160 3 250 1 309 2 287 6 204 2 73 1 232 11 233 2 144 1 273 1 
80 2 81 2 187 1 166 1 237 1 219 2 326 1 195 1 8 2 223 3 173 9 115 1 117 1 120 2 335 2 282 1 177 1 159 2 271 1 45 19 44 2 160 2 309 2 311 1 204 3 287 4 232 10 233 2 144 1 273 1 
80 2 81 2 187 1 166 1 237 1 219 2 326 1 195 1 8 2 223 3 173 9 115 1 117 1 120 2 335 2 282 1 177 1 159 2 271 1 45 19 44 2 160 2 309 2 311 1 204 3 287 4 232 10 233 2 144 1 273 1 
80 2 146 3 81 5 256 3 25 1 187 1 166 1 352 3 189 1 192 3 219 2 326 1 195 1 8 2 299 1 9 1 223 3 173 27 115 1 117 1 120 3 335 8 282 1 177 1 159 2 271 11 286 1 45 50 44 5 160 2 250 5 309 5 311 1 272 3 204 3 287 4 73 1 232 23 344 3 233 8 144 1 273 6 
317 1 78 1 22 2 211 1 210 2 80 1 319 1 163 1 164 2 349 1 148 1 27 2 8 1 32 1 10 1 173 1 199 1 301 1 62 1 159 1 45 2 340 1 160 1 341 2 287 2 232 1 141 1 253 2 50 1 234 1 181 2 
22 2 211 1 225 1 164 2 351 1 64 1 259 2 361 1 218 1 92 1 7 1 270 1 170 1 140 1 251 1 363 1 99 1 32 1 181 2 
0 1 22 1 211 1 225 1 164 1 351 1 64 1 259 2 361 1 92 1 7 1 270 1 170 1 140 1 251 1 32 1 181 1 
346 1 183 1 22 1 211 1 199 1 118 1 164 1 349 1 218 1 230 1 170 1 31 1 32 1 181 1 
22 1 211 1 225 1 164 1 351 1 64 1 259 2 361 1 218 1 92 1 7 1 270 1 170 1 140 1 251 1 363 1 32 1 181 1 
357 1 
128 1 22 1 80 1 210 3 211 1 163 1 186 1 164 1 106 1 257 1 349 1 8 1 328 1 32 1 267 1 332 2 199 1 301 1 62 1 39 1 159 1 360 2 45 1 160 1 230 1 248 1 341 2 287 2 125 2 232 1 253 3 181 1 
75 1 77 2 208 4 291 2 174 2 268 4 3 1 82 1 302 1 69 1 272 1 221 1 71 1 197 2 101 2 
35 1 
75 1 208 2 77 1 105 1 82 1 353 1 221 1 86 1 174 1 268 1 269 1 302 1 285 1 69 1 19 1 100 1 101 1 
3 2 322 2 324 2 147 2 5 2 54 1 6 2 151 1 197 6 199 3 335 2 153 2 69 4 71 1 205 2 19 3 207 3 75 4 77 2 208 8 291 6 22 3 79 2 211 3 255 1 81 2 82 4 164 3 258 1 349 10 295 2 353 5 221 4 133 1 32 4 267 3 86 5 174 8 268 12 358 2 227 1 303 1 302 9 362 2 306 1 44 2 230 1 309 2 315 2 99 1 233 2 100 5 181 3 101 6 
75 1 208 1 291 1 174 1 268 2 120 1 82 1 302 1 219 1 69 1 221 1 204 1 197 1 144 1 101 1 
75 1 182 1 86 1 82 1 147 1 65 1 353 1 192 1 69 1 221 1 344 1 
75 1 208 1 77 1 174 1 69 1 221 1 82 1 302 1 303 1 
208 1 291 1 174 2 268 2 81 1 335 1 302 1 44 1 309 1 197 1 233 1 101 1 
353 1 208 1 77 1 86 1 19 1 100 1 
75 2 254 1 22 2 211 1 3 1 82 1 164 2 349 1 54 1 353 2 31 1 221 2 32 1 134 1 86 2 174 1 199 1 152 1 118 1 302 1 69 2 230 2 71 1 19 1 100 2 181 2 
264 1 280 1 16 1 
93 1 280 1 16 1 320 1 49 1 
264 1 280 1 16 1 
264 1 280 1 16 1 
228 1 280 1 16 1 
228 1 280 1 16 1 
228 1 280 1 16 1 
280 1 16 1 
91 1 198 1 
182 1 80 2 146 1 256 1 352 1 192 2 8 2 173 5 335 1 159 2 271 5 286 1 45 9 160 2 250 2 272 1 287 4 232 4 344 2 233 1 273 3 
35 1 
173 2 80 1 81 1 335 1 159 1 271 2 44 1 45 4 160 1 309 1 250 1 8 1 287 2 196 1 232 2 233 1 273 1 
173 1 45 2 219 1 120 1 204 1 232 1 
182 1 80 1 146 1 81 2 256 1 25 1 352 1 192 2 298 1 8 1 173 9 335 3 120 2 159 1 271 5 44 2 45 17 286 1 160 1 309 2 250 1 311 1 272 1 204 2 287 2 232 8 344 2 233 3 273 4 
45 1 204 1 232 1 
45 1 173 1 120 1 
173 3 80 1 81 1 335 1 159 1 271 3 45 6 44 1 160 1 250 1 309 1 287 2 8 1 315 1 196 1 232 3 233 1 273 2 
80 1 81 2 189 1 219 1 8 1 299 1 9 1 173 6 117 1 120 1 335 2 159 1 271 2 45 12 44 2 160 1 250 1 309 2 204 1 287 2 73 1 232 6 233 2 144 1 273 1 
173 3 146 1 335 1 192 1 271 2 45 6 250 1 232 3 233 1 344 1 273 1 
173 1 80 1 256 1 352 1 159 1 271 2 192 1 45 3 286 1 160 1 250 1 8 1 287 2 179 1 232 2 344 1 273 1 
182 1 271 1 192 1 344 1 273 1 
173 2 80 1 117 1 335 1 159 1 271 1 44 1 45 2 160 1 250 1 8 1 287 2 
173 2 80 1 117 1 81 1 335 1 159 1 271 2 44 1 45 4 160 1 309 1 250 1 8 1 287 2 232 2 233 1 273 1 
173 1 80 3 117 1 237 1 159 3 192 1 271 2 286 1 45 3 160 3 250 1 8 3 287 6 179 1 232 2 344 1 273 1 
182 1 80 4 146 1 256 1 352 1 237 1 192 3 219 1 8 4 196 1 173 8 117 1 335 2 120 1 159 4 271 8 45 17 286 1 46 1 160 4 250 4 204 1 287 8 179 1 232 9 233 2 344 3 273 4 
182 1 80 2 146 1 81 2 256 1 352 1 189 1 192 2 219 1 8 2 299 1 9 1 173 10 117 1 120 1 335 3 159 2 271 7 286 1 45 16 44 2 160 2 250 3 309 1 272 1 204 1 287 4 73 1 232 6 344 2 233 2 144 1 273 4 
182 1 80 3 146 1 81 2 256 1 352 1 189 1 192 2 219 1 8 3 196 1 299 1 9 1 173 10 117 1 120 1 335 3 159 3 271 5 286 1 45 16 44 2 160 3 250 1 309 1 272 1 204 1 287 6 73 1 232 6 344 2 233 2 144 1 273 4 
182 1 80 3 146 1 81 2 256 1 352 1 189 1 192 2 219 1 8 3 196 1 299 1 9 1 173 9 117 1 120 1 335 3 159 3 271 5 45 18 44 2 286 1 160 3 250 1 309 2 272 1 204 1 287 6 73 1 232 9 344 2 233 3 144 1 273 4 
182 1 80 3 146 1 81 2 256 1 352 1 189 1 192 2 219 1 8 3 196 1 299 1 9 1 173 10 117 1 120 1 335 3 159 3 271 7 286 1 45 16 44 2 160 3 250 3 309 1 272 1 204 1 287 6 73 1 232 6 344 2 233 2 144 1 273 4 
182 1 80 2 146 1 81 2 256 1 352 1 189 1 192 2 219 1 8 2 299 1 9 1 173 10 117 1 120 1 335 3 159 2 271 7 286 1 45 16 44 2 160 2 250 3 309 1 272 1 204 1 287 4 73 1 232 6 344 2 233 2 144 1 273 4 
80 1 81 2 189 1 219 1 8 1 299 1 9 1 173 6 117 1 120 1 335 2 159 1 271 2 45 12 44 2 160 1 250 1 309 2 204 1 287 2 73 1 232 6 233 2 144 1 273 1 
182 1 80 4 146 1 81 2 256 1 352 1 189 1 192 2 219 1 8 4 196 1 299 1 9 1 173 10 117 1 120 1 335 3 159 4 271 5 45 17 44 2 286 2 160 4 250 1 309 1 272 1 204 1 287 8 73 1 232 7 344 2 233 2 144 1 273 4 
80 4 81 3 237 1 189 1 219 1 8 4 299 1 9 1 173 9 117 1 120 1 335 3 159 4 271 6 45 16 44 3 286 2 160 4 250 3 309 2 204 1 287 8 73 1 232 7 233 2 144 1 273 3 
173 3 146 1 335 1 256 1 352 2 192 3 271 6 45 7 250 3 232 4 233 1 344 3 273 3 
182 1 80 4 146 1 81 2 256 1 352 1 237 1 189 1 192 2 219 1 8 4 299 1 9 1 173 10 117 1 120 1 335 3 159 4 271 5 45 17 44 2 286 2 160 4 250 1 309 1 272 1 204 1 287 8 73 1 232 7 344 2 233 2 144 1 273 4 
128 1 15 1 339 1 210 1 341 1 253 1 126 1 
331 1 128 1 210 1 38 1 246 1 339 1 15 1 312 1 341 1 343 1 253 1 126 1 
22 1 35 1 230 1 164 1 181 1 
267 1 128 1 22 1 210 2 211 1 199 1 215 1 164 1 257 1 349 1 360 1 230 1 341 1 328 1 125 1 32 1 253 2 181 1 
128 1 22 1 211 1 210 2 257 1 164 1 215 1 349 3 324 1 350 1 55 1 109 1 133 1 328 1 32 1 267 2 199 2 360 1 341 2 205 1 125 2 253 2 181 1 
128 1 22 2 211 1 210 2 164 2 215 1 349 3 324 1 350 1 55 1 109 1 133 1 328 1 112 1 32 1 330 1 267 2 199 2 360 1 341 2 205 1 125 2 253 2 181 2 
330 1 208 1 77 1 267 1 86 2 22 3 211 1 199 1 348 1 164 3 324 1 349 4 6 1 353 2 362 1 230 1 205 1 133 1 277 1 207 1 32 1 100 1 181 3 
330 1 208 1 77 1 267 1 86 2 22 3 211 1 199 1 164 3 324 1 153 1 349 4 6 1 353 2 362 1 230 1 205 1 133 1 207 1 32 1 100 1 181 3 
22 1 211 1 164 1 32 1 336 1 181 1 
267 1 22 7 23 1 211 2 255 1 199 2 164 7 349 3 336 1 27 1 261 1 338 1 220 1 230 2 354 1 140 1 99 1 85 1 32 3 50 1 181 6 
182 1 317 1 146 1 192 2 8 2 328 1 199 1 335 1 62 2 159 2 248 1 160 2 341 1 287 4 125 1 344 2 253 2 22 1 128 2 80 2 210 2 211 1 163 2 256 1 257 1 164 1 215 1 349 1 293 1 352 1 32 1 267 1 173 3 39 1 360 1 271 3 45 5 272 1 48 1 232 2 99 1 233 1 234 1 181 1 273 3 
75 2 208 1 77 1 22 1 82 2 164 1 258 1 349 2 295 1 5 1 54 1 353 3 6 1 221 2 33 1 86 3 174 1 358 1 153 1 302 1 303 1 362 1 230 1 69 2 19 1 207 1 100 2 181 1 
267 1 22 2 211 1 255 1 199 1 164 2 349 2 336 1 362 1 151 1 99 1 32 2 181 2 
330 1 304 1 22 4 230 1 211 1 199 1 31 1 118 1 164 4 349 1 99 1 32 1 181 4 
127 1 267 1 22 2 2 1 211 1 199 1 164 2 349 1 354 1 133 1 139 1 85 1 32 2 181 2 
22 1 230 1 211 1 225 1 251 1 164 1 259 1 32 1 361 1 181 1 
22 2 211 1 199 1 140 1 164 2 349 1 99 1 32 1 50 1 148 1 181 2 
22 5 211 2 118 1 199 2 164 5 349 3 304 1 261 1 338 1 230 1 31 1 133 1 99 1 32 2 50 1 181 4 
22 5 145 1 211 2 118 1 199 2 164 5 349 3 304 1 338 1 230 1 31 1 133 1 99 1 32 2 50 1 181 4 
267 1 128 1 22 1 210 2 211 1 199 1 215 1 164 1 349 1 360 1 230 1 341 1 328 1 125 1 112 1 32 1 253 2 181 1 
267 1 22 1 23 1 211 1 255 1 199 1 164 1 349 1 354 1 133 1 85 1 32 2 181 1 
347 1 128 1 308 1 24 1 143 1 
208 1 77 1 86 2 347 2 128 1 24 2 350 1 359 1 158 1 6 1 353 2 191 1 55 1 308 1 109 1 74 1 84 1 33 1 143 2 
10 1 347 1 308 1 340 1 210 1 341 1 319 1 253 1 143 1 
191 1 308 1 84 1 
135 1 247 1 184 3 47 1 87 1 18 1 72 3 364 1 356 1 180 1 325 1 
168 1 200 1 325 1 337 1 
247 1 325 1 
35 1 
247 1 184 1 47 1 18 1 72 1 180 1 325 1 
262 1 72 1 13 1 
184 3 318 1 87 1 325 1 260 1 94 1 247 1 47 1 18 1 72 3 180 1 356 2 
247 1 184 2 47 1 18 1 72 2 154 1 364 1 180 1 325 1 
184 1 87 1 225 1 200 1 64 1 259 1 325 1 18 1 72 1 111 1 180 1 
247 1 184 1 87 1 18 1 72 1 180 1 325 1 
247 2 184 1 47 1 87 1 18 1 72 1 180 1 
184 2 60 1 87 1 325 1 14 1 247 1 18 2 72 2 20 1 180 2 
184 1 87 1 185 1 247 1 168 1 47 1 18 1 72 1 180 1 
184 2 87 1 225 1 259 2 64 1 325 1 361 1 203 1 270 1 247 1 47 1 18 1 72 2 364 1 180 1 
184 4 87 1 200 1 154 1 337 1 325 2 123 1 247 1 47 1 18 2 72 4 364 2 180 2 
247 1 184 1 47 1 87 1 18 1 72 1 180 1 325 1 
184 4 318 1 200 1 260 1 337 1 325 3 247 2 168 1 47 2 18 1 72 4 364 2 356 1 180 1 
184 2 87 1 325 1 247 1 95 1 98 1 47 1 18 1 72 2 288 1 364 1 180 1 
184 3 318 1 87 1 325 1 260 2 247 1 110 1 47 1 18 1 72 3 180 1 356 2 
310 1 321 1 278 2 325 2 
184 1 87 1 18 1 121 1 72 1 180 1 
135 1 247 1 184 2 47 1 87 1 18 1 72 2 364 1 180 1 325 1 
56 1 
247 1 184 1 47 1 87 1 18 1 72 1 180 1 325 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) (119,300) (119,300) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) (119,300) (119,300) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) (119,300) (119,300) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) (119,300) (119,300) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 159 (139,219,244,303) 110 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) 9 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 159 15 (123,125) 9 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 282 230 342 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 325 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (168,239) 185 357 195 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 282 133 154 132 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 282 33 154 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 282 133 154 132 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 282 133 154 132 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 282 133 154 132 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 236 97 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 81 275 33 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 282 230 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 282 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 357 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 282 33 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 159 15 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 159 (139,219,244,303) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 159 15 225 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 159 15 229 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 881 | 0 -> 1
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3693 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3570 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONSTANT | 948 | 1 -> 2
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONDITION | 2985 | if (x) -> if (!x)
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 4646 | return null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> ==
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 2 193 1 231 2 15 1 125 1 159 1 307 1 112 1 302 1 21 2 253 2 
231 2 123 1 125 1 38 1 300 1 112 1 302 1 204 1 218 1 21 2 253 3 183 1 41 3 193 1 87 1 327 1 15 1 159 1 307 2 119 1 
231 2 123 1 125 1 38 1 300 1 112 1 302 1 204 1 218 1 21 2 253 3 183 1 41 3 193 1 87 1 327 1 15 1 159 1 307 2 119 1 
231 2 123 1 125 1 38 1 300 1 112 1 302 1 204 1 218 1 21 2 253 3 183 1 41 3 193 1 87 1 327 1 15 1 159 1 307 2 119 1 
231 2 123 1 125 1 38 1 300 1 112 1 302 1 204 1 218 1 21 2 253 3 183 1 41 3 193 1 87 1 327 1 15 1 159 1 307 2 119 1 
41 2 121 1 193 1 231 1 159 1 244 1 110 1 112 1 302 1 251 1 21 1 253 2 
105 1 231 1 249 1 38 1 112 1 204 1 218 1 21 1 253 2 41 2 183 1 193 1 61 1 305 1 307 1 280 1 
121 1 231 2 9 1 125 1 112 1 302 1 21 2 253 3 41 3 193 1 303 1 15 1 307 1 159 1 
121 1 231 2 9 1 125 1 112 1 302 1 21 2 253 3 41 3 193 1 303 1 15 1 307 1 159 1 
44 1 215 1 111 1 171 1 29 1 334 1 273 1 265 1 36 1 43 1 72 1 248 1 164 1 279 1 
318 1 
82 1 44 2 273 2 140 1 294 1 318 1 267 1 29 1 
82 1 44 5 177 1 124 1 29 2 288 2 235 1 60 1 77 2 22 1 273 5 294 1 69 1 318 1 142 2 99 1 267 2 175 1 278 1 
82 1 223 1 318 1 
292 1 
334 2 36 1 25 1 171 2 72 2 43 2 279 2 164 2 
165 1 346 1 213 1 0 2 57 2 108 1 312 2 171 2 350 2 263 1 194 1 117 1 334 2 116 1 4 1 227 1 25 1 72 3 43 2 144 1 74 1 321 1 10 1 269 1 250 1 151 1 95 1 328 1 80 1 304 1 256 2 365 1 36 1 210 1 279 3 164 2 101 1 
334 1 215 1 36 1 111 1 171 1 72 1 43 1 248 1 279 1 164 1 
82 1 44 1 114 1 273 1 215 1 48 1 293 1 318 1 310 1 199 1 298 1 72 1 279 1 164 1 
82 1 44 2 215 1 171 1 114 1 334 1 273 2 48 1 318 1 199 1 310 1 43 1 72 1 164 1 279 1 
44 1 34 1 273 1 267 1 29 1 
82 1 44 2 173 1 273 2 294 1 318 1 267 1 29 1 
44 1 273 1 267 1 
171 1 45 1 221 1 334 1 25 2 72 2 43 1 164 2 279 2 
239 1 127 1 185 1 
346 1 10 1 57 1 269 1 108 1 250 1 350 1 116 1 4 1 256 1 266 1 227 1 25 1 72 1 279 1 101 1 
223 1 25 1 
299 1 337 2 338 1 171 4 45 1 334 1 5 1 293 1 25 1 43 4 72 5 164 5 279 5 336 1 
215 1 216 1 171 2 72 2 43 2 248 1 279 2 164 2 
239 1 346 1 337 1 338 1 10 1 57 1 269 1 108 1 250 1 171 1 350 1 116 1 4 1 256 1 227 1 43 1 72 2 164 1 279 2 101 1 
337 1 334 1 25 1 171 3 72 3 43 3 279 3 164 3 
215 1 171 1 72 1 43 1 248 1 279 1 164 1 
221 1 334 1 215 1 171 1 72 1 43 1 279 1 164 1 45 1 
346 1 285 1 284 1 0 2 215 1 57 1 108 1 312 1 171 3 350 1 263 1 114 1 194 1 117 1 116 1 334 2 4 1 227 1 25 1 199 1 72 4 43 3 337 1 74 1 44 1 338 1 10 1 269 1 250 1 151 1 45 1 328 1 80 1 273 1 304 1 48 1 256 1 365 1 36 1 310 1 210 1 279 4 164 3 101 1 
337 1 5 1 293 1 25 1 171 1 72 2 43 1 279 2 164 2 
337 2 44 1 338 1 285 1 215 1 171 3 45 1 114 1 334 1 273 1 48 1 16 1 318 1 310 1 199 1 43 3 72 3 164 3 279 3 
337 1 239 1 171 2 45 1 127 1 334 1 43 2 72 2 164 2 279 2 
346 1 10 1 57 1 269 1 108 1 250 1 350 1 116 1 4 1 256 1 227 1 25 1 72 1 279 1 101 1 
10 1 57 1 108 1 59 1 250 1 350 1 116 1 4 1 256 1 227 1 51 1 25 1 72 1 279 1 101 1 
165 2 166 1 239 2 168 1 0 2 347 1 312 4 138 1 263 1 117 1 194 2 246 1 67 1 118 1 355 1 74 1 157 1 127 2 328 1 35 1 185 2 304 1 210 1 163 1 
215 1 48 1 216 1 171 1 72 1 43 1 279 1 164 1 
8 2 329 1 186 1 241 2 135 1 200 1 
8 1 241 1 313 1 
8 1 241 1 
8 1 241 1 
329 1 135 1 
329 1 135 1 
329 1 135 1 
8 1 241 1 296 1 
8 1 241 1 296 1 
8 1 241 1 296 1 
8 1 241 1 149 1 
8 1 241 1 149 1 
8 1 241 1 149 1 
8 1 44 1 330 1 241 1 192 1 171 2 39 1 152 1 313 1 349 1 11 1 220 1 353 1 273 1 316 1 208 1 25 1 7 1 72 2 53 1 43 2 211 1 279 2 164 2 
102 1 8 2 44 2 241 2 83 2 234 1 311 1 192 3 39 2 349 2 11 2 220 2 62 1 273 2 276 1 318 1 356 1 200 1 53 1 
183 2 105 1 327 1 224 1 360 2 
183 1 327 1 38 1 
183 1 105 1 38 1 
183 3 105 1 327 2 224 1 358 1 360 1 
183 2 105 1 327 1 224 1 360 1 162 1 
103 1 82 1 242 1 84 1 169 1 170 1 138 1 289 1 288 1 353 1 292 3 88 2 65 2 294 1 118 1 69 2 142 1 267 1 318 2 196 2 44 5 177 3 203 1 29 4 77 1 78 1 157 1 273 5 208 1 35 1 278 1 211 1 19 1 
82 1 242 3 85 1 84 2 169 3 170 1 138 3 289 3 288 2 113 1 353 4 292 9 24 5 65 6 294 1 118 3 69 6 267 6 318 5 142 2 196 6 198 1 44 9 177 8 124 1 148 1 203 2 29 7 77 2 157 3 79 1 184 1 34 5 273 9 35 3 278 1 
82 1 215 1 242 1 84 1 169 2 111 1 171 1 138 1 289 1 288 1 334 1 353 1 88 1 292 4 265 1 65 2 118 1 69 2 318 3 142 1 196 2 72 1 43 1 248 1 44 3 177 3 124 1 203 1 29 2 77 1 78 1 157 1 273 3 35 1 50 1 36 1 279 1 164 1 19 1 
82 1 242 2 84 1 288 1 289 2 138 2 334 1 88 2 292 7 142 1 196 4 43 1 248 1 44 4 203 1 157 2 50 1 164 1 19 1 215 1 169 3 111 1 171 1 113 1 353 2 65 4 265 1 118 2 69 4 318 4 72 1 177 5 124 1 29 3 77 1 78 1 79 1 273 4 184 1 35 2 36 1 279 1 
226 1 
223 1 108 1 295 1 
108 1 236 1 
108 1 227 1 250 1 
14 1 108 1 
108 1 250 1 
108 3 295 2 227 1 250 1 182 1 333 1 
165 4 106 1 91 1 233 1 312 7 40 1 314 1 194 3 157 1 340 1 35 1 354 1 42 1 68 1 355 3 297 1 163 2 176 2 
165 2 194 1 282 1 354 1 209 1 342 1 42 2 137 1 312 3 230 1 176 1 
165 5 0 4 1 1 312 9 40 1 263 2 314 1 117 2 194 4 354 1 42 1 68 1 355 4 176 2 91 1 233 1 326 1 157 1 340 1 328 2 35 1 304 2 308 1 163 3 
165 4 106 1 91 1 233 1 312 7 40 1 314 1 194 3 157 1 340 1 35 1 354 1 42 1 68 1 355 3 163 2 176 2 
165 4 106 1 91 1 233 1 312 7 40 1 314 1 194 3 157 1 340 1 35 1 354 1 42 1 68 1 355 3 163 2 176 2 
231 1 167 2 10 1 331 1 57 1 323 1 108 1 147 1 150 1 250 1 348 2 21 1 253 1 41 1 350 1 116 1 256 1 307 2 160 1 18 2 27 1 73 1 101 1 
105 1 231 1 167 1 10 1 243 1 57 1 38 1 358 1 112 1 270 1 75 1 348 1 21 1 253 1 183 2 41 1 350 1 315 1 116 1 327 1 256 1 90 1 174 1 307 1 343 1 18 1 
105 1 167 1 57 1 243 1 38 1 112 1 348 1 21 1 350 1 41 2 315 1 193 1 116 1 174 1 90 1 197 1 121 1 231 1 10 1 358 1 75 1 253 2 183 2 327 1 305 1 256 1 307 1 343 1 18 1 280 1 
105 1 167 1 57 1 243 1 38 1 348 1 21 1 350 1 41 3 193 1 116 1 174 1 90 1 121 2 231 1 10 1 358 1 270 1 150 1 75 1 253 3 183 2 327 1 305 1 256 1 49 1 307 1 343 1 18 1 280 1 
105 1 167 1 57 1 38 1 348 1 350 1 41 2 193 1 116 1 174 1 90 1 121 2 10 1 358 1 270 1 75 1 253 2 183 2 327 1 305 1 256 1 49 1 307 1 18 1 280 1 
207 1 
82 1 37 2 240 1 84 1 332 1 288 1 292 2 293 1 294 3 142 1 298 1 199 1 143 1 44 5 10 1 146 1 147 1 202 1 250 1 12 1 256 2 48 1 98 1 309 2 310 1 345 2 100 2 101 2 164 1 214 2 57 2 215 1 108 1 169 2 259 2 350 2 114 1 116 1 352 4 23 1 69 2 318 2 267 6 27 1 72 1 177 2 178 1 179 1 77 1 273 5 187 1 238 2 131 1 278 1 279 1 
240 1 215 1 114 1 352 2 140 1 293 1 294 1 267 2 199 1 298 1 72 1 143 1 44 3 178 1 146 1 273 3 48 1 187 1 310 1 279 1 164 1 345 1 
82 1 37 1 240 1 215 1 114 1 352 3 140 1 293 1 294 1 267 1 318 1 199 1 298 1 72 1 143 1 44 3 178 1 146 1 273 3 48 1 187 1 310 1 279 1 164 1 
82 1 37 1 240 1 215 1 114 1 352 3 140 1 293 1 294 1 267 2 318 1 199 1 298 1 72 1 143 1 44 3 178 1 146 1 273 3 48 1 187 1 309 1 310 1 279 1 164 1 345 1 
82 1 37 2 240 1 332 1 288 1 334 1 140 1 293 1 294 3 142 1 199 1 298 1 43 1 248 1 143 1 44 5 93 1 146 1 48 1 98 1 309 4 310 1 345 4 164 2 100 2 107 1 214 2 215 2 169 2 111 1 259 2 171 1 114 1 352 4 172 1 265 1 66 1 69 1 318 1 267 7 72 2 177 1 178 1 126 1 77 1 273 5 187 1 36 1 278 1 238 2 279 2 
82 1 37 2 240 1 214 2 215 1 169 2 332 1 259 2 288 1 114 1 352 4 23 1 292 2 293 1 294 2 69 1 318 2 267 4 142 1 298 1 199 1 72 1 143 1 44 4 177 1 178 1 146 1 77 1 273 4 48 1 98 1 187 1 309 2 238 2 278 1 310 1 345 2 100 2 164 1 279 1 
82 1 37 2 107 1 240 1 214 2 215 1 169 2 332 1 259 2 288 1 114 1 352 4 293 1 294 2 66 1 69 1 318 1 267 4 142 1 199 1 298 1 72 1 143 1 44 4 177 1 93 1 178 1 146 1 77 1 273 4 98 1 48 1 187 1 309 2 238 2 310 1 278 1 345 2 100 2 279 1 164 1 
82 1 37 2 107 1 240 1 214 2 215 1 169 2 332 1 259 2 288 1 114 1 352 4 293 1 294 2 66 1 69 1 318 1 267 4 142 1 199 1 298 1 72 1 143 1 44 4 177 1 93 1 178 1 146 1 77 1 273 4 98 1 48 1 187 1 309 2 238 2 310 1 278 1 345 2 100 2 279 1 164 1 
44 2 240 1 215 1 178 1 146 1 325 1 114 1 352 2 273 2 48 1 293 1 187 1 310 1 298 1 199 1 72 1 143 1 164 1 279 1 
82 1 37 3 240 1 332 1 288 1 334 1 293 1 294 2 142 1 298 1 199 1 43 1 248 1 143 1 44 4 93 1 146 1 48 1 98 1 309 3 310 1 345 3 164 2 100 2 107 1 214 2 215 2 169 2 111 1 259 2 171 1 114 1 352 5 265 1 66 1 69 1 267 5 318 1 72 2 177 1 178 1 126 1 77 1 273 4 187 1 36 1 278 1 238 2 279 2 
82 1 37 3 240 1 332 1 288 1 334 1 293 1 294 2 142 1 298 1 199 1 43 1 248 1 143 1 44 4 93 1 146 1 48 1 98 1 309 3 310 1 345 3 164 2 100 2 107 1 214 2 215 2 169 2 111 1 259 2 171 1 114 1 352 5 265 1 66 1 69 1 267 5 318 1 72 2 177 1 178 1 126 1 77 1 273 4 187 1 36 1 278 1 238 2 279 2 
82 1 37 2 240 1 214 2 215 1 332 1 288 1 351 2 115 2 114 1 352 4 23 1 292 2 293 1 294 2 69 1 318 1 267 4 142 1 298 1 199 1 72 1 143 1 44 4 177 1 178 1 146 1 77 1 273 4 48 1 187 1 309 2 130 1 278 1 310 1 345 2 100 2 164 1 279 1 
54 1 166 1 165 1 57 8 0 4 108 3 312 2 171 1 290 1 350 8 263 2 116 2 117 2 194 1 6 1 197 1 72 1 43 1 27 1 28 1 337 1 144 1 74 2 321 2 10 2 147 1 270 1 361 1 250 2 181 1 47 1 328 2 256 7 304 2 365 1 210 2 279 1 164 1 101 2 
239 1 165 1 0 2 242 1 312 3 171 1 138 1 263 1 334 1 117 1 194 2 118 1 355 1 43 1 72 1 74 1 45 1 206 1 127 1 157 1 328 1 185 1 35 1 304 1 161 1 210 1 163 1 164 1 279 1 
239 1 166 1 165 3 0 2 312 6 314 1 263 1 117 1 194 3 223 1 68 1 355 2 25 2 176 1 74 1 91 1 233 1 127 1 340 1 157 1 328 1 35 1 185 1 304 1 210 1 163 2 
165 1 239 3 357 1 74 1 0 2 137 1 312 2 263 1 117 1 194 1 328 1 185 3 304 1 195 1 209 1 161 1 210 1 
346 1 165 1 57 1 0 2 108 1 312 2 171 1 350 1 263 1 116 1 117 1 194 1 4 1 266 1 227 1 141 1 25 1 72 2 43 1 337 1 144 1 74 1 338 1 10 1 269 1 359 1 250 1 339 1 127 1 328 1 256 1 304 1 365 1 161 1 210 1 101 1 279 2 164 1 
239 7 0 6 242 2 138 2 40 4 291 2 194 10 4 2 43 1 144 1 337 1 91 1 338 1 10 2 250 2 155 2 340 1 157 3 256 3 304 3 255 2 161 1 210 3 163 4 101 1 164 1 346 2 165 10 56 1 57 3 108 2 312 20 171 1 350 3 314 1 263 3 117 3 116 2 68 1 118 2 227 2 25 2 355 8 72 3 176 1 319 1 74 3 233 1 269 2 270 1 180 1 271 2 127 7 328 3 80 2 35 3 185 7 365 1 279 3 
239 1 166 1 165 2 74 1 0 2 347 1 312 2 40 1 263 1 127 1 117 1 157 1 328 1 185 1 304 1 118 1 355 1 210 1 
239 1 166 1 74 1 0 2 312 2 138 1 263 1 127 1 117 1 194 2 328 1 185 1 35 1 304 1 246 1 355 1 210 1 163 1 
165 2 166 1 239 2 242 1 0 2 312 4 138 1 40 1 263 1 117 1 194 2 118 1 355 2 74 1 157 1 127 2 328 1 185 2 35 1 304 1 210 1 163 1 
239 1 165 2 74 1 0 2 347 1 312 2 40 1 263 1 127 1 47 1 117 1 157 1 328 1 185 1 304 1 118 1 355 1 210 1 
239 1 74 1 0 2 312 2 138 1 263 1 127 1 47 1 117 1 194 2 328 1 185 1 35 1 304 1 246 1 355 1 210 1 163 1 
165 2 239 2 242 1 0 2 312 4 138 1 40 1 263 1 117 1 194 2 118 1 355 2 74 1 157 1 47 1 127 2 328 1 185 2 35 1 304 1 210 1 163 1 
165 2 239 2 242 1 0 2 312 4 138 1 40 1 263 1 117 1 194 2 118 1 355 2 74 1 157 1 127 2 328 1 185 2 35 1 304 1 210 1 163 1 
165 1 346 1 57 1 0 2 108 1 312 2 350 1 263 1 116 1 117 1 194 1 4 1 227 1 25 1 72 1 144 1 74 1 10 1 269 1 250 1 80 1 328 1 256 1 304 1 365 1 210 1 101 1 279 1 
165 1 57 1 0 2 108 1 312 2 59 1 350 1 263 1 116 1 117 1 194 1 4 1 227 1 25 1 72 1 144 1 74 1 10 1 250 1 328 1 256 1 304 1 365 1 51 1 237 1 210 1 101 1 279 1 
165 2 239 2 242 1 0 2 312 4 138 1 40 1 263 1 117 1 194 2 118 1 355 2 74 1 157 1 127 2 328 1 185 2 35 1 304 1 161 1 210 1 163 1 
239 2 165 2 346 1 57 1 0 2 242 1 108 1 312 4 138 1 40 1 350 1 291 1 263 1 194 2 116 1 117 1 4 1 118 1 227 1 355 2 197 1 72 1 74 1 10 1 269 1 250 1 127 2 157 1 80 1 328 1 35 1 185 2 256 1 304 1 210 1 163 1 279 1 
165 2 239 1 0 2 242 1 312 3 171 1 138 1 40 1 263 1 194 1 334 1 117 1 63 1 118 1 355 1 43 1 72 1 74 1 45 1 157 1 127 1 328 1 35 1 185 1 304 1 161 1 210 1 164 1 279 1 
165 2 212 1 132 1 145 1 133 1 282 1 0 2 137 1 312 4 154 1 326 1 263 1 194 2 117 1 328 1 304 1 209 1 
165 4 212 1 132 1 133 2 145 2 282 2 0 2 137 2 312 8 154 2 326 1 263 1 117 1 194 4 33 1 328 1 304 1 209 2 
165 2 212 1 132 1 145 1 133 1 282 1 0 2 137 1 312 4 154 1 326 1 263 1 194 2 117 1 328 1 304 1 209 1 
165 2 212 1 132 1 145 1 133 1 282 1 0 2 137 1 312 4 154 1 326 1 263 1 194 2 117 1 328 1 304 1 209 1 
165 2 212 1 132 1 145 1 133 1 282 1 0 2 137 1 312 4 154 1 326 1 263 1 194 2 117 1 328 1 304 1 209 1 
102 1 8 1 220 1 241 1 344 1 356 1 39 1 200 1 349 1 11 1 
316 1 313 1 
8 1 220 1 232 1 241 1 20 1 39 1 261 1 349 1 11 1 
296 1 362 1 
262 1 186 1 149 1 
102 1 8 1 44 1 241 1 83 1 234 1 311 1 192 2 39 1 349 1 11 1 220 1 273 1 276 1 318 1 356 1 200 1 53 1 
102 1 8 1 44 1 241 1 83 1 234 1 311 1 192 2 39 1 349 1 11 1 220 1 273 1 276 1 318 1 356 1 200 1 53 1 
102 1 8 1 44 1 241 1 83 1 234 1 311 1 192 2 39 1 349 1 11 1 220 1 273 1 276 1 318 1 356 1 200 1 53 1 
186 1 296 1 362 1 
186 1 296 1 362 1 
262 1 149 1 
262 1 186 1 149 1 
330 1 152 1 
83 1 241 1 330 1 192 1 171 2 39 1 313 1 349 1 220 1 353 1 316 1 25 1 72 2 7 1 43 2 8 1 44 1 234 1 29 1 152 1 11 1 273 1 208 1 306 1 279 2 211 1 164 2 
165 1 57 2 0 2 108 1 312 2 217 1 86 1 350 2 263 1 116 1 117 1 194 1 72 2 28 1 144 1 74 1 321 2 10 1 250 1 94 1 361 1 31 1 328 1 304 1 256 2 365 1 52 1 161 1 210 1 279 2 164 2 
10 1 57 1 108 1 147 1 250 1 348 1 350 1 116 1 363 1 13 1 256 1 27 1 101 1 73 1 
105 1 10 1 57 1 243 1 38 1 358 1 270 1 75 1 348 1 272 1 183 2 350 1 116 1 327 1 13 1 256 1 90 1 228 1 
105 1 10 1 57 2 243 1 38 1 358 1 270 1 75 1 348 1 272 1 183 2 350 2 116 1 327 1 13 1 256 2 90 1 228 1 197 1 
105 1 10 1 57 1 243 1 38 1 358 1 270 1 75 1 348 1 183 2 350 1 96 1 116 1 327 1 256 1 90 1 228 1 
156 1 
82 1 177 1 288 1 60 1 77 1 69 1 142 1 318 1 175 1 278 1 
177 2 242 1 169 2 289 1 138 1 157 1 292 4 35 1 65 2 118 1 50 1 69 2 318 2 196 2 
82 1 44 1 273 1 294 1 318 1 267 1 
57 4 108 1 84 2 109 1 288 2 350 4 116 1 222 1 294 2 70 2 69 2 142 2 267 4 27 1 44 3 177 2 124 1 10 1 202 1 147 1 250 1 77 2 12 1 273 3 256 4 278 1 131 2 257 1 101 2 
82 1 177 1 223 1 69 1 318 1 175 1 60 1 
82 1 169 1 259 1 288 1 292 1 294 1 69 1 142 1 318 2 267 1 44 1 177 1 77 1 273 1 98 1 238 1 278 1 
10 2 57 1 108 1 301 1 250 1 288 1 182 1 77 1 350 1 97 1 116 1 256 1 236 1 227 1 142 1 278 1 101 1 
82 1 134 1 282 1 242 1 169 3 137 1 288 2 138 1 292 6 294 1 65 4 118 1 69 3 267 1 142 2 318 4 196 4 44 1 122 1 177 5 77 2 157 1 33 1 273 1 81 1 35 1 275 1 209 1 50 1 17 1 278 2 
215 1 111 1 171 1 289 1 288 1 314 1 334 1 265 1 69 2 142 1 72 1 43 1 248 1 44 1 91 1 177 2 93 1 46 1 77 1 340 1 157 2 273 1 35 1 50 2 36 1 278 1 279 1 164 1 
346 1 0 2 57 1 108 1 312 1 171 2 350 1 263 1 194 1 117 1 334 2 116 1 4 1 227 1 25 1 72 3 43 2 74 1 10 1 269 1 151 1 250 1 328 1 80 1 256 1 304 1 365 1 36 1 210 1 101 1 279 3 164 2 
82 1 177 1 84 1 169 1 288 1 77 1 292 2 69 1 142 1 318 2 196 1 278 1 131 1 
260 1 356 1 39 1 152 1 11 1 
322 1 39 1 11 1 
322 1 39 1 11 1 
322 1 39 1 11 1 
39 1 205 1 11 1 
39 1 205 1 11 1 
39 1 205 1 11 1 
39 1 11 1 
8 1 241 1 
165 5 91 1 0 2 312 10 46 1 40 2 263 1 326 1 314 2 117 1 340 2 194 5 157 2 328 1 35 2 304 1 355 5 163 3 
165 2 0 2 312 2 40 1 326 1 263 1 117 1 157 1 328 1 304 1 118 1 355 1 
165 2 0 2 242 1 312 4 138 1 40 1 326 1 263 1 194 2 117 1 157 1 328 1 35 1 304 1 118 1 355 2 163 1 
165 1 0 6 1 1 312 3 40 1 326 1 263 3 314 1 254 1 194 2 117 3 340 1 328 3 304 3 247 1 355 2 163 1 
165 1 282 1 0 6 58 1 137 1 312 2 326 1 263 3 117 3 194 1 328 3 304 3 209 1 247 1 230 1 
165 1 263 1 326 1 194 1 117 1 33 1 328 1 282 1 0 2 304 1 209 1 137 1 312 2 
165 1 282 1 0 4 58 1 137 1 312 2 263 2 326 1 117 2 194 1 33 1 328 2 304 2 209 1 
165 9 134 1 282 1 0 6 242 2 58 1 137 1 1 1 312 19 138 2 40 1 314 1 263 3 194 10 117 3 68 1 118 2 355 4 176 1 91 1 233 1 326 1 340 1 157 3 33 1 328 3 81 1 35 3 304 3 209 1 275 1 17 1 163 3 
165 1 263 1 326 1 194 1 117 1 33 1 328 1 282 1 0 2 304 1 209 1 137 1 312 2 
165 1 263 1 326 1 194 1 117 1 33 1 328 1 282 1 0 2 304 1 209 1 137 1 312 2 
165 6 134 1 282 1 0 2 242 2 137 1 312 12 138 2 40 1 263 1 194 6 117 1 118 2 355 2 326 1 157 2 33 1 328 1 35 2 81 1 304 1 209 1 275 1 17 1 163 1 
165 1 282 1 0 4 58 1 137 1 312 2 326 1 263 2 117 2 194 1 33 1 328 2 304 2 209 1 
165 1 326 1 263 2 194 1 117 2 33 1 328 2 282 1 0 4 304 2 209 1 137 1 312 2 247 1 
165 3 91 1 233 2 312 7 40 3 314 3 194 4 340 3 157 1 35 1 68 1 355 6 163 3 
165 1 326 1 263 2 194 1 117 2 33 1 328 2 282 1 0 4 304 2 209 1 137 1 312 2 247 1 
165 4 91 1 0 4 233 1 1 1 312 8 40 1 263 2 314 1 157 1 194 4 117 2 340 1 328 2 35 1 304 2 68 1 355 3 163 2 176 1 
165 3 91 1 233 1 312 6 314 1 194 3 340 1 157 1 223 1 35 1 68 1 355 2 163 2 176 1 
165 2 0 2 242 1 58 1 312 4 138 1 40 1 263 1 194 2 117 1 157 1 328 1 35 1 304 1 118 1 355 2 163 1 
165 1 194 1 282 1 209 1 137 1 312 2 
165 1 357 1 194 1 209 1 137 1 312 2 
194 1 137 1 312 1 
165 1 209 1 312 1 
165 3 0 2 242 1 58 1 312 6 138 1 40 1 263 1 117 1 194 3 157 1 328 1 35 1 304 1 255 1 118 1 355 3 163 2 
165 1 263 1 326 1 194 1 117 1 33 1 328 1 282 1 0 2 304 1 209 1 137 1 312 2 
165 3 91 1 312 6 40 1 314 1 157 1 194 3 340 1 35 1 355 2 163 1 
165 1 233 1 0 2 1 1 312 3 40 1 314 1 263 1 340 1 254 1 194 2 117 1 328 1 304 1 68 1 355 2 163 1 
5 1 158 1 293 1 25 1 72 1 279 1 164 1 
104 1 320 1 5 1 264 1 158 1 293 1 317 1 25 1 26 1 72 1 279 1 164 1 
10 1 57 4 258 1 190 1 108 1 147 1 250 1 350 4 116 1 256 4 197 1 27 1 101 1 
268 1 10 2 57 2 108 1 250 1 180 1 350 2 116 1 256 2 89 1 70 1 227 1 335 1 188 1 
183 1 105 1 350 1 116 1 10 1 57 1 256 1 38 1 75 1 101 1 
10 1 57 2 108 1 270 1 250 1 350 2 31 1 116 1 256 2 197 1 28 1 
54 1 10 2 57 5 258 1 108 3 147 1 250 2 350 5 116 2 256 4 6 1 70 1 197 1 27 1 101 1 28 1 
10 2 57 5 258 1 108 3 147 1 250 2 350 5 116 2 256 4 6 1 70 1 197 1 27 1 101 1 120 1 28 1 
350 1 116 1 223 1 10 1 57 1 256 1 108 1 147 1 250 1 27 1 101 1 
337 1 346 1 10 1 57 1 108 1 250 1 171 1 350 1 116 1 4 1 256 1 227 1 25 1 43 1 72 2 164 1 279 2 101 1 
337 1 346 1 10 1 215 1 57 1 108 3 191 1 250 2 171 2 350 1 114 1 116 1 4 1 14 1 48 1 256 1 227 2 70 1 25 1 43 1 72 2 164 2 279 2 
57 2 215 1 190 1 108 3 191 1 59 1 171 2 350 2 114 1 116 1 4 1 70 1 227 2 25 1 72 2 43 1 337 1 10 1 250 2 14 1 256 2 48 1 279 2 164 2 
82 1 215 1 57 1 108 2 136 1 111 1 171 1 350 1 334 1 265 1 295 1 70 1 267 1 318 1 72 1 43 1 248 1 44 2 273 2 256 1 236 1 36 1 310 1 279 1 164 1 
82 1 44 2 10 1 57 3 190 1 108 4 324 1 191 1 250 1 350 3 116 1 273 2 14 1 256 3 227 1 70 1 236 1 295 1 318 1 267 1 310 1 101 1 
350 1 116 1 10 1 57 1 256 1 181 1 
54 1 321 1 268 1 10 3 57 7 287 1 108 3 270 1 250 2 290 1 181 1 182 1 350 7 116 2 256 6 6 1 227 1 197 1 188 1 28 1 101 2 
239 1 0 4 291 1 194 3 4 1 197 1 43 1 337 1 91 1 10 1 94 1 250 1 155 1 340 1 157 1 256 1 304 2 161 1 210 2 164 1 163 2 346 1 165 3 57 1 108 1 312 6 171 1 350 1 263 2 314 1 117 2 116 1 68 1 227 1 355 2 25 2 72 2 176 1 74 2 269 1 233 1 127 1 80 1 328 2 35 1 185 1 279 2 
82 1 283 1 57 1 108 2 288 2 60 1 350 1 245 1 222 1 294 1 69 1 295 1 318 1 142 2 267 2 175 1 44 3 177 1 324 1 29 1 77 2 273 3 364 1 256 1 236 1 278 2 310 1 101 1 
10 2 57 1 108 1 301 1 250 1 181 1 182 1 350 1 116 1 256 1 226 1 295 1 227 1 
337 1 10 1 57 1 108 1 250 1 171 1 59 1 350 1 116 1 4 1 256 1 227 1 25 1 43 1 72 2 164 1 279 2 101 1 
268 1 10 2 57 1 287 1 108 1 250 1 182 1 350 1 116 1 256 1 70 1 227 1 188 1 
55 1 71 1 25 1 3 1 189 1 
82 1 55 1 44 2 285 1 215 1 2 1 29 1 3 2 114 1 273 2 129 1 48 1 277 1 71 2 318 1 25 1 310 1 199 1 189 2 
55 1 52 1 217 1 72 1 86 1 3 1 279 1 164 1 189 1 
55 1 129 1 277 1 
41 1 193 1 231 1 305 1 112 1 21 1 280 1 253 1 
41 2 121 1 193 1 231 1 15 1 159 1 302 2 21 1 253 2 
121 1 231 1 112 1 21 1 253 2 219 1 41 2 193 1 303 1 139 1 305 1 280 1 
231 1 281 2 112 1 153 1 21 1 218 2 253 3 30 1 41 3 193 1 305 1 280 1 
193 2 128 1 286 1 76 2 
41 1 32 1 231 1 112 1 21 1 253 1 
41 2 121 1 193 1 231 1 305 1 112 1 21 1 280 1 252 1 253 2 
201 1 
41 1 193 1 231 1 305 1 112 1 21 1 280 1 253 1 
193 1 223 1 305 1 280 1 
41 1 193 1 231 1 305 1 21 1 280 1 253 1 
167 1 307 1 253 1 
231 1 281 1 112 1 21 1 153 1 218 2 253 3 41 3 193 1 64 1 305 1 280 1 
41 2 121 1 193 1 231 1 305 1 251 1 21 1 280 1 253 2 
41 1 193 1 231 1 159 1 244 1 112 1 302 1 21 1 253 1 
41 1 193 1 231 1 112 1 21 1 280 1 253 1 
41 1 231 1 305 1 112 1 21 1 280 2 253 1 
41 1 92 1 231 1 274 1 112 1 21 1 253 1 
41 2 121 1 193 1 231 1 225 1 15 1 159 1 112 1 302 1 21 1 252 1 253 2 
105 1 121 1 231 1 38 1 358 1 112 1 21 1 253 2 183 2 41 2 193 1 327 1 341 1 305 1 280 1 
41 2 121 1 193 1 231 1 15 1 159 1 112 1 302 1 251 1 229 1 21 1 253 2 
41 3 121 1 193 1 231 1 305 1 112 1 218 1 21 1 252 1 280 1 253 3 
41 1 121 1 193 1 15 1 159 1 253 1 
193 1 280 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (144,256) 190 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (31,129) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (93,119,264) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (31,129) (31,129) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException (31,129) (31,129) 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 186 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (31,129) (31,129) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (93,119,264) (93,119,264) 174 331 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 186 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 143 49 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (144,256) (144,256) (172,287) 83 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 318 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (144,256) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (144,256) (144,256) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (31,129) (31,129) 230 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (144,256) 190 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.StringIndexOutOfBoundsException 215 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.StringIndexOutOfBoundsException 215 102 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 68 (3,204) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 68 (3,204) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 68 (40,297) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 68 (40,297) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 2
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7110 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> 0
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1232 | stmt -> ;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1674 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 1
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | RETURN | 1647 | return null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 4987 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | STATEMENT | 2170 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 291 2 43 4 136 1 301 1 300 2 302 1 260 1 307 5 52 1 145 1 308 1 15 2 104 2 14 1 108 2 109 3 57 2 60 1 313 1 319 9 162 1 284 9 176 1 132 2 209 1 336 6 252 1 
44 1 291 2 43 4 136 1 301 1 300 2 302 1 260 1 307 5 52 1 145 1 308 1 104 2 15 2 14 1 108 2 109 3 57 2 60 1 313 1 319 9 162 1 284 9 176 1 132 2 209 1 336 6 252 1 
44 1 291 2 43 5 136 1 301 1 300 2 302 1 260 1 307 6 52 1 145 1 308 1 104 2 15 2 14 1 108 2 109 4 57 2 60 1 313 1 319 10 162 1 284 10 176 1 132 2 209 1 336 7 252 1 
44 1 291 2 43 3 136 1 301 1 300 2 302 1 260 1 307 4 52 1 145 1 308 1 104 2 15 2 14 1 108 2 109 2 57 1 313 1 319 7 162 1 284 7 176 1 132 2 209 1 336 4 252 1 
291 1 43 2 319 4 162 1 300 1 301 1 307 3 52 1 145 1 284 4 15 1 14 1 104 1 132 1 109 1 57 2 336 3 60 1 
201 1 44 1 291 1 319 2 162 1 300 1 260 1 307 1 206 1 52 1 145 1 284 2 15 1 132 1 108 1 268 1 
43 1 319 3 162 1 307 2 52 1 145 1 284 3 15 2 132 2 108 1 109 1 209 1 336 1 
291 1 136 1 43 4 319 9 162 1 118 1 300 1 301 1 307 5 171 1 52 1 145 1 284 9 104 1 14 1 15 2 132 2 108 1 109 3 209 1 57 2 336 7 60 1 252 1 
291 1 136 1 43 4 319 9 162 1 118 1 300 1 301 1 307 5 171 1 52 1 145 1 284 9 104 1 14 1 15 2 132 2 108 1 109 3 209 1 57 2 336 7 60 1 252 1 
186 1 78 1 251 1 
62 1 
316 2 243 1 106 2 248 2 194 2 
316 1 161 2 190 1 256 1 24 1 80 1 194 1 240 1 243 1 106 1 110 2 56 2 248 1 272 1 
316 1 129 1 243 1 106 1 248 1 194 1 
264 1 12 1 119 1 194 1 
316 1 264 1 106 1 248 1 194 1 
222 1 93 1 163 1 299 1 155 1 
222 2 47 1 93 2 163 1 78 1 155 1 235 1 251 1 
222 1 93 1 155 1 
316 1 129 1 222 1 93 1 243 1 163 1 106 1 248 1 194 1 31 1 
251 1 
316 1 93 2 47 1 163 1 78 1 194 1 31 1 129 1 222 2 84 1 243 1 106 1 248 1 155 1 251 1 
135 1 293 2 47 1 93 5 163 2 78 1 278 1 304 1 325 1 11 2 127 1 222 5 310 1 286 1 184 2 155 2 19 1 38 1 251 1 
316 1 161 1 265 1 24 1 48 1 110 1 56 1 248 1 194 1 
186 1 
316 1 137 1 106 1 248 1 194 2 123 1 
316 3 106 1 48 1 248 3 194 3 
316 1 248 1 194 1 
316 1 137 1 106 1 248 1 123 1 194 1 
316 2 137 1 265 1 106 1 48 1 248 2 194 2 
316 1 12 1 203 1 48 1 248 1 194 2 
316 1 265 1 48 1 248 1 194 1 
316 1 137 1 106 1 248 1 194 1 
161 1 24 1 110 1 56 1 
161 1 24 1 110 1 56 1 
182 1 
316 1 13 1 248 1 194 1 
316 4 12 1 66 1 265 1 137 1 203 1 296 1 106 1 48 2 248 4 194 5 
316 1 248 1 194 1 
295 1 185 1 
295 1 185 1 
295 1 312 1 210 1 185 1 
295 1 312 1 210 1 185 1 
312 1 210 1 
295 1 322 1 185 1 
295 1 322 1 185 1 
125 1 295 2 177 1 312 1 210 1 185 2 
295 1 185 1 328 1 
295 1 322 1 185 1 
295 1 270 1 185 1 
295 1 270 1 185 1 
295 1 270 1 185 1 
159 1 93 2 295 2 98 1 25 2 166 3 218 2 326 1 327 1 283 1 329 1 222 2 177 1 267 2 180 1 339 2 185 2 39 2 251 1 
316 2 188 1 67 1 93 1 295 1 74 1 25 1 166 1 194 2 218 1 142 1 328 1 283 1 175 1 222 1 107 1 267 1 311 1 248 2 339 1 185 1 
291 1 104 1 300 1 
201 1 291 1 300 1 
201 1 238 1 104 2 151 1 300 3 227 1 
201 1 238 1 104 1 151 1 300 2 228 1 
201 1 238 1 104 1 151 2 300 2 
254 1 293 1 46 1 47 1 93 5 96 1 304 2 142 1 11 1 222 5 146 1 55 1 155 1 117 1 62 3 63 1 317 1 67 1 163 4 78 1 279 1 79 1 30 1 325 3 207 2 175 1 286 1 333 2 288 2 183 1 184 1 251 2 
254 3 92 1 93 9 96 3 194 1 11 2 106 1 29 1 30 2 279 3 31 1 129 1 207 6 286 1 288 6 135 1 293 2 47 1 46 3 299 5 304 6 222 9 149 1 55 3 155 6 316 1 63 2 62 9 67 4 69 1 163 7 72 5 321 1 78 1 79 3 325 8 243 1 248 1 181 1 183 1 184 2 251 5 
135 1 254 1 293 1 46 2 93 3 96 1 304 2 11 1 222 3 55 1 117 1 63 1 62 4 317 1 67 1 163 2 78 1 279 1 30 1 79 1 325 3 207 2 333 1 288 2 184 1 251 3 
135 1 254 2 293 1 46 4 93 4 96 2 304 4 11 1 222 4 149 1 55 2 117 1 62 8 63 1 317 1 67 2 69 1 163 3 78 1 279 2 30 1 79 2 325 5 207 4 333 2 181 1 288 4 184 1 251 5 
186 1 192 1 27 1 
192 1 36 1 
214 1 
192 1 337 1 
223 1 27 2 192 3 246 1 337 1 41 1 
223 1 192 1 337 1 
192 1 59 1 
189 2 231 3 23 2 233 1 257 3 79 1 82 1 173 1 285 1 332 1 105 4 55 1 152 1 17 1 18 1 271 7 158 1 
189 2 231 3 23 2 233 1 257 3 79 1 82 1 173 1 285 1 332 1 105 4 55 1 152 1 17 1 18 1 271 7 158 1 
189 2 231 3 23 2 233 1 257 3 79 1 82 1 173 1 285 1 332 1 105 4 55 1 152 1 17 1 18 1 113 1 271 7 158 1 
254 3 213 1 189 5 96 3 257 10 8 1 105 16 55 4 152 2 199 1 18 1 17 2 271 31 158 1 64 1 202 1 22 1 231 15 23 3 233 1 26 4 79 4 279 3 205 2 82 2 126 1 285 1 173 5 332 2 131 3 35 1 88 1 90 1 335 1 
213 1 189 2 257 3 8 1 105 5 55 2 152 1 18 1 17 1 271 9 158 1 229 1 202 1 231 4 23 1 230 1 73 1 233 1 79 2 205 2 82 1 173 1 332 1 35 1 
291 1 298 1 300 2 303 1 101 1 307 1 220 1 52 1 145 1 104 1 15 1 197 1 108 1 110 1 198 1 56 1 227 1 114 1 61 1 201 1 161 1 319 2 70 1 320 1 162 1 121 1 284 2 132 1 245 1 336 1 
212 1 291 1 298 1 300 2 101 1 307 1 220 1 52 1 221 1 104 1 15 1 197 1 108 1 110 1 198 1 56 1 227 1 61 1 201 1 161 1 319 3 70 1 320 1 162 1 76 1 121 1 284 3 132 1 245 1 336 2 
291 1 298 1 300 2 101 1 307 1 220 1 52 1 221 1 197 1 104 1 108 1 110 1 56 1 227 1 61 1 201 1 161 1 319 2 70 1 162 1 76 1 121 1 284 2 245 1 336 2 
212 1 1 1 298 2 217 1 192 1 6 1 10 1 15 1 197 1 108 2 110 1 56 1 61 2 161 1 319 1 70 2 24 1 169 1 284 1 128 1 132 1 245 1 337 1 
291 1 298 1 300 2 101 1 220 1 145 1 104 1 15 1 197 1 108 1 110 1 198 1 56 1 227 1 114 1 61 1 201 1 161 1 319 1 70 1 320 1 76 1 121 1 284 1 132 1 245 1 
53 1 
293 1 1 1 93 2 47 1 192 1 99 1 304 1 194 1 258 1 11 1 264 1 12 1 222 2 197 1 110 2 56 2 155 2 63 1 161 2 24 2 75 1 119 1 325 1 234 1 128 1 174 1 331 1 286 1 87 1 245 1 184 1 337 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
93 2 47 1 99 1 119 1 194 1 264 1 12 1 222 2 84 1 331 1 174 1 87 1 155 1 
293 1 93 1 99 1 119 1 194 1 11 1 264 1 12 1 222 1 331 1 174 1 286 1 87 1 184 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
264 1 12 1 174 1 331 1 222 1 93 1 87 1 119 1 99 1 194 1 
293 1 93 1 99 1 119 1 194 1 11 1 264 1 12 1 222 1 331 1 174 1 286 1 87 1 184 1 
186 1 182 1 
213 1 65 1 202 1 231 1 26 1 277 1 49 1 205 2 8 1 143 1 105 1 131 1 35 1 271 2 20 1 
316 1 213 1 65 1 202 1 294 1 231 1 48 1 277 1 120 1 194 1 205 2 8 1 103 1 309 1 265 1 105 1 248 1 35 1 271 2 20 1 
213 1 256 1 48 1 194 1 144 1 8 1 265 1 110 1 56 1 271 1 20 1 316 1 202 1 65 1 161 1 231 1 24 1 277 1 120 1 205 2 172 1 83 1 248 1 35 1 
213 1 65 1 202 1 161 1 294 1 318 1 24 1 205 2 8 1 263 1 105 1 110 1 56 1 35 1 271 1 20 1 
254 1 213 1 137 1 96 1 194 1 8 1 105 1 106 1 55 1 271 2 20 1 316 1 202 1 65 1 231 1 277 1 79 1 279 1 205 2 32 1 248 1 35 1 
182 1 
182 1 
182 1 
213 1 65 1 202 1 96 1 79 1 205 2 8 1 263 1 105 1 133 1 35 1 271 1 20 1 
213 1 65 1 202 1 231 1 193 1 279 1 205 2 8 1 263 1 55 1 35 1 271 1 20 1 
254 1 213 1 65 1 202 1 231 1 96 1 279 1 79 1 205 2 8 1 263 1 105 1 55 1 35 1 271 2 20 1 
254 1 213 1 65 1 202 1 231 1 96 1 279 1 79 1 205 2 8 1 105 1 55 1 35 1 271 2 20 1 
161 1 256 1 24 1 110 1 56 1 
161 1 224 1 24 1 110 1 56 1 
254 1 213 1 65 1 202 1 231 1 96 1 277 1 279 1 79 1 205 2 8 1 105 1 55 1 35 1 271 2 20 1 
161 1 256 1 110 1 56 1 303 1 144 1 
254 1 213 1 137 1 96 1 194 1 8 1 105 1 106 1 55 1 271 2 20 1 316 1 202 1 65 1 231 1 277 1 79 1 279 1 205 2 248 1 35 1 42 1 
254 3 213 2 189 3 96 3 257 6 9 1 8 2 196 1 54 2 16 1 105 9 55 3 271 19 200 1 64 1 275 2 202 2 231 10 26 2 73 1 79 3 279 3 205 4 126 1 173 3 34 1 131 1 247 1 35 2 134 1 
254 3 213 3 189 2 96 3 257 4 7 1 305 1 8 3 306 1 196 1 54 4 16 2 105 14 55 2 271 26 64 2 275 1 202 3 231 12 164 1 73 1 26 2 79 3 279 2 205 6 173 2 130 1 34 1 131 2 247 2 35 3 90 2 37 1 134 1 
254 4 189 4 96 4 257 8 7 1 8 3 9 1 196 1 105 20 16 2 18 1 17 1 271 41 115 1 202 3 275 1 23 1 26 4 279 4 205 6 126 1 130 1 34 1 131 3 35 3 37 1 134 1 213 3 305 1 306 1 54 4 55 5 152 1 158 1 64 3 231 21 73 1 164 1 233 1 79 5 173 4 247 1 90 1 
254 4 213 4 189 4 96 4 257 7 7 1 305 1 9 1 306 1 8 4 196 1 54 4 16 2 105 20 55 4 152 1 17 1 18 1 271 38 115 1 158 1 64 3 275 1 202 4 23 1 231 18 233 1 164 1 26 4 73 1 79 5 279 3 205 8 126 1 173 3 130 1 34 1 131 3 247 1 35 4 90 2 37 1 134 1 
254 7 213 2 189 7 96 7 257 15 7 1 305 1 306 1 8 2 196 1 54 4 147 2 16 1 105 27 55 8 152 1 17 1 18 1 271 52 158 1 64 2 275 1 202 2 23 1 231 25 233 1 164 1 26 4 73 1 79 8 279 7 205 4 126 2 173 8 130 1 34 1 131 4 247 1 35 2 90 1 37 1 134 1 
329 1 295 1 148 1 177 1 25 1 267 1 218 1 326 1 185 1 339 1 
107 1 328 1 
276 1 295 1 25 1 267 1 334 1 218 1 338 1 185 1 339 1 
159 1 93 1 295 1 25 1 166 2 218 1 326 1 327 1 283 1 329 1 222 1 177 1 267 1 180 1 339 1 185 1 39 1 251 1 
159 1 93 1 295 1 25 1 166 2 218 1 326 1 327 1 283 1 329 1 222 1 177 1 267 1 180 1 339 1 185 1 39 1 251 1 
159 1 93 1 295 1 25 1 166 2 218 1 326 1 327 1 283 1 329 1 222 1 177 1 267 1 180 1 339 1 185 1 39 1 251 1 
125 1 322 1 116 1 
125 1 322 1 116 1 
45 1 270 1 
125 1 45 1 270 1 
188 1 74 1 
188 1 93 1 295 1 218 1 194 2 142 1 222 1 107 1 267 1 311 1 316 2 67 1 163 1 25 1 74 1 166 1 328 1 175 1 180 1 248 2 249 1 39 1 185 1 339 1 
322 1 116 1 
125 1 45 1 270 1 
282 1 241 1 194 2 81 1 
201 1 291 1 161 2 320 1 232 1 298 1 76 1 300 2 303 1 101 1 280 1 124 1 220 1 104 1 197 1 245 1 110 2 56 2 227 1 
201 1 291 1 161 1 320 1 298 1 76 1 300 2 101 1 124 1 220 1 104 1 197 1 110 1 245 1 56 1 227 1 112 1 
161 1 1 1 232 1 298 1 24 1 192 1 10 1 128 1 197 1 245 1 110 1 56 1 337 1 21 1 
201 1 291 1 161 1 320 1 232 1 298 1 76 1 300 2 101 1 280 1 124 1 220 1 104 1 197 1 245 1 110 1 56 1 227 1 
97 1 
186 1 78 1 304 1 325 1 19 1 38 1 251 1 
293 1 46 1 47 1 93 1 2 1 304 1 11 1 222 1 155 1 62 1 78 1 325 1 281 1 286 1 211 1 184 1 251 2 
254 2 253 2 293 2 46 6 47 1 93 2 96 2 191 2 3 1 216 1 192 4 4 1 304 6 11 2 222 2 223 1 197 1 55 2 110 1 56 1 154 1 155 2 62 12 274 1 63 1 160 1 161 1 24 1 27 1 28 1 279 2 79 2 325 7 170 2 207 6 286 2 287 1 246 1 245 2 288 6 36 2 184 2 337 1 251 6 
254 2 293 2 93 1 47 1 46 3 96 2 304 5 305 1 306 1 262 1 11 2 222 1 150 1 55 2 155 1 314 1 63 1 62 6 64 1 164 1 26 1 78 2 79 2 279 2 234 1 325 8 170 2 207 5 130 1 286 2 131 1 288 5 37 1 184 2 251 5 
316 1 293 1 93 1 138 1 230 1 233 1 79 1 304 1 194 1 325 2 170 2 31 1 11 1 129 1 222 1 243 1 286 1 106 1 55 1 248 1 152 1 17 1 184 1 
293 1 78 1 304 1 325 1 11 1 286 1 184 1 38 1 19 1 251 1 
253 1 254 2 62 10 46 5 96 2 79 2 279 2 304 5 325 5 170 2 262 1 207 5 55 2 288 5 251 5 
222 1 93 1 47 1 78 1 155 1 251 1 
135 1 292 1 293 2 1 1 47 2 93 3 192 2 304 2 258 1 219 2 11 2 222 3 223 1 197 2 110 4 56 4 155 4 63 2 161 4 165 1 24 2 75 1 325 2 234 2 236 1 239 1 128 1 330 1 286 1 245 3 89 1 337 2 184 2 250 1 
316 1 161 1 243 1 190 1 256 1 24 1 106 1 110 1 56 1 248 1 194 1 
62 4 63 1 293 1 46 2 23 1 78 2 304 2 325 1 234 1 11 1 207 2 286 1 288 2 184 1 251 4 
25 1 225 1 218 1 
25 1 225 1 218 1 
71 1 74 1 25 1 218 1 326 1 
25 1 225 1 218 1 
0 1 25 1 218 1 
0 1 25 1 218 1 
0 1 25 1 218 1 
25 1 218 1 
295 1 185 1 
213 2 202 2 189 2 23 1 231 4 233 1 257 3 79 1 205 4 8 2 173 1 105 4 55 1 152 1 35 2 90 1 18 1 17 1 271 8 158 1 
186 1 189 2 23 1 231 3 233 1 257 2 79 1 105 3 55 1 152 1 18 1 17 1 271 6 158 1 
254 1 213 1 202 1 189 1 231 2 96 1 257 2 279 1 79 1 205 2 8 1 173 1 266 1 105 2 55 1 35 1 271 4 
254 1 64 1 189 1 231 4 96 1 26 2 257 2 279 1 79 1 126 1 173 1 131 1 105 3 55 1 271 7 
254 2 213 2 189 5 96 2 257 9 143 1 8 2 147 1 105 11 55 3 152 2 17 2 18 1 271 23 158 1 202 2 23 1 231 12 233 1 26 2 79 3 279 2 205 4 126 1 173 4 131 2 35 2 90 2 91 1 
231 1 26 1 271 1 
105 1 131 1 271 1 
253 1 254 1 213 1 202 1 189 2 231 3 96 1 257 3 79 1 279 1 205 2 8 1 173 1 266 1 105 3 55 1 35 1 271 6 
254 2 213 1 189 1 96 2 257 2 305 1 8 1 306 1 105 6 55 2 271 12 64 1 202 1 231 6 26 1 73 1 164 1 79 2 279 2 205 2 173 1 130 1 131 1 35 1 37 1 
189 1 231 3 233 1 257 2 79 1 173 1 105 3 55 1 152 1 17 1 271 6 
213 1 202 1 189 1 231 2 257 2 205 2 8 1 173 1 105 1 152 1 35 1 90 1 17 1 18 1 271 3 91 1 158 1 
213 1 202 1 189 3 230 1 231 5 73 1 233 1 257 5 79 2 205 2 8 1 173 2 105 5 55 2 152 2 35 1 17 2 271 10 
213 1 202 1 96 1 73 1 257 1 79 1 205 2 8 1 173 1 105 2 35 1 271 2 
254 1 213 1 202 1 189 1 231 2 96 1 73 1 257 2 279 1 79 1 205 2 8 1 173 1 105 2 55 1 35 1 271 4 
213 3 202 3 189 1 231 2 73 1 257 2 205 6 9 1 8 3 173 1 105 1 152 1 35 3 90 1 17 1 271 3 91 1 
254 3 213 5 189 7 96 3 257 12 9 1 8 5 266 1 105 16 55 5 152 3 199 1 17 3 18 1 271 34 158 1 64 1 202 5 22 1 23 1 231 18 233 2 26 4 73 1 79 5 279 3 205 10 126 1 173 5 131 3 35 5 90 2 88 1 91 1 
213 1 189 2 257 2 8 1 105 4 55 1 152 1 18 1 17 1 271 8 158 1 64 1 202 1 23 1 231 4 26 1 73 1 233 1 79 1 205 2 131 1 35 1 37 1 
254 1 213 2 189 2 96 1 257 3 8 2 266 1 105 6 55 1 152 1 17 1 18 1 271 11 158 1 64 1 202 2 23 1 231 5 233 1 26 2 73 1 79 2 205 4 126 1 173 1 131 1 35 2 37 1 
254 2 213 3 189 3 96 2 257 4 305 1 8 3 306 1 266 1 105 9 55 3 152 1 17 1 18 1 271 19 158 1 64 1 202 3 23 1 231 10 233 1 164 1 26 1 73 1 79 3 279 2 205 6 173 1 130 1 131 1 35 3 90 1 37 1 
254 2 213 3 189 2 96 2 257 4 305 1 8 3 306 1 266 1 105 10 55 2 152 1 17 1 18 1 271 17 158 1 64 1 202 3 23 1 231 7 233 1 26 1 73 1 164 1 79 3 279 1 205 6 173 2 130 1 131 1 35 3 90 1 37 1 
213 1 189 2 257 2 8 1 105 4 55 1 152 1 18 1 17 1 271 8 158 1 64 1 202 1 23 1 231 4 26 1 73 1 233 1 79 1 205 2 131 1 35 1 37 1 
254 2 213 1 96 2 257 1 305 1 8 1 306 1 105 6 55 2 271 12 64 1 202 1 231 6 26 1 73 1 164 1 79 2 279 2 205 2 173 1 130 1 131 1 35 1 37 1 
254 2 213 4 189 3 96 2 257 5 305 1 8 4 306 1 266 1 105 10 55 2 152 1 17 1 18 1 271 18 158 1 64 1 202 4 23 1 231 8 233 1 164 1 26 1 73 1 79 3 279 1 205 8 173 2 130 1 131 1 35 4 90 2 37 1 
254 3 213 4 189 3 96 3 257 6 305 1 8 4 9 1 306 1 105 9 55 2 271 16 64 1 202 4 231 7 164 1 26 1 73 1 79 3 279 2 205 8 173 3 130 1 131 1 35 4 90 2 37 1 
189 3 231 4 233 1 257 6 79 1 173 3 105 3 55 1 152 3 18 2 17 3 271 7 158 1 
254 2 213 4 189 3 96 2 257 4 305 1 8 4 9 1 306 1 105 10 55 2 152 1 17 1 18 1 271 18 158 1 64 1 202 4 23 1 231 8 233 1 164 1 26 1 73 1 79 3 279 1 205 8 173 1 130 1 131 1 35 4 90 2 37 1 
215 1 
187 1 215 1 168 1 102 1 156 1 157 1 
186 1 128 1 1 1 161 1 197 1 24 1 245 1 192 1 110 1 56 1 337 1 
316 1 161 1 68 1 48 1 24 1 192 1 194 1 204 1 223 1 197 1 110 1 245 1 248 1 56 1 337 1 
316 1 161 1 68 1 48 1 192 1 194 1 204 1 219 1 223 1 197 1 110 1 245 1 248 1 56 1 337 1 
316 1 161 1 68 1 297 1 48 1 192 1 194 1 219 1 223 1 197 1 110 1 245 1 248 1 56 1 337 1 
93 2 192 4 100 1 219 1 222 2 223 1 197 1 110 3 56 3 59 1 155 1 161 3 24 1 27 1 28 1 78 1 324 1 245 1 36 1 289 1 337 1 40 1 251 1 
161 3 93 2 24 1 3 1 192 4 27 1 100 1 78 1 28 1 219 1 222 2 223 1 197 1 245 1 110 3 56 3 36 1 59 1 289 1 337 1 155 1 251 1 
273 1 161 1 197 1 245 1 110 1 56 1 
255 1 192 3 223 1 197 2 110 6 56 6 273 1 161 5 24 2 76 1 80 1 236 1 237 1 33 1 244 1 178 1 245 3 246 1 89 1 337 2 
316 1 48 1 248 1 194 1 
293 2 93 3 47 1 216 1 3 1 4 1 192 2 304 1 11 2 222 3 110 1 56 1 155 2 19 1 161 1 163 1 24 1 27 1 78 1 28 1 325 1 286 2 287 1 36 1 184 2 250 1 38 1 251 1 
273 1 161 2 27 1 192 2 303 1 223 1 197 1 110 2 246 1 245 2 56 2 154 1 337 1 
161 4 1 1 24 1 192 1 100 1 303 1 195 1 128 1 197 1 245 1 110 4 56 4 337 1 
292 1 161 2 192 1 219 1 51 1 236 1 330 1 223 1 197 1 110 2 245 2 56 2 89 1 337 1 
201 1 291 1 161 1 197 1 24 1 245 1 110 1 300 1 56 1 220 1 
161 2 255 1 76 1 192 1 303 1 197 1 110 2 245 1 56 2 269 1 337 1 
1 1 161 4 24 1 255 1 192 3 303 1 219 1 195 1 237 1 128 1 197 2 244 1 110 5 245 2 56 5 337 2 
1 1 161 4 24 1 255 1 192 3 303 1 219 1 195 1 237 1 128 1 208 1 197 2 110 5 245 2 56 5 337 2 
316 1 161 1 68 1 297 1 48 1 24 1 192 1 194 1 223 1 197 1 110 1 245 1 248 1 56 1 337 1 
161 1 192 1 219 1 236 1 33 1 223 1 197 1 110 1 246 1 245 2 56 1 89 1 337 1 
226 1 259 1 141 1 290 1 
222 1 93 1 163 1 139 1 226 1 50 1 122 1 259 1 141 1 290 1 
282 1 241 1 226 1 194 1 81 1 141 1 290 1 
50 1 122 1 290 1 
186 1 162 1 307 1 52 1 
284 1 319 1 15 1 162 1 132 1 307 1 52 1 
61 1 284 1 108 1 
284 3 145 1 319 3 15 1 162 1 132 1 77 1 5 1 260 2 261 1 307 1 52 1 
284 2 319 2 15 1 162 1 132 1 57 1 336 1 307 1 52 1 
43 1 291 1 319 1 301 1 300 1 307 1 145 1 284 1 15 1 104 1 132 1 
284 1 145 1 319 1 15 1 132 1 307 1 52 1 
284 1 145 1 319 1 15 1 162 1 132 1 52 2 
284 2 145 1 85 1 319 2 15 2 242 1 132 2 153 1 307 1 52 1 
136 1 43 1 319 3 162 1 307 2 52 1 145 1 284 3 15 1 132 1 109 1 336 2 252 1 
201 1 291 1 319 2 162 1 300 2 307 1 52 1 145 1 284 2 15 1 104 1 132 1 227 1 58 1 336 1 
43 1 319 4 162 1 307 2 52 1 145 1 284 4 15 2 132 2 109 1 57 1 336 2 60 1 
284 1 145 1 319 1 15 1 162 1 132 1 307 1 52 1 
43 1 319 4 162 2 77 1 260 1 261 1 307 3 52 2 284 4 15 1 132 1 109 1 111 1 336 2 
319 2 94 1 162 1 307 1 171 1 52 1 145 1 284 2 15 1 132 1 86 1 336 1 
319 3 162 1 77 2 261 1 260 2 307 1 52 1 145 1 284 3 15 1 132 1 179 1 
315 2 167 1 140 1 307 2 
284 1 145 1 319 1 15 1 132 1 323 1 
284 2 145 1 319 2 15 1 162 1 132 1 336 1 307 1 52 1 252 1 
95 1 
284 1 145 1 319 1 15 1 162 1 132 1 307 1 52 1 
284 3 145 1 319 3 15 1 162 1 132 1 336 1 260 1 307 1 252 1 52 1 
43 1 109 1 111 1 307 1 
307 1 52 1 

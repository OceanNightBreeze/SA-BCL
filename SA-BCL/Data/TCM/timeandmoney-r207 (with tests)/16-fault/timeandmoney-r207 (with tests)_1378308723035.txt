#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 91 (213,275) (213,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 91 (213,275) (213,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 91 (213,275) (213,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 91 (213,275) (213,275) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 91 (44,259) (44,259) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (28,161,195,271) 260 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (35,69,124,317) 180 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (35,69,124,317) 180 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 62 217 248 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 62 217 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 153 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (30,63,67) (30,63,67) (30,63,67) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (30,63,67) (30,63,67) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (30,63,67) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (121,198) (121,198) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 12 139 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 12 242 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 12 242 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 12 242 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 12 242 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 300 325 245 205 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 62 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 326 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 326 322 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (28,161,195,271) (28,161,195,271) (35,69,124,317) (35,69,124,317) (35,69,124,317) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> 1
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
275 1 271 1 213 1 149 1 91 1 195 1 161 1 51 1 6 1 
275 1 271 1 213 1 149 1 91 1 195 1 161 1 51 1 6 1 
275 1 271 1 213 1 149 1 91 1 195 1 161 1 51 1 6 1 
275 1 271 1 213 1 149 1 91 1 195 1 161 1 51 1 6 1 
57 1 127 1 115 1 149 4 226 1 170 1 161 1 84 2 192 1 200 1 28 3 247 3 193 1 271 1 124 1 20 2 195 4 6 1 
193 1 271 1 149 1 307 1 259 1 91 1 195 1 161 1 51 1 44 1 6 1 
260 1 271 2 149 1 195 2 161 2 51 1 6 1 
28 1 271 1 317 1 180 1 149 1 195 2 161 1 6 1 
28 1 271 1 317 1 180 1 149 1 195 2 161 1 6 1 
134 1 313 1 258 1 
134 1 348 1 190 2 
222 1 27 2 112 2 281 2 81 2 250 2 251 2 19 1 
323 1 169 2 306 1 81 2 37 1 278 1 97 1 19 1 308 2 325 2 172 1 280 2 245 1 332 1 136 1 281 2 4 1 61 1 250 3 251 3 221 1 222 1 156 1 27 2 112 2 197 1 66 1 95 1 199 1 227 1 31 1 298 1 347 1 229 1 300 2 301 1 185 1 
222 1 27 1 218 1 112 1 281 1 81 1 48 1 250 1 251 1 7 1 
73 1 65 1 82 1 83 1 134 1 87 1 313 1 281 1 314 1 41 1 125 1 250 1 251 1 7 1 
27 1 112 1 81 1 65 1 83 1 134 1 87 2 313 1 281 1 314 2 41 1 125 1 250 1 251 1 7 1 
87 1 314 1 284 1 293 1 99 1 
222 1 27 1 112 1 81 1 48 1 99 1 218 1 182 1 330 1 87 2 312 1 134 1 281 1 313 1 314 2 250 1 251 1 7 1 284 1 
87 1 314 1 284 1 
222 1 27 1 112 1 81 1 48 1 99 1 218 1 87 1 330 1 281 1 314 1 250 1 251 1 7 1 
134 1 
222 1 27 1 112 1 81 1 48 1 99 1 151 1 218 1 182 1 330 1 87 2 134 1 281 1 313 1 314 2 250 1 251 1 7 1 284 1 
239 1 81 1 0 1 99 2 129 1 2 2 218 1 311 1 330 1 87 5 134 2 331 1 281 1 313 2 283 2 152 2 314 5 88 1 250 1 251 1 21 1 7 1 284 2 222 1 289 1 27 1 112 1 255 1 257 1 114 1 48 1 296 4 182 1 183 2 70 2 203 2 303 1 235 5 
258 1 19 1 
27 1 112 1 81 1 17 1 19 2 281 2 250 2 251 2 207 1 
262 1 340 1 154 1 
156 1 323 1 19 1 325 1 172 1 280 1 199 1 245 1 227 1 332 1 300 1 250 1 301 1 251 1 107 1 185 1 
27 1 112 4 81 4 17 1 19 1 173 1 133 2 281 4 204 1 263 1 250 4 251 4 253 1 7 1 
112 2 148 1 281 2 81 2 48 1 250 2 251 2 7 1 
156 1 112 1 323 1 81 1 325 1 172 1 262 1 199 1 280 1 227 1 133 1 245 1 332 1 281 1 204 1 300 1 301 1 250 2 251 2 185 1 
27 1 133 1 112 3 281 3 81 3 250 3 251 3 19 1 
112 1 281 1 81 1 48 1 250 1 251 1 7 1 
27 1 112 1 281 1 81 1 17 1 250 1 251 1 7 1 207 1 
323 1 169 2 306 1 81 3 37 1 17 1 278 1 97 1 83 1 19 1 308 1 325 1 172 1 280 1 133 1 87 1 245 1 332 1 281 3 137 1 314 1 4 1 41 1 250 4 251 4 7 1 156 1 222 1 27 2 112 3 65 1 66 1 95 1 199 1 227 1 31 1 298 1 204 1 229 1 125 1 300 1 301 1 206 1 185 1 
147 1 112 1 133 1 281 2 81 1 82 1 250 2 251 2 19 1 
287 1 27 1 112 3 81 3 65 1 17 1 83 1 134 1 87 1 133 2 281 3 204 1 314 1 41 1 125 1 250 3 251 3 7 1 206 1 
27 1 112 2 81 2 17 1 262 1 133 1 281 2 154 1 250 2 251 2 
156 1 323 1 19 1 325 1 172 1 280 1 199 1 245 1 227 1 332 1 300 1 250 1 301 1 251 1 185 1 
156 1 15 1 196 1 323 1 19 1 325 1 172 1 280 1 199 1 245 1 227 1 300 1 250 1 301 1 251 1 
169 2 212 1 306 1 37 1 97 1 308 4 216 1 262 2 152 1 4 1 154 2 108 1 340 2 47 1 341 1 342 1 31 2 298 1 203 1 229 1 347 2 237 1 
112 1 281 1 148 1 81 1 125 1 250 1 251 1 7 1 
158 1 302 1 
158 1 302 1 
273 1 25 1 
273 1 25 1 
273 1 25 1 
210 1 158 1 302 1 
210 1 158 1 302 1 
158 1 302 1 155 1 
179 1 158 2 273 1 302 2 234 1 25 1 
210 1 158 1 302 1 
254 1 158 1 302 1 
254 1 158 1 302 1 
254 1 158 1 302 1 
217 1 87 1 79 1 248 1 158 1 231 1 314 1 302 1 62 1 
217 1 79 1 158 1 231 1 302 1 62 1 
200 1 193 1 115 1 
200 1 193 1 307 1 
265 1 135 1 193 3 115 2 307 1 14 1 
265 1 135 1 193 2 115 1 307 1 321 1 
265 2 135 1 193 2 115 1 307 1 
77 1 187 2 190 3 324 1 99 4 129 1 246 1 87 5 134 2 60 1 220 1 313 1 283 1 152 1 314 5 42 1 284 1 108 1 110 1 45 1 296 3 345 2 182 1 29 2 183 1 70 1 203 1 54 1 272 1 348 1 235 2 237 1 
77 4 81 1 129 1 218 1 134 5 87 8 220 2 313 1 176 1 314 8 42 2 7 1 222 1 10 1 48 1 268 4 182 1 228 1 183 2 272 3 235 6 237 3 324 1 190 9 98 1 99 6 330 1 331 1 281 1 283 2 152 3 250 1 251 1 284 5 108 3 27 1 112 1 160 1 293 4 296 8 344 1 345 6 29 6 70 2 203 3 348 3 
77 1 187 1 190 4 99 2 134 3 87 3 331 1 220 1 313 1 283 1 152 1 314 3 42 1 108 1 110 1 296 3 345 2 29 2 183 1 70 1 54 1 203 1 272 1 348 2 235 2 237 1 
77 2 81 1 218 1 87 3 134 4 220 1 313 1 314 3 42 1 7 1 222 1 48 1 183 1 54 1 272 2 235 4 237 2 187 1 190 7 98 1 99 2 330 1 331 1 281 1 283 1 152 2 250 1 251 1 108 2 110 1 27 1 112 1 160 1 296 5 345 4 344 1 29 4 70 1 203 2 348 3 
258 1 301 1 279 1 
301 1 349 1 
92 1 
199 1 301 1 172 1 
53 1 301 1 
301 1 172 1 
92 1 11 1 279 2 172 1 199 1 230 1 301 2 
288 3 165 2 166 1 257 1 189 1 93 1 308 7 310 1 31 3 203 1 55 1 347 4 152 1 72 1 303 1 21 1 177 2 
288 3 165 2 166 1 257 1 189 1 93 1 308 7 310 1 31 3 203 1 55 1 347 4 152 1 72 1 303 1 21 1 177 2 
288 3 165 2 166 1 257 1 189 1 38 1 93 1 308 7 310 1 31 3 203 1 55 1 347 4 152 1 72 1 303 1 21 1 177 2 
288 2 166 2 8 2 189 2 308 13 130 1 132 2 31 6 203 2 40 1 272 2 347 7 104 1 152 2 153 1 72 1 177 1 108 2 264 1 237 2 
165 3 166 1 169 4 306 2 37 2 189 1 308 9 152 1 4 2 43 1 177 2 21 1 288 4 225 1 257 1 93 1 31 4 298 2 203 1 55 1 347 5 72 1 303 1 304 1 
167 1 323 1 149 1 307 1 277 1 215 1 325 1 150 1 280 1 193 2 106 1 195 2 89 1 6 1 63 1 115 1 161 1 51 1 28 1 200 1 67 1 227 1 30 1 271 1 300 1 351 1 14 1 
167 1 323 1 149 2 307 1 277 1 215 1 325 1 150 1 280 1 244 1 193 2 337 1 195 3 89 1 63 1 115 1 161 1 292 1 51 1 200 1 28 2 67 1 227 1 271 1 300 1 351 1 14 1 
323 1 167 1 115 1 149 1 307 1 292 1 277 1 51 1 215 1 325 1 150 1 200 1 67 1 28 2 280 1 244 1 227 1 193 2 300 1 195 2 351 1 14 1 
211 1 78 1 323 1 167 2 149 1 277 2 58 1 215 2 325 1 172 1 280 1 85 1 245 1 337 1 195 1 161 1 51 2 198 1 121 1 227 1 271 1 300 1 301 1 
167 1 323 1 149 1 307 1 277 1 215 1 325 1 150 1 280 1 244 1 193 2 195 1 89 1 6 1 63 1 115 1 161 1 51 1 200 1 67 1 227 1 30 1 271 1 300 1 351 1 14 1 
295 1 
78 1 323 3 325 2 129 1 172 2 280 2 85 1 329 1 245 2 87 2 220 1 175 1 283 1 314 2 284 2 64 1 296 1 199 1 182 1 227 2 183 1 70 1 205 1 300 2 301 2 142 1 33 1 235 1 56 1 
73 1 82 1 171 1 83 1 151 1 87 3 281 1 282 1 314 3 41 1 250 1 251 1 7 1 284 2 224 1 65 1 117 2 96 1 182 1 122 1 125 1 319 1 
73 1 82 1 171 1 83 1 151 1 87 3 134 1 333 1 281 1 313 1 314 3 41 1 250 1 251 1 284 1 7 1 224 1 65 1 117 3 96 1 182 1 122 1 125 1 319 1 
73 1 82 1 171 1 83 1 151 1 87 3 333 1 281 1 282 1 314 3 41 1 250 1 251 1 7 1 284 2 224 1 65 1 117 3 96 1 182 1 122 1 299 1 125 1 319 1 
73 1 81 1 82 1 171 1 83 1 191 1 151 1 218 1 330 1 134 1 87 3 313 1 281 2 282 2 314 3 41 1 250 2 251 2 284 3 7 2 222 1 27 1 112 1 224 1 48 1 65 1 117 2 96 1 182 1 122 1 299 2 125 1 319 1 274 1 
73 1 81 1 82 1 83 1 171 1 129 1 131 2 218 1 87 4 134 1 313 1 314 4 41 1 7 2 222 1 224 1 48 1 96 1 182 2 183 1 319 1 235 1 190 2 327 1 59 2 102 1 330 1 333 2 281 2 282 2 283 1 250 2 251 2 22 2 284 4 27 1 112 1 65 1 117 4 296 1 70 1 122 1 123 1 299 2 348 2 125 1 34 2 
73 1 74 1 82 1 171 1 83 1 129 1 59 2 131 2 327 1 134 1 87 4 333 2 313 1 281 1 282 2 335 1 283 1 314 4 41 1 250 1 251 1 284 4 22 2 7 1 178 1 224 1 65 1 117 4 296 1 96 1 182 2 183 1 70 1 122 1 299 2 123 1 348 2 125 1 319 1 34 2 235 1 
74 1 73 1 81 1 82 1 83 1 171 1 129 1 131 2 218 1 87 4 134 1 313 1 314 4 41 1 7 2 178 1 222 1 224 1 48 1 96 1 182 2 183 1 319 1 235 1 327 1 59 2 330 1 333 2 281 2 335 1 282 2 283 1 250 2 251 2 22 2 284 4 27 1 112 1 65 1 117 4 296 1 70 1 122 1 123 1 299 2 348 2 125 1 34 2 
73 1 36 2 81 1 82 1 83 1 171 1 129 1 131 2 218 1 87 4 134 1 313 1 314 4 41 1 7 2 178 1 222 1 224 1 48 1 52 1 96 1 182 2 183 1 319 1 145 2 235 1 146 1 190 2 330 1 333 2 281 2 282 2 283 1 250 2 251 2 22 2 284 4 27 1 112 1 256 1 65 1 117 4 296 1 70 1 122 1 123 1 299 2 125 1 
74 1 73 1 81 1 82 1 83 1 171 1 129 1 131 2 218 1 87 4 134 1 313 1 314 4 41 1 7 2 178 1 222 1 224 1 48 1 96 1 182 2 183 1 319 1 235 1 191 1 327 1 59 2 330 1 333 3 281 2 282 3 335 1 283 1 250 2 251 2 284 5 22 2 27 1 112 1 65 1 117 5 296 1 70 1 122 1 299 3 123 1 348 2 125 1 34 2 
74 1 73 1 81 1 82 1 83 1 171 1 129 1 131 2 218 1 87 4 134 1 313 1 314 4 41 1 7 2 178 1 222 1 224 1 48 1 96 1 182 2 183 1 319 1 235 1 191 1 327 1 59 2 330 1 333 3 281 2 282 3 335 1 283 1 250 2 251 2 284 5 22 2 27 1 112 1 65 1 117 5 296 1 70 1 122 1 299 3 123 1 348 2 125 1 34 2 
73 1 36 2 82 1 83 1 171 1 129 1 131 2 134 1 87 3 313 1 314 3 41 1 7 1 224 1 96 1 182 1 183 1 319 1 145 1 235 1 146 1 190 2 102 1 333 1 281 1 282 1 283 1 250 1 251 1 22 2 284 2 65 1 117 3 296 1 70 1 122 1 123 1 299 1 125 1 
288 2 165 2 340 1 257 1 341 1 169 2 306 1 37 1 258 1 93 1 97 1 19 2 308 6 262 1 31 3 298 1 203 1 55 1 347 3 229 1 152 1 4 1 154 1 177 1 303 1 21 1 
166 1 169 4 306 2 37 2 128 1 97 1 19 1 308 14 130 1 243 1 262 11 132 3 136 1 40 1 104 1 152 1 4 2 338 1 154 4 108 2 288 1 8 3 340 11 95 1 31 6 298 2 203 2 346 1 229 2 347 8 272 2 237 1 
323 1 169 2 306 1 81 1 37 1 128 1 97 1 19 1 325 1 308 2 172 1 280 1 245 1 133 1 332 1 219 1 281 1 136 1 174 1 4 1 154 1 250 2 251 2 107 1 156 1 112 1 291 1 95 1 199 1 227 1 31 1 298 1 204 1 229 1 347 1 300 1 301 1 185 1 
165 2 166 4 169 6 81 1 306 3 37 3 128 1 308 20 172 2 1 2 262 7 133 1 136 1 4 3 177 1 316 1 266 2 90 1 93 1 95 1 227 2 55 1 229 3 272 2 238 1 185 2 237 2 323 2 188 2 97 3 19 2 325 3 280 3 244 1 245 1 332 2 281 1 152 3 250 3 154 7 21 1 251 3 108 2 156 2 288 6 112 1 340 7 257 1 66 2 162 2 199 2 31 10 298 3 204 1 203 3 347 10 300 3 301 2 303 1 
78 1 168 1 323 2 169 4 81 1 306 2 37 2 97 2 325 7 308 2 172 2 280 8 244 1 85 1 133 1 245 2 281 1 136 1 4 2 194 1 106 1 250 1 251 1 339 1 111 1 46 1 112 1 290 1 341 1 197 2 95 1 68 1 227 2 31 1 298 2 229 2 347 1 300 8 301 3 
169 2 81 1 306 1 37 1 17 1 128 1 97 1 308 3 262 1 334 1 281 1 152 1 4 1 154 1 250 1 251 1 108 1 27 1 112 1 340 1 31 2 298 1 203 1 229 1 272 1 347 1 237 1 
288 1 166 1 340 1 341 1 169 2 306 1 37 1 97 1 308 2 216 1 262 1 298 1 203 1 229 1 347 2 4 1 154 1 108 1 
340 1 341 1 169 2 306 1 212 1 37 1 97 1 308 2 262 1 31 2 298 1 229 1 152 1 4 1 154 1 237 1 
288 1 166 1 340 2 341 1 169 2 306 1 37 1 97 1 308 4 262 2 31 2 298 1 203 1 229 1 272 1 347 2 152 1 4 1 154 2 108 1 237 1 
288 1 166 1 290 1 340 1 169 2 306 1 37 1 97 1 308 2 216 1 262 1 298 1 203 1 229 1 347 2 4 1 154 1 108 1 
290 1 340 1 169 2 306 1 212 1 37 1 97 1 308 2 262 1 31 2 298 1 229 1 152 1 4 1 154 1 237 1 
290 1 340 2 169 2 306 1 37 1 97 1 308 4 262 2 31 2 298 1 203 1 229 1 272 1 347 2 152 1 4 1 154 2 108 1 237 1 
288 1 166 1 340 2 169 2 306 1 37 1 97 1 308 4 262 2 31 2 298 1 203 1 229 1 272 1 347 2 152 1 4 1 154 2 108 1 237 1 
323 1 169 2 306 1 37 1 97 1 19 1 308 2 325 1 172 1 280 1 245 1 332 1 136 1 4 1 250 1 251 1 156 1 66 1 95 1 199 1 227 1 31 1 298 1 347 1 229 1 300 1 301 1 185 1 
15 1 323 1 169 2 306 1 37 1 97 1 19 1 308 2 325 1 172 1 280 1 245 1 136 1 4 1 250 1 251 1 156 1 196 1 95 1 199 1 227 1 31 1 298 1 347 1 229 1 300 1 301 1 233 1 
288 1 166 1 340 2 169 2 306 1 37 1 128 1 97 1 308 4 262 2 31 2 298 1 203 1 229 1 272 1 347 2 152 1 4 1 154 2 108 1 237 1 
166 1 323 1 169 2 306 1 37 1 97 1 308 4 325 1 172 1 262 2 1 1 280 1 332 1 152 1 4 1 154 2 106 1 250 1 251 1 108 1 288 1 156 1 340 2 66 1 199 1 227 1 31 2 298 1 203 1 347 2 229 1 272 1 300 1 301 1 237 1 185 1 
166 1 169 2 81 1 306 1 37 1 17 1 128 1 97 1 308 3 262 1 86 1 281 1 152 1 4 1 250 1 154 1 251 1 108 1 288 1 27 1 112 1 340 1 31 1 298 1 203 1 229 1 272 1 347 2 237 1 
165 2 240 1 166 7 169 8 306 4 37 4 308 47 130 2 132 4 328 1 40 2 104 2 152 6 4 4 177 1 21 1 43 1 252 1 108 6 288 9 223 1 113 1 8 4 257 1 225 2 139 1 267 1 93 1 12 1 343 3 297 1 202 1 31 22 141 1 298 4 55 1 203 7 347 25 272 6 303 1 350 1 320 1 237 5 
165 1 240 1 166 1 169 6 242 1 306 3 37 3 308 20 132 2 328 1 40 2 152 1 4 3 43 1 252 1 108 2 288 2 113 1 8 2 225 2 267 2 12 1 343 3 297 1 31 9 202 1 141 2 298 3 203 2 347 11 272 2 350 1 320 1 237 1 
165 2 240 1 166 7 169 8 242 1 306 4 37 4 308 47 130 2 132 4 328 1 40 2 104 2 152 6 4 4 177 1 21 1 43 1 252 1 108 6 288 9 223 1 113 1 8 4 257 1 225 2 267 1 93 1 12 1 343 3 297 1 202 1 31 22 141 1 298 4 55 1 203 7 347 25 272 6 303 1 350 1 320 1 237 5 
165 2 240 1 166 7 169 8 242 1 306 4 37 4 308 47 130 2 132 4 328 1 40 2 104 2 152 6 4 4 177 1 21 1 43 1 252 1 108 6 288 9 223 1 113 1 8 4 257 1 225 2 267 1 93 1 12 1 343 3 297 1 202 1 31 22 141 1 298 4 55 1 203 7 347 25 272 6 303 1 350 1 320 1 237 5 
165 1 240 1 166 6 169 4 242 1 306 2 37 2 308 46 130 2 132 4 328 1 40 2 104 2 152 7 4 2 177 1 21 1 43 1 252 1 108 6 288 7 113 1 8 4 257 1 225 1 267 1 93 1 12 1 343 3 297 1 202 1 31 22 141 1 298 2 55 1 203 7 347 24 272 6 303 1 350 1 320 1 237 6 
323 1 241 1 169 2 306 1 37 1 128 1 97 1 308 2 325 2 172 1 280 2 281 2 136 1 105 1 4 1 250 2 251 2 339 1 138 1 197 2 95 1 270 1 68 1 227 1 31 1 298 1 229 1 347 1 32 1 300 2 301 1 
75 1 323 1 115 1 307 1 277 1 325 2 150 1 200 1 280 2 244 1 227 1 193 2 300 2 184 1 106 1 89 1 351 1 14 1 286 1 
323 1 115 1 307 1 277 1 325 1 150 1 200 1 280 1 244 1 227 1 193 2 163 1 300 1 184 1 89 1 351 1 14 1 
157 1 78 1 323 1 277 1 58 1 325 1 172 1 280 1 85 1 227 1 245 1 300 1 301 1 286 1 
75 1 323 1 115 1 307 1 277 1 325 1 150 1 200 1 280 1 244 1 227 1 193 2 300 1 184 1 89 1 351 1 14 1 286 1 
208 1 
239 1 134 1 313 1 88 1 258 1 235 1 296 1 
81 1 190 1 129 1 59 1 327 1 218 1 330 1 87 1 134 1 281 1 313 1 283 1 314 1 250 1 251 1 7 1 284 1 222 1 27 1 112 1 48 1 296 1 182 1 183 1 70 1 348 1 235 1 34 1 
209 1 305 1 80 1 83 1 129 2 172 1 87 2 134 3 220 1 314 2 266 1 11 1 182 1 227 1 183 2 272 1 235 3 236 1 237 1 323 2 190 6 279 1 325 1 280 1 245 1 249 1 283 2 152 1 284 2 108 1 159 1 119 1 296 4 199 1 345 3 29 3 70 2 203 1 348 3 300 1 349 2 301 4 
81 1 129 2 130 1 2 2 132 2 218 1 134 7 87 1 220 1 313 2 40 1 314 1 7 1 222 1 8 2 48 1 269 1 182 1 183 2 272 4 142 1 143 1 235 8 237 4 190 13 328 1 330 1 281 1 283 2 104 1 152 4 250 1 251 1 252 1 284 1 108 4 27 1 289 1 112 1 113 1 296 13 345 8 29 8 297 1 70 2 203 4 348 8 350 1 
81 1 129 1 2 2 218 1 87 1 330 1 281 1 335 1 283 1 314 1 152 1 250 1 251 1 21 1 7 1 222 1 289 1 27 1 112 1 257 1 114 1 48 1 296 2 183 1 70 1 203 2 303 1 235 2 
239 1 129 1 296 1 134 1 70 1 183 1 313 1 283 1 88 1 235 1 
289 1 266 1 190 10 296 5 345 5 29 5 134 5 203 2 272 2 348 5 152 2 235 5 108 2 237 2 
222 1 27 1 112 1 81 1 48 1 182 1 218 1 87 1 134 1 330 1 281 1 313 1 314 1 250 1 251 1 7 1 284 1 
325 2 129 1 296 1 280 2 182 1 329 1 87 1 245 2 220 1 39 1 70 1 183 1 205 1 283 1 314 1 300 2 142 1 235 1 284 2 
323 1 169 2 306 1 81 2 37 1 278 1 97 1 19 1 308 1 325 1 172 1 280 1 245 1 332 1 281 2 4 1 250 3 251 3 222 1 156 1 27 2 112 2 66 1 95 1 199 1 227 1 31 1 298 1 229 1 300 1 301 1 185 1 
190 4 129 1 296 1 345 2 29 2 134 4 220 1 70 1 183 1 313 2 283 1 348 2 142 1 177 1 235 2 
79 1 62 1 
79 1 62 1 
79 1 62 1 
79 1 62 1 
79 1 62 1 
79 1 62 1 
79 1 62 1 
79 1 62 1 
158 1 302 1 
288 3 165 2 166 1 169 4 225 1 257 1 306 2 37 2 93 1 308 8 31 4 298 2 203 1 55 1 347 4 152 1 4 2 177 1 303 1 21 1 
165 2 288 2 257 1 258 1 93 1 308 6 31 3 55 1 203 1 347 3 152 1 177 1 21 1 303 1 
126 1 169 2 306 1 37 1 308 4 31 2 298 1 203 1 272 1 347 2 152 1 4 1 108 1 237 1 
288 2 166 2 8 2 308 12 130 1 132 2 31 6 40 1 203 2 347 6 104 1 272 2 152 2 108 2 237 2 
165 5 166 5 169 4 306 2 37 2 308 30 130 1 132 2 104 1 152 4 4 2 338 1 177 1 21 4 5 1 108 2 288 10 8 2 114 1 257 4 225 2 93 1 31 16 298 2 55 1 203 4 272 2 347 14 303 2 237 2 
132 1 31 1 308 1 
8 1 347 1 308 1 
288 1 126 1 166 1 169 2 306 1 37 1 266 1 308 6 31 3 298 1 203 1 272 1 347 3 152 1 4 1 108 1 237 1 
166 1 169 2 306 1 37 1 308 12 132 1 328 1 40 1 152 2 4 1 43 1 252 1 108 2 288 1 8 1 113 1 297 1 31 6 298 1 203 2 347 6 272 2 350 1 237 2 
288 2 165 1 166 1 31 3 257 1 203 1 347 3 152 1 21 1 303 1 308 6 
288 2 165 1 166 1 257 1 225 1 169 2 306 1 37 1 93 1 308 3 31 2 298 1 55 1 347 1 4 1 21 1 5 1 
165 3 288 5 166 2 169 2 114 1 257 2 306 1 37 1 308 10 31 5 298 1 203 2 347 5 152 2 4 1 43 1 21 2 303 1 
288 1 166 1 169 2 306 1 37 1 308 2 298 1 203 1 347 2 4 1 43 1 108 1 
288 1 166 1 169 2 306 1 37 1 308 4 31 2 298 1 203 1 272 1 347 2 152 1 4 1 43 1 108 1 237 1 
165 1 288 2 166 1 223 1 225 1 169 6 257 1 306 3 37 3 308 3 31 2 298 3 347 1 4 3 43 1 21 1 5 1 
165 2 126 1 166 4 169 8 306 4 37 4 308 32 130 1 132 4 101 1 40 1 104 1 152 5 4 4 177 1 21 1 43 1 264 1 108 4 288 6 223 1 8 4 257 1 225 1 93 1 31 16 298 4 55 1 203 5 347 16 272 4 303 1 232 1 237 4 
165 2 169 2 306 1 37 1 308 8 132 1 40 1 152 1 4 1 177 1 43 1 21 1 252 1 288 2 8 1 257 1 93 1 31 4 298 1 203 1 55 1 347 4 303 1 
165 2 126 1 166 1 169 4 306 2 37 2 308 11 132 2 40 1 104 1 152 1 4 2 177 1 21 1 43 1 252 1 108 1 288 3 8 1 257 1 93 1 31 5 298 2 55 1 203 2 347 6 272 1 303 1 
165 3 126 1 166 1 169 6 306 3 37 3 308 19 132 1 328 1 40 1 152 3 4 3 177 1 21 1 43 1 252 1 108 2 288 4 113 1 8 1 257 1 225 1 93 1 297 1 31 10 298 3 55 1 203 3 347 9 272 2 303 1 350 1 237 2 
165 2 126 1 166 2 169 6 306 3 37 3 308 17 132 1 328 1 40 1 152 2 4 3 177 1 21 1 43 1 252 1 108 2 288 4 8 1 113 1 257 1 225 1 93 1 297 1 31 7 298 3 55 1 203 3 347 10 272 2 303 1 350 1 237 1 
165 2 169 2 306 1 37 1 308 8 132 1 40 1 152 1 4 1 177 1 43 1 21 1 252 1 288 2 8 1 257 1 93 1 31 4 298 1 203 1 55 1 347 4 303 1 
166 1 169 2 306 1 37 1 308 12 132 1 328 1 40 1 152 2 4 1 43 1 252 1 108 2 288 1 8 1 113 1 297 1 31 6 298 1 203 2 347 6 272 2 350 1 237 2 
165 3 166 2 126 1 169 8 306 4 37 4 308 18 132 1 328 1 40 1 152 2 4 4 177 1 21 1 43 1 252 1 108 2 288 5 113 1 8 1 257 1 225 2 93 1 297 1 31 8 298 4 55 1 203 3 347 10 272 2 303 1 350 1 237 1 
166 2 169 6 306 3 37 3 308 11 132 1 328 1 40 1 152 1 4 3 43 1 252 1 108 2 288 2 223 1 8 1 113 1 225 1 297 1 31 4 298 3 203 2 347 7 272 2 350 1 237 1 
288 6 165 3 166 3 31 4 203 1 257 3 55 2 347 3 152 1 93 1 303 1 21 3 308 7 
165 3 166 1 169 8 306 4 37 4 308 18 132 1 328 1 40 1 152 2 4 4 177 1 21 1 43 1 252 1 108 2 288 4 113 1 223 1 8 1 257 1 225 2 93 1 297 1 31 8 298 4 55 1 203 3 347 10 272 2 303 1 350 1 237 1 
147 1 281 1 82 1 250 1 251 1 181 1 19 1 
147 1 318 1 82 1 181 1 19 1 281 1 103 1 164 1 250 1 251 1 24 1 26 1 
280 1 85 1 227 1 78 1 245 1 323 1 258 1 300 1 301 1 325 1 172 1 
156 1 112 1 323 1 81 1 19 1 325 1 172 1 199 1 280 1 133 1 245 1 227 1 281 1 300 1 301 1 250 2 251 2 185 1 
323 1 261 1 81 1 19 1 325 1 172 2 280 1 133 1 281 2 41 1 250 2 251 2 7 1 156 1 112 2 199 2 53 1 227 1 71 1 300 1 125 1 301 3 185 1 
323 1 261 1 81 1 19 1 325 2 172 2 280 2 133 1 281 2 41 1 250 2 251 2 7 1 156 1 112 2 196 1 49 1 199 2 53 1 227 1 71 1 300 2 125 1 301 3 
261 1 81 1 325 1 280 1 218 1 87 1 134 1 330 1 313 1 281 1 314 1 250 1 251 1 7 1 222 1 27 1 112 1 48 1 116 1 300 1 301 1 349 1 
261 1 81 1 325 1 280 1 218 1 87 1 134 1 330 1 313 1 281 1 314 1 250 1 251 1 7 1 222 1 27 1 112 1 48 1 159 1 300 1 301 1 349 1 
280 1 227 1 323 1 300 1 194 1 325 1 
111 1 46 1 168 1 323 3 64 1 197 1 11 1 325 6 172 2 280 7 120 1 199 1 244 1 245 2 227 2 300 7 194 1 106 1 301 3 33 1 339 1 
165 2 169 4 81 1 306 2 37 2 128 1 308 6 172 1 1 1 262 1 133 1 4 2 177 1 93 1 270 1 227 1 55 1 229 2 185 1 323 1 188 1 97 2 325 1 19 2 280 1 332 1 281 1 152 1 154 1 106 1 250 2 251 2 21 1 156 1 288 2 112 1 340 1 257 1 66 1 199 1 31 3 298 2 203 1 347 3 300 1 301 1 303 1 
209 1 305 1 81 1 83 1 129 2 2 2 218 1 87 3 134 2 39 1 313 2 314 3 88 1 7 1 222 1 48 1 182 1 183 2 235 5 236 1 239 1 279 1 99 1 325 1 280 1 245 1 330 1 281 1 283 2 152 2 250 1 21 1 251 1 284 2 289 1 27 1 112 1 114 1 257 1 159 1 296 4 70 2 203 2 300 1 301 2 349 1 303 1 
323 2 279 1 11 1 325 2 172 1 280 2 199 1 227 1 249 1 300 2 106 1 194 1 301 2 
280 4 85 1 76 1 227 1 78 1 245 1 323 1 49 1 300 4 301 1 106 1 325 4 172 1 
323 2 261 1 64 1 325 2 172 1 280 2 199 1 227 1 175 1 300 2 301 1 33 1 56 1 316 1 
200 1 280 1 227 1 245 1 323 1 193 1 307 1 300 1 351 1 325 1 
280 2 244 1 227 1 323 1 32 1 300 2 301 1 106 1 339 1 325 2 172 1 
111 1 76 1 78 1 168 1 323 2 261 1 325 4 172 2 280 5 85 1 245 1 227 2 300 5 106 1 301 3 339 1 
111 1 76 1 78 1 323 2 261 1 325 4 309 1 172 2 280 5 85 1 245 1 227 2 300 5 106 1 301 3 339 1 
156 1 112 1 323 1 196 1 81 1 19 1 325 1 172 1 199 1 280 1 133 1 245 1 227 1 281 1 300 1 301 1 250 2 251 2 
323 2 261 1 64 1 11 1 325 1 172 1 280 1 120 1 199 1 227 1 300 1 301 1 33 1 
326 1 16 1 105 1 23 1 
322 1 186 1 23 1 
326 1 16 1 105 1 23 2 
326 1 322 1 186 1 87 1 16 1 314 1 105 1 99 1 23 2 13 1 
57 1 247 1 258 1 192 1 
57 1 247 1 271 1 149 1 195 1 161 1 192 1 
167 1 149 1 51 1 
57 1 149 3 50 1 161 1 192 1 247 1 271 1 336 1 195 3 144 2 315 1 6 1 
57 1 28 1 247 1 271 1 149 2 195 2 161 1 84 1 192 1 
115 1 149 1 161 1 200 1 247 1 271 1 193 1 124 1 20 1 195 1 6 1 
247 1 271 1 149 1 195 1 161 1 6 1 192 1 
57 1 271 1 149 1 195 1 161 1 6 1 192 2 
149 2 161 2 294 1 192 1 201 1 247 1 271 2 195 2 6 1 285 1 
57 1 276 1 127 1 149 3 161 1 140 1 192 1 28 2 247 2 271 1 20 1 195 3 6 1 
57 1 115 1 149 2 307 1 161 1 192 1 200 1 28 1 247 1 193 2 271 1 3 1 195 2 6 1 14 1 
57 1 127 1 149 4 226 1 161 2 84 1 192 1 28 2 247 2 271 2 20 1 195 4 6 1 
57 1 247 1 271 1 149 1 195 1 161 1 6 1 192 1 
57 2 9 1 127 1 149 4 50 1 161 1 192 2 28 2 247 3 336 1 271 1 20 1 195 4 144 1 
28 1 35 1 69 1 271 1 317 1 149 1 195 2 161 1 6 1 
57 1 149 3 50 2 161 1 100 1 192 1 247 1 336 1 271 1 195 3 144 2 6 1 
247 2 214 2 18 1 94 1 
271 1 149 1 195 1 161 1 118 1 6 1 
57 1 28 1 247 1 271 1 276 1 149 2 195 2 161 1 6 1 192 1 
109 1 
57 1 247 1 271 1 149 1 195 1 161 1 6 1 192 1 
57 1 276 1 149 3 161 1 192 1 28 1 247 1 271 1 195 3 144 1 6 1 
9 1 247 1 127 1 20 1 
247 1 192 1 

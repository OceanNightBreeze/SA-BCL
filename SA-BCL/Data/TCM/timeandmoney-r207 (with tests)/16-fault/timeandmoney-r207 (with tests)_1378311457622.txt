#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (13,266) 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (13,266) 122 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (13,266) 122 151 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 117 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) (50,158) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (50,158) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) (50,158) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (25,48,128,131) (25,48,128,131) (25,48,128,131) 121 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 190 150 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 268 92 18 161 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 268 92 18 161 249 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 2932 | 1 -> 0
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z | OPERATOR | 1616 | != -> ==
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONDITION | 5650 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | OPERATOR | 4163 | / -> %
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
25 1 121 1 131 1 215 1 48 1 
178 1 177 1 279 1 
279 1 164 2 31 1 
287 2 105 1 275 2 101 2 4 2 38 2 236 1 66 2 
139 1 174 1 105 1 267 1 4 3 37 1 38 2 79 1 12 1 275 2 191 1 83 2 112 1 147 1 236 1 276 1 49 1 241 1 87 1 197 1 199 1 91 1 203 2 284 1 285 2 96 2 97 1 287 2 209 2 256 1 169 1 101 3 63 1 29 1 262 1 293 1 66 2 
287 1 275 1 101 1 4 1 259 1 38 1 236 1 86 1 227 1 66 1 
178 1 247 1 4 1 110 1 287 1 62 1 168 1 101 1 279 1 172 1 86 1 118 1 15 1 88 1 
178 1 4 1 38 1 110 1 287 1 168 2 275 1 62 2 101 1 279 1 86 1 118 1 15 1 88 1 66 1 
168 1 62 1 46 1 291 1 41 1 
178 1 168 2 62 2 46 1 279 1 51 1 263 1 41 1 
168 1 62 1 46 1 
4 1 38 1 227 1 41 1 287 1 62 1 168 1 275 1 101 1 259 1 236 1 64 1 86 1 66 1 
279 1 
178 1 168 2 62 2 46 1 279 1 51 1 41 1 264 1 
219 2 178 1 179 1 160 1 250 1 41 2 42 1 60 1 208 1 62 5 168 5 170 2 46 2 237 1 279 1 51 1 280 1 242 1 33 2 
105 1 177 1 
221 1 105 2 4 2 38 1 287 2 211 1 275 1 101 2 66 1 
255 1 21 1 265 1 
139 1 0 1 197 1 174 1 105 1 267 1 91 1 4 1 203 1 285 1 12 1 83 1 112 1 147 1 101 1 276 1 
139 1 174 1 197 1 267 1 91 1 4 2 38 1 203 1 285 1 166 1 287 1 12 1 275 1 147 1 83 1 112 1 113 1 101 2 276 1 265 1 
287 3 105 1 275 3 113 1 101 3 4 3 38 3 66 1 
287 1 275 1 101 1 4 1 259 1 38 1 86 1 
287 1 221 1 211 1 275 1 101 1 4 1 38 1 86 1 66 1 
139 1 174 1 105 1 267 1 4 4 37 1 38 3 110 1 10 1 12 1 275 3 191 1 147 1 112 1 83 1 113 1 236 1 276 1 86 1 118 1 241 1 15 1 87 1 88 1 197 1 199 1 91 1 203 1 284 1 285 1 96 1 97 1 166 1 287 3 209 2 211 1 62 1 168 1 101 4 260 1 29 1 262 1 293 1 66 2 
287 2 105 1 275 1 101 2 4 2 113 1 38 1 172 1 149 1 
4 3 38 3 110 1 166 1 287 3 211 1 168 1 62 1 275 3 113 2 101 3 116 1 260 1 279 1 118 1 86 1 15 1 88 1 66 1 
4 2 38 2 21 1 287 2 211 1 275 2 113 1 101 2 66 1 265 1 
197 1 174 1 139 1 105 1 267 1 91 1 4 1 203 1 285 1 12 1 83 1 112 1 147 1 101 1 276 1 
197 1 174 1 139 1 105 1 267 1 91 1 93 1 4 1 203 1 22 1 285 1 12 1 83 1 147 1 101 1 
37 1 284 1 145 1 96 1 97 1 209 2 288 1 210 1 190 1 191 1 262 1 293 1 241 1 120 1 
287 1 275 1 101 1 4 1 38 1 248 1 86 1 15 1 
105 1 4 5 38 4 165 1 166 1 287 5 211 1 275 4 113 2 101 5 292 1 172 1 149 1 66 1 
287 2 275 2 101 2 4 2 248 1 259 1 38 2 86 1 
266 1 261 1 
266 1 261 1 
13 1 43 1 
13 1 43 1 
13 1 43 1 
266 1 261 1 
266 1 261 1 
266 1 261 1 
266 1 261 1 
266 1 261 1 
266 1 261 1 
266 1 261 1 
266 1 261 1 
266 1 122 1 261 1 243 1 
266 1 168 1 62 1 122 1 261 1 151 1 243 1 
44 1 61 1 189 1 
44 1 61 1 52 1 
245 1 61 3 52 1 125 1 127 1 189 2 
245 1 36 1 61 2 52 1 127 1 189 1 
245 1 61 2 52 1 127 2 189 1 
219 1 178 1 4 1 38 1 227 1 145 1 8 1 41 4 42 1 190 1 275 1 46 1 236 1 278 1 51 1 279 2 150 1 86 1 242 2 54 1 160 2 282 1 164 2 251 1 252 1 23 1 129 1 287 1 212 2 168 5 62 5 101 1 170 1 259 1 64 1 31 1 30 1 102 1 33 1 66 1 
178 1 4 1 38 1 227 1 41 2 275 1 46 1 236 1 239 1 279 1 86 1 124 1 287 1 168 2 62 2 101 1 259 1 291 1 171 1 64 1 66 1 
219 1 178 1 4 1 38 1 227 1 41 2 8 1 275 1 236 1 279 2 278 1 86 1 150 1 280 1 242 1 54 1 160 2 251 1 164 2 252 1 23 1 129 1 287 1 212 1 168 3 62 3 101 1 170 1 259 1 64 1 31 1 30 1 102 1 33 1 66 1 
219 1 8 1 41 1 279 1 278 1 117 1 150 1 280 1 242 1 54 1 160 2 164 2 251 1 252 1 23 1 129 1 212 1 168 2 62 2 170 1 31 1 30 1 102 1 33 1 
139 1 177 1 235 1 
139 1 270 1 
277 1 
139 1 267 1 
139 3 267 1 91 1 235 2 173 1 281 1 
139 1 267 1 91 1 
139 1 238 1 
68 1 17 1 1 2 108 1 159 1 3 1 37 3 162 1 182 1 205 1 79 3 145 1 96 6 167 1 289 1 102 1 35 1 
68 1 17 1 1 2 108 1 159 1 3 1 37 3 162 1 182 1 205 1 79 3 145 1 96 6 167 1 289 1 102 1 35 1 
68 1 17 1 1 2 108 1 159 1 3 1 37 3 162 1 182 1 205 1 79 3 145 1 96 6 167 1 233 1 289 1 102 1 35 1 
68 1 69 1 268 4 1 7 108 1 3 2 37 12 6 1 182 2 79 15 145 4 190 3 191 1 114 1 150 3 241 1 17 5 159 2 92 1 202 3 162 2 251 3 205 2 96 27 58 1 167 2 289 1 209 2 262 1 293 1 102 4 217 1 103 1 35 1 
1 3 108 1 3 1 37 4 182 1 79 4 145 1 191 2 114 1 241 2 17 1 159 2 162 1 95 1 205 1 96 8 167 1 209 4 289 1 262 2 293 2 32 1 102 1 35 1 
25 1 121 1 131 1 215 1 48 1 
25 1 131 1 215 1 48 1 50 1 
25 1 158 1 215 1 128 1 
25 1 131 1 215 1 48 1 50 1 
25 1 121 1 131 1 215 1 48 1 
14 1 
174 3 139 2 219 1 267 2 222 1 78 1 188 1 42 1 12 2 83 2 46 2 51 1 154 1 242 1 89 1 197 2 91 1 203 2 160 1 285 2 206 1 129 1 26 1 168 2 62 2 258 1 214 1 170 1 33 1 
107 1 223 1 247 1 4 1 56 1 110 1 111 1 287 1 257 2 62 3 168 3 46 2 101 1 115 1 51 1 172 1 118 1 86 1 134 1 15 1 264 1 88 1 
107 1 178 1 4 1 110 1 111 1 46 1 115 1 279 1 51 1 86 1 118 1 15 1 88 1 198 1 247 1 56 1 287 1 257 3 168 3 62 3 101 1 172 1 134 1 264 1 
107 1 178 1 74 1 4 1 223 1 110 1 111 1 46 2 115 1 51 1 279 1 86 1 118 1 15 1 88 1 198 1 247 1 56 1 287 1 257 3 168 3 62 3 101 1 172 1 134 1 264 1 
219 1 74 4 223 4 4 1 229 1 81 1 86 1 15 1 242 1 88 1 90 1 247 1 160 1 257 6 168 5 101 1 170 1 172 1 31 2 264 1 33 1 107 1 178 5 271 2 110 1 273 1 185 2 42 1 111 1 46 7 115 1 193 1 194 1 51 3 279 5 118 1 198 4 200 2 201 1 56 1 287 1 62 5 134 1 138 2 
219 1 74 2 4 1 223 2 229 1 84 1 86 1 15 1 242 1 88 1 90 1 247 1 160 1 164 2 257 4 168 4 101 1 170 1 172 1 31 2 33 1 107 1 178 1 271 2 110 1 185 2 42 1 111 1 46 4 115 1 51 2 279 2 118 1 198 2 200 2 56 1 287 1 62 4 134 1 138 2 
219 1 178 1 107 1 74 2 271 2 223 2 4 1 110 1 229 1 273 1 185 2 42 1 111 1 46 4 115 1 193 1 279 1 51 2 86 1 118 1 15 1 242 1 88 1 198 2 90 1 200 2 201 1 247 1 160 1 56 1 287 1 257 4 168 4 62 4 170 1 101 1 172 1 31 2 134 1 33 1 138 2 
219 1 178 1 107 1 74 2 271 2 223 2 4 1 110 1 229 1 273 1 185 2 42 1 111 1 46 4 115 1 193 1 279 1 51 2 86 1 118 1 15 1 242 1 88 1 198 2 90 1 200 2 201 1 247 1 160 1 56 1 287 1 257 4 168 4 62 4 170 1 101 1 172 1 31 2 134 1 33 1 138 2 
219 1 178 1 269 2 107 1 74 2 271 2 223 2 4 1 110 1 229 1 273 1 185 2 42 1 111 1 234 1 46 4 115 1 279 1 51 2 86 1 118 1 240 1 195 1 15 1 242 1 88 1 198 2 247 1 160 1 164 2 56 1 287 1 257 4 168 4 62 4 170 1 101 1 133 2 172 1 134 1 33 1 
219 1 178 1 107 1 271 2 74 3 4 1 223 3 110 1 229 1 273 1 185 2 42 1 111 1 81 1 46 5 193 1 115 1 279 1 51 2 86 1 118 1 15 1 242 1 88 1 198 3 90 1 200 2 201 1 247 1 160 1 56 1 287 1 257 5 168 4 62 4 170 1 101 1 172 1 31 2 134 1 33 1 138 2 
219 1 178 1 107 1 271 2 74 3 4 1 223 3 110 1 229 1 273 1 185 2 42 1 111 1 81 1 46 5 193 1 115 1 279 1 51 2 86 1 118 1 15 1 242 1 88 1 198 3 90 1 200 2 201 1 247 1 160 1 56 1 287 1 257 5 168 4 62 4 170 1 101 1 172 1 31 2 134 1 33 1 138 2 
219 1 74 2 4 1 223 2 229 1 84 1 86 1 15 1 242 1 88 1 247 1 160 1 164 2 257 4 168 4 101 1 170 1 172 1 33 1 107 1 269 2 178 1 271 2 110 1 185 2 42 1 111 1 46 4 115 1 51 2 279 1 118 1 195 1 198 2 56 1 287 1 62 4 133 2 134 1 
105 2 1 1 177 1 108 1 159 1 37 3 162 1 182 1 284 1 79 2 145 1 96 5 97 1 209 2 289 1 191 1 262 1 293 1 102 1 241 1 120 1 35 1 
67 1 105 1 1 1 268 3 37 4 226 1 79 8 232 1 191 2 150 2 241 2 17 1 199 1 92 1 202 3 21 3 251 2 284 2 96 12 97 1 255 10 209 4 63 1 262 2 293 2 102 2 295 1 103 1 265 10 137 1 
139 1 174 1 0 1 105 1 267 1 4 2 38 1 37 1 79 1 12 1 275 1 147 1 112 1 83 1 191 1 113 1 276 1 85 1 241 1 197 1 91 1 199 1 19 1 203 1 21 1 284 1 285 1 96 2 97 1 166 1 287 1 209 2 101 2 63 1 262 1 216 1 293 1 295 1 
139 1 174 1 104 1 267 1 1 1 4 2 38 1 37 2 79 3 12 1 82 1 45 1 275 1 147 1 112 1 191 2 83 1 113 1 276 1 150 1 152 1 241 2 156 1 197 1 91 1 199 1 159 1 203 1 21 2 251 1 284 2 285 1 96 5 97 2 166 1 255 2 287 1 209 4 101 2 29 1 262 2 293 2 102 1 295 1 265 2 
174 2 139 3 267 2 71 1 181 1 4 1 38 1 37 1 78 1 228 1 79 1 9 1 12 2 11 1 275 1 83 8 191 2 113 1 241 2 120 1 89 1 197 2 246 1 199 1 123 1 203 8 284 2 285 7 96 2 97 2 287 1 209 4 169 2 101 1 132 1 63 1 262 2 293 2 136 1 
4 1 38 1 37 1 79 1 145 1 187 1 275 1 190 1 191 1 150 1 241 1 251 1 284 1 96 2 97 1 287 1 209 2 211 1 101 1 262 1 293 1 102 1 295 1 66 1 
21 1 272 1 251 1 284 1 79 2 96 2 97 1 255 1 209 2 191 1 262 1 293 1 241 1 102 1 120 1 265 1 
37 1 284 1 145 1 96 1 97 1 209 2 210 1 190 1 191 1 262 1 293 1 241 1 120 1 
21 1 251 1 284 1 79 2 96 2 97 1 255 1 209 2 191 1 262 1 150 1 293 1 241 1 102 1 120 1 265 1 
21 1 272 1 251 1 284 1 79 2 96 2 97 1 255 1 209 2 191 1 132 1 262 1 293 1 241 1 102 1 265 1 
37 1 284 1 145 1 96 1 97 1 209 2 210 1 190 1 191 1 132 1 262 1 293 1 241 1 
21 1 251 1 284 1 79 2 96 2 97 1 255 1 209 2 191 1 132 1 262 1 150 1 293 1 241 1 102 1 265 1 
21 1 251 1 284 1 79 2 96 2 97 1 255 1 209 2 191 1 262 1 150 1 293 1 241 1 102 1 265 1 
174 1 139 1 105 1 267 1 4 1 37 1 79 1 12 1 147 1 112 1 83 1 191 1 276 1 241 1 197 1 91 1 199 1 203 1 284 1 285 1 96 2 97 1 209 2 101 1 63 1 29 1 262 1 293 1 
174 1 139 1 105 1 267 1 4 1 37 1 79 1 12 1 147 1 83 1 191 1 241 1 197 1 91 1 199 1 93 1 203 1 22 1 284 1 285 1 96 2 97 1 209 2 213 1 101 1 63 1 262 1 293 1 
21 1 251 1 284 1 79 2 96 2 97 1 255 1 209 2 191 1 262 1 150 1 293 1 241 1 102 1 295 1 265 1 
174 1 139 1 267 1 4 1 79 2 9 1 82 1 147 1 112 1 83 1 191 1 276 1 150 1 241 1 197 1 91 1 203 1 21 1 251 1 284 1 285 1 96 2 97 1 255 1 209 2 101 1 29 1 262 1 293 1 102 1 265 1 
4 1 37 2 38 1 79 2 145 1 275 1 190 1 191 1 150 1 241 1 251 1 284 1 126 1 96 4 97 1 287 1 255 1 209 2 211 1 101 1 262 1 293 1 102 1 295 1 66 1 265 1 
268 2 1 1 37 4 225 1 39 1 79 6 145 1 190 1 191 2 150 2 241 2 155 1 244 1 17 1 55 1 92 1 202 1 161 1 249 1 251 2 96 10 59 1 209 4 262 2 293 2 32 1 102 2 103 1 
268 2 18 1 92 2 202 1 37 3 249 1 161 2 225 2 79 2 39 1 96 5 59 1 209 2 191 1 262 1 32 1 293 1 241 1 
268 2 1 1 37 6 225 1 39 2 79 7 145 2 190 2 191 2 150 2 241 2 155 1 244 1 17 1 157 1 92 1 202 1 161 1 249 1 251 2 96 13 59 1 209 4 262 2 293 2 32 1 102 2 103 1 
268 2 1 1 37 6 225 1 39 2 79 7 145 2 190 2 191 2 150 2 241 2 155 1 244 1 17 1 157 1 92 1 202 1 161 1 249 1 251 2 96 13 59 1 209 4 262 2 293 2 32 1 102 2 103 1 
1 1 268 3 108 1 37 7 225 1 182 1 79 6 39 1 145 1 191 1 150 1 241 1 159 1 92 2 18 1 202 1 162 1 161 1 249 1 251 1 96 13 59 1 209 2 289 1 262 1 293 1 32 1 102 2 103 1 35 1 
174 1 4 2 37 1 40 1 79 1 11 1 83 2 191 1 241 1 53 1 197 1 196 1 199 1 203 2 163 1 284 1 285 2 96 2 97 1 287 2 209 2 169 2 101 2 63 1 262 1 293 1 294 1 295 1 
174 1 197 1 220 1 176 1 72 1 141 1 203 2 204 1 125 1 183 1 285 2 9 1 189 1 146 1 44 1 61 2 83 2 52 1 136 1 
197 1 174 1 220 1 176 1 72 1 141 1 203 1 204 1 125 1 285 1 24 1 189 1 44 1 61 2 83 1 52 1 136 1 
174 1 197 1 139 1 267 1 72 1 203 1 78 1 183 1 285 1 207 1 12 1 83 1 16 1 89 1 
174 1 197 1 220 1 176 1 72 1 141 1 203 1 204 1 125 1 183 1 285 1 189 1 146 1 44 1 61 2 83 1 52 1 136 1 
5 1 
178 1 179 1 177 1 160 1 279 1 250 1 242 1 
219 1 178 1 42 1 46 1 279 2 51 1 242 1 90 1 200 1 160 1 164 1 62 1 168 1 170 1 31 1 33 1 138 1 
219 2 139 4 174 2 267 1 270 2 143 1 8 2 42 2 12 1 45 1 274 1 83 1 46 2 235 1 47 1 279 2 51 1 150 1 118 1 242 2 281 1 197 1 54 2 91 1 94 1 160 3 203 1 251 1 164 4 285 1 98 1 129 1 130 1 168 2 62 2 27 1 170 2 28 1 31 2 102 1 33 2 
219 1 268 2 75 1 109 1 145 4 8 4 42 1 190 4 279 3 150 4 242 7 54 4 92 1 18 1 202 2 160 7 283 1 164 6 251 4 253 1 170 1 31 3 102 4 33 1 103 1 137 1 
219 1 4 1 38 1 182 1 76 1 227 1 184 1 145 1 42 1 275 1 236 1 193 1 86 1 242 2 160 2 162 1 287 1 130 2 168 1 62 1 101 1 170 1 259 1 64 1 102 2 33 1 35 1 66 1 
219 1 179 1 178 1 160 1 250 1 42 1 170 1 279 1 242 1 33 1 
54 1 160 2 251 1 164 2 8 1 279 1 150 1 31 1 102 1 
178 1 168 1 62 1 46 1 279 1 51 1 
174 3 139 2 219 1 267 2 222 1 78 1 188 1 42 1 12 2 83 2 46 2 51 1 154 1 242 1 89 1 197 2 91 1 203 2 160 1 285 2 206 1 129 1 286 1 26 1 258 1 62 1 168 1 214 1 170 1 33 1 
174 1 139 1 105 1 267 1 4 3 37 1 38 2 12 1 275 2 191 1 83 1 112 1 147 1 236 1 276 1 241 1 87 1 197 1 199 1 91 1 203 1 284 1 285 1 96 1 97 1 287 2 209 2 101 3 29 1 262 1 293 1 66 2 
219 1 54 2 178 2 160 2 164 4 8 2 42 1 167 1 129 1 26 1 170 1 279 4 31 2 242 1 33 1 
140 1 230 1 34 1 
80 1 140 1 34 1 231 1 218 1 
140 1 230 1 34 1 
140 1 230 1 34 1 
140 1 20 1 34 1 
140 1 20 1 34 1 
140 1 20 1 34 1 
140 1 34 1 
266 1 261 1 
17 1 1 2 108 1 159 1 37 4 162 1 182 1 79 3 145 1 96 7 209 4 289 1 191 2 114 1 262 2 293 2 102 1 241 2 35 1 
289 1 1 1 177 1 108 1 159 1 37 3 162 1 182 1 79 2 145 1 102 1 96 5 35 1 
251 1 79 2 96 2 209 2 191 1 262 1 150 1 119 1 293 1 241 1 102 1 
17 1 268 2 1 1 92 1 37 3 202 1 251 1 79 3 145 1 96 6 190 1 150 1 102 1 103 1 
1 6 268 2 108 1 37 10 182 2 226 1 79 10 145 3 190 2 191 2 114 2 150 2 241 2 17 4 159 2 202 2 162 2 251 2 96 20 289 1 209 4 262 2 293 2 102 3 135 1 103 1 35 1 137 1 
268 1 37 1 96 1 
202 1 79 1 96 1 
17 1 1 1 37 2 251 1 79 3 145 1 96 5 45 1 190 1 150 1 102 1 
268 1 1 2 75 1 37 4 109 1 79 6 145 1 190 1 191 1 150 2 241 1 17 1 92 1 18 1 159 1 202 1 283 1 251 2 253 1 96 10 209 2 262 1 293 1 32 1 102 2 
17 1 1 2 159 1 37 3 162 1 182 1 79 3 145 1 96 6 102 1 35 1 
17 1 1 2 108 1 159 1 37 2 162 1 182 1 79 1 96 3 209 2 289 1 191 1 114 1 262 1 293 1 135 1 241 1 
17 2 1 5 159 3 37 5 162 2 76 1 182 2 79 5 145 2 96 10 209 2 191 1 262 1 293 1 32 1 241 1 102 2 35 1 
251 1 79 2 96 2 209 2 191 1 262 1 32 1 293 1 241 1 102 1 
251 1 79 2 96 2 209 2 191 1 262 1 150 1 32 1 293 1 241 1 102 1 
244 1 17 1 1 2 159 1 37 2 162 1 182 1 79 1 96 3 209 6 191 3 114 1 262 3 32 1 293 3 135 1 241 3 
69 1 268 4 1 8 108 1 37 15 6 1 182 3 79 15 145 5 190 3 191 5 114 2 150 3 119 1 241 5 244 1 17 5 159 3 92 1 202 3 162 3 251 3 96 30 289 1 209 10 262 5 293 5 32 1 135 1 217 1 102 5 103 1 35 2 
268 1 1 1 108 1 37 4 182 1 79 3 145 1 191 1 241 1 92 1 18 1 159 1 202 1 162 1 96 7 209 2 289 1 262 1 293 1 32 1 102 1 35 1 
268 2 1 2 108 1 37 5 182 1 79 5 145 1 191 2 150 1 119 1 241 2 17 1 159 1 92 1 18 1 202 1 162 1 251 1 96 10 289 1 209 4 262 2 32 1 293 2 102 2 103 1 35 1 
268 1 1 1 75 1 37 4 109 1 79 6 145 1 190 1 191 2 150 2 119 1 241 2 17 1 92 1 18 1 202 1 283 1 251 2 253 1 96 10 209 4 262 2 293 2 32 1 102 2 
268 1 75 1 37 4 109 1 79 6 145 1 190 1 191 2 150 2 119 1 241 2 92 1 18 1 202 1 283 1 251 2 253 1 96 10 209 4 262 2 293 2 32 1 102 2 
268 1 1 1 108 1 37 4 182 1 79 3 145 1 191 1 241 1 92 1 18 1 159 1 202 1 162 1 96 7 209 2 289 1 262 1 293 1 32 1 102 1 35 1 
268 1 1 1 75 1 37 4 109 1 79 6 145 1 190 1 191 1 150 2 241 1 17 1 92 1 18 1 202 1 283 1 251 2 253 1 96 10 209 2 262 1 293 1 32 1 102 2 
268 1 75 1 37 4 109 1 79 6 145 1 190 1 191 2 150 2 119 1 241 2 92 1 18 1 202 1 283 1 251 2 253 1 96 10 209 4 262 2 293 2 32 1 102 2 
268 1 1 3 75 1 37 3 109 1 79 7 191 3 114 1 150 2 241 3 244 1 17 2 92 1 18 1 159 1 202 1 283 1 251 2 253 1 96 10 209 6 262 3 32 1 293 3 102 2 
17 4 1 9 108 1 159 5 37 5 162 4 76 1 182 4 79 5 145 2 96 10 167 1 289 1 102 2 35 2 
268 1 75 1 37 4 109 1 79 6 145 1 190 1 191 2 150 2 241 2 244 1 92 1 18 1 202 1 283 1 251 2 253 1 96 10 209 4 262 2 32 1 293 2 102 2 
287 1 105 1 101 1 4 1 192 1 172 1 149 1 
287 1 105 1 106 1 101 1 4 1 192 1 142 1 172 1 149 1 144 1 57 1 99 1 
174 1 197 1 139 1 12 1 267 1 177 1 83 1 203 1 78 1 285 1 89 1 
139 1 174 1 197 1 105 1 267 1 91 1 4 2 38 1 203 1 285 1 287 1 12 1 275 1 147 1 83 1 113 1 101 2 276 1 
174 1 139 3 105 1 267 2 175 1 4 2 38 2 110 1 275 1 83 1 147 1 113 1 148 1 276 1 238 1 86 1 15 1 197 1 91 2 203 1 285 1 287 2 101 2 
174 1 139 3 105 1 267 2 175 1 4 2 38 2 110 1 275 1 83 2 147 1 113 1 148 1 238 1 86 1 15 1 197 1 91 2 203 2 22 1 285 2 287 2 290 1 101 2 
139 1 178 1 270 1 4 1 224 1 38 1 227 1 275 1 83 1 148 1 236 1 279 1 86 1 203 1 285 1 287 1 168 1 62 1 101 1 259 1 64 1 66 1 
139 1 178 1 270 1 4 1 38 1 227 1 275 1 83 1 148 1 236 1 279 1 86 1 203 1 285 1 287 1 27 1 168 1 62 1 101 1 259 1 64 1 66 1 
174 1 197 1 83 1 203 1 123 1 285 1 
139 3 197 2 174 3 267 2 246 1 71 1 91 1 181 1 123 1 203 7 228 1 285 6 9 1 188 1 12 2 169 1 83 7 153 1 154 1 281 1 136 1 
139 1 174 1 104 1 105 2 267 1 1 1 108 1 4 2 37 3 38 1 182 1 79 2 145 1 9 1 82 1 275 1 147 1 191 2 83 1 112 1 113 1 276 1 241 2 53 1 197 1 91 1 159 1 203 1 162 1 284 2 285 1 96 5 97 2 287 1 289 1 209 4 101 2 29 1 262 2 293 2 102 1 295 1 35 1 
219 2 139 2 178 1 179 1 270 1 143 1 41 1 42 2 12 1 274 1 83 1 46 2 235 1 279 1 51 1 118 1 242 1 94 1 160 1 203 1 250 1 285 1 286 1 168 3 62 3 27 1 170 2 33 2 
139 2 197 1 174 2 267 1 91 1 123 1 203 2 285 2 9 1 98 1 83 2 235 1 281 1 
174 1 139 1 197 1 267 1 180 1 203 4 78 1 285 4 9 1 12 1 83 4 290 1 89 1 
139 1 197 1 174 2 267 1 222 1 91 1 203 2 285 2 186 1 206 1 188 1 83 2 148 1 154 1 
174 1 197 1 12 1 44 1 61 1 141 1 83 1 203 1 52 1 285 1 
174 1 197 1 83 2 203 2 294 1 285 2 9 1 136 1 
139 3 197 2 174 2 267 2 246 1 180 1 181 1 203 5 78 1 228 1 285 4 9 1 12 1 83 5 148 1 89 1 
139 3 197 2 174 2 267 2 180 1 181 1 203 5 77 1 78 1 228 1 285 4 9 1 12 1 83 5 148 1 89 1 
139 1 174 1 197 1 105 1 267 1 91 1 4 2 38 1 203 1 22 1 285 1 287 1 12 1 275 1 147 1 83 1 113 1 101 2 
139 1 197 1 174 2 267 1 91 1 203 1 285 1 188 1 83 1 148 1 153 1 154 1 281 1 
287 1 196 1 73 1 101 1 4 1 163 1 7 1 40 1 254 1 
100 1 70 1 73 1 
105 1 73 1 7 1 65 1 254 1 
105 1 70 1 178 1 73 1 2 1 110 1 7 2 41 1 254 2 100 1 62 2 168 2 260 1 279 1 118 1 86 1 65 2 15 1 88 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) (123,207) (123,207) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) (123,207) (123,207) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) (123,207) (123,207) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) (123,207) (123,207) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) 337 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException (293,338) 337 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 169 223 173 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 169 223 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 82 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 15 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 42 6 281 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 42 6 281 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 42 6 281 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 42 6 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 230 265 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 169 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | ASSIGN | 815 | = null
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | ASSIGN | 11229 | = null
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | CONSTANT | 3771 | 20 -> 0
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5772 | 0 -> -1
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 4506 | < -> >=
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | CONSTANT | 441 | 0 -> -1
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 3004 | < -> !=
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
344 1 112 1 66 1 56 1 333 2 233 1 280 2 293 1 27 1 72 1 338 1 207 1 91 1 278 1 311 1 123 1 
344 1 112 1 66 1 56 1 333 2 233 1 280 2 293 1 27 1 72 1 338 1 207 1 91 1 278 1 311 1 123 1 
344 1 112 1 66 1 56 1 333 2 233 1 280 2 293 1 27 1 72 1 338 1 207 1 91 1 278 1 311 1 123 1 
344 1 112 1 66 1 56 1 333 2 233 1 280 2 293 1 27 1 72 1 338 1 207 1 91 1 278 1 311 1 123 1 
33 2 267 1 0 1 326 2 299 1 112 1 66 1 4 1 270 3 56 1 333 4 280 4 27 1 72 1 104 1 182 3 140 1 91 1 
344 1 66 1 112 1 4 1 56 1 25 1 333 2 280 2 72 1 71 1 296 1 104 1 182 1 91 1 278 1 311 1 
72 1 66 1 56 1 333 1 280 1 293 1 
337 1 72 1 66 1 270 1 56 1 35 1 333 2 280 2 293 1 
337 1 72 1 66 1 270 1 56 1 35 1 333 2 280 2 293 1 
252 1 50 1 292 1 
180 2 50 1 249 1 
222 1 74 2 276 2 144 2 193 2 47 2 245 1 210 2 
324 2 1 1 213 2 142 1 3 1 144 2 45 1 300 1 126 1 193 3 47 2 98 1 221 1 222 1 164 1 74 3 283 2 165 1 51 1 53 1 7 2 316 1 170 1 80 1 116 2 245 1 349 1 118 1 176 1 119 1 227 1 276 2 228 1 183 1 62 1 209 1 210 2 
133 1 74 1 269 1 276 1 67 1 144 1 193 1 47 1 245 1 210 1 
188 1 253 1 292 1 67 1 125 1 34 1 47 1 193 1 127 1 334 1 16 1 74 1 50 1 158 1 
133 1 269 1 292 1 144 2 67 2 125 1 34 1 47 2 193 2 245 1 127 2 334 2 100 1 16 1 74 2 50 1 276 2 158 1 210 2 
334 1 171 1 303 1 139 1 127 1 
334 2 204 1 294 1 171 1 50 1 292 1 303 1 127 2 
334 1 171 1 127 1 
133 1 269 1 67 1 144 1 47 1 193 1 303 1 245 1 127 1 334 1 100 1 74 1 276 1 210 1 
50 1 
334 2 294 1 171 1 50 1 292 1 302 1 303 1 127 2 
260 2 327 1 8 2 111 1 171 2 292 1 83 1 303 2 127 5 84 2 334 5 294 1 50 1 264 1 284 1 181 1 184 1 308 1 166 1 
213 1 142 1 170 1 80 1 79 1 45 1 47 1 193 2 118 1 221 1 227 1 59 1 74 2 283 1 276 1 183 1 51 1 287 1 210 1 7 1 
222 1 252 1 
5 1 67 1 144 1 47 2 193 2 70 1 222 1 74 2 225 1 276 1 210 1 
202 1 314 1 287 1 
213 1 142 1 170 1 80 1 45 1 193 1 138 1 118 1 221 1 222 1 227 1 74 1 283 1 183 1 51 1 7 1 
253 1 205 1 79 1 144 1 47 5 193 5 59 2 222 1 74 5 225 1 276 4 159 1 210 4 187 1 
133 1 74 1 276 1 67 1 193 1 47 1 210 1 
222 1 59 1 74 3 276 3 144 1 193 3 47 3 210 3 
133 1 74 1 276 1 67 1 193 1 47 1 210 1 
70 1 74 1 225 1 276 1 67 1 144 1 193 1 47 1 210 1 
324 1 213 1 142 1 330 1 45 1 144 2 67 1 125 1 126 1 193 4 47 3 127 1 334 1 221 1 222 1 164 1 225 1 74 4 283 1 51 1 53 1 7 1 170 1 316 1 80 1 79 1 116 2 34 1 245 1 349 1 118 1 176 1 119 1 227 1 59 1 16 1 276 3 323 1 158 1 228 1 183 1 62 1 209 1 210 3 
253 1 5 1 67 1 47 2 193 2 59 1 222 1 74 2 276 1 159 1 210 1 
79 1 144 1 125 1 67 1 34 1 47 3 193 3 127 1 334 1 59 2 16 1 225 1 74 3 50 1 276 3 323 1 158 1 210 3 110 1 
202 1 144 1 47 2 193 2 59 1 225 1 74 2 276 2 287 1 210 2 
213 1 142 1 170 1 80 1 45 1 193 1 118 1 221 1 222 1 227 1 74 1 283 1 183 1 51 1 7 1 
213 1 142 1 80 1 5 1 150 1 67 1 45 1 193 1 24 1 118 1 221 1 222 1 227 1 74 1 283 1 183 1 7 1 
211 1 324 4 98 2 164 1 309 1 287 2 53 1 343 1 202 2 314 2 346 1 115 1 135 1 116 2 349 1 176 1 119 1 120 1 62 1 141 1 20 1 209 2 
67 1 47 1 193 1 153 1 74 1 276 1 158 1 210 1 
78 1 246 1 
78 1 246 1 
304 1 312 1 
304 1 312 1 
304 1 312 1 
78 1 113 1 246 1 
78 1 261 1 246 1 
304 1 78 2 163 1 136 1 246 2 312 1 
78 1 113 1 246 1 
78 1 113 1 246 1 
78 1 263 1 246 1 
78 1 263 1 246 1 
78 1 263 1 246 1 
78 1 334 1 169 1 38 1 223 1 173 1 46 1 246 1 127 1 
78 1 169 1 38 1 223 1 46 1 246 1 
112 1 91 1 27 1 
71 1 112 1 91 1 
305 1 39 1 71 1 175 1 91 3 27 2 
305 1 71 1 190 1 175 1 91 2 27 1 
305 2 71 1 175 1 91 2 27 1 
162 1 325 1 260 1 327 1 64 1 194 1 249 1 303 4 232 1 26 1 127 5 334 5 28 1 50 2 284 3 309 1 226 1 54 2 343 1 8 1 171 1 346 1 291 2 81 1 292 1 83 2 84 1 85 2 120 1 294 1 180 3 41 1 
162 2 325 2 260 2 214 1 327 1 298 1 249 3 332 5 217 1 232 4 303 7 127 9 334 9 28 1 50 5 284 8 309 3 30 1 54 6 343 3 8 2 111 1 171 6 346 3 291 6 292 1 82 1 83 6 139 5 84 2 120 3 294 1 180 9 61 1 41 3 
162 1 325 1 260 1 67 1 144 1 193 1 47 1 249 2 303 2 232 1 26 1 127 3 334 3 100 1 74 1 50 3 284 3 309 1 343 1 54 2 133 1 8 1 111 1 269 1 346 1 81 1 291 2 292 1 83 2 245 1 84 1 85 1 120 1 180 4 276 1 41 1 210 1 
162 1 325 1 260 1 249 2 232 1 303 1 127 2 26 1 334 2 50 2 284 3 309 1 54 2 343 1 8 1 111 1 346 1 291 2 81 1 82 1 83 2 84 1 85 1 120 1 180 4 41 1 
227 1 252 1 40 1 
227 1 230 1 
231 1 
221 1 227 1 118 1 
227 1 156 1 
221 1 227 1 
195 1 221 1 227 3 40 2 118 1 14 1 
200 1 279 1 343 1 201 1 324 7 290 2 23 3 218 1 98 4 250 2 86 1 224 1 103 1 185 1 309 1 259 1 209 3 
200 1 279 1 343 1 201 1 324 7 290 2 23 3 218 1 98 4 250 2 86 1 224 1 103 1 185 1 309 1 259 1 209 3 
200 1 279 1 343 1 201 1 324 7 290 2 23 3 218 1 58 1 98 4 250 2 86 1 224 1 103 1 185 1 309 1 259 1 209 3 
279 1 324 1 250 1 86 2 224 1 36 1 98 1 
324 9 23 4 97 1 218 1 98 5 250 2 164 2 224 1 103 1 309 1 310 1 200 1 343 1 201 1 290 3 116 4 137 1 349 2 119 2 86 1 185 1 62 2 259 1 209 4 
213 1 142 1 191 1 66 1 4 1 301 1 333 2 280 2 27 1 72 1 237 1 71 1 104 1 283 1 286 1 7 1 311 1 289 1 112 1 55 1 80 1 270 1 243 1 56 1 57 1 39 1 321 1 182 1 351 1 91 2 
213 1 142 1 191 1 4 1 301 1 333 3 280 3 27 1 72 1 237 1 71 1 104 1 283 1 29 1 286 1 7 1 311 1 32 1 289 1 112 1 80 1 270 2 56 1 12 1 57 1 39 1 321 1 182 1 351 1 91 2 
213 1 142 1 191 1 4 1 301 1 333 2 280 2 27 1 237 1 71 1 104 1 283 1 286 1 311 1 7 1 32 1 289 1 80 1 112 1 270 2 12 1 39 1 182 1 351 1 91 2 
94 1 213 1 142 1 191 2 333 1 280 1 49 1 221 1 72 1 283 1 282 1 29 1 7 1 311 2 341 1 289 2 80 1 56 1 227 1 17 1 351 2 183 1 352 1 
213 1 142 1 191 1 66 1 301 1 333 1 280 1 27 1 72 1 237 1 71 1 283 1 286 1 7 1 311 1 32 1 289 1 112 1 80 1 243 1 56 1 57 1 39 1 321 1 351 1 91 2 
256 1 
2 1 325 1 213 2 260 1 142 1 327 1 127 2 334 2 221 1 101 1 130 1 283 2 284 1 198 1 7 2 199 1 341 1 342 1 8 1 171 2 80 1 83 1 84 1 320 1 15 1 227 1 294 1 160 1 183 2 352 1 
342 1 2 1 171 2 302 1 127 2 334 2 294 1 60 1 160 1 198 1 199 1 
342 1 334 1 2 1 76 1 160 1 198 1 148 1 127 1 199 1 
342 1 2 1 171 2 272 1 302 1 127 2 334 2 294 1 60 1 76 1 160 1 198 1 148 1 199 1 
2 1 67 1 144 1 193 1 47 1 302 1 127 2 334 2 100 1 74 1 50 1 198 1 146 1 199 1 342 1 133 1 171 3 269 1 292 1 272 2 245 1 255 1 294 1 60 2 276 1 160 1 210 1 
2 1 260 1 327 1 249 2 127 3 334 3 236 2 50 2 76 2 284 1 198 1 148 2 52 1 199 1 342 1 8 1 171 4 241 2 292 1 272 2 83 1 244 2 13 2 84 1 294 2 274 1 87 1 60 2 180 2 160 1 
2 1 260 1 327 1 249 2 127 3 334 3 236 2 50 1 76 2 284 1 198 1 148 2 52 1 199 1 342 1 8 1 171 4 241 2 292 1 272 2 83 1 244 2 13 2 84 1 294 2 274 1 60 2 88 1 160 1 208 1 19 1 
2 1 260 1 327 1 249 2 127 3 334 3 236 2 50 1 76 2 284 1 198 1 148 2 52 1 199 1 342 1 8 1 171 4 241 2 292 1 272 2 83 1 244 2 13 2 84 1 294 2 274 1 60 2 88 1 160 1 208 1 19 1 
2 1 260 1 327 1 216 1 127 3 334 3 145 2 236 2 73 2 50 1 76 2 284 1 198 1 148 2 199 1 167 1 342 1 8 1 171 4 292 1 272 2 83 1 318 1 244 2 84 1 294 2 274 1 60 2 180 2 160 1 19 1 
2 1 260 1 327 1 249 2 127 3 334 3 236 2 50 1 76 3 284 1 146 1 198 1 148 3 52 1 199 1 342 1 8 1 241 2 171 5 292 1 272 3 83 1 244 2 13 2 84 1 294 2 274 1 60 3 88 1 160 1 208 1 19 1 
2 1 260 1 327 1 249 2 127 3 334 3 236 2 50 1 76 3 284 1 146 1 198 1 148 3 52 1 199 1 342 1 8 1 241 2 171 5 292 1 272 3 83 1 244 2 13 2 84 1 294 2 274 1 60 3 88 1 160 1 208 1 19 1 
2 1 260 1 327 1 216 1 127 3 334 3 236 2 145 2 73 2 50 1 76 2 284 1 198 1 148 2 199 1 342 1 8 1 171 4 292 1 272 2 83 1 244 2 84 1 294 2 274 1 87 1 60 2 180 2 160 1 
324 6 23 2 218 1 98 3 250 1 222 2 164 1 103 1 287 1 309 1 53 1 200 1 201 1 343 1 202 1 252 1 314 1 290 2 116 2 349 1 176 1 119 1 185 1 62 1 20 1 209 3 
124 3 324 14 65 1 23 1 96 1 48 1 98 8 222 1 164 2 165 1 108 1 287 11 132 1 309 1 53 1 31 1 168 1 343 2 202 4 314 11 10 3 346 2 116 4 349 2 176 2 119 2 120 1 228 1 62 2 41 2 259 1 209 6 
324 2 213 1 142 1 45 1 193 2 47 1 48 1 69 1 98 1 221 1 222 1 164 1 74 2 283 1 106 1 165 1 51 1 7 1 53 1 202 1 170 1 80 1 79 1 116 2 138 1 349 1 118 1 37 1 176 1 119 1 227 1 59 1 276 1 183 1 228 1 62 1 210 1 209 1 
142 1 43 1 45 1 47 1 193 2 48 1 98 3 51 1 309 1 7 1 53 2 202 3 314 3 116 4 118 1 119 2 59 1 120 1 121 1 276 1 62 2 209 4 210 1 324 7 213 1 23 1 126 1 221 1 164 2 74 2 283 1 287 3 343 1 170 1 290 1 346 1 79 1 80 1 349 2 176 2 227 1 178 1 228 1 183 1 41 1 258 1 353 1 
324 2 213 8 142 2 3 2 193 1 47 1 98 1 221 2 164 2 74 1 283 7 339 1 165 1 307 1 109 1 7 8 53 2 341 1 32 1 55 1 80 2 114 1 347 1 116 4 349 2 273 1 176 2 119 2 59 1 227 3 350 1 276 1 183 2 228 1 62 2 352 1 20 1 210 1 209 1 
324 3 143 1 144 1 47 1 193 1 48 1 98 1 164 1 225 1 74 1 287 1 309 1 53 1 343 1 202 1 314 1 346 1 116 2 349 1 176 1 119 1 120 1 276 1 62 1 41 1 210 1 209 2 
324 2 343 1 202 1 314 1 346 1 23 1 115 1 116 2 349 1 98 2 176 1 119 1 164 1 62 1 287 1 259 1 20 1 53 1 
211 1 324 2 202 1 314 1 116 2 349 1 176 1 119 1 120 1 164 1 62 1 287 1 309 1 20 1 53 1 209 2 
324 4 98 2 164 1 287 2 309 1 53 1 343 1 202 2 314 2 346 1 116 2 349 1 176 1 119 1 120 1 62 1 41 1 20 1 209 2 
324 2 343 1 202 1 314 1 346 1 23 1 114 1 115 1 116 2 349 1 98 2 176 1 119 1 164 1 62 1 287 1 259 1 53 1 
211 1 324 2 202 1 314 1 114 1 116 2 349 1 176 1 119 1 120 1 164 1 62 1 287 1 309 1 53 1 209 2 
324 4 343 1 202 2 314 2 346 1 23 1 114 1 116 2 349 1 98 2 176 1 119 1 120 1 164 1 62 1 309 1 287 2 41 1 259 1 209 2 53 1 
343 1 324 4 202 2 314 2 346 1 116 2 349 1 98 2 176 1 119 1 120 1 164 1 62 1 309 1 287 2 41 1 209 2 53 1 
324 2 213 1 142 1 45 1 126 1 193 1 98 1 221 1 222 1 164 1 74 1 283 1 165 1 51 1 7 1 53 1 170 1 80 1 116 2 349 1 118 1 176 1 119 1 227 1 183 1 228 1 62 1 209 1 
324 1 213 1 142 1 248 1 5 1 67 1 45 1 24 1 193 1 221 1 222 1 164 1 74 1 283 1 7 1 53 1 80 1 150 1 116 2 349 1 118 1 176 1 119 1 227 1 183 1 228 1 62 1 209 1 
324 4 48 1 98 2 164 1 287 2 309 1 53 1 343 1 202 2 314 2 346 1 116 2 349 1 176 1 119 1 120 1 62 1 41 1 209 2 
324 4 213 1 142 1 45 1 126 1 193 1 98 2 221 1 164 1 74 1 283 1 51 1 309 1 287 2 7 1 53 1 343 1 202 2 314 2 170 1 346 1 80 1 55 1 116 2 349 1 118 1 176 1 119 1 120 1 227 1 62 1 41 1 353 1 209 2 
324 3 23 1 144 1 47 1 193 1 48 1 98 2 164 1 225 1 74 1 309 1 287 1 53 1 343 1 202 1 314 1 346 1 116 2 349 1 176 1 177 1 119 1 120 1 276 1 62 1 41 1 259 1 209 1 210 1 
124 3 324 27 42 1 328 2 65 3 23 3 281 1 98 12 6 1 164 3 306 1 107 1 132 1 309 3 310 1 343 3 345 3 242 1 290 1 10 4 346 3 116 6 137 1 349 3 206 1 119 3 120 3 295 1 275 1 62 3 41 3 259 2 92 1 209 15 
124 3 324 27 42 1 328 2 65 3 23 3 281 1 98 12 6 1 164 3 306 1 107 1 132 1 309 3 310 1 343 3 345 3 242 1 290 1 10 4 346 3 116 6 137 1 349 3 206 1 119 3 120 3 295 1 275 1 62 3 41 3 259 2 92 1 209 15 
124 2 324 24 42 1 328 1 65 2 23 2 218 1 281 1 98 11 250 1 6 1 164 2 103 1 306 1 107 1 132 1 309 3 310 1 200 1 201 1 343 3 345 2 290 2 10 3 346 2 116 4 137 1 349 2 206 1 119 2 120 2 185 1 62 2 41 2 209 13 
21 1 124 1 324 13 328 1 65 1 23 1 281 1 98 6 6 1 164 2 107 1 132 1 309 2 343 2 345 1 10 2 346 2 116 4 137 1 349 2 119 2 120 2 295 1 62 2 41 2 259 1 92 1 209 7 
124 2 324 14 42 1 328 2 65 2 23 1 281 1 98 6 6 2 164 2 306 1 107 1 309 1 310 1 343 1 345 2 290 1 10 2 346 1 116 4 137 1 349 2 206 1 119 2 120 1 62 2 41 1 209 8 
324 2 213 2 142 1 3 2 193 2 47 2 48 1 98 1 221 1 164 1 74 2 283 2 165 1 109 1 7 2 53 1 203 1 172 1 80 1 271 1 347 1 116 2 349 1 176 1 119 1 227 1 89 1 228 1 62 1 229 1 209 1 
32 1 313 1 289 1 213 2 142 1 112 1 80 1 254 1 55 1 68 1 27 1 39 1 71 1 237 1 283 2 321 1 286 1 91 2 7 2 
32 1 313 1 289 1 213 1 142 1 112 1 80 1 174 1 27 1 39 1 71 1 237 1 283 1 321 1 286 1 91 2 7 1 
289 1 213 1 142 1 80 1 254 1 221 1 251 1 227 1 283 1 282 1 183 1 352 1 7 1 341 1 
32 1 313 1 289 1 213 1 142 1 112 1 254 1 80 1 68 1 27 1 39 1 71 1 237 1 283 1 321 1 286 1 91 2 7 1 
196 1 
252 1 50 1 264 1 292 1 284 1 83 1 166 1 
260 1 327 1 249 1 127 1 334 1 50 2 284 1 52 1 8 1 241 1 171 1 292 1 83 1 13 1 84 1 294 1 180 1 
260 1 213 1 142 1 327 1 8 1 80 1 84 1 118 1 14 1 221 1 227 1 155 1 283 1 183 1 265 1 230 1 7 1 
124 1 42 1 260 2 327 2 329 1 65 1 249 3 127 1 334 1 50 4 306 1 105 1 284 5 309 1 54 4 343 1 8 2 171 1 10 1 346 1 291 4 292 1 83 2 84 2 206 1 120 1 294 1 180 6 41 1 
260 1 327 1 329 2 67 1 144 1 193 1 47 1 127 1 334 1 100 1 102 1 74 1 103 1 284 2 309 1 200 1 201 1 239 1 343 2 133 1 8 1 269 1 83 2 245 1 84 1 276 1 208 1 210 1 
260 1 327 1 8 1 292 1 83 1 84 1 264 1 50 1 284 1 166 1 
343 1 54 2 346 1 291 2 83 2 249 2 120 1 180 4 50 2 284 2 41 1 309 1 
334 1 294 1 171 1 50 1 292 1 127 1 
325 2 260 2 213 4 189 2 142 1 327 1 127 3 334 3 129 1 235 1 221 1 101 1 130 2 283 4 284 2 7 4 341 1 8 2 149 1 111 1 171 4 80 1 83 2 84 2 320 1 227 1 294 2 183 2 352 1 
324 1 213 1 142 1 144 2 45 1 126 1 193 3 47 2 221 1 222 1 164 1 74 3 283 1 51 1 7 1 53 1 316 1 170 1 80 1 116 2 245 1 349 1 118 1 176 1 119 1 227 1 276 2 228 1 183 1 62 1 209 1 210 2 
54 2 325 1 260 1 327 1 8 1 291 2 292 2 83 2 249 2 84 1 250 1 180 4 130 1 50 4 284 1 
169 1 46 1 
169 1 46 1 
169 1 46 1 
169 1 46 1 
169 1 46 1 
169 1 46 1 
169 1 46 1 
169 1 46 1 
78 1 246 1 
124 1 324 2 42 1 119 1 164 1 10 1 65 1 116 2 62 1 137 1 349 1 209 1 98 1 
124 1 343 1 324 5 42 1 10 2 346 1 65 1 23 1 116 4 137 1 128 1 349 2 98 3 119 2 164 2 62 2 41 1 132 1 259 1 209 2 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 4 137 1 349 2 206 1 98 3 119 2 120 1 164 2 306 1 62 2 309 1 41 1 310 1 209 5 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 4 137 1 349 2 206 1 98 3 119 2 120 1 164 2 306 1 62 2 309 1 41 1 310 1 209 5 
124 1 324 2 42 1 119 1 164 1 10 1 65 1 116 2 62 1 137 1 349 1 209 1 98 1 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 4 137 1 349 2 206 1 98 3 119 2 120 1 164 2 306 1 62 2 309 1 41 1 310 1 209 5 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 6 137 1 349 3 128 1 206 1 98 3 119 3 120 1 164 3 306 1 62 3 309 1 41 1 310 1 209 5 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 6 137 1 349 3 206 1 98 3 119 3 120 1 164 3 306 1 62 3 309 1 41 1 310 1 92 1 209 5 
200 1 324 7 201 3 343 1 290 3 23 6 218 1 98 3 103 3 185 2 309 1 259 3 209 4 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 6 137 1 349 3 206 1 98 3 119 3 120 1 164 3 306 1 62 3 309 1 41 1 310 1 92 1 209 5 
200 1 343 1 324 8 201 1 290 2 23 3 116 4 349 2 218 1 98 4 250 1 119 2 164 2 103 1 185 1 62 2 309 1 259 1 310 1 209 4 
200 1 201 1 343 1 324 6 252 1 290 2 23 2 218 1 98 3 250 1 103 1 185 1 309 1 209 3 
343 1 324 4 346 1 23 1 116 2 128 1 349 1 98 2 119 1 120 1 164 1 62 1 309 1 41 1 259 1 209 2 
124 1 324 7 343 1 10 2 346 1 65 1 23 1 98 3 120 1 309 1 132 1 41 1 259 1 209 4 
124 2 324 25 23 8 218 1 98 13 250 1 164 1 103 2 108 1 309 5 132 1 310 1 200 2 168 1 239 1 201 2 343 5 290 4 10 2 346 2 116 2 349 1 119 1 120 2 185 1 62 1 41 2 259 4 209 12 
324 1 10 1 209 1 
124 1 324 1 98 1 
324 6 343 1 290 1 346 1 23 2 98 3 120 1 121 1 41 1 309 1 259 1 209 3 
124 1 343 1 324 8 42 1 290 1 10 1 346 1 65 1 23 1 116 4 137 1 349 2 206 1 98 3 119 2 120 1 164 2 306 1 62 2 309 1 41 1 310 1 209 5 
200 1 343 1 324 6 201 1 290 1 23 2 98 3 103 1 309 1 259 1 209 3 
201 1 324 3 290 1 23 2 116 2 349 1 218 1 98 1 234 1 119 1 164 1 103 1 185 1 62 1 259 1 310 1 209 2 
200 1 239 1 201 2 324 10 343 2 290 3 23 5 116 2 137 1 349 1 98 5 119 1 164 1 103 2 62 1 309 2 259 2 209 5 
343 1 324 2 346 1 23 1 116 2 137 1 349 1 98 2 119 1 164 1 62 1 259 1 
343 1 324 4 346 1 116 2 137 1 349 1 98 2 119 1 120 1 164 1 62 1 309 1 41 1 209 2 
324 3 201 1 290 1 23 2 116 6 137 1 349 3 98 1 234 1 119 3 164 3 103 1 62 3 310 1 259 1 92 1 209 2 
124 3 324 34 65 1 23 9 218 1 128 1 98 16 234 1 250 1 164 5 103 3 75 1 132 1 309 5 131 1 310 2 200 2 201 3 343 5 290 4 10 4 346 3 151 1 116 10 137 1 349 5 119 5 120 3 185 1 62 5 41 3 259 5 209 18 92 1 
22 1 222 1 253 1 74 1 159 1 193 1 47 1 
22 1 253 1 215 1 47 1 193 1 335 1 222 1 74 1 159 1 285 1 340 1 277 1 
221 1 227 1 213 1 142 1 252 1 80 1 283 1 183 1 352 1 7 1 341 1 
213 1 142 1 170 1 80 1 45 1 47 1 193 2 118 1 221 1 222 1 227 1 59 1 74 2 283 1 276 1 183 1 210 1 7 1 
213 1 189 1 142 1 5 1 45 1 67 2 193 2 47 2 221 2 222 1 74 2 283 1 7 1 170 1 315 1 80 1 34 1 118 2 59 1 227 3 276 2 156 1 158 1 210 1 
213 2 189 1 142 1 5 1 45 1 67 2 24 1 193 2 47 2 221 2 222 1 74 2 283 2 7 2 315 1 80 1 34 1 118 2 59 1 227 3 276 2 156 1 322 1 158 1 210 1 
213 3 189 1 142 1 125 1 127 2 334 2 221 1 283 3 50 1 7 3 266 1 171 1 315 1 80 1 292 1 118 1 154 1 227 4 156 1 322 1 40 1 183 1 230 1 
213 3 142 1 189 1 315 1 171 1 80 1 292 1 125 1 127 2 118 1 334 2 221 1 227 4 50 1 283 3 156 1 322 1 40 1 183 1 147 1 7 3 230 1 
213 1 142 1 80 1 283 1 307 1 7 1 
32 1 213 7 142 3 3 1 55 1 80 2 11 1 14 1 118 1 273 1 221 2 227 3 350 1 283 6 339 1 297 1 183 2 307 1 186 1 109 1 7 7 
324 6 213 1 142 1 23 2 45 1 126 1 193 2 47 1 48 1 218 1 98 3 250 1 221 1 222 2 164 2 103 1 74 2 283 1 51 1 287 1 309 1 53 2 7 1 200 1 343 1 201 1 202 1 314 1 290 2 170 1 172 1 80 1 55 1 116 4 349 2 118 1 176 2 119 2 227 1 59 1 276 1 185 1 62 2 258 1 353 1 209 3 210 1 
213 1 260 2 327 2 125 1 303 1 127 3 334 3 197 1 238 1 50 1 264 1 283 1 284 1 147 1 7 1 166 1 8 2 149 1 171 2 292 1 83 1 84 2 152 1 227 2 294 1 40 1 183 1 230 1 
213 1 142 1 80 1 231 1 14 1 118 1 221 1 227 1 155 1 283 1 40 1 307 1 7 1 
213 4 142 1 317 1 55 1 80 1 221 1 227 1 283 4 322 1 183 1 352 1 7 4 341 1 
212 1 213 2 189 1 142 2 80 1 11 1 118 1 221 1 227 1 283 2 157 1 186 1 7 2 93 1 
213 1 71 1 142 1 237 1 112 1 80 1 283 1 183 1 91 1 7 1 
32 1 221 1 227 1 213 2 142 1 80 1 89 1 283 2 55 1 109 1 7 2 
213 5 189 1 142 2 317 1 55 1 80 2 273 1 221 2 227 3 350 1 283 4 183 1 352 1 7 5 109 1 341 1 
213 5 189 1 142 2 317 1 55 1 80 2 319 1 221 2 227 3 350 1 283 4 183 1 352 1 7 5 109 1 341 1 
213 1 142 1 80 1 5 1 67 1 45 1 47 1 193 2 24 1 118 1 221 1 222 1 227 1 59 1 74 2 283 1 276 1 183 1 210 1 7 1 
213 1 189 1 142 2 80 1 11 1 14 1 118 1 221 1 227 1 283 1 297 1 186 1 7 1 
222 1 122 1 192 1 134 1 257 1 
44 1 144 1 192 1 67 2 125 1 193 1 47 1 303 1 127 2 334 2 100 1 74 1 50 1 133 1 240 1 268 1 269 1 292 1 134 1 34 1 245 1 16 1 276 1 323 1 122 1 158 1 257 1 210 1 
203 1 74 1 271 1 134 1 122 1 192 1 193 1 47 1 229 1 
240 1 44 1 134 1 
252 1 104 1 4 1 182 1 
72 1 104 1 4 1 56 1 182 1 333 1 280 1 
191 1 333 1 311 1 
344 2 66 1 4 1 56 1 331 1 333 3 280 3 117 1 72 1 104 1 182 1 77 1 
33 1 72 1 104 1 4 1 270 1 56 1 182 1 333 2 280 2 
326 1 66 1 112 1 56 1 333 1 280 1 27 1 72 1 182 1 140 1 91 1 
72 1 66 1 4 1 56 1 182 1 333 1 280 1 
72 1 104 1 66 1 4 2 56 1 333 1 280 1 
336 1 72 2 18 1 66 1 90 1 4 1 56 2 182 1 333 2 280 2 
267 1 326 1 66 1 4 1 270 2 56 1 333 3 280 3 220 1 72 1 104 1 182 2 161 1 
66 1 112 1 4 1 270 1 56 1 333 2 280 2 27 1 219 1 39 1 71 1 72 1 104 1 182 1 91 2 
33 1 267 1 326 1 299 1 66 1 4 1 270 2 56 2 333 4 280 4 72 2 104 1 182 2 
72 1 104 1 66 1 4 1 56 1 182 1 333 1 280 1 
267 1 344 1 326 1 4 2 270 2 56 1 331 1 333 4 280 4 72 1 179 1 104 2 182 3 77 1 
95 1 66 1 4 1 270 1 56 1 35 1 333 2 280 2 72 1 104 1 182 1 63 1 
344 2 66 1 4 1 56 1 331 2 333 3 280 3 247 1 72 1 104 1 182 1 77 1 
288 1 99 2 182 2 348 1 
72 1 66 1 56 1 333 1 280 1 262 1 
72 1 104 1 66 1 4 1 270 1 56 1 182 1 161 1 333 2 280 2 
9 1 
72 1 104 1 66 1 4 1 56 1 182 1 333 1 280 1 
344 1 66 1 270 1 4 1 56 1 333 3 280 3 72 1 104 1 182 1 161 1 
267 1 326 1 179 1 182 1 
4 1 182 1 

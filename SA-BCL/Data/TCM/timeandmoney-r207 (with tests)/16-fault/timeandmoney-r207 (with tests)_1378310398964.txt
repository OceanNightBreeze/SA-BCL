#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 234 178 128 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 234 178 128 193 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 234 178 128 (60,266) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 234 178 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 234 178 128 (60,266) (60,266) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 234 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 239 (86,135,299) (109,126,196) (109,126,196) (109,126,196) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (110,209,219) (110,209,219) 286 255 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 144 102 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 144 102 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 144 102 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 144 102 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 144 102 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 234 237 127 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.ArithmeticException 239 (86,135,299) (86,135,299) (86,135,299) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 97 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 234 178 128 (60,266) (60,266) 12 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 234 178 128 193 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 234 107 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 234 107 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 234 107 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 234 178 128 (60,266) (60,266) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 234 178 128 (60,266) (60,266) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 234 107 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 234 107 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2726 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 692 | = null
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J | OPERATOR | 2226 | * -> +
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 693 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1046 | = null
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | RETURN | 563 | return null
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
117 3 28 4 162 1 29 1 225 1 5 1 71 2 8 9 169 1 271 2 130 2 45 2 132 2 134 1 93 5 184 1 217 1 239 2 285 1 186 1 241 1 244 2 104 1 149 1 292 1 294 6 293 1 249 9 
117 3 28 4 162 1 29 1 225 1 5 1 71 2 8 9 169 1 271 2 130 2 45 2 132 2 134 1 93 5 184 1 217 1 239 2 285 1 186 1 241 1 244 2 104 1 149 1 292 1 294 6 293 1 249 9 
117 4 28 5 162 1 29 1 225 1 5 1 71 2 8 10 169 1 271 2 130 2 45 2 132 2 134 1 93 6 184 1 217 1 239 2 285 1 186 1 241 1 244 2 104 1 149 1 292 1 294 7 293 1 249 10 
117 2 28 3 29 1 225 1 5 1 71 2 8 7 169 1 271 2 130 2 45 1 132 2 134 1 93 4 184 1 217 1 239 2 285 1 186 1 241 1 244 2 104 1 149 1 292 1 294 4 293 1 249 7 
117 1 28 2 162 1 93 3 225 1 184 1 217 1 239 1 71 1 186 1 244 1 8 4 169 1 294 3 271 1 249 4 45 2 132 1 
1 1 93 1 225 1 164 1 184 1 217 1 239 1 285 1 244 1 78 1 149 1 8 2 271 1 249 2 130 1 132 1 
117 1 28 1 93 2 225 1 184 1 217 1 8 3 292 1 294 1 271 2 249 3 130 1 132 2 
117 3 28 4 162 1 29 1 225 1 4 1 71 1 8 9 169 1 271 2 130 1 45 2 132 2 93 5 21 1 184 1 217 1 239 1 186 1 244 1 292 1 294 7 293 1 249 9 
117 3 28 4 162 1 29 1 225 1 4 1 71 1 8 9 169 1 271 2 130 1 45 2 132 2 93 5 21 1 184 1 217 1 239 1 186 1 244 1 292 1 294 7 293 1 249 9 
39 1 10 1 65 1 
90 1 26 2 65 1 
178 1 234 1 128 1 
178 1 234 1 128 1 193 1 
178 1 234 1 128 1 266 1 
219 1 209 1 
178 1 234 1 
148 1 189 1 110 1 238 1 34 1 
148 1 39 1 181 1 189 2 110 2 238 1 206 1 65 1 
189 1 110 1 238 1 
148 1 178 1 234 1 189 1 60 1 110 1 128 1 266 1 
65 1 
148 1 39 1 181 1 189 2 110 2 238 1 14 1 65 1 
159 1 181 1 279 1 215 1 238 2 53 2 148 2 147 1 39 1 165 2 189 5 289 2 110 5 232 1 65 1 275 1 253 1 66 1 298 1 
270 1 98 1 
270 1 98 1 
30 1 192 1 
30 1 192 1 
30 1 270 1 98 1 192 1 
79 1 270 1 98 1 
79 1 270 1 98 1 
79 1 270 1 98 1 
163 1 270 1 98 1 
59 1 270 1 98 1 
180 1 30 1 270 2 98 2 172 1 192 1 
163 1 270 1 98 1 
163 1 270 1 98 1 
55 1 234 1 189 1 92 1 68 1 270 1 110 1 98 1 283 1 17 1 124 1 
176 1 92 2 68 2 261 2 283 2 98 2 99 1 185 1 124 1 55 2 56 1 189 2 58 1 81 1 270 2 110 2 172 1 65 1 17 3 
244 1 239 1 71 1 
244 1 164 1 239 1 
54 1 244 3 268 1 164 1 123 1 71 2 
54 1 244 2 160 1 268 1 164 1 71 1 
54 1 244 2 268 2 164 1 71 1 
256 1 223 1 31 1 262 1 263 1 267 1 39 1 165 1 203 1 230 1 273 1 275 1 131 2 90 2 181 1 215 2 50 2 20 1 216 1 238 1 53 1 288 2 148 4 187 1 289 1 189 5 24 1 105 1 110 5 295 1 26 2 65 2 253 3 
148 1 189 1 220 1 110 1 40 1 6 1 
256 1 223 1 262 1 31 1 263 1 39 1 165 1 203 1 41 1 273 1 131 2 90 2 215 2 50 1 216 1 53 1 148 2 147 1 288 2 289 1 189 3 24 1 105 1 110 3 295 1 26 2 65 3 253 3 
256 1 223 2 262 2 31 2 263 1 7 1 39 1 165 1 203 1 83 1 41 1 273 2 131 4 90 4 212 1 215 4 50 2 216 2 53 1 288 4 147 1 148 3 289 1 189 4 24 2 105 1 110 4 295 2 26 4 65 4 253 5 
10 1 247 1 3 1 296 1 89 1 
3 1 194 1 
27 1 
22 1 3 1 252 1 
3 1 16 1 
22 1 3 1 
22 1 199 1 170 1 3 3 252 1 89 2 
0 2 119 3 223 1 179 1 72 1 242 2 38 1 188 4 228 1 201 1 290 1 80 1 152 7 273 1 62 1 222 1 297 3 
0 2 119 3 223 1 179 1 72 1 242 2 38 1 188 4 228 1 201 1 290 1 80 1 152 7 273 1 62 1 222 1 297 3 
0 2 119 3 223 1 179 1 72 1 242 2 38 1 188 4 228 1 201 1 290 1 80 1 112 1 152 7 273 1 62 1 222 1 297 3 
0 5 119 15 223 4 31 3 72 2 73 1 75 1 38 1 228 2 201 2 80 1 273 4 15 1 277 2 179 1 235 3 214 1 95 1 282 1 216 3 284 1 145 4 242 3 218 1 188 16 290 2 106 1 57 1 25 1 152 31 295 3 62 1 222 5 297 10 
0 3 223 3 119 6 2 1 72 1 73 1 75 1 38 1 201 1 228 2 80 1 12 1 273 3 277 2 214 1 242 2 218 1 245 1 188 8 290 2 152 14 62 2 222 1 297 4 
257 1 175 2 195 1 133 2 135 1 182 1 196 1 164 1 197 1 184 1 122 2 239 1 123 1 71 1 244 2 8 1 166 1 109 1 126 1 271 1 249 1 84 1 85 1 61 1 64 1 130 1 132 1 
257 1 195 1 196 1 225 1 164 1 197 1 122 1 123 1 71 1 8 3 166 1 84 1 271 1 85 1 173 1 130 1 132 1 175 1 133 1 135 1 93 1 217 1 239 1 141 1 52 1 244 2 190 1 109 1 294 2 249 3 64 1 
257 1 196 1 225 1 164 1 197 1 122 1 123 1 71 1 8 2 166 1 84 1 85 1 173 1 130 1 175 1 133 1 135 1 93 1 217 1 239 1 52 1 244 2 190 1 294 2 249 2 64 1 
175 1 133 1 70 1 3 1 122 1 197 2 141 1 100 1 22 1 37 1 77 1 8 1 167 1 166 2 82 1 271 1 249 1 250 1 84 2 85 1 64 1 130 2 132 1 
257 1 175 1 195 1 133 1 135 1 196 1 164 1 184 1 122 1 197 1 239 1 123 1 71 1 244 2 8 1 190 1 166 1 109 1 126 1 271 1 249 1 84 1 85 1 64 1 130 1 132 1 
174 1 
161 1 118 1 3 1 122 2 36 1 37 1 165 1 82 1 85 1 275 1 209 1 175 2 133 2 181 1 47 1 136 1 215 1 238 2 286 1 53 1 22 1 289 1 189 2 219 1 105 1 250 2 110 2 64 1 253 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
181 1 189 2 47 1 219 1 136 1 110 2 238 1 14 1 286 1 209 1 255 1 
47 1 136 1 53 1 286 1 165 1 189 1 289 1 219 1 110 1 275 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
189 1 47 1 219 1 136 1 110 1 286 1 209 1 255 1 
47 1 136 1 53 1 286 1 165 1 189 1 289 1 219 1 110 1 275 1 209 1 255 1 
73 1 75 1 277 2 218 1 245 1 48 1 214 1 102 1 144 1 
73 1 75 1 277 2 218 1 245 1 48 1 214 1 102 1 144 1 
73 1 75 1 277 2 218 1 245 1 48 1 214 1 102 1 144 1 
73 1 75 1 277 2 218 1 245 1 48 1 214 1 102 1 144 1 
73 1 75 1 277 2 218 1 245 1 48 1 214 1 102 1 144 1 
176 1 55 1 92 1 202 1 68 1 81 1 270 1 98 1 283 1 172 1 
59 1 153 1 
19 1 55 1 92 1 68 1 281 1 270 1 98 1 283 1 243 1 
79 1 11 1 
180 1 163 1 204 1 
176 1 92 1 68 1 261 1 283 1 98 1 99 1 185 1 124 1 55 1 189 1 58 1 81 1 270 1 110 1 172 1 65 1 17 2 
176 1 92 1 68 1 261 1 283 1 98 1 99 1 185 1 124 1 55 1 189 1 58 1 81 1 270 1 110 1 172 1 65 1 17 2 
176 1 92 1 68 1 261 1 283 1 98 1 99 1 185 1 124 1 55 1 189 1 58 1 81 1 270 1 110 1 172 1 65 1 17 2 
180 1 79 1 11 1 
180 1 79 1 11 1 
163 1 204 1 
180 1 163 1 204 1 
248 1 87 1 
234 1 92 1 262 1 68 1 261 1 237 1 283 1 98 1 267 1 148 1 55 1 187 1 189 1 59 1 58 1 248 1 270 1 110 1 127 1 153 1 87 1 17 1 
260 1 119 1 69 1 3 1 122 2 75 1 73 1 74 1 9 1 229 1 168 1 269 1 231 1 13 2 272 1 85 1 175 2 177 1 277 2 133 2 91 2 49 1 236 1 214 1 22 1 218 1 188 1 152 2 61 2 64 1 155 2 
175 2 257 1 133 2 195 1 135 1 182 1 164 1 122 2 239 1 123 1 71 1 244 2 190 1 166 1 85 1 64 1 86 1 129 1 299 1 
175 1 257 1 133 1 195 1 135 1 138 1 164 1 122 1 239 1 123 1 71 1 244 2 190 1 166 1 85 1 86 1 64 1 
175 1 133 1 120 1 3 1 122 1 100 1 22 1 37 1 166 1 82 1 250 1 85 1 64 1 129 1 
175 1 257 1 133 1 195 1 135 1 164 1 122 1 239 1 123 1 71 1 244 2 190 1 166 1 85 1 86 1 64 1 129 1 299 1 
287 1 
159 1 39 1 10 1 215 1 65 1 253 1 66 1 
39 1 165 1 200 1 275 1 90 1 210 1 181 1 215 1 238 1 53 1 289 1 189 1 108 1 110 1 26 1 65 2 253 1 
175 1 133 1 3 2 122 1 97 1 53 1 35 1 22 1 165 1 289 1 199 1 250 1 85 2 252 1 64 1 275 1 194 1 
116 1 161 1 223 2 31 2 32 1 226 1 39 2 165 2 41 1 273 2 88 1 275 2 131 5 90 3 181 1 235 1 137 1 215 5 96 1 238 1 216 2 145 1 53 2 288 5 189 1 289 2 105 1 24 2 106 1 110 1 26 3 295 2 65 5 253 8 115 1 
178 1 234 1 223 1 215 1 266 1 53 1 165 1 189 1 289 1 228 1 290 1 24 2 60 1 110 1 12 1 128 1 273 1 62 1 207 1 275 1 253 2 
159 1 215 1 53 1 39 1 165 1 289 1 275 1 65 1 66 1 253 1 
90 2 223 1 31 1 215 2 216 1 288 2 24 1 26 2 295 1 273 1 41 1 65 2 253 2 131 2 
39 1 189 1 181 1 110 1 238 1 65 1 
67 1 161 2 118 1 3 1 122 4 36 1 37 1 165 2 125 1 82 1 85 1 275 1 46 2 175 4 133 4 181 2 215 2 238 4 240 1 53 2 147 1 22 1 289 2 189 3 105 2 250 2 110 3 64 1 253 2 
178 1 234 1 128 1 193 1 
90 2 161 1 215 2 53 1 242 1 288 2 39 2 165 1 289 1 105 1 26 2 275 1 65 4 131 2 253 1 
92 1 68 1 43 1 
92 1 68 1 43 1 
92 1 68 1 43 1 
92 1 68 1 208 1 
176 1 92 1 68 1 248 1 205 1 
92 1 68 1 208 1 
92 1 68 1 208 1 
92 1 68 1 
270 1 98 1 
0 2 277 4 223 1 119 4 214 2 284 1 242 1 75 2 73 2 38 1 188 4 218 2 228 1 290 1 80 1 152 8 273 1 62 1 222 1 297 3 
0 2 119 3 223 1 242 1 38 1 188 3 228 1 290 1 80 1 10 1 152 6 62 1 273 1 297 2 
0 1 277 2 119 2 223 1 31 1 214 1 216 1 75 1 73 1 218 1 188 2 191 1 295 1 152 4 273 1 297 2 222 1 
0 1 223 1 119 4 235 1 31 1 282 1 216 1 145 2 188 3 106 1 295 1 152 7 273 1 222 1 297 2 
0 5 119 12 223 3 31 2 75 2 73 2 38 1 228 2 80 1 273 3 18 1 277 4 235 2 214 2 282 1 216 2 284 2 145 2 242 1 188 11 218 2 290 2 150 1 152 23 295 2 62 1 113 1 297 9 222 4 
119 1 152 1 145 1 
188 1 235 1 152 1 
277 2 0 2 119 3 223 1 94 1 31 1 214 1 216 1 73 1 75 1 218 1 188 3 191 1 152 6 295 1 273 1 222 1 297 3 
116 1 0 1 119 6 223 2 31 2 32 1 73 1 75 1 273 2 88 1 277 2 235 1 137 1 214 1 216 2 145 1 218 1 245 1 188 6 106 1 152 12 295 2 222 1 297 2 115 1 
0 1 223 1 119 3 188 3 228 1 290 1 152 6 62 1 273 1 297 2 222 1 
0 1 277 2 119 2 214 1 284 1 75 1 73 1 38 1 188 1 218 1 228 1 290 1 80 1 152 3 113 1 222 1 297 2 
277 2 0 3 119 5 223 2 214 1 73 1 75 1 218 1 245 1 188 5 228 2 290 2 12 1 152 10 62 1 273 2 297 5 222 2 
277 2 31 1 214 1 75 1 73 1 245 1 218 1 188 2 152 2 273 1 222 1 297 1 
0 1 277 2 119 2 223 1 31 1 214 1 216 1 75 1 73 1 245 1 218 1 188 2 295 1 152 4 273 1 297 2 222 1 
277 6 0 1 119 2 214 3 284 1 75 3 73 3 245 1 218 3 188 1 228 1 290 1 152 3 63 1 113 1 297 2 222 1 
0 7 119 18 223 5 31 3 73 5 75 5 38 1 228 3 80 1 273 5 15 1 277 10 235 3 95 1 214 5 282 1 216 3 284 2 145 4 242 1 218 5 245 1 188 16 290 3 106 1 191 1 25 1 152 34 295 3 62 2 63 1 113 1 222 5 297 12 
116 1 0 1 119 4 223 1 31 2 32 1 73 2 75 2 273 2 88 1 277 4 235 1 137 1 214 2 216 2 284 1 145 1 218 2 245 1 188 7 106 1 152 11 295 1 222 1 297 2 115 1 
116 1 0 1 119 5 223 1 31 3 32 1 73 3 75 3 273 3 88 1 277 6 235 1 137 1 214 3 282 1 216 3 284 1 145 2 245 1 218 3 188 9 106 1 191 1 152 14 295 1 222 2 297 3 115 1 
116 1 0 3 119 10 223 3 31 2 32 1 73 3 75 3 38 1 228 1 80 1 273 3 88 1 277 6 235 1 137 1 214 3 216 2 284 1 145 1 242 1 218 3 245 1 188 9 290 1 106 1 191 1 152 19 295 2 62 1 222 1 297 4 115 1 
116 1 0 3 119 7 223 2 31 2 32 1 73 3 75 3 38 1 228 1 80 1 273 3 88 1 277 6 235 1 137 1 214 3 216 2 284 1 145 1 242 1 218 3 245 1 188 10 290 1 106 1 191 1 152 17 295 1 62 1 222 2 297 5 115 1 
116 1 0 1 119 4 223 1 31 2 32 1 73 2 75 2 273 2 88 1 277 4 235 1 137 1 214 2 216 2 284 1 145 1 218 2 245 1 188 7 106 1 152 11 295 1 222 1 297 2 115 1 
116 1 0 1 119 6 223 2 31 2 32 1 73 1 75 1 273 2 88 1 277 2 235 1 137 1 214 1 216 2 145 1 218 1 245 1 188 6 106 1 152 12 295 2 222 1 297 2 115 1 
116 1 0 3 119 8 223 2 31 2 32 1 73 4 75 4 38 1 228 1 80 1 273 3 88 1 277 8 235 1 137 1 214 4 216 2 284 2 145 1 242 1 218 4 245 1 188 10 290 1 106 1 191 1 152 18 295 1 62 1 222 2 297 5 115 1 
116 1 0 3 119 7 223 2 31 3 32 1 73 4 75 4 273 3 88 1 277 8 235 1 137 1 214 4 216 3 284 2 145 1 245 1 218 4 188 9 106 1 152 16 295 2 63 1 222 3 297 6 115 1 
0 3 119 4 223 1 38 1 188 3 228 3 290 3 80 2 152 7 62 1 273 1 297 6 222 3 
116 1 0 3 119 8 223 2 31 2 32 1 73 4 75 4 38 1 228 1 80 1 273 3 88 1 277 8 235 1 137 1 214 4 216 2 284 2 145 1 242 1 245 1 218 4 188 10 290 1 106 1 152 18 295 1 62 1 63 1 222 1 297 4 115 1 
76 1 91 1 13 1 251 1 142 1 114 1 155 1 
258 1 91 1 51 1 142 1 101 1 227 1 76 1 13 1 251 1 42 1 114 1 155 1 
22 1 37 1 175 1 133 1 10 1 82 1 3 1 250 1 85 1 122 1 64 1 
234 1 107 1 
234 1 107 1 
234 1 107 1 
264 1 3 4 122 1 266 1 39 1 128 1 85 1 89 1 46 1 16 1 175 1 178 1 234 1 133 1 213 1 238 1 139 1 146 1 22 1 189 2 60 1 110 2 252 1 64 1 65 1 194 1 
3 4 121 1 122 1 266 1 39 1 128 1 85 1 89 1 46 1 16 1 175 1 178 1 234 1 133 1 238 1 139 1 146 1 22 1 189 2 60 1 110 2 252 1 64 1 65 1 194 1 
175 1 133 1 122 1 85 1 64 1 276 1 
175 1 133 1 224 1 280 1 3 1 122 1 22 1 199 1 250 1 252 1 85 2 64 1 156 1 
234 1 107 1 
159 1 3 2 122 1 121 1 39 1 165 2 125 1 171 1 275 2 44 1 89 1 175 1 133 1 181 1 215 1 238 2 139 1 53 2 148 1 289 2 189 3 250 1 110 3 151 1 65 1 253 1 66 1 194 1 
175 1 133 1 3 2 122 1 35 1 22 1 199 1 252 1 85 2 64 1 27 1 89 1 276 1 
175 2 133 2 224 1 182 1 3 2 122 2 103 1 37 1 22 2 82 1 250 1 252 1 85 3 154 1 64 2 156 1 
175 1 133 1 224 1 3 1 122 1 103 1 22 1 23 1 252 1 85 2 154 1 64 1 156 1 
175 1 257 1 133 1 164 1 122 1 239 1 244 1 250 1 85 1 64 1 
175 2 177 1 133 2 182 1 236 1 3 1 122 2 22 1 190 1 85 1 64 1 
224 1 3 4 122 3 37 1 82 1 85 4 274 1 175 2 177 1 133 3 211 1 182 1 22 3 103 1 250 1 252 1 64 3 154 1 156 1 
157 1 224 1 3 4 122 3 37 1 82 1 85 4 274 1 175 2 177 1 133 3 182 1 22 3 103 1 250 1 252 1 64 3 154 1 156 1 
234 1 107 1 
175 1 133 1 224 1 280 1 3 1 122 1 22 1 199 1 252 1 85 2 64 1 46 1 156 1 
93 1 10 1 225 1 217 1 
8 1 93 1 225 1 249 1 271 1 217 1 132 1 
249 1 197 1 130 1 
149 2 8 3 93 1 225 1 249 3 271 1 184 1 217 1 140 1 143 1 254 1 132 1 
8 2 93 1 294 1 225 1 249 2 271 1 217 1 45 1 132 1 
28 1 93 1 184 1 239 1 71 1 186 1 244 1 8 1 271 1 249 1 132 1 
8 1 93 1 225 1 249 1 271 1 184 1 132 1 
8 1 225 2 249 1 271 1 184 1 217 1 132 1 
93 1 33 1 225 1 184 1 8 2 271 2 249 2 111 1 233 1 132 2 
117 1 28 1 29 1 93 2 225 1 184 1 217 1 8 3 293 1 294 2 271 1 249 3 132 1 
158 1 93 1 225 1 164 1 184 1 217 1 239 1 123 1 71 1 244 2 8 2 294 1 271 1 249 2 132 1 
117 1 28 1 162 1 93 2 225 1 184 1 217 1 8 4 294 2 271 2 249 4 45 1 132 2 
8 1 93 1 225 1 249 1 271 1 184 1 217 1 132 1 
117 1 28 1 93 3 225 2 140 1 217 2 143 1 52 1 149 1 8 4 294 2 249 4 271 1 132 1 
259 1 93 1 225 1 184 1 183 1 4 1 217 1 8 2 294 1 271 1 249 2 132 1 
93 1 225 1 184 1 140 1 217 1 143 2 8 3 149 2 221 1 271 1 249 3 132 1 
278 2 246 1 291 1 93 2 
198 1 8 1 249 1 271 1 184 1 132 1 
29 1 8 2 93 1 294 1 225 1 249 2 271 1 184 1 217 1 132 1 
265 1 
8 1 93 1 225 1 249 1 271 1 184 1 217 1 132 1 
29 1 149 1 8 3 93 1 294 1 225 1 249 3 271 1 184 1 217 1 132 1 
117 1 28 1 93 1 52 1 
93 1 225 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (95,220) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (95,220) 50 8 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (95,220) 50 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 289 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) (114,188) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) (114,188) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 121 (149,269) (149,269) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (6,228,282) (6,228,282) (6,228,282) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 45 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 245 150 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 202 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (7,41,61,193) (7,41,61,193) (7,41,61,193) 74 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3533 | stmt -> ;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3257 | stmt -> ;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration; | RETURN | 900 | return null
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 4007 | return null
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 2635 | stmt -> ;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1188 | < -> !=
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
120 1 2 1 242 1 198 1 25 1 9 1 265 1 154 1 71 1 137 1 300 1 105 1 145 1 304 1 
103 1 
120 2 154 1 249 1 219 1 25 2 88 1 103 1 64 1 
120 5 194 1 82 2 25 5 88 1 200 2 64 2 246 1 268 1 154 2 249 1 296 1 116 1 318 1 321 1 319 2 103 1 117 1 187 1 
202 1 88 1 103 1 
103 1 126 2 201 1 
242 2 206 1 71 2 137 2 300 2 9 2 304 2 145 1 
283 1 121 1 77 1 242 3 44 1 86 1 290 1 9 2 291 2 90 2 94 1 47 1 206 1 251 1 137 2 300 2 17 1 256 1 304 2 145 1 170 2 22 1 112 2 24 1 223 1 224 2 313 1 153 1 179 1 269 1 270 1 315 1 71 3 280 1 186 1 236 1 190 1 
2 1 242 1 71 1 137 1 300 1 9 1 105 1 265 1 304 1 145 1 
120 1 242 1 2 1 25 1 88 1 293 1 230 1 71 1 137 1 52 1 183 1 103 1 104 1 253 1 
120 2 242 1 2 1 25 2 88 1 9 1 293 1 71 1 137 1 52 1 183 1 300 1 103 1 253 1 304 1 
120 1 154 1 25 1 113 1 64 1 
120 2 2 1 242 1 198 1 25 2 88 1 9 1 265 1 64 1 154 1 249 1 71 1 181 1 137 1 300 1 105 1 103 1 304 1 145 1 
120 1 25 1 64 1 
242 2 9 1 247 1 28 1 206 2 71 2 137 2 300 1 304 1 
76 1 273 1 142 1 
121 1 170 1 77 1 22 1 242 1 24 1 291 1 90 1 153 1 131 1 206 1 251 1 315 1 71 1 186 1 236 1 
121 1 308 1 170 1 76 1 77 1 22 1 242 2 4 1 24 1 9 1 291 1 90 1 153 1 251 1 315 1 71 2 137 1 300 1 186 1 236 1 
202 1 206 1 
308 2 43 1 242 5 4 1 9 4 247 1 13 1 165 1 206 1 71 5 137 5 300 4 104 1 304 1 
1 1 2 1 242 2 71 2 137 2 300 2 9 2 105 1 
308 1 242 3 206 1 71 3 137 3 300 3 9 3 304 1 
2 1 242 1 71 1 137 1 300 1 9 1 105 1 
247 1 28 1 2 1 242 1 71 1 137 1 300 1 9 1 304 1 
283 1 121 1 120 1 77 1 242 4 2 1 4 1 290 1 9 3 91 1 291 1 90 1 293 1 94 1 247 1 206 1 251 1 52 1 137 3 300 3 17 1 253 1 256 1 304 2 145 1 308 1 170 1 22 1 112 2 24 1 25 1 223 1 62 1 224 1 153 1 313 1 269 1 315 1 71 4 183 1 280 1 186 1 236 1 190 1 
308 1 43 1 242 2 206 1 71 2 137 2 300 1 9 1 104 1 
120 1 308 2 2 1 242 3 4 1 25 1 62 1 9 3 293 1 247 1 71 3 137 3 52 1 183 1 300 3 103 1 253 1 213 1 304 1 
308 1 76 1 242 2 9 2 247 1 273 1 71 2 137 2 300 2 304 1 
121 1 170 1 77 1 22 1 242 1 24 1 291 1 90 1 153 1 206 1 251 1 315 1 71 1 186 1 236 1 
170 1 77 1 22 1 242 1 291 1 90 1 153 1 66 1 206 1 251 1 315 1 71 1 186 1 236 1 189 1 
283 1 215 1 76 2 216 1 285 1 241 1 44 2 112 2 223 1 224 4 290 1 227 1 94 1 180 1 273 2 272 1 37 1 17 1 303 1 142 2 280 1 143 1 279 1 190 2 
1 1 2 1 242 1 71 1 183 1 137 1 300 1 9 1 
95 1 244 1 
95 1 244 1 
95 1 244 1 
95 1 244 1 
129 1 220 1 
129 1 220 1 
129 1 220 1 
95 1 244 1 
95 1 244 1 
95 1 244 1 
95 1 244 1 
95 1 244 1 
95 1 244 1 
95 1 120 1 75 1 50 1 244 1 25 1 8 1 
95 1 75 1 50 1 244 1 
57 2 288 1 274 1 234 1 281 2 
49 1 288 1 281 1 
49 1 234 1 281 1 
57 1 288 2 274 1 210 1 234 1 281 3 
57 1 288 1 274 1 234 1 27 1 281 2 
120 4 194 1 285 1 241 1 196 1 82 1 3 1 88 1 126 1 200 1 128 1 162 1 246 3 130 1 248 1 294 2 103 1 55 1 147 1 148 1 110 1 25 4 227 1 154 4 31 1 319 1 233 1 279 1 117 1 
120 8 194 6 285 3 241 3 82 2 3 4 88 1 124 1 126 9 200 2 201 3 128 6 246 8 97 1 248 1 207 1 54 1 103 5 169 1 147 2 110 2 25 8 113 5 64 5 226 1 227 3 68 5 154 7 31 3 319 2 233 6 187 1 279 3 117 1 
120 3 194 2 285 1 241 1 82 1 3 1 88 1 200 1 126 4 201 2 162 1 246 3 128 2 294 1 103 3 55 1 147 1 110 1 25 3 227 1 154 2 31 1 319 1 233 2 279 1 187 1 
120 4 194 4 285 2 241 2 82 1 3 2 88 1 126 7 200 1 201 3 128 4 162 1 246 5 97 1 294 2 207 1 54 1 103 4 55 1 147 1 110 1 25 4 227 2 154 3 31 2 319 1 233 4 279 2 187 1 
89 1 
202 1 78 1 236 1 
101 1 236 1 
251 1 315 1 236 1 
299 1 236 1 
315 1 236 1 
78 2 251 1 315 1 185 1 236 3 168 1 
241 1 310 1 44 4 222 1 199 1 224 7 225 1 67 1 205 1 134 1 180 3 275 1 276 2 209 1 211 1 279 1 303 2 190 3 
283 1 284 1 158 4 285 3 241 4 44 16 199 2 87 1 290 1 203 1 205 1 134 2 17 1 209 5 211 2 303 5 58 1 310 2 261 1 222 1 112 2 223 1 224 31 225 1 227 3 67 1 180 10 70 1 33 3 31 3 320 1 276 3 279 4 190 15 
283 1 260 1 44 1 310 1 112 2 223 1 276 1 17 1 289 1 290 1 224 1 211 1 
241 1 310 1 44 4 222 1 199 1 224 7 225 1 67 1 205 1 134 1 180 3 276 2 209 1 211 1 279 1 303 2 190 3 
241 1 310 1 44 4 222 1 199 1 224 7 225 1 67 1 205 1 134 1 180 3 276 2 209 1 211 1 279 1 303 2 190 3 
41 1 114 1 61 1 7 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 114 1 61 1 7 1 
191 1 193 2 288 1 197 1 84 1 7 2 90 1 291 1 49 1 51 1 16 1 210 1 170 1 151 1 177 1 266 1 153 1 316 1 73 2 186 1 235 1 188 1 234 1 282 1 281 2 
171 1 
77 2 240 1 242 1 2 1 82 1 88 1 90 2 12 1 246 2 96 1 249 3 103 2 104 1 253 1 19 2 258 2 170 2 108 1 259 2 110 1 25 5 176 1 26 1 267 1 183 1 277 1 117 1 186 1 120 5 194 2 46 2 126 2 200 1 291 2 201 2 127 1 293 1 297 1 136 2 138 2 137 1 52 1 214 1 144 1 307 1 64 6 153 1 230 1 315 1 69 4 71 1 231 2 319 1 155 1 236 1 
120 3 242 1 2 1 12 1 293 1 249 1 297 1 52 1 137 1 104 1 253 1 19 1 219 1 25 3 176 1 64 2 267 1 230 1 69 2 71 1 183 1 277 1 
120 3 242 1 2 1 88 1 12 1 293 1 249 1 297 1 52 1 137 1 104 1 253 1 103 1 259 1 219 1 25 3 176 1 64 1 267 1 230 1 69 3 71 1 183 1 277 1 
120 3 242 1 2 1 88 1 12 1 293 1 249 1 297 1 52 1 137 1 104 1 253 1 103 1 258 1 19 1 259 1 219 1 25 3 176 1 64 2 267 1 230 1 69 3 71 1 183 1 277 1 
2 2 242 2 82 1 88 1 9 1 12 1 246 1 249 2 105 1 103 1 253 1 104 1 257 1 19 3 258 3 259 1 25 4 265 1 176 1 26 1 267 1 178 1 183 1 34 1 277 1 117 1 120 4 194 1 198 1 46 1 200 1 201 1 293 1 297 1 136 1 52 1 137 2 138 1 300 1 214 1 304 1 145 1 59 1 219 1 218 1 64 5 230 1 69 3 71 2 231 1 319 1 
2 1 242 1 82 1 88 1 12 1 246 1 249 2 253 1 104 1 103 2 258 2 19 2 108 1 259 2 25 4 176 1 26 1 267 1 183 1 277 1 117 1 120 4 194 1 46 2 200 1 126 2 201 2 293 1 297 1 136 2 52 1 137 1 138 2 214 1 64 4 230 1 69 4 71 1 231 2 319 1 
2 2 242 2 82 1 88 1 9 1 12 1 246 1 249 1 105 1 253 1 104 1 103 1 257 1 258 1 19 1 259 1 25 3 265 1 176 1 26 1 267 1 183 1 34 1 277 1 117 1 120 3 194 1 198 1 46 1 200 1 201 1 293 1 297 1 136 1 137 2 52 1 138 1 300 1 214 1 304 1 145 1 218 1 64 2 230 1 69 3 71 2 231 1 319 1 
2 2 242 2 82 1 88 1 9 1 12 1 246 1 249 1 105 1 253 1 104 1 103 1 257 1 258 1 19 1 259 1 25 3 265 1 176 1 26 1 267 1 183 1 34 1 277 1 117 1 120 3 194 1 198 1 46 1 200 1 201 1 293 1 297 1 136 1 137 2 52 1 138 1 300 1 214 1 304 1 145 1 218 1 64 2 230 1 69 3 71 2 231 1 319 1 
2 2 242 2 82 1 88 1 9 1 12 1 246 1 249 1 252 1 105 1 253 1 104 1 103 1 258 1 19 1 259 1 25 3 265 1 176 1 267 1 183 1 34 1 277 1 117 1 120 3 194 1 286 1 287 1 198 1 46 1 200 1 126 1 293 1 297 1 137 2 52 1 138 1 300 1 214 1 304 1 145 1 221 1 312 1 64 2 230 1 69 3 71 2 319 1 
2 2 242 2 82 1 88 1 9 1 12 1 246 1 249 1 105 1 253 1 104 1 103 1 257 1 19 2 258 2 259 2 25 3 265 1 176 1 26 1 267 1 178 1 183 1 34 1 277 1 117 1 120 3 194 1 198 1 46 1 200 1 201 1 293 1 297 1 136 1 137 2 52 1 138 1 300 1 214 1 304 1 145 1 218 1 64 3 230 1 69 4 71 2 231 1 319 1 
2 2 242 2 82 1 88 1 9 1 12 1 246 1 249 1 105 1 253 1 104 1 103 1 257 1 19 2 258 2 259 2 25 3 265 1 176 1 26 1 267 1 178 1 183 1 34 1 277 1 117 1 120 3 194 1 198 1 46 1 200 1 201 1 293 1 297 1 136 1 137 2 52 1 138 1 300 1 214 1 304 1 145 1 218 1 64 3 230 1 69 4 71 2 231 1 319 1 
120 4 194 1 286 2 242 1 2 1 287 1 82 1 88 1 46 2 126 2 200 1 12 1 246 1 293 1 249 2 297 1 252 2 138 2 137 1 52 1 103 1 104 1 253 1 214 1 19 2 258 2 108 1 259 2 25 4 176 1 64 4 267 1 230 1 69 4 71 1 183 1 277 1 319 1 117 1 
238 1 77 2 80 1 242 1 86 2 9 1 90 7 245 1 96 1 94 2 98 1 251 1 16 1 17 2 102 1 256 1 170 7 112 4 179 1 182 1 30 1 35 1 38 1 280 2 186 4 190 1 283 2 44 1 290 2 291 6 133 1 137 1 300 1 307 1 308 1 217 1 216 1 223 2 224 2 153 3 315 3 71 1 236 4 
283 1 76 1 285 1 242 1 241 1 44 1 9 1 290 1 94 1 247 1 137 1 300 1 17 1 303 1 142 1 304 1 167 1 112 2 263 1 223 1 224 3 227 1 180 1 273 1 71 1 31 1 280 1 279 1 190 2 
283 1 76 1 241 1 44 3 199 1 290 1 202 1 94 1 205 1 134 1 206 2 17 1 303 2 142 1 216 1 112 2 222 1 223 1 224 6 225 1 273 1 180 2 276 1 280 1 279 1 190 3 
283 1 94 1 99 1 112 2 263 1 223 1 17 1 290 1 280 1 
121 1 283 1 77 1 242 2 4 1 44 1 9 1 290 1 90 1 291 1 92 1 94 1 131 1 206 1 251 1 137 1 300 1 17 1 302 1 256 1 170 1 308 1 22 1 24 1 112 2 263 1 223 1 224 2 174 1 153 1 179 1 273 1 315 1 71 2 186 1 280 1 236 1 190 1 
157 2 77 1 76 7 242 3 241 3 4 1 5 1 9 1 10 1 90 3 94 3 251 2 16 1 17 3 256 1 170 3 22 2 112 6 24 2 263 1 179 1 269 2 273 7 180 8 31 2 276 1 279 3 280 3 186 2 119 2 190 10 283 3 121 2 285 2 44 10 199 1 290 3 291 3 205 1 134 1 206 2 298 1 137 1 300 1 209 4 303 4 142 7 308 1 56 2 149 2 222 1 223 3 224 20 225 1 153 2 227 2 315 2 71 3 236 2 
283 1 215 1 76 1 216 1 241 1 44 2 112 2 223 1 224 2 290 1 94 1 227 1 180 1 273 1 209 1 17 1 142 1 280 1 
283 1 76 1 216 1 285 1 112 2 223 1 224 2 290 1 94 1 180 1 273 1 272 1 17 1 303 1 142 1 280 1 279 1 190 2 
283 1 285 1 76 2 216 1 241 1 44 2 112 2 223 1 224 4 290 1 94 1 227 1 180 2 273 2 31 1 209 1 17 1 303 1 279 1 142 2 280 1 190 2 
283 1 215 1 76 1 217 1 241 1 44 2 112 2 223 1 224 2 290 1 94 1 227 1 180 1 273 1 209 1 17 1 142 1 280 1 
283 1 76 1 217 1 285 1 112 2 223 1 224 2 290 1 94 1 180 1 273 1 272 1 17 1 303 1 142 1 280 1 279 1 190 2 
283 1 285 1 76 2 217 1 241 1 44 2 112 2 223 1 224 4 290 1 94 1 227 1 180 2 273 2 31 1 209 1 17 1 303 1 279 1 142 2 280 1 190 2 
283 1 285 1 76 2 241 1 44 2 112 2 223 1 290 1 224 4 94 1 227 1 180 2 273 2 31 1 209 1 17 1 303 1 279 1 142 2 280 1 190 2 
121 1 283 1 77 1 242 1 44 1 290 1 90 1 291 1 94 1 206 1 251 1 17 1 256 1 170 1 22 1 24 1 112 2 223 1 224 2 153 1 179 1 269 1 315 1 71 1 186 1 280 1 236 1 190 1 
283 1 77 1 123 1 242 1 44 1 290 1 90 1 291 1 94 1 206 1 251 1 17 1 256 1 170 1 22 1 112 2 223 1 224 2 153 1 179 1 66 1 315 1 71 1 186 1 280 1 236 1 189 1 190 1 
283 1 285 1 76 2 241 1 44 2 112 2 263 1 223 1 224 4 290 1 94 1 227 1 180 2 273 2 31 1 209 1 17 1 303 1 279 1 142 2 280 1 190 2 
121 1 269 1 48 1 149 1 
283 1 285 1 76 1 242 1 241 1 44 2 9 1 290 1 94 1 247 1 163 1 137 1 300 1 209 1 17 1 142 1 304 1 112 2 263 1 223 1 224 3 227 1 180 1 273 1 71 1 31 1 279 1 280 1 190 1 
283 2 158 2 122 1 285 3 241 3 44 9 87 1 290 2 93 1 135 2 139 1 17 2 209 3 303 3 166 1 305 2 260 1 262 1 112 4 264 1 223 2 224 19 227 3 180 6 317 1 33 1 70 1 31 3 279 3 190 10 
283 2 122 1 158 2 285 2 241 3 44 13 87 2 290 2 292 1 135 3 100 1 139 1 209 1 17 2 18 1 141 1 303 1 305 1 309 1 260 1 261 1 262 2 112 4 264 1 223 2 224 23 311 1 227 3 180 2 317 2 33 2 31 3 279 2 190 10 
283 2 158 4 122 1 285 4 241 4 44 15 87 3 290 2 292 1 135 3 100 1 139 1 17 2 209 3 18 1 254 1 141 1 303 2 166 1 305 1 309 1 260 1 262 1 112 4 264 1 223 2 224 31 311 1 227 4 180 5 317 2 33 3 70 1 31 4 279 4 190 16 
283 3 158 4 122 1 285 3 241 4 44 17 87 3 290 3 292 1 135 4 100 1 139 1 17 3 209 3 18 1 254 1 141 1 303 3 166 1 305 1 309 1 260 1 261 1 262 1 112 6 264 1 223 3 224 32 311 1 227 4 180 6 317 2 33 3 70 1 31 4 279 3 190 15 
283 2 158 4 122 1 285 7 241 8 44 27 199 1 87 2 290 2 292 1 205 1 134 1 135 4 100 1 139 1 301 2 17 2 209 8 18 1 141 1 303 7 305 1 309 1 260 1 261 1 222 1 262 1 112 4 264 1 223 2 224 52 311 1 225 1 227 7 180 15 317 1 33 4 70 2 31 7 276 1 279 8 190 25 
283 1 242 2 44 1 86 2 290 1 90 2 291 2 245 1 94 1 204 1 132 1 295 1 137 2 17 1 256 1 170 2 112 2 263 1 223 1 224 2 153 1 179 1 315 1 71 2 278 1 186 1 280 1 38 1 236 1 323 1 190 1 
40 1 170 1 307 1 77 1 291 1 90 1 153 1 96 1 315 1 51 1 208 1 186 1 236 1 156 1 
170 1 23 1 288 1 197 1 6 1 291 1 90 1 153 1 228 1 49 1 51 1 16 1 210 1 186 1 234 1 156 1 281 2 282 1 
228 1 48 1 170 1 23 1 51 1 6 1 16 1 90 1 291 1 156 1 282 1 
170 1 23 1 288 1 197 1 111 1 6 1 291 1 90 1 153 1 49 1 51 1 16 1 210 1 186 1 234 1 281 2 282 1 
60 1 
194 1 82 1 88 1 200 1 246 1 116 1 319 1 321 1 117 1 103 1 
157 1 194 5 285 2 109 2 241 2 126 10 201 5 128 5 246 5 227 2 29 1 31 2 233 5 103 5 279 2 
120 1 249 1 25 1 88 1 103 1 64 1 
42 2 120 3 194 2 77 2 240 2 82 2 200 2 90 4 291 4 127 1 246 2 96 1 249 2 140 1 106 1 144 1 170 4 307 1 110 2 25 3 64 4 153 1 314 1 315 1 319 2 187 1 186 1 117 1 236 1 
246 1 202 1 194 1 116 1 88 1 321 1 103 1 
120 1 194 1 82 1 88 1 200 1 126 1 201 1 246 1 249 1 136 1 103 2 25 1 26 1 64 1 231 1 319 1 117 1 
157 2 77 1 78 2 240 1 241 2 82 4 160 2 88 2 90 1 246 9 249 3 251 1 15 2 101 3 103 8 168 1 170 1 109 2 110 2 25 5 175 2 29 2 116 1 31 2 36 2 184 1 118 2 186 2 117 4 279 2 120 5 194 8 285 2 45 1 200 4 291 1 126 12 201 6 293 2 128 6 48 1 152 1 64 5 153 1 227 2 314 1 315 1 321 1 319 4 233 6 236 6 
194 4 158 1 285 2 241 2 82 1 87 1 126 6 200 1 201 3 292 1 128 5 246 6 18 1 141 1 103 3 309 1 109 1 311 1 227 2 33 1 31 2 319 1 233 5 117 1 279 2 
120 1 194 2 2 1 242 1 241 2 82 1 243 1 198 1 199 1 9 1 200 1 246 2 134 1 137 1 300 1 105 1 257 1 145 1 304 1 109 2 222 1 25 1 265 1 29 1 71 1 319 1 117 1 279 1 
283 1 121 1 77 1 242 3 290 1 9 2 90 1 291 1 94 1 206 1 251 1 137 2 300 2 17 1 256 1 304 2 145 1 170 1 22 1 112 2 24 1 223 1 224 1 313 1 153 1 269 1 315 1 71 3 186 1 280 1 236 1 190 1 
194 2 240 1 82 1 110 1 88 2 126 4 200 1 201 2 128 2 246 1 276 1 319 1 233 2 117 1 103 4 
20 1 306 1 195 1 232 1 237 1 
20 1 306 1 159 1 
20 1 306 1 159 1 
20 1 306 1 159 1 
20 1 306 1 322 1 
20 1 306 1 322 1 
20 1 306 1 322 1 
20 1 306 1 
95 1 244 1 
241 2 44 6 243 1 222 1 199 2 224 12 134 2 180 6 209 3 303 3 279 2 190 6 
227 1 283 1 180 1 241 1 260 1 44 2 112 2 223 1 209 1 17 1 224 2 290 1 
283 1 285 1 260 1 241 1 44 2 112 2 223 1 290 1 224 4 227 1 180 2 31 1 17 1 209 1 303 1 279 1 190 2 
283 3 260 1 81 1 261 1 44 1 112 6 223 3 199 1 224 3 290 3 134 1 180 2 17 3 209 1 303 1 166 1 190 2 
283 5 284 1 158 4 285 3 241 5 81 1 44 16 199 3 87 1 290 5 205 1 134 3 250 1 17 5 209 5 303 7 166 1 58 1 260 1 261 2 222 2 112 10 223 5 224 34 225 1 227 3 180 12 33 3 70 1 31 3 276 1 320 1 279 5 190 18 
283 1 158 1 241 1 44 4 87 1 199 1 290 1 205 1 134 1 17 1 18 1 303 2 260 1 112 2 222 1 223 1 224 8 225 1 180 2 33 1 276 1 279 1 190 4 
283 2 158 2 241 2 44 6 199 1 87 1 290 2 205 1 134 1 250 1 17 2 209 1 18 1 303 2 260 1 222 1 112 4 223 2 224 11 225 1 227 1 180 3 33 1 70 1 31 1 276 1 279 1 190 5 
283 2 158 1 285 2 241 2 44 6 87 1 290 2 292 1 250 1 209 1 17 2 18 1 303 1 141 1 309 1 260 1 112 4 223 2 224 12 311 1 227 2 180 2 33 1 31 2 279 2 190 6 
283 3 158 1 285 1 241 3 44 10 199 1 87 1 290 3 292 1 205 1 134 1 250 1 17 3 209 2 18 1 303 2 141 1 309 1 260 1 261 1 222 1 112 6 223 3 224 17 311 1 225 1 227 2 180 4 33 1 31 2 276 1 279 2 190 7 
283 1 158 1 241 1 44 4 87 1 199 1 290 1 205 1 134 1 17 1 18 1 303 2 260 1 112 2 222 1 223 1 224 8 225 1 180 2 33 1 276 1 279 1 190 4 
283 1 158 1 285 2 241 2 44 6 87 1 290 1 292 1 17 1 209 1 18 1 141 1 309 1 260 1 112 2 223 1 224 12 311 1 227 2 180 1 33 1 31 2 279 2 190 6 
283 3 158 1 285 1 241 2 44 7 87 1 290 3 292 1 250 1 209 1 17 3 18 1 303 1 141 1 309 1 260 1 261 1 112 6 223 3 224 11 311 1 227 2 180 2 33 1 31 2 279 1 190 4 
283 4 158 1 285 2 241 3 44 9 87 1 290 4 292 1 209 3 17 4 18 1 141 1 303 3 166 1 309 1 260 1 261 2 112 8 223 4 224 16 311 1 227 3 180 6 33 1 31 3 279 2 190 7 
241 1 44 3 222 1 199 3 224 7 225 2 205 1 134 3 180 6 209 3 279 1 303 3 190 4 
283 4 158 1 285 1 241 3 44 10 199 1 87 1 290 4 292 1 205 1 134 1 209 1 17 4 18 1 141 1 303 4 166 1 309 1 260 1 261 2 222 1 112 8 223 4 224 18 311 1 225 1 227 2 180 5 33 1 31 2 276 1 279 2 190 8 
283 2 241 1 44 4 261 1 222 1 112 4 223 2 199 1 224 8 290 2 225 1 205 1 134 1 180 3 276 1 209 1 17 2 279 1 303 2 190 4 
241 1 44 3 222 1 199 1 224 6 225 1 202 1 205 1 134 1 180 2 276 1 303 2 279 1 190 3 
283 1 285 1 241 1 44 2 112 2 223 1 290 1 224 4 227 1 180 2 250 1 31 1 17 1 209 1 303 1 279 1 190 2 
285 1 158 2 241 1 44 3 87 1 224 7 227 1 180 2 33 1 70 1 31 1 209 1 303 1 279 1 190 4 
283 2 158 2 285 2 241 3 81 1 44 11 199 2 290 2 205 1 134 2 209 4 301 1 17 2 303 5 212 1 261 2 222 1 112 4 223 2 224 23 225 1 227 2 180 9 31 2 70 1 33 2 276 1 279 3 190 12 
158 1 224 1 190 1 
44 1 33 1 224 1 
157 1 283 1 285 1 241 1 44 3 112 2 223 1 290 1 224 6 227 1 180 3 250 1 31 1 17 1 209 1 279 1 303 2 190 3 
283 1 158 1 285 2 241 2 44 6 87 1 290 1 292 1 209 1 17 1 18 1 303 1 141 1 309 1 260 1 112 2 223 1 224 12 311 1 227 2 180 2 33 1 31 2 279 2 190 6 
241 1 44 3 222 1 199 1 224 6 134 1 180 2 209 1 279 1 303 1 190 3 
283 1 81 1 44 1 261 1 112 2 199 1 223 1 224 3 290 1 225 1 205 1 134 1 180 2 209 1 17 1 303 1 190 2 
242 1 43 1 206 1 71 1 137 1 85 1 104 1 
43 1 242 1 83 1 85 1 173 1 11 1 206 1 32 1 71 1 137 1 53 1 104 1 
238 1 170 1 77 1 291 1 90 1 153 1 96 1 48 1 98 1 251 1 315 1 35 1 102 1 186 2 236 1 
42 1 170 2 238 1 10 1 291 2 90 2 153 1 98 1 251 1 315 1 35 1 102 1 186 2 236 1 
153 1 170 1 77 1 49 1 197 1 186 1 90 1 291 1 234 1 281 1 
170 1 48 1 16 1 90 1 291 1 
48 1 170 1 77 1 90 1 291 1 
48 1 170 1 77 1 150 1 90 1 291 1 245 1 
153 1 202 1 96 1 307 1 170 1 77 1 315 1 186 1 90 1 291 1 236 1 
308 1 170 1 77 1 22 1 242 2 24 1 9 1 291 1 90 1 153 1 206 1 251 1 315 1 71 2 137 1 300 1 186 1 236 1 
42 1 192 1 242 2 2 1 9 1 90 1 291 1 206 1 251 2 137 2 299 1 300 2 253 1 170 1 308 1 22 1 24 1 153 1 315 2 71 2 183 1 186 1 236 3 
42 1 192 1 242 2 2 1 9 1 90 2 291 2 14 1 206 1 251 2 137 2 299 1 300 2 253 1 170 2 308 1 22 1 153 1 315 2 71 2 183 1 186 1 236 3 189 1 
120 2 42 1 192 1 170 3 146 1 77 1 78 1 172 1 25 2 88 1 291 3 90 3 64 1 293 1 153 1 14 1 251 1 315 1 299 1 101 1 103 1 186 1 236 4 
42 1 120 2 78 1 2 1 242 1 198 1 88 1 9 1 90 1 291 1 293 1 137 1 300 1 101 1 105 1 103 1 145 1 304 1 170 1 25 2 265 1 64 1 71 1 36 1 236 2 
153 1 170 1 80 1 186 1 90 1 291 1 
170 6 238 1 77 2 80 1 86 1 291 5 90 6 245 1 153 2 65 1 133 1 251 1 315 2 182 1 30 1 16 1 102 1 186 3 236 3 168 1 
283 1 308 1 242 1 112 2 263 1 223 1 290 1 9 1 204 1 94 1 48 1 71 1 137 1 300 1 17 1 280 1 
120 3 194 1 77 1 78 1 82 2 160 1 88 1 90 1 291 1 200 2 246 1 293 1 249 1 15 1 101 1 103 1 170 1 25 3 64 2 154 1 116 1 314 1 321 1 319 2 36 1 117 2 118 1 236 2 
170 1 78 1 80 1 291 1 90 1 153 1 48 1 251 1 315 1 184 1 186 2 236 2 168 1 
308 1 170 1 77 1 22 1 242 2 9 1 291 1 90 1 153 1 206 1 251 1 315 1 71 2 137 1 300 1 186 1 236 1 189 1 
42 1 170 1 238 1 291 1 90 1 153 1 65 1 251 1 315 1 102 1 186 2 236 1 168 1 
21 1 206 1 255 1 63 1 161 1 
120 2 0 1 21 1 79 1 2 1 25 2 88 1 62 1 63 2 161 2 293 1 229 1 154 1 206 1 183 1 52 1 103 1 253 1 255 2 
21 1 242 1 63 1 132 1 295 1 71 1 137 1 255 1 323 1 
0 1 79 1 21 1 
41 1 61 1 7 1 74 1 
191 1 41 1 193 1 61 1 73 1 7 2 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
164 2 72 2 125 1 39 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
239 1 
41 1 61 1 7 1 74 1 
202 1 151 1 177 1 
41 1 61 1 7 1 
316 1 73 1 235 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 115 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 234 1 74 1 281 1 
41 1 61 1 7 1 74 1 
41 1 61 1 7 1 74 1 
107 1 193 1 164 1 271 1 73 1 7 1 
177 1 

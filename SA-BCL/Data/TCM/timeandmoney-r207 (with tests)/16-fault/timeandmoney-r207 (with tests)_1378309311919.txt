#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 128 (0,4,75) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 70 58 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 70 58 317 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 196 37 244 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 196 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 196 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 196 37 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 196 37 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 2 197 326 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 70 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 5 275 63 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 346 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 817 | if (x) -> if (!x)
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money; | RETURN | 3424 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> -1
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | RETURN | 2175 | return null
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1136 | = null
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
336 1 202 9 59 1 42 2 133 1 181 1 304 2 341 1 21 2 233 1 68 5 278 1 327 2 261 2 187 1 280 1 238 9 31 2 122 1 168 1 351 1 49 6 50 1 268 2 125 4 245 3 335 1 129 1 
336 1 202 9 59 1 42 2 133 1 181 1 304 2 341 1 21 2 233 1 68 5 278 1 327 2 261 2 187 1 280 1 238 9 31 2 122 1 168 1 351 1 49 6 50 1 268 2 125 4 245 3 335 1 129 1 
336 1 202 10 59 1 42 2 133 1 181 1 304 2 341 1 21 2 233 1 68 6 278 1 327 2 261 2 187 1 280 1 238 10 31 2 122 1 168 1 351 1 49 7 50 1 268 2 125 5 245 4 335 1 129 1 
336 1 202 7 59 1 42 2 133 1 181 1 304 2 341 1 21 2 233 1 68 4 327 2 261 2 187 1 280 1 238 7 31 2 122 1 168 1 351 1 49 4 50 1 268 1 125 3 245 2 335 1 129 1 
336 1 238 4 202 4 133 1 42 1 49 3 50 1 304 1 268 2 341 1 125 2 233 1 21 1 68 3 245 1 278 1 327 1 261 1 
336 1 238 2 202 2 41 1 59 1 31 1 266 1 50 1 114 1 304 1 233 1 21 1 68 1 129 1 327 1 261 1 
336 1 238 3 202 3 31 1 122 1 49 1 50 1 125 1 233 1 21 2 68 2 245 1 327 2 
280 1 336 1 238 9 119 1 202 9 42 1 133 1 31 1 122 1 49 7 50 1 304 1 268 2 341 1 137 1 125 4 233 1 21 2 68 5 335 1 245 3 278 1 327 2 261 1 
280 1 336 1 238 9 119 1 202 9 42 1 133 1 31 1 122 1 49 7 50 1 304 1 268 2 341 1 137 1 125 4 233 1 21 2 68 5 335 1 245 3 278 1 327 2 261 1 
99 1 260 1 277 1 
274 1 260 1 140 2 
142 2 84 2 26 2 102 2 269 1 47 1 82 2 23 2 
84 2 320 1 1 1 132 1 253 1 112 1 339 1 7 2 64 2 305 1 20 1 231 1 67 1 23 2 210 2 142 2 26 3 72 1 29 1 189 2 239 1 191 1 47 1 74 1 76 1 312 1 329 1 33 1 102 2 287 1 242 1 269 1 36 1 271 1 272 2 82 3 171 1 
142 1 84 1 26 1 102 1 269 1 300 1 82 1 23 1 
142 1 26 1 24 1 345 1 16 1 99 1 87 1 5 1 256 1 350 1 92 1 82 1 260 1 354 1 
142 1 84 1 345 2 26 1 24 1 16 1 99 1 87 1 256 1 350 2 102 1 23 1 82 1 260 1 354 1 
350 1 345 1 319 1 289 1 315 1 
350 2 345 2 319 1 145 1 99 1 289 1 322 1 260 1 
350 1 345 1 319 1 
142 1 84 1 345 1 26 1 300 1 350 1 102 1 340 1 269 1 289 1 23 1 82 1 
260 1 
350 2 345 2 319 1 99 1 289 1 322 1 6 1 260 1 
84 1 295 2 173 1 319 2 85 1 17 1 40 1 56 1 298 2 55 1 300 1 322 1 177 2 340 1 65 2 232 1 259 1 22 2 23 1 260 2 142 1 188 1 26 1 263 4 345 5 99 2 283 1 194 2 217 5 350 5 267 1 102 1 51 1 269 1 289 2 82 1 
47 1 277 1 
142 2 84 1 26 2 47 2 60 1 180 1 102 1 82 2 23 1 
138 1 203 1 155 1 
26 1 72 1 239 1 191 1 47 1 74 1 312 1 7 1 64 1 242 1 231 1 67 1 153 1 82 1 210 1 171 1 
142 1 84 1 26 2 72 1 239 1 191 1 74 1 312 1 7 1 64 1 242 1 231 1 67 1 23 1 82 2 210 1 291 1 155 1 171 1 38 1 
142 3 84 3 26 3 102 1 47 1 82 3 23 3 291 1 
142 1 84 1 26 1 207 1 87 1 82 1 23 1 
142 1 84 1 26 1 180 1 102 1 87 1 60 1 82 1 23 1 
84 3 320 1 16 1 1 1 132 1 87 1 256 1 112 1 324 1 339 1 7 1 64 1 180 1 231 1 67 1 23 3 210 1 142 3 24 1 26 4 345 1 72 1 189 2 239 1 191 1 47 1 74 1 76 1 312 1 329 1 350 1 102 2 287 1 242 1 269 1 334 1 36 1 271 1 272 1 82 4 291 1 171 1 38 1 354 1 
142 2 84 1 26 2 275 1 5 1 47 1 82 2 23 1 291 1 
142 3 84 3 345 1 26 3 24 1 16 1 109 1 87 1 256 1 350 1 180 1 102 1 334 1 23 3 82 3 291 2 260 1 38 1 354 1 
142 2 84 2 26 2 180 1 102 1 138 1 82 2 23 2 291 1 155 1 
26 1 72 1 239 1 191 1 47 1 74 1 312 1 7 1 64 1 231 1 242 1 67 1 82 1 210 1 171 1 
26 1 72 1 191 1 47 1 74 1 7 1 64 1 35 1 231 1 242 1 67 1 82 1 210 1 139 1 171 1 
295 1 320 2 132 1 201 1 203 2 179 1 112 1 339 1 230 1 93 1 65 1 342 1 138 2 189 2 98 1 46 1 76 1 329 1 33 2 80 1 36 1 316 1 272 4 155 2 
142 1 84 1 26 1 87 1 307 1 82 1 23 1 354 1 
142 5 84 4 26 5 275 1 5 1 47 1 180 1 102 1 235 1 248 1 23 4 82 5 291 2 38 1 
142 2 84 2 26 2 207 1 87 1 307 1 82 2 23 2 
4 1 148 1 
4 1 148 1 
4 1 128 1 148 1 75 1 
4 1 128 1 148 1 75 1 
128 1 75 1 
182 1 4 1 148 1 
4 1 128 1 75 1 148 1 
0 1 4 1 148 1 
182 1 4 1 148 1 
182 1 4 1 148 1 
77 1 4 1 148 1 
77 1 4 1 148 1 
77 1 4 1 148 1 
8 1 70 1 4 1 58 1 257 1 148 1 
8 1 350 1 70 1 345 1 4 1 58 1 257 1 148 1 317 1 
304 1 42 1 261 1 
304 1 41 1 261 1 
126 1 9 1 348 1 41 1 42 2 261 3 
325 1 126 1 9 1 41 1 42 1 261 2 
126 2 9 1 41 1 42 1 261 2 
295 1 319 1 131 2 108 1 274 1 322 1 204 1 177 1 61 1 162 1 115 1 65 1 22 1 342 1 343 1 309 1 140 3 260 2 345 5 263 3 99 1 240 1 194 1 217 2 218 2 350 5 51 1 241 2 289 4 316 1 250 1 293 1 
84 1 223 1 319 5 274 3 322 1 177 2 140 9 142 1 143 1 99 1 240 4 194 2 102 1 51 1 241 6 289 6 250 1 293 2 295 3 338 1 17 1 108 2 300 1 204 3 340 1 65 3 22 2 342 3 69 1 23 1 260 5 345 8 26 1 263 8 215 1 216 1 217 6 350 8 218 6 219 4 269 1 315 4 316 3 82 1 
295 1 131 1 17 1 108 1 274 2 177 1 204 1 61 1 162 1 65 1 22 1 342 1 260 3 140 4 345 3 263 3 99 1 240 1 194 1 217 2 350 3 218 2 241 2 289 2 316 1 293 1 
84 1 131 1 274 3 177 1 140 7 142 1 99 1 240 2 194 1 102 1 241 4 289 2 293 1 295 2 338 1 108 1 17 1 300 1 204 2 61 1 162 1 65 2 340 1 22 1 342 2 23 1 260 4 26 1 263 5 345 3 215 1 217 4 216 1 350 3 218 4 269 1 316 2 82 1 
242 1 164 1 277 1 
242 1 120 1 
45 1 
72 1 242 1 
281 1 72 1 242 3 231 1 164 2 258 1 
72 1 242 1 231 1 
242 1 170 1 
295 1 173 1 320 3 56 1 46 2 179 3 193 1 48 1 150 1 33 4 90 1 65 1 232 1 81 1 208 2 106 1 272 7 
295 1 173 1 320 3 56 1 46 2 179 3 193 1 48 1 150 1 33 4 90 1 65 1 232 1 81 1 208 2 106 1 272 7 
318 1 295 1 173 1 320 3 56 1 46 2 179 3 193 1 48 1 150 1 33 4 90 1 65 1 232 1 81 1 208 2 106 1 272 7 
157 1 295 1 173 1 320 6 132 1 204 1 179 4 134 1 339 1 232 1 65 1 342 1 208 1 209 1 165 1 189 2 328 1 46 2 193 1 48 1 329 1 33 5 220 1 52 2 81 2 106 2 316 1 36 1 272 11 294 1 
295 2 85 1 173 1 320 4 132 1 56 1 227 1 179 3 339 1 90 1 65 2 232 1 208 1 189 2 46 2 32 1 193 1 329 1 150 1 33 5 81 1 36 1 106 1 272 9 
252 1 336 1 202 2 41 1 42 1 205 1 7 1 64 1 304 1 135 1 21 1 233 1 67 1 68 1 210 1 327 1 261 2 213 1 262 1 27 1 238 2 347 1 348 1 31 1 149 1 49 1 50 1 290 1 171 1 198 1 
252 1 202 2 41 1 42 1 205 1 303 1 7 1 64 1 304 1 135 1 21 1 67 1 210 1 327 1 279 1 261 2 27 1 264 1 238 2 347 1 348 1 31 1 149 1 49 1 290 1 249 1 171 1 198 1 
7 1 64 1 210 1 249 1 205 1 303 1 
72 1 297 1 238 1 202 1 191 1 226 1 302 1 31 2 205 2 7 1 64 1 135 2 242 1 136 1 67 1 21 1 116 1 105 1 290 2 210 1 279 1 327 1 171 1 
252 1 262 1 27 1 238 1 347 1 348 1 202 1 41 1 42 1 31 1 205 1 149 1 303 1 7 1 64 1 304 1 135 1 67 1 233 1 21 1 290 1 210 1 327 1 261 2 171 1 198 1 
247 1 
174 2 319 6 274 2 87 1 5 1 322 3 177 1 7 2 92 1 185 1 10 2 140 2 142 1 99 1 191 2 194 1 51 1 242 1 288 1 333 2 107 1 293 1 297 1 16 1 111 1 301 1 256 1 62 1 113 1 64 2 67 1 22 1 116 1 210 2 211 1 260 2 344 2 263 2 345 5 26 1 24 1 71 1 72 1 310 2 121 1 311 1 217 2 350 5 270 1 221 2 353 2 127 4 82 1 171 1 354 1 
319 2 16 1 87 1 5 1 301 1 256 1 322 1 6 1 62 1 92 1 142 1 24 1 26 1 345 3 71 1 121 1 350 3 288 1 221 1 127 2 82 1 354 1 
319 1 174 1 16 1 87 1 5 1 301 1 256 1 322 1 6 1 62 1 92 1 260 1 142 1 24 1 26 1 345 3 71 1 99 1 121 1 350 3 288 1 127 3 82 1 354 1 
319 2 174 1 16 1 87 1 5 1 322 1 301 1 256 1 6 1 62 1 92 1 260 1 142 1 24 1 26 1 345 3 71 1 99 1 121 1 350 3 288 1 221 1 333 1 127 3 82 1 354 1 
319 3 16 1 87 1 5 1 301 1 322 1 256 1 6 1 62 1 92 1 142 1 345 3 26 1 24 1 71 1 121 1 196 1 350 3 288 1 221 2 333 2 127 2 244 1 37 1 82 1 354 1 
319 4 174 2 274 2 87 1 5 1 322 2 177 1 92 1 140 2 10 2 185 1 142 1 99 1 194 1 51 1 288 1 333 2 107 1 16 1 111 1 256 1 301 1 62 1 22 1 344 2 260 2 24 1 26 1 345 4 263 1 71 1 310 2 121 1 217 1 350 4 221 2 127 4 353 2 82 1 354 1 
142 1 345 2 26 1 24 1 71 1 16 1 87 1 121 1 5 1 256 1 301 1 62 1 196 1 350 2 92 1 288 1 127 2 82 1 354 1 
142 1 345 2 26 1 24 1 71 1 16 1 87 1 121 1 5 1 256 1 301 1 62 1 196 1 350 2 92 1 288 1 127 2 82 1 354 1 
172 1 174 2 319 4 16 1 87 1 255 2 111 1 5 1 322 2 301 1 256 1 177 1 62 1 92 1 22 1 117 1 96 1 260 1 140 2 344 2 142 1 263 1 24 1 26 1 345 4 71 1 99 1 310 2 121 1 166 1 194 1 217 1 350 4 51 1 221 2 288 1 333 2 127 4 246 2 82 1 354 1 
142 1 345 2 26 1 24 1 174 1 319 1 71 1 16 1 87 1 121 1 5 1 256 1 301 1 62 1 196 1 350 2 92 1 221 1 288 1 333 1 127 3 37 1 82 1 354 1 
142 1 345 2 26 1 24 1 174 1 319 1 71 1 16 1 87 1 121 1 5 1 256 1 301 1 62 1 196 1 350 2 92 1 221 1 288 1 333 1 127 3 37 1 82 1 354 1 
319 4 174 2 87 1 5 1 322 2 177 1 92 1 140 2 185 1 142 1 99 1 194 1 51 1 288 1 333 2 246 2 16 1 111 1 255 2 256 1 301 1 62 1 22 1 117 1 344 2 260 1 24 1 26 1 345 4 263 1 71 1 310 2 121 1 217 1 350 4 221 2 127 4 82 1 354 1 
295 1 173 1 320 3 132 1 56 1 203 1 179 2 112 1 277 1 339 1 90 1 230 1 232 1 65 1 138 1 208 1 189 2 46 2 47 2 76 1 150 1 329 1 33 3 36 1 272 6 155 1 
295 2 320 6 1 1 132 2 203 11 204 2 179 2 112 1 134 3 339 2 20 1 65 1 342 1 138 4 209 1 95 1 165 1 282 1 189 4 46 1 47 1 76 2 329 2 33 8 52 3 352 1 81 1 104 1 36 2 316 2 272 14 155 11 15 1 
84 1 320 1 132 1 1 1 19 1 112 1 7 1 339 1 64 1 20 1 231 1 67 1 138 1 95 1 210 1 23 1 186 1 142 1 26 2 72 1 189 2 239 1 191 1 47 1 74 1 312 1 76 1 329 1 33 1 242 1 153 1 36 1 272 2 82 2 291 1 251 1 171 1 38 1 
84 1 173 1 320 10 1 1 132 3 175 2 179 8 7 3 90 1 232 1 231 2 183 1 138 7 95 1 142 1 237 2 189 6 46 4 239 2 191 1 47 2 150 1 329 3 242 2 291 1 155 7 14 2 295 3 56 1 203 7 204 2 112 3 303 1 339 3 64 3 20 1 65 3 67 2 342 2 208 1 210 3 23 1 26 3 72 2 74 2 349 1 313 1 76 3 167 2 312 2 33 10 81 4 36 3 271 2 316 2 272 20 82 3 38 1 171 2 
84 1 337 1 320 1 297 1 132 2 1 1 253 2 225 1 112 2 303 1 7 8 339 2 64 8 230 1 91 1 20 1 67 2 116 1 23 1 210 7 213 1 142 1 26 1 72 2 189 4 191 2 147 1 76 2 329 2 33 1 101 1 242 3 169 1 36 2 272 2 82 1 291 1 292 1 171 2 
84 1 295 1 320 2 132 1 203 1 204 1 179 1 112 1 160 1 339 1 180 1 65 1 342 1 138 1 95 1 23 1 142 1 26 1 189 2 46 1 76 1 329 1 33 1 102 1 36 1 316 1 272 3 82 1 155 1 
295 1 132 1 189 2 201 1 203 1 179 1 112 1 76 1 329 1 339 1 33 2 230 1 81 1 138 1 36 1 316 1 272 2 155 1 
320 2 132 1 189 2 46 1 203 1 179 1 112 1 76 1 329 1 339 1 230 1 93 1 65 1 342 1 138 1 36 1 272 2 155 1 
295 1 320 2 132 1 204 1 203 2 179 2 112 1 339 1 230 1 65 1 342 1 138 2 189 2 46 1 76 1 329 1 33 2 81 1 316 1 36 1 272 4 155 2 
295 1 132 1 189 2 201 1 203 1 179 1 112 1 76 1 329 1 339 1 33 2 101 1 81 1 138 1 36 1 316 1 272 2 155 1 
320 2 132 1 189 2 46 1 203 1 179 1 112 1 76 1 329 1 339 1 101 1 93 1 65 1 342 1 138 1 36 1 272 2 155 1 
295 1 320 2 132 1 204 1 203 2 179 2 112 1 339 1 65 1 342 1 138 2 189 2 46 1 76 1 329 1 33 2 101 1 81 1 316 1 36 1 272 4 155 2 
295 1 320 2 132 1 204 1 203 2 179 2 112 1 339 1 65 1 342 1 138 2 189 2 46 1 76 1 329 1 33 2 81 1 316 1 36 1 272 4 155 2 
320 1 132 1 1 1 112 1 7 1 339 1 64 1 20 1 231 1 67 1 210 1 26 1 72 1 189 2 239 1 191 1 47 1 74 1 312 1 76 1 329 1 33 1 242 1 271 1 36 1 272 2 82 1 171 1 
320 1 132 1 1 1 112 1 7 1 339 1 64 1 20 1 231 1 67 1 234 1 210 1 139 1 26 1 72 1 189 2 191 1 47 1 74 1 76 1 329 1 33 1 35 1 242 1 36 1 272 2 82 1 171 1 
295 1 320 2 132 1 204 1 203 2 179 2 112 1 339 1 65 1 342 1 138 2 95 1 189 2 46 1 76 1 329 1 33 2 81 1 316 1 36 1 272 4 155 2 
295 1 320 2 132 1 203 2 204 1 179 2 112 1 7 1 339 1 64 1 65 1 231 1 67 1 342 1 138 2 210 1 213 1 26 1 72 1 189 2 46 1 239 1 74 1 312 1 167 1 76 1 329 1 33 2 242 1 81 1 316 1 271 1 36 1 272 4 82 1 155 2 171 1 
84 1 295 1 320 1 132 1 204 1 203 1 179 1 112 1 339 1 180 1 65 1 342 1 138 1 95 1 23 1 142 1 26 1 189 2 76 1 329 1 33 2 102 1 81 1 152 1 36 1 316 1 272 3 82 1 155 1 
295 4 320 16 200 1 321 2 132 2 227 1 204 4 179 7 134 2 339 2 326 1 65 4 342 4 209 2 165 2 184 1 212 4 118 1 28 1 189 4 46 4 146 1 265 1 329 2 33 14 79 1 52 4 81 3 36 2 316 4 272 30 156 1 
295 1 320 5 132 1 200 1 321 1 227 1 204 1 134 1 339 1 65 1 342 1 209 1 184 1 212 2 189 2 146 2 265 1 329 1 33 5 52 1 36 1 316 1 272 10 156 2 
295 3 320 15 321 1 200 1 132 2 227 1 204 3 179 4 134 3 339 2 326 1 161 1 65 3 342 3 209 3 165 2 184 1 212 4 118 1 28 1 189 4 46 2 146 1 265 1 329 2 33 13 52 5 81 2 36 2 316 3 272 28 156 2 
295 3 320 15 321 1 200 1 132 2 227 1 204 3 179 5 134 3 339 2 326 1 161 1 65 3 342 3 209 3 165 2 184 1 212 4 118 1 28 1 189 4 46 3 146 1 265 1 329 2 33 13 52 5 81 2 36 2 316 3 272 28 156 2 
295 6 173 3 320 19 321 1 200 1 132 1 56 3 227 1 204 3 179 9 134 3 339 1 90 3 326 1 232 3 65 6 342 3 208 3 209 2 165 1 184 1 212 4 28 1 189 2 46 6 146 1 265 1 150 3 329 1 33 22 52 3 81 3 104 1 36 1 316 3 272 41 156 1 
320 1 132 1 1 1 253 2 159 1 112 1 7 2 339 1 64 2 91 1 20 1 67 1 95 1 210 2 236 1 141 1 142 2 26 2 72 1 189 2 147 1 76 1 329 1 33 1 286 1 242 1 36 1 272 2 82 2 13 1 171 1 
213 1 252 1 25 1 27 1 347 1 348 1 41 1 42 1 43 1 303 1 7 2 64 2 304 1 135 1 67 1 306 1 210 2 261 2 171 1 
252 1 25 1 27 1 347 1 348 1 41 1 42 1 303 1 7 1 64 1 304 1 135 1 124 1 67 1 210 1 261 2 171 1 
72 1 297 1 191 1 226 1 7 1 64 1 151 1 135 1 242 1 67 1 306 1 116 1 210 1 171 1 
252 1 25 1 27 1 347 1 348 1 41 1 42 1 43 1 303 1 7 1 64 1 304 1 135 1 67 1 306 1 210 1 261 2 171 1 
3 1 
263 1 40 1 99 1 283 1 260 1 217 1 277 1 
319 1 274 1 322 1 177 1 22 1 140 1 260 2 10 1 263 1 345 1 99 1 194 1 217 1 350 1 51 1 353 1 107 1 
319 5 39 2 40 1 86 1 176 2 175 2 274 6 322 3 177 4 7 3 231 3 140 12 281 1 190 1 99 2 191 1 283 1 192 1 194 4 51 4 242 10 241 6 103 2 154 2 293 2 295 2 298 2 57 1 256 2 204 2 113 1 64 3 66 2 65 2 67 3 259 2 22 4 164 2 342 2 210 3 260 8 213 1 263 9 345 5 72 3 73 2 120 3 217 8 34 1 350 5 218 6 170 2 316 2 171 4 
295 1 319 1 2 1 298 1 274 3 299 1 322 1 177 2 204 1 134 1 88 1 326 1 65 1 22 2 342 1 209 1 140 6 260 4 345 1 263 5 99 1 194 2 284 1 217 3 350 1 218 4 197 1 51 2 241 4 52 1 316 1 
84 1 295 2 173 1 85 1 298 2 56 1 300 1 177 1 232 1 65 1 340 1 259 1 22 1 23 1 142 1 26 1 345 1 263 2 214 1 194 1 217 2 350 1 51 1 102 1 269 1 82 1 
263 1 40 1 99 1 283 1 177 1 194 1 217 1 51 1 22 1 260 1 
295 2 263 5 298 2 175 1 274 5 204 2 217 5 218 5 241 5 65 2 259 1 342 2 316 2 140 10 260 5 
350 1 345 1 319 1 99 1 322 1 260 1 
319 4 297 1 17 1 322 2 177 2 113 2 7 4 64 4 67 1 22 2 116 1 210 4 263 2 345 3 72 1 190 2 191 2 311 1 194 2 217 2 100 1 34 1 350 3 285 1 51 1 242 1 270 1 171 1 293 2 
84 2 320 1 1 1 132 1 112 1 339 1 7 1 64 1 231 1 67 1 210 1 23 2 142 2 26 3 72 1 189 2 239 1 191 1 47 1 74 1 312 1 76 1 329 1 102 2 287 1 269 1 242 1 36 1 271 1 272 1 82 3 171 1 
263 1 274 2 99 2 177 1 194 1 113 1 217 2 218 2 51 1 241 2 22 1 208 1 140 4 293 1 260 4 
70 1 257 1 
70 1 257 1 
70 1 257 1 
70 1 257 1 
70 1 257 1 
70 1 257 1 
70 1 257 1 
70 1 257 1 
4 1 148 1 
295 1 173 1 320 4 132 2 56 1 189 4 46 2 179 3 329 2 150 1 33 4 339 2 90 1 65 1 232 1 81 1 208 1 36 2 272 8 294 1 
33 3 90 1 295 1 173 1 320 3 65 1 232 1 56 1 46 2 208 1 272 6 179 2 150 1 277 1 
295 1 320 2 132 1 189 2 46 1 204 1 179 2 329 1 339 1 33 2 163 1 65 1 81 1 342 1 36 1 316 1 272 4 
295 1 320 4 46 1 204 1 179 2 134 1 33 3 65 1 52 2 81 1 342 1 209 1 316 1 272 7 165 1 
157 1 295 3 173 2 320 12 132 2 56 1 204 2 179 9 134 2 339 2 90 1 232 2 65 3 342 2 208 1 165 1 189 4 46 5 150 1 329 2 33 11 52 2 352 1 81 4 104 1 316 2 36 2 272 23 294 2 
320 1 52 1 272 1 
33 1 272 1 134 1 
295 1 320 3 132 1 189 2 175 1 46 2 204 1 179 3 329 1 339 1 33 3 163 1 65 1 81 1 342 1 36 1 316 1 272 6 
295 2 320 6 132 1 2 1 299 1 227 1 204 2 179 2 134 1 339 1 326 1 65 2 342 2 209 1 189 2 46 1 284 1 329 1 33 6 197 1 52 1 81 1 36 1 316 2 272 12 
295 1 173 1 320 3 56 1 46 1 179 2 33 3 65 1 232 1 81 1 272 6 
157 1 173 1 320 2 132 1 189 2 46 1 179 2 329 1 150 1 33 1 339 1 90 1 232 1 81 1 36 1 272 3 294 1 
295 2 85 1 173 2 320 5 132 1 189 2 56 1 46 3 227 1 179 5 329 1 339 1 33 5 232 2 65 2 81 2 36 1 272 10 
295 1 132 1 189 2 227 1 179 1 329 1 339 1 33 2 81 1 36 1 316 1 272 2 
295 1 320 2 132 1 189 2 46 1 227 1 204 1 179 2 329 1 339 1 33 2 65 1 81 1 342 1 36 1 316 1 272 4 
157 1 118 1 173 1 320 2 132 3 189 6 46 1 227 1 179 2 329 3 339 3 33 1 232 1 81 1 36 3 272 3 294 1 
157 1 295 2 85 1 173 2 320 8 132 4 56 1 227 1 179 6 134 1 339 4 90 1 163 1 65 2 232 2 209 1 118 1 189 8 328 1 46 3 329 4 150 1 33 7 52 1 81 3 36 4 272 15 294 1 
295 1 173 1 320 4 132 1 56 1 227 1 179 2 134 1 339 1 90 1 326 1 65 1 232 1 208 1 209 1 189 2 46 2 329 1 150 1 33 4 52 1 36 1 272 8 
295 2 173 1 320 5 132 2 56 1 227 1 204 1 179 3 134 1 339 2 90 1 326 1 163 1 65 1 232 1 208 1 209 1 165 1 189 4 46 2 150 1 329 2 33 6 52 2 81 1 36 2 316 1 272 11 
295 3 173 1 320 10 2 1 132 3 56 1 299 1 227 1 204 2 179 4 134 1 339 3 90 1 326 1 163 1 232 1 65 3 342 2 208 1 209 1 189 6 46 3 284 1 150 1 329 3 33 9 197 1 52 1 81 1 36 3 316 2 272 19 294 1 
295 3 173 1 320 7 132 3 2 1 56 1 299 1 227 1 204 2 179 5 134 1 339 3 90 1 326 1 163 1 232 1 65 2 342 1 208 1 209 1 189 6 46 3 284 1 150 1 329 3 33 10 197 1 52 1 81 2 36 3 316 2 272 17 294 1 
295 1 173 1 320 4 132 1 56 1 227 1 179 2 134 1 339 1 90 1 326 1 65 1 232 1 208 1 209 1 189 2 46 2 329 1 150 1 33 4 52 1 36 1 272 8 
295 2 320 6 132 1 2 1 299 1 227 1 204 2 179 2 134 1 339 1 326 1 65 2 342 2 209 1 189 2 46 1 284 1 329 1 33 6 197 1 52 1 81 1 36 1 316 2 272 12 
295 3 173 1 320 8 2 1 132 4 56 1 299 1 227 1 204 2 179 5 134 1 339 4 90 1 326 1 163 1 232 1 65 2 342 1 208 1 209 1 189 8 46 3 284 1 150 1 329 4 33 10 197 1 52 1 81 2 36 4 316 2 272 18 294 2 
295 3 320 7 2 1 132 4 299 1 227 1 204 3 179 6 134 1 339 4 326 1 65 2 342 2 209 1 118 1 189 8 46 3 284 1 329 4 33 9 197 1 52 1 81 3 36 4 316 3 272 16 294 2 
295 1 173 3 320 4 56 1 46 3 179 6 150 1 33 3 90 2 65 1 232 3 81 3 272 7 
295 3 173 1 320 8 2 1 132 4 56 1 299 1 227 1 204 2 179 4 134 1 339 4 90 1 326 1 232 1 65 2 342 1 208 1 209 1 118 1 189 8 46 3 284 1 150 1 329 4 33 10 197 1 52 1 81 1 36 4 316 2 272 18 294 2 
63 1 275 1 5 1 
346 1 332 1 314 1 331 1 206 1 
7 1 64 1 72 1 297 1 242 1 67 1 116 1 191 1 210 1 171 1 277 1 
142 1 84 1 26 2 72 1 239 1 191 1 47 1 74 1 7 1 64 1 242 1 231 1 67 1 23 1 82 2 210 1 291 1 171 1 
84 1 16 1 39 1 87 1 7 1 64 1 231 2 67 1 210 1 23 2 142 2 26 2 72 2 190 1 239 1 47 1 74 1 242 3 170 1 82 2 291 1 171 1 354 1 
84 1 16 1 39 1 224 1 87 1 7 2 64 2 231 2 67 1 210 2 23 2 139 1 142 2 26 2 72 2 190 1 47 1 74 1 242 3 170 1 82 2 291 1 171 1 354 1 
319 1 39 1 224 1 256 1 89 1 7 3 64 3 231 1 67 1 164 1 210 3 260 1 345 2 72 1 120 1 190 1 99 1 191 1 350 2 242 4 53 1 170 1 171 1 
345 2 319 1 72 1 39 1 224 1 99 1 190 1 120 1 191 1 256 1 350 2 7 3 64 3 231 1 242 4 103 1 67 1 164 1 170 1 210 3 260 1 171 1 
7 1 64 1 67 1 210 1 171 1 292 1 
213 1 281 1 296 1 337 1 72 2 253 1 225 1 158 1 191 2 147 1 303 1 7 7 64 7 231 1 242 3 67 2 169 1 94 1 210 6 292 1 171 3 
84 1 173 1 320 3 132 2 179 2 7 1 90 1 231 1 232 1 138 1 95 1 142 1 189 4 239 1 46 2 47 2 329 2 150 1 242 1 291 1 155 1 14 1 295 1 56 1 203 1 159 1 112 2 339 2 64 1 65 1 67 1 208 1 210 1 23 1 213 1 26 2 72 1 74 1 312 1 167 1 76 2 33 3 271 1 36 2 272 6 82 2 171 1 
319 2 40 1 176 1 256 1 322 1 177 2 7 1 64 1 66 1 22 2 164 1 210 1 260 1 263 1 345 3 99 1 120 1 191 1 283 1 194 2 217 1 34 1 350 3 51 2 242 2 103 1 289 1 154 1 
213 1 281 1 72 1 192 1 7 2 64 2 231 1 242 2 67 1 164 1 210 2 292 1 171 2 
213 1 297 1 72 1 224 1 191 1 7 4 330 1 64 4 242 1 67 1 116 1 210 4 171 1 
72 1 190 1 158 1 228 1 313 1 7 2 64 2 231 1 242 1 67 1 94 1 222 1 210 2 171 2 
7 1 64 1 304 1 27 1 67 1 191 1 41 1 210 1 261 1 171 1 
213 1 72 1 147 1 303 1 7 2 64 2 242 1 67 1 210 2 13 1 171 1 
213 1 337 1 297 1 72 2 190 1 191 1 147 1 7 5 330 1 64 5 242 3 67 2 116 1 169 1 210 4 171 2 
213 1 297 1 72 2 190 1 191 1 147 1 7 5 195 1 330 1 64 5 242 3 67 2 116 1 169 1 210 4 171 2 
142 1 84 1 26 2 72 1 191 1 47 1 74 1 7 1 64 1 242 1 231 1 67 1 23 1 82 2 210 1 291 1 139 1 171 1 
281 1 296 1 72 1 190 1 158 1 7 1 64 1 231 1 242 1 67 1 94 1 210 1 171 2 
123 1 110 1 254 1 47 1 276 1 
273 1 345 2 24 1 16 1 110 1 99 1 87 1 254 2 47 1 256 1 276 2 229 1 350 2 123 2 289 1 334 1 83 1 260 1 354 1 
141 1 142 1 26 1 110 1 254 1 123 1 286 1 82 1 236 1 
110 1 83 1 229 1 
50 1 336 1 68 1 277 1 
50 1 336 1 238 1 21 1 68 1 202 1 327 1 
238 1 290 1 31 1 
50 1 336 1 144 1 78 1 238 3 21 1 233 1 68 1 202 3 308 1 129 2 327 1 
49 1 50 1 336 1 268 1 238 2 21 1 68 1 202 2 327 1 
238 1 202 1 42 1 304 1 341 1 125 1 233 1 21 1 68 1 327 1 261 1 
50 1 238 1 21 1 233 1 68 1 202 1 327 1 
50 2 336 1 238 1 21 1 233 1 202 1 327 1 
11 1 50 1 199 1 243 1 238 2 21 2 233 1 68 1 202 2 327 2 
280 1 336 1 238 3 202 3 49 2 50 1 125 1 233 1 21 1 68 2 335 1 245 1 327 1 
336 1 97 1 238 2 348 1 202 2 41 1 42 1 49 1 50 1 304 1 233 1 21 1 68 1 327 1 261 2 
336 1 238 4 202 4 49 2 50 1 268 1 125 1 233 1 21 2 68 2 245 1 278 1 327 2 
50 1 336 1 238 1 21 1 233 1 68 1 202 1 327 1 
144 1 336 2 264 1 238 4 202 4 49 2 50 2 125 1 21 1 68 3 245 1 308 1 129 1 327 1 
49 1 50 1 336 1 137 1 238 2 21 1 233 1 30 1 68 1 202 2 178 1 327 1 
144 1 336 1 238 3 202 3 44 1 50 1 233 1 21 1 68 1 308 2 327 1 129 2 
130 2 12 1 68 2 323 1 
238 1 21 1 233 1 202 1 54 1 327 1 
49 1 50 1 336 1 238 2 21 1 233 1 68 1 202 2 335 1 327 1 
18 1 
50 1 336 1 238 1 21 1 233 1 68 1 202 1 327 1 
49 1 50 1 336 1 238 3 21 1 233 1 68 1 202 3 335 1 129 1 327 1 
264 1 125 1 68 1 245 1 
50 1 68 1 

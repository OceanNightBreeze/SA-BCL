#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) (81,123) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) (81,123) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 41 295 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 0 77 261 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 157 321 (134,174) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testEquals()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testMultiply()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testNegation()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V ERROR java.lang.NullPointerException (33,185,276,331) (33,185,276,331) (33,185,276,331) 113 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4914 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 10821 | if (x) -> if (!x)
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 2496 | = null
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration; | RETURN | 3400 | return null
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
66 1 236 1 45 1 
259 1 236 1 3 2 
270 2 202 2 109 2 14 2 235 1 169 2 103 1 223 2 
78 1 121 1 169 2 296 1 5 1 300 2 126 1 257 1 11 1 87 1 132 1 14 3 48 2 184 1 223 2 51 1 269 1 270 2 229 1 190 1 314 2 315 1 24 1 235 1 98 2 318 1 145 2 103 1 58 1 322 1 152 1 323 1 108 1 202 2 65 1 109 3 204 1 164 1 74 1 
270 1 202 1 109 1 204 1 111 1 14 1 235 1 169 1 223 1 208 1 
225 1 251 1 120 1 236 1 202 1 66 1 109 1 89 1 260 1 204 1 245 1 14 1 72 1 266 1 
225 1 270 1 251 1 120 2 236 1 169 1 202 1 66 1 109 1 260 1 204 1 14 1 72 2 223 1 266 1 
120 1 72 1 6 1 61 1 278 1 
66 1 317 1 120 2 236 1 144 1 72 2 6 1 61 1 
120 1 72 1 6 1 
270 1 120 1 235 1 169 1 61 1 202 1 109 1 204 1 111 1 14 1 72 1 221 1 223 1 208 1 
236 1 
66 1 317 1 120 2 236 1 72 2 6 1 62 1 61 1 
22 2 230 1 317 1 120 5 236 1 320 1 61 2 6 2 127 1 29 1 66 1 304 1 159 2 262 1 71 1 72 5 50 1 292 1 138 2 
45 1 103 1 
270 1 169 1 103 2 299 1 202 2 109 2 14 2 69 1 223 1 
214 1 28 1 10 1 
269 1 314 1 78 1 121 1 98 1 24 1 145 1 103 1 5 1 27 1 152 1 323 1 65 1 109 1 14 1 184 1 
269 1 270 1 314 1 78 1 121 1 24 1 98 1 169 1 145 1 5 1 152 1 323 1 106 1 214 1 65 1 202 1 109 2 14 2 184 1 47 1 
270 3 202 3 109 3 14 3 169 3 47 1 103 1 223 1 
270 1 202 1 109 1 204 1 14 1 169 1 208 1 
270 1 202 1 109 1 204 1 14 1 69 1 169 1 299 1 223 1 
78 1 251 1 120 1 121 1 169 3 5 1 300 2 126 1 257 1 11 1 260 1 14 4 48 1 184 1 47 1 223 2 266 1 51 1 269 1 225 1 93 1 270 3 314 1 24 1 318 1 235 1 98 1 145 1 103 1 58 1 322 1 323 1 152 1 106 1 108 1 65 1 202 3 109 4 204 1 69 1 72 1 330 1 164 1 74 1 
270 1 202 2 109 2 89 1 14 2 169 1 47 1 103 1 60 1 
225 1 270 3 251 1 120 1 236 1 169 3 106 1 202 3 109 3 204 1 260 1 14 3 69 1 72 1 47 2 330 1 135 1 223 1 266 1 
214 1 270 2 202 2 109 2 14 2 69 1 169 2 47 1 223 1 10 1 
269 1 314 1 78 1 98 1 24 1 121 1 145 1 103 1 5 1 152 1 323 1 65 1 109 1 14 1 184 1 
269 1 314 1 273 1 98 1 24 1 121 1 145 1 103 1 5 1 152 1 65 1 109 1 14 1 134 1 184 1 
212 1 8 1 300 2 10 2 176 1 257 1 214 2 301 1 303 1 11 1 48 4 51 1 315 2 143 1 58 1 322 1 153 1 108 2 28 2 326 1 242 1 283 1 162 1 74 1 
270 1 202 1 109 1 204 1 260 1 14 1 169 1 237 1 
270 4 169 4 103 1 60 1 106 1 202 5 109 5 89 1 285 1 14 5 69 1 47 2 223 1 312 1 
270 2 202 2 109 2 204 1 14 2 169 2 237 1 208 1 
289 1 198 1 
289 1 198 1 
219 1 200 1 
219 1 200 1 
219 1 200 1 
146 1 289 1 198 1 
289 1 198 1 117 1 
85 1 118 1 219 1 289 2 198 2 200 1 
146 1 289 1 198 1 
146 1 289 1 198 1 
289 1 172 1 198 1 
289 1 172 1 198 1 
289 1 172 1 198 1 
140 2 118 1 142 1 120 2 233 3 236 1 168 1 147 1 197 1 150 2 198 2 64 1 179 2 203 2 88 1 161 2 72 2 289 2 247 1 
120 1 169 2 179 1 258 1 14 2 140 1 270 2 95 1 53 1 233 1 319 1 147 1 103 1 150 1 198 1 156 1 202 2 109 2 243 1 161 1 72 1 287 1 289 1 117 1 
68 1 206 1 154 1 
36 1 68 1 206 1 
36 1 158 1 68 3 137 1 125 1 154 2 
36 1 158 1 68 2 137 1 104 1 154 1 
36 1 158 2 68 2 137 1 154 1 
249 2 120 5 252 1 3 3 212 1 6 1 254 1 82 2 176 1 304 1 258 1 259 1 131 2 50 2 267 1 138 1 22 1 228 1 53 1 317 1 236 2 193 1 99 1 61 4 280 1 326 1 66 1 159 1 287 1 162 1 72 5 71 3 
165 1 249 6 120 9 252 2 3 9 212 3 6 6 42 1 176 3 258 4 304 1 259 3 131 6 50 6 49 1 267 3 138 2 94 1 228 1 22 2 317 1 234 1 236 5 99 2 274 1 61 7 278 5 326 3 66 1 159 2 205 5 162 3 72 9 71 8 292 1 
249 2 120 3 252 1 3 4 212 1 254 1 82 1 176 1 258 1 259 2 131 2 50 2 138 1 267 1 22 1 236 3 193 1 99 1 61 2 66 1 326 1 159 1 72 3 71 3 162 1 292 1 
165 1 249 4 120 4 252 1 3 7 212 2 254 1 82 2 42 1 176 2 258 2 259 3 131 4 50 4 138 1 267 2 94 1 22 1 236 4 193 1 99 1 61 3 66 1 326 2 159 1 72 4 71 5 162 2 292 1 
121 1 46 1 45 1 
121 1 171 1 
38 1 
121 1 5 1 
201 1 121 3 24 1 160 1 46 2 5 1 
121 1 24 1 5 1 
121 1 195 1 
21 2 294 1 315 4 231 1 97 1 212 1 239 1 176 1 108 3 301 3 242 2 327 1 48 7 310 1 15 1 116 1 224 1 
21 2 294 1 315 4 231 1 97 1 212 1 239 1 176 1 108 3 301 3 242 2 327 1 48 7 310 1 15 1 116 1 224 1 
21 2 294 1 315 4 231 1 97 1 212 1 239 1 176 1 177 1 108 3 301 3 242 2 327 1 48 7 310 1 15 1 116 1 224 1 
294 2 173 1 212 3 300 2 84 3 176 3 301 8 217 1 129 1 11 1 182 1 48 26 310 2 15 4 267 2 224 1 51 1 21 3 231 1 315 14 97 1 191 3 58 1 322 1 239 2 108 12 327 1 326 2 242 4 286 1 328 1 162 2 116 2 
51 2 21 2 294 1 96 1 315 5 97 1 322 2 58 2 212 1 239 1 300 4 176 1 301 4 108 4 11 2 327 1 242 3 284 1 286 1 48 9 310 1 15 1 116 1 224 1 
33 1 113 1 276 1 331 1 
33 1 276 1 81 1 331 1 
36 1 123 1 125 1 128 1 216 1 218 1 90 1 264 2 185 2 308 1 311 1 269 1 19 1 314 1 316 1 98 1 145 1 26 1 154 1 107 1 65 1 68 2 206 1 288 1 331 2 
33 1 276 1 81 1 331 1 
33 1 113 1 276 1 331 1 
52 1 
251 1 120 3 252 1 121 1 295 1 41 1 5 1 6 2 7 1 180 1 304 1 260 1 89 1 14 1 13 1 91 1 50 1 266 1 138 1 225 1 269 1 20 1 22 1 314 2 317 1 98 2 194 1 145 2 100 1 148 1 152 2 202 1 65 1 109 1 159 1 204 1 245 1 32 1 72 3 71 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 3 317 1 295 1 194 1 41 1 62 1 6 1 180 1 202 1 109 1 204 1 260 1 89 1 14 1 32 1 245 1 72 3 266 1 
225 1 20 1 22 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 304 1 109 1 159 1 204 1 260 1 89 1 14 1 32 1 245 1 72 2 266 1 138 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 109 1 204 1 260 1 89 1 32 1 245 1 14 1 72 2 266 1 
225 1 20 1 22 1 251 1 120 2 295 1 194 1 41 1 180 1 202 1 304 1 109 1 159 1 204 1 260 1 89 1 14 1 32 1 245 1 72 2 266 1 138 1 
212 1 8 1 10 1 300 2 176 1 214 1 257 1 301 2 11 1 45 1 48 6 310 1 224 1 51 1 21 1 315 3 97 1 58 1 322 1 103 2 108 3 28 1 327 1 242 2 74 1 116 1 
210 1 39 1 212 4 300 4 10 6 84 4 178 2 176 2 301 4 257 2 214 16 11 2 182 1 132 1 133 1 48 22 222 2 15 2 267 4 51 2 272 1 315 13 191 4 103 1 58 2 322 2 108 9 28 16 242 2 326 2 162 4 164 1 74 1 
250 1 78 1 121 1 39 1 169 1 170 1 5 1 10 1 300 2 257 1 11 1 14 2 132 1 307 1 184 1 47 1 48 2 269 1 51 1 270 1 314 1 315 1 24 1 98 1 145 1 103 1 322 1 58 1 323 1 152 1 27 1 106 1 108 1 65 1 202 1 109 2 74 1 164 1 
78 2 4 1 169 1 5 2 10 7 176 3 257 3 11 3 14 3 184 2 92 2 15 4 267 2 269 2 21 1 270 1 97 1 98 3 24 2 103 2 102 2 106 1 108 10 279 2 28 7 202 1 282 1 109 3 116 1 121 2 39 1 212 3 298 2 300 6 214 7 301 8 218 1 132 1 47 1 48 20 310 1 224 1 51 3 314 3 141 1 315 10 318 2 145 3 58 3 322 3 152 1 323 2 65 2 327 1 242 4 326 2 162 2 164 1 74 3 
248 1 169 1 5 3 8 1 257 2 256 1 11 2 13 1 14 1 91 1 186 1 269 4 270 1 98 6 24 1 277 1 108 1 202 1 109 1 207 1 115 1 121 4 124 1 297 1 300 4 302 1 43 1 305 1 132 1 48 2 47 1 51 2 229 2 314 7 315 1 145 7 322 2 58 2 152 2 65 3 325 1 164 1 74 2 
39 1 169 1 212 1 10 1 300 2 176 1 301 1 214 1 257 1 11 1 14 1 48 3 223 1 267 1 51 1 17 1 270 1 315 1 58 1 322 1 108 2 28 1 202 1 242 1 326 1 109 1 69 1 162 1 74 1 
51 1 315 2 322 1 58 1 212 1 8 1 10 1 300 2 153 1 301 1 214 1 257 1 28 1 11 1 162 1 48 2 15 1 74 1 
51 1 322 1 58 1 8 1 10 1 300 2 176 1 301 1 214 1 257 1 108 2 28 1 11 1 303 1 242 1 326 1 48 2 74 1 
212 1 8 1 300 2 10 2 176 1 257 1 214 2 301 2 11 1 48 4 15 1 267 1 51 1 315 2 58 1 322 1 108 2 28 2 326 1 242 1 162 1 74 1 
51 1 248 1 315 2 322 1 58 1 212 1 10 1 300 2 153 1 301 1 214 1 257 1 28 1 11 1 162 1 48 2 15 1 74 1 
51 1 248 1 322 1 58 1 10 1 300 2 176 1 301 1 214 1 257 1 108 2 28 1 11 1 303 1 242 1 326 1 48 2 74 1 
248 1 212 1 300 2 10 2 176 1 257 1 214 2 301 2 11 1 48 4 15 1 267 1 51 1 315 2 58 1 322 1 108 2 28 2 326 1 242 1 162 1 74 1 
212 1 300 2 10 2 176 1 257 1 214 2 301 2 11 1 48 4 15 1 267 1 51 1 315 2 58 1 322 1 108 2 28 2 326 1 242 1 162 1 74 1 
78 1 121 1 5 1 300 2 257 1 11 1 132 1 14 1 48 2 184 1 269 1 51 1 314 1 315 1 24 1 318 1 98 1 145 1 103 1 322 1 58 1 323 1 152 1 108 1 65 1 109 1 74 1 164 1 
121 1 5 1 300 2 257 1 11 1 132 1 14 1 134 1 48 2 184 1 269 1 18 1 51 1 314 1 315 1 273 1 24 1 98 1 145 1 103 1 322 1 58 1 152 1 108 1 65 1 109 1 74 1 164 1 
39 1 212 1 300 2 10 2 176 1 257 1 214 2 301 2 11 1 48 4 15 1 267 1 51 1 315 2 58 1 322 1 108 2 28 2 326 1 242 1 162 1 74 1 
78 1 121 1 5 1 212 1 10 2 300 2 176 1 301 2 214 2 257 1 11 1 14 1 48 4 184 1 15 1 267 1 269 1 51 1 314 1 315 2 24 1 318 1 98 1 145 1 322 1 58 1 323 1 108 2 28 2 279 1 65 1 242 1 326 1 325 1 109 1 162 1 74 1 
39 1 169 1 212 1 300 2 10 1 176 1 301 1 257 1 214 1 11 1 14 1 48 3 15 1 223 1 267 1 51 1 270 1 315 2 58 1 322 1 108 1 28 1 202 1 326 1 109 1 30 1 69 1 162 1 74 1 
0 1 77 1 1 1 167 1 212 4 83 1 9 1 300 8 176 4 84 2 301 6 11 4 130 1 182 2 261 1 48 33 310 1 15 3 267 3 268 1 224 1 51 4 21 1 23 1 315 17 97 1 232 1 191 2 25 1 58 4 322 4 108 16 63 3 327 1 242 3 326 3 284 1 286 2 162 3 114 1 116 1 
0 1 77 1 1 2 167 1 212 7 83 1 213 1 300 6 84 4 178 2 176 6 301 8 11 3 182 2 261 1 48 46 222 2 15 4 267 7 268 1 51 3 23 1 315 24 232 1 191 4 25 1 58 3 322 3 108 22 63 4 326 6 242 4 284 1 286 2 162 7 114 2 
77 1 0 1 166 1 1 2 167 1 83 1 176 7 178 2 84 5 11 4 182 3 261 1 15 7 267 7 268 1 21 2 23 1 191 5 97 2 25 1 108 27 284 1 286 2 114 1 116 2 212 9 300 8 213 1 301 13 130 1 48 60 222 2 310 2 224 2 51 4 315 33 232 1 322 4 58 4 63 4 242 6 326 5 327 2 162 7 
0 1 77 1 1 1 167 1 212 4 83 1 213 1 300 8 176 4 84 2 301 5 11 4 130 1 182 2 261 1 48 35 310 1 15 3 267 3 268 1 224 1 51 4 21 1 23 1 315 18 97 1 232 1 191 2 25 1 58 4 322 4 108 17 63 4 327 1 242 2 326 3 284 1 286 2 162 3 114 1 116 1 
0 1 77 1 1 1 167 1 212 6 83 1 213 1 300 6 84 3 178 1 176 5 301 8 11 3 182 2 261 1 48 42 310 1 222 1 15 3 267 5 268 1 224 1 51 3 21 1 23 1 315 22 97 1 232 1 191 3 25 1 58 3 322 3 63 4 108 20 327 1 326 4 242 5 284 1 286 2 162 5 114 1 116 1 
140 1 179 1 181 1 118 1 88 1 161 1 289 1 197 1 150 1 198 1 
243 1 117 1 
215 1 140 1 179 1 324 1 306 1 161 1 289 1 150 1 198 1 
140 1 118 1 142 1 120 1 233 2 236 1 168 1 147 1 197 1 150 1 198 1 64 1 179 1 203 1 88 1 161 1 72 1 289 1 
140 1 118 1 142 1 120 1 233 2 236 1 168 1 147 1 197 1 150 1 198 1 64 1 179 1 203 1 88 1 161 1 72 1 289 1 
140 1 118 1 142 1 120 1 233 2 236 1 168 1 147 1 197 1 150 1 198 1 64 1 179 1 203 1 88 1 161 1 72 1 289 1 
85 1 146 1 265 1 
85 1 146 1 265 1 
220 1 172 1 
85 1 220 1 172 1 
319 1 156 1 
120 1 169 2 179 1 258 1 14 2 188 1 140 1 270 2 95 1 53 1 142 1 233 1 319 1 103 1 150 1 61 1 198 1 156 1 202 2 203 1 109 2 243 1 161 1 72 1 287 1 289 1 117 1 
146 1 265 1 
85 1 220 1 172 1 
2 1 121 1 39 1 124 1 5 1 300 2 257 1 302 1 11 1 14 2 132 1 309 1 48 2 189 1 269 1 51 1 314 2 229 2 315 1 98 2 145 2 322 1 58 1 108 1 65 1 202 2 109 2 31 1 74 1 164 1 34 1 
36 1 269 1 209 1 19 1 314 2 316 1 98 2 145 2 275 1 125 1 26 1 154 1 65 1 325 1 218 1 68 2 206 1 70 1 136 1 
36 1 209 1 269 1 19 1 314 1 316 1 98 1 145 1 275 1 125 1 26 1 154 1 65 1 218 1 244 1 68 2 206 1 
269 1 313 1 314 1 316 1 121 1 98 1 145 1 5 1 152 1 65 1 44 1 13 1 70 1 91 1 
36 1 269 1 209 1 19 1 314 1 316 1 98 1 145 1 275 1 125 1 26 1 154 1 65 1 218 1 68 2 206 1 70 1 136 1 
79 1 
66 1 236 1 262 1 71 1 45 1 320 1 50 1 
293 1 120 1 3 1 6 1 304 1 259 1 50 1 138 1 139 1 226 1 22 1 317 1 236 2 66 1 159 1 71 1 72 1 
249 6 252 2 3 12 171 3 5 3 6 5 176 2 259 6 262 1 263 1 266 2 267 2 269 4 22 4 271 2 24 3 98 3 195 2 201 1 290 1 35 1 120 5 121 10 40 2 212 2 298 2 304 4 131 6 46 2 50 8 138 4 227 1 314 3 54 2 55 2 317 3 236 8 145 3 320 1 148 1 59 2 152 1 157 2 240 2 65 3 241 2 325 1 66 2 326 2 159 4 71 9 72 5 162 2 246 1 
0 1 77 1 249 7 120 1 3 10 212 3 6 1 84 2 178 1 176 3 304 2 182 1 259 5 131 7 261 1 222 1 50 6 138 2 267 3 23 1 22 2 317 1 191 2 236 6 25 1 240 2 66 1 326 3 159 2 67 1 72 1 71 10 162 3 
120 1 169 1 212 2 176 1 304 1 12 1 14 1 221 1 310 1 50 2 223 1 138 1 270 1 22 1 97 1 235 1 149 1 240 2 241 1 202 1 109 1 159 1 204 1 111 1 72 1 71 2 116 1 208 1 
22 1 236 1 320 1 304 1 66 1 159 1 262 1 71 1 50 1 138 1 
249 5 3 10 236 5 212 2 298 1 176 2 240 2 241 1 326 2 259 5 131 5 162 2 71 5 50 5 267 2 
66 1 120 1 317 1 236 1 72 1 6 1 
252 1 120 2 121 2 5 2 6 2 7 1 256 1 43 1 304 1 13 1 263 1 91 1 186 1 50 1 138 2 269 3 22 2 314 3 317 1 24 1 98 3 145 3 100 1 148 1 277 1 152 2 65 2 159 2 71 1 72 2 329 1 292 1 35 1 
78 1 121 1 169 2 5 1 300 2 126 1 257 1 11 1 14 3 48 1 184 1 223 2 51 1 269 1 270 2 314 1 98 1 235 1 318 1 24 1 145 1 103 1 58 1 322 1 152 1 323 1 108 1 202 2 65 1 109 3 164 1 74 1 
21 1 22 1 249 2 252 1 3 4 236 4 148 1 304 1 66 2 259 2 159 1 131 2 71 1 50 2 138 1 
140 1 192 1 150 1 
140 1 57 1 197 1 150 1 156 1 
140 1 192 1 150 1 
140 1 192 1 150 1 
140 1 183 1 150 1 
140 1 183 1 150 1 
140 1 183 1 150 1 
140 1 150 1 
289 1 198 1 
51 2 21 1 315 4 97 1 322 2 58 2 212 1 300 4 176 1 108 4 301 3 11 2 242 2 327 1 286 1 48 8 310 1 15 1 116 1 224 1 
21 1 315 3 97 1 212 1 176 1 108 3 301 2 327 1 242 2 45 1 48 6 310 1 116 1 224 1 
51 1 315 2 322 1 58 1 211 1 212 1 300 2 176 1 108 2 301 2 11 1 242 1 326 1 162 1 48 4 15 1 267 1 
315 6 191 2 212 2 84 2 178 1 176 2 301 2 108 6 242 1 326 2 182 1 162 2 48 12 222 1 15 1 267 2 
212 3 300 4 178 1 84 2 176 3 301 9 11 2 133 1 48 23 310 2 222 1 15 4 267 2 224 1 51 2 21 1 315 11 97 1 191 2 322 2 58 2 108 12 327 1 326 2 242 5 110 1 286 2 162 2 116 2 
108 1 48 1 84 1 
315 1 191 1 48 1 
51 1 315 3 58 1 322 1 211 1 212 1 298 1 300 2 176 1 108 3 301 3 11 1 326 1 242 2 162 1 48 6 15 1 267 1 
0 1 77 1 212 4 300 2 84 2 178 1 176 4 301 4 11 1 182 1 261 1 48 22 222 1 15 2 267 4 51 1 23 1 315 11 191 2 25 1 58 1 322 1 108 11 326 4 242 2 284 1 162 4 
315 3 97 1 212 1 176 1 108 3 301 2 242 1 48 6 310 1 15 1 116 1 
51 1 315 1 322 1 58 1 300 2 301 2 108 2 11 1 242 1 327 1 110 1 286 1 48 3 310 1 15 1 116 1 224 1 
51 1 315 5 97 1 58 1 322 1 149 1 212 2 300 2 176 2 301 5 108 5 11 1 242 3 284 1 48 10 310 2 15 2 116 2 
51 1 315 2 322 1 58 1 212 1 300 2 301 1 11 1 284 1 162 1 48 2 15 1 
51 1 315 2 322 1 58 1 212 1 300 2 176 1 108 2 301 2 11 1 242 1 326 1 284 1 162 1 48 4 15 1 267 1 
51 3 315 1 322 3 58 3 300 6 108 2 301 2 11 3 130 1 242 1 110 1 284 1 286 1 48 3 310 1 15 1 116 1 
211 1 212 6 300 10 84 4 178 1 176 6 301 12 129 1 217 1 11 5 130 1 182 1 48 39 310 3 222 1 15 5 267 4 224 1 51 5 21 1 315 19 97 2 191 4 58 5 322 5 108 20 327 1 326 4 242 7 110 1 284 1 286 2 328 1 162 4 116 3 
77 1 0 1 212 5 300 4 84 1 176 4 301 9 11 2 182 1 261 1 48 24 310 2 15 4 267 2 224 1 51 2 21 1 23 1 315 14 97 2 191 1 25 1 149 1 58 2 322 2 108 10 327 1 326 1 242 5 284 1 286 1 162 2 116 2 
0 1 77 1 211 1 212 3 300 6 84 1 176 2 301 4 11 3 182 1 261 1 48 17 310 1 15 1 267 2 224 1 51 3 21 1 23 1 315 10 97 1 191 1 25 1 58 3 322 3 108 7 327 1 326 1 242 3 284 1 286 1 162 2 116 1 
0 1 77 1 211 1 212 5 300 6 84 2 178 1 176 5 301 6 11 3 182 1 261 1 48 29 310 1 222 1 15 2 267 4 224 1 51 3 21 1 23 1 315 14 97 1 191 2 25 1 58 3 322 3 108 15 327 1 326 4 242 4 284 1 286 1 162 4 116 1 
0 1 77 1 211 1 212 5 300 6 84 2 178 1 176 4 301 7 11 3 182 1 261 1 48 27 310 1 222 1 15 3 267 4 224 1 51 3 21 1 23 1 315 15 97 1 191 2 25 1 58 3 322 3 108 12 327 1 326 3 242 4 284 1 286 1 162 4 116 1 
77 1 0 1 212 5 300 4 84 1 176 4 301 9 11 2 182 1 261 1 48 24 310 2 15 4 267 2 224 1 51 2 21 1 23 1 315 14 97 2 191 1 25 1 149 1 58 2 322 2 108 10 327 1 326 1 242 5 284 1 286 1 162 2 116 2 
0 1 77 1 212 4 300 2 84 2 178 1 176 4 301 4 11 1 182 1 261 1 48 22 222 1 15 2 267 4 51 1 23 1 315 11 191 2 25 1 58 1 322 1 108 11 326 4 242 2 284 1 162 4 
0 1 77 1 211 1 212 5 300 8 84 2 178 1 176 4 301 7 11 4 182 1 261 1 48 28 310 1 222 1 15 3 267 4 224 1 51 4 21 1 23 1 315 15 97 1 191 2 25 1 58 4 322 4 108 13 327 1 326 3 242 4 284 1 286 2 162 4 116 1 
212 1 300 4 84 2 178 1 176 1 301 1 11 2 130 1 182 1 261 1 48 7 267 1 51 2 315 3 191 1 58 2 322 2 108 4 326 1 242 1 284 1 162 1 
315 3 97 1 212 1 176 1 108 4 301 6 327 1 242 3 48 7 310 3 15 3 116 3 224 2 
212 1 300 4 84 2 178 1 176 1 301 1 11 2 130 1 182 1 261 1 48 7 267 1 51 2 315 3 191 1 58 2 322 2 108 4 326 1 242 1 284 1 162 1 
86 1 202 1 109 1 89 1 14 1 103 1 60 1 
103 1 60 1 199 1 86 1 202 1 109 1 89 1 14 1 163 1 16 1 75 1 187 1 
269 1 65 1 314 1 121 1 13 1 98 1 45 1 145 1 91 1 5 1 152 1 
269 1 270 1 314 1 78 1 121 1 24 1 98 1 169 1 145 1 103 1 5 1 152 1 202 1 65 1 109 2 14 2 184 1 47 1 
78 1 251 1 121 3 169 2 5 2 260 1 14 2 47 1 184 1 269 1 270 1 314 1 98 1 24 2 195 1 145 1 103 1 157 1 65 1 202 2 109 2 204 1 35 1 
251 1 121 3 169 2 5 2 260 1 14 2 134 1 47 1 184 1 269 1 270 1 314 2 98 2 24 2 195 1 145 2 101 1 103 1 157 1 65 1 202 2 109 2 204 1 35 1 
269 1 314 1 120 1 24 1 98 1 121 4 195 1 145 1 171 1 5 1 321 1 174 1 157 1 65 1 72 1 46 1 35 1 
269 1 314 3 55 1 120 2 236 1 24 1 98 3 121 4 195 1 145 3 101 1 171 1 5 1 6 1 152 1 157 1 65 1 66 1 72 2 46 1 266 1 35 1 
269 1 65 1 314 1 305 1 98 1 145 1 
121 3 5 2 297 1 256 1 302 1 43 1 305 1 269 3 229 1 314 6 24 1 98 5 145 6 152 2 201 1 65 2 325 1 112 1 207 1 115 1 
78 1 169 1 5 1 10 1 176 1 257 2 11 2 14 2 184 1 92 1 269 1 270 1 21 1 97 1 98 1 24 1 103 2 108 3 279 1 28 1 202 1 109 2 116 1 34 1 121 1 39 1 212 1 300 4 301 2 214 1 47 1 48 6 310 1 224 1 51 2 314 1 315 3 318 1 145 1 58 2 322 2 323 1 65 1 325 1 327 1 242 2 74 2 
120 3 121 2 171 1 40 1 6 2 304 2 262 1 46 1 263 1 50 1 138 2 266 1 22 2 314 1 54 1 55 1 317 1 236 1 98 1 145 1 320 1 59 1 61 1 152 1 66 1 159 2 71 1 72 3 
269 2 227 1 314 2 98 2 24 1 121 2 145 2 5 1 201 1 65 1 325 1 305 1 46 1 
269 1 314 4 98 4 121 1 145 4 101 1 5 1 175 1 152 1 65 1 325 1 13 1 91 1 
269 2 314 2 98 2 24 1 121 1 145 2 5 1 277 1 256 1 43 1 65 1 282 1 186 1 35 1 
36 1 269 1 19 1 65 1 314 1 68 1 98 1 206 1 145 1 152 1 
269 1 314 2 98 2 121 1 145 2 5 1 302 1 65 1 325 1 218 1 31 1 
269 2 314 5 98 4 121 3 145 5 5 2 175 1 152 1 302 1 65 2 325 1 13 1 91 1 207 1 115 1 35 1 
269 2 314 5 98 4 121 3 145 5 5 2 151 1 175 1 152 1 302 1 65 2 325 1 13 1 91 1 207 1 35 1 
269 1 270 1 314 1 121 1 24 1 98 1 169 1 145 1 103 1 5 1 152 1 202 1 65 1 109 2 14 2 134 1 184 1 47 1 
269 2 314 1 98 1 24 1 121 1 145 1 5 1 256 1 201 1 43 1 65 1 112 1 35 1 
202 1 109 1 2 1 253 1 14 1 309 1 196 1 189 1 155 1 
281 1 73 1 196 1 
56 1 253 1 196 1 103 1 155 1 
225 1 251 1 120 2 253 2 56 2 236 1 122 1 196 1 103 1 61 1 155 2 281 1 66 1 204 1 260 1 72 2 73 1 330 1 266 1 
128 1 45 1 288 1 311 1 
33 1 276 1 331 1 
216 1 264 1 107 1 
33 1 113 1 276 1 331 1 
33 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 255 1 
33 1 113 1 276 1 331 1 
36 1 68 1 33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
119 1 33 1 264 1 185 1 276 1 331 2 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
80 1 311 2 105 2 238 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
76 1 
33 1 113 1 276 1 331 1 
33 1 113 1 276 1 331 1 
119 1 37 1 311 1 291 1 
288 1 311 1 

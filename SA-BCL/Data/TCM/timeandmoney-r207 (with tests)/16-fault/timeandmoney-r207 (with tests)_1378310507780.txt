#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 (28,233) (28,233) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 (28,233) (28,233) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 (28,233) (28,233) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 (28,233) (28,233) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 117 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 267 117 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (214,320) (214,320) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (262,274) 57 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (214,320) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (38,58,121) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 170 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 198 14 25 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 198 14 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException (214,320) (214,320) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException (214,320) (214,320) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException (214,320) (214,320) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException (214,320) (214,320) 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.IllegalArgumentException 308 196 46 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 308 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 308 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 68 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.IllegalArgumentException 308 196 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.IllegalArgumentException 308 196 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 276 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 170 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 175 201 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (262,274) (262,274) (87,171) 93 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (262,274) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (262,274) (262,274) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 241 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (214,320) (214,320) 21 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (262,274) 57 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 198 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 298 (11,19) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 298 (11,19) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 298 (228,280) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 298 (228,280) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 151 4 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3000 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V | CONSTANT | 6557 | 0 -> -1
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | STATEMENT | 1167 | stmt -> ;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 11810 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | CONDITION | 2407 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval; | RETURN | 2385 | return null
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | STATEMENT | 5839 | stmt -> ;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V | STATEMENT | 905 | stmt -> ;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
177 2 235 1 131 1 5 1 314 1 303 1 56 2 222 1 324 1 275 3 211 2 329 1 297 3 
177 2 303 4 53 1 10 1 135 2 56 3 63 1 222 1 267 1 190 2 273 1 275 7 193 2 233 1 26 1 235 1 28 1 314 2 237 1 120 1 324 2 211 2 329 3 297 7 49 1 
177 2 303 4 53 1 10 1 135 2 56 3 63 1 222 1 267 1 190 2 273 1 275 7 193 2 233 1 26 1 235 1 28 1 314 2 237 1 120 1 324 2 211 2 329 3 297 7 49 1 
177 2 303 4 53 1 10 1 135 2 56 3 63 1 222 1 267 1 190 2 273 1 275 7 193 2 233 1 26 1 235 1 28 1 314 2 237 1 120 1 324 2 211 2 329 3 297 7 49 1 
177 2 303 4 53 1 10 1 135 2 56 3 63 1 222 1 267 1 190 2 273 1 275 7 193 2 233 1 26 1 235 1 28 1 314 2 237 1 120 1 324 2 211 2 329 3 297 7 49 1 
177 1 235 1 314 1 303 3 135 1 56 2 81 1 63 2 267 1 190 1 275 4 273 1 193 1 211 1 329 2 297 4 
177 1 235 1 131 1 5 1 237 1 200 1 56 1 190 1 323 1 324 1 210 1 275 2 193 1 211 1 297 2 49 1 
177 2 235 1 314 3 53 1 117 1 303 7 10 1 135 1 56 4 81 1 63 2 222 1 267 1 190 1 324 1 273 1 275 9 193 1 211 2 329 4 297 9 24 1 
177 2 235 1 314 3 53 1 117 1 303 7 10 1 135 1 56 4 81 1 63 2 222 1 267 1 190 1 324 1 273 1 275 9 193 1 211 2 329 4 297 9 24 1 
188 1 38 1 154 1 22 1 47 1 318 1 214 1 320 1 
205 1 
115 1 38 2 279 1 154 1 22 2 205 1 296 1 195 1 
315 2 279 1 76 1 8 1 154 2 119 1 136 2 157 1 158 1 205 1 242 1 206 2 38 5 270 1 290 1 22 5 312 1 296 2 195 1 
279 1 170 1 205 1 
169 1 
188 1 47 2 318 2 
98 2 278 1 182 2 184 1 57 1 318 1 319 1 188 1 65 2 113 1 274 1 47 1 
188 1 47 1 318 1 214 1 
150 1 279 1 9 1 205 1 58 1 83 1 121 1 186 1 38 1 191 1 20 1 22 1 127 1 128 1 
47 1 318 1 121 1 
38 1 289 1 154 1 22 1 296 1 
288 1 38 2 279 1 154 1 22 2 205 1 296 1 195 1 
38 1 22 1 296 1 
73 1 55 1 9 1 318 1 83 1 191 1 232 1 127 1 47 1 299 1 
98 1 65 1 102 1 225 1 182 1 184 1 47 1 
170 1 
180 1 102 2 73 1 9 1 55 1 318 1 83 1 268 1 191 1 225 1 192 1 127 1 47 4 128 1 
47 1 
102 1 318 1 47 3 
47 1 
73 1 232 1 47 1 318 1 
73 1 102 1 225 1 318 1 47 2 
102 1 180 1 9 1 55 1 83 1 191 1 127 1 47 1 128 1 
102 1 225 1 47 1 
73 1 47 1 318 1 
98 1 65 1 182 1 184 1 
98 1 65 1 182 1 184 1 
123 1 160 1 178 2 144 1 153 1 42 1 118 1 104 1 
47 1 221 1 
197 1 253 1 281 1 
0 1 307 1 85 1 88 1 253 2 281 2 
253 1 281 1 
253 1 281 1 
0 1 307 1 
0 1 307 1 
0 1 307 1 
99 1 253 1 281 1 
99 1 253 1 281 1 
99 1 253 1 281 1 
253 1 168 1 281 1 
253 1 168 1 281 1 
253 1 168 1 281 1 
38 1 198 1 253 1 145 1 281 1 22 1 203 1 14 1 25 1 
198 1 253 1 145 1 281 1 203 1 14 1 
257 1 190 2 143 2 323 1 135 1 
190 1 135 1 193 1 
190 1 323 1 193 1 
257 1 190 3 66 1 143 1 323 1 135 2 
257 1 190 2 143 1 323 1 135 1 247 1 
218 1 136 1 12 1 188 1 22 5 312 2 146 1 71 1 195 1 75 1 315 1 279 1 154 4 239 1 202 1 157 1 318 1 205 1 242 1 35 1 206 1 320 1 36 1 38 5 169 1 255 1 173 1 47 1 296 1 92 2 214 1 
218 1 136 1 266 2 188 1 22 5 312 2 146 1 71 1 195 1 75 1 315 1 279 1 154 4 239 1 202 1 157 1 205 1 318 1 242 1 35 1 206 1 320 1 86 1 38 5 289 2 169 1 255 1 173 1 212 1 296 3 214 1 47 1 
218 2 136 1 12 1 188 1 223 1 69 1 22 3 312 2 71 1 315 1 75 1 279 1 154 2 202 1 239 1 119 1 318 1 205 2 242 3 206 1 35 2 320 1 36 1 38 3 255 1 169 3 173 1 47 1 214 1 92 1 330 1 
218 4 136 1 12 1 306 1 188 1 223 2 69 2 22 4 312 4 71 1 315 1 75 2 279 1 154 3 202 2 239 2 119 1 318 1 205 3 242 5 35 4 206 1 320 1 36 1 251 1 38 4 169 6 255 2 173 1 47 1 214 1 92 2 330 2 96 1 
16 1 
170 1 82 1 244 1 
142 1 82 1 
204 1 82 1 286 1 
325 1 82 1 
204 1 82 1 
305 1 204 1 48 1 244 2 82 3 286 1 
277 1 75 1 27 3 29 4 258 7 32 1 156 1 261 1 159 1 243 1 106 2 321 1 208 3 164 2 44 1 91 1 194 1 330 1 
178 2 258 6 261 2 104 1 106 1 139 1 269 1 109 1 144 1 227 1 194 1 277 1 29 3 27 2 32 1 79 1 243 1 321 1 123 1 208 3 164 1 42 1 174 1 216 1 
178 4 258 9 261 1 104 2 106 3 269 1 144 2 194 1 277 1 75 1 29 5 27 4 32 1 156 1 123 2 321 1 208 4 41 1 164 2 42 2 44 1 294 1 91 1 330 1 
277 1 75 1 27 3 29 4 258 7 32 1 156 1 261 1 243 1 106 2 321 1 208 3 164 2 44 1 91 1 194 1 330 1 
277 1 75 1 27 3 29 4 258 7 32 1 156 1 261 1 243 1 106 2 321 1 208 3 164 2 44 1 91 1 194 1 330 1 
97 1 177 1 98 1 132 1 302 2 219 1 220 2 182 1 184 1 204 1 82 1 137 2 65 1 322 1 163 1 324 2 275 1 293 1 231 1 211 1 297 1 94 1 176 1 
98 1 177 1 130 1 132 1 302 1 220 1 182 1 219 1 135 1 137 1 108 1 65 1 190 2 66 1 272 1 275 1 193 1 235 1 316 1 30 1 34 1 285 1 323 1 324 1 211 1 297 1 
98 1 177 1 131 1 5 1 132 1 303 1 302 1 220 1 182 1 219 1 135 1 56 1 105 1 137 1 108 1 65 1 190 2 66 1 272 1 275 2 193 1 235 1 316 1 30 1 34 1 285 1 323 1 324 1 211 1 297 2 
98 1 177 1 131 1 130 1 5 1 132 1 302 1 303 2 220 1 182 1 219 1 135 1 56 1 137 1 108 1 65 1 190 2 66 1 272 1 275 3 193 1 30 1 34 1 246 1 285 1 322 1 323 1 324 1 211 1 297 3 
98 1 131 1 130 1 5 1 132 1 302 1 303 2 220 1 182 1 219 1 135 1 56 1 137 1 108 1 65 1 190 2 66 1 275 2 193 1 30 1 34 1 246 1 323 1 324 1 297 2 
167 1 
98 2 181 2 182 2 9 1 184 2 13 1 186 1 107 2 191 1 20 1 22 5 23 1 195 3 279 1 199 1 205 2 204 1 206 1 121 1 38 5 37 1 293 1 127 1 215 1 296 6 128 1 132 1 54 2 219 1 304 2 136 1 58 1 61 2 62 2 138 2 65 2 64 1 226 1 69 2 310 1 312 2 70 1 150 1 234 1 74 1 315 1 157 1 242 2 82 1 83 1 248 1 89 4 169 2 173 1 94 1 
150 1 234 1 115 1 9 1 58 1 83 1 186 1 121 1 138 1 37 1 38 3 191 1 89 2 226 1 20 1 22 3 23 1 127 1 296 2 195 1 70 1 128 1 
150 1 234 1 115 1 279 1 181 1 9 1 205 1 58 1 83 1 186 1 121 1 37 1 38 3 191 1 89 3 226 1 20 1 22 3 23 1 127 1 296 1 195 1 70 1 128 1 
181 1 9 1 58 1 62 1 186 1 138 1 191 1 226 1 20 1 23 1 22 3 195 1 70 1 150 1 234 1 115 1 279 1 205 1 83 1 121 1 38 3 37 1 89 3 127 1 296 2 128 1 
9 1 58 1 62 2 186 1 138 2 308 1 191 1 226 1 20 1 23 1 22 3 70 1 195 1 196 1 150 1 234 1 115 1 83 1 121 1 38 3 37 1 89 2 127 1 46 1 296 3 128 1 
181 2 9 1 13 1 186 1 107 2 191 1 20 1 22 4 23 1 195 2 279 1 205 1 206 1 121 1 37 1 38 4 127 1 296 4 215 1 128 1 54 2 304 2 136 1 58 1 61 2 62 2 138 2 226 1 69 2 312 1 70 1 150 1 234 1 315 1 157 1 242 1 83 1 248 1 89 4 169 2 
150 1 234 1 9 1 58 1 83 1 186 1 121 1 308 1 37 1 38 2 191 1 89 2 226 1 20 1 22 2 23 1 127 1 70 1 128 1 
150 1 234 1 9 1 58 1 83 1 186 1 121 1 308 1 37 1 38 2 191 1 89 2 226 1 20 1 22 2 23 1 127 1 70 1 128 1 
150 1 234 1 9 1 58 1 83 1 186 1 121 1 37 1 38 2 191 1 89 2 226 1 68 1 20 1 22 2 23 1 127 1 70 1 128 1 
150 1 234 1 181 1 9 1 58 1 62 1 83 1 186 1 121 1 138 1 308 1 37 1 38 2 191 1 89 3 226 1 20 1 22 2 23 1 127 1 296 1 70 1 128 1 196 1 
150 1 234 1 181 1 9 1 58 1 62 1 83 1 186 1 121 1 138 1 308 1 37 1 38 2 191 1 89 3 226 1 20 1 22 2 23 1 127 1 296 1 70 1 128 1 196 1 
54 1 9 1 136 1 58 1 61 1 186 1 191 1 226 1 229 1 20 1 23 1 22 2 312 1 70 1 150 1 234 1 315 1 157 1 242 1 206 1 83 1 121 1 248 1 161 1 38 2 37 1 89 2 169 1 127 1 215 1 128 1 
98 1 178 2 258 1 29 1 182 1 118 1 184 1 104 1 122 1 160 1 123 1 65 1 144 1 42 1 230 1 276 1 
178 2 51 1 258 2 104 1 223 1 144 1 73 1 75 1 29 1 118 1 202 1 239 1 282 1 318 1 123 1 160 1 208 1 42 1 47 1 330 1 
178 2 258 2 29 2 75 1 27 1 153 1 118 1 32 1 156 1 104 1 106 1 160 1 123 1 144 1 164 1 42 1 44 1 170 1 91 1 194 1 
178 2 29 1 258 2 118 1 201 1 282 1 104 1 79 1 160 1 123 1 208 1 144 1 42 1 174 1 175 1 
100 1 178 2 52 1 29 1 258 2 102 1 118 1 282 1 104 1 122 1 207 1 160 1 123 1 208 1 225 1 144 1 42 1 47 1 
98 1 178 2 52 1 258 1 102 1 182 1 118 1 282 1 184 1 104 1 262 1 160 1 123 1 65 1 87 1 208 1 225 1 144 1 42 1 274 1 93 1 47 1 
178 2 258 1 75 1 29 1 153 1 7 1 118 1 239 1 104 1 160 1 123 1 144 1 42 1 
2 1 178 2 258 1 153 1 118 1 104 1 160 1 123 1 223 1 208 1 144 1 42 1 330 1 
178 2 258 2 75 1 29 1 153 1 118 1 202 1 239 1 104 1 160 1 123 1 208 1 223 1 144 1 42 1 330 1 
178 2 258 1 75 1 29 1 7 1 118 1 239 1 104 1 160 1 123 1 144 1 42 1 230 1 
2 1 178 2 258 1 118 1 104 1 160 1 123 1 223 1 208 1 144 1 42 1 230 1 330 1 
178 2 258 2 75 1 29 1 118 1 202 1 239 1 104 1 160 1 123 1 208 1 223 1 144 1 42 1 230 1 330 1 
178 2 75 1 29 1 258 2 118 1 202 1 239 1 104 1 160 1 123 1 208 1 223 1 144 1 42 1 330 1 
98 1 65 1 182 1 274 1 184 1 
98 1 65 1 166 1 182 1 184 1 
178 2 258 2 75 1 29 1 118 1 202 1 239 1 282 1 104 1 160 1 123 1 208 1 223 1 144 1 42 1 330 1 
98 1 65 1 182 1 274 1 262 1 105 1 
178 2 258 2 104 1 223 1 144 1 73 1 75 1 29 1 118 1 238 1 202 1 239 1 282 1 318 1 123 1 160 1 208 1 42 1 47 1 330 1 
178 8 258 33 6 1 133 1 259 1 104 4 106 3 269 2 223 3 144 4 309 1 112 1 311 1 194 1 72 1 277 3 27 6 29 17 75 4 202 3 239 3 32 1 33 1 156 1 79 2 245 1 80 1 123 4 40 1 208 16 41 1 164 1 42 4 44 1 126 1 292 3 91 1 174 2 216 2 330 4 300 1 
50 1 178 6 258 26 6 1 133 1 259 1 104 3 106 2 269 2 223 2 144 3 309 1 112 2 311 1 72 1 277 2 27 4 29 14 75 3 202 3 239 3 79 2 245 1 123 3 40 1 208 12 41 1 42 3 126 1 292 4 174 2 216 2 330 2 300 2 
50 1 178 8 258 37 6 1 133 1 259 1 104 4 106 3 269 2 223 3 144 4 309 1 112 1 311 1 194 1 72 1 277 4 27 7 29 19 75 4 202 3 239 3 32 1 77 1 156 1 79 3 245 1 80 1 123 4 40 1 208 18 41 1 164 1 42 4 44 1 126 1 292 4 91 1 174 3 216 3 330 4 300 2 
50 1 178 8 258 35 6 1 133 1 259 1 104 4 106 2 269 2 223 3 144 4 309 1 112 1 311 1 194 1 72 1 277 3 27 5 29 18 75 4 202 3 239 3 32 1 156 1 79 2 245 1 80 1 123 4 40 1 208 17 41 1 164 1 42 4 44 1 126 1 292 4 91 1 174 2 216 2 330 4 300 1 
50 1 178 6 258 43 6 1 133 1 259 1 104 3 106 6 269 2 223 3 144 3 309 1 112 1 311 1 194 3 72 1 277 3 27 9 29 23 75 6 202 3 239 3 32 3 156 3 79 2 245 1 123 3 40 1 208 20 41 1 164 3 42 3 44 3 126 1 292 4 91 3 174 2 216 2 330 6 300 1 
98 2 178 2 52 1 132 1 258 2 219 1 182 2 9 2 59 1 104 1 65 2 191 2 144 1 111 1 113 2 147 1 276 1 29 1 118 1 282 1 204 1 317 1 82 1 83 2 122 1 123 1 160 1 39 1 208 1 42 1 254 1 
98 1 3 1 132 1 219 1 182 1 220 1 184 1 204 1 82 1 65 1 326 1 231 1 293 1 94 1 
98 1 130 1 132 1 182 1 220 1 219 1 135 1 183 1 30 1 34 1 190 2 65 1 66 1 17 1 323 1 272 1 193 1 326 1 
98 2 130 1 132 1 219 1 182 2 220 1 135 1 183 1 30 1 34 1 105 1 190 2 65 2 66 1 17 1 323 1 272 1 193 1 326 1 
98 1 130 1 132 1 182 1 220 1 219 1 135 1 30 1 34 1 190 2 65 1 66 1 17 1 323 1 272 1 193 1 217 1 
291 1 
315 1 279 1 8 1 76 1 136 1 157 1 205 1 242 1 206 1 312 1 
218 1 75 1 169 1 239 1 202 1 312 2 35 1 
38 1 279 1 22 1 205 1 296 1 195 1 
129 2 98 4 132 1 219 1 182 4 136 2 184 2 141 1 64 1 65 4 22 3 312 2 195 2 313 1 116 1 74 1 315 2 199 2 119 1 157 1 204 1 242 2 82 1 206 2 38 3 293 1 173 2 296 4 94 1 
279 1 76 1 8 1 170 1 312 1 205 1 242 1 
304 1 136 1 13 1 107 1 69 1 22 1 312 1 195 1 315 1 279 1 157 1 205 1 242 1 206 1 38 1 169 1 296 1 
98 1 132 2 315 1 219 1 182 1 136 1 184 1 157 1 241 1 284 1 204 1 242 1 82 2 206 1 286 1 142 1 65 1 124 1 256 1 48 1 
218 5 6 1 133 1 259 1 136 1 189 1 223 2 22 1 311 1 312 4 195 1 315 1 75 2 279 1 202 2 239 2 157 1 205 1 242 7 79 1 35 5 206 1 38 1 169 3 126 1 174 1 213 1 296 1 216 1 330 2 
75 1 315 1 103 1 136 1 32 1 156 1 157 1 318 1 242 2 206 1 320 1 188 1 38 1 21 1 22 1 312 1 194 1 213 2 47 1 214 1 330 1 
98 1 188 1 65 1 182 1 274 1 184 1 57 1 47 1 318 1 
218 1 315 1 279 1 199 1 136 1 157 1 205 1 242 1 206 1 169 1 312 1 173 1 
198 1 203 1 
198 1 203 1 
198 1 203 1 
198 1 203 1 
198 1 203 1 
198 1 203 1 
198 1 203 1 
198 1 203 1 
253 1 281 1 
277 2 178 2 27 5 29 5 258 10 75 2 32 2 156 1 104 1 106 3 123 1 208 5 144 1 41 1 42 1 21 1 194 2 330 2 
277 1 178 2 75 1 29 2 258 2 27 1 239 1 104 1 123 1 41 1 144 1 42 1 
277 1 178 2 27 2 75 1 29 2 258 4 202 1 239 1 104 1 106 1 123 1 208 2 223 1 41 1 144 1 42 1 330 1 
277 1 178 6 258 3 27 2 29 1 32 1 104 3 80 1 106 1 123 3 269 1 208 2 41 1 144 3 227 1 42 3 194 1 
178 8 258 15 104 4 106 3 139 1 140 1 269 1 144 4 227 1 21 1 194 2 277 3 75 2 27 6 29 7 32 2 156 1 79 1 80 1 123 4 208 8 41 1 42 4 44 1 91 1 174 1 216 1 330 2 
277 1 178 4 75 1 258 8 29 4 27 3 32 1 156 1 104 2 106 2 123 2 269 1 208 4 144 2 164 1 42 2 44 1 91 1 194 1 330 1 
106 2 208 3 258 6 29 3 75 1 27 2 164 1 44 1 170 1 32 1 91 1 156 1 194 1 330 1 
277 1 178 2 27 2 75 1 29 2 258 4 202 1 239 1 104 1 106 1 140 1 123 1 208 2 223 1 144 1 42 1 330 1 
208 1 29 1 258 2 174 1 216 1 79 1 
178 2 258 25 104 1 106 4 269 1 223 2 144 1 21 1 194 2 277 4 75 5 29 13 27 8 239 2 202 2 32 2 156 2 79 2 287 1 123 1 208 12 164 1 42 1 44 1 91 1 174 2 295 1 330 5 175 1 
208 1 258 1 79 1 
258 1 29 1 174 1 
277 1 178 2 258 6 75 1 29 3 27 3 202 1 239 1 104 1 241 1 106 2 123 1 140 1 208 3 223 1 144 1 42 1 330 1 
178 4 258 13 6 1 133 1 259 1 104 2 106 2 269 1 223 2 144 2 311 1 277 1 29 6 75 2 27 3 202 2 239 2 79 1 123 2 208 7 41 1 42 2 126 1 174 1 216 1 330 2 
277 1 75 1 29 3 258 6 27 2 32 1 156 1 106 1 208 3 194 1 330 1 
277 1 178 2 29 1 27 2 258 3 32 1 104 1 106 1 123 1 269 1 208 2 144 1 227 1 42 1 44 1 91 1 194 1 
178 6 258 12 6 1 133 1 259 1 104 3 106 2 269 2 223 1 144 3 311 1 277 1 29 7 75 2 27 3 202 2 239 2 79 1 123 3 208 5 41 1 42 3 126 1 174 1 216 1 330 1 
178 8 258 12 6 1 133 1 259 1 104 4 106 2 140 1 269 2 223 1 144 4 311 1 277 1 29 7 75 2 27 3 202 2 239 2 79 1 123 4 208 5 41 1 42 4 126 1 174 1 216 1 330 1 
178 6 258 19 6 1 133 1 259 1 104 3 106 3 140 1 269 1 223 2 144 3 311 1 194 1 277 1 29 9 75 3 27 4 202 2 239 2 32 1 156 1 79 1 123 3 208 10 41 1 164 1 42 3 44 1 126 1 91 1 174 1 216 1 330 3 
178 8 258 12 6 1 133 1 259 1 104 4 106 2 140 1 269 2 223 1 144 4 311 1 277 1 29 7 75 2 27 3 202 2 239 2 79 1 123 4 208 5 41 1 42 4 126 1 174 1 216 1 330 1 
178 6 258 12 6 1 133 1 259 1 104 3 106 2 269 2 223 1 144 3 311 1 277 1 29 7 75 2 27 3 202 2 239 2 79 1 123 3 208 5 41 1 42 3 126 1 174 1 216 1 330 1 
178 4 258 13 6 1 133 1 259 1 104 2 106 2 269 1 223 2 144 2 311 1 277 1 29 6 75 2 27 3 202 2 239 2 79 1 123 2 208 7 41 1 42 2 126 1 174 1 216 1 330 2 
178 8 258 18 6 1 133 1 259 1 104 4 106 3 140 1 269 2 223 1 144 4 311 1 194 1 277 2 29 10 75 3 27 5 202 2 239 2 32 1 156 1 79 1 123 4 208 8 41 1 164 1 42 4 44 1 126 1 91 1 174 1 216 1 330 2 
178 8 258 16 6 1 133 1 259 1 104 4 106 3 269 2 223 2 144 4 311 1 277 3 29 9 75 3 27 6 202 3 239 3 79 1 80 1 123 4 208 7 41 1 42 4 126 1 174 1 216 1 330 2 
277 3 258 7 27 6 75 1 29 3 32 3 156 1 106 3 208 4 44 2 91 1 194 3 330 1 
178 8 258 18 6 1 133 1 259 1 104 4 106 3 269 2 223 1 144 4 311 1 194 1 277 1 29 10 75 3 27 4 202 2 239 2 32 1 156 1 79 1 80 1 123 4 208 8 41 1 164 1 42 4 44 1 126 1 91 1 174 1 216 1 330 2 
191 1 180 1 271 1 9 1 299 1 83 1 128 1 
101 1 180 1 9 1 78 1 83 1 187 1 249 1 191 1 271 1 328 1 299 1 128 1 
98 4 132 1 182 4 219 1 31 1 184 1 204 1 105 1 82 1 65 4 224 1 293 1 94 1 
129 1 98 2 179 1 132 2 182 2 219 1 204 1 263 1 82 1 286 1 250 1 65 2 18 1 90 1 
98 1 190 1 65 1 323 1 132 1 219 1 182 1 193 1 30 1 184 1 
98 2 130 1 65 2 132 1 219 1 182 2 204 1 317 1 59 1 105 1 82 1 
129 1 98 5 132 2 182 5 219 2 31 1 184 1 260 1 317 1 204 2 105 1 82 3 65 4 110 1 293 1 94 1 
129 1 98 5 132 2 182 5 219 2 31 1 184 1 260 1 317 1 204 2 105 1 15 1 82 3 65 4 293 1 94 1 
98 1 65 1 132 1 219 1 182 1 293 1 170 1 184 1 204 1 82 1 94 1 
98 1 102 1 132 1 182 1 219 1 11 1 184 1 204 1 82 1 286 1 65 1 47 1 298 1 
129 1 98 1 102 1 132 1 182 1 219 1 11 1 204 1 82 1 286 1 65 1 47 1 298 1 
129 1 98 1 102 1 132 1 182 1 219 1 280 1 204 1 82 1 286 1 65 1 47 1 298 1 
129 1 98 3 132 1 279 1 182 3 219 1 184 1 205 1 204 1 82 4 244 1 286 1 65 3 142 1 209 1 38 2 224 1 325 1 20 1 228 1 22 2 172 1 296 1 
129 1 98 3 132 1 279 1 182 3 219 1 184 1 205 1 204 1 82 4 244 1 286 1 65 3 142 1 209 1 38 2 224 1 325 1 19 1 20 1 22 2 296 1 
98 1 65 1 132 1 219 1 182 1 327 1 
98 7 130 1 179 1 132 3 182 7 134 1 219 2 184 2 260 1 317 1 204 2 105 1 82 3 286 1 65 6 110 1 113 1 90 1 327 1 48 1 301 1 
102 1 47 1 
98 1 8 1 182 1 184 1 136 2 65 1 142 1 19 1 20 1 22 3 312 1 195 1 313 1 315 2 279 1 76 1 154 1 155 1 157 2 205 1 242 1 206 2 82 2 244 1 38 3 125 1 171 1 296 2 
98 2 132 2 182 2 219 1 204 1 105 1 244 1 82 2 286 1 65 2 124 1 327 1 48 1 
98 1 102 1 132 1 182 1 219 1 280 1 184 1 204 1 82 1 286 1 65 1 47 1 298 1 
129 1 98 1 179 1 132 2 182 1 134 1 219 1 204 1 82 1 286 1 65 1 90 1 48 1 
151 1 39 1 283 2 149 1 
1 1 151 1 39 1 38 1 4 1 154 1 22 1 240 1 283 2 149 1 
151 1 39 1 283 1 149 1 
4 1 240 1 283 1 
177 1 235 1 131 1 5 1 275 1 56 1 211 1 297 1 
177 1 131 2 152 1 5 2 314 1 303 2 237 1 56 3 162 1 275 4 211 1 329 1 297 4 148 1 
84 1 177 1 235 1 131 1 5 1 303 1 275 2 56 1 211 1 297 2 264 1 24 1 
177 1 235 1 131 1 5 1 237 2 56 1 162 1 275 3 211 1 297 3 148 2 95 1 
114 1 252 2 165 1 56 2 
177 1 235 1 67 1 275 1 211 1 297 1 
177 1 235 1 131 1 5 1 303 1 53 1 275 2 56 1 211 1 297 2 
236 1 
177 1 235 1 131 1 5 1 275 1 56 1 211 1 297 1 
131 1 5 1 56 1 170 1 
177 1 131 1 5 1 275 1 56 1 211 1 297 1 
302 1 324 1 275 1 
177 1 235 1 131 1 5 1 237 2 56 1 162 1 43 1 275 3 211 1 297 3 148 1 
177 1 131 1 5 1 303 1 275 2 56 1 211 1 297 2 63 1 
177 1 235 1 135 1 56 1 190 1 275 1 273 1 193 1 211 1 329 1 297 1 
177 1 235 1 131 1 275 1 56 1 211 1 297 1 
177 1 235 1 131 2 5 1 275 1 211 1 297 1 
177 2 235 1 131 1 275 2 56 1 211 2 297 2 60 1 265 1 185 1 
177 1 235 1 131 1 5 1 314 1 53 1 303 2 10 1 56 2 275 3 211 1 329 1 297 3 
177 1 235 1 131 1 5 1 303 1 135 1 56 1 190 2 66 1 323 1 275 2 45 1 193 1 211 1 297 2 
177 2 235 1 131 1 5 1 314 1 303 2 56 2 81 1 63 1 275 4 211 2 329 1 297 4 
177 1 235 1 131 1 5 1 303 1 53 1 237 1 56 1 275 3 211 1 297 3 
152 1 314 1 56 1 329 1 
131 1 56 1 

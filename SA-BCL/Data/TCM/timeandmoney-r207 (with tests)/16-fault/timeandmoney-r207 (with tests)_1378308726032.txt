#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (191,244) (191,244) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (191,244) (191,244) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (191,244) (191,244) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (191,244) (191,244) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (212,252) (212,252) 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 21 196 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 21 196 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 211 314 226 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 211 314 226 181 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 211 314 226 (270,321) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 211 314 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 302 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 66 (219,240,294) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 211 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (68,132,256) (106,153,214) (106,153,214) (106,153,214) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (68,132,256) (106,153,214) (106,153,214) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (68,132,256) (106,153,214) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (68,132,256) (106,153,214) (106,153,214) (106,153,214) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 23 34 145 222 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 23 34 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 23 34 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 23 199 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 23 34 145 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 23 34 145 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 183 236 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 183 13 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 183 13 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 183 13 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 183 13 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 211 125 70 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (68,132,256) (68,132,256) (68,132,256) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (68,132,256) (68,132,256) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (68,132,256) (68,132,256) (68,132,256) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 127 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 211 314 226 (270,321) (270,321) 302 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 211 314 226 181 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 211 264 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 211 264 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 211 264 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 211 264 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 211 264 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I | OPERATOR | 3493 | * -> %
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4688 | = null
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 827 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money; | ASSIGN | 1908 | = null
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 4736 | stmt -> ;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 1 17 1 220 1 45 1 161 1 122 1 108 1 73 2 90 1 244 1 191 1 285 1 117 1 134 2 319 1 
43 1 17 1 220 1 161 1 122 1 45 1 108 1 73 2 90 1 244 1 191 1 285 1 117 1 134 2 319 1 
43 1 17 1 220 1 161 1 122 1 45 1 108 1 73 2 90 1 244 1 191 1 285 1 117 1 134 2 319 1 
43 1 17 1 220 1 161 1 122 1 45 1 108 1 73 2 90 1 244 1 191 1 285 1 117 1 134 2 319 1 
43 1 220 1 299 3 45 1 255 1 108 1 21 1 274 2 73 4 24 1 74 1 90 1 289 1 247 1 156 3 134 4 319 1 178 2 
17 1 43 1 161 1 212 1 108 1 73 1 134 1 248 1 252 1 90 1 
43 1 161 1 299 2 108 2 255 1 274 1 73 3 90 2 81 1 289 1 247 1 156 1 134 3 
43 1 299 1 161 1 21 1 108 2 255 1 274 1 73 4 90 2 81 1 213 1 196 1 33 1 156 2 134 4 
43 1 299 1 161 1 21 1 108 2 255 1 274 1 73 4 90 2 81 1 213 1 196 1 33 1 156 2 134 4 
126 1 8 1 280 1 
126 1 254 2 265 1 
211 1 226 1 314 1 
181 1 211 1 226 1 314 1 
211 1 226 1 314 1 321 1 
273 1 20 1 27 1 280 1 126 1 95 1 287 1 154 1 37 1 316 1 158 1 121 1 120 1 234 1 
211 1 314 1 
20 1 279 1 138 1 103 1 234 1 
126 1 128 1 20 2 72 1 279 1 280 1 138 1 234 2 
20 1 138 1 234 1 
211 1 20 1 226 1 314 1 279 1 321 1 270 1 234 1 
126 1 
126 1 128 1 20 2 165 1 279 1 280 1 138 1 234 2 
207 1 164 2 279 2 280 2 126 2 211 1 128 1 288 3 290 1 100 4 62 1 133 1 138 2 105 2 69 2 20 5 185 2 302 1 26 1 112 1 226 1 82 1 233 2 314 1 197 1 41 1 318 1 321 1 268 1 270 1 234 5 
194 1 294 1 
194 1 294 1 
219 1 66 1 
219 1 66 1 
219 1 66 1 
205 1 194 1 294 1 
219 1 194 1 66 1 294 1 
194 1 240 1 294 1 
205 1 194 1 294 1 
205 1 194 1 294 1 
194 1 30 1 294 1 
194 1 30 1 294 1 
194 1 30 1 294 1 
194 1 211 1 20 1 230 1 60 1 172 1 39 1 136 1 259 1 234 1 294 1 
20 2 44 2 163 1 301 1 75 1 259 2 126 1 194 2 230 2 60 1 173 1 172 2 176 1 175 1 313 1 39 2 136 3 234 2 294 2 
220 1 45 1 319 1 
248 1 
248 1 
248 1 
248 1 
164 1 279 4 124 1 242 2 89 1 280 1 126 2 211 1 128 1 245 1 288 2 290 1 100 3 138 1 105 1 20 5 254 3 185 1 187 1 143 1 305 2 113 2 29 1 193 1 226 1 265 1 232 1 233 1 38 1 314 1 321 1 268 1 234 5 270 1 
20 2 53 1 279 2 280 1 126 1 211 1 226 1 12 1 215 1 314 1 321 1 270 1 234 2 103 1 138 1 
164 1 279 2 124 1 89 1 242 2 280 1 126 2 211 1 245 1 288 2 290 1 100 3 133 1 105 1 20 3 185 1 254 3 187 1 143 1 305 1 113 2 193 1 226 1 265 1 232 1 233 1 314 1 38 1 321 1 270 1 234 3 
164 1 124 1 279 3 241 1 242 4 89 2 280 1 126 4 211 1 245 1 288 4 290 2 100 5 133 1 105 2 20 4 254 7 185 1 187 2 143 1 305 2 306 1 113 4 150 1 193 2 226 1 265 3 232 1 233 1 314 1 38 2 321 1 270 1 234 4 
0 1 295 1 272 1 86 1 8 1 
0 1 310 1 
3 1 
0 1 263 1 79 1 
0 1 130 1 
0 1 263 1 
295 2 0 3 263 1 79 1 317 1 114 1 
18 1 109 1 4 3 190 4 167 1 169 2 93 3 284 2 97 7 267 1 61 1 290 1 197 1 62 1 41 1 293 1 105 1 
18 1 109 1 4 3 190 4 167 1 169 2 93 3 284 2 97 7 267 1 61 1 290 1 197 1 62 1 41 1 293 1 105 1 
18 1 109 1 4 3 190 4 167 1 169 2 93 3 284 2 97 7 267 1 61 1 290 1 197 1 62 1 41 1 218 1 293 1 105 1 
97 1 109 2 61 1 157 1 190 1 169 1 293 1 
159 2 4 4 167 1 169 2 56 4 93 4 284 3 97 9 290 1 131 2 62 1 249 2 137 2 293 1 105 1 18 1 109 1 190 5 28 1 267 1 197 1 118 1 41 1 201 1 
239 1 43 1 46 1 161 1 106 1 108 1 73 1 221 1 256 1 52 2 257 1 90 1 261 2 92 1 153 1 171 1 214 1 134 1 248 1 320 1 324 2 119 1 179 1 
239 1 46 1 161 1 123 1 108 1 73 2 221 1 256 1 52 1 257 1 90 1 261 1 92 1 153 1 171 1 214 1 312 1 156 1 134 2 248 1 320 1 65 1 324 1 
239 1 46 1 161 1 123 1 73 1 221 1 256 1 52 1 257 1 261 1 92 1 171 1 214 1 312 1 156 1 134 1 248 1 324 1 
0 1 46 1 161 2 52 1 277 1 90 1 92 1 171 2 291 1 134 1 65 1 104 1 182 1 184 1 108 1 73 1 221 2 188 1 257 2 261 1 309 1 263 1 324 1 
239 1 43 1 46 1 161 1 106 1 123 1 108 1 73 1 221 1 256 1 52 1 257 1 90 1 261 1 92 1 153 1 171 1 214 1 134 1 248 1 320 1 324 1 
99 1 
0 1 164 1 6 2 92 1 11 2 95 1 245 1 100 2 15 1 182 1 20 5 254 2 185 1 188 1 27 1 261 2 262 2 263 1 31 1 265 2 266 1 37 1 40 2 268 1 121 1 120 1 203 2 46 1 273 1 52 2 280 4 126 5 57 1 128 3 283 1 287 1 59 1 288 2 291 2 138 6 67 1 298 1 297 1 142 2 71 1 304 1 223 2 77 4 155 1 154 1 233 1 316 1 324 2 158 1 234 5 
273 1 165 1 280 2 126 2 57 1 128 1 11 1 95 1 287 1 59 1 15 1 138 2 67 1 297 1 20 3 27 1 77 2 154 1 37 1 316 1 158 1 120 1 121 1 234 3 
273 1 165 1 280 3 126 3 57 1 128 1 95 1 287 1 59 1 15 1 138 1 67 1 297 1 20 3 27 1 77 3 154 1 37 1 316 1 158 1 120 1 121 1 234 3 203 1 
273 1 165 1 280 3 126 3 57 1 128 1 11 1 95 1 287 1 59 1 15 1 138 2 67 1 297 1 20 3 27 1 77 3 262 1 154 1 37 1 316 1 158 1 120 1 121 1 234 3 203 1 
273 1 164 1 165 1 280 2 126 2 57 1 11 2 128 1 95 1 129 1 287 1 59 1 288 1 100 1 15 1 138 3 67 1 297 1 20 3 185 1 23 1 222 1 145 1 27 1 77 2 262 2 31 1 34 1 154 1 37 1 233 1 316 1 268 1 158 1 121 1 234 3 120 1 
164 1 6 2 11 2 95 1 100 1 15 1 20 4 185 1 254 2 27 1 262 2 31 1 265 2 37 1 40 2 268 1 120 1 121 1 203 2 273 1 280 5 126 6 57 1 128 2 287 1 59 1 288 1 138 4 67 1 297 1 142 2 304 1 223 2 77 4 154 1 155 1 233 1 316 1 158 1 234 4 
273 1 164 1 280 2 126 2 57 1 95 1 287 1 59 1 129 1 288 1 100 1 15 1 67 1 297 1 20 2 185 1 23 1 27 1 77 2 31 1 154 1 34 1 37 1 233 1 316 1 158 1 268 1 120 1 121 1 234 2 
273 1 164 1 280 2 126 2 57 1 95 1 287 1 59 1 129 1 288 1 100 1 15 1 67 1 297 1 20 2 185 1 23 1 27 1 77 2 31 1 154 1 34 1 37 1 233 1 316 1 158 1 268 1 120 1 121 1 234 2 
273 1 164 1 280 2 126 2 57 1 95 1 287 1 59 1 288 1 100 1 15 1 67 1 297 1 20 2 253 1 185 1 23 1 76 1 27 1 77 2 154 1 37 1 233 1 316 1 199 1 158 1 268 1 120 1 121 1 234 2 
273 1 164 1 280 3 126 3 57 1 11 1 95 1 129 1 287 1 59 1 288 1 100 1 15 1 138 1 67 1 297 1 20 2 185 1 23 1 27 1 77 3 145 1 262 1 31 1 34 1 154 1 37 1 233 1 316 1 268 1 158 1 120 1 121 1 234 2 203 1 
273 1 164 1 280 3 126 3 57 1 11 1 95 1 129 1 287 1 59 1 288 1 100 1 15 1 138 1 67 1 297 1 20 2 185 1 23 1 27 1 77 3 145 1 262 1 31 1 34 1 154 1 37 1 233 1 316 1 268 1 158 1 120 1 121 1 234 2 203 1 
164 1 11 2 95 1 100 1 15 1 20 4 185 1 254 2 27 1 262 2 37 1 198 2 268 1 120 1 121 1 203 2 273 1 47 2 280 5 126 5 57 1 128 2 287 1 59 1 288 1 138 4 67 1 297 1 142 2 304 1 76 1 223 2 77 4 154 1 155 1 233 1 316 1 158 1 234 4 
238 2 159 2 48 1 4 2 278 1 89 1 56 4 93 5 284 1 94 1 97 9 131 2 290 1 101 1 249 2 137 2 105 1 141 1 18 1 183 1 22 1 144 1 187 1 190 4 28 1 193 1 80 1 227 1 236 1 
204 1 238 2 159 3 4 2 51 1 278 3 89 2 282 1 93 9 56 6 284 1 94 2 97 20 131 3 290 2 64 1 13 1 101 2 249 3 137 3 105 1 18 1 141 2 183 1 144 2 187 1 190 11 258 1 28 1 193 2 80 1 227 1 201 2 271 1 
238 2 159 2 48 1 4 2 278 1 89 1 56 4 93 5 284 1 94 1 97 9 131 2 290 1 13 1 101 1 249 2 137 2 105 1 141 1 18 1 183 1 22 1 144 1 187 1 190 4 28 1 193 1 80 1 227 1 
238 2 159 2 48 1 4 2 278 1 89 1 56 4 93 5 284 1 94 1 97 9 131 2 290 1 13 1 101 1 249 2 137 2 105 1 141 1 18 1 183 1 22 1 144 1 187 1 190 4 28 1 193 1 80 1 227 1 
204 1 238 4 159 2 48 2 51 1 4 12 278 3 167 1 89 6 169 1 282 1 56 4 93 22 284 6 94 2 97 46 131 2 290 7 62 1 64 1 13 1 101 1 249 2 137 2 105 7 141 4 18 6 183 1 144 1 187 6 190 24 258 1 149 2 28 1 193 6 80 1 227 1 267 1 197 1 41 1 201 1 271 1 
237 1 194 1 163 1 230 1 172 1 75 1 176 1 39 1 259 1 294 1 
240 1 315 1 
194 1 296 1 186 1 230 1 172 1 39 1 259 1 292 1 294 1 
205 1 2 1 
148 1 269 1 30 1 
20 1 44 1 163 1 301 1 75 1 259 1 126 1 194 1 230 1 60 1 173 1 172 1 176 1 175 1 39 1 136 2 234 1 294 1 
20 1 44 1 163 1 301 1 75 1 259 1 126 1 194 1 230 1 60 1 173 1 172 1 176 1 175 1 39 1 136 2 234 1 294 1 
20 1 44 1 163 1 301 1 75 1 259 1 126 1 194 1 230 1 60 1 173 1 172 1 176 1 175 1 39 1 136 2 234 1 294 1 
205 1 2 1 148 1 
205 1 2 1 148 1 
269 1 30 1 
148 1 269 1 30 1 
146 1 192 1 
20 1 44 1 240 1 301 1 70 1 303 1 259 1 279 1 146 1 192 1 308 1 125 1 194 1 211 1 230 1 172 1 38 1 315 1 39 1 136 1 234 1 294 1 
0 1 159 1 85 1 46 1 162 1 276 1 52 2 87 1 54 1 243 1 92 1 56 2 93 1 287 2 97 2 131 1 249 1 250 1 137 1 179 2 139 1 190 1 111 1 27 2 261 2 263 1 202 1 322 1 324 2 235 1 120 2 
239 1 68 1 46 1 123 1 221 1 52 2 256 1 261 2 92 1 132 1 248 1 320 1 324 2 119 1 325 1 
239 1 46 1 123 1 221 1 52 1 256 1 261 1 92 1 132 1 63 1 248 1 320 1 324 1 
0 1 182 1 46 1 184 1 221 1 188 1 52 1 261 1 92 1 263 1 291 1 324 1 325 1 180 1 
239 1 68 1 46 1 123 1 221 1 52 1 256 1 261 1 92 1 132 1 248 1 320 1 324 1 325 1 
195 1 
126 1 82 1 288 1 100 1 26 1 8 1 280 1 
164 1 6 1 280 1 126 2 128 1 288 1 100 1 138 1 20 1 185 1 254 1 31 1 265 1 233 1 40 1 268 1 234 1 
0 2 46 2 185 1 164 1 275 1 52 1 261 1 114 1 92 1 263 1 79 1 127 1 310 1 245 1 233 1 100 1 291 1 268 1 324 1 
238 1 164 2 51 1 166 1 242 5 89 2 280 2 282 1 126 5 128 1 58 1 94 1 245 1 288 5 290 2 100 8 64 1 138 1 105 2 141 1 20 1 69 2 254 6 185 2 71 1 187 2 258 1 113 5 193 2 265 3 36 1 233 2 268 2 234 1 271 1 
20 1 69 2 185 1 164 1 302 1 211 1 226 1 129 1 288 1 290 1 233 1 314 1 100 2 62 1 197 1 41 1 321 1 268 1 270 1 234 1 105 1 
185 1 164 1 26 1 280 1 126 1 82 1 288 1 233 1 100 1 268 1 
69 2 254 10 187 2 50 1 166 1 89 2 113 5 242 5 193 2 126 5 265 5 288 5 290 2 100 5 105 2 
126 1 20 1 128 1 280 1 234 1 138 1 
0 1 84 1 46 1 164 2 52 4 92 1 283 1 128 2 245 2 288 2 291 2 100 2 133 1 135 1 251 2 138 4 182 1 298 1 20 3 185 2 107 1 71 2 188 1 261 4 263 1 233 2 268 1 324 4 234 3 
181 1 211 1 226 1 314 1 
254 4 185 1 164 1 71 1 113 2 242 2 169 1 280 2 126 4 265 2 245 1 288 2 233 1 100 1 268 1 
98 1 39 1 259 1 
160 1 163 1 39 1 259 1 146 1 
98 1 39 1 259 1 
98 1 39 1 259 1 
39 1 259 1 102 1 
39 1 259 1 102 1 
39 1 259 1 102 1 
39 1 259 1 
194 1 294 1 
18 1 159 2 4 3 190 4 167 1 169 1 93 4 56 4 284 2 97 8 267 1 290 1 131 2 62 1 197 1 41 1 249 2 201 1 137 2 105 1 
93 3 284 2 97 6 267 1 290 1 4 2 190 3 197 1 62 1 41 1 167 1 8 1 169 1 105 1 
159 1 18 1 187 1 4 2 190 2 89 1 78 1 193 1 93 2 56 2 284 1 97 4 131 1 290 1 249 1 137 1 105 1 
238 2 141 1 18 1 48 1 187 1 4 2 190 3 89 1 193 1 93 4 284 1 94 1 97 7 290 1 105 1 
238 2 159 2 48 1 4 9 167 1 89 2 169 1 93 12 56 4 284 5 97 23 290 3 131 2 246 1 62 2 249 2 137 2 105 3 18 4 141 2 187 2 190 11 149 1 193 2 228 1 267 1 197 2 41 1 201 2 
238 1 93 1 97 1 
141 1 97 1 190 1 
159 1 18 1 187 1 50 1 4 3 190 3 89 1 78 1 193 1 56 2 93 3 284 2 97 6 131 1 290 1 249 1 137 1 105 1 
238 1 159 1 51 1 4 2 89 2 282 1 93 6 56 2 94 1 284 1 97 12 131 1 290 2 64 1 249 1 137 1 105 2 18 1 141 1 187 2 190 6 258 1 28 1 193 2 271 1 
18 1 4 2 190 3 93 3 284 1 97 6 290 1 62 1 197 1 41 1 105 1 
18 1 159 1 4 2 190 1 167 1 93 2 56 2 284 1 97 3 267 1 246 1 131 1 197 1 62 1 201 1 249 1 137 1 
159 1 18 2 302 1 4 5 190 5 28 1 56 2 93 5 284 3 97 10 131 1 290 2 62 2 197 2 41 1 249 1 137 1 105 2 
159 1 18 1 4 1 190 2 89 1 28 1 56 2 97 2 131 1 290 1 249 1 137 1 
159 1 18 1 187 1 4 2 190 2 89 1 28 1 193 1 93 2 56 2 284 1 97 4 131 1 290 1 249 1 137 1 105 1 
159 3 18 1 22 1 4 2 190 1 28 1 93 2 56 6 284 1 97 3 246 1 131 3 62 1 197 1 201 1 249 3 137 3 
238 4 159 5 48 1 4 12 167 1 89 3 169 1 93 18 56 10 94 1 284 7 96 1 97 34 246 1 131 5 290 5 62 3 249 5 137 5 105 5 141 3 18 5 22 1 187 3 190 16 307 1 147 1 28 1 78 1 193 3 267 1 197 3 41 2 201 2 
238 1 159 1 4 2 167 1 169 1 282 1 93 4 56 2 94 1 284 2 97 8 290 1 131 1 62 1 249 1 137 1 105 1 141 1 190 4 28 1 267 1 197 1 41 1 
238 2 159 2 48 1 4 3 167 1 89 1 169 1 282 1 93 5 56 4 284 2 94 1 97 11 131 2 290 2 62 1 249 2 137 2 105 1 141 1 18 1 190 6 28 1 78 1 193 1 267 1 197 1 41 1 
238 1 159 3 51 1 4 4 167 1 89 2 169 1 282 1 93 10 56 6 94 1 284 3 97 19 131 3 290 3 62 1 64 1 249 3 137 3 105 3 18 1 141 1 187 2 190 9 258 1 28 1 78 1 193 2 267 1 197 1 41 1 201 1 271 1 
238 1 159 3 51 1 4 5 167 1 89 2 169 1 282 1 93 7 56 6 94 1 284 3 97 17 131 3 290 3 62 1 64 1 249 3 137 3 105 2 18 2 141 1 187 1 190 10 258 1 28 1 78 1 193 2 267 1 197 1 41 1 201 1 271 1 
238 1 159 1 4 2 167 1 169 1 282 1 93 4 56 2 94 1 284 2 97 8 290 1 131 1 62 1 249 1 137 1 105 1 141 1 190 4 28 1 267 1 197 1 41 1 
238 1 159 1 51 1 4 2 89 2 282 1 93 6 56 2 94 1 284 1 97 12 131 1 290 2 64 1 249 1 137 1 105 2 18 1 141 1 187 2 190 6 258 1 28 1 193 2 271 1 
238 1 159 4 51 1 4 5 167 1 89 2 169 1 282 1 93 8 56 8 94 1 284 3 97 18 131 4 290 3 62 1 64 1 249 4 137 4 105 2 18 2 141 1 187 1 190 10 258 1 28 1 78 1 193 2 267 1 197 1 41 1 201 2 271 1 
238 1 159 4 51 1 4 6 89 3 282 1 93 7 56 8 94 1 284 3 97 16 131 4 290 3 64 1 249 4 137 4 105 2 18 3 141 1 22 1 187 2 190 9 258 1 28 1 193 3 201 2 271 1 
18 3 4 6 190 3 167 2 93 4 284 3 97 7 267 1 290 1 62 3 197 3 41 1 105 1 
238 1 159 4 51 1 4 4 167 1 89 2 169 1 282 1 93 8 56 8 94 1 284 3 97 18 131 4 290 3 62 1 64 1 249 4 137 4 105 2 18 1 141 1 22 1 187 1 190 10 258 1 28 1 193 2 267 1 197 1 41 1 201 2 271 1 
151 1 287 1 27 1 260 1 42 1 120 1 121 1 
206 1 209 1 27 1 260 1 55 1 151 1 170 1 32 1 287 1 42 1 121 1 120 1 
0 1 92 1 263 1 182 1 46 1 188 1 52 1 291 1 8 1 261 1 324 1 
211 1 264 1 
211 1 264 1 
211 1 264 1 
0 4 46 1 52 3 280 1 126 1 92 1 130 1 291 1 251 1 138 1 16 1 295 1 20 2 300 1 25 1 261 3 225 1 79 1 263 1 310 1 316 1 324 3 234 2 
0 4 295 1 46 1 20 2 52 3 280 1 261 3 126 1 225 1 263 1 79 1 92 1 310 1 130 1 291 1 316 1 177 1 251 1 324 3 234 2 138 1 16 1 
92 1 46 1 52 1 261 1 324 1 281 1 
0 3 46 3 123 1 49 1 189 1 52 6 210 1 87 1 261 7 114 1 281 1 79 1 263 2 92 2 231 1 174 1 217 1 291 2 119 1 324 7 179 1 
211 1 264 1 
0 2 164 2 52 1 279 1 280 1 9 1 126 1 128 1 288 1 100 1 291 1 135 1 177 1 14 1 138 2 295 1 20 3 185 2 26 1 261 1 116 1 310 1 82 1 233 2 316 1 324 1 268 2 234 3 
295 1 0 2 46 2 275 1 52 2 261 2 114 1 281 1 79 1 263 1 92 1 119 1 324 2 
0 1 182 1 46 1 188 1 52 4 261 4 10 1 225 1 263 1 92 1 291 1 324 4 119 1 
0 1 46 2 49 1 5 1 52 2 210 1 261 2 91 1 79 1 263 1 92 1 35 1 251 1 324 2 
239 1 92 1 46 1 52 1 291 1 248 1 261 1 324 1 
0 1 92 1 263 1 46 1 123 1 52 2 87 1 261 2 324 2 119 1 139 1 
0 3 182 1 46 2 188 1 52 4 87 1 261 5 10 1 263 2 92 2 174 1 291 1 217 1 251 1 324 5 119 1 
0 2 46 3 49 1 188 1 52 2 210 1 87 1 88 1 261 2 91 1 79 1 263 2 92 2 35 1 291 1 324 2 119 1 
211 1 264 1 
0 1 46 2 49 1 52 1 210 1 261 1 114 1 79 1 263 1 92 1 231 1 251 1 324 1 
299 1 289 1 247 1 8 1 
299 1 108 1 73 1 289 1 247 1 134 1 90 1 
161 1 171 1 134 1 
43 1 19 1 299 1 1 1 108 1 73 3 90 1 152 1 247 1 289 1 117 2 134 3 
299 1 108 1 73 2 289 1 247 1 156 1 134 2 178 1 90 1 
43 1 220 1 45 1 299 1 274 1 108 1 24 1 73 1 134 1 319 1 90 1 
43 1 299 1 108 1 73 1 289 1 134 1 90 1 
43 1 108 1 73 1 289 2 247 1 134 1 90 1 
43 1 140 1 299 1 286 1 108 2 73 2 289 1 134 2 168 1 90 2 
43 1 108 1 73 1 115 1 90 1 213 1 247 1 289 1 134 1 
43 1 108 1 73 1 216 1 134 1 248 1 90 1 
43 1 299 2 108 2 255 1 274 1 73 4 74 1 90 2 289 1 247 1 156 2 134 4 178 1 
43 1 299 1 108 1 73 1 289 1 247 1 134 1 90 1 
1 1 299 3 108 1 255 1 274 1 73 4 115 1 90 1 152 1 289 2 247 2 117 1 156 2 134 4 
43 1 299 1 108 1 73 2 90 1 33 1 289 1 247 1 83 1 156 1 134 2 200 1 
43 1 299 1 1 2 108 1 73 3 110 1 90 1 152 1 247 1 289 1 117 2 134 3 
299 2 208 1 311 1 323 2 
43 1 108 1 73 1 7 1 134 1 90 1 
43 1 299 1 229 1 108 1 73 2 289 1 247 1 156 1 134 2 90 1 
224 1 
43 1 299 1 108 1 73 1 289 1 247 1 134 1 90 1 
43 1 299 1 108 1 73 3 90 1 229 1 247 1 289 1 156 1 117 1 134 3 
299 1 274 1 255 1 115 1 
299 1 289 1 

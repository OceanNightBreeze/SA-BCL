#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 263 10 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) 99 257 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) 99 259 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 263 150 191 (57,88) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException (37,151) 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 214 269 246 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 214 269 246 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 214 269 246 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 214 269 246 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 214 269 246 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) (23,192) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (23,192) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) (23,192) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (24,70,101,177) (24,70,101,177) (24,70,101,177) 120 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) (40,68,272) 187 28 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 225 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 263 92 195 262 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 263 10 44 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 263 10 135 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 214 204 67 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 214 234 59 190 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 263 150 191 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 214 234 59 190 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 263 150 191 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 263 10 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 263 10 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 263 171 45 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 263 171 45 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 263 171 45 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 263 171 45 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 263 171 45 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 214 204 67 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 225 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 60 157 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 263 10 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 212 96 176 (81,205) (81,205) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 225 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 263 92 5 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 263 92 195 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 263 92 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 214 52 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 263 114 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 214 234 60 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 263 185 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 212 96 176 157 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 214 234 59 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 214 234 59 216 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 212 96 176 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 263 92 5 125 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 212 96 176 (81,205) (81,205) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 263 92 5 47 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 225 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException (37,151) (37,151) 213 (142,160) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException (37,151) (37,151) 213 (20,100) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 212 96 176 (81,205) (81,205) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (37,151) (37,151) (40,68,272) 99 206 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 1537 | 24 -> 23
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | ASSIGN | 5073 | = null
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | OPERATOR | 11448 | != -> ==
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
271 1 225 1 249 1 
26 2 122 1 271 1 
80 2 38 2 25 2 276 2 256 1 244 1 15 2 65 2 
223 1 263 1 139 1 105 1 265 1 10 1 108 1 48 1 15 2 188 2 238 1 152 1 77 1 80 2 156 1 25 2 276 3 160 1 36 1 164 2 38 3 256 1 210 1 208 2 95 1 213 1 167 1 65 2 170 1 
80 1 38 1 25 1 276 1 256 1 15 1 16 1 34 1 215 1 65 1 
37 1 283 1 38 1 25 1 276 1 68 1 151 1 34 1 40 1 
37 1 80 1 38 1 25 1 276 1 151 1 15 1 34 1 65 1 40 1 
272 1 42 1 147 1 175 1 72 1 
128 1 272 2 147 2 175 1 271 1 199 1 72 1 249 1 
272 1 147 1 175 1 
80 1 272 1 25 1 276 1 72 1 34 1 38 1 256 1 147 1 15 1 16 1 215 1 51 1 65 1 
271 1 
128 1 272 2 148 1 147 2 175 1 271 1 72 1 249 1 
261 1 217 3 69 1 175 2 222 1 72 2 176 1 8 2 184 1 234 2 147 5 15 1 237 2 16 1 51 1 80 1 272 5 25 1 276 1 157 1 194 2 34 1 282 1 203 1 128 1 38 1 253 2 256 1 60 1 91 1 286 1 96 1 215 1 65 1 290 1 133 2 
244 1 225 1 
80 1 25 2 276 2 244 2 33 1 38 2 207 1 15 1 65 1 
166 1 97 1 88 1 
156 1 276 1 160 1 244 1 139 1 105 1 36 1 164 1 38 1 183 1 208 1 188 1 152 1 213 1 95 1 77 1 
80 1 156 1 25 1 276 2 160 1 139 1 104 1 105 1 36 1 88 1 164 1 268 1 38 2 208 1 15 1 188 1 152 1 95 1 213 1 77 1 
80 3 38 3 25 3 276 3 244 1 15 3 104 1 65 1 
80 1 38 1 25 1 276 1 15 1 34 1 215 1 
80 1 38 1 25 1 276 1 207 1 15 1 34 1 33 1 65 1 
80 2 25 2 276 2 34 1 104 1 37 1 268 1 38 2 207 1 151 1 15 2 257 1 65 1 99 1 40 1 
283 1 180 1 80 1 38 2 25 2 276 2 244 1 15 1 104 1 
80 1 25 1 276 1 34 1 104 1 37 1 268 1 38 1 15 1 151 1 259 1 99 1 40 1 
80 2 25 2 276 2 104 1 88 1 38 2 166 1 207 1 15 2 65 1 
156 1 276 1 160 1 244 1 139 1 105 1 36 1 164 1 38 1 208 1 188 1 152 1 213 1 95 1 77 1 
156 1 276 1 100 1 244 1 139 1 36 1 164 1 252 1 38 1 208 1 188 1 152 1 213 1 95 1 77 1 
57 1 108 1 210 1 123 1 150 1 238 1 263 1 191 1 
37 1 80 1 38 1 25 1 276 1 209 1 15 1 34 1 
80 4 25 5 83 1 276 5 220 1 244 1 104 2 283 1 180 1 38 5 268 1 207 1 15 4 65 1 
80 2 38 2 25 2 276 2 209 1 15 2 34 1 215 1 
4 1 248 1 
4 1 248 1 
144 1 284 1 
144 1 284 1 
144 1 284 1 
4 1 12 1 248 1 
4 1 84 1 248 1 
228 1 144 1 284 1 4 2 248 2 107 1 
4 1 12 1 248 1 
4 1 12 1 248 1 
242 1 4 1 248 1 
242 1 4 1 248 1 
242 1 4 1 248 1 
4 2 221 1 73 2 267 2 143 1 147 2 13 1 15 1 75 1 16 1 271 1 78 1 51 1 80 1 272 2 25 1 276 1 121 2 243 2 281 1 248 2 34 1 56 1 35 1 202 2 89 1 38 1 256 1 169 1 215 1 65 1 
4 1 264 1 73 1 267 1 232 1 270 1 147 1 15 2 115 1 79 1 80 2 272 1 25 2 276 2 121 1 243 1 244 1 84 1 248 1 202 1 35 1 38 2 211 1 134 1 
2 1 103 1 239 1 
186 1 103 1 239 1 
0 1 1 1 2 2 186 1 239 3 250 1 
179 1 0 1 2 1 186 1 239 2 250 1 
0 2 2 1 186 1 239 2 250 1 
217 2 175 1 137 2 138 1 72 4 141 1 8 1 11 1 184 1 234 1 147 5 74 1 150 1 271 2 79 1 272 5 26 3 122 1 27 2 194 2 86 2 249 1 129 1 128 1 253 1 59 1 61 1 211 1 216 1 134 1 133 1 
217 6 42 5 175 6 138 2 72 7 8 2 11 2 184 1 234 3 147 9 149 5 74 1 150 3 189 1 271 5 155 1 272 9 26 9 122 3 27 6 194 5 86 6 55 1 249 1 282 1 201 1 128 1 90 1 253 2 59 3 211 4 258 1 216 3 133 2 
217 2 138 1 137 1 72 2 141 1 8 1 11 1 234 1 147 3 150 1 271 3 272 3 26 4 122 2 194 2 27 2 86 2 249 1 282 1 129 1 253 1 59 1 211 1 216 1 133 1 
217 4 138 1 137 2 72 3 141 1 8 1 11 1 234 2 147 4 150 2 189 1 271 4 155 1 272 4 26 7 122 3 27 4 194 3 86 4 249 1 282 1 129 1 90 1 253 1 59 2 211 2 216 2 133 1 
94 1 152 1 225 1 
22 1 152 1 
197 1 
152 1 95 1 
58 1 94 2 39 1 152 3 95 1 77 1 
152 1 95 1 77 1 
30 1 152 1 
269 1 214 1 246 1 224 1 
269 1 214 1 246 1 224 1 
269 1 218 1 214 1 246 1 224 1 
269 1 214 1 246 1 224 1 
269 1 214 1 246 1 224 1 
24 1 120 1 101 1 153 1 177 1 
192 1 24 1 101 1 153 1 177 1 
23 1 24 1 70 1 153 1 
192 1 24 1 101 1 153 1 177 1 
24 1 120 1 101 1 153 1 177 1 
280 1 
217 1 219 1 175 2 139 2 9 1 8 1 178 1 11 1 229 1 184 1 147 2 188 2 152 1 77 1 241 1 156 1 272 2 194 1 54 1 161 1 31 1 36 2 164 2 128 1 253 1 208 2 95 1 133 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 2 25 1 276 1 68 1 278 1 28 1 175 1 102 1 34 1 37 1 128 1 283 1 38 1 147 2 148 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 8 1 37 1 283 1 38 1 253 1 184 1 147 1 187 1 151 1 40 1 133 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 37 1 283 1 38 1 147 1 187 1 151 1 40 1 
272 1 25 1 276 1 68 1 278 1 28 1 102 1 34 1 8 1 37 1 283 1 38 1 253 1 184 1 147 1 187 1 151 1 40 1 133 1 
81 1 108 1 205 1 210 1 123 1 238 1 212 1 96 1 225 1 176 1 
108 1 262 1 210 1 113 1 92 1 195 1 238 1 263 1 
80 1 25 1 276 1 44 1 263 1 104 1 10 1 108 1 268 1 38 1 113 1 210 1 15 1 238 1 
80 1 135 1 25 1 276 1 263 1 139 1 104 1 10 1 164 1 108 1 268 1 38 1 208 1 113 1 210 1 188 1 15 1 238 1 
108 1 67 1 208 1 210 1 188 1 238 1 214 1 139 1 287 1 204 1 164 1 
80 1 25 1 276 1 108 1 38 1 59 1 234 1 113 1 210 1 207 1 15 1 238 1 214 1 64 1 65 1 216 1 
108 1 59 1 234 1 210 1 123 1 238 1 214 1 190 1 
108 1 210 1 123 1 150 1 238 1 263 1 191 1 
108 1 59 1 234 1 210 1 123 1 238 1 214 1 216 1 
108 1 59 1 234 1 210 1 238 1 214 1 190 1 287 1 
108 1 210 1 150 1 238 1 263 1 287 1 191 1 
108 1 59 1 234 1 210 1 238 1 214 1 287 1 216 1 
108 1 59 1 234 1 210 1 238 1 214 1 216 1 
156 1 276 1 160 1 263 1 139 1 105 1 36 1 10 1 164 1 108 1 38 1 210 1 208 1 188 1 238 1 152 1 213 1 95 1 167 1 77 1 
156 1 276 1 100 1 263 1 139 1 36 1 10 1 164 1 108 1 252 1 38 1 46 1 210 1 208 1 188 1 238 1 152 1 213 1 95 1 77 1 
108 1 59 1 234 1 210 1 113 1 238 1 214 1 216 1 
156 1 276 1 160 1 226 1 105 1 36 1 164 1 108 1 38 1 59 1 234 1 210 1 208 1 188 1 238 1 152 1 214 1 95 1 213 1 168 1 167 1 77 1 216 1 
80 1 25 1 276 1 266 1 108 1 38 1 59 1 234 1 113 1 210 1 207 1 15 1 238 1 214 1 65 1 216 1 
146 1 279 1 71 1 238 1 45 1 263 1 106 1 171 1 
146 1 279 1 71 1 238 1 45 1 263 1 106 1 171 1 
146 1 279 1 71 1 238 1 45 1 263 1 106 1 171 1 
146 1 279 1 71 1 238 1 45 1 263 1 106 1 171 1 
146 1 279 1 71 1 238 1 45 1 263 1 106 1 171 1 
4 1 121 1 277 1 221 1 281 1 248 1 202 1 73 1 267 1 13 1 78 1 
232 1 84 1 
260 1 21 1 121 1 4 1 29 1 248 1 202 1 73 1 267 1 
4 1 221 1 73 1 267 1 143 1 147 1 13 1 15 1 75 1 16 1 271 1 78 1 51 1 80 1 272 1 25 1 276 1 121 1 243 2 281 1 248 1 34 1 56 1 202 1 35 1 89 1 38 1 256 1 169 1 215 1 65 1 
4 1 221 1 73 1 267 1 143 1 147 1 13 1 15 1 75 1 16 1 271 1 78 1 51 1 80 1 272 1 25 1 276 1 121 1 243 2 281 1 248 1 34 1 56 1 202 1 35 1 89 1 38 1 256 1 169 1 215 1 65 1 
4 1 221 1 73 1 267 1 143 1 147 1 13 1 15 1 75 1 16 1 271 1 78 1 51 1 80 1 272 1 25 1 276 1 121 1 243 2 281 1 248 1 34 1 56 1 202 1 35 1 89 1 38 1 256 1 169 1 215 1 65 1 
12 1 251 1 107 1 
12 1 251 1 107 1 
242 1 235 1 
242 1 235 1 107 1 
270 1 115 1 
4 1 72 1 264 1 73 1 267 1 232 1 270 1 147 1 75 1 236 1 15 2 115 1 79 1 80 2 272 1 25 2 276 2 121 1 243 1 244 1 84 1 248 1 56 1 202 1 38 2 211 1 134 1 
12 1 251 1 
242 1 235 1 107 1 
25 2 276 2 67 1 204 1 108 1 38 2 113 1 210 1 285 1 238 1 214 1 49 1 154 1 66 1 
156 1 1 1 2 1 174 1 245 1 103 1 226 1 227 1 7 1 36 1 164 2 165 1 112 1 208 2 186 1 188 2 50 1 239 2 117 1 
172 1 156 1 1 1 2 1 245 1 103 1 7 1 36 1 164 1 165 1 112 1 208 1 186 1 188 1 50 1 239 2 117 1 
139 1 227 1 9 1 178 1 188 1 152 1 77 1 241 1 156 1 274 1 31 1 161 1 36 2 164 1 165 1 130 1 208 1 93 1 95 1 
156 1 1 1 2 1 174 1 245 1 103 1 227 1 7 1 36 1 164 1 165 1 112 1 208 1 186 1 188 1 50 1 239 2 117 1 
182 1 
222 1 225 1 203 1 
217 1 175 1 8 1 230 1 184 1 147 1 271 2 272 1 26 1 122 1 194 1 196 1 249 1 128 1 253 1 132 1 133 1 
217 7 173 1 219 1 136 2 175 5 139 1 142 2 8 3 11 1 110 1 184 3 234 2 147 5 114 2 237 2 150 2 188 1 152 6 76 2 271 6 77 1 18 2 22 3 272 5 156 1 26 12 122 6 27 6 194 5 198 2 86 6 36 2 164 1 128 3 253 3 59 2 208 1 94 2 39 1 95 1 288 2 289 1 216 2 133 3 
217 4 3 1 5 1 175 1 8 2 184 2 47 1 234 2 147 1 150 2 237 1 271 4 52 1 272 1 119 1 26 6 27 5 194 5 122 3 159 1 86 5 200 1 249 1 128 1 253 2 255 1 59 2 92 1 216 2 133 2 
217 2 272 1 157 1 194 2 176 1 8 1 253 1 60 1 184 1 234 1 91 1 147 1 237 1 96 1 240 1 133 1 
253 1 184 1 222 1 8 1 133 1 
261 1 217 5 26 10 27 5 122 5 194 3 86 5 59 2 234 2 114 1 150 2 237 2 271 5 216 2 
128 1 272 1 147 1 175 1 271 1 249 1 
217 1 219 1 175 2 139 2 9 1 8 1 178 1 11 1 229 1 184 1 147 1 188 2 152 1 77 1 241 1 156 1 272 1 194 1 54 1 124 1 161 1 31 1 36 2 164 2 128 1 253 1 208 2 95 1 133 1 
263 1 139 1 105 1 265 1 10 1 108 1 188 1 15 2 152 1 238 1 77 1 80 2 156 1 25 2 276 3 160 1 36 1 164 1 38 3 256 1 208 1 210 1 213 1 95 1 167 1 65 2 
217 2 26 4 219 1 122 2 27 2 194 1 86 2 249 2 8 1 11 1 253 1 269 1 184 1 271 4 133 1 
145 1 121 1 267 1 
254 1 270 1 121 1 32 1 267 1 
145 1 121 1 267 1 
145 1 121 1 267 1 
41 1 121 1 267 1 
41 1 121 1 267 1 
41 1 121 1 267 1 
121 1 267 1 
4 1 248 1 
81 1 205 1 158 1 238 2 212 1 96 1 176 1 
81 1 205 1 212 1 96 1 225 1 176 1 
59 1 234 1 238 1 214 1 19 1 216 1 
92 1 5 1 263 1 
92 1 195 1 263 1 
92 1 263 1 
52 1 214 1 
114 1 263 1 
47 1 146 1 92 1 5 1 238 1 263 1 
60 1 234 1 214 1 
185 1 263 1 
157 1 212 1 96 1 176 1 
59 1 234 1 146 1 238 1 214 1 
59 1 234 1 146 1 238 1 214 1 216 1 
146 1 238 1 212 1 96 1 176 1 
146 1 92 1 5 1 238 3 62 1 263 1 125 1 19 1 
47 1 146 1 92 1 5 1 238 1 263 1 
47 1 146 1 92 1 5 1 238 2 263 1 19 1 
47 1 146 1 92 1 5 1 238 1 263 1 
47 1 146 1 92 1 5 1 238 1 263 1 
47 1 146 1 92 1 5 1 238 1 263 1 
47 1 146 1 92 1 5 1 238 1 263 1 
47 1 146 1 92 1 5 1 238 2 263 1 19 1 
47 1 146 1 92 1 5 1 238 2 62 1 263 1 
81 1 205 1 212 1 96 1 176 1 
47 1 146 1 92 1 5 1 238 2 62 1 263 1 
25 1 276 1 244 1 34 1 180 1 283 1 38 1 14 1 17 1 
25 1 275 1 276 1 244 1 140 1 34 1 126 1 180 1 283 1 181 1 38 1 14 1 63 1 17 1 
208 1 188 1 31 1 225 1 139 1 164 1 
80 1 156 1 25 1 276 2 160 1 244 1 139 1 104 1 36 1 164 1 38 2 208 1 15 1 188 1 152 1 95 1 213 1 77 1 
80 1 156 1 25 1 276 1 160 1 34 1 104 1 36 1 127 1 164 1 37 1 38 1 208 1 151 1 15 1 188 1 152 1 95 1 213 1 77 1 
80 1 156 1 25 1 276 1 100 1 34 1 104 1 36 1 127 1 164 1 37 1 38 1 208 1 151 1 15 1 188 1 152 1 95 1 213 1 77 1 
22 1 272 2 156 1 30 1 175 1 139 1 85 1 162 1 249 1 36 1 127 1 164 3 109 1 147 2 208 3 188 3 94 1 152 4 76 1 95 1 271 1 77 1 20 1 
22 1 272 2 156 1 30 1 175 1 139 1 162 1 249 1 36 1 142 1 127 1 164 3 109 1 147 2 208 3 188 3 94 1 152 4 76 1 95 1 271 1 77 1 
156 1 208 1 188 1 36 1 98 1 164 1 
241 1 156 2 43 1 193 1 226 1 139 2 87 1 36 3 164 7 178 1 208 7 131 1 188 6 39 1 152 3 95 2 77 1 116 1 98 1 170 1 117 1 
226 1 176 1 104 1 105 1 108 2 233 1 113 1 15 1 188 1 152 1 238 2 77 1 154 1 81 1 80 1 156 1 25 1 276 2 160 1 36 1 164 1 205 1 38 2 210 2 208 1 212 1 95 1 213 1 96 1 168 1 167 1 
217 3 222 1 72 1 139 1 142 1 8 2 234 2 147 3 237 2 15 1 152 2 76 1 16 1 18 1 22 1 80 1 25 1 157 1 34 1 164 1 253 2 38 1 256 1 91 1 94 1 96 1 261 1 175 2 176 1 184 2 188 1 51 1 272 3 276 1 194 2 124 1 198 1 203 1 128 1 60 1 208 1 288 1 65 1 215 1 133 2 
156 1 173 1 226 1 36 2 164 2 208 2 94 1 188 2 39 1 152 2 95 1 77 1 98 1 
241 1 156 1 139 1 226 1 31 1 161 1 36 2 9 1 178 1 164 2 208 2 188 2 152 1 95 1 77 1 
241 1 156 1 161 1 163 1 36 2 9 1 127 1 164 2 178 1 208 2 188 2 152 1 95 1 77 1 
156 1 208 1 186 1 188 1 103 1 139 1 50 1 239 1 36 1 164 1 
53 1 156 1 226 1 36 1 164 2 208 2 188 2 131 1 152 1 95 1 117 1 
241 1 156 2 193 1 161 1 31 1 139 1 226 1 36 3 9 1 178 1 164 3 208 3 188 2 131 1 152 3 95 2 77 1 116 1 
241 1 82 1 156 2 193 1 161 1 31 1 139 1 226 1 36 3 9 1 178 1 164 3 208 3 188 2 131 1 152 3 95 2 77 1 
80 1 156 1 25 1 276 2 100 1 244 1 139 1 104 1 36 1 164 1 38 2 208 1 15 1 188 1 152 1 95 1 213 1 77 1 
241 1 156 1 43 1 36 2 127 1 164 1 178 1 208 1 188 1 39 1 152 1 95 1 77 1 
118 1 38 1 273 1 231 1 25 1 276 1 285 1 49 1 66 1 
118 1 206 1 6 1 
118 1 273 1 231 1 111 1 244 1 
118 1 272 1 273 1 247 1 72 1 34 1 6 1 37 1 231 1 111 1 206 1 147 1 151 1 99 1 40 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 277 107 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 277 107 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (250,275) (250,275) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (250,275) (250,275) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (250,275) (250,275) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (250,275) (250,275) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 277 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (128,306) (118,235) (118,235) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 160 7 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 251 86 325 14 316 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 251 86 325 14 316 23 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 251 86 325 14 316 23 
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (128,306) (128,306) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 160 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 216 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (128,306) (118,235) (118,235) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (128,306) (118,235) (118,235) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (128,306) (118,235) (118,235) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 160 7 362 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 79 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 168 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 251 86 325 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 251 86 325 14 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 251 86 325 14 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | ASSIGN | 1192 | = null
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 2
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6320 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isPositive()Z | CONSTANT | 5332 | 0 -> -1
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3491 | 0 -> -1
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3809 | return null
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | STATEMENT | 5166 | stmt -> ;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay; | RETURN | 384 | return null
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
286 1 161 1 229 2 308 3 190 1 224 9 287 1 152 4 93 1 194 1 209 2 233 9 299 1 312 1 107 1 284 1 67 4 184 2 29 7 277 1 303 1 43 1 
286 1 161 1 229 2 308 3 190 1 224 9 287 1 93 1 152 4 194 1 209 2 233 9 299 1 312 1 107 1 284 1 67 4 184 2 29 7 277 1 303 1 43 1 
286 1 250 1 326 1 312 1 275 1 190 1 328 1 224 1 254 1 184 1 194 1 209 1 233 1 
286 1 250 1 326 1 312 1 275 1 190 1 328 1 224 1 254 1 184 1 194 1 209 1 233 1 
286 1 250 1 326 1 312 1 275 1 190 1 328 1 224 1 254 1 184 1 194 1 209 1 233 1 
286 1 250 1 326 1 312 1 275 1 190 1 328 1 224 1 254 1 184 1 194 1 209 1 233 1 
286 1 229 2 308 1 224 4 190 1 287 1 152 2 209 1 233 4 299 1 312 1 284 1 67 2 184 1 29 3 277 1 
286 1 88 1 21 1 224 2 217 1 194 1 209 1 233 2 272 1 25 1 312 1 299 1 67 1 328 1 184 1 133 1 
161 1 308 1 224 3 152 1 217 1 194 1 209 2 233 3 272 1 312 1 67 2 184 2 29 1 
358 1 141 1 99 1 
344 2 358 1 153 1 
59 2 346 2 54 1 212 2 163 2 294 1 279 2 31 2 
345 2 123 1 77 1 166 1 346 3 54 1 279 2 157 1 197 2 199 1 39 2 171 1 59 2 219 1 108 1 159 1 41 1 236 1 16 1 285 1 360 1 222 1 19 1 162 1 111 1 176 2 163 2 142 1 367 1 181 1 338 1 27 1 313 1 147 1 212 3 294 1 31 2 70 1 371 2 
19 1 189 1 59 1 346 1 212 1 163 1 294 1 279 1 31 1 318 1 
149 1 189 1 150 1 346 2 35 1 279 1 6 1 234 1 59 1 13 1 358 1 19 2 288 1 163 1 141 1 24 1 212 2 294 1 69 1 31 2 318 1 
149 1 19 2 189 1 346 2 150 1 163 2 288 1 141 1 279 2 35 1 6 1 59 2 13 2 294 1 212 2 358 1 69 2 31 2 318 1 
11 1 13 1 151 1 69 1 8 1 
11 1 136 1 13 2 151 1 358 1 141 1 69 2 202 1 
11 1 13 1 69 1 
149 1 19 1 189 1 346 1 151 1 163 1 279 1 59 1 13 1 294 1 212 1 69 1 31 1 318 1 
358 1 
196 1 11 1 13 2 151 1 358 1 141 1 69 2 202 1 
134 1 331 1 2 1 151 2 298 2 91 1 322 1 141 1 115 2 11 2 58 1 48 1 13 5 358 1 69 5 42 1 202 1 187 1 32 2 
222 1 345 1 111 1 346 2 279 1 338 1 27 1 199 1 171 1 39 1 59 1 313 1 327 1 301 1 212 2 41 1 253 1 31 1 236 1 371 1 
54 1 99 1 
346 2 163 1 54 2 279 1 368 1 59 1 212 2 200 1 31 2 
46 1 291 1 
222 1 345 1 111 1 346 1 54 1 338 1 27 1 39 1 171 1 199 1 313 1 212 1 41 1 236 1 62 1 371 1 
59 3 346 3 163 1 54 1 212 3 253 1 279 3 31 3 
19 1 189 1 59 1 346 1 212 1 279 1 31 1 
368 1 19 1 59 1 346 1 212 1 163 1 200 1 279 1 31 1 
150 1 54 1 55 1 279 3 6 1 197 2 199 1 59 3 13 1 108 1 200 1 159 1 236 1 16 1 19 2 162 1 111 1 288 1 163 2 338 1 27 1 294 1 212 4 253 1 69 1 31 3 70 1 345 1 123 1 166 1 346 4 35 1 39 1 171 1 301 1 41 1 222 1 176 1 142 1 367 1 181 1 95 1 313 1 147 1 371 1 
17 1 59 1 346 2 54 1 212 2 253 1 279 1 31 2 24 1 
19 1 346 3 150 1 163 1 288 1 35 1 279 3 6 1 208 1 95 1 59 3 13 1 200 1 301 1 212 3 253 2 358 1 69 1 31 3 
346 2 163 1 46 1 279 2 59 2 327 1 200 1 212 2 253 1 31 2 
222 1 345 1 111 1 346 1 54 1 338 1 27 1 39 1 171 1 199 1 313 1 212 1 41 1 236 1 371 1 
345 1 19 1 123 1 54 1 27 1 39 1 185 1 371 1 
0 1 125 1 102 1 157 2 353 1 197 2 60 1 108 2 159 1 357 1 267 1 176 4 309 1 46 2 246 1 142 1 367 1 291 2 181 1 251 1 147 1 70 1 71 1 
248 1 19 1 59 1 150 1 346 1 212 1 279 1 31 1 
17 1 59 4 346 5 356 1 301 1 54 1 163 1 200 1 212 5 253 2 279 4 31 5 50 1 24 1 
248 1 19 1 189 1 59 2 346 2 212 2 279 2 31 2 
347 1 
347 1 
223 1 45 1 
223 1 45 1 
223 1 45 1 
347 1 
347 1 
223 1 45 1 347 2 
347 1 
347 1 
347 1 
347 1 
347 1 
306 1 361 1 347 2 290 2 311 2 235 1 118 1 292 1 13 2 49 1 358 1 69 2 61 2 237 2 15 2 
346 1 347 1 64 1 279 1 7 1 290 1 311 1 324 1 94 1 59 1 292 1 13 1 212 1 69 1 61 1 31 1 237 1 15 1 160 1 
286 1 299 1 190 1 
286 1 299 1 88 1 
286 3 88 1 190 2 173 1 191 1 278 1 
286 2 266 1 88 1 190 1 173 1 191 1 
286 2 88 1 190 1 173 1 191 2 
344 1 125 1 2 1 298 1 151 4 80 1 324 1 13 4 86 1 358 1 267 1 331 3 309 1 22 1 336 1 310 2 139 1 64 1 141 1 115 1 145 1 225 1 94 1 251 1 48 1 28 1 69 4 30 1 32 1 
344 9 125 3 2 6 151 7 298 2 153 3 323 1 80 6 8 5 324 4 11 5 263 5 86 3 13 8 42 1 358 5 220 1 44 1 267 3 177 1 331 8 309 3 336 1 139 2 366 1 141 1 115 2 145 6 251 3 119 1 48 1 69 8 30 2 32 2 
344 4 125 1 2 2 151 2 298 1 153 2 324 1 80 2 13 3 86 1 358 3 42 1 267 1 331 3 309 1 139 1 310 1 141 1 115 1 145 2 225 1 251 1 28 1 69 3 30 1 32 1 
344 7 125 2 2 4 298 1 151 3 153 3 80 4 324 2 13 4 86 2 358 4 42 1 220 1 44 1 267 2 177 1 331 5 309 2 139 1 310 2 141 1 115 1 145 4 225 1 251 2 28 1 69 4 30 1 32 1 
222 1 3 1 99 1 
222 1 333 1 
129 1 
222 1 236 1 
222 3 105 1 199 1 293 1 3 2 236 1 
222 1 199 1 236 1 
222 1 74 1 
330 1 0 3 176 7 268 1 309 1 125 1 348 1 156 1 271 1 282 2 157 4 355 1 60 2 108 3 340 1 305 1 100 1 
330 1 0 3 176 7 268 1 309 1 125 1 348 1 156 1 271 1 282 2 157 4 355 1 60 2 108 3 340 1 305 1 100 1 
330 1 0 3 176 7 268 1 309 1 125 1 348 1 297 1 271 1 156 1 282 2 157 4 355 1 60 2 108 3 340 1 305 1 100 1 
319 1 320 1 75 1 0 10 348 2 125 4 258 1 156 2 355 1 197 2 157 16 282 3 60 5 108 15 86 3 159 1 305 2 267 3 330 5 176 31 268 1 309 4 205 1 179 1 137 1 138 3 367 1 271 1 181 1 251 3 340 1 147 1 120 4 100 2 
72 1 320 1 0 4 125 1 348 1 156 1 197 4 157 5 282 2 355 1 106 1 60 3 108 4 159 2 305 1 330 1 176 9 309 1 367 2 181 2 271 1 147 2 340 1 100 1 
345 1 122 1 190 1 217 1 194 1 260 1 233 2 299 1 39 1 171 1 131 1 286 2 111 1 88 1 224 2 114 1 209 1 272 1 249 1 96 1 312 1 274 1 67 1 227 1 183 1 148 1 29 1 184 1 278 1 371 1 
345 1 122 1 190 1 217 1 194 1 260 1 233 3 299 1 39 1 171 1 283 1 359 1 286 2 111 1 88 1 178 1 224 3 114 1 209 1 272 1 96 1 274 1 67 1 227 1 183 1 148 1 184 1 29 2 278 1 371 1 
286 2 345 1 111 1 88 1 122 1 190 1 224 2 178 1 114 1 217 1 260 1 194 1 233 2 272 1 299 1 171 1 39 1 96 1 274 1 283 1 67 1 183 1 29 2 278 1 371 1 
345 1 321 1 194 2 233 1 39 1 171 1 236 1 359 1 222 1 111 1 204 1 224 1 364 1 114 2 65 1 209 1 27 1 96 2 66 1 183 2 184 1 342 1 371 1 
345 1 122 1 190 1 194 1 260 1 233 1 299 1 39 1 171 1 131 1 286 2 111 1 88 1 178 1 224 1 114 1 209 1 96 1 312 1 274 1 227 1 183 1 148 1 184 1 278 1 371 1 
296 1 
149 1 189 1 150 1 2 1 279 1 6 1 192 1 153 2 281 1 234 1 11 5 59 1 13 4 329 1 202 2 19 2 331 1 241 1 63 2 163 1 288 1 115 1 24 1 339 1 252 1 294 1 212 2 69 4 31 2 32 1 215 1 167 1 346 2 257 3 298 1 35 1 36 3 170 3 264 5 300 2 358 3 174 1 87 2 141 3 182 1 369 1 48 1 97 2 318 1 
149 1 189 1 150 1 2 1 279 1 6 1 192 1 153 2 281 1 234 1 11 5 59 1 13 4 329 1 202 2 19 2 331 1 241 1 63 2 163 1 288 1 115 1 24 1 339 1 252 1 294 1 212 2 69 4 31 2 32 1 215 1 167 1 346 2 257 3 298 1 35 1 36 3 170 3 264 5 300 2 358 3 174 1 87 2 141 3 182 1 369 1 48 1 97 2 318 1 
344 2 167 1 215 1 346 1 150 1 257 2 2 1 34 1 298 1 35 1 6 1 36 2 170 2 234 1 10 1 11 4 264 4 13 4 329 1 358 3 202 2 239 2 19 1 331 1 241 1 365 2 63 2 288 1 141 3 115 1 24 1 182 1 369 1 48 1 212 1 97 2 69 4 31 1 32 1 
150 1 2 2 153 2 6 1 192 1 234 1 10 1 11 6 13 5 329 1 236 1 202 3 19 1 111 1 331 2 241 1 63 2 288 1 245 1 115 1 24 1 27 2 212 1 30 1 69 5 342 1 31 1 255 1 32 1 344 2 345 2 167 1 215 1 346 1 257 2 298 1 35 1 36 2 82 1 170 2 38 1 39 2 171 1 264 4 300 2 358 3 87 2 222 1 364 1 141 2 182 1 369 1 48 1 97 2 371 2 
215 1 346 1 150 1 35 1 6 1 36 1 196 1 234 1 11 2 264 2 13 3 329 1 358 2 202 1 19 1 241 1 288 1 141 2 24 1 182 1 369 1 212 1 69 3 31 1 
19 1 215 1 150 1 241 1 346 1 257 1 288 1 141 2 35 1 6 1 24 1 182 1 234 1 369 1 264 3 13 2 329 1 212 1 358 2 69 2 31 1 
215 1 346 1 150 1 257 1 35 1 6 1 36 1 196 1 234 1 170 1 11 2 264 3 13 3 329 1 358 2 202 1 19 1 241 1 288 1 141 2 24 1 182 1 369 1 212 1 69 3 31 1 
149 1 189 1 215 1 346 2 150 1 279 1 35 1 6 1 36 2 281 1 196 1 170 2 234 1 11 3 59 1 264 2 13 3 329 1 358 3 202 1 19 2 241 1 163 1 288 1 140 1 141 3 24 1 182 1 369 1 294 1 212 2 69 3 31 2 318 1 
344 2 167 1 215 1 346 1 150 1 257 2 2 1 298 1 35 1 153 2 192 1 6 1 36 2 170 2 234 1 10 1 11 4 264 4 300 2 13 4 329 1 358 4 202 2 87 2 19 1 331 1 241 1 63 2 288 1 141 3 115 1 24 1 182 1 369 1 48 1 212 1 97 2 69 4 31 1 32 1 
149 1 189 1 150 1 2 1 279 1 6 1 192 1 153 2 234 1 11 4 59 1 13 4 329 1 202 2 19 2 331 1 241 1 63 2 163 1 288 1 115 1 24 1 339 1 252 1 294 1 212 2 69 4 31 2 32 1 215 1 167 1 346 2 257 2 298 1 35 1 36 2 170 2 264 4 300 2 358 3 174 1 87 2 141 3 182 1 369 1 48 1 97 2 318 1 
149 1 189 1 150 1 2 1 279 1 6 1 192 1 153 2 234 1 11 4 59 1 13 4 329 1 202 2 19 2 331 1 241 1 63 2 163 1 288 1 115 1 24 1 339 1 252 1 294 1 212 2 69 4 31 2 32 1 215 1 167 1 346 2 257 2 298 1 35 1 36 2 170 2 264 4 300 2 358 3 174 1 87 2 141 3 182 1 369 1 48 1 97 2 318 1 
149 1 189 1 150 1 2 1 279 1 6 1 234 1 11 4 59 1 13 4 329 1 202 2 239 2 19 2 331 1 241 1 63 2 163 1 334 1 288 1 115 1 24 1 252 1 294 1 212 2 69 4 31 2 32 1 344 2 215 1 167 1 346 2 257 2 298 1 34 1 35 1 36 2 170 2 84 1 264 4 358 3 365 2 141 3 182 1 369 1 48 1 97 2 318 1 
176 6 0 2 309 1 125 1 348 1 54 2 46 1 142 1 367 1 291 1 181 1 271 1 282 1 157 3 197 2 355 1 60 2 108 3 340 1 147 1 159 1 357 1 70 1 305 1 99 1 
123 1 0 2 125 2 54 1 232 1 56 1 197 4 157 6 60 1 108 5 86 2 159 2 16 1 19 1 267 1 330 1 176 11 309 1 179 1 46 8 138 2 142 2 367 2 291 8 181 2 210 1 251 2 276 1 147 2 120 2 70 1 98 1 
345 1 346 2 54 1 279 1 231 1 197 2 354 1 157 1 199 1 171 1 39 1 59 1 219 1 108 1 41 1 159 1 301 1 236 1 16 1 62 1 222 1 111 1 332 1 176 2 46 1 142 1 367 1 338 1 181 1 27 1 210 1 313 1 147 1 212 2 253 1 31 1 70 1 371 1 
0 6 54 2 279 1 104 2 282 1 197 6 157 10 199 2 59 1 60 4 108 10 159 3 236 2 16 1 238 2 162 2 111 2 330 2 291 7 338 2 26 2 27 1 210 1 251 2 340 1 212 3 253 1 31 1 70 3 345 1 346 3 256 2 348 1 125 3 218 1 355 1 130 1 39 1 171 2 219 1 86 2 301 1 41 2 305 1 222 2 267 2 176 20 309 3 46 7 142 3 367 3 271 1 181 3 313 2 147 3 371 1 
345 3 77 1 346 1 279 1 197 4 157 1 171 1 39 3 59 1 219 1 108 1 159 2 357 1 236 1 16 1 222 1 18 1 111 1 176 2 364 1 142 2 367 2 207 1 181 2 249 1 27 1 370 1 147 2 212 1 253 1 31 1 342 1 70 2 371 3 
0 1 346 1 125 1 279 1 197 2 157 1 59 1 60 1 86 1 108 2 200 1 159 1 267 1 176 3 309 1 163 1 46 1 142 1 367 1 291 1 181 1 210 1 251 1 147 1 68 1 212 1 31 1 70 1 
330 1 0 1 176 2 125 1 46 1 102 1 142 1 367 1 291 1 181 1 197 2 157 2 251 1 147 1 159 1 357 1 70 1 
267 1 0 1 176 2 309 1 46 1 142 1 246 1 367 1 291 1 181 1 197 2 60 1 147 1 108 2 159 1 357 1 70 1 
0 2 125 1 157 2 197 2 60 1 86 1 108 2 159 1 357 1 267 1 330 1 176 4 309 1 46 2 142 1 367 1 291 2 181 1 251 1 147 1 70 1 
330 1 0 1 176 2 125 1 46 1 102 1 142 1 207 1 367 1 291 1 181 1 197 2 157 2 251 1 147 1 159 1 70 1 
267 1 0 1 176 2 309 1 46 1 142 1 246 1 207 1 367 1 291 1 181 1 197 2 60 1 147 1 108 2 159 1 70 1 
0 1 125 1 157 2 197 2 60 1 86 1 108 2 159 1 267 1 176 4 309 1 46 2 142 1 367 1 207 1 291 2 181 1 251 1 147 1 70 1 
267 1 330 1 0 2 176 4 309 1 125 1 46 2 142 1 367 1 291 2 181 1 197 2 157 2 251 1 60 1 108 2 147 1 86 1 159 1 70 1 
345 1 346 1 54 1 157 1 197 2 199 1 171 1 39 1 219 1 108 1 41 1 159 1 236 1 16 1 222 1 111 1 162 1 176 2 142 1 367 1 338 1 181 1 27 1 313 1 147 1 212 1 70 1 371 1 
345 1 19 1 175 1 123 1 176 1 54 1 142 1 367 1 181 1 197 2 27 1 39 1 108 1 147 1 159 1 185 1 70 1 16 1 371 1 
0 2 125 1 157 2 197 2 60 1 86 1 108 2 159 1 267 1 330 1 176 4 309 1 46 2 142 1 367 1 291 2 181 1 210 1 251 1 147 1 70 1 
345 1 0 2 346 1 125 1 104 1 157 2 197 2 199 1 171 1 39 1 60 1 108 2 86 1 41 1 159 1 236 1 222 1 267 1 330 1 111 1 162 1 176 4 309 1 46 2 142 1 367 1 291 2 338 1 181 1 249 1 251 1 313 1 147 1 212 1 70 1 371 1 
0 1 346 1 125 1 279 1 5 1 197 2 157 2 59 1 108 1 86 1 200 1 159 1 267 1 330 1 176 3 309 1 163 1 46 1 142 1 367 1 291 1 181 1 210 1 251 1 147 1 212 1 31 1 70 1 
73 2 75 1 0 6 125 3 53 1 197 4 157 9 106 1 60 3 108 10 86 3 159 2 109 1 265 1 267 3 330 3 176 19 309 3 179 1 138 1 289 1 23 1 367 2 270 1 181 2 251 3 147 2 120 2 213 2 316 1 
73 2 320 1 1 1 0 1 75 2 125 2 350 1 197 4 157 9 325 1 106 1 60 1 108 8 14 1 86 2 159 2 265 2 267 1 176 17 20 1 309 1 138 2 23 1 367 2 270 1 181 2 251 2 147 2 120 2 316 2 
320 1 0 8 1 1 53 1 4 1 157 20 197 6 282 1 325 1 106 1 60 4 108 21 14 1 159 3 109 1 330 4 20 1 23 1 247 1 251 4 340 1 120 4 213 1 73 4 75 3 125 5 348 1 350 1 355 1 86 4 305 1 265 2 267 4 176 41 309 5 179 1 138 3 367 3 270 1 181 3 271 1 147 3 316 1 
73 3 320 1 1 1 75 3 0 5 125 4 53 1 350 1 197 6 157 15 325 1 106 1 60 3 14 1 108 15 86 4 159 3 109 1 265 2 267 3 330 2 20 1 176 30 309 3 179 1 138 3 23 1 367 3 247 1 270 1 181 3 251 4 147 3 120 4 213 1 316 1 
73 2 1 1 75 2 0 10 348 1 125 7 350 1 282 1 355 1 197 2 157 22 325 1 106 1 60 6 14 1 108 19 86 6 159 1 305 1 265 1 267 5 330 4 20 1 176 41 309 6 179 2 138 4 23 1 367 1 270 1 271 1 181 1 251 6 340 1 147 1 120 4 316 1 98 2 
306 1 347 1 290 1 237 1 128 1 15 1 311 1 
160 1 
216 1 347 1 290 1 237 1 15 1 311 1 
306 1 361 1 347 1 290 1 311 1 235 1 118 1 292 1 13 1 49 1 358 1 69 1 61 2 237 1 15 1 
306 1 361 1 347 1 290 1 311 1 235 1 118 1 292 1 13 1 49 1 358 1 69 1 61 2 237 1 15 1 
306 1 361 1 347 1 290 1 311 1 235 1 118 1 292 1 13 1 49 1 358 1 69 1 61 2 237 1 15 1 
79 1 
79 1 
168 1 
168 1 
146 1 211 1 
361 1 362 1 347 1 151 1 64 1 7 1 290 1 311 1 324 1 94 1 13 1 49 1 69 1 61 1 237 1 15 1 160 1 
79 1 
168 1 
345 2 77 2 346 2 259 1 197 2 157 1 171 1 39 2 219 1 108 1 159 1 236 1 16 1 222 1 111 1 176 2 269 1 142 1 367 1 337 1 181 1 117 1 210 1 370 1 147 1 212 2 31 2 51 1 70 1 121 1 371 2 
286 2 345 2 111 1 88 1 122 1 89 1 190 1 178 1 114 1 260 1 249 1 299 1 171 1 39 2 295 1 148 1 304 1 278 1 371 2 
286 2 345 1 111 1 88 1 122 1 190 1 178 1 114 1 260 1 299 1 39 1 171 1 158 1 148 1 304 1 278 1 371 1 
222 1 345 1 111 1 204 1 364 1 114 1 27 1 171 1 39 1 40 1 295 1 342 1 236 1 371 1 
286 2 345 1 111 1 88 1 122 1 89 1 190 1 178 1 114 1 260 1 299 1 39 1 171 1 295 1 148 1 304 1 278 1 371 1 
101 1 
345 1 166 1 346 3 54 1 279 2 197 2 39 1 171 1 199 1 59 2 108 1 159 1 41 1 236 1 16 1 222 1 162 1 111 1 176 1 163 2 142 1 367 1 338 1 181 1 27 1 313 1 147 1 212 3 294 1 31 2 70 1 371 1 
344 4 331 1 2 2 298 1 141 2 153 2 115 1 145 2 80 2 82 1 282 1 48 1 30 1 358 4 32 1 
58 1 331 1 2 1 358 1 141 1 187 1 99 1 
344 1 2 1 298 1 153 1 192 1 11 1 300 1 13 1 358 2 202 1 87 1 331 1 141 1 115 1 48 1 69 1 32 1 
188 1 2 3 3 1 153 3 280 1 9 1 105 1 11 2 199 1 12 1 13 2 236 1 202 1 111 2 331 4 333 2 115 2 27 1 251 1 30 1 69 2 32 2 344 6 345 1 214 1 33 1 78 1 256 1 125 1 298 2 35 1 80 3 171 1 39 1 86 1 358 3 222 4 267 1 309 1 145 3 48 2 371 1 52 1 
344 6 188 2 1 1 75 1 125 2 2 5 298 2 350 1 153 3 193 1 80 5 82 1 325 1 11 1 13 1 14 1 86 2 358 5 202 1 267 2 331 8 20 1 90 1 309 2 138 1 141 2 115 2 145 5 251 2 48 2 120 1 30 1 69 1 341 1 32 2 
188 1 348 1 298 1 115 1 339 1 13 1 48 1 69 1 305 1 132 1 32 1 
331 1 2 1 298 1 141 1 115 1 58 1 48 1 358 1 187 1 32 1 
344 10 188 2 267 2 331 5 90 1 256 1 125 2 309 2 2 5 153 5 145 5 80 5 251 2 86 2 358 5 
11 1 13 1 358 1 141 1 69 1 202 1 
345 4 2 2 298 2 261 1 82 2 38 1 11 4 171 1 39 4 13 3 42 1 236 1 202 2 222 1 111 1 331 2 364 1 245 1 180 2 115 2 144 1 27 2 48 1 315 1 30 2 69 3 342 1 32 2 371 4 
363 1 290 1 311 1 
314 1 146 1 135 1 290 1 311 1 
363 1 290 1 311 1 
363 1 290 1 311 1 
302 1 290 1 311 1 
302 1 290 1 311 1 
302 1 290 1 311 1 
290 1 311 1 
347 1 
320 1 330 1 176 8 0 3 309 1 125 1 348 1 367 2 181 2 271 1 282 1 157 4 197 4 355 1 60 2 340 1 108 4 147 2 159 2 305 1 
0 2 176 6 348 1 125 1 309 1 271 1 282 1 355 1 157 3 60 2 108 3 340 1 305 1 99 1 
267 1 330 1 0 2 176 4 309 1 125 1 367 1 181 1 197 2 157 2 251 1 60 1 108 2 147 1 86 1 159 1 201 1 
267 1 330 1 75 1 176 7 0 2 309 1 125 1 179 1 138 1 157 3 251 1 60 1 108 4 86 1 120 2 
320 2 0 9 348 2 125 3 56 1 282 1 355 1 157 11 197 4 60 5 86 2 108 12 159 2 305 2 267 2 330 4 176 23 309 3 179 1 138 2 367 2 271 1 181 2 273 1 251 2 340 1 147 2 120 2 98 1 
176 1 108 1 120 1 
157 1 176 1 138 1 
267 1 330 1 176 6 0 3 256 1 125 1 309 1 367 1 181 1 197 2 157 3 251 1 60 2 147 1 108 3 86 1 159 1 201 1 
75 1 0 2 1 1 125 2 350 1 197 2 157 6 325 1 106 1 60 1 108 6 14 1 86 2 159 1 267 2 330 1 176 12 20 1 309 2 138 1 367 1 181 1 251 2 147 1 120 1 
330 1 176 6 0 2 125 1 309 1 348 1 157 3 60 1 340 1 108 3 305 1 
320 1 330 1 0 2 176 3 348 1 367 1 271 1 181 1 157 1 197 2 355 1 273 1 60 1 108 2 147 1 159 1 305 1 
0 1 60 1 348 1 305 1 132 1 
330 1 176 2 0 1 125 1 367 1 181 1 197 2 157 2 106 1 251 1 147 1 159 1 
267 1 330 1 0 2 176 4 309 1 125 1 367 1 181 1 197 2 157 2 106 1 251 1 60 1 108 2 147 1 86 1 159 1 
320 1 330 1 176 3 0 2 348 1 53 1 367 3 181 3 197 6 157 1 273 1 106 1 60 1 108 2 147 3 159 3 305 1 
319 1 320 2 75 1 0 12 348 3 125 5 53 1 258 1 282 1 355 1 197 10 157 16 106 1 60 7 108 18 86 3 159 5 201 1 305 3 267 3 330 5 176 34 309 5 205 1 179 1 138 3 367 5 271 1 181 5 273 1 251 3 340 2 147 5 120 4 
75 1 0 2 125 1 348 1 282 1 197 2 157 4 355 1 106 1 60 2 108 4 14 1 159 1 305 1 176 8 309 1 138 1 367 1 181 1 271 1 147 1 340 1 120 1 
75 1 0 3 348 1 125 2 282 1 355 1 197 4 157 6 106 1 60 2 108 5 14 1 86 1 159 2 201 1 305 1 330 1 176 11 309 1 179 1 138 1 367 2 271 1 181 2 251 1 340 1 147 2 120 2 
320 1 1 1 75 1 0 4 348 1 125 3 350 1 282 1 355 1 197 6 157 9 325 1 106 1 60 3 108 10 14 1 86 2 159 3 201 1 305 1 267 2 330 1 176 19 20 1 309 3 138 1 367 3 271 1 181 3 251 2 340 1 147 3 120 1 
267 1 1 1 0 1 20 1 75 1 176 10 309 1 125 2 350 1 138 1 367 1 181 1 157 6 197 2 325 1 106 1 251 2 60 1 86 2 147 1 14 1 108 4 159 1 120 1 
75 1 0 2 125 1 348 1 282 1 197 2 157 4 355 1 106 1 60 2 108 4 14 1 159 1 305 1 176 8 309 1 138 1 367 1 181 1 271 1 147 1 340 1 120 1 
75 1 0 2 1 1 125 2 350 1 197 2 157 6 325 1 106 1 60 1 108 6 14 1 86 2 159 1 267 2 330 1 176 12 20 1 309 2 138 1 367 1 181 1 251 2 147 1 120 1 
320 1 1 1 75 1 0 1 125 2 350 1 197 6 157 6 325 1 106 1 60 1 108 5 14 1 86 2 159 3 201 1 267 1 176 11 20 1 309 1 138 1 367 3 181 3 251 2 147 3 120 1 
320 2 1 1 75 1 0 6 125 3 53 1 350 1 197 8 157 9 325 1 106 1 60 3 108 7 14 1 86 3 159 4 267 2 330 3 176 16 20 1 309 2 138 1 367 4 181 4 251 3 147 4 120 1 
330 3 176 7 0 6 309 1 348 3 125 1 271 2 355 1 157 3 60 3 108 4 340 1 305 3 
320 1 1 1 75 1 0 1 125 2 53 1 350 1 197 6 157 6 325 1 106 1 60 1 108 5 14 1 86 2 159 3 267 1 176 11 20 1 309 1 138 1 367 3 181 3 251 2 147 3 120 1 
17 1 346 1 54 1 212 1 31 1 24 1 81 1 
17 1 346 1 54 1 335 1 24 1 81 1 47 1 226 1 172 1 212 1 186 1 31 1 
222 1 345 1 27 1 111 1 171 1 39 1 364 1 342 1 236 1 99 1 371 1 
222 1 345 1 111 1 346 2 54 1 279 1 338 1 27 1 199 1 39 1 171 1 59 1 313 1 212 2 253 1 31 1 236 1 371 1 
345 1 74 1 346 2 150 1 54 1 279 1 154 1 171 1 39 1 199 2 59 2 236 2 222 3 19 1 111 1 288 1 180 1 338 1 313 1 212 2 253 1 31 2 371 1 
345 2 74 1 346 2 150 1 126 1 54 1 279 1 154 1 171 1 39 2 199 2 59 2 236 2 222 3 19 1 111 1 206 1 288 1 180 1 313 1 212 2 253 1 31 2 371 2 
149 1 345 1 74 1 189 1 346 1 3 1 279 1 35 1 154 1 83 1 11 1 171 1 39 1 199 1 59 1 85 1 13 2 358 1 236 1 222 4 19 1 111 1 333 1 163 1 180 1 141 1 212 1 294 1 69 2 31 1 318 1 371 1 
149 1 345 1 74 1 189 1 346 1 3 1 279 1 35 1 154 1 11 1 171 1 12 1 39 1 199 1 59 1 13 2 358 1 236 1 222 4 19 1 111 1 333 1 163 1 180 1 141 1 212 1 294 1 69 2 31 1 318 1 371 1 
345 1 111 1 171 1 39 1 124 1 371 1 
222 1 18 1 345 2 240 1 111 2 352 1 105 1 249 1 27 1 39 2 199 1 171 1 228 1 236 1 371 2 
345 1 0 2 346 2 125 1 348 1 54 2 279 1 104 1 282 1 157 3 355 1 197 4 199 1 171 1 39 1 59 1 60 2 108 3 159 2 41 1 305 1 236 1 238 1 222 1 111 1 162 1 176 6 309 1 46 1 142 2 367 2 291 1 271 1 181 2 338 1 249 1 117 1 210 1 313 1 340 1 147 2 212 2 253 1 31 1 70 2 371 1 
345 1 188 1 214 1 348 1 2 1 298 2 151 1 3 1 35 1 280 1 9 1 11 2 58 1 39 1 12 1 13 3 358 1 305 1 202 1 132 1 222 2 333 1 141 1 115 2 144 1 27 1 48 2 69 3 187 1 32 2 371 1 
222 2 345 2 111 2 124 1 78 1 3 1 105 1 249 1 39 2 199 1 171 1 236 1 371 2 
222 1 345 4 111 1 364 1 206 1 37 1 249 1 27 1 39 4 171 1 342 1 236 1 371 4 
222 1 345 2 240 1 307 1 111 2 242 1 180 1 39 2 199 1 171 1 228 1 236 1 317 1 371 2 
286 1 345 1 27 1 299 1 111 1 171 1 39 1 88 1 122 1 371 1 
222 1 345 2 111 1 178 1 249 1 39 2 171 1 51 1 236 1 121 1 371 2 
222 3 345 4 111 2 230 1 364 1 244 1 180 1 37 1 249 1 27 1 39 5 171 2 342 1 51 1 236 2 371 5 
222 3 345 4 111 2 230 1 364 1 180 1 127 1 37 1 249 1 27 1 39 5 171 2 342 1 51 1 236 2 371 5 
222 1 345 1 111 1 346 2 126 1 54 1 279 1 27 1 199 1 39 1 171 1 59 1 313 1 212 2 253 1 31 1 236 1 371 1 
222 1 345 1 240 1 111 2 180 1 352 1 105 1 39 1 199 1 171 1 228 1 236 1 371 1 
116 1 57 1 346 1 212 1 269 1 259 1 31 1 110 1 337 1 
57 1 169 1 143 1 
164 1 116 1 57 1 54 1 110 1 
149 1 189 1 346 1 169 1 150 1 151 1 279 1 35 1 6 1 57 1 59 1 13 2 358 1 110 1 19 2 163 1 288 1 92 1 141 1 143 1 164 1 116 1 95 1 212 1 294 1 69 2 31 1 318 1 
224 3 217 1 209 1 233 3 272 1 25 1 312 1 67 1 29 1 184 1 303 1 
198 1 308 1 67 1 152 1 
67 1 217 1 
272 1 67 1 217 1 99 1 
272 1 67 1 224 1 184 1 217 1 209 1 233 1 
183 1 194 1 233 1 
243 1 224 3 103 1 217 1 209 1 233 3 272 1 25 2 312 1 67 1 184 1 343 1 
272 1 229 1 67 1 224 2 29 1 184 1 217 1 209 1 233 2 
286 1 224 1 190 1 287 1 152 1 209 1 233 1 312 1 299 1 67 1 184 1 
312 1 67 1 224 1 184 1 217 1 209 1 233 1 
272 1 312 1 224 1 184 1 217 2 209 1 233 1 
224 1 349 1 155 1 209 1 233 1 312 1 184 1 
308 1 224 3 152 1 217 1 209 1 233 3 272 1 312 1 67 2 184 1 29 2 303 1 43 1 
286 2 88 1 224 2 190 1 351 1 217 1 209 1 233 2 272 1 312 1 299 1 67 1 184 1 29 1 278 1 
229 1 308 1 224 4 152 1 217 1 209 2 233 4 272 1 312 1 284 1 67 2 184 2 29 2 
272 1 312 1 67 1 224 1 184 1 217 1 209 1 233 1 
243 1 308 1 224 4 152 1 217 2 209 1 233 4 272 2 25 1 198 1 67 3 29 2 184 1 343 1 
76 1 112 1 224 2 93 1 217 1 209 1 233 2 272 1 312 1 67 1 184 1 29 1 
243 2 224 3 217 1 209 1 233 3 272 1 25 2 312 1 67 1 184 1 203 1 343 1 
67 2 165 1 221 1 262 2 
312 1 224 1 184 1 195 1 209 1 233 1 
272 1 312 1 67 1 224 2 29 1 184 1 303 1 217 1 209 1 233 2 
113 1 
272 1 312 1 67 1 224 1 184 1 217 1 209 1 233 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (134,222,342) (134,222,342) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (134,222,342) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (134,222,342) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (106,331) (106,331) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (134,222,342) (134,222,342) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 2 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 191 86 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 191 219 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 191 219 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 191 219 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 191 219 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 348 110 85 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 2 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 933 | 7 -> 8
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1397 | 1 -> 2
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1806 | = null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay; | RETURN | 495 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9231 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z | OPERATOR | 1327 | && -> ||
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7967 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 2 116 2 314 1 264 9 177 1 220 2 269 2 245 1 299 4 273 1 372 1 128 1 152 1 277 1 303 1 373 2 374 1 101 1 279 1 103 9 39 5 307 2 161 6 205 2 207 1 26 1 185 3 142 1 
188 2 116 2 314 1 264 9 177 1 220 2 269 2 245 1 299 4 273 1 372 1 128 1 152 1 277 1 303 1 374 1 101 1 373 2 279 1 103 9 39 5 307 2 161 6 205 2 207 1 26 1 185 3 142 1 
188 2 116 2 314 1 264 10 177 1 220 2 269 2 245 1 299 5 273 1 372 1 128 1 152 1 277 1 303 1 374 1 101 1 373 2 279 1 103 10 39 6 307 2 161 7 205 2 207 1 26 1 185 4 142 1 
188 2 116 2 314 1 264 7 177 1 220 2 269 2 245 1 299 3 273 1 372 1 128 1 152 1 277 1 303 1 374 1 101 1 373 1 279 1 103 7 39 4 307 2 161 4 205 2 207 1 185 2 142 1 
373 2 188 1 103 4 39 3 307 1 161 3 314 1 205 1 264 4 177 1 220 1 269 1 26 1 299 2 273 1 185 1 372 1 142 1 
279 1 188 1 103 2 350 1 116 1 39 1 307 1 264 2 177 1 220 1 269 1 80 1 273 1 152 1 359 1 142 1 
303 1 103 3 116 1 39 2 307 2 161 1 264 3 177 1 220 2 299 1 273 1 185 1 142 1 
303 1 373 2 101 1 262 1 188 1 103 9 116 1 39 5 307 2 161 7 205 1 314 1 264 9 177 1 220 2 269 1 207 1 26 1 299 4 273 1 372 1 259 1 185 3 142 1 
303 1 373 2 101 1 262 1 188 1 103 9 116 1 39 5 307 2 161 7 205 1 314 1 264 9 177 1 220 2 269 1 207 1 26 1 299 4 273 1 372 1 259 1 185 3 142 1 
2 1 44 1 125 1 
25 2 125 1 94 1 
0 2 119 2 18 1 365 2 78 2 21 1 197 2 137 2 
0 2 144 1 310 1 29 1 31 1 99 1 218 1 315 1 118 2 119 2 364 1 54 1 120 1 149 1 124 2 365 3 78 2 126 1 197 3 18 1 320 2 225 1 132 1 377 1 322 1 83 1 21 1 351 1 41 1 137 2 138 1 139 1 165 2 357 1 358 1 213 2 46 1 
0 1 119 1 18 1 365 1 78 1 194 1 174 1 197 1 234 1 137 1 
239 1 4 1 251 1 117 1 174 1 20 1 338 1 78 1 365 1 230 1 284 1 44 1 125 1 197 1 
0 1 4 1 251 1 117 2 174 1 20 1 338 1 137 1 119 1 78 1 365 1 284 2 44 1 125 1 197 1 
236 1 284 1 117 1 93 1 294 1 
97 1 284 2 44 1 117 2 93 1 125 1 316 1 294 1 
284 1 117 1 294 1 
0 1 18 1 117 1 174 1 137 1 119 1 356 1 78 1 365 1 194 1 284 1 93 1 197 1 234 1 
125 1 
284 2 44 1 117 2 93 1 125 1 316 1 335 1 294 1 
5 1 250 1 280 2 117 5 294 2 9 1 328 1 298 2 76 1 284 5 44 1 93 2 271 1 125 1 316 1 27 2 378 1 198 1 96 1 
2 1 21 1 
0 1 21 2 137 1 119 1 184 1 78 2 365 2 371 1 197 2 
347 1 72 1 172 1 
320 1 310 1 322 1 83 1 21 1 41 1 315 1 118 1 364 1 54 1 120 1 138 1 365 1 213 1 197 1 68 1 
0 1 119 3 365 3 78 3 369 1 21 1 197 3 137 3 
119 1 365 1 78 1 194 1 174 1 197 1 137 1 
0 1 119 1 184 1 365 1 78 1 174 1 371 1 197 1 137 1 
0 2 289 1 4 1 310 1 117 1 99 1 174 1 218 1 363 1 338 1 315 1 118 1 364 1 119 3 54 1 120 1 149 1 124 1 365 4 78 3 369 1 371 1 197 4 224 1 18 1 320 1 225 1 132 1 377 1 322 1 251 1 83 1 21 1 351 1 20 1 41 1 137 3 138 1 139 1 165 2 357 1 284 1 358 1 213 1 
119 1 113 1 365 2 78 2 230 1 369 1 21 1 197 2 137 1 
0 1 224 1 289 1 4 1 251 1 117 1 20 1 174 1 338 1 137 3 119 3 78 3 365 3 284 1 369 2 368 1 125 1 371 1 197 3 
0 1 347 1 119 2 72 1 365 2 78 2 369 1 371 1 197 2 137 2 
320 1 310 1 322 1 83 1 21 1 41 1 315 1 118 1 364 1 120 1 138 1 54 1 365 1 213 1 197 1 
182 1 320 1 3 1 310 1 322 1 83 1 174 1 21 1 51 1 41 1 315 1 118 1 120 1 54 1 365 1 213 1 197 1 
286 1 72 2 73 1 172 2 149 1 124 4 268 1 82 1 153 1 16 1 347 2 225 2 375 1 132 1 377 1 351 1 165 2 357 1 208 1 358 1 109 1 211 1 46 2 380 1 
119 1 4 1 365 1 78 1 67 1 174 1 197 1 137 1 
224 1 347 1 320 1 310 1 322 1 83 1 41 1 315 1 137 1 118 1 364 1 119 1 54 1 120 1 138 1 78 1 365 2 369 1 213 1 197 2 
0 1 224 1 113 1 21 1 313 1 137 4 190 1 119 4 78 5 365 5 230 1 369 2 371 1 197 5 
119 2 365 2 78 2 194 1 67 1 174 1 197 2 137 2 
168 1 210 1 
168 1 210 1 
212 1 
212 1 
212 1 
168 1 210 1 233 1 
168 1 210 1 344 1 
168 1 321 1 210 1 308 1 212 1 
168 1 210 1 233 1 
168 1 210 1 233 1 
168 1 1 1 210 1 
168 1 1 1 210 1 
168 1 1 1 210 1 
0 1 168 2 287 2 74 2 117 2 173 1 174 1 147 2 295 1 148 1 119 1 340 1 365 1 78 1 194 1 244 1 125 1 300 1 197 1 18 1 62 2 255 1 137 1 353 1 355 2 356 1 284 2 210 2 308 1 234 1 167 1 
168 1 287 1 74 1 117 1 311 1 147 1 146 1 295 1 119 2 121 1 123 1 78 2 365 2 197 2 181 1 344 1 306 1 21 1 62 1 137 2 355 1 91 1 284 1 210 1 
188 1 269 1 205 1 
188 1 269 1 80 1 
267 1 361 1 269 3 80 1 205 2 256 1 
361 1 269 2 341 1 80 1 205 1 256 1 
361 1 269 2 80 1 205 1 256 2 
286 1 112 2 5 1 73 1 311 1 117 5 30 1 294 1 337 1 298 1 339 1 121 1 76 2 268 1 366 2 125 2 316 1 181 1 56 1 154 1 130 1 280 1 229 1 284 5 25 3 93 4 44 1 27 1 94 1 378 3 379 2 380 1 
0 1 236 1 117 2 174 1 294 1 119 1 365 1 78 1 194 1 125 1 197 1 223 1 17 1 18 1 282 1 137 1 356 1 284 2 93 2 44 1 234 1 
286 1 112 2 73 1 117 3 337 1 9 1 298 1 339 1 121 1 268 1 76 2 366 2 125 3 56 1 130 1 280 1 229 1 284 3 44 1 93 2 25 4 27 1 94 2 378 3 379 1 380 1 
286 2 288 1 112 4 73 2 117 4 337 1 9 1 298 1 339 1 121 2 268 2 76 4 366 4 125 5 56 1 130 1 37 1 280 1 257 1 229 2 284 4 44 1 25 8 93 3 27 1 94 4 378 5 379 2 380 2 
54 1 2 1 325 1 
54 1 360 1 
202 1 
54 1 322 1 
54 3 171 1 310 1 322 1 343 1 325 2 
54 1 310 1 322 1 
54 1 203 1 
362 1 73 2 115 1 241 1 124 9 276 1 16 3 225 4 135 1 38 1 40 1 23 1 327 1 209 1 232 1 211 2 46 5 380 2 
362 1 73 2 115 2 241 1 124 9 276 1 16 4 225 4 135 1 38 1 40 1 23 1 327 1 209 1 232 1 211 2 46 5 380 2 
237 1 362 1 73 2 115 1 241 1 124 9 276 1 16 3 225 4 135 1 38 1 40 1 23 1 327 1 209 1 232 1 211 2 46 5 380 2 
286 3 362 2 73 5 333 1 7 1 115 6 241 1 75 1 149 1 124 33 268 3 77 1 276 1 302 1 16 11 248 1 225 16 132 1 376 4 135 2 38 1 351 1 40 2 23 2 327 1 165 2 63 3 229 3 209 1 329 1 358 1 232 2 211 5 46 17 380 5 
362 1 73 2 115 2 241 1 189 1 178 1 149 2 124 11 77 1 16 5 225 5 132 2 135 1 38 1 351 2 40 1 23 1 327 1 165 4 209 1 358 2 232 1 211 3 46 6 380 2 
320 1 103 1 116 1 134 1 307 1 264 1 118 1 34 1 220 1 222 1 213 1 196 1 142 1 
320 1 103 2 305 1 58 1 116 1 307 1 161 1 264 2 118 1 34 1 220 1 222 1 213 1 285 1 
34 1 118 1 264 1 320 1 103 1 58 1 342 1 116 1 213 1 285 1 161 1 
320 1 103 1 305 1 116 2 307 1 106 1 264 1 118 1 34 2 120 1 220 1 213 1 15 1 331 1 
320 1 103 1 58 1 116 1 134 1 307 1 264 1 118 1 34 1 220 1 222 1 213 1 142 1 
215 1 
332 2 5 1 239 1 4 1 6 4 294 6 242 1 338 1 339 1 298 1 54 1 55 1 197 1 301 2 349 1 251 1 20 1 162 2 25 2 27 1 213 2 216 1 71 1 111 1 263 2 169 1 117 5 174 1 315 1 118 2 176 1 120 2 76 2 179 1 180 1 78 1 365 1 367 1 125 2 316 3 127 1 274 1 320 2 280 1 133 2 322 1 84 2 41 1 88 2 284 5 230 1 44 1 94 2 378 2 235 1 
111 1 332 1 239 1 4 1 6 2 117 3 174 1 335 1 294 2 338 1 365 1 78 1 367 1 127 1 316 1 274 1 197 1 251 1 20 1 230 1 284 3 235 1 
111 1 239 1 4 1 6 3 117 3 174 1 335 1 294 1 338 1 365 1 78 1 367 1 125 1 127 1 316 1 274 1 197 1 251 1 84 1 20 1 230 1 284 3 44 1 235 1 
111 1 332 1 239 1 4 1 6 3 117 3 174 1 335 1 294 2 338 1 365 1 78 1 367 1 125 1 316 1 127 1 274 1 197 1 301 1 251 1 84 1 20 1 230 1 284 3 44 1 235 1 
332 4 4 1 239 1 238 1 240 1 5 1 6 6 335 1 294 7 338 1 52 1 298 1 197 1 301 4 251 1 20 1 162 2 27 1 69 1 111 1 263 2 117 5 174 1 176 1 76 1 365 1 78 1 179 1 367 1 125 5 316 3 127 1 274 1 280 1 133 2 84 4 323 1 88 2 284 5 230 1 44 5 378 1 94 2 235 1 
332 2 4 1 5 1 239 1 6 4 294 4 338 1 298 1 197 1 301 2 251 1 20 1 162 2 25 2 27 1 216 1 111 1 263 2 117 4 174 1 176 1 76 1 365 1 78 1 179 1 367 1 125 2 127 1 316 2 274 1 280 1 133 2 84 2 88 2 230 1 284 4 44 1 378 1 94 2 235 1 
111 1 332 2 263 2 239 1 4 1 240 1 5 1 6 4 117 4 174 1 294 4 338 1 52 1 176 1 298 1 76 1 179 1 365 1 78 1 367 1 125 1 316 2 127 1 274 1 197 1 301 2 280 1 133 2 251 1 84 2 323 1 20 1 162 2 88 2 230 1 284 4 44 1 27 1 94 2 378 1 235 1 
111 1 332 2 263 2 239 1 4 1 240 1 5 1 6 4 117 4 174 1 294 4 338 1 52 1 176 1 298 1 76 1 179 1 365 1 78 1 367 1 125 1 316 2 127 1 274 1 197 1 301 2 280 1 133 2 251 1 84 2 323 1 20 1 162 2 88 2 230 1 284 4 44 1 27 1 94 2 378 1 235 1 
111 1 332 2 239 1 4 1 5 1 6 4 117 4 174 1 294 4 338 1 298 1 76 1 179 1 365 1 78 1 367 1 125 1 272 1 316 2 127 1 151 1 274 1 197 1 301 2 345 2 280 1 57 1 251 1 84 2 323 1 20 1 162 2 88 2 65 2 230 1 284 4 44 1 25 2 27 1 378 1 235 1 
111 1 332 3 263 2 5 1 239 1 4 1 238 1 240 1 6 5 117 4 174 1 294 5 52 1 338 1 176 1 298 1 76 1 179 1 365 1 78 1 367 1 125 1 316 2 127 1 274 1 197 1 301 3 280 1 133 2 251 1 84 3 323 1 20 1 162 2 88 2 230 1 284 4 44 1 27 1 94 2 378 1 235 1 
111 1 332 3 263 2 5 1 239 1 4 1 238 1 240 1 6 5 117 4 174 1 294 5 52 1 338 1 176 1 298 1 76 1 179 1 365 1 78 1 367 1 125 1 316 2 127 1 274 1 197 1 301 3 280 1 133 2 251 1 84 3 323 1 20 1 162 2 88 2 230 1 284 4 44 1 27 1 94 2 378 1 235 1 
111 1 332 2 239 1 5 1 4 1 6 4 117 4 174 1 294 4 338 1 298 1 76 1 179 1 78 1 365 1 367 1 125 1 316 2 127 1 274 1 151 1 197 1 301 2 345 2 280 1 251 1 84 2 20 1 162 2 88 2 65 2 284 4 230 1 44 1 25 2 27 1 378 1 216 1 235 1 
2 1 149 1 165 2 357 1 132 1 377 1 208 1 209 1 358 1 241 1 351 1 
286 1 72 4 73 3 333 1 172 13 115 1 7 2 31 1 192 1 193 1 149 2 124 17 268 3 16 2 319 1 347 13 225 7 376 4 132 2 377 1 253 1 21 1 351 2 139 1 165 4 63 3 229 3 357 2 358 2 211 1 260 1 46 10 380 1 
145 1 72 1 310 1 31 1 336 1 315 1 118 1 364 1 192 1 119 1 54 1 120 1 149 1 124 2 365 2 78 1 369 1 197 2 224 1 320 1 225 1 183 1 322 1 132 1 377 1 83 1 21 1 351 1 41 1 137 1 138 1 165 2 139 1 357 1 358 1 213 1 68 1 46 1 
3 1 286 2 241 1 99 2 296 1 192 1 54 2 149 3 197 3 199 1 16 5 347 6 21 1 351 3 160 2 165 6 357 3 64 2 209 1 358 3 213 1 211 4 72 6 362 1 310 2 73 4 172 6 115 1 31 1 174 1 315 2 118 1 119 1 364 2 120 1 124 22 268 2 78 1 365 3 369 1 36 2 224 1 320 1 225 11 377 3 132 3 322 2 83 2 135 1 226 2 38 1 41 2 137 1 327 1 138 2 139 1 229 2 46 11 380 4 
144 2 169 1 31 1 8 1 315 2 118 7 297 1 119 1 54 3 120 2 149 2 124 2 365 1 78 1 180 1 369 1 196 1 197 1 275 1 320 8 225 1 58 1 132 2 377 2 322 2 351 2 41 2 137 1 354 1 165 4 139 1 228 1 90 1 357 2 208 1 92 1 358 2 213 8 46 1 
0 1 119 1 365 1 78 1 201 1 371 1 197 1 137 1 
347 1 72 1 73 1 172 1 377 1 132 1 115 1 351 1 165 2 149 1 124 2 268 1 357 1 208 1 358 1 153 1 46 2 16 1 
347 1 286 1 72 1 225 2 172 1 377 1 132 1 351 1 165 2 149 1 124 2 357 1 208 1 358 1 211 1 109 1 16 1 380 1 
286 1 72 2 73 1 172 2 115 1 149 1 268 1 124 4 16 2 347 2 225 2 132 1 377 1 351 1 165 2 229 1 357 1 208 1 358 1 211 1 46 2 380 1 
347 1 72 1 73 1 172 1 377 1 132 1 115 1 351 1 165 2 149 1 124 2 268 1 357 1 92 1 358 1 153 1 46 2 16 1 
347 1 286 1 72 1 225 2 172 1 377 1 132 1 351 1 165 2 149 1 124 2 357 1 92 1 358 1 211 1 109 1 16 1 380 1 
286 1 72 2 73 1 172 2 115 1 149 1 268 1 124 4 16 2 347 2 225 2 132 1 377 1 351 1 165 2 229 1 357 1 92 1 358 1 211 1 46 2 380 1 
347 2 286 1 72 2 225 2 73 1 172 2 377 1 132 1 115 1 351 1 165 2 149 1 268 1 124 4 229 1 357 1 358 1 211 1 46 2 380 1 16 2 
310 1 31 1 99 1 315 1 118 1 364 1 120 1 54 1 149 1 124 2 365 1 197 1 320 1 225 1 322 1 377 1 132 1 83 1 21 1 351 1 41 1 138 1 165 2 139 1 357 1 358 1 213 1 46 1 
3 1 310 1 174 1 51 1 315 1 118 1 120 1 54 1 149 1 124 1 365 1 197 1 182 1 320 1 225 1 322 1 377 1 132 1 83 1 21 1 351 1 41 1 165 2 139 1 357 1 140 1 358 1 213 1 
286 1 72 2 73 1 172 2 115 1 192 1 149 1 268 1 124 4 16 2 347 2 225 2 132 1 377 1 351 1 165 2 229 1 357 1 358 1 211 1 46 2 380 1 
286 1 72 2 73 1 310 1 172 2 115 1 99 1 315 1 118 1 364 1 54 1 149 1 124 4 268 1 365 1 196 1 197 1 16 2 347 2 320 1 225 2 322 1 377 1 132 1 83 1 226 1 351 1 41 1 138 1 165 2 229 1 357 1 358 1 211 1 213 1 46 2 380 1 
0 1 286 1 72 1 73 1 172 1 115 1 119 1 192 1 266 1 149 1 268 1 124 3 78 1 365 1 371 1 197 1 16 1 347 1 225 1 132 1 377 1 351 1 137 1 165 2 229 1 357 1 358 1 46 2 380 1 
286 1 73 1 333 1 114 1 7 1 115 1 50 1 191 1 265 1 178 1 149 2 124 9 268 1 16 2 346 1 225 5 376 2 132 2 351 2 352 1 159 1 86 1 165 4 63 1 229 1 358 2 211 1 46 4 380 1 
286 1 73 2 114 1 333 2 115 1 50 2 191 1 219 1 265 2 178 1 149 3 77 2 124 20 268 2 129 1 16 2 346 1 348 1 225 9 132 3 376 2 85 1 351 3 159 3 204 1 165 6 63 2 229 2 358 3 211 1 186 1 110 1 46 11 380 1 
286 1 73 1 333 1 114 1 7 1 115 1 50 1 191 1 219 1 265 1 178 1 149 2 124 9 268 1 16 2 346 1 225 5 376 2 132 2 351 2 352 1 159 1 165 4 63 1 229 1 358 2 211 1 46 4 380 1 
286 1 73 1 333 1 114 1 7 1 115 1 50 1 191 1 219 1 265 1 178 1 149 2 124 9 268 1 16 2 346 1 225 5 376 2 132 2 351 2 352 1 159 1 165 4 63 1 229 1 358 2 211 1 46 4 380 1 
286 6 73 6 333 2 114 1 7 2 115 6 241 1 50 1 191 1 219 1 265 1 178 1 193 2 149 2 77 1 124 41 268 6 129 1 16 11 346 1 348 1 225 20 376 4 132 2 85 1 351 2 159 3 204 1 165 4 63 4 229 6 209 1 358 2 211 5 186 1 110 1 46 21 380 6 
168 1 74 1 62 1 147 1 255 1 148 1 206 1 340 1 355 1 210 1 308 1 
306 1 344 1 
168 1 355 1 74 1 210 1 136 1 62 1 147 1 70 1 32 1 
0 1 168 1 287 2 74 1 117 1 173 1 174 1 147 1 295 1 148 1 119 1 340 1 365 1 78 1 194 1 244 1 125 1 300 1 197 1 18 1 62 1 255 1 137 1 353 1 355 1 356 1 284 1 210 1 308 1 234 1 167 1 
0 1 168 1 287 2 74 1 117 1 173 1 174 1 147 1 295 1 148 1 119 1 340 1 365 1 78 1 194 1 244 1 125 1 300 1 197 1 18 1 62 1 255 1 137 1 353 1 355 1 356 1 284 1 210 1 308 1 234 1 167 1 
0 1 168 1 287 2 74 1 117 1 173 1 174 1 147 1 295 1 148 1 119 1 340 1 365 1 78 1 194 1 244 1 125 1 300 1 197 1 18 1 62 1 255 1 137 1 353 1 355 1 356 1 284 1 210 1 308 1 234 1 167 1 
321 1 233 1 249 1 
321 1 233 1 249 1 
1 1 214 1 
321 1 1 1 214 1 
123 1 146 1 
168 1 287 1 74 1 117 1 311 1 173 1 147 1 146 1 119 2 121 1 123 1 365 2 78 2 197 2 181 1 344 1 306 1 21 1 62 1 137 2 89 1 355 1 91 1 284 1 93 1 210 1 167 1 
233 1 249 1 
321 1 1 1 214 1 
144 2 290 1 31 1 315 1 175 1 118 2 192 1 54 1 149 1 124 2 365 2 78 2 81 1 197 2 275 1 320 2 225 1 322 1 377 1 132 1 281 1 351 1 41 1 165 2 139 1 228 1 357 1 358 1 213 2 330 1 46 1 
320 2 188 1 170 1 292 1 58 1 60 1 98 1 61 1 41 1 205 1 315 1 118 2 11 1 267 1 269 2 80 1 213 2 196 1 187 1 
320 1 188 1 170 1 58 1 60 1 98 1 61 1 41 1 205 1 315 1 118 1 11 1 267 1 269 2 13 1 80 1 213 1 
118 1 320 1 102 1 120 1 292 1 293 1 60 1 213 1 
320 1 188 1 170 1 292 1 58 1 60 1 98 1 61 1 41 1 205 1 315 1 118 1 11 1 267 1 269 2 80 1 213 1 187 1 
158 1 
328 1 2 1 76 1 250 1 44 1 125 1 378 1 
263 1 5 1 117 1 294 1 176 1 298 1 76 1 125 2 316 1 280 1 133 1 284 1 25 1 44 1 27 1 94 1 378 1 
286 2 5 4 49 2 294 5 100 1 339 2 54 10 298 4 55 1 196 1 155 2 304 1 250 1 254 2 20 2 203 2 24 2 66 1 25 12 27 4 213 3 360 3 28 1 309 2 171 1 112 6 310 3 73 2 117 5 315 4 118 3 120 1 268 2 76 8 35 1 366 6 221 2 125 8 316 3 36 2 317 2 320 3 280 4 322 3 41 3 325 2 87 2 328 1 229 2 284 5 44 2 378 9 94 6 380 2 
286 3 112 7 5 2 73 3 333 1 117 1 7 1 49 3 294 1 298 2 193 1 76 6 268 3 366 7 125 6 316 1 129 1 348 1 280 2 376 2 85 1 22 1 204 1 63 2 229 3 284 1 44 1 25 12 27 2 378 10 94 7 110 1 380 3 
0 1 309 1 5 1 362 1 73 2 49 2 117 1 174 1 52 1 119 1 298 1 76 2 365 1 78 1 194 1 197 1 18 1 280 1 135 1 38 1 137 1 327 1 356 1 284 1 27 1 378 2 234 1 380 1 
5 1 250 1 280 1 328 1 298 1 76 1 44 1 125 1 27 1 378 1 
309 1 286 2 112 5 73 2 49 2 268 2 76 5 229 2 366 5 25 10 125 5 36 1 94 5 378 5 380 2 
284 1 44 1 117 1 125 1 316 1 294 1 
169 1 5 1 117 3 294 4 242 1 315 1 9 1 118 4 54 1 298 2 120 2 339 2 76 2 35 1 180 1 55 2 316 2 320 4 304 2 280 2 19 1 349 1 59 1 322 1 41 1 284 3 27 2 213 4 378 2 
0 2 310 1 99 1 218 1 315 1 118 1 119 2 364 1 120 1 54 1 149 1 124 1 365 3 78 2 197 3 320 1 18 1 225 1 132 1 322 1 377 1 83 1 21 1 351 1 41 1 137 2 138 1 139 1 165 2 357 1 358 1 213 1 
112 2 5 1 280 1 40 1 298 1 339 1 76 2 366 2 25 4 44 2 125 4 27 1 55 1 94 2 378 1 
74 1 246 1 147 1 
200 1 156 1 74 1 146 1 147 1 
74 1 246 1 147 1 
74 1 246 1 147 1 
258 1 74 1 147 1 
258 1 74 1 147 1 
258 1 74 1 147 1 
74 1 147 1 
168 1 210 1 
362 1 73 2 115 2 241 1 149 2 77 1 124 10 16 4 225 5 132 2 135 1 351 2 38 1 327 1 165 4 209 1 358 2 211 2 46 5 380 2 
2 1 209 1 241 1 
286 1 225 2 73 1 132 1 115 1 351 1 324 1 165 2 149 1 268 1 124 4 229 1 358 1 211 1 46 2 380 1 16 2 
286 1 225 4 73 1 333 1 376 2 7 1 115 1 124 7 268 1 63 1 229 1 211 1 46 3 380 1 16 2 
286 2 362 1 73 4 7 1 115 2 241 1 193 1 149 1 268 2 124 20 77 1 16 5 225 10 376 2 132 1 135 1 38 1 351 1 327 1 165 2 229 2 63 2 209 1 358 1 211 3 260 1 46 10 380 4 
124 1 225 1 376 1 
124 1 63 1 46 1 
286 1 225 3 73 1 132 1 115 1 351 1 324 1 149 1 165 2 124 6 268 1 229 1 358 1 211 2 36 1 46 3 16 3 380 1 
286 2 73 2 333 1 115 1 178 1 149 1 124 12 268 2 129 1 16 2 225 6 348 1 376 1 132 1 85 1 351 1 204 1 165 2 63 1 229 2 358 1 211 1 110 1 46 6 380 2 
225 3 362 1 73 1 115 1 135 1 38 1 124 6 211 1 46 3 380 1 16 2 
362 1 225 2 132 1 115 1 135 1 241 1 351 1 327 1 165 2 149 1 124 3 77 1 195 1 209 1 358 1 211 1 46 1 16 2 
362 2 225 5 73 2 132 1 115 2 135 2 351 1 38 1 327 1 178 1 149 1 165 2 124 10 358 1 211 3 46 5 16 5 380 2 
178 1 149 1 165 2 124 2 268 1 73 1 132 1 115 1 358 1 351 1 46 2 16 1 
286 1 225 2 73 1 132 1 115 1 351 1 178 1 165 2 149 1 268 1 124 4 229 1 358 1 211 1 46 2 380 1 16 2 
225 2 362 1 132 3 115 1 135 1 351 3 352 1 178 1 165 6 149 3 77 1 124 3 195 1 358 3 211 1 46 1 16 2 
286 2 362 1 73 5 333 1 7 1 115 3 241 1 178 1 149 4 77 1 124 27 268 3 248 1 302 1 16 6 225 13 376 4 132 4 135 1 38 1 351 4 352 1 324 1 327 1 165 8 63 3 229 3 209 1 329 1 358 4 211 3 46 14 380 4 
362 1 73 3 333 1 115 1 7 1 241 1 178 1 149 1 124 13 268 1 16 3 225 6 376 2 132 1 85 1 135 1 38 1 351 1 327 1 165 2 63 1 229 1 209 1 358 1 211 2 46 7 380 2 
362 1 73 3 333 1 7 1 115 2 241 1 178 1 149 2 124 13 268 1 16 4 225 6 376 2 132 2 85 1 135 1 38 1 351 2 324 1 327 1 165 4 63 1 229 1 209 1 358 2 211 2 46 7 380 2 
286 2 362 1 73 4 333 1 115 2 241 1 178 1 149 3 124 21 268 2 77 1 129 1 16 5 348 1 225 11 376 1 132 3 85 1 135 1 38 1 351 3 324 1 204 1 327 1 165 6 63 1 229 2 209 1 358 3 211 3 110 1 46 10 380 4 
286 1 362 1 73 4 333 1 115 3 241 1 178 1 149 3 77 1 124 19 268 2 129 1 16 6 225 8 348 1 376 1 132 3 85 1 135 1 38 1 351 3 324 1 204 1 327 1 165 6 63 1 229 2 209 1 358 3 211 3 110 1 46 11 380 3 
362 1 73 3 333 1 115 1 7 1 241 1 178 1 149 1 124 13 268 1 16 3 225 6 376 2 132 1 85 1 135 1 38 1 351 1 327 1 165 2 63 1 229 1 209 1 358 1 211 2 46 7 380 2 
286 2 73 2 333 1 115 1 178 1 149 1 124 12 268 2 129 1 16 2 225 6 348 1 376 1 132 1 85 1 351 1 204 1 165 2 63 1 229 2 358 1 211 1 110 1 46 6 380 2 
286 1 362 1 73 4 333 1 115 2 241 1 178 1 149 4 124 20 268 2 77 2 129 1 16 5 348 1 225 9 376 1 132 4 85 1 135 1 38 1 351 4 324 1 204 1 327 1 165 8 63 1 229 2 209 1 358 4 211 3 110 1 46 11 380 3 
286 2 73 3 333 1 115 3 178 1 149 4 124 16 268 3 77 2 129 1 16 6 348 1 225 7 376 1 132 4 85 1 351 4 352 1 204 1 165 8 63 1 229 3 358 4 211 3 110 1 46 9 380 2 
225 3 362 2 73 1 115 2 241 1 135 2 38 1 327 1 124 5 209 1 211 2 46 2 380 1 16 4 
286 1 362 1 73 4 333 1 115 2 241 1 178 1 149 4 124 20 268 2 77 2 129 1 16 5 348 1 225 9 376 1 132 4 85 1 135 1 38 1 351 4 352 1 204 1 327 1 165 8 63 1 229 2 209 1 358 4 211 3 110 1 46 11 380 3 
113 1 365 1 78 1 230 1 12 1 21 1 197 1 
10 1 270 1 231 1 104 1 247 1 
118 1 320 1 54 1 2 1 120 1 169 1 180 1 322 1 213 1 41 1 315 1 
320 1 310 1 322 1 83 1 21 1 41 1 315 1 137 1 118 1 119 1 364 1 54 1 120 1 78 1 365 2 369 1 213 1 197 2 
4 1 310 2 174 1 315 1 118 1 364 1 119 1 54 3 365 2 78 2 369 1 221 1 197 2 320 1 304 1 322 2 251 1 83 1 21 1 203 1 41 1 137 2 213 1 
3 1 4 1 310 2 174 2 51 1 315 1 118 1 119 1 54 3 365 2 78 2 369 1 221 1 197 2 320 1 304 1 322 2 251 1 83 1 21 1 203 1 41 1 137 2 213 1 
310 1 334 1 117 2 294 1 315 1 118 3 54 4 120 1 221 1 125 1 320 3 304 1 322 1 20 1 203 1 41 1 105 1 325 1 284 2 44 1 45 1 213 3 360 1 
320 3 304 1 310 1 322 1 334 1 117 2 254 1 20 1 203 1 294 1 41 1 315 1 325 1 118 3 120 1 54 4 284 2 44 1 221 1 125 1 213 3 360 1 
118 1 320 1 297 1 213 1 41 1 315 1 
144 1 320 7 171 1 310 1 58 1 322 2 41 2 8 1 315 3 118 6 297 1 354 1 120 2 54 3 43 1 228 1 90 1 213 7 196 1 141 1 143 1 
3 1 99 1 241 1 192 1 54 1 149 2 196 1 197 2 16 3 351 2 21 1 165 4 64 1 357 2 209 1 358 2 213 1 211 2 362 1 310 1 73 2 115 1 174 1 315 1 118 1 364 1 119 1 124 8 78 1 365 2 369 1 320 1 225 4 377 2 132 2 322 1 83 1 226 1 135 1 38 1 41 1 137 1 327 1 138 1 330 1 46 4 380 2 
5 2 117 3 294 2 118 1 120 1 298 2 54 2 76 1 35 1 125 1 316 1 317 1 320 1 155 1 250 1 280 2 254 1 20 1 325 1 328 1 24 1 284 3 44 1 93 1 213 1 27 2 378 1 360 1 
320 2 171 1 310 1 322 1 41 1 100 1 325 1 315 2 118 2 297 1 54 2 213 2 196 1 
118 4 320 4 54 1 120 1 169 1 131 1 180 1 322 1 334 1 213 4 196 1 41 1 315 1 
320 2 304 1 310 1 157 1 322 1 227 1 41 1 315 2 118 2 107 1 54 1 43 1 213 2 141 1 
118 1 320 1 120 1 188 1 170 1 269 1 80 1 213 1 41 1 315 1 
320 2 58 1 322 1 41 1 315 1 118 2 54 1 228 1 213 2 196 1 81 1 
320 5 169 1 131 1 304 1 322 2 41 2 8 1 315 2 118 4 120 1 54 3 228 1 180 1 90 1 213 5 196 1 
320 5 169 1 131 1 304 1 322 2 312 1 41 2 315 2 118 4 120 1 54 3 228 1 180 1 90 1 213 5 196 1 
3 1 310 1 174 1 51 1 315 1 118 1 119 1 120 1 54 1 365 2 78 1 369 1 197 2 320 1 322 1 83 1 21 1 41 1 137 1 213 1 
320 1 304 1 171 1 310 1 322 1 41 1 315 2 118 1 54 1 43 1 213 1 141 1 143 1 
290 1 281 1 175 1 53 1 164 1 78 1 365 1 197 1 318 1 
164 1 79 1 261 1 
53 1 164 1 283 1 21 1 318 1 
4 1 289 1 251 1 117 2 21 1 20 1 174 1 338 1 53 2 164 1 283 2 284 2 44 1 93 1 79 1 125 1 150 1 261 1 318 2 
177 1 2 1 273 1 39 1 
264 1 177 1 220 1 103 1 273 1 39 1 307 1 
278 1 103 1 116 1 
103 3 39 1 307 1 163 1 264 3 177 1 220 1 370 1 14 1 273 1 152 2 142 1 
264 2 373 1 177 1 220 1 103 2 273 1 39 1 307 1 161 1 
264 1 188 1 220 1 269 1 103 1 299 1 39 1 307 1 205 1 314 1 142 1 
264 1 177 1 220 1 103 1 39 1 307 1 142 1 
264 1 177 2 220 1 103 1 273 1 307 1 142 1 
33 1 264 2 177 1 220 2 243 1 103 2 39 1 307 2 95 1 142 1 
101 1 103 3 39 2 307 1 161 2 264 3 177 1 220 1 207 1 299 1 273 1 185 1 142 1 
188 1 103 2 39 1 307 1 161 1 205 1 264 2 177 1 220 1 267 1 269 2 80 1 166 1 273 1 142 1 
373 1 103 4 39 2 307 2 161 2 264 4 177 1 220 2 26 1 299 1 273 1 185 1 142 1 
264 1 177 1 220 1 103 1 273 1 39 1 307 1 142 1 
103 4 39 3 307 1 161 2 326 1 264 4 177 2 220 1 299 1 14 1 370 1 273 2 185 1 152 1 
217 1 103 2 291 1 39 1 307 1 161 1 264 2 177 1 220 1 273 1 259 1 142 1 
103 3 252 1 39 1 307 1 264 3 177 1 220 1 370 1 14 2 273 1 152 2 142 1 
48 2 108 1 39 2 47 1 
264 1 220 1 103 1 307 1 42 1 142 1 
264 2 177 1 220 1 103 2 207 1 273 1 39 1 307 1 161 1 142 1 
122 1 
264 1 177 1 220 1 103 1 273 1 39 1 307 1 142 1 
103 3 39 1 307 1 161 1 264 3 177 1 220 1 207 1 273 1 152 1 142 1 
299 1 39 1 185 1 326 1 
177 1 39 1 

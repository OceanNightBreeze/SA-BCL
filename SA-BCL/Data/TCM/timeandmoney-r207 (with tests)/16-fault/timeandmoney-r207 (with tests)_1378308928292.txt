#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (46,318) (46,318) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (46,318) (46,318) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (46,318) (46,318) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (46,318) (46,318) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (179,300) (143,327) (143,327) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 2 52 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 292 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 200 174 150 37 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 200 174 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 200 174 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 200 337 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 200 174 150 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 200 174 150 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (179,300) (179,300) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 2 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (179,300) (143,327) (143,327) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (179,300) (143,327) (143,327) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (179,300) (143,327) (143,327) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 2 52 210 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 197 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 206 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | RETURN | 1771 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9614 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | CONSTANT | 664 | 0 -> 1
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4835 | + -> <<
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5405 | stmt -> ;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 889 | 1 -> -1
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | CONSTANT | 3031 | 0 -> -1
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
318 1 283 1 25 1 46 1 199 1 354 1 81 1 27 1 54 1 230 1 205 1 270 1 152 1 
318 1 283 1 25 1 46 1 199 1 354 1 81 1 27 1 54 1 230 1 205 1 270 1 152 1 
318 1 283 1 25 1 46 1 199 1 354 1 81 1 27 1 54 1 230 1 205 1 270 1 152 1 
318 1 283 1 25 1 46 1 199 1 354 1 81 1 27 1 54 1 230 1 205 1 270 1 152 1 
44 1 25 1 240 1 241 1 154 1 199 1 354 1 67 1 175 1 340 1 9 2 137 3 342 3 27 1 54 4 55 2 270 1 152 4 
44 1 283 1 25 1 154 1 354 1 175 1 325 1 137 1 157 1 27 1 54 2 71 1 205 1 152 2 270 1 131 1 122 1 
44 1 283 1 25 1 240 1 154 1 354 2 9 1 137 2 342 1 27 2 54 3 118 1 152 3 
44 1 25 1 240 3 241 1 354 2 9 4 27 2 54 9 55 2 152 9 358 1 283 1 154 1 199 1 67 1 175 1 340 1 137 5 342 7 140 1 118 1 293 1 95 1 270 1 
44 1 25 1 240 3 241 1 354 2 9 4 27 2 54 9 55 2 152 9 358 1 283 1 154 1 199 1 67 1 175 1 340 1 137 5 342 7 140 1 118 1 293 1 95 1 270 1 
145 1 171 1 238 1 
238 1 228 1 328 2 
296 2 182 2 233 2 18 2 261 1 83 1 276 2 330 2 
183 1 296 3 182 3 79 1 26 1 47 1 80 1 5 1 244 1 101 1 125 1 276 2 190 1 306 1 34 1 60 2 307 1 261 1 83 1 130 1 109 1 330 2 62 1 332 1 114 2 336 1 135 2 201 1 18 2 252 2 139 1 365 1 161 1 119 1 233 2 120 2 370 1 
360 1 296 1 182 1 24 1 233 1 18 1 83 1 281 1 276 1 330 1 
145 1 182 1 296 1 297 1 238 1 251 1 134 1 100 1 69 1 151 1 233 1 15 1 194 1 281 1 
145 1 182 1 296 1 297 1 238 1 134 1 18 1 100 1 276 1 69 1 15 2 233 1 194 2 281 1 330 1 
19 1 256 1 249 1 15 1 194 1 
145 1 238 1 256 1 366 1 249 1 15 2 194 2 164 1 
249 1 15 1 194 1 
360 1 182 1 296 1 256 1 24 1 18 1 276 1 345 1 15 1 233 1 83 1 194 1 281 1 330 1 
238 1 
145 1 238 1 256 1 366 1 168 1 249 1 15 2 194 2 
296 1 182 1 77 1 145 2 24 1 256 2 238 2 211 1 242 1 298 1 276 1 260 1 246 1 357 2 249 2 15 5 83 1 194 5 281 1 310 2 330 1 220 4 360 1 331 2 221 1 263 1 333 2 115 1 117 5 18 1 90 1 341 2 92 1 345 1 203 2 366 1 233 1 94 1 
171 1 261 1 
182 2 296 2 97 1 361 1 18 1 276 1 233 2 261 2 330 1 
304 1 217 1 13 1 
296 1 182 1 79 1 26 1 114 1 80 1 135 1 336 1 244 1 275 1 139 1 365 1 119 1 120 1 261 1 109 1 
182 2 296 2 79 1 26 1 114 1 80 1 336 1 135 1 244 1 276 1 139 1 365 1 70 1 217 1 119 1 348 1 233 1 120 1 109 1 330 1 
296 3 182 3 348 1 18 1 233 3 261 1 276 3 330 3 
360 1 296 1 182 1 233 1 281 1 276 1 330 1 
296 1 182 1 97 1 361 1 233 1 18 1 281 1 276 1 330 1 
296 4 182 4 297 1 79 1 26 1 80 1 244 1 101 1 245 1 100 1 125 1 276 3 190 1 34 1 60 2 15 1 307 1 261 1 83 1 109 1 194 1 250 1 281 1 330 3 62 1 332 1 361 1 134 1 114 1 336 1 135 1 201 1 18 2 252 1 69 1 139 1 365 1 70 1 161 1 119 1 348 1 233 3 120 1 370 1 
296 2 182 2 105 1 251 1 348 1 233 2 261 1 276 1 330 1 
182 3 296 3 297 1 238 1 361 1 134 1 18 1 245 1 100 1 276 3 69 1 70 1 348 2 15 1 233 3 194 1 281 1 165 1 330 3 
182 2 296 2 361 1 18 1 276 2 217 1 348 1 13 1 233 2 330 2 
296 1 182 1 79 1 26 1 114 1 135 1 336 1 80 1 244 1 139 1 365 1 119 1 120 1 261 1 109 1 
296 1 182 1 26 1 114 1 135 1 336 1 80 1 86 1 244 1 365 1 119 1 120 1 261 1 109 1 372 1 
183 2 353 1 6 1 125 1 304 2 278 1 217 2 13 2 60 2 307 1 280 1 62 1 332 1 333 1 335 1 201 2 252 4 136 1 38 1 203 1 161 1 20 1 370 1 371 1 
296 1 182 1 233 1 180 1 281 1 276 1 69 1 330 1 
45 1 182 5 296 5 361 1 251 1 18 1 276 4 105 1 70 1 302 1 348 2 233 5 261 1 330 4 
360 1 296 2 182 2 233 2 180 1 281 1 276 2 330 2 
78 1 323 1 
78 1 323 1 
155 1 7 1 
155 1 7 1 
78 1 323 1 155 1 7 1 
78 1 68 1 323 1 
78 1 68 1 323 1 
78 1 68 1 323 1 
78 1 258 1 323 1 
78 1 258 1 323 1 
133 1 78 1 323 1 
78 2 99 1 155 1 7 1 323 2 108 1 
78 1 258 1 323 1 
96 1 238 1 173 2 343 1 103 1 300 1 40 2 143 1 291 2 327 1 367 2 59 2 15 2 194 2 
296 1 182 1 2 1 173 1 52 1 276 1 343 1 40 1 93 1 315 1 30 1 291 1 367 1 59 1 15 1 233 1 194 1 330 1 
199 1 175 1 270 1 
71 1 175 1 270 1 
71 1 142 1 113 1 199 2 270 3 158 1 
71 1 142 1 113 1 290 1 199 1 270 2 
71 1 113 1 142 2 199 1 270 2 
145 1 256 4 238 2 352 2 10 1 126 2 303 1 246 1 56 1 30 1 357 1 328 3 249 1 14 1 15 5 194 5 220 3 331 1 333 1 222 2 335 1 117 2 85 1 202 1 136 1 341 1 203 1 93 1 228 1 315 1 366 1 43 1 
296 1 145 1 182 1 256 2 238 1 24 1 124 1 276 1 11 1 249 1 15 2 83 1 194 2 281 1 330 1 360 1 18 1 19 1 345 1 289 1 233 1 
145 1 238 3 256 2 352 2 260 1 10 1 126 1 357 1 328 4 14 1 15 3 194 3 220 3 331 1 333 1 222 2 335 1 117 2 85 1 202 1 136 1 341 1 203 1 228 2 315 1 43 1 
145 1 320 1 238 4 256 3 352 4 260 1 10 2 126 2 216 1 357 1 328 7 14 1 15 4 194 4 220 5 331 1 333 2 222 4 335 2 117 4 85 1 88 1 202 1 136 2 341 1 203 2 228 3 315 2 43 1 
171 1 80 1 153 1 
80 1 364 1 
309 1 
365 1 80 1 
365 1 196 1 239 1 80 3 336 1 153 2 
365 1 80 1 336 1 
80 1 36 1 
183 3 333 1 64 1 212 1 242 1 6 1 362 1 201 3 89 1 90 1 322 1 252 6 268 1 203 1 72 1 94 1 371 2 
183 3 333 1 64 1 212 1 242 1 6 1 362 1 201 3 89 1 90 1 322 1 252 6 268 1 203 1 72 1 94 1 371 2 
183 3 333 1 64 1 212 1 242 1 213 1 6 1 362 1 201 3 89 1 90 1 322 1 252 6 268 1 203 1 72 1 94 1 371 2 
183 15 186 4 212 2 242 2 6 4 322 2 10 3 60 2 307 1 262 1 172 1 332 1 64 5 333 4 198 1 335 3 264 1 362 2 89 1 201 15 287 1 90 1 252 30 267 1 136 3 268 1 203 4 161 1 72 1 94 2 236 1 370 1 21 3 371 9 
183 4 212 1 242 1 6 2 322 1 60 4 307 2 312 1 332 2 333 1 64 1 362 1 201 4 89 1 252 8 90 1 203 1 161 2 72 1 317 1 236 1 94 1 370 2 371 3 
44 1 184 1 25 1 26 1 354 1 274 1 355 1 27 1 54 2 29 1 107 1 219 1 152 2 283 1 154 1 199 1 114 1 135 1 175 1 137 1 342 1 158 1 71 1 141 1 229 1 119 1 74 1 120 1 269 1 270 2 
44 1 184 1 26 1 4 1 354 1 259 1 274 1 355 1 27 1 54 3 219 1 152 3 283 1 154 1 199 1 114 1 135 1 175 1 137 1 158 1 342 2 71 1 141 1 229 1 119 1 74 1 120 1 269 1 270 2 295 1 
44 1 184 1 26 1 259 1 274 1 355 1 54 2 219 1 152 2 283 1 154 1 114 1 199 1 135 1 175 1 137 1 342 2 158 1 71 1 229 1 119 1 74 1 120 1 270 2 295 1 
359 1 144 1 283 2 319 1 26 1 4 1 114 1 80 1 135 1 354 1 244 1 8 1 355 2 27 1 54 1 365 1 229 2 305 1 12 1 119 1 120 1 219 2 152 1 
184 1 25 1 26 1 354 1 274 1 355 1 27 1 54 1 29 1 219 1 152 1 283 1 199 1 114 1 135 1 175 1 158 1 71 1 141 1 229 1 119 1 74 1 120 1 269 1 270 2 295 1 
277 1 
272 1 0 1 182 1 244 2 100 1 246 1 12 1 249 2 151 1 15 3 192 1 61 1 194 3 281 1 331 1 251 1 114 2 65 1 117 2 66 1 341 1 69 1 292 1 119 1 120 2 163 1 255 1 76 2 296 1 297 1 26 1 80 1 357 1 305 1 220 2 134 1 135 2 224 1 227 1 365 1 366 1 43 1 233 1 
272 1 0 1 182 1 296 1 297 1 134 1 251 1 168 1 100 1 227 1 69 1 301 1 366 1 249 2 151 1 15 3 163 1 233 1 255 1 76 2 194 3 281 1 
272 1 296 1 182 1 0 1 145 1 297 1 238 1 168 1 100 1 249 1 151 1 15 3 194 3 281 1 251 1 134 1 227 1 69 1 366 1 233 1 163 1 255 1 178 1 76 3 
272 1 145 1 0 1 182 1 296 1 297 1 238 1 134 1 251 1 168 1 100 1 227 1 69 1 301 1 41 1 366 1 249 2 151 1 15 3 163 1 233 1 178 1 255 1 76 3 194 3 281 1 
272 1 0 1 182 1 296 1 297 1 209 1 168 1 100 1 301 2 246 1 150 1 357 1 151 1 249 3 15 3 61 1 194 3 281 1 220 1 331 1 251 1 134 1 65 1 200 1 117 1 174 1 341 1 227 1 37 1 69 1 41 2 366 1 233 1 163 1 255 1 76 2 
272 1 0 1 182 1 296 1 297 1 100 1 246 1 357 1 151 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 65 1 117 1 227 1 341 1 69 1 163 1 233 1 255 1 76 2 
272 1 296 1 182 1 0 1 297 1 209 1 100 1 246 1 357 1 151 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 65 1 200 1 117 1 174 1 341 1 227 1 69 1 233 1 163 1 255 1 76 2 
272 1 296 1 182 1 0 1 297 1 209 1 100 1 246 1 357 1 151 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 65 1 200 1 117 1 174 1 341 1 227 1 69 1 233 1 163 1 255 1 76 2 
272 1 296 1 182 1 0 1 297 1 100 1 246 1 215 1 357 1 127 1 151 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 200 1 117 1 337 1 341 1 227 1 69 1 233 1 163 1 255 1 76 2 
272 1 296 1 182 1 0 1 297 1 209 1 100 1 301 1 246 1 150 1 357 1 151 1 249 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 65 1 200 1 117 1 174 1 341 1 227 1 69 1 41 1 233 1 163 1 255 1 178 1 76 3 
272 1 296 1 182 1 0 1 297 1 209 1 100 1 301 1 246 1 150 1 357 1 151 1 249 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 65 1 200 1 117 1 174 1 341 1 227 1 69 1 41 1 233 1 163 1 255 1 178 1 76 3 
272 1 0 1 182 1 296 1 297 1 100 1 246 1 357 1 215 1 151 1 15 2 61 1 194 2 281 1 220 1 331 1 251 1 134 1 117 1 227 1 341 1 69 1 163 1 233 1 255 1 76 2 
62 1 183 2 171 1 332 1 333 1 242 1 6 1 201 3 89 1 252 5 90 1 125 1 38 1 203 1 161 1 72 1 94 1 60 2 307 1 261 2 370 1 371 1 
183 8 208 1 186 3 6 1 125 2 10 2 190 1 304 11 217 11 13 4 60 4 307 2 261 1 130 1 111 1 62 1 262 1 332 2 64 1 333 1 335 2 116 1 201 6 252 14 267 1 136 1 344 1 203 2 161 2 294 1 370 2 21 3 371 2 
296 2 182 2 183 1 79 1 26 1 80 1 49 1 244 1 275 1 125 1 276 1 190 1 32 1 13 1 60 2 307 1 261 1 109 1 130 1 330 1 62 1 332 1 223 1 114 1 336 1 135 1 116 1 201 1 252 2 139 1 365 1 70 1 161 1 119 1 348 1 120 1 233 1 370 1 
182 3 183 9 242 1 6 3 244 1 101 2 276 1 10 2 190 1 13 6 60 6 109 2 330 1 62 3 16 2 332 3 333 3 64 4 114 3 335 2 116 1 336 2 201 10 252 19 203 3 70 1 161 3 72 1 119 2 348 1 120 3 295 1 296 3 79 2 26 2 80 2 125 3 304 6 217 6 307 3 261 2 130 1 311 2 35 2 135 3 266 1 89 1 90 1 136 2 176 1 139 2 39 2 365 2 42 1 94 1 233 1 370 3 371 7 
296 1 182 1 183 1 257 1 26 2 80 3 244 2 53 1 125 2 276 1 102 1 190 1 107 1 305 1 12 1 306 2 60 4 307 2 130 1 282 1 330 1 62 2 332 2 114 7 135 8 201 1 252 2 363 1 38 1 365 2 161 2 162 1 119 2 348 1 233 1 120 8 295 1 370 2 22 1 
182 1 296 1 183 1 6 1 125 1 276 1 10 1 304 1 217 1 33 1 13 1 60 2 307 1 330 1 62 1 332 1 333 1 361 1 335 1 116 1 18 1 201 2 252 3 136 1 203 1 161 1 233 1 370 1 371 1 
62 1 183 2 332 1 64 1 335 1 252 2 125 1 38 1 203 1 161 1 304 1 278 1 217 1 13 1 60 2 307 1 370 1 371 1 
62 1 332 1 333 1 6 1 201 2 252 2 125 1 136 1 38 1 161 1 304 1 217 1 13 1 60 2 307 1 20 1 370 1 371 1 
183 2 6 1 125 1 10 1 304 2 217 2 13 2 60 2 307 1 62 1 332 1 64 1 333 1 335 1 201 2 252 4 136 1 38 1 203 1 161 1 370 1 371 2 
62 1 183 2 332 1 64 1 335 1 252 2 125 1 102 1 203 1 161 1 304 1 278 1 217 1 13 1 60 2 307 1 370 1 371 1 
62 1 332 1 333 1 6 1 201 2 252 2 125 1 136 1 102 1 161 1 304 1 217 1 13 1 60 2 307 1 20 1 370 1 371 1 
183 2 6 1 125 1 102 1 10 1 304 2 217 2 13 2 60 2 307 1 62 1 332 1 64 1 333 1 335 1 201 2 252 4 136 1 203 1 161 1 370 1 371 2 
183 2 6 1 125 1 10 1 304 2 217 2 13 2 60 2 307 1 62 1 332 1 64 1 333 1 335 1 201 2 252 4 136 1 203 1 161 1 370 1 371 2 
183 1 182 1 296 1 79 1 26 1 80 1 244 1 101 1 125 1 190 1 60 2 307 1 261 1 130 1 109 1 62 1 332 1 114 1 336 1 135 1 201 1 252 2 139 1 365 1 161 1 119 1 120 1 370 1 
183 1 182 1 296 1 26 1 80 1 244 1 125 1 190 1 60 2 307 1 261 1 130 1 109 1 62 1 332 1 114 1 336 1 135 1 86 1 201 1 252 2 365 1 161 1 119 1 368 1 120 1 370 1 372 1 
183 2 6 1 125 1 10 1 304 2 217 2 13 2 60 2 307 1 62 1 332 1 64 1 333 1 335 1 116 1 201 2 252 4 136 1 203 1 161 1 370 1 371 2 
183 2 182 1 296 1 79 1 26 1 80 1 6 1 101 1 125 1 10 1 304 2 107 1 217 2 13 2 60 2 307 1 109 1 62 1 35 1 332 1 333 1 64 1 335 1 114 1 336 1 135 1 201 2 252 4 136 1 203 1 139 1 365 1 161 1 119 1 120 1 370 1 371 2 
182 1 296 1 183 2 125 1 276 1 10 1 304 1 329 1 217 1 13 1 60 2 307 1 330 1 62 1 332 1 333 1 64 1 361 1 335 1 116 1 201 1 18 1 252 3 136 1 203 1 161 1 233 1 370 1 371 1 
207 1 183 9 186 2 299 1 6 3 10 3 129 1 60 4 307 2 262 1 332 2 64 3 333 3 335 3 313 1 201 10 252 19 267 1 136 3 177 1 203 3 160 2 161 2 317 1 75 1 370 2 21 1 271 1 371 6 166 2 
207 1 183 14 123 1 186 2 6 2 243 1 10 3 247 1 58 1 60 6 307 3 195 1 332 3 64 2 333 2 335 3 313 2 201 12 252 26 339 1 267 2 136 2 177 1 203 3 160 4 161 3 317 1 236 2 75 2 370 3 21 2 371 4 271 1 166 1 
207 1 183 19 123 1 186 4 242 1 299 1 243 1 6 4 10 4 247 1 58 1 60 6 307 3 262 1 195 1 332 3 64 4 333 5 335 4 313 2 89 1 201 22 90 1 252 41 339 1 267 3 136 4 177 1 203 5 160 4 161 3 72 1 317 1 73 1 94 1 236 1 75 1 370 3 21 3 271 1 371 8 166 1 
207 1 183 19 123 1 186 4 242 1 299 1 243 1 6 4 10 4 247 1 58 1 60 8 307 4 262 1 195 1 332 4 64 3 333 4 335 4 313 2 89 1 201 19 90 1 252 38 339 1 267 3 136 3 177 1 203 5 160 4 161 4 72 1 317 1 73 1 94 1 236 2 75 1 370 4 21 3 271 1 371 7 166 1 
207 1 183 26 123 1 186 4 242 1 243 1 6 7 10 7 247 1 58 1 60 4 307 2 262 2 195 1 332 2 64 7 333 8 335 7 313 1 89 1 201 26 90 1 252 52 339 1 267 2 136 7 177 1 203 8 160 4 161 2 72 1 317 1 294 2 94 1 236 1 75 1 370 2 21 4 271 1 371 14 166 1 
300 1 291 1 173 1 59 1 367 1 179 1 
2 1 
291 1 173 1 59 1 367 1 288 1 
96 1 238 1 173 1 343 1 103 1 300 1 40 2 143 1 291 1 327 1 367 1 59 1 15 1 194 1 
96 1 238 1 173 1 343 1 103 1 300 1 40 2 143 1 291 1 327 1 367 1 59 1 15 1 194 1 
96 1 238 1 173 1 343 1 103 1 300 1 40 2 143 1 291 1 327 1 367 1 59 1 15 1 194 1 
197 1 
197 1 
206 1 
206 1 
350 1 284 1 
96 1 256 1 210 1 2 1 173 1 52 1 103 1 40 1 93 1 315 1 30 1 291 1 367 1 59 1 15 1 194 1 
197 1 
206 1 
296 2 182 2 183 1 257 1 1 1 26 1 80 1 125 1 149 1 190 1 306 2 60 2 307 1 130 1 62 1 332 1 114 2 135 2 116 1 201 1 252 2 254 1 365 1 161 1 316 1 119 1 120 2 233 2 237 1 370 1 22 1 
286 1 26 1 199 1 114 2 135 2 175 1 314 1 274 1 158 1 71 1 229 1 107 1 119 1 74 1 120 2 269 1 270 2 121 1 295 1 
132 1 26 1 199 1 114 1 135 1 175 1 274 1 158 1 71 1 229 1 119 1 74 1 120 1 269 1 270 2 121 1 295 1 
319 1 26 1 114 1 80 1 135 1 244 1 314 1 146 1 365 1 229 1 305 1 12 1 119 1 120 1 
286 1 26 1 199 1 114 1 135 1 175 1 314 1 274 1 158 1 71 1 229 1 119 1 74 1 120 1 269 1 270 2 121 1 295 1 
225 1 
145 1 221 1 171 1 238 1 117 1 92 1 220 1 
145 1 238 2 246 1 357 1 328 1 249 1 15 1 194 1 84 1 220 1 331 1 65 1 117 1 341 1 228 1 366 1 232 1 
145 1 238 7 50 2 244 1 10 2 246 3 328 12 249 5 15 5 153 2 194 5 331 3 196 1 333 2 114 1 335 2 336 1 117 7 341 3 203 2 119 2 347 2 120 1 23 1 26 1 352 6 80 6 357 3 128 2 218 2 82 2 308 1 220 8 222 6 134 2 135 1 224 1 364 3 91 1 136 2 39 2 365 1 228 6 366 3 43 2 
145 2 238 5 211 1 186 1 352 5 243 1 28 1 10 2 246 2 357 2 247 1 328 6 58 1 249 1 15 1 170 1 194 1 310 2 220 8 331 2 195 1 333 2 222 5 335 2 117 5 224 1 339 1 267 1 136 2 341 2 203 2 228 3 366 1 43 1 21 1 
296 1 182 1 209 1 24 1 211 1 242 1 276 1 246 1 357 1 15 1 83 1 194 1 281 1 310 2 220 2 330 1 360 1 331 1 263 1 333 1 117 2 18 1 90 1 341 1 203 2 345 1 94 1 233 1 
331 1 221 1 145 1 238 1 117 1 92 1 341 1 246 1 357 1 220 1 
238 5 333 2 222 5 335 2 352 5 117 5 136 2 10 2 39 1 203 2 228 5 328 10 220 5 
145 1 238 1 366 1 249 1 15 1 194 1 
26 1 3 1 80 1 244 2 356 1 260 1 246 1 357 2 305 1 12 1 249 4 15 3 192 1 110 2 194 3 220 2 331 2 114 4 135 4 117 2 66 1 224 2 341 2 159 1 365 1 366 2 119 1 43 2 120 4 
296 3 182 3 79 1 26 1 80 1 244 1 101 1 125 1 276 2 190 1 34 1 60 2 307 1 261 1 83 1 109 1 330 2 62 1 332 1 114 1 135 1 336 1 201 1 18 2 252 1 139 1 365 1 161 1 119 1 120 1 233 2 370 1 
331 1 145 1 238 2 352 1 117 1 224 1 341 1 228 1 246 1 357 1 328 2 43 1 220 1 
291 1 59 1 324 1 
291 1 59 1 324 1 
291 1 59 1 324 1 
291 1 231 1 59 1 
291 1 231 1 59 1 
106 1 284 1 291 1 59 1 148 1 
291 1 231 1 59 1 
291 1 59 1 
78 1 323 1 
183 3 332 2 333 1 64 1 242 1 6 1 201 4 89 1 90 1 252 7 203 1 161 2 72 1 60 4 236 1 94 1 307 2 370 2 371 2 
171 1 183 2 333 1 242 1 6 1 201 3 89 1 90 1 252 5 203 1 72 1 94 1 371 1 
183 2 332 1 333 1 64 1 335 1 6 1 338 1 201 2 252 4 136 1 10 1 203 1 161 1 60 2 307 1 370 1 371 2 
183 3 262 1 333 1 64 1 186 2 335 1 6 1 201 4 252 7 136 1 267 1 10 1 203 1 21 1 371 2 
183 10 186 2 242 2 6 4 10 2 57 1 60 4 307 2 262 1 332 2 64 4 333 3 335 2 89 1 201 12 90 1 252 22 136 2 203 3 344 1 161 2 72 1 294 1 94 2 236 2 21 2 370 2 371 8 
186 1 201 1 252 1 
183 1 252 1 21 1 
183 3 332 1 64 1 333 1 335 1 338 1 6 2 201 3 252 6 136 1 10 1 39 1 203 1 161 1 60 2 307 1 370 1 371 3 
183 6 186 1 243 1 6 1 10 2 247 1 58 1 60 2 307 1 195 1 332 1 64 1 333 2 335 2 201 6 252 12 267 1 136 2 339 1 203 2 161 1 317 1 21 1 370 1 371 2 
183 3 333 1 64 1 242 1 6 1 201 3 90 1 252 6 203 1 94 1 371 2 
183 1 332 1 64 1 242 1 6 1 201 2 89 1 252 3 161 1 72 1 57 1 94 1 236 1 60 2 307 1 370 1 371 2 
183 4 263 1 333 2 64 1 242 1 6 2 201 4 90 1 252 8 203 2 94 1 371 3 
183 2 332 1 64 1 335 1 252 2 203 1 161 1 317 1 60 2 307 1 370 1 371 1 
183 2 332 1 333 1 64 1 335 1 6 1 201 2 252 4 136 1 10 1 203 1 161 1 317 1 60 2 307 1 370 1 371 2 
183 1 332 3 64 1 242 1 299 1 6 1 201 2 252 3 161 3 57 1 317 1 236 1 60 6 94 1 307 3 370 3 371 2 
183 15 186 4 242 3 299 1 6 6 10 3 57 1 60 10 307 5 172 1 262 1 332 5 64 5 333 5 335 3 264 1 338 1 89 1 287 1 201 18 90 2 252 33 267 1 136 3 203 5 161 5 72 1 317 1 94 3 236 2 370 5 21 3 371 11 
183 3 332 1 333 1 186 1 242 1 6 1 89 1 201 4 90 1 252 7 267 1 203 1 161 1 72 1 317 1 58 1 94 1 60 2 307 1 370 1 21 1 371 1 
183 5 186 2 242 1 6 1 10 1 58 1 60 4 307 2 262 1 332 2 333 1 64 1 335 1 338 1 89 1 201 5 90 1 252 10 267 1 203 2 161 2 72 1 317 1 94 1 370 2 21 1 371 2 
183 8 186 1 242 1 243 1 6 2 10 2 247 1 58 1 60 6 307 3 195 1 332 3 64 1 333 3 335 2 338 1 89 1 201 10 90 1 252 18 339 1 267 1 136 2 203 3 161 3 72 1 317 1 94 1 236 1 21 1 370 3 371 3 
183 9 186 1 242 1 243 1 6 2 10 2 247 1 58 1 60 6 307 3 195 1 332 3 64 2 333 2 335 2 338 1 89 1 201 7 90 1 252 16 267 1 136 1 339 1 203 3 161 3 72 1 317 1 94 1 236 1 21 1 370 3 371 4 
183 3 332 1 333 1 186 1 242 1 6 1 89 1 201 4 90 1 252 7 267 1 203 1 161 1 72 1 317 1 58 1 94 1 60 2 307 1 370 1 21 1 371 1 
183 6 186 1 243 1 6 1 10 2 247 1 58 1 60 2 307 1 195 1 332 1 64 1 333 2 335 2 201 6 252 12 267 1 136 2 339 1 203 2 161 1 317 1 21 1 370 1 371 2 
183 9 186 1 242 1 243 1 6 2 10 2 247 1 58 1 60 8 307 4 195 1 332 4 64 2 333 2 335 2 338 1 89 1 201 8 90 1 252 17 339 1 267 1 136 1 203 3 161 4 72 1 317 1 94 1 236 2 370 4 21 1 371 4 
183 9 186 1 299 1 243 1 6 3 10 3 247 1 58 1 60 8 307 4 195 1 332 4 64 3 333 2 335 3 201 7 252 16 339 1 267 1 136 2 203 3 161 4 317 1 236 2 370 4 21 1 371 6 
183 5 263 1 333 2 64 4 242 4 362 1 6 5 201 5 89 1 252 10 90 2 203 2 72 1 94 4 371 9 
183 9 186 1 242 1 299 1 243 1 6 2 10 2 247 1 58 1 60 8 307 4 195 1 332 4 64 1 333 2 335 2 89 1 201 8 90 1 252 17 339 1 267 1 136 1 203 3 161 4 72 1 317 1 94 1 236 2 370 4 21 1 371 3 
296 1 182 1 349 1 105 1 251 1 233 1 261 1 
349 1 182 1 296 1 63 1 251 1 51 1 187 1 87 1 105 1 248 1 233 1 261 1 
171 1 365 1 305 1 26 1 12 1 119 1 114 1 80 1 135 1 120 1 244 1 
182 2 296 2 26 1 114 1 80 1 336 1 135 1 244 1 276 1 139 1 365 1 119 1 348 1 233 1 120 1 261 1 109 1 330 1 
182 2 296 2 98 1 26 1 114 1 80 3 336 2 135 1 36 1 100 1 276 1 69 1 139 1 365 2 119 1 348 1 233 2 120 1 261 1 109 1 110 1 281 1 330 2 
296 2 182 2 26 1 98 1 80 3 100 1 276 1 261 1 110 1 109 1 281 1 330 2 114 2 135 2 336 2 86 1 36 1 69 1 365 2 119 1 348 1 234 1 120 2 233 2 
145 1 238 1 26 1 98 1 80 4 244 1 104 1 249 1 15 2 153 1 110 1 194 2 134 1 114 3 135 3 336 1 17 1 36 1 364 1 365 1 119 1 234 1 120 3 
145 1 238 1 134 1 98 1 26 1 114 3 336 1 135 3 80 4 244 1 36 1 364 1 365 1 119 1 347 1 249 1 234 1 15 2 120 3 194 2 110 1 153 1 
26 1 119 1 114 1 135 1 120 1 53 1 
196 1 321 1 26 2 114 6 135 7 336 1 80 3 244 2 53 1 363 1 365 2 162 1 107 1 346 1 169 1 119 3 306 1 120 7 295 1 22 1 282 1 
183 2 296 2 182 2 1 1 79 1 26 1 242 1 80 1 6 1 101 1 125 2 276 1 107 1 60 4 307 2 261 2 109 1 330 1 62 2 332 2 311 1 35 1 333 1 114 1 336 1 116 1 135 1 201 3 89 1 252 5 90 1 203 1 139 1 365 1 161 2 72 1 119 1 348 1 94 1 233 1 120 1 370 2 371 1 
145 1 238 1 256 1 3 1 50 1 80 2 244 1 246 2 357 2 218 1 249 2 82 1 15 3 194 3 153 1 220 1 331 2 221 1 134 1 114 1 117 1 135 1 364 1 92 1 341 2 366 1 347 1 120 1 
196 1 26 1 114 1 135 1 336 1 80 2 53 1 365 1 119 2 120 1 309 1 153 1 23 1 
351 1 26 1 114 4 135 4 80 1 244 1 365 1 107 1 305 1 12 1 119 1 234 1 120 4 
26 1 114 2 135 2 336 1 80 1 266 1 214 1 253 1 365 1 346 1 169 1 119 2 120 2 110 1 
71 1 26 1 119 1 114 1 74 1 135 1 120 1 175 1 270 1 244 1 
26 1 114 2 135 2 80 1 365 1 107 1 119 1 120 2 237 1 295 1 22 1 
351 1 26 2 114 4 135 5 80 3 244 1 365 2 107 1 162 1 305 1 12 1 119 2 120 5 110 1 22 1 282 1 
351 1 26 2 114 4 135 5 80 3 244 1 365 2 107 1 162 1 305 1 12 1 119 2 120 5 279 1 110 1 22 1 
182 2 296 2 26 1 114 1 80 1 336 1 135 1 86 1 244 1 276 1 365 1 119 1 348 1 233 1 120 1 261 1 109 1 330 1 
196 1 321 1 26 1 114 1 135 1 336 1 80 1 365 1 346 1 169 1 119 2 120 1 110 1 
138 1 189 1 191 1 261 1 369 1 
145 1 297 1 238 1 256 1 134 1 100 1 245 1 226 1 69 1 138 2 189 1 204 1 191 2 235 1 15 2 261 1 369 2 194 2 281 1 
182 1 296 1 254 1 149 1 189 1 316 1 191 1 233 1 369 1 
189 1 204 1 226 1 
44 1 171 1 154 1 137 1 
44 1 27 1 54 1 154 1 354 1 152 1 137 1 
283 1 54 1 355 1 
181 1 44 1 25 1 285 1 154 1 265 1 354 1 137 1 27 1 54 3 152 3 122 2 
44 1 27 1 54 2 55 1 154 1 354 1 152 2 137 1 342 1 
25 1 199 1 354 1 67 1 175 1 9 1 137 1 27 1 54 1 152 1 270 1 
27 1 54 1 25 1 154 1 354 1 152 1 137 1 
44 1 27 1 54 1 25 1 154 2 354 1 152 1 
167 1 27 2 54 2 25 1 273 1 154 1 354 2 152 2 156 1 137 1 
44 1 25 1 240 1 154 1 354 1 9 1 137 2 342 2 27 1 54 3 293 1 152 3 358 1 
44 1 25 1 154 1 199 1 354 1 175 1 137 1 147 1 158 1 342 1 27 1 54 2 71 1 270 2 152 2 
44 1 25 1 240 1 154 1 354 2 340 1 9 1 137 2 342 2 27 2 54 4 55 1 152 4 
44 1 27 1 54 1 25 1 154 1 354 1 152 1 137 1 
44 2 285 1 240 1 154 2 265 1 354 1 9 1 137 3 342 2 27 1 54 4 152 4 122 1 131 1 
44 1 27 1 140 1 54 2 25 1 31 1 334 1 154 1 354 1 152 2 137 1 342 1 
44 1 25 1 285 1 154 1 265 2 354 1 137 1 27 1 54 3 326 1 152 3 122 2 
48 1 188 1 193 2 137 2 
27 1 54 1 185 1 25 1 354 1 152 1 
44 1 27 1 54 2 25 1 154 1 293 1 354 1 152 2 137 1 342 1 
112 1 
44 1 27 1 54 1 25 1 154 1 354 1 152 1 137 1 
44 1 27 1 54 3 25 1 293 1 154 1 354 1 152 3 137 1 122 1 342 1 
240 1 9 1 131 1 137 1 
154 1 137 1 

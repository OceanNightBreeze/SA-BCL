#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 156 124 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 156 124 320 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 156 241 149 246 (103,106) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 33 153 299 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 33 153 299 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 33 153 299 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 33 153 299 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 33 153 299 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 97 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 156 109 305 261 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 156 124 337 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 156 124 67 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 33 1 270 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 33 11 142 82 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 156 241 149 246 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 33 11 142 82 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 156 241 149 246 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 156 124 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 156 124 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 191 45 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 191 45 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 191 45 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 191 45 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 191 45 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 33 1 270 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 97 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 156 124 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 174 17 315 (9,154) (9,154) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 174 17 315 (9,154) (9,154) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 97 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 156 109 313 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 156 109 305 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 156 109 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 33 322 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 156 99 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 156 109 313 42 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 33 11 285 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 156 29 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 174 17 315 20 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 33 11 142 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 33 11 142 30 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 174 17 315 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 156 109 313 243 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 174 17 315 (9,154) (9,154) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 930 | 0 -> 1
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5368 | stmt -> ;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | OPERATOR | 1354 | != -> <
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator; | ASSIGN | 5914 | = null
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1756 | stmt -> ;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit; | RETURN | 533 | return null
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z | OPERATOR | 3041 | != -> ==
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
32 2 135 2 327 2 181 1 114 1 283 2 118 1 119 1 290 9 288 2 202 1 121 1 204 1 123 1 145 9 340 1 146 1 341 2 96 1 166 2 224 3 167 1 248 1 250 4 104 1 150 1 212 5 195 6 
32 2 135 2 327 2 181 1 114 1 283 2 118 1 119 1 290 9 288 2 202 1 121 1 204 1 123 1 145 9 340 1 146 1 341 2 96 1 224 3 166 2 167 1 248 1 250 4 104 1 150 1 212 5 195 6 
32 2 135 2 327 2 181 1 114 1 283 2 118 1 119 1 290 10 288 2 202 1 121 1 204 1 123 1 145 10 340 1 146 1 341 2 96 1 224 4 166 2 167 1 248 1 250 5 104 1 150 1 212 6 195 7 
32 2 135 2 327 2 181 1 114 1 283 2 118 1 119 1 290 7 288 2 202 1 121 1 204 1 123 1 145 7 146 1 341 2 96 1 224 2 166 1 167 1 248 1 250 3 104 1 150 1 212 4 195 4 
340 1 341 1 32 1 96 1 224 1 166 2 135 1 250 2 283 1 118 1 288 1 290 4 202 1 121 1 204 1 212 3 195 3 145 4 
341 1 32 1 96 1 327 1 348 1 312 1 282 1 150 1 283 1 104 1 118 1 288 1 290 2 121 1 212 1 145 2 
341 2 96 1 224 1 327 1 167 1 250 1 118 1 288 2 290 3 121 1 212 2 195 1 145 3 
32 1 135 1 327 1 114 1 283 1 118 1 290 9 288 2 202 1 121 1 204 1 145 9 146 1 340 1 341 2 96 1 224 3 166 2 295 1 167 1 250 4 230 1 212 5 195 7 
32 1 135 1 327 1 114 1 283 1 118 1 290 9 288 2 202 1 121 1 204 1 145 9 146 1 340 1 341 2 96 1 224 3 166 2 295 1 167 1 250 4 230 1 212 5 195 7 
271 1 231 1 97 1 
271 1 310 1 293 2 
0 1 75 2 43 2 244 2 238 2 51 1 277 2 278 2 
55 1 179 1 238 2 329 1 156 1 157 1 63 1 333 1 66 2 182 1 336 1 200 1 314 1 292 2 164 2 124 1 242 1 75 2 343 1 346 1 43 2 244 3 350 1 79 1 10 1 27 1 273 1 354 1 325 1 51 1 277 3 133 1 278 2 
23 1 46 1 75 1 43 1 244 1 265 1 238 1 51 1 277 1 278 1 
75 1 3 1 58 1 345 1 7 1 244 1 8 1 209 1 271 1 46 1 231 1 258 1 277 1 233 1 
75 1 3 1 345 1 43 1 7 1 244 1 8 1 238 1 271 1 46 1 231 1 258 2 277 1 278 1 233 2 
287 1 69 1 155 1 258 1 233 1 
271 1 326 1 287 1 5 1 231 1 155 1 258 2 233 2 
155 1 258 1 233 1 
23 1 75 1 43 1 244 1 265 1 238 1 46 1 287 1 48 1 258 1 51 1 277 1 233 1 278 1 
271 1 
271 1 326 1 287 1 231 1 155 1 258 2 319 1 233 2 
326 1 234 4 108 1 17 1 198 1 238 1 155 2 255 2 139 1 285 1 256 1 287 2 20 1 241 2 203 4 258 5 315 1 317 1 23 1 263 1 75 1 43 1 244 1 265 1 226 1 11 2 271 1 46 1 353 2 48 1 190 1 173 2 231 1 130 2 51 1 277 1 278 1 233 5 
0 1 97 1 
0 1 75 2 43 1 60 1 244 2 238 1 19 1 334 1 46 1 277 2 278 1 
87 1 26 1 103 1 
0 1 244 1 79 1 157 1 63 1 116 1 66 1 336 1 27 1 273 1 354 1 292 1 277 1 164 1 133 1 242 1 
75 1 43 1 244 2 238 1 79 1 157 1 63 1 103 1 66 1 336 1 151 1 27 1 354 1 210 1 273 1 292 1 133 1 277 2 164 1 242 1 
0 1 75 3 210 1 43 3 244 3 238 3 277 3 278 1 
46 1 75 1 43 1 244 1 265 1 238 1 277 1 
75 1 43 1 244 1 238 1 19 1 334 1 46 1 277 1 278 1 
55 1 3 1 179 1 238 3 329 1 156 1 157 1 63 1 19 1 333 1 66 1 336 1 200 1 314 1 292 1 258 1 164 1 124 1 242 1 75 3 346 1 345 1 43 3 7 1 8 1 244 4 350 1 79 1 10 1 251 1 46 1 320 1 151 1 27 1 354 1 210 1 273 1 51 1 133 1 277 4 278 2 233 1 
0 1 75 2 58 1 43 1 210 1 318 1 244 2 238 1 277 2 
75 3 3 1 125 1 345 1 43 3 7 1 244 3 8 1 238 3 19 1 271 1 251 1 46 1 151 1 210 2 258 1 277 3 278 1 233 1 
75 2 43 2 244 2 238 2 26 1 19 1 103 1 210 1 277 2 278 1 
0 1 244 1 79 1 157 1 63 1 66 1 336 1 27 1 273 1 354 1 292 1 277 1 164 1 133 1 242 1 
0 1 244 1 207 1 79 1 157 1 63 1 66 1 27 1 273 1 354 1 301 1 292 1 277 1 164 1 242 1 
149 1 333 1 200 1 314 1 179 1 68 1 241 1 350 1 329 1 246 1 106 1 10 1 156 1 
46 1 75 1 345 1 43 1 244 1 238 1 186 1 277 1 
0 1 75 3 43 3 60 1 244 3 238 3 19 1 46 1 151 1 210 2 277 3 278 1 
46 1 75 2 43 2 244 2 265 1 238 2 186 1 277 2 
228 1 302 1 
228 1 302 1 
218 1 144 1 
218 1 144 1 
218 1 144 1 
228 1 355 1 302 1 
228 1 355 1 302 1 
196 1 272 1 228 2 218 1 302 2 144 1 
228 1 236 1 302 1 
228 1 355 1 302 1 
228 1 308 1 302 1 
228 1 308 1 302 1 
228 1 308 1 302 1 
294 2 95 1 111 2 309 1 332 1 271 1 38 1 105 2 272 1 228 2 159 1 324 1 302 2 258 2 22 1 14 2 53 2 16 3 233 2 
0 1 294 1 342 1 75 2 180 1 236 1 43 2 244 2 238 2 208 1 105 1 228 1 188 1 321 1 162 1 258 1 302 1 303 1 22 1 14 1 277 2 53 1 16 1 233 1 
32 1 283 1 135 1 
282 1 32 1 283 1 
282 1 283 3 135 2 49 1 72 1 15 1 
282 1 283 2 135 1 49 1 15 1 214 1 
282 1 283 2 135 1 49 1 15 2 
326 1 234 2 136 2 306 1 155 1 310 1 255 1 64 1 37 1 142 1 287 4 241 1 161 1 258 5 203 3 293 3 264 1 208 1 11 1 187 1 271 2 149 1 188 1 353 1 190 1 231 1 28 2 130 1 303 1 30 1 177 2 233 5 
326 1 178 1 234 6 136 6 306 2 6 1 155 6 310 3 255 2 138 1 256 1 142 3 287 7 241 3 69 5 161 1 258 9 203 8 293 9 264 2 126 1 208 4 11 3 271 5 149 3 353 2 190 1 231 1 50 1 193 1 28 6 85 5 130 2 30 3 233 9 
234 2 306 1 136 2 310 2 255 1 64 1 37 1 287 2 256 1 142 1 241 1 258 3 203 3 293 4 264 1 208 1 11 1 271 3 149 1 353 1 231 1 130 1 28 2 177 1 30 1 233 3 
234 4 136 4 306 1 310 3 255 1 64 1 37 1 256 1 287 3 142 2 241 2 258 4 203 5 293 7 264 1 126 1 208 2 11 2 271 4 149 2 353 1 231 1 50 1 28 4 193 1 130 1 177 2 30 2 233 4 
206 1 97 1 63 1 
201 1 63 1 
102 1 
157 1 63 1 
206 2 62 1 157 1 158 1 63 3 242 1 
157 1 63 1 242 1 
213 1 63 1 
33 1 299 1 25 1 153 1 
33 1 299 1 25 1 153 1 
33 1 299 1 25 1 153 1 316 1 
33 1 299 1 25 1 153 1 
33 1 299 1 25 1 153 1 
32 1 135 1 4 1 327 1 328 1 113 1 219 1 282 1 66 1 283 2 118 1 290 2 288 1 185 1 292 1 121 1 72 1 164 1 145 2 341 1 96 1 266 1 168 1 352 1 27 1 300 1 354 1 253 1 212 1 195 1 
32 1 135 1 4 1 327 1 113 1 219 1 281 1 282 1 66 1 140 1 283 2 118 1 290 3 288 1 185 1 72 1 292 1 164 1 145 3 341 1 96 1 168 1 352 1 27 1 300 1 354 1 253 1 212 1 195 2 54 1 
32 1 96 1 135 1 4 1 327 1 168 1 113 1 219 1 282 1 140 1 66 1 283 2 118 1 27 1 354 1 300 1 290 2 185 1 72 1 292 1 212 1 195 2 164 1 145 2 54 1 
31 1 110 1 327 2 34 1 137 1 157 1 63 1 281 1 65 1 66 1 290 1 288 1 185 2 292 1 164 1 145 1 341 1 168 2 229 1 27 1 354 1 300 2 273 1 
341 1 32 1 135 1 4 1 327 1 328 1 168 1 113 1 219 1 282 1 66 1 283 2 352 1 27 1 354 1 300 1 288 1 290 1 253 1 185 1 72 1 121 1 292 1 164 1 145 1 54 1 
276 1 
306 1 310 2 137 1 255 1 258 4 98 1 271 1 273 2 190 1 232 2 233 4 326 3 234 2 57 1 112 1 155 6 157 1 279 1 63 1 115 1 65 1 66 2 117 2 289 1 292 2 203 2 73 2 164 2 293 2 297 2 351 1 249 2 169 1 170 2 83 2 353 1 27 1 354 1 130 1 175 2 86 1 215 1 
326 1 170 1 155 2 258 2 319 1 351 1 86 1 215 1 233 2 
117 1 258 1 351 1 86 1 249 1 215 1 233 1 
326 1 155 2 351 1 319 1 249 1 117 1 170 1 258 2 175 1 86 1 233 2 215 1 
310 2 255 1 258 4 94 1 41 1 223 1 43 1 265 1 319 1 271 2 46 1 48 1 190 1 231 2 232 2 275 1 51 1 277 1 233 4 278 1 326 3 234 1 238 1 155 7 279 1 115 1 117 3 21 1 203 1 73 2 23 1 75 1 244 1 297 2 351 1 249 3 170 4 83 2 353 1 130 1 175 4 86 1 215 1 
326 2 234 1 57 1 155 4 310 2 279 1 255 1 115 1 117 2 203 1 258 3 73 2 293 2 297 2 351 1 249 2 271 2 170 2 83 2 353 1 190 1 231 1 232 2 130 1 175 2 86 1 215 1 233 3 
326 2 234 1 155 4 310 2 279 1 255 1 115 1 117 2 258 3 203 1 73 2 94 1 41 1 223 1 297 2 351 1 249 2 271 1 170 2 83 2 353 1 190 1 231 1 232 2 130 1 175 2 86 1 215 1 233 3 
326 2 234 1 155 4 310 2 279 1 255 1 115 1 117 2 258 3 203 1 73 2 94 1 41 1 223 1 297 2 351 1 249 2 271 1 170 2 83 2 353 1 190 1 231 1 232 2 130 1 175 2 86 1 215 1 233 3 
326 2 234 1 155 4 255 1 115 1 117 2 258 3 74 1 293 2 41 1 78 1 297 2 351 1 101 2 249 2 271 1 170 2 83 2 353 1 171 1 190 1 231 1 130 1 152 2 175 2 86 1 215 1 233 3 
326 2 234 1 155 5 310 2 279 1 255 1 115 1 117 3 258 3 203 1 73 2 94 1 41 1 223 1 297 2 351 1 249 3 271 1 170 3 83 2 353 1 190 1 231 1 232 2 275 1 130 1 175 3 86 1 215 1 233 3 
326 2 234 1 155 5 310 2 279 1 255 1 115 1 117 3 258 3 203 1 73 2 94 1 41 1 223 1 297 2 351 1 249 3 271 1 170 3 83 2 353 1 190 1 231 1 232 2 275 1 130 1 175 3 86 1 215 1 233 3 
326 2 234 1 57 1 155 4 255 1 115 1 117 2 258 3 293 2 297 2 351 1 101 2 249 2 271 1 170 2 83 2 353 1 171 1 190 1 231 1 130 1 152 2 175 2 86 1 215 1 233 3 
17 1 154 1 179 1 350 1 329 1 9 1 10 1 97 1 333 1 314 1 200 1 68 1 174 1 315 1 
261 1 333 1 109 1 200 1 314 1 179 1 245 1 350 1 329 1 10 1 156 1 305 1 
75 1 179 1 43 1 244 1 245 1 350 1 238 1 329 1 10 1 156 1 333 1 200 1 314 1 151 1 337 1 210 1 277 1 124 1 
75 1 179 1 43 1 244 1 245 1 350 1 238 1 329 1 10 1 156 1 66 1 333 1 67 1 200 1 314 1 151 1 273 1 210 1 292 1 164 1 277 1 124 1 
1 1 33 1 179 1 350 1 329 1 10 1 270 1 333 1 66 1 314 1 200 1 257 1 273 1 292 1 164 1 
75 1 88 1 33 1 179 1 43 1 244 1 245 1 350 1 238 1 329 1 10 1 11 1 19 1 333 1 314 1 200 1 142 1 30 1 277 1 278 1 
333 1 82 1 200 1 314 1 33 1 142 1 179 1 68 1 350 1 329 1 10 1 11 1 
149 1 333 1 200 1 314 1 179 1 68 1 241 1 350 1 329 1 246 1 10 1 156 1 
333 1 200 1 314 1 33 1 142 1 179 1 68 1 350 1 329 1 10 1 30 1 11 1 
333 1 82 1 200 1 314 1 33 1 142 1 179 1 257 1 350 1 329 1 10 1 11 1 
149 1 333 1 200 1 314 1 179 1 257 1 241 1 350 1 329 1 246 1 10 1 156 1 
333 1 200 1 314 1 33 1 142 1 179 1 257 1 350 1 329 1 10 1 30 1 11 1 
333 1 200 1 314 1 33 1 142 1 179 1 350 1 329 1 10 1 30 1 11 1 
179 1 346 1 244 1 350 1 329 1 79 1 10 1 156 1 157 1 63 1 333 1 66 1 336 1 200 1 314 1 27 1 273 1 354 1 292 1 277 1 164 1 133 1 124 1 242 1 
179 1 244 1 350 1 207 1 329 1 79 1 10 1 156 1 157 1 63 1 333 1 66 1 200 1 314 1 27 1 273 1 354 1 70 1 301 1 292 1 277 1 164 1 124 1 242 1 
333 1 200 1 314 1 33 1 142 1 179 1 245 1 350 1 329 1 10 1 30 1 11 1 
33 1 179 1 329 1 157 1 63 1 36 1 66 1 333 1 336 1 314 1 200 1 142 1 292 1 164 1 242 1 346 1 244 1 266 1 350 1 79 1 10 1 11 1 27 1 354 1 133 1 277 1 30 1 
75 1 33 1 179 1 43 1 244 1 245 1 350 1 238 1 329 1 10 1 11 1 19 1 333 1 314 1 200 1 142 1 356 1 30 1 277 1 278 1 
200 1 314 1 76 1 350 1 191 1 329 1 10 1 45 1 269 1 134 1 
200 1 314 1 76 1 350 1 191 1 329 1 10 1 45 1 269 1 134 1 
200 1 314 1 76 1 350 1 191 1 329 1 10 1 45 1 269 1 134 1 
200 1 314 1 76 1 350 1 191 1 329 1 10 1 45 1 269 1 134 1 
200 1 314 1 76 1 350 1 191 1 329 1 10 1 45 1 269 1 134 1 
294 1 105 1 272 1 228 1 159 1 71 1 309 1 302 1 14 1 53 1 
236 1 162 1 
294 1 105 1 228 1 302 1 80 1 91 1 14 1 165 1 53 1 
294 1 111 1 309 1 332 1 271 1 38 1 105 1 272 1 228 1 159 1 324 1 258 1 302 1 22 1 14 1 53 1 16 2 233 1 
294 1 111 1 309 1 332 1 271 1 38 1 105 1 272 1 228 1 159 1 324 1 258 1 302 1 22 1 14 1 53 1 16 2 233 1 
294 1 111 1 309 1 332 1 271 1 38 1 105 1 272 1 228 1 159 1 324 1 258 1 302 1 22 1 14 1 53 1 16 2 233 1 
196 1 335 1 355 1 
196 1 335 1 355 1 
308 1 13 1 
196 1 308 1 13 1 
342 1 180 1 
0 1 111 1 236 1 180 1 238 2 332 1 287 1 162 1 258 1 259 1 294 1 342 1 75 2 43 2 244 2 208 1 105 1 228 1 321 1 188 1 302 1 303 1 14 1 277 2 53 1 16 1 233 1 
335 1 355 1 
196 1 308 1 13 1 
1 1 75 2 33 1 197 1 179 1 244 2 245 1 350 1 329 1 10 1 267 1 270 1 333 1 200 1 314 1 338 1 176 1 277 2 
32 1 135 1 235 1 4 1 347 1 266 1 113 1 282 1 66 2 283 2 27 1 354 1 185 1 253 1 72 1 292 2 52 1 164 2 54 1 
32 1 135 1 235 1 4 1 113 1 282 1 66 1 283 2 27 1 354 1 93 1 185 1 253 1 72 1 292 1 164 1 54 1 
347 1 34 1 157 1 137 1 63 1 65 1 66 1 27 1 354 1 273 1 185 1 292 1 339 1 164 1 
32 1 135 1 235 1 4 1 347 1 113 1 282 1 66 1 283 2 27 1 354 1 185 1 253 1 72 1 292 1 52 1 164 1 54 1 
84 1 
226 1 97 1 317 1 
326 1 234 1 155 1 310 1 279 1 255 1 203 1 258 1 73 1 293 1 271 2 353 1 190 1 231 1 232 1 130 1 233 1 
306 2 3 2 136 6 307 2 254 1 310 6 255 4 142 2 258 5 315 1 317 1 263 3 43 1 265 1 226 1 99 2 11 4 271 8 149 2 46 1 48 1 273 1 189 2 190 4 231 2 192 1 51 1 277 1 278 1 233 5 326 3 234 11 17 1 238 1 155 5 62 1 157 1 199 2 63 6 66 1 239 2 285 1 286 1 20 1 201 3 289 1 241 4 292 1 203 12 163 2 164 1 293 12 242 1 23 1 75 1 344 1 244 1 206 2 27 1 353 4 354 2 173 4 130 4 28 6 30 2 
326 1 109 1 234 5 306 1 136 5 155 1 310 3 92 1 255 2 313 1 284 1 142 2 184 1 289 1 241 2 258 1 203 8 293 6 263 1 42 1 148 1 11 2 271 5 149 2 353 2 173 2 190 2 322 1 274 1 231 2 28 5 130 2 304 1 30 2 233 1 
234 2 17 1 238 1 255 1 285 1 20 1 241 1 258 1 203 2 315 1 23 1 263 1 223 1 75 1 43 1 244 1 265 1 11 2 46 1 353 1 48 1 173 2 190 1 130 1 51 1 277 1 233 1 278 1 
353 1 190 1 130 1 255 1 317 1 
263 1 234 5 136 5 99 1 310 5 11 2 271 5 149 2 142 2 173 2 241 2 28 5 203 5 30 2 293 10 
271 1 326 1 231 1 155 1 258 1 233 1 
326 2 234 2 306 2 61 1 155 4 157 1 137 1 255 2 63 1 65 1 66 4 256 1 286 1 289 2 120 1 292 4 203 2 258 3 164 4 24 2 98 1 169 1 27 1 353 2 354 1 273 2 190 1 130 2 233 3 
55 1 179 1 238 2 329 1 156 1 157 1 63 1 66 1 333 1 336 1 200 1 314 1 292 1 164 1 124 1 242 1 75 2 346 1 43 2 244 3 350 1 79 1 10 1 27 1 273 1 354 1 51 1 277 3 133 1 278 2 
234 2 136 2 306 1 310 2 255 1 271 4 353 1 190 1 289 1 231 2 28 2 130 1 203 1 153 1 293 4 
294 1 172 1 14 1 
294 1 172 1 14 1 
294 1 159 1 180 1 129 1 14 1 
294 1 172 1 14 1 
294 1 44 1 14 1 
294 1 44 1 14 1 
294 1 44 1 14 1 
294 1 14 1 
228 1 302 1 
313 1 42 1 109 1 200 1 314 1 350 1 329 1 10 1 156 1 269 1 
313 1 42 1 109 1 200 2 314 2 350 2 329 2 10 2 260 1 156 1 269 1 
313 1 42 1 109 1 200 1 314 1 350 1 329 1 10 1 156 1 269 1 
313 1 42 1 109 1 200 1 314 1 350 1 329 1 10 1 156 1 269 1 
313 1 42 1 109 1 200 1 314 1 350 1 329 1 10 1 156 1 269 1 
313 1 42 1 109 1 200 1 314 1 350 1 329 1 10 1 156 1 269 1 
313 1 42 1 109 1 200 2 314 2 350 2 329 2 10 2 260 1 156 1 269 1 
313 1 42 1 109 1 200 2 314 2 128 1 350 2 329 2 10 2 156 1 269 1 
17 1 154 1 9 1 174 1 315 1 
313 1 42 1 109 1 200 2 314 2 128 1 350 2 329 2 10 2 156 1 269 1 
154 1 17 1 350 2 329 2 9 1 10 2 314 2 200 2 323 1 174 1 315 1 
17 1 154 1 9 1 174 1 97 1 315 1 
200 1 314 1 33 1 142 1 350 1 329 1 10 1 260 1 30 1 11 1 
313 1 109 1 156 1 
109 1 156 1 305 1 
109 1 156 1 
33 1 322 1 
99 1 156 1 
313 1 42 1 109 1 200 1 314 1 350 1 329 1 10 1 156 1 269 1 
285 1 33 1 11 1 
156 1 29 1 
17 1 20 1 174 1 315 1 
200 1 314 1 33 1 142 1 350 1 329 1 10 1 269 1 11 1 
200 1 314 1 33 1 142 1 350 1 329 1 10 1 30 1 269 1 11 1 
200 1 314 1 17 1 350 1 329 1 174 1 10 1 315 1 269 1 
313 1 109 1 200 3 314 3 243 1 128 1 350 3 329 3 10 3 260 1 156 1 269 1 
0 1 75 1 147 1 58 1 244 1 318 1 277 1 
0 1 75 1 147 1 58 1 318 1 244 1 349 1 18 1 222 1 291 1 131 1 277 1 
65 1 66 1 27 1 354 1 273 1 292 1 97 1 157 1 137 1 164 1 63 1 
0 1 75 1 43 1 244 2 238 1 79 1 157 1 63 1 66 1 27 1 354 1 210 1 273 1 292 1 277 2 164 1 133 1 242 1 
0 1 238 1 157 2 63 3 66 1 292 1 164 1 242 2 262 1 75 2 24 1 345 1 43 2 7 1 244 2 79 1 46 1 27 1 210 1 354 1 213 1 133 1 277 2 
0 1 238 1 157 2 63 3 66 2 292 2 164 2 242 2 262 1 75 2 24 1 345 1 43 2 7 1 244 2 79 1 46 1 27 1 210 1 354 1 301 1 213 1 132 1 277 2 
3 1 155 1 157 1 63 4 66 3 201 1 292 3 258 2 164 3 242 1 262 1 24 1 206 1 100 1 271 1 27 1 252 1 354 1 273 1 231 1 213 1 132 1 233 2 
262 1 3 1 24 1 206 1 155 1 157 1 63 4 271 1 66 3 201 1 27 1 273 1 354 1 189 1 231 1 292 3 258 2 213 1 132 1 164 3 242 1 233 2 
66 1 27 1 354 1 292 1 164 1 311 1 
56 1 237 1 59 1 62 1 157 2 63 3 66 6 160 1 292 6 164 5 242 1 205 1 343 1 225 1 266 1 27 2 354 3 273 2 194 1 54 1 
17 1 154 1 179 2 238 1 329 2 157 1 63 1 36 1 333 2 66 1 336 1 314 2 200 2 338 1 292 1 315 1 122 1 164 1 242 1 75 1 346 1 43 1 245 1 244 2 350 2 266 1 9 1 79 1 10 2 27 1 354 1 210 1 174 1 277 2 133 1 
3 1 307 1 255 2 258 3 315 1 317 1 263 1 43 1 265 1 226 1 11 2 271 1 46 1 189 1 273 1 48 1 190 2 231 1 51 1 277 1 233 3 278 1 326 1 234 4 17 1 238 1 155 2 63 2 66 1 239 1 285 1 287 1 286 1 201 1 20 1 241 2 292 1 203 4 163 1 164 1 23 1 75 1 244 1 206 1 353 2 173 2 130 2 
206 1 266 1 254 1 62 1 157 1 63 2 311 1 66 2 27 1 354 2 292 2 164 2 242 1 
266 1 90 1 137 1 157 1 63 1 65 1 66 4 27 1 354 1 273 1 292 4 132 1 164 4 
217 1 24 1 225 1 59 1 157 1 63 1 81 1 66 2 27 1 354 2 292 2 164 2 40 1 242 1 
282 1 66 1 32 1 283 1 27 1 354 1 273 1 292 1 113 1 164 1 
205 1 216 1 266 1 157 1 63 1 66 2 27 1 354 1 292 2 164 2 54 1 
205 1 56 1 24 1 266 1 90 1 137 1 157 2 63 3 65 1 66 5 27 2 273 1 354 2 292 5 194 1 164 4 
205 1 56 1 24 1 266 1 298 1 90 1 137 1 157 2 63 3 65 1 66 5 27 2 273 1 354 2 292 5 164 4 
0 1 75 1 43 1 244 2 238 1 79 1 157 1 63 1 66 1 27 1 354 1 210 1 273 1 301 1 292 1 277 2 164 1 242 1 
24 1 225 1 237 1 59 1 62 1 157 1 63 1 66 1 27 1 354 2 292 1 164 1 242 1 
220 1 75 1 197 1 244 1 143 1 247 1 267 1 176 1 277 1 
220 1 141 1 331 1 
0 1 107 1 220 1 143 1 247 1 
0 1 107 2 3 1 345 1 7 1 8 1 247 2 331 1 280 1 271 1 220 1 251 1 46 1 287 1 141 1 231 1 258 2 143 2 233 2 
96 1 118 1 97 1 212 1 
341 1 96 1 118 1 290 1 288 1 212 1 145 1 
327 1 300 1 290 1 
341 1 96 1 296 1 77 1 150 2 118 1 211 1 288 1 290 3 121 1 212 1 145 3 
341 1 96 1 166 1 118 1 290 2 288 1 212 1 195 1 145 2 
341 1 32 1 135 1 250 1 283 1 288 1 290 1 202 1 121 1 212 1 145 1 
341 1 96 1 290 1 288 1 121 1 212 1 145 1 
341 1 96 2 118 1 290 1 288 1 121 1 145 1 
341 2 2 1 96 1 12 1 288 2 290 2 121 1 212 1 39 1 145 2 
146 1 341 1 96 1 224 1 114 1 250 1 118 1 288 1 290 3 121 1 212 2 195 2 145 3 
341 1 32 1 96 1 135 1 282 1 283 2 118 1 127 1 288 1 290 2 121 1 72 1 212 1 195 1 145 2 
340 1 341 2 96 1 166 1 224 1 250 1 118 1 288 2 290 4 121 1 212 2 195 2 145 4 
341 1 96 1 118 1 290 1 288 1 121 1 212 1 145 1 
341 1 96 2 224 1 296 1 77 1 250 1 150 1 118 2 47 1 290 4 288 1 212 3 195 2 145 4 
221 1 341 1 96 1 118 1 295 1 290 2 288 1 121 1 212 1 195 1 35 1 145 2 
341 1 150 2 96 1 118 1 296 1 290 3 288 1 77 2 121 1 330 1 212 1 145 3 
240 1 227 1 212 2 268 2 
341 1 183 1 290 1 288 1 121 1 145 1 
146 1 341 1 96 1 118 1 290 2 288 1 121 1 212 1 195 1 145 2 
89 1 
341 1 96 1 118 1 290 1 288 1 121 1 212 1 145 1 
146 1 341 1 150 1 96 1 118 1 290 3 288 1 121 1 212 1 195 1 145 3 
250 1 224 1 47 1 212 1 
96 1 212 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 18 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 32 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 45 39 5 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 45 39 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 91 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 14 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 208 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 208 154 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) (44,235) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (44,235) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) (44,235) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (22,193,232,268) (22,193,232,268) (22,193,232,268) 179 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 42 65 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 131 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 131 107 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.IllegalArgumentException 178 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.IllegalArgumentException 178 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 120 170 163 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 131 107 253 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 131 107 253 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 35 127 30 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 138 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 136 (54,213) 57 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 37 226 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (51,153) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 45 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 186 23 104 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 186 23 104 254 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (8,38) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (161,222) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 35 127 30 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1394 | 1 -> -1
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1501 | = null
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration; | RETURN | 694 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 2635 | if (x) -> if (!x)
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 729 | = null
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3837 | 0 -> -1
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONDITION | 474 | if (x) -> if (!x)

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
138 1 
63 1 151 1 6 1 132 1 117 1 118 1 186 1 19 1 75 1 99 1 233 1 124 1 
63 1 151 1 6 2 132 1 197 1 117 1 118 1 188 1 231 1 19 2 75 1 99 1 233 1 
29 1 19 1 6 1 
29 1 19 1 6 1 
19 1 6 1 
29 1 19 1 6 1 
29 1 19 1 6 1 
95 1 27 1 29 1 81 1 19 2 6 2 141 1 
138 1 115 1 
63 2 48 1 151 2 197 1 115 2 73 1 188 1 231 1 233 2 
230 1 98 1 180 1 
63 1 89 1 62 1 238 1 108 2 109 1 110 2 113 1 182 1 115 1 116 2 16 1 137 1 74 1 233 1 206 1 220 1 140 1 222 1 
63 5 48 1 151 5 197 4 115 1 199 2 186 1 188 1 231 4 233 5 100 1 269 1 23 1 78 1 
168 1 117 1 243 1 63 2 151 2 231 2 233 2 197 2 
89 1 63 2 62 1 238 1 108 1 109 1 151 1 180 1 110 1 113 1 197 1 199 1 116 1 16 1 231 1 206 1 220 1 233 2 78 1 222 1 
63 3 188 1 151 3 231 3 233 3 115 1 197 3 199 1 
117 1 243 1 63 1 151 1 231 1 233 1 197 1 
117 1 63 1 48 1 73 1 151 1 188 1 231 1 233 1 197 1 
63 2 48 1 151 2 6 1 132 1 197 2 199 1 117 1 118 1 188 1 19 1 231 2 18 1 139 1 75 1 99 1 233 2 78 1 
63 2 186 1 151 2 231 1 233 2 115 1 197 1 23 1 199 1 
63 1 151 1 32 1 6 1 132 1 197 1 199 1 117 1 118 1 19 1 231 1 139 1 75 1 99 1 233 1 78 1 
48 1 63 2 151 2 180 1 197 2 199 1 230 1 188 1 231 2 233 2 
63 1 62 1 89 1 238 1 108 1 109 1 110 1 113 1 115 1 116 1 16 1 233 1 220 1 206 1 222 1 
63 1 89 1 238 1 108 1 109 1 110 1 113 1 115 1 116 1 156 1 38 1 16 1 233 1 220 1 206 1 
150 1 2 1 180 2 83 1 114 1 53 1 242 1 187 1 160 1 251 1 123 1 221 1 67 4 33 2 92 1 198 1 260 1 70 1 40 2 263 1 230 2 98 2 177 2 46 1 
117 1 63 1 168 1 151 1 231 1 233 1 132 1 197 1 
176 1 47 1 
176 1 47 1 
176 1 194 1 47 1 236 1 
176 1 194 1 47 1 236 1 
194 1 236 1 
173 1 176 1 47 1 
173 1 176 1 47 1 
122 1 194 1 176 2 24 1 47 2 236 1 
176 1 9 1 47 1 
173 1 176 1 47 1 
169 1 176 1 47 1 
169 1 176 1 47 1 
169 1 176 1 47 1 
39 1 19 1 5 1 6 1 45 1 176 1 270 1 47 1 271 1 
39 1 45 1 176 1 270 1 47 1 271 1 
211 1 266 1 218 1 
266 1 218 1 68 1 
216 1 211 2 149 1 129 1 218 3 68 1 
216 1 211 1 129 1 218 2 68 1 11 1 
216 2 211 1 129 1 218 2 68 1 
29 1 19 1 6 1 91 1 
14 1 29 2 264 1 19 2 6 2 36 1 
27 1 192 1 29 1 81 1 152 1 6 2 172 1 95 1 19 2 141 1 208 1 125 1 
27 1 192 1 152 1 81 1 6 1 154 1 172 1 95 1 19 1 141 1 208 1 125 1 
16 1 138 1 59 1 
16 1 259 1 
128 1 
16 1 109 1 206 1 
16 1 262 1 
16 1 109 1 
16 3 109 1 258 1 206 1 59 2 183 1 
90 1 165 1 145 1 150 2 237 1 1 1 225 1 4 1 67 7 33 3 92 1 84 2 13 1 135 1 40 4 251 1 46 3 
90 1 165 1 145 1 150 2 237 1 1 1 225 1 4 1 67 7 33 3 92 1 84 2 13 1 135 1 40 4 251 1 46 3 
90 1 165 1 145 1 150 2 237 1 1 1 225 1 4 1 67 7 33 3 92 1 84 2 13 1 135 1 40 4 251 1 86 1 46 3 
145 2 147 4 237 2 150 5 1 1 4 1 114 1 53 1 84 3 13 2 160 1 251 4 162 3 123 3 165 2 90 5 225 1 67 31 33 15 93 1 92 4 260 1 261 1 201 3 37 1 203 1 70 3 134 1 135 1 40 16 175 1 177 2 103 1 46 10 
145 1 237 1 150 3 212 1 1 1 4 1 114 2 10 1 53 2 84 2 13 1 160 2 251 1 90 1 165 1 67 9 33 4 92 1 260 2 135 1 40 5 175 1 177 4 46 4 
179 1 232 1 193 1 22 1 191 1 
232 1 44 1 193 1 22 1 191 1 
232 1 268 1 235 1 191 1 
232 1 44 1 193 1 22 1 191 1 
179 1 232 1 193 1 22 1 191 1 
69 1 
223 1 238 1 27 1 108 1 192 1 65 1 110 1 6 1 116 1 172 1 95 1 42 1 19 1 141 1 
63 1 151 1 6 2 181 1 131 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 102 1 124 1 
63 1 151 1 6 2 181 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 58 1 102 1 124 1 
107 1 63 1 151 1 6 2 181 1 131 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 102 1 124 1 
19 1 6 1 
151 1 6 2 181 1 117 1 246 1 118 1 15 1 119 1 186 1 120 1 19 2 20 1 124 1 63 1 223 1 28 1 27 1 192 1 132 1 204 1 95 1 229 1 76 1 75 1 99 1 233 1 102 1 141 1 
63 1 178 1 151 1 6 2 181 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 102 1 124 1 
63 1 178 1 151 1 6 2 181 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 102 1 124 1 
151 1 6 2 181 1 117 1 246 1 118 1 15 1 186 1 119 1 120 1 19 2 124 1 163 1 63 1 223 1 28 1 27 1 192 1 132 1 170 1 204 1 95 1 265 1 76 1 75 1 99 1 233 1 102 1 141 1 209 1 143 1 
107 1 63 1 151 1 6 2 181 1 131 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 253 1 102 1 124 1 
107 1 63 1 151 1 6 2 181 1 131 1 132 1 117 1 246 1 118 1 119 1 204 1 186 1 19 2 75 1 99 1 233 1 253 1 102 1 124 1 
151 1 6 2 181 1 117 1 246 1 118 1 15 1 119 1 186 1 120 1 19 2 124 1 63 1 223 1 28 1 27 1 192 1 132 1 204 1 95 1 265 1 75 1 76 1 99 1 233 1 102 1 141 1 209 1 
150 2 1 1 4 1 180 1 114 1 115 2 53 1 242 1 84 1 13 1 160 1 251 1 165 1 67 6 33 3 198 1 92 1 260 1 135 1 40 3 263 1 230 1 138 1 98 1 177 2 46 2 
0 1 147 3 150 1 3 1 180 11 114 2 115 1 53 2 242 1 248 1 219 1 160 2 251 1 162 2 123 1 90 1 31 1 67 14 33 6 92 2 260 2 228 1 37 1 201 3 70 2 40 8 263 2 267 1 230 4 98 11 177 4 103 1 46 2 
0 1 238 1 108 1 109 1 151 1 110 1 113 1 114 1 115 1 116 1 53 1 242 1 245 1 248 1 16 1 219 1 160 1 220 1 25 1 222 1 89 1 62 1 63 2 166 1 67 2 33 1 197 1 260 1 199 1 40 1 263 1 230 1 231 1 74 1 206 1 233 2 177 2 78 1 
0 1 150 4 1 1 4 1 151 1 213 2 84 1 13 1 219 1 16 2 160 3 220 2 162 2 222 2 165 1 89 2 90 4 26 1 33 10 92 3 227 2 96 1 40 10 230 7 231 1 98 7 233 3 177 6 46 8 238 1 108 3 109 2 110 3 180 7 113 2 114 3 115 2 116 3 53 3 242 3 248 1 251 3 189 2 252 2 123 2 63 3 62 2 256 1 130 2 67 20 197 1 199 1 260 3 70 2 135 1 263 3 206 2 207 1 78 1 
0 1 238 2 79 1 108 5 151 1 109 2 110 6 113 2 114 2 116 6 53 2 242 2 155 1 157 1 217 1 16 3 249 1 219 1 160 2 220 2 63 1 127 1 30 1 67 2 35 1 33 1 198 1 197 1 199 1 260 2 200 1 94 1 40 1 263 2 231 1 233 1 140 1 207 1 177 4 
63 1 48 1 202 1 151 1 188 1 231 1 233 1 197 1 
90 1 180 1 67 2 114 1 198 1 92 1 260 1 53 1 242 1 70 1 40 2 263 1 230 1 98 1 160 1 221 1 177 2 46 1 
150 1 180 1 67 2 114 1 33 2 198 1 260 1 53 1 242 1 263 1 230 1 187 1 98 1 160 1 251 1 123 1 177 2 46 1 
150 1 180 2 114 1 53 1 242 1 160 1 251 1 162 1 123 1 90 1 67 4 33 2 92 1 198 1 260 1 70 1 40 2 263 1 230 2 98 2 177 2 46 2 
90 1 180 1 67 2 114 1 92 1 260 1 53 1 242 1 70 1 40 2 263 1 230 1 249 1 98 1 160 1 221 1 177 2 46 1 
150 1 180 1 67 2 114 1 33 2 260 1 53 1 242 1 263 1 230 1 249 1 187 1 98 1 160 1 251 1 123 1 177 2 46 1 
150 1 180 2 114 1 53 1 242 1 249 1 160 1 251 1 162 1 123 1 90 1 67 4 33 2 92 1 260 1 70 1 40 2 263 1 230 2 98 2 177 2 46 2 
150 1 180 2 114 1 53 1 242 1 160 1 251 1 162 1 123 1 90 1 67 4 33 2 92 1 260 1 70 1 40 2 263 1 230 2 98 2 177 2 46 2 
0 1 238 1 108 1 109 1 110 1 113 1 114 1 115 1 116 1 53 1 242 1 16 1 219 1 160 1 220 1 222 1 89 1 62 1 63 1 67 2 33 1 227 1 260 1 40 1 263 1 206 1 233 1 177 2 
0 1 238 1 108 1 109 1 110 1 113 1 114 1 115 1 116 1 53 1 242 1 156 1 16 1 219 1 160 1 220 1 89 1 63 1 67 2 33 1 260 1 38 1 40 1 263 1 174 1 206 1 233 1 177 2 
150 1 180 2 114 1 53 1 242 1 248 1 160 1 251 1 162 1 123 1 90 1 67 4 33 2 92 1 260 1 70 1 40 2 263 1 230 2 98 2 177 2 46 2 
150 1 108 1 109 1 180 2 110 1 113 1 114 1 116 1 53 1 242 1 16 1 160 1 251 1 189 1 123 1 220 1 162 1 222 1 90 1 89 1 62 1 63 1 67 4 33 2 92 1 227 1 260 1 70 1 94 1 40 2 263 1 230 2 98 2 206 1 233 1 177 2 46 2 
48 1 151 1 180 1 114 1 53 1 242 1 244 1 248 1 188 1 160 1 251 1 123 1 162 1 90 1 63 1 67 3 33 1 197 1 92 1 260 1 70 1 40 2 263 1 230 1 231 1 98 1 233 1 177 2 46 1 
210 1 147 4 150 1 239 2 82 1 241 1 114 2 10 1 53 2 158 1 185 1 17 1 160 2 251 4 162 4 123 4 60 1 88 1 126 1 90 3 167 3 195 1 67 31 34 1 33 16 226 1 92 4 260 2 37 3 201 3 70 4 40 15 43 1 177 4 103 1 46 4 
210 1 147 4 150 2 239 2 82 1 241 1 114 3 10 1 53 3 158 1 185 1 17 1 160 3 251 3 162 4 123 3 60 1 88 1 126 1 90 3 167 4 195 1 67 32 34 1 33 15 226 1 92 4 260 3 37 3 201 3 70 4 40 17 43 1 175 1 177 6 103 1 46 5 
210 1 147 4 150 8 1 1 4 1 239 1 241 1 114 3 10 1 53 3 84 1 13 1 158 1 185 1 17 1 160 3 251 8 162 7 123 7 60 1 88 1 126 1 165 1 90 7 167 4 67 53 34 1 33 26 226 1 92 8 260 3 37 2 201 4 70 7 135 1 40 27 267 2 43 1 175 2 177 6 103 2 46 15 
147 2 150 3 239 1 241 1 114 2 10 1 53 2 158 1 185 1 160 2 251 3 162 3 123 3 60 2 126 1 90 3 167 2 195 1 67 19 33 10 92 3 260 2 37 1 201 1 70 3 71 1 40 9 177 4 103 1 46 6 
210 1 147 2 239 2 241 1 114 2 10 1 53 2 158 1 185 2 17 1 160 2 251 2 162 3 123 2 60 1 88 1 126 1 90 1 167 3 67 23 34 1 33 10 226 1 92 3 260 2 37 2 201 2 70 3 40 13 43 1 175 1 177 4 46 1 
0 1 148 1 79 1 108 2 109 1 151 2 240 1 214 1 110 2 113 1 114 1 116 2 53 1 12 1 242 1 248 1 16 1 219 1 160 1 220 1 87 1 63 2 67 2 35 1 33 1 260 1 40 1 263 1 233 2 140 2 177 2 
49 1 211 1 149 1 108 2 66 1 110 2 112 1 113 1 68 1 116 2 94 1 55 1 266 1 218 2 121 1 220 1 207 1 234 1 190 1 
49 1 211 1 149 1 108 1 66 1 110 1 112 1 113 1 196 1 68 1 116 1 55 1 266 1 218 2 220 1 207 1 190 1 
238 1 108 1 109 1 257 1 66 1 110 1 113 1 116 1 200 1 155 1 16 1 220 1 234 1 61 1 
49 1 211 1 149 1 108 1 66 1 110 1 112 1 113 1 68 1 116 1 55 1 266 1 218 2 121 1 220 1 207 1 234 1 190 1 
7 1 
138 1 51 1 76 1 153 1 
223 1 95 1 27 1 229 1 192 1 76 1 20 1 141 1 
223 1 238 1 27 1 108 1 192 1 109 1 258 1 110 1 259 1 113 1 116 1 54 1 136 1 172 1 95 1 16 2 57 1 220 2 206 1 141 1 164 1 
147 1 223 1 95 1 27 1 192 1 76 1 141 1 226 1 201 1 37 1 
165 1 223 1 27 1 192 1 111 1 6 1 92 2 13 1 135 1 95 1 85 1 19 1 251 1 76 2 101 2 141 1 105 1 
223 1 95 1 27 1 51 1 76 1 141 1 
70 1 192 1 251 1 76 1 123 1 162 1 92 1 
238 1 108 1 110 1 116 1 
223 1 172 1 50 1 95 1 27 1 192 1 76 1 141 1 
45 1 271 1 
45 1 271 1 
45 1 271 1 
45 1 271 1 
45 1 271 1 
45 1 271 1 
45 1 271 1 
45 1 271 1 
176 1 47 1 
147 1 150 2 1 1 4 1 114 1 10 1 53 1 84 1 13 1 160 1 251 1 165 1 67 8 33 4 92 1 226 1 260 1 201 1 37 1 135 1 40 4 177 2 46 2 
147 2 150 2 1 1 4 1 52 1 114 2 10 1 53 2 84 1 13 1 160 2 251 1 162 1 165 1 90 1 67 11 33 5 226 1 92 2 260 2 37 1 201 1 70 1 135 1 40 6 177 4 103 1 46 3 
147 1 210 1 52 1 114 2 10 1 53 2 17 1 160 2 251 2 162 2 123 2 88 1 90 1 67 12 33 6 226 1 92 2 260 2 201 1 37 1 70 2 40 6 43 1 177 4 46 1 
210 1 147 1 150 2 52 1 114 4 10 1 53 4 17 1 160 4 251 1 162 2 123 1 88 1 90 1 67 12 33 5 226 1 92 2 260 4 201 1 37 1 70 2 40 7 43 1 175 2 177 8 46 3 
147 1 150 2 1 1 4 1 114 1 10 1 53 1 84 1 13 1 160 1 251 1 165 1 67 8 33 4 92 1 226 1 260 1 201 1 37 1 135 1 40 4 177 2 46 2 
210 1 147 1 150 2 114 2 10 1 53 2 17 1 160 2 251 2 162 2 123 2 88 1 90 1 67 13 33 7 226 1 92 2 260 2 201 1 37 1 70 2 40 6 43 1 175 1 177 4 46 3 
147 1 210 1 52 1 114 3 10 1 53 3 17 1 160 3 251 1 162 2 123 1 88 1 90 1 67 11 33 4 226 1 92 2 260 3 37 1 201 1 70 2 40 7 43 1 175 1 177 6 46 1 
210 1 147 1 150 1 114 3 10 1 53 3 17 1 160 3 251 1 162 2 123 1 88 1 90 2 67 11 195 1 33 4 226 1 92 2 260 3 37 1 201 1 70 2 40 7 43 1 175 1 177 6 46 3 
165 3 90 3 150 3 1 2 4 1 67 7 33 4 92 1 13 3 135 1 40 3 251 1 46 6 
147 1 210 1 114 3 10 1 53 3 17 1 160 3 251 1 162 2 123 1 88 1 90 1 67 11 195 1 33 4 226 1 92 2 260 3 37 1 201 1 70 2 40 7 43 1 175 1 177 6 46 1 
90 1 165 1 150 2 1 1 4 1 67 8 33 4 114 2 92 1 260 2 53 2 84 1 13 1 135 1 40 4 160 2 251 1 175 1 177 4 46 3 
165 1 135 1 40 3 150 2 1 1 4 1 138 1 251 1 67 6 33 3 92 1 46 2 84 1 13 1 
90 1 150 1 52 1 67 4 33 2 114 1 92 1 260 1 53 1 70 1 40 2 160 1 251 1 123 1 162 1 177 2 46 2 
90 1 147 2 150 1 67 7 33 4 92 1 37 1 201 1 70 1 40 3 251 1 123 1 162 1 103 1 46 2 
147 2 150 5 1 1 4 1 114 2 53 2 84 1 13 2 160 2 251 3 162 2 123 2 165 2 90 4 31 1 67 23 33 12 92 3 260 2 201 2 70 2 135 1 40 11 267 1 175 2 77 1 103 1 177 4 46 9 
147 1 67 1 33 1 
40 1 67 1 201 1 
90 1 150 2 130 1 52 1 67 6 114 1 33 3 92 1 53 1 260 1 70 1 40 3 160 1 251 1 162 1 123 1 177 2 46 3 
210 1 147 1 150 2 114 2 10 1 53 2 17 1 160 2 251 2 162 2 123 2 88 1 90 1 67 13 33 7 226 1 92 2 260 2 201 1 37 1 70 2 40 6 43 1 175 1 177 4 46 3 
165 1 90 1 150 1 67 6 33 3 92 1 13 1 135 1 40 3 251 1 46 2 
90 1 165 1 150 1 1 1 4 1 67 3 33 2 114 1 260 1 53 1 13 1 40 1 160 1 175 1 77 1 177 2 46 2 
165 2 90 2 150 3 67 10 114 1 33 5 10 1 92 2 53 1 260 1 13 2 135 1 40 5 85 1 160 1 251 2 177 2 46 5 
90 1 67 2 114 1 10 1 92 1 260 1 53 1 70 1 40 2 160 1 177 2 46 1 
90 1 150 1 67 4 33 2 114 1 10 1 92 1 260 1 53 1 70 1 40 2 160 1 251 1 123 1 162 1 177 2 46 2 
165 1 90 1 150 1 195 1 67 3 33 2 114 3 10 1 260 3 53 3 13 1 40 1 160 3 175 1 77 1 177 6 46 2 
147 4 150 7 1 1 4 1 52 1 114 5 10 1 53 5 84 1 13 3 160 5 251 5 162 3 123 3 165 3 90 5 195 1 67 34 33 18 93 1 92 5 260 5 261 1 37 1 201 3 134 1 70 3 135 2 40 16 175 2 77 1 177 10 103 1 46 12 
186 1 23 1 104 1 
146 1 255 1 186 1 224 1 23 1 254 1 104 1 106 1 
155 1 238 1 108 1 16 1 109 1 138 1 110 1 220 1 113 1 116 1 200 1 
89 1 63 2 238 1 108 1 109 1 151 1 110 1 113 1 115 1 197 1 199 1 116 1 16 1 231 1 206 1 220 1 233 2 222 1 
108 1 151 2 109 2 110 1 113 1 115 1 116 1 117 1 118 1 247 1 16 3 220 1 222 1 63 2 89 1 132 1 197 1 199 1 262 1 41 1 231 2 233 2 206 2 
108 2 151 2 109 2 110 2 113 1 115 1 116 2 117 1 118 1 247 1 16 3 220 1 63 2 89 1 64 1 132 1 197 1 199 1 262 1 38 1 41 1 231 2 233 2 206 2 
41 1 108 1 16 1 19 1 110 1 259 1 6 1 8 1 116 1 
41 1 108 1 16 1 19 1 110 1 259 1 161 1 6 1 116 1 
157 1 
127 1 238 2 108 4 109 2 30 1 258 1 110 5 113 2 35 1 116 5 94 1 157 1 217 1 159 1 16 3 206 1 220 3 207 1 142 1 144 1 
150 2 1 1 108 1 4 1 109 1 151 1 213 1 240 1 180 1 110 1 113 1 114 2 115 2 53 2 116 1 84 1 242 2 13 1 248 1 16 1 160 2 251 1 189 1 220 1 222 1 165 1 89 1 63 2 62 1 67 6 33 3 92 1 197 1 260 2 199 1 227 1 135 1 94 1 40 3 263 2 230 1 98 1 231 1 206 1 233 2 177 4 46 2 
29 1 19 1 6 1 
157 1 
64 1 238 1 108 4 109 1 110 4 113 1 116 4 200 1 155 1 94 1 97 1 16 1 220 1 
108 2 80 1 109 1 110 2 113 1 133 1 116 2 41 1 96 1 159 1 16 1 206 1 220 2 144 1 
238 1 108 1 266 1 218 1 110 1 220 1 113 1 68 1 190 1 116 1 
108 2 109 1 110 2 113 1 35 1 116 2 12 1 94 1 16 1 220 1 207 1 
127 1 238 1 108 4 109 2 110 5 113 2 35 1 116 5 200 1 155 1 94 1 97 1 41 1 217 1 16 3 220 2 
238 1 108 4 109 2 110 5 113 2 35 1 116 5 200 1 155 1 94 1 171 1 97 1 41 1 217 1 16 3 220 2 
89 1 63 2 238 1 108 1 109 1 151 1 110 1 113 1 115 1 197 1 199 1 116 1 38 1 16 1 231 1 206 1 220 1 233 2 
108 1 109 1 258 1 110 1 113 1 116 1 41 1 159 1 16 1 206 1 220 2 142 1 144 1 
63 1 72 1 148 1 151 1 214 1 250 1 205 1 233 1 87 1 
72 1 184 1 215 1 
72 1 56 1 250 1 205 1 115 1 
29 1 6 2 132 1 184 1 115 1 215 1 117 1 118 1 72 1 56 2 19 2 250 2 139 1 75 1 99 1 205 2 21 1 

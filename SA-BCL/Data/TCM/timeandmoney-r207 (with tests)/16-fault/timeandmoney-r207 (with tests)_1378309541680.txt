#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 13 (50,254) 209 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 13 127 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 13 (50,254) 209 298 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 13 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 310 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,113,244) (2,108,126) (2,108,126) (2,108,126) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,113,244) (2,108,126) (2,108,126) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (59,113,244) (2,108,126) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (185,202) (236,313) (236,313) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,113,244) (2,108,126) (2,108,126) (2,108,126) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 284 69 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 13 127 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 322 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 13 (50,254) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 310 168 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 13 (50,254) (50,254) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 200 106 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 194 294 218 10 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 194 294 218 10 192 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (59,113,244) (59,113,244) (59,113,244) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (59,113,244) (59,113,244) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (185,202) (185,202) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (59,113,244) (59,113,244) (59,113,244) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 42 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 100 152 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 13 (50,254) 209 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 175 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 255 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2279 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 838 | = null
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4814 | stmt -> ;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | OPERATOR | 5778 | == -> >=
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | ASSIGN | 1902 | = null
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
118 1 84 2 172 1 179 1 15 1 259 2 178 2 263 3 216 9 18 6 308 2 21 2 23 4 25 1 137 1 138 1 276 1 278 2 34 5 191 1 104 1 147 1 148 1 193 1 39 1 241 2 197 9 326 1 
118 1 84 2 172 1 179 1 15 1 178 2 259 2 263 3 216 9 18 6 308 2 21 2 23 4 25 1 137 1 138 1 276 1 278 2 34 5 191 1 104 1 147 1 148 1 193 1 39 1 241 2 197 9 326 1 
118 1 84 2 172 1 179 1 15 1 178 2 259 2 263 4 216 10 18 7 308 2 21 2 23 5 25 1 137 1 138 1 276 1 278 2 34 6 191 1 104 1 147 1 148 1 193 1 39 1 241 2 197 10 326 1 
118 1 84 2 172 1 179 1 15 1 178 2 259 1 263 2 216 7 18 4 308 2 21 2 23 3 25 1 137 1 138 1 278 2 34 4 191 1 104 1 147 1 148 1 193 1 39 1 241 2 197 7 326 1 
23 2 137 1 84 1 276 1 278 1 34 3 104 1 147 1 179 1 178 1 259 2 15 1 241 1 263 1 197 4 216 4 18 3 21 1 
138 1 137 1 25 1 139 1 84 1 278 1 143 1 279 1 34 1 147 1 179 1 178 1 197 2 216 2 308 1 21 1 
23 1 137 1 84 2 34 2 147 1 179 1 197 3 263 1 216 3 326 1 18 1 308 1 21 2 
84 2 177 1 179 1 259 2 15 1 178 1 263 3 216 9 18 7 308 1 21 2 23 4 137 1 275 1 278 1 276 1 34 5 191 1 104 1 147 1 193 1 241 1 197 9 326 1 
84 2 177 1 179 1 259 2 15 1 178 1 263 3 216 9 18 7 308 1 21 2 23 4 137 1 275 1 278 1 276 1 34 5 191 1 104 1 147 1 193 1 241 1 197 9 326 1 
318 1 85 1 175 1 
305 1 85 1 8 2 
180 2 229 2 163 1 129 2 264 1 83 2 71 2 301 2 
229 1 163 1 50 1 164 1 83 1 209 1 301 1 13 1 109 1 180 1 89 1 129 1 201 2 71 1 311 1 
210 1 180 1 229 1 163 1 129 1 83 1 71 1 145 1 301 1 125 1 
22 1 272 1 116 1 318 1 83 1 85 1 173 1 256 1 301 1 125 1 180 1 55 1 153 1 93 1 
22 1 229 1 272 1 116 2 318 1 83 1 85 1 173 1 256 1 301 1 125 1 180 1 129 1 55 2 71 1 
116 1 215 1 55 1 297 1 144 1 
229 1 116 2 163 1 83 1 318 1 297 1 145 1 85 1 299 1 301 1 125 1 176 1 210 1 180 1 40 1 215 1 129 1 55 2 71 1 
116 1 55 1 297 1 
116 1 229 1 163 1 83 1 145 1 301 1 125 1 176 1 210 1 180 1 215 1 129 1 55 1 71 1 
85 1 
229 1 116 2 163 1 83 1 318 1 297 1 145 1 85 1 299 1 301 1 125 1 176 1 210 1 180 1 215 1 129 1 55 2 71 1 184 1 
78 2 1 2 116 5 163 1 52 1 165 1 83 1 297 2 85 2 299 1 301 1 125 1 176 1 302 1 210 1 211 1 303 2 180 1 215 2 129 1 131 2 55 5 57 5 267 1 134 1 229 1 188 1 315 4 318 2 145 1 237 1 323 1 36 1 195 1 239 2 196 2 71 1 204 1 
264 1 175 1 
0 1 226 1 229 1 83 2 301 2 125 1 180 2 129 1 264 1 71 1 74 1 
62 1 182 1 171 1 
127 1 13 1 109 1 201 1 
160 1 13 1 228 1 109 1 180 1 229 1 129 1 201 1 83 1 301 1 
226 1 160 1 228 2 229 4 29 1 83 5 33 1 301 5 180 5 68 1 129 4 264 1 71 1 93 1 
210 1 180 2 229 2 70 1 129 2 83 2 301 2 125 1 
228 1 180 3 229 3 129 3 264 1 83 3 71 1 301 3 
210 1 180 1 229 1 129 1 83 1 301 1 125 1 
226 1 0 1 229 1 83 1 301 1 125 1 180 1 129 1 71 1 
22 1 160 1 226 1 228 1 48 1 116 1 272 1 229 3 163 1 50 1 83 3 209 1 256 1 298 1 173 1 301 3 125 1 13 1 109 1 180 3 129 3 55 1 201 1 71 2 
228 1 180 2 229 1 129 1 264 1 83 2 93 1 33 1 301 2 
22 1 226 1 160 1 228 2 48 1 116 1 272 1 229 3 83 3 85 1 173 1 256 1 301 3 125 1 180 3 213 1 129 3 55 1 71 1 
226 1 228 1 180 2 229 2 129 2 182 1 83 2 71 1 171 1 301 2 
13 1 109 1 201 1 
109 1 201 1 310 1 
62 1 117 1 5 1 207 1 167 2 169 1 171 1 235 2 234 1 170 1 103 1 107 1 239 1 110 1 217 1 182 1 265 1 75 1 312 2 
180 1 229 1 70 1 129 1 83 1 256 1 301 1 125 1 
260 1 124 1 
260 1 124 1 
306 1 329 1 
306 1 329 1 
306 1 329 1 
260 1 105 1 124 1 
260 1 105 1 124 1 
260 1 16 1 124 1 
260 2 4 1 306 1 329 1 291 1 124 2 
260 1 105 1 124 1 
260 1 61 1 124 1 
260 1 61 1 124 1 
260 1 61 1 124 1 
116 1 252 1 83 2 174 1 9 1 258 1 301 2 124 1 260 1 180 2 129 2 264 1 55 1 16 1 132 1 220 1 219 1 271 1 225 1 227 1 229 2 30 1 320 1 287 1 
45 1 116 2 163 1 251 1 119 1 166 1 83 1 85 1 301 1 174 2 258 1 9 2 125 1 124 2 176 1 210 1 180 1 260 2 129 1 55 2 227 2 60 1 229 1 190 1 97 1 145 1 320 2 280 1 71 1 287 2 292 1 
178 1 241 1 278 1 
178 1 278 1 143 1 
224 1 178 3 241 2 243 1 81 1 143 1 
178 2 241 1 243 1 81 1 143 1 183 1 
178 2 241 1 81 1 243 2 143 1 
1 1 116 5 252 1 297 1 170 1 8 3 123 1 85 2 299 1 87 2 303 1 215 4 305 1 131 1 55 5 307 1 56 1 219 1 57 2 268 1 225 1 188 1 315 3 318 1 239 1 240 2 196 1 282 1 198 2 149 1 327 1 154 1 
293 1 116 9 1 2 249 1 296 1 297 6 170 3 8 9 85 5 299 1 303 2 215 7 305 3 55 9 131 2 307 3 57 6 267 1 268 2 225 4 188 1 315 8 96 1 31 1 318 1 144 5 239 3 240 6 196 3 198 6 149 3 285 1 288 5 327 1 154 2 
1 1 116 3 170 1 85 3 123 1 8 4 87 1 303 1 215 2 305 2 131 1 55 3 56 1 307 1 57 2 267 1 268 1 225 1 315 3 318 1 239 1 196 1 240 2 149 1 198 2 154 1 
293 1 1 1 116 4 296 1 170 2 85 4 8 7 123 1 87 2 303 1 215 3 305 3 131 1 55 4 56 1 307 2 57 4 267 1 268 1 225 2 315 5 96 1 318 1 239 2 240 4 196 2 198 4 149 2 154 1 
115 1 199 1 175 1 
199 1 155 1 
37 1 
316 1 199 1 328 1 
46 1 199 1 
199 1 328 1 
115 2 231 1 316 1 199 3 289 1 328 1 
120 2 250 4 52 1 235 7 101 1 319 1 107 3 239 1 196 1 222 1 73 1 134 1 20 1 312 3 75 2 92 1 204 1 
120 2 250 4 52 1 235 7 101 1 319 1 107 3 239 1 196 1 222 1 73 1 134 1 20 1 312 3 75 2 92 1 204 1 
120 2 250 4 52 1 208 1 319 1 235 7 101 1 107 3 239 1 196 1 222 1 73 1 134 1 20 1 312 3 75 2 92 1 204 1 
294 1 250 16 120 3 52 1 5 1 206 1 167 2 207 1 170 3 88 1 307 3 265 1 222 2 134 2 20 2 92 1 312 15 135 1 189 1 319 1 101 1 234 1 235 31 67 1 194 4 38 3 107 10 196 4 239 4 149 3 72 1 73 5 75 5 204 2 
250 5 120 2 5 2 52 1 167 4 207 2 265 2 222 1 20 1 134 1 312 4 189 1 274 1 234 2 235 9 101 1 319 1 107 4 239 1 196 1 111 1 73 1 75 3 204 1 
47 1 137 1 2 1 317 1 84 1 126 1 108 1 242 1 197 1 216 1 201 1 244 1 151 1 309 1 308 1 21 1 
47 1 2 1 6 1 317 1 84 1 300 1 108 1 242 1 197 2 216 2 18 1 201 1 244 1 151 1 203 1 308 1 21 1 
47 1 2 1 242 1 197 1 216 1 18 1 201 1 244 1 151 1 308 1 203 1 300 1 
47 2 6 1 84 1 236 1 109 1 242 2 197 1 216 1 201 1 151 2 308 2 185 1 313 1 21 1 205 1 
47 1 137 1 2 1 317 1 84 1 126 1 108 1 242 1 197 1 216 1 201 1 244 1 151 1 203 1 308 1 21 1 
11 1 
1 1 116 3 83 1 297 2 256 1 173 1 299 1 301 1 125 1 303 1 180 1 131 1 55 3 57 1 266 1 93 1 22 1 272 1 188 1 28 1 63 1 315 1 109 2 69 1 41 1 284 1 201 2 153 1 154 1 43 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 3 28 1 83 1 297 1 256 1 173 1 299 1 301 1 125 1 180 1 69 1 55 3 284 1 153 1 184 1 43 1 93 1 
22 1 272 1 116 2 1 1 188 1 28 1 83 1 256 1 173 1 301 1 125 1 303 1 180 1 69 1 55 2 131 1 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 28 1 83 1 256 1 173 1 301 1 125 1 180 1 69 1 55 2 284 1 153 1 43 1 93 1 
22 1 272 1 116 2 1 1 188 1 28 1 83 1 256 1 173 1 301 1 125 1 303 1 180 1 69 1 55 2 131 1 284 1 153 1 43 1 93 1 
117 1 250 3 120 1 5 1 52 1 167 2 207 1 169 1 171 1 175 1 217 1 264 2 182 1 265 1 134 1 312 3 62 1 319 1 101 1 234 1 235 6 107 2 196 1 239 1 75 2 204 1 
76 1 294 1 117 2 250 10 5 2 167 4 207 2 171 12 212 1 304 1 264 1 130 1 217 1 307 3 182 3 265 2 312 5 62 12 234 2 102 1 235 15 67 2 194 4 38 3 107 2 196 3 283 1 149 3 73 2 330 1 
76 1 160 1 117 1 250 1 5 1 207 1 83 1 167 2 301 1 127 1 13 1 180 1 129 1 217 1 182 1 265 1 312 1 270 1 187 1 228 1 229 1 234 1 102 1 235 2 109 1 324 1 201 1 330 1 
76 1 160 1 228 1 229 1 117 1 5 1 167 2 83 1 207 1 235 1 102 1 234 1 301 1 322 1 109 1 180 1 129 1 217 1 201 1 265 1 312 1 
76 1 117 2 250 1 5 2 167 4 207 2 83 1 169 1 122 1 301 1 180 1 129 1 217 2 265 2 309 1 312 1 311 1 228 1 229 1 64 1 99 1 234 2 235 2 109 2 201 4 330 1 
117 1 250 1 5 1 167 2 207 1 83 1 171 1 170 1 301 1 180 1 129 1 217 1 182 1 307 1 265 1 312 2 226 1 229 1 62 1 277 1 234 1 102 1 235 3 107 1 196 1 239 1 149 1 71 1 75 1 
62 1 117 1 250 2 5 1 207 1 167 2 169 1 171 1 235 2 234 1 107 1 196 1 217 1 149 1 182 1 265 1 73 1 245 1 
62 1 117 1 5 1 207 1 167 2 169 1 171 1 235 2 234 1 170 1 103 1 107 1 239 1 217 1 182 1 265 1 75 1 312 2 
117 1 250 2 5 1 167 2 207 1 169 1 171 2 170 1 217 1 307 1 182 2 265 1 312 2 62 2 234 1 235 4 107 2 196 1 239 1 149 1 73 1 75 1 
62 1 117 1 64 1 250 2 5 1 207 1 167 2 171 1 235 2 234 1 107 1 196 1 217 1 149 1 182 1 265 1 73 1 245 1 
62 1 117 1 64 1 5 1 207 1 167 2 171 1 235 2 234 1 170 1 103 1 107 1 239 1 217 1 182 1 265 1 75 1 312 2 
62 1 117 1 64 1 250 2 5 1 207 1 167 2 171 1 235 2 234 1 107 1 196 1 217 1 149 1 182 1 307 1 265 1 73 1 
62 1 117 1 250 2 5 1 207 1 167 2 171 1 234 1 235 2 107 1 196 1 217 1 149 1 182 1 307 1 265 1 73 1 
13 1 109 1 50 1 201 1 
109 1 201 1 168 1 310 1 
62 1 117 1 250 2 5 1 207 1 167 2 171 1 235 2 102 1 234 1 107 1 196 1 217 1 149 1 182 1 307 1 265 1 73 1 
13 1 50 1 201 1 254 1 309 1 
117 1 250 2 5 1 167 2 207 1 83 1 121 1 171 1 301 1 180 1 129 1 217 1 307 1 182 1 265 1 226 1 229 1 62 1 234 1 102 1 235 2 107 1 196 1 149 1 71 1 73 1 
294 1 162 1 250 4 82 1 5 2 167 4 207 2 170 1 10 1 307 1 265 2 312 5 27 1 140 1 234 2 235 9 67 1 192 1 106 1 194 2 38 1 107 2 196 1 239 1 111 1 149 1 200 1 73 1 75 1 
294 2 27 1 162 1 250 2 5 1 82 2 207 1 167 2 235 5 234 1 192 1 10 2 194 2 38 1 111 1 218 1 265 1 312 3 
294 1 162 1 250 4 82 1 5 2 167 4 207 2 170 1 10 1 307 1 265 2 312 5 27 1 140 1 141 1 234 2 235 9 67 1 192 1 194 2 38 1 107 2 196 1 239 1 111 1 149 1 73 1 75 1 
294 1 162 1 250 4 82 1 5 2 167 4 207 2 170 1 10 1 307 1 265 2 312 5 27 1 140 1 141 1 234 2 235 9 67 1 192 1 194 2 38 1 107 2 196 1 239 1 111 1 149 1 73 1 75 1 
294 2 162 1 120 1 250 10 52 1 82 1 5 1 167 2 207 1 170 2 10 1 218 1 307 2 265 1 134 1 312 10 27 1 319 1 101 1 234 1 235 20 67 1 192 1 194 3 38 2 107 5 196 3 239 3 283 1 111 1 149 2 73 2 75 3 204 1 
227 1 119 1 166 1 97 1 233 1 320 1 9 1 124 1 280 1 260 1 287 1 
16 1 132 1 
227 1 260 1 112 1 287 1 53 1 320 1 9 1 157 1 124 1 
161 1 105 1 
61 1 261 1 4 1 
45 1 116 1 163 1 251 1 119 1 166 1 83 1 85 1 301 1 174 2 9 1 258 1 125 1 124 1 176 1 210 1 180 1 260 1 129 1 55 1 227 1 60 1 229 1 190 1 97 1 145 1 320 1 280 1 71 1 287 1 292 1 
45 1 116 1 163 1 251 1 119 1 166 1 83 1 85 1 301 1 174 2 9 1 258 1 125 1 124 1 176 1 210 1 180 1 260 1 129 1 55 1 227 1 60 1 229 1 190 1 97 1 145 1 320 1 280 1 71 1 287 1 292 1 
45 1 116 1 163 1 251 1 119 1 166 1 83 1 85 1 301 1 174 2 9 1 258 1 125 1 124 1 176 1 210 1 180 1 260 1 129 1 55 1 227 1 60 1 229 1 190 1 97 1 145 1 320 1 280 1 71 1 287 1 292 1 
161 1 4 1 105 1 
161 1 4 1 105 1 
61 1 261 1 
61 1 261 1 4 1 
30 1 271 1 
45 1 116 1 251 1 252 1 83 2 9 1 174 1 301 2 124 1 180 2 260 1 215 1 129 2 264 1 55 1 16 1 132 1 220 1 219 1 271 1 225 1 227 1 229 2 30 1 320 1 35 1 287 1 
76 1 24 1 117 1 250 1 5 1 99 1 167 2 83 2 207 1 32 1 235 2 234 1 102 1 301 2 180 2 14 1 217 1 201 2 265 1 311 2 312 1 269 1 330 1 
242 1 317 1 253 1 201 2 244 1 59 1 113 1 309 1 203 1 
242 1 317 1 98 1 201 1 244 1 59 1 203 1 
109 1 242 1 253 1 201 1 202 1 185 1 
242 1 317 1 253 1 201 1 244 1 59 1 113 1 203 1 
325 1 
36 1 315 1 318 1 57 1 85 1 302 1 175 1 
77 1 1 1 116 1 163 1 83 1 297 1 8 1 85 1 299 1 301 1 125 1 176 1 210 1 303 1 180 1 129 1 305 1 131 1 55 1 57 1 19 1 229 1 188 1 315 1 318 1 145 1 71 1 286 1 
303 1 109 1 1 1 188 1 131 1 201 1 42 1 
78 2 1 2 163 1 83 1 170 2 85 5 8 6 7 1 176 1 180 1 91 1 188 2 194 1 38 1 196 2 41 1 198 5 294 1 116 1 297 1 299 1 301 1 125 1 210 1 303 2 305 3 129 1 131 2 55 1 307 2 218 1 57 5 229 1 314 1 315 8 142 1 318 2 145 1 237 1 239 2 240 5 149 2 150 1 71 1 154 1 158 1 
78 2 247 1 1 1 116 1 163 1 52 1 83 1 301 1 125 1 176 1 210 1 303 1 180 1 129 1 131 1 55 1 57 2 134 1 229 1 188 1 315 2 145 1 237 1 195 1 196 2 239 1 71 1 204 1 
1 1 188 1 315 1 318 1 85 1 302 1 303 1 36 1 131 1 57 1 
78 2 315 5 295 1 8 10 85 5 170 2 237 1 196 2 240 5 239 2 305 5 149 2 198 5 307 2 57 5 
229 1 116 1 163 1 83 1 318 1 297 1 85 1 145 1 299 1 301 1 125 1 176 1 210 1 180 1 129 1 55 1 71 1 
116 3 230 1 1 2 188 1 63 1 315 1 65 1 100 1 297 4 299 2 303 2 109 2 41 2 55 3 131 2 57 2 201 3 152 1 267 1 266 1 154 1 
13 1 109 1 180 1 229 1 163 1 50 1 129 1 201 1 83 1 71 1 209 1 301 1 
1 1 188 1 120 1 315 1 318 2 8 4 85 4 303 1 240 2 305 2 41 1 198 2 131 1 57 2 154 1 
227 1 262 1 9 1 
227 1 262 1 9 1 
227 1 30 1 58 1 146 1 9 1 
227 1 262 1 9 1 
227 1 9 1 238 1 
227 1 9 1 238 1 
227 1 9 1 238 1 
227 1 9 1 
260 1 124 1 
189 1 120 1 250 4 52 1 5 2 207 2 167 4 235 8 234 2 101 1 319 1 107 3 239 1 196 1 265 2 73 1 134 1 312 4 75 2 204 1 
120 1 250 3 52 1 101 1 319 1 235 6 175 1 107 2 196 1 239 1 134 1 312 3 75 2 204 1 
250 2 5 1 207 1 167 2 170 1 234 1 235 4 107 2 239 1 196 1 181 1 149 1 307 1 265 1 73 1 75 1 312 2 
294 1 250 3 170 1 235 7 67 1 194 2 38 1 107 2 239 1 196 1 149 1 307 1 73 1 75 1 312 4 
120 1 250 11 52 1 5 2 207 2 167 4 170 2 12 1 130 1 307 2 265 2 134 2 312 12 189 2 319 1 101 1 235 23 234 2 67 1 194 2 107 9 38 2 196 3 239 3 283 1 149 2 73 4 75 5 204 2 
194 1 235 1 312 1 
38 1 250 1 235 1 
250 3 5 1 295 1 167 2 207 1 234 1 235 6 170 1 107 3 196 1 239 1 181 1 149 1 307 1 265 1 73 1 312 3 75 2 
294 1 250 6 5 1 167 2 207 1 170 2 218 1 307 2 265 1 312 6 91 1 314 1 142 1 235 12 234 1 194 1 38 1 107 2 196 2 239 2 111 1 149 2 73 1 75 1 158 1 
250 3 52 1 235 6 107 2 196 1 239 1 73 1 134 1 312 3 75 1 204 1 
189 1 250 1 5 1 207 1 167 2 319 1 235 3 234 1 101 1 107 2 12 1 265 1 73 1 134 1 75 1 312 2 204 1 
250 5 5 1 52 1 167 2 207 1 234 1 235 10 195 1 107 5 196 2 239 2 111 1 265 1 73 2 134 2 75 3 312 5 204 2 
250 2 5 1 207 1 167 2 234 1 235 2 107 1 196 1 111 1 149 1 265 1 73 1 
250 2 5 1 207 1 167 2 170 1 234 1 235 4 107 2 239 1 196 1 111 1 149 1 307 1 265 1 73 1 75 1 312 2 
189 1 140 1 250 1 5 3 207 3 167 6 235 3 234 3 12 1 107 2 111 1 265 3 73 1 134 1 312 2 75 1 204 1 
294 1 120 1 250 16 52 2 5 5 167 10 207 5 170 3 88 1 12 1 181 1 307 3 265 5 134 3 135 1 312 18 189 2 140 1 319 1 101 1 234 5 235 34 67 1 194 4 38 3 107 12 196 5 239 5 111 1 149 3 72 1 73 5 75 7 204 3 
294 1 120 1 250 4 5 1 52 1 167 2 207 1 218 1 265 1 134 1 312 4 235 8 234 1 101 1 319 1 194 1 38 1 107 2 239 1 196 1 111 1 75 2 204 1 
294 1 120 1 250 6 52 1 5 2 167 4 207 2 181 1 218 1 307 1 265 2 134 1 312 5 319 1 101 1 235 11 234 2 67 1 194 2 38 1 107 3 239 1 196 2 111 1 149 1 73 1 75 2 204 1 
294 1 120 1 250 9 52 1 5 3 167 6 207 3 170 2 181 1 218 1 307 2 265 3 134 1 312 10 91 1 314 1 189 1 142 1 319 1 101 1 235 19 234 3 194 1 38 1 107 4 196 3 239 3 111 1 149 2 73 1 75 3 204 1 158 1 
294 1 120 1 250 10 52 1 5 3 167 6 207 3 170 1 181 1 218 1 307 2 265 3 134 1 312 7 91 1 314 1 189 1 142 1 319 1 101 1 235 17 234 3 194 1 38 1 107 5 196 3 239 2 111 1 149 2 73 2 75 3 204 1 158 1 
294 1 120 1 250 4 5 1 52 1 167 2 207 1 218 1 265 1 134 1 312 4 235 8 234 1 101 1 319 1 194 1 38 1 107 2 239 1 196 1 111 1 75 2 204 1 
294 1 250 6 5 1 167 2 207 1 170 2 218 1 307 2 265 1 312 6 91 1 314 1 142 1 235 12 234 1 194 1 38 1 107 2 196 2 239 2 111 1 149 2 73 1 75 1 158 1 
294 1 120 1 250 10 52 1 5 4 167 8 207 4 170 1 181 1 218 1 307 2 265 4 134 1 91 1 312 8 314 1 189 2 142 1 319 1 101 1 235 18 234 4 194 1 38 1 107 5 196 3 239 2 111 1 149 2 73 2 75 3 204 1 158 1 
294 1 250 9 5 4 167 8 207 4 170 2 218 1 307 3 265 4 91 1 312 7 314 1 189 2 140 1 142 1 235 16 234 4 194 1 38 1 107 6 196 3 239 2 111 1 149 3 73 3 75 3 158 1 
250 3 52 1 235 7 101 1 319 2 107 6 239 1 196 1 73 3 134 3 312 4 75 3 204 3 
294 1 120 1 250 10 52 1 5 4 167 8 207 4 170 1 218 1 307 2 265 4 134 1 91 1 312 8 314 1 189 2 140 1 142 1 319 1 101 1 235 18 234 4 194 1 38 1 107 4 196 3 239 2 111 1 149 2 73 1 75 3 204 1 158 1 
180 1 264 1 83 1 301 1 93 1 33 1 186 1 
273 1 83 1 33 1 301 1 180 1 281 1 264 1 133 1 223 1 156 1 93 1 186 1 
109 1 201 1 175 1 
228 1 109 1 180 1 229 1 129 1 201 1 83 1 301 1 
228 1 180 1 229 1 129 1 65 1 201 1 83 1 301 1 
228 1 180 1 229 1 129 1 65 1 201 1 83 1 301 1 
116 1 65 1 55 1 201 1 
116 1 65 1 55 1 201 1 
248 1 201 1 
109 1 201 1 
228 1 24 1 229 1 117 1 5 1 167 2 83 1 207 1 102 1 234 1 301 1 180 1 129 1 217 1 201 1 265 1 309 1 
303 1 109 1 1 1 230 1 116 1 188 1 215 1 131 1 55 1 201 1 
248 1 201 1 
136 1 109 1 128 1 201 4 309 1 
201 1 66 1 
109 1 201 1 
201 2 203 1 309 1 
109 1 201 2 309 1 
109 1 201 2 309 1 
228 1 109 1 180 1 229 1 129 1 201 1 83 1 301 1 
65 1 201 1 
79 1 264 1 232 1 257 1 290 1 
116 1 215 1 79 1 55 1 255 1 221 1 44 1 
180 1 14 1 79 1 83 1 32 1 269 1 257 1 290 1 301 1 
22 1 48 1 272 1 79 1 232 1 255 1 257 1 173 1 256 1 125 1 290 1 44 1 
147 1 179 1 34 1 175 1 
147 1 179 1 197 1 216 1 84 1 21 1 34 1 
47 1 216 1 308 1 
137 1 49 1 138 2 84 1 86 1 54 1 34 1 147 1 179 1 197 3 216 3 21 1 
147 1 179 1 259 1 197 2 216 2 18 1 84 1 21 1 34 1 
23 1 137 1 84 1 278 1 34 1 15 1 178 1 241 1 197 1 216 1 21 1 
179 1 137 1 197 1 216 1 84 1 21 1 34 1 
147 1 179 2 137 1 197 1 216 1 84 1 21 1 
137 1 80 1 51 1 84 2 34 1 179 1 197 2 216 2 17 1 21 2 
23 1 137 1 84 1 191 1 34 2 147 1 193 1 179 1 197 3 263 1 216 3 18 2 21 1 
159 1 224 1 137 1 84 1 278 1 143 1 34 1 147 1 179 1 178 2 241 1 197 2 216 2 18 1 21 1 
23 1 137 1 84 2 276 1 34 2 147 1 179 1 259 1 197 4 263 1 216 4 18 2 21 2 
147 1 179 1 137 1 197 1 216 1 84 1 21 1 34 1 
23 1 138 1 49 1 84 1 86 1 34 3 147 2 179 2 197 4 263 1 216 4 18 2 21 1 114 1 
95 1 137 1 84 1 275 1 34 1 321 1 147 1 179 1 197 2 216 2 18 1 21 1 
49 1 137 1 138 2 3 1 84 1 86 2 34 1 147 1 179 1 197 3 216 3 21 1 
94 1 246 2 26 1 34 2 
137 1 214 1 197 1 216 1 84 1 21 1 
147 1 193 1 179 1 137 1 197 2 216 2 18 1 84 1 21 1 34 1 
90 1 
147 1 179 1 137 1 197 1 216 1 84 1 21 1 34 1 
193 1 147 1 179 1 138 1 137 1 197 3 216 3 18 1 84 1 21 1 34 1 
23 1 263 1 34 1 114 1 
179 1 34 1 

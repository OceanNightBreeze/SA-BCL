#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 133 313 312 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 46 6 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (261,308) 333 86 159 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 133 197 351 215 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 133 222 351 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 133 197 351 215 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 133 197 351 215 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 133 197 351 215 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 133 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 86 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 133 313 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 133 222 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 70 (35,161) (35,161) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 8156 | return null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z | OPERATOR | 4136 | && -> ||
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11444 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | ASSIGN | 794 | = null
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | CONDITION | 5784 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
161 1 199 2 2 6 105 1 177 1 268 2 270 2 55 1 334 1 57 1 35 1 143 1 273 4 248 2 12 1 185 2 208 1 129 2 318 3 93 1 191 1 70 4 116 1 258 1 45 9 152 9 194 1 50 2 
161 1 199 2 2 6 105 1 177 1 270 2 268 2 55 1 334 1 57 1 35 1 143 1 273 4 248 2 12 1 185 2 208 1 129 2 318 3 93 1 191 1 70 4 116 1 258 1 45 9 152 9 194 1 50 2 
161 1 199 2 2 7 105 1 177 1 270 2 268 2 55 1 334 1 57 1 35 1 143 1 273 5 248 2 12 1 185 2 208 1 129 2 318 4 93 1 191 1 70 5 116 1 258 1 45 10 152 10 194 1 50 2 
161 1 199 2 2 4 177 1 270 2 268 2 55 1 334 1 57 1 35 1 143 1 273 3 248 1 12 1 185 2 208 1 129 2 318 2 93 1 191 1 70 3 116 1 258 1 45 7 152 7 194 1 50 2 
129 1 161 1 318 1 199 1 2 3 105 1 270 1 70 2 35 1 116 1 45 4 152 4 194 1 273 2 248 2 185 1 12 1 50 1 
129 1 161 1 199 1 233 1 268 1 124 1 23 1 334 1 57 1 35 1 45 2 152 2 12 1 185 1 50 1 
161 1 199 2 318 1 2 1 268 1 191 1 70 1 35 1 45 3 152 3 273 1 12 1 50 2 
161 1 199 2 2 7 105 1 268 1 270 1 35 1 143 1 273 4 248 2 11 1 12 1 185 1 129 1 318 3 93 1 232 1 191 1 70 4 116 1 45 9 152 9 194 1 50 2 
161 1 199 2 2 7 105 1 268 1 270 1 35 1 143 1 273 4 248 2 11 1 12 1 185 1 129 1 318 3 93 1 232 1 191 1 70 4 116 1 45 9 152 9 194 1 50 2 
186 1 119 1 74 1 
28 2 160 1 74 1 
9 2 166 2 246 2 293 2 210 2 149 1 43 1 173 2 
158 1 198 1 102 1 266 1 331 1 201 1 54 1 84 1 33 1 8 1 335 1 9 3 58 1 166 3 10 2 246 2 275 2 293 2 13 1 147 1 319 1 322 1 210 2 66 1 149 1 69 1 43 1 283 2 173 2 259 1 27 1 326 1 260 2 285 1 75 1 236 2 155 1 
52 1 132 1 210 1 211 1 149 1 173 1 9 1 166 1 246 1 293 1 
186 1 90 1 306 1 211 1 9 1 60 1 74 1 61 1 137 1 166 1 246 1 205 1 277 1 214 1 
186 1 306 1 210 1 211 1 173 1 9 1 74 1 61 1 137 2 166 1 246 1 293 1 205 2 277 1 214 1 
137 1 205 1 206 1 272 1 223 1 
186 1 74 1 120 1 137 2 205 2 206 1 272 1 235 1 
137 1 205 1 272 1 
52 1 132 1 281 1 210 1 211 1 149 1 173 1 9 1 137 1 166 1 246 1 293 1 206 1 205 1 
74 1 
186 1 74 1 120 1 137 2 205 2 206 1 294 1 272 1 
186 1 39 1 190 1 307 1 178 1 41 2 309 1 272 2 180 2 244 1 74 1 120 1 137 5 121 1 183 1 206 2 205 5 167 1 263 2 
119 1 43 1 
189 1 210 1 211 1 125 1 43 1 173 1 9 2 166 2 246 2 293 1 30 1 
181 1 308 1 333 1 
102 1 266 1 319 1 201 1 66 1 43 1 283 1 9 1 58 1 260 1 72 1 285 1 166 1 10 1 155 1 13 1 
110 1 102 1 266 1 19 1 319 1 201 1 210 1 66 1 308 1 283 1 9 2 58 1 260 1 285 1 166 2 10 1 246 1 293 1 155 1 13 1 
110 1 210 3 211 1 125 1 43 1 173 1 9 3 166 3 246 3 293 3 
52 1 9 1 166 1 246 1 293 1 210 1 211 1 
189 1 210 1 211 1 173 1 9 1 166 1 246 1 293 1 30 1 
158 1 102 1 266 1 331 1 306 1 201 1 54 1 84 1 33 1 8 1 9 4 58 1 61 1 166 4 10 1 246 3 275 2 293 3 37 1 205 1 277 1 13 1 110 1 189 1 19 1 319 1 322 1 210 3 66 1 211 1 149 1 43 1 283 1 173 2 259 1 326 1 260 1 285 1 137 1 75 1 236 1 155 1 214 1 156 1 
196 1 9 2 60 1 110 1 166 2 246 2 293 1 210 1 43 1 
110 2 189 1 19 1 306 1 210 3 211 1 173 1 345 1 9 3 74 1 61 1 137 1 166 3 246 3 293 3 205 1 277 1 214 1 156 1 
110 1 189 1 210 2 308 1 173 1 9 2 181 1 166 2 246 2 293 2 
266 1 102 1 319 1 201 1 66 1 43 1 283 1 9 1 58 1 260 1 285 1 166 1 10 1 155 1 13 1 
266 1 102 1 319 1 201 1 211 1 125 1 136 1 43 1 283 1 9 1 58 1 260 1 165 1 166 1 10 1 155 1 13 1 
158 1 198 2 99 1 162 1 238 1 308 2 54 1 84 2 333 2 203 1 181 2 275 2 188 1 113 1 322 1 323 1 26 1 259 1 326 1 261 1 75 1 236 4 31 1 140 1 
9 1 166 1 246 1 293 1 210 1 115 1 211 1 214 1 
110 1 189 1 210 2 211 1 125 1 43 1 173 1 9 2 166 2 246 2 293 2 
52 1 9 2 166 2 246 2 115 1 293 2 210 2 211 1 
76 1 82 1 
76 1 82 1 
217 1 42 1 
217 1 42 1 
217 1 76 1 82 1 42 1 
216 1 76 1 82 1 
216 1 76 1 82 1 
216 1 76 1 82 1 
76 1 82 1 179 1 
109 1 217 1 231 1 76 2 82 2 42 1 
301 1 76 1 82 1 
301 1 76 1 82 1 
301 1 76 1 82 1 
175 1 0 1 52 1 98 1 53 2 82 2 9 1 87 2 144 1 204 2 245 1 166 1 246 1 293 1 205 2 250 2 132 1 321 1 300 2 281 1 210 1 211 1 149 1 173 1 150 1 94 1 118 1 74 1 137 2 76 2 352 1 
53 1 82 1 253 1 300 1 21 1 210 2 43 1 343 1 179 1 9 2 151 1 87 1 336 1 204 1 29 1 137 1 36 1 166 2 76 1 246 2 293 2 205 1 352 1 250 1 
129 1 270 1 185 1 
129 1 185 1 23 1 
51 1 1 1 129 3 270 2 23 1 256 1 
51 1 1 1 129 2 287 1 270 1 23 1 
1 1 51 2 129 2 270 1 23 1 
160 1 162 1 309 2 272 1 85 1 141 2 7 1 180 1 314 1 36 1 89 1 146 1 205 5 206 4 167 1 186 1 39 1 188 1 111 1 112 1 253 1 41 1 172 1 28 2 120 1 74 2 29 1 137 5 330 1 263 1 
160 3 162 3 219 1 332 1 309 6 272 6 85 4 223 5 180 2 244 1 314 2 89 3 205 9 206 7 278 1 167 4 186 1 39 1 316 1 188 3 111 4 170 5 112 2 341 1 253 4 172 1 41 2 323 1 26 1 44 1 28 7 74 5 120 1 137 9 263 2 
52 1 160 1 162 1 309 2 141 1 85 1 7 1 180 1 9 1 244 1 314 1 166 1 246 1 293 1 89 1 206 2 205 3 167 1 186 1 188 1 111 1 132 1 112 1 281 1 253 1 210 1 211 1 41 1 149 1 173 1 28 2 74 2 137 3 330 1 263 1 
52 1 219 1 309 4 141 2 7 1 180 1 9 1 314 1 186 1 316 1 188 2 111 2 112 1 281 1 149 1 28 4 74 3 330 1 162 2 160 2 85 2 244 1 166 1 246 1 89 2 293 1 206 3 205 4 167 1 132 1 253 2 210 1 211 1 41 1 173 1 44 1 137 4 263 1 
119 1 102 1 135 1 
224 1 102 1 
302 1 
102 1 155 1 
73 1 102 3 319 1 135 2 106 1 155 1 
102 1 319 1 155 1 
102 1 123 1 
230 1 176 1 99 2 252 1 198 4 162 1 239 1 282 1 221 1 84 3 26 1 344 1 203 3 128 2 236 7 328 1 168 1 
230 1 176 1 99 2 252 1 198 4 162 1 239 1 282 1 221 1 84 3 26 1 344 1 203 3 128 2 236 7 328 1 168 1 
230 1 176 1 99 2 252 1 198 4 162 1 239 1 221 1 282 1 84 3 26 1 344 1 348 1 203 3 128 2 236 7 328 1 168 1 
265 1 176 1 198 2 313 1 312 1 128 1 315 1 133 1 236 3 84 1 168 1 
158 2 176 1 198 5 99 3 162 1 239 1 221 1 54 2 84 4 203 4 226 1 128 2 275 4 168 1 230 1 252 1 322 2 282 1 26 1 344 1 326 2 95 1 236 9 264 1 
79 1 80 1 161 1 199 1 2 1 266 1 270 1 269 1 268 1 83 1 142 1 35 1 10 1 338 1 185 1 12 1 13 1 16 1 17 1 129 2 20 1 283 1 23 1 256 1 260 1 45 2 152 2 154 1 50 1 
79 1 161 1 199 1 2 2 266 1 305 1 270 1 268 1 83 1 142 1 35 1 10 1 338 1 185 1 13 1 16 1 17 1 317 1 129 2 320 1 20 1 283 1 23 1 256 1 260 1 45 3 152 3 154 1 50 1 
161 1 2 2 266 1 305 1 268 1 270 1 142 1 35 1 10 1 338 1 13 1 185 1 16 1 17 1 317 1 129 2 20 1 283 1 23 1 256 1 260 1 45 2 152 2 154 1 
199 1 102 1 266 1 268 2 58 1 164 1 10 1 13 1 249 1 16 2 17 2 18 1 320 1 234 1 68 1 283 1 260 1 45 1 152 1 213 1 154 2 155 1 50 1 
79 1 80 1 199 1 266 1 270 1 268 1 83 1 142 1 10 1 338 1 185 1 12 1 13 1 16 1 17 1 317 1 129 2 20 1 283 1 23 1 256 1 260 1 45 1 152 1 154 1 50 1 
271 1 
266 1 102 1 103 1 306 1 4 1 5 1 272 2 309 1 6 1 310 1 180 1 9 1 58 2 60 1 61 1 166 1 10 2 246 1 205 3 277 1 13 1 167 1 39 1 90 1 18 1 112 1 211 1 41 1 234 1 22 1 283 2 347 1 260 2 120 1 137 3 46 1 155 1 214 1 263 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 272 1 6 1 310 1 9 1 60 1 61 1 120 1 137 3 46 1 166 1 246 1 205 3 294 1 277 1 214 1 
39 1 90 1 306 1 4 1 211 1 41 1 5 1 6 1 180 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 263 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
90 1 306 1 4 1 211 1 5 1 6 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 
39 1 90 1 306 1 4 1 211 1 41 1 5 1 6 1 180 1 310 1 9 1 60 1 61 1 137 2 46 1 166 1 246 1 205 2 277 1 214 1 263 1 
158 1 198 3 99 2 252 1 162 1 239 1 322 1 282 1 221 1 308 1 54 1 43 2 84 3 333 1 26 1 344 1 259 1 326 1 203 2 119 1 181 1 128 1 75 1 236 6 275 2 140 1 
158 1 159 1 265 1 198 1 322 1 308 3 54 1 84 1 333 3 259 1 326 1 86 1 174 1 315 1 75 1 236 2 275 2 
158 1 198 1 102 1 266 1 331 1 201 1 54 1 84 1 335 1 58 1 9 2 181 1 145 1 10 1 166 2 246 1 293 1 275 2 62 1 13 1 280 1 110 1 19 1 319 1 322 1 210 1 66 1 43 1 283 1 259 1 326 1 260 1 72 1 285 1 174 1 75 1 236 2 155 1 
99 2 304 1 266 2 102 2 221 1 308 6 54 3 8 2 58 1 9 3 181 5 182 2 10 1 275 6 13 2 228 1 110 1 188 2 19 1 319 2 322 3 282 1 66 2 323 1 283 1 26 2 326 3 285 2 75 3 236 18 155 2 158 3 198 10 162 3 239 1 331 1 241 2 201 2 84 8 34 2 333 6 335 1 203 2 292 2 128 1 166 3 246 1 293 1 89 2 252 1 210 1 43 2 344 1 259 3 260 1 174 1 
158 2 198 1 100 1 240 1 32 1 266 2 102 3 331 1 269 1 54 2 84 1 335 1 9 1 58 2 127 1 166 1 10 8 246 1 247 1 293 1 275 4 13 2 317 1 18 1 110 1 322 2 210 1 40 1 234 1 69 2 283 7 259 2 326 2 260 8 75 2 236 2 155 2 140 1 288 1 
311 1 9 1 189 1 166 1 246 1 293 1 210 1 173 1 
158 1 230 1 198 2 162 1 188 1 113 1 322 1 308 1 54 1 333 1 259 1 326 1 203 1 181 1 75 1 236 2 275 2 140 1 
158 1 99 1 322 1 308 1 54 1 323 1 84 2 333 1 26 1 259 1 326 1 203 1 181 1 75 1 236 2 275 2 31 1 140 1 
158 1 198 2 162 1 188 1 322 1 308 1 54 1 333 1 259 1 326 1 181 1 75 1 236 2 275 2 89 1 140 1 
158 1 230 1 198 2 162 1 188 1 113 1 322 1 308 1 54 1 333 1 259 1 326 1 203 1 181 1 75 1 236 2 275 2 288 1 
158 1 99 1 322 1 308 1 54 1 323 1 84 2 333 1 26 1 259 1 326 1 203 1 181 1 75 1 236 2 275 2 31 1 288 1 
158 1 198 2 162 1 188 1 322 1 308 1 54 1 333 1 259 1 326 1 181 1 75 1 236 2 275 2 89 1 288 1 
158 1 198 2 162 1 188 1 322 1 308 1 54 1 333 1 259 1 326 1 181 1 75 1 275 2 89 1 236 2 
158 1 198 1 266 1 102 1 331 1 201 1 54 1 84 1 8 1 335 1 58 1 9 1 10 1 166 1 275 2 13 1 319 1 322 1 66 1 43 1 283 1 259 1 326 1 260 1 285 1 75 1 236 2 155 1 
158 1 266 1 102 1 331 1 201 1 125 1 54 1 84 1 58 1 9 1 165 1 10 1 166 1 275 2 13 1 209 1 319 1 322 1 211 1 136 1 43 1 283 1 259 1 326 1 260 1 75 1 236 1 155 1 
158 1 198 2 162 1 188 1 322 1 308 1 54 1 333 1 259 1 326 1 181 1 174 1 75 1 236 2 275 2 89 1 
158 1 198 2 162 1 266 1 102 1 201 1 269 1 308 1 54 1 333 1 8 1 9 1 181 1 182 1 10 1 166 1 275 2 89 1 13 1 188 1 319 1 322 1 66 1 283 1 259 1 326 1 260 1 285 1 75 1 236 2 155 1 
158 1 198 2 162 1 308 1 54 1 84 1 333 1 9 1 166 1 246 1 275 2 293 1 89 1 189 1 188 1 322 1 210 1 323 1 173 1 26 1 259 1 326 1 174 1 75 1 236 3 139 1 
158 1 197 1 265 1 198 2 322 1 133 1 54 1 84 2 212 1 326 1 226 1 315 1 236 4 275 2 303 1 351 1 215 1 
158 1 197 2 265 2 198 4 322 1 133 2 222 1 54 1 84 4 212 1 326 1 226 1 315 2 236 8 275 2 303 2 351 2 215 1 
158 1 197 1 265 1 198 2 322 1 133 1 54 1 84 2 212 1 326 1 226 1 315 1 236 4 275 2 303 1 351 1 215 1 
158 1 197 1 265 1 198 2 322 1 133 1 54 1 84 2 212 1 326 1 226 1 315 1 236 4 275 2 303 1 351 1 215 1 
158 1 197 1 265 1 198 2 322 1 133 1 54 1 84 2 212 1 326 1 226 1 315 1 236 4 275 2 303 1 351 1 215 1 
175 1 0 1 98 1 82 1 321 1 300 1 193 1 87 1 204 1 76 1 250 1 
151 1 179 1 
87 1 349 1 204 1 76 1 82 1 300 1 237 1 339 1 250 1 
175 1 0 1 52 1 98 1 53 2 82 1 9 1 87 1 144 1 204 1 245 1 166 1 246 1 293 1 205 1 250 1 132 1 321 1 300 1 281 1 210 1 211 1 149 1 173 1 150 1 94 1 118 1 74 1 137 1 76 1 352 1 
175 1 0 1 52 1 98 1 53 2 82 1 9 1 87 1 144 1 204 1 245 1 166 1 246 1 293 1 205 1 250 1 132 1 321 1 300 1 281 1 210 1 211 1 149 1 173 1 150 1 94 1 118 1 74 1 137 1 76 1 352 1 
175 1 0 1 52 1 98 1 53 2 82 1 9 1 87 1 144 1 204 1 245 1 166 1 246 1 293 1 205 1 250 1 132 1 321 1 300 1 281 1 210 1 211 1 149 1 173 1 150 1 94 1 118 1 74 1 137 1 76 1 352 1 
216 1 88 1 231 1 
216 1 88 1 231 1 
301 1 218 1 
301 1 231 1 218 1 
336 1 343 1 
53 1 82 1 179 1 9 2 87 1 336 1 144 1 204 1 166 2 36 1 246 2 293 2 205 1 206 1 250 1 298 1 300 1 253 1 21 1 210 2 43 1 343 1 151 1 118 1 137 1 29 1 76 1 
216 1 88 1 
301 1 231 1 218 1 
158 1 198 1 266 1 102 1 32 1 267 1 331 1 202 1 54 1 84 1 335 1 9 2 10 2 166 2 246 2 275 2 13 1 254 1 322 1 255 1 40 1 69 2 283 2 259 1 284 1 326 1 260 2 174 1 75 1 236 2 155 1 
79 1 129 2 317 1 17 1 266 1 270 1 269 1 23 1 283 2 291 1 256 1 142 1 260 2 10 2 350 1 338 1 274 1 185 1 13 1 
79 1 129 2 317 1 17 1 266 1 270 1 23 1 283 1 256 1 142 1 260 1 10 1 338 1 274 1 185 1 13 1 96 1 
17 1 18 1 187 1 266 1 102 1 234 1 283 1 58 1 260 1 10 1 350 1 155 1 13 1 249 1 
79 1 129 2 317 1 17 1 266 1 270 1 23 1 283 1 291 1 256 1 142 1 260 1 10 1 350 1 338 1 274 1 185 1 13 1 
63 1 
186 1 119 1 74 1 183 1 178 1 167 1 309 1 
160 1 309 1 272 1 180 1 205 1 167 1 186 1 295 1 39 1 131 1 41 1 192 1 28 1 74 2 120 1 137 1 263 1 
266 1 102 6 106 1 56 1 272 5 309 7 180 3 224 3 58 1 10 1 277 2 13 2 227 2 108 2 186 1 279 2 188 2 111 5 112 2 319 1 323 1 283 1 25 1 26 1 28 9 120 3 74 5 286 1 155 1 160 4 162 2 85 5 126 2 292 2 89 2 205 5 167 6 39 3 297 2 41 3 135 2 347 1 260 1 137 5 48 2 263 3 
265 1 160 2 162 2 290 1 222 1 309 4 85 3 180 1 315 1 89 2 167 2 169 1 39 1 188 2 111 3 133 1 41 1 342 1 65 1 28 4 74 2 263 1 
52 1 162 2 239 1 309 2 180 1 9 1 166 1 246 1 293 1 205 1 184 1 167 2 39 1 252 1 132 1 281 1 210 1 211 1 67 1 41 1 149 1 173 1 344 1 26 1 117 2 137 1 48 1 263 1 
186 1 39 1 178 1 41 1 309 1 180 1 74 1 183 1 167 1 263 1 
162 1 160 1 188 1 111 1 309 2 85 1 28 2 74 1 89 1 
186 1 74 1 120 1 137 1 205 1 272 1 
101 1 266 1 102 1 103 1 272 4 309 2 180 2 58 2 244 1 10 4 205 3 13 1 167 2 39 1 18 1 112 2 41 2 234 1 22 1 283 4 71 1 347 2 260 4 120 2 138 1 137 3 122 2 155 1 263 2 
158 1 266 1 102 1 331 1 201 1 54 1 84 1 33 1 8 1 58 1 9 3 10 1 166 3 246 2 275 2 293 2 13 1 319 1 322 1 210 2 66 1 149 1 43 1 283 1 173 2 259 1 326 1 260 1 285 1 75 1 236 1 155 1 
186 2 39 1 160 2 111 2 112 1 41 1 309 2 85 2 180 1 347 1 28 4 74 4 128 1 167 1 263 1 
87 1 204 1 329 1 
87 1 204 1 329 1 
87 1 204 1 329 1 
87 1 336 1 3 1 204 1 229 1 
87 1 204 1 200 1 
87 1 204 1 200 1 
87 1 204 1 200 1 
87 1 204 1 
76 1 82 1 
158 2 230 1 198 4 99 2 252 1 162 1 239 1 322 2 282 1 221 1 54 2 84 4 26 1 344 1 326 2 203 3 128 1 95 1 236 8 275 4 
198 3 203 2 99 2 252 1 162 1 119 1 239 1 128 1 236 6 221 1 282 1 84 3 26 1 344 1 
97 1 158 1 198 2 162 1 188 1 322 1 54 1 326 1 275 2 89 1 236 2 
265 1 198 1 315 1 236 2 133 1 84 1 
86 1 265 1 198 1 315 1 236 2 84 1 
265 1 236 1 84 1 
198 1 315 1 236 1 
230 1 198 3 162 1 188 1 84 1 292 1 203 1 236 4 89 1 
158 1 326 1 265 1 198 1 226 1 315 1 322 1 236 2 133 1 275 2 222 1 54 1 84 1 
230 1 198 3 252 1 99 1 162 1 239 1 84 3 26 1 344 1 203 2 236 6 
158 1 230 1 198 1 99 1 252 1 148 1 322 1 221 1 282 1 54 1 84 2 344 1 326 1 203 2 95 1 236 3 275 2 
158 1 230 2 252 2 99 3 198 5 162 2 239 1 322 1 67 1 54 1 84 5 344 2 26 2 326 1 203 5 226 1 275 2 236 10 
158 1 326 1 230 1 203 1 198 2 162 1 188 1 226 1 322 1 236 2 275 2 54 1 
158 1 230 1 198 2 162 1 188 1 322 1 323 1 54 1 84 2 26 1 326 1 203 1 226 1 275 2 89 1 236 4 
158 3 230 1 252 1 99 1 198 1 148 1 322 3 54 3 84 2 344 1 326 3 203 2 226 1 95 1 236 3 275 6 157 1 
97 1 158 3 265 1 198 1 322 3 133 1 54 3 84 1 326 3 313 1 226 1 315 1 236 2 275 6 157 1 
158 1 326 1 265 1 198 1 226 1 315 1 322 1 236 2 133 1 275 2 222 1 54 1 84 1 
97 1 158 2 326 2 265 1 198 1 226 1 315 1 322 2 236 2 133 1 275 4 222 1 54 2 84 1 
97 1 158 2 265 1 99 2 198 10 162 4 239 1 221 1 290 1 222 1 54 2 84 6 203 4 226 1 315 1 275 4 89 2 169 1 230 2 252 1 188 2 322 2 133 1 67 1 282 1 342 1 65 1 26 2 344 1 326 2 236 16 
158 1 326 1 265 1 198 1 226 1 315 1 322 1 236 2 133 1 275 2 222 1 54 1 84 1 
158 1 326 1 265 1 198 1 226 1 315 1 322 1 236 2 133 1 275 2 222 1 54 1 84 1 
158 1 265 1 198 6 162 2 290 1 222 1 54 1 84 2 203 1 226 1 315 1 275 2 89 2 169 1 230 1 188 2 322 1 133 1 342 1 65 1 326 1 236 8 
97 1 158 2 326 2 265 1 198 1 226 1 315 1 322 2 236 2 133 1 275 4 222 1 54 2 84 1 
158 2 326 2 265 1 198 1 226 1 315 1 322 2 236 2 133 1 275 4 222 1 54 2 84 1 157 1 
230 3 252 3 99 3 198 3 162 1 239 1 282 1 221 2 84 4 26 1 344 3 203 6 236 7 
158 2 326 2 265 1 198 1 226 1 315 1 322 2 236 2 133 1 275 4 222 1 54 2 84 1 157 1 
196 1 9 1 60 1 225 1 166 1 246 1 43 1 
196 1 289 1 299 1 104 1 43 1 257 1 9 1 60 1 225 1 153 1 166 1 246 1 
260 1 58 1 18 1 119 1 266 1 102 1 10 1 234 1 155 1 13 1 283 1 
110 1 102 1 266 1 319 1 201 1 210 1 43 1 283 1 9 2 58 1 260 1 285 1 166 2 10 1 246 1 293 1 155 1 13 1 
266 1 102 2 306 1 201 1 125 1 9 2 10 1 166 2 246 2 293 2 13 1 110 1 319 2 210 1 211 2 283 1 43 1 346 1 260 1 285 1 122 1 155 2 214 1 
266 1 102 2 306 1 201 1 125 1 9 2 165 1 10 1 166 2 246 2 293 2 13 1 110 1 319 2 210 1 211 2 283 1 43 1 346 1 260 1 122 1 155 2 214 1 
52 1 266 1 102 3 272 1 9 1 224 1 166 1 10 1 246 1 293 1 205 2 277 1 13 1 14 1 186 1 130 1 132 1 319 1 281 1 210 1 211 1 149 1 135 1 283 1 173 1 346 1 260 1 74 1 137 2 122 1 155 1 
52 1 266 1 102 3 272 1 9 1 224 1 166 1 10 1 246 1 293 1 205 2 277 1 13 1 279 1 186 1 132 1 319 1 281 1 210 1 211 1 149 1 135 1 283 1 173 1 346 1 260 1 74 1 137 2 122 1 155 1 
260 1 100 1 266 1 10 1 13 1 283 1 
317 1 100 1 81 1 240 1 32 1 102 3 266 2 319 1 269 1 106 1 69 1 283 6 58 2 260 7 107 1 127 1 10 7 247 1 155 2 13 3 251 1 
158 2 198 3 99 2 162 1 239 1 102 1 266 1 267 1 241 1 201 1 269 1 221 1 308 1 54 2 84 3 333 1 8 1 9 2 203 2 181 1 128 1 182 1 166 2 10 1 246 1 293 1 275 4 13 1 252 1 110 1 319 1 322 2 210 1 282 1 66 1 43 2 283 1 26 1 344 1 259 2 326 2 260 1 174 1 285 1 75 2 236 6 155 1 
102 2 178 1 309 1 272 2 180 2 58 1 126 1 224 1 10 1 183 1 205 3 206 1 277 1 167 1 227 1 186 1 279 1 39 2 297 1 41 2 135 1 283 1 71 1 260 1 74 1 120 1 137 3 263 2 
100 1 102 2 266 1 319 1 269 1 135 1 106 1 283 2 56 1 260 2 10 2 155 1 13 2 
18 1 340 1 102 1 266 1 269 1 234 1 283 4 325 1 58 1 260 4 10 4 155 1 13 1 
102 1 266 1 163 1 319 1 220 1 283 2 260 2 107 1 59 1 122 1 10 2 155 1 13 2 251 1 
129 1 260 1 58 1 266 1 10 1 185 1 23 1 13 1 283 1 142 1 
317 1 260 2 266 1 102 1 32 1 10 2 255 1 269 1 155 1 13 1 283 2 
18 1 32 1 102 3 266 2 240 1 269 1 234 1 283 4 325 1 58 1 260 5 122 1 10 5 247 1 155 2 13 2 
18 1 32 1 102 3 266 2 240 1 269 1 234 1 283 4 325 1 58 1 260 5 122 1 10 5 47 1 155 2 13 2 
266 1 102 1 201 1 125 1 58 1 9 2 165 1 10 1 166 2 246 1 293 1 13 1 110 1 319 1 210 1 211 1 283 1 43 1 260 1 155 1 
81 1 102 1 266 1 319 1 106 1 283 1 260 1 107 1 122 1 10 1 155 1 13 2 251 1 
324 1 243 1 91 1 171 1 43 1 
186 1 91 2 64 1 306 1 171 2 211 1 43 1 324 1 243 2 337 1 74 1 61 1 137 2 206 1 205 2 277 1 214 1 49 1 156 1 
324 1 284 1 9 1 243 1 91 1 166 1 246 1 254 1 202 1 
324 1 337 1 49 1 
35 1 161 1 119 1 
35 1 45 1 161 1 199 1 152 1 50 1 
16 1 45 1 268 1 
199 1 161 1 114 1 57 2 35 1 45 3 152 3 78 1 276 1 12 1 50 1 
35 1 45 2 161 1 199 1 2 1 152 2 248 1 50 1 
129 1 199 1 270 1 70 1 116 1 45 1 152 1 273 1 12 1 185 1 50 1 
45 1 161 1 199 1 152 1 12 1 50 1 
35 1 45 1 161 1 199 1 152 1 12 1 70 1 50 1 
296 1 161 1 199 2 45 2 152 2 195 1 77 1 12 1 50 2 
161 1 199 1 318 1 93 1 2 2 70 1 35 1 45 3 143 1 152 3 273 1 12 1 50 1 
129 2 161 1 199 1 2 1 270 1 242 1 23 1 256 1 35 1 45 2 152 2 12 1 185 1 50 1 
161 1 199 2 318 1 2 2 105 1 70 1 35 1 45 4 152 4 273 1 248 1 12 1 50 2 
35 1 45 1 161 1 199 1 152 1 12 1 50 1 
161 2 199 1 318 1 2 2 114 1 70 1 57 1 35 2 45 4 152 4 273 1 276 1 207 1 50 1 
161 1 199 1 92 1 2 1 232 1 35 1 327 1 45 2 152 2 12 1 50 1 
35 1 15 1 45 3 161 1 199 1 152 3 114 1 276 2 12 1 57 2 50 1 
262 1 134 1 70 1 
45 1 199 1 152 1 38 1 12 1 50 1 
35 1 45 2 161 1 199 1 2 1 93 1 152 2 12 1 50 1 
24 1 
35 1 45 1 161 1 199 1 152 1 12 1 50 1 
35 1 45 3 161 1 199 1 2 1 93 1 152 3 12 1 57 1 50 1 
318 1 273 1 207 1 70 1 
161 1 

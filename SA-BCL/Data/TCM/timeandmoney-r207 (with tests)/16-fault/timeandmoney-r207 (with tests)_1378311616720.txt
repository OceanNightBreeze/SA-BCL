#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (57,130,243) 327 339 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (57,130,243) 327 339 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 120 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (57,130,243) 327 (139,180,313) 81 22 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 12 116 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 129 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException 327 339 111 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 327 339 111 149 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 112 (161,259) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException (161,259) 245 298 (153,165) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | STATEMENT | 5650 | stmt -> ;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1568 | = null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | ASSIGN | 3555 | = null
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONSTANT | 10556 | 0 -> 1
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1146 | 1 -> -1
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3108 | = null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
229 1 91 2 2 1 216 1 338 1 5 1 36 2 303 3 227 1 248 1 187 2 347 1 68 3 
229 1 214 2 138 1 91 2 255 1 140 1 275 2 2 6 216 1 338 3 5 2 343 1 200 1 7 2 147 1 303 9 324 1 347 1 33 1 36 5 58 1 272 1 227 1 248 4 15 1 316 2 187 2 68 9 
229 1 214 2 138 1 91 2 255 1 140 1 275 2 2 6 216 1 338 3 5 2 343 1 200 1 7 2 147 1 303 9 324 1 347 1 33 1 36 5 58 1 272 1 227 1 248 4 15 1 316 2 187 2 68 9 
229 1 214 2 138 1 91 2 255 1 140 1 275 2 2 7 216 1 338 4 5 2 343 1 200 1 7 2 147 1 303 10 324 1 347 1 33 1 36 6 58 1 272 1 227 1 248 5 15 1 316 2 187 2 68 10 
229 1 214 2 91 2 255 1 140 1 275 2 2 4 216 1 338 2 5 2 343 1 200 1 7 1 147 1 303 7 324 1 347 1 33 1 36 4 58 1 272 1 227 1 248 3 15 1 316 2 187 2 68 7 
229 1 33 1 214 1 138 1 91 1 275 1 2 3 216 1 338 1 36 3 7 2 147 1 303 4 248 2 316 1 187 1 347 1 68 4 
229 1 230 1 214 1 91 1 140 1 275 1 216 1 95 1 5 1 36 1 200 1 303 2 88 1 187 1 347 1 68 2 
229 1 214 1 91 2 138 1 2 7 275 1 216 1 338 3 5 1 7 2 147 1 303 9 125 1 347 1 33 1 357 1 36 5 58 1 227 1 248 4 15 1 316 1 187 2 68 9 
229 1 214 1 91 2 138 1 2 7 275 1 216 1 338 3 5 1 7 2 147 1 303 9 125 1 347 1 33 1 357 1 36 5 58 1 227 1 248 4 15 1 316 1 187 2 68 9 
136 1 92 1 208 1 180 1 72 1 287 1 243 1 130 1 49 1 57 1 236 1 107 1 13 1 170 1 
194 1 
244 1 170 1 194 1 141 1 3 1 208 2 180 2 64 1 
136 1 191 2 231 2 193 1 17 1 163 5 194 2 92 1 142 2 256 1 141 2 72 1 20 1 300 1 49 1 145 1 236 1 170 2 264 1 30 4 285 1 308 2 177 1 208 5 287 1 180 5 243 1 130 1 244 1 57 1 107 1 13 1 330 2 61 1 211 2 228 1 317 1 64 2 
148 1 194 1 141 1 
226 2 194 1 62 1 
198 1 236 2 57 2 107 2 136 2 92 1 243 2 130 2 
293 2 161 1 274 1 136 2 92 1 47 2 195 1 198 1 168 1 236 3 262 1 219 1 301 1 121 1 201 1 345 1 266 1 283 1 175 1 205 1 34 1 56 1 352 1 104 1 243 3 105 1 130 2 57 2 183 1 107 2 108 1 156 1 249 2 250 1 212 1 65 2 189 2 
49 1 236 1 57 1 107 1 13 1 136 1 92 1 287 1 243 1 130 1 
57 1 327 1 139 1 
134 1 136 1 194 1 141 1 208 2 180 2 243 1 130 1 49 1 57 1 236 1 107 1 247 1 313 1 150 1 
170 1 208 1 124 1 180 1 64 1 
244 1 18 1 170 1 194 1 141 1 208 2 180 2 64 1 
208 1 180 1 64 1 
42 1 136 1 162 1 243 2 130 1 49 1 198 1 57 2 236 2 107 1 75 1 
122 1 100 1 173 1 
175 1 161 1 205 1 56 1 243 1 198 1 236 1 262 1 121 1 201 1 249 1 266 1 127 1 65 1 283 1 189 1 
175 1 161 1 328 1 205 1 56 1 243 2 130 1 57 1 236 2 262 1 107 1 121 1 122 1 201 1 249 1 266 1 40 1 283 1 65 1 189 1 
198 1 148 1 
327 1 42 1 136 1 328 1 339 1 243 4 130 4 154 1 276 1 198 1 57 5 236 4 107 4 40 2 
49 1 236 2 57 2 107 2 13 1 220 1 243 2 130 2 
198 1 236 3 57 3 107 3 136 1 40 1 243 3 130 3 
49 1 236 1 57 1 107 1 13 1 243 1 130 1 
42 1 136 1 243 1 130 1 49 1 57 1 236 1 107 1 75 1 
293 2 134 1 42 1 161 1 274 1 136 2 1 1 92 1 47 1 195 1 49 1 198 1 168 1 236 4 262 1 277 1 219 1 121 1 201 1 266 1 150 1 283 1 175 1 328 1 205 1 34 1 56 1 208 1 180 1 104 1 243 4 105 1 130 3 57 3 183 1 107 3 247 1 313 1 108 1 249 1 40 1 212 1 65 1 189 1 
327 1 236 1 57 2 107 1 40 1 339 1 243 1 130 1 
134 1 42 1 295 1 136 1 328 1 194 1 1 1 208 1 180 1 243 3 130 3 49 1 57 3 236 3 107 3 247 1 313 1 150 1 40 2 
42 1 136 1 243 2 130 2 57 2 236 2 107 2 122 1 40 1 173 1 
175 1 161 1 205 1 56 1 243 1 198 1 236 1 262 1 121 1 201 1 249 1 266 1 65 1 283 1 189 1 
80 1 175 1 205 1 56 1 243 1 198 1 236 1 262 1 201 1 249 1 266 1 361 1 65 1 283 1 189 1 
176 1 293 2 274 1 329 1 44 1 308 1 143 1 47 3 195 1 104 1 225 1 11 1 105 1 12 1 168 1 183 1 219 1 122 2 100 2 263 1 345 2 267 1 173 2 
49 1 134 1 236 1 57 1 107 1 220 1 243 1 130 1 
291 2 82 1 109 1 87 2 323 1 319 1 
291 1 87 1 78 1 
291 1 87 1 
291 1 87 1 
323 1 319 1 
323 1 319 1 
323 1 319 1 
291 1 278 1 87 1 
291 1 278 1 87 1 
291 1 278 1 87 1 
291 1 87 1 119 1 
291 1 87 1 119 1 
291 1 87 1 119 1 
113 1 294 1 233 1 340 1 198 1 236 2 261 1 6 1 78 1 284 1 206 1 208 1 180 1 242 1 243 2 130 2 290 1 57 2 107 2 60 1 291 1 87 1 39 1 333 1 
113 2 337 1 82 1 194 1 233 1 208 2 180 2 269 1 242 2 288 1 290 2 271 1 60 2 291 2 302 1 210 2 87 2 333 3 89 1 
230 1 214 2 314 1 331 2 316 1 
214 1 275 1 316 1 
230 1 214 1 275 1 
230 1 214 3 314 1 331 1 316 2 362 1 
230 1 214 2 314 1 46 1 331 1 316 1 
191 1 231 1 163 2 194 2 142 1 141 1 118 2 116 1 261 1 170 4 76 1 263 1 265 2 53 1 172 1 30 2 206 1 308 1 177 1 208 5 180 5 241 1 356 1 12 1 244 1 226 3 359 2 39 1 62 1 64 1 133 1 
253 1 135 1 231 2 191 2 163 6 194 5 256 1 141 1 142 2 118 6 116 3 117 1 320 1 261 4 97 5 170 7 263 3 265 6 124 5 53 1 172 2 30 5 308 3 177 1 208 9 180 9 12 3 244 1 226 9 62 3 315 1 64 6 334 1 133 2 
191 1 231 1 163 2 194 3 141 1 142 1 256 1 116 1 118 2 261 1 170 2 76 1 263 1 265 2 172 1 30 2 308 1 208 3 180 3 356 1 12 1 226 4 359 1 62 2 133 1 
253 1 135 1 191 1 231 1 163 4 194 4 141 1 142 1 256 1 118 4 116 2 261 2 170 3 76 1 263 2 265 4 172 1 30 3 308 2 208 4 180 4 356 1 12 2 226 7 359 2 62 3 334 1 133 1 
321 1 
148 1 19 1 266 1 
266 1 270 1 
175 1 266 1 283 1 
209 1 266 1 
266 1 283 1 
120 1 
238 1 329 3 55 1 308 1 178 1 143 2 47 7 166 1 300 1 145 1 181 1 183 3 182 2 25 1 61 1 185 1 345 4 211 1 
293 2 274 1 45 1 215 1 116 3 93 4 143 5 195 1 47 28 166 1 300 1 145 2 168 1 25 1 24 1 263 3 304 1 345 16 152 3 238 5 307 1 329 10 308 4 178 2 354 1 104 1 310 1 181 2 12 3 183 12 182 3 185 1 61 2 211 1 
293 4 274 2 45 1 143 3 195 2 47 9 166 1 300 1 145 1 168 2 345 5 238 1 329 4 308 1 178 1 104 2 181 1 155 1 182 2 183 4 185 1 61 1 211 1 213 1 
238 1 329 3 308 1 178 1 143 2 47 7 166 1 300 1 145 1 181 1 183 3 182 2 25 1 61 1 185 1 345 4 211 1 
238 1 329 3 308 1 178 1 143 2 47 7 166 1 300 1 145 1 181 1 183 3 182 2 25 1 61 1 185 1 345 4 211 1 
91 1 234 1 71 2 197 2 5 2 199 1 23 1 201 1 303 1 266 1 281 1 283 1 326 1 205 1 56 1 240 2 249 1 292 1 65 1 187 1 157 1 189 1 68 1 
229 1 230 1 192 1 214 2 91 1 275 1 71 1 197 1 5 1 201 1 303 1 171 1 221 1 222 1 174 1 240 1 56 1 309 1 351 1 249 1 316 1 65 1 187 1 362 1 189 1 68 1 
229 1 230 1 192 1 214 2 91 1 2 1 275 1 216 1 71 1 197 1 5 1 201 1 303 2 171 1 221 1 222 1 347 1 240 1 56 1 309 1 351 1 246 1 36 1 249 1 316 1 65 1 187 1 362 1 189 1 68 2 
230 1 114 1 192 1 214 2 91 1 275 1 2 2 216 1 71 1 197 1 5 1 23 1 201 1 303 3 221 1 222 1 174 1 347 1 240 1 56 1 309 1 351 1 36 1 249 1 316 1 65 1 362 1 187 1 189 1 68 3 
230 1 114 1 192 1 214 2 2 2 275 1 216 1 71 1 197 1 5 1 201 1 303 2 221 1 174 1 347 1 240 1 56 1 351 1 36 1 249 1 316 1 65 1 362 1 189 1 68 2 
54 1 
254 1 191 1 231 1 139 1 163 1 142 1 260 1 22 1 199 1 52 1 201 1 266 1 202 1 172 1 283 1 30 1 326 1 327 1 81 1 205 2 56 1 177 1 208 2 180 2 244 1 57 1 184 1 249 2 65 2 64 2 189 2 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 244 1 57 1 327 1 254 1 81 1 52 1 139 1 3 1 208 2 180 2 64 1 
327 1 254 1 231 1 191 1 81 1 139 1 177 1 142 1 208 1 180 1 22 1 57 1 52 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
22 1 57 1 327 1 254 1 81 1 52 1 139 1 208 1 180 1 
327 1 254 1 231 1 191 1 81 1 139 1 177 1 142 1 208 1 180 1 22 1 57 1 52 1 
252 1 293 4 274 2 318 1 164 1 258 1 195 2 47 2 144 1 199 1 236 1 168 2 219 2 301 2 201 2 266 3 345 1 267 1 283 2 174 1 326 1 205 2 56 2 243 1 104 2 130 1 105 2 35 1 246 1 57 1 107 1 183 1 108 1 156 1 249 8 40 1 65 7 335 1 189 8 
293 2 42 1 136 1 274 1 116 1 143 1 195 1 47 2 218 1 168 1 236 1 219 1 122 1 100 1 263 1 345 1 306 1 173 1 329 1 308 1 104 1 243 1 105 1 130 1 12 1 57 1 107 1 183 1 
293 2 274 1 143 2 195 1 47 6 166 1 300 1 145 1 198 2 168 1 219 1 122 1 148 1 100 1 345 3 267 1 173 1 329 2 308 1 104 1 105 1 183 3 182 1 185 1 61 1 211 1 
293 4 137 1 274 2 116 2 93 3 143 1 195 2 47 13 235 1 218 1 198 1 168 2 219 2 100 11 122 11 24 1 263 2 345 8 173 4 152 3 238 1 307 1 329 2 308 2 104 2 105 1 311 1 12 1 183 5 108 1 156 1 132 1 
293 2 161 1 274 1 296 1 195 1 47 2 218 1 198 1 168 1 236 2 262 1 219 1 121 1 201 1 266 1 345 1 126 1 283 1 127 1 173 1 79 1 175 1 328 1 205 1 56 1 243 2 104 1 105 1 130 1 57 1 107 1 183 1 108 1 156 1 249 1 40 1 65 1 189 1 
274 3 143 4 195 3 47 18 145 1 198 2 236 3 99 1 201 2 100 7 282 2 283 2 9 1 153 2 328 1 238 4 205 1 329 8 56 2 104 3 243 3 105 3 12 2 57 1 107 1 108 1 61 1 156 1 249 3 211 1 212 2 65 3 293 6 161 2 116 2 166 1 300 1 218 1 168 3 262 2 219 3 121 2 122 7 263 2 266 2 345 10 77 1 174 1 173 7 175 2 308 3 129 2 130 1 182 1 183 8 185 1 40 1 189 3 188 2 
293 2 176 1 238 1 274 1 329 1 308 1 47 2 195 1 104 1 105 1 168 1 219 1 122 1 100 1 263 1 345 2 267 1 173 1 
293 2 274 1 329 1 44 1 143 1 195 1 47 1 104 1 105 1 12 1 168 1 183 1 219 1 122 1 100 1 267 1 173 1 
293 2 238 1 274 1 329 2 308 1 116 1 143 1 47 3 195 1 104 1 105 1 12 1 168 1 183 1 219 1 122 2 100 2 263 1 345 2 267 1 173 2 
252 1 293 2 176 1 238 1 274 1 329 1 308 1 47 2 195 1 104 1 105 1 168 1 219 1 122 1 100 1 263 1 345 2 173 1 
252 1 293 2 274 1 329 1 44 1 143 1 195 1 47 1 104 1 105 1 12 1 168 1 183 1 219 1 122 1 100 1 173 1 
252 1 293 2 238 1 274 1 329 2 308 1 116 1 143 1 47 3 195 1 104 1 105 1 12 1 168 1 183 1 219 1 122 2 100 2 263 1 345 2 173 2 
293 2 238 1 274 1 329 2 308 1 116 1 143 1 195 1 47 3 104 1 105 1 12 1 168 1 183 1 219 1 122 2 100 2 263 1 345 2 173 2 
293 2 161 1 274 1 47 2 195 1 198 1 236 1 168 1 262 1 219 1 121 1 201 1 345 1 266 1 283 1 175 1 205 1 56 1 243 1 104 1 105 1 183 1 108 1 156 1 249 1 212 1 65 1 189 1 
293 2 274 1 47 2 195 1 198 1 236 1 168 1 262 1 219 1 201 1 123 1 345 1 266 1 283 1 175 1 80 1 205 1 56 1 243 1 104 1 105 1 183 1 108 1 156 1 249 1 361 1 65 1 189 1 
293 2 238 1 274 1 329 2 308 1 116 1 143 1 47 3 195 1 104 1 105 1 12 1 218 1 168 1 183 1 219 1 122 2 100 2 263 1 345 2 173 2 
293 2 161 1 274 1 116 1 143 1 47 3 195 1 236 1 168 1 262 1 219 1 121 1 122 2 100 2 201 1 263 1 345 2 266 1 282 1 283 1 173 2 175 1 238 1 329 2 308 1 56 1 243 1 104 1 105 1 12 1 246 1 183 1 249 1 212 1 65 1 189 1 
293 2 159 1 42 1 136 1 274 1 116 1 195 1 47 3 218 1 168 1 236 1 219 1 100 1 122 1 263 1 345 2 173 1 308 1 104 1 243 1 105 1 130 1 12 1 57 1 183 1 107 1 
293 4 190 1 274 2 217 1 116 3 93 2 143 3 195 2 47 16 168 2 344 2 24 1 263 3 26 1 345 9 203 2 346 1 204 1 348 1 152 1 238 3 307 1 329 6 308 3 104 2 12 3 183 7 37 1 213 1 
293 6 274 3 45 2 217 2 116 3 143 2 93 2 195 3 47 24 96 1 342 1 51 1 168 3 344 1 263 3 345 14 203 4 346 1 204 1 31 1 348 2 152 2 238 2 349 1 329 4 307 2 308 3 104 3 12 2 183 10 37 1 251 1 213 1 
293 6 274 3 45 1 217 1 116 4 93 4 143 4 195 3 47 37 166 1 196 1 300 1 145 1 96 1 342 1 51 1 168 3 344 1 24 1 263 4 26 1 345 20 203 4 346 1 204 1 31 1 348 2 152 3 238 4 349 1 307 3 329 8 308 5 104 3 12 4 182 1 183 17 37 1 61 1 185 1 211 1 251 1 213 1 
293 8 274 4 45 2 217 1 116 4 93 4 143 4 195 4 47 35 166 1 196 1 300 1 145 1 96 1 342 1 51 1 168 4 344 1 24 1 263 4 26 1 345 20 203 4 346 1 204 1 31 1 348 2 152 3 238 3 349 1 307 3 329 7 308 5 104 4 12 3 182 1 183 15 37 1 61 1 185 1 211 1 251 1 213 1 
293 4 137 2 274 2 45 1 217 1 116 7 93 4 143 7 195 2 47 45 166 1 300 1 145 1 96 1 342 1 51 1 168 2 344 1 24 2 263 7 345 27 203 4 346 1 204 1 31 1 348 1 152 4 238 7 349 1 307 2 329 14 308 8 104 2 12 7 182 1 183 18 37 1 61 1 185 1 211 1 251 1 213 1 
290 1 113 1 60 1 337 1 291 1 82 1 87 1 257 1 242 1 288 1 
78 1 340 1 
290 1 113 1 60 1 291 1 128 1 87 1 8 1 242 1 74 1 
278 1 232 1 
109 1 102 1 119 1 
113 1 337 1 82 1 194 1 233 1 208 1 180 1 269 1 242 1 288 1 290 1 271 1 60 1 291 1 302 1 210 1 87 1 333 2 
113 1 337 1 82 1 194 1 233 1 208 1 180 1 269 1 242 1 288 1 290 1 271 1 60 1 291 1 302 1 210 1 87 1 333 2 
113 1 337 1 82 1 194 1 233 1 208 1 180 1 269 1 242 1 288 1 290 1 271 1 60 1 291 1 302 1 210 1 87 1 333 2 
278 1 232 1 109 1 
278 1 232 1 109 1 
102 1 119 1 
109 1 102 1 119 1 
6 1 294 1 
90 1 113 1 294 1 340 1 198 1 236 2 261 1 6 1 170 1 78 1 284 1 206 1 208 1 180 1 269 1 243 2 242 1 130 2 290 1 57 2 60 1 107 2 291 1 210 1 87 1 39 1 333 1 
293 2 274 1 164 1 195 1 47 2 144 1 218 1 146 1 168 1 236 2 98 1 219 1 301 2 201 1 266 1 28 1 345 1 305 1 283 1 56 1 243 2 104 1 105 1 106 1 57 2 183 1 108 1 156 1 249 2 65 2 189 2 
326 1 205 1 56 1 197 1 289 1 199 1 201 1 249 1 266 1 283 1 65 1 157 1 189 1 273 1 
230 1 214 2 275 1 56 1 309 1 351 1 197 1 86 1 237 1 201 1 249 1 221 1 316 1 65 1 362 1 174 1 189 1 273 1 
230 1 214 2 275 1 56 1 309 1 351 1 197 1 86 1 246 1 237 1 201 1 249 2 221 1 316 1 65 2 362 1 174 1 189 2 273 1 
230 1 214 2 275 1 56 1 309 1 351 1 341 1 197 1 237 1 201 1 249 1 221 1 316 1 65 1 362 1 174 1 189 1 
83 1 
231 1 191 1 193 1 17 1 163 1 194 1 177 1 142 1 141 1 30 1 
163 5 308 2 194 5 116 2 118 5 129 1 12 2 226 10 330 2 263 2 265 5 62 5 317 1 30 3 
244 1 194 1 141 1 208 1 180 1 64 1 
336 2 191 2 231 2 163 2 256 1 142 2 260 1 199 1 201 1 101 1 266 1 202 2 283 1 172 2 30 2 326 1 205 2 350 1 223 1 56 1 177 1 208 3 180 3 244 2 184 1 249 4 65 4 64 4 189 4 
193 1 17 1 163 1 148 1 194 1 141 1 30 1 
191 1 231 1 163 1 194 2 142 1 141 1 30 1 32 1 177 1 286 1 208 1 180 1 244 1 59 1 226 1 62 1 64 1 
175 1 231 1 191 1 205 1 56 2 177 1 142 1 129 1 224 1 270 1 50 1 201 1 14 1 249 1 266 2 279 1 283 1 65 1 30 1 189 1 
191 2 231 2 163 5 194 5 142 2 141 2 118 5 116 2 93 1 21 1 96 1 51 1 263 2 265 5 202 1 172 1 30 6 31 1 152 1 349 1 307 1 308 2 177 2 208 1 180 1 244 1 12 2 312 1 226 6 330 2 62 3 317 1 64 1 251 1 
16 1 191 1 231 1 136 1 163 2 142 1 92 1 72 1 20 1 300 1 49 1 145 1 236 1 30 2 308 2 177 1 208 1 180 1 287 1 243 1 130 1 57 1 107 1 13 1 330 2 61 1 211 1 317 1 
293 2 161 1 274 1 136 2 92 1 47 1 195 1 198 1 236 3 168 1 262 1 219 1 121 1 201 1 266 1 283 1 175 1 205 1 34 1 56 1 104 1 243 3 130 2 105 1 57 2 183 1 107 2 108 1 249 1 212 1 65 1 189 1 
231 1 191 1 163 2 194 4 177 1 142 1 141 2 118 2 182 1 226 4 265 2 62 2 202 1 172 1 30 1 
290 1 6 1 113 1 337 1 4 1 
290 1 113 1 38 1 
290 1 113 1 38 1 
290 1 113 1 38 1 
290 1 113 1 358 1 
290 1 113 1 358 1 
290 1 113 1 358 1 
290 1 113 1 
291 1 87 1 
293 2 274 1 238 2 329 5 308 2 143 3 195 1 47 10 20 1 104 1 300 1 145 2 168 1 183 5 61 2 345 5 211 2 213 1 
293 2 274 1 238 1 329 1 308 1 195 1 47 2 104 1 168 1 263 1 345 2 213 1 
293 2 274 1 238 1 329 2 308 1 116 1 143 1 195 1 47 3 104 1 12 1 168 1 183 1 263 1 345 2 213 1 
293 6 274 3 238 1 329 2 45 1 143 1 47 3 195 3 104 3 145 1 168 3 183 2 26 1 61 1 345 1 67 1 213 1 
293 10 274 5 45 2 116 3 93 4 143 7 195 5 47 31 166 1 300 2 145 3 168 5 24 1 263 3 304 1 26 1 345 16 152 3 238 5 307 1 329 12 308 5 354 1 104 5 310 1 12 3 182 1 183 15 61 3 185 1 211 2 332 1 67 1 213 1 
293 4 238 1 274 2 329 3 308 1 45 1 143 2 47 8 195 2 166 1 300 1 104 2 145 1 168 2 182 1 183 4 185 1 61 1 345 4 211 1 
329 2 308 1 143 2 47 6 166 1 300 1 145 1 182 1 183 3 148 1 185 1 61 1 345 3 211 1 
293 2 274 1 238 1 329 2 308 1 116 1 143 1 195 1 47 3 104 1 12 1 168 1 183 1 263 1 345 2 332 1 
152 1 238 1 307 1 329 2 308 1 116 1 143 1 93 2 47 6 12 1 183 3 24 1 263 1 345 3 
293 2 137 1 274 1 45 1 116 2 143 4 93 2 47 18 195 1 166 1 300 1 145 2 168 1 24 1 263 2 345 10 152 2 238 2 329 6 308 3 104 1 12 2 182 1 183 8 61 2 185 1 132 1 211 1 
183 1 93 1 47 1 
152 1 345 1 47 1 
293 2 274 1 238 1 329 3 308 1 116 1 129 1 143 2 195 1 47 5 104 1 12 1 168 1 183 2 263 1 345 3 332 1 
293 2 274 1 116 2 93 1 143 1 47 10 195 1 96 1 168 1 51 1 263 2 345 6 31 1 152 1 238 1 349 1 307 1 329 2 308 2 104 1 12 2 183 4 251 1 213 1 
238 1 329 2 308 1 143 1 47 6 300 1 145 1 183 3 61 1 345 3 211 1 
293 2 238 1 274 1 329 2 45 1 143 1 47 3 195 1 166 1 104 1 145 1 168 1 183 2 61 1 185 1 345 1 67 1 
293 2 274 1 93 1 143 2 47 8 195 1 166 1 300 1 145 1 168 1 345 4 152 1 307 1 329 2 308 1 104 1 182 1 183 4 185 1 61 1 211 1 251 1 213 1 
293 4 274 2 116 1 143 2 93 2 47 11 195 2 166 1 300 1 145 1 168 2 24 1 263 1 345 6 152 1 238 1 307 1 329 3 308 2 104 2 182 1 183 5 61 1 185 1 211 1 332 1 251 1 213 1 
293 6 274 3 45 1 116 2 93 1 143 3 47 17 195 3 166 1 300 1 145 1 96 1 168 3 51 1 263 2 345 9 31 1 152 1 238 1 349 1 307 1 329 4 308 3 104 3 12 2 182 1 183 8 61 1 185 1 211 1 332 1 251 1 213 1 
293 6 274 3 45 1 116 2 93 1 143 3 47 16 195 3 166 1 300 1 145 1 96 1 168 3 51 1 263 2 345 10 31 1 152 1 238 2 349 1 307 1 329 5 308 3 104 3 12 1 182 1 183 6 61 1 185 1 211 1 332 1 251 1 213 1 
293 2 274 1 93 1 143 2 47 8 195 1 166 1 300 1 145 1 168 1 345 4 152 1 307 1 329 2 308 1 104 1 182 1 183 4 185 1 61 1 211 1 251 1 213 1 
293 2 274 1 116 2 93 1 143 1 47 10 195 1 96 1 168 1 51 1 263 2 345 6 31 1 152 1 238 1 349 1 307 1 329 2 308 2 104 1 12 2 183 4 251 1 213 1 
293 8 274 4 45 2 116 2 93 1 143 3 47 17 195 4 166 1 300 1 145 1 96 1 168 4 51 1 263 2 345 10 31 1 152 1 238 2 349 1 307 1 329 5 308 3 104 4 12 1 182 1 183 7 61 1 185 1 211 1 332 1 251 1 213 1 
293 8 274 4 45 2 116 3 93 1 143 3 47 14 195 4 96 1 168 4 51 1 263 3 26 1 345 9 31 1 152 1 238 3 349 1 307 1 329 6 308 3 104 4 12 2 183 5 251 1 213 1 
238 3 329 6 308 1 143 3 47 7 166 2 300 1 145 3 183 4 185 1 61 3 345 3 211 1 
293 8 274 4 45 2 116 2 93 1 143 3 47 17 195 4 166 1 300 1 145 1 96 1 168 4 51 1 263 2 26 1 345 10 31 1 152 1 238 1 349 1 307 1 329 4 308 3 104 4 12 1 182 1 183 7 61 1 185 1 211 1 251 1 213 1 
327 1 111 1 339 1 
0 1 327 1 43 1 149 1 41 1 111 1 280 1 339 1 
326 1 205 1 56 1 85 1 246 1 199 1 201 1 27 1 249 4 266 1 65 4 283 1 189 4 
175 1 56 2 73 1 299 1 169 1 99 1 201 1 249 1 266 1 65 1 325 1 283 1 189 1 
230 1 214 1 201 1 205 1 275 1 56 1 249 1 351 1 65 1 189 1 
56 1 144 1 246 1 98 1 201 1 249 2 266 1 65 2 283 1 174 1 189 2 
336 1 326 1 205 1 56 2 85 1 144 1 35 1 199 1 246 1 201 2 249 5 266 3 65 4 283 2 189 5 335 1 
336 1 326 1 205 1 56 2 85 1 144 1 35 1 199 1 246 1 167 1 201 2 249 5 266 3 65 4 283 2 189 5 
326 1 199 1 201 1 148 1 205 1 56 1 249 1 266 1 283 1 65 1 189 1 
175 1 161 1 205 1 56 1 243 2 130 1 198 1 57 1 236 2 262 1 107 1 201 1 249 1 266 1 40 1 283 1 65 1 189 1 
336 1 134 1 175 2 112 1 161 1 56 1 243 2 130 2 49 1 198 1 57 2 236 2 209 1 262 1 107 1 247 1 201 1 249 1 266 3 40 1 283 2 65 1 189 1 
336 1 134 1 175 2 112 1 56 1 243 2 130 2 49 1 198 1 57 2 236 2 209 1 262 1 107 1 247 1 201 1 27 1 249 2 266 3 40 1 361 1 283 2 65 2 189 2 
69 1 336 1 175 1 112 1 205 1 194 1 141 1 56 1 19 1 208 2 180 2 270 1 209 1 322 1 201 1 27 1 249 3 150 1 266 4 283 1 65 3 64 1 189 3 
336 1 175 1 112 1 19 1 56 1 208 1 180 1 259 1 270 1 209 1 201 1 249 1 266 4 283 1 65 1 189 1 
318 1 201 1 56 1 249 1 65 1 189 1 
175 1 205 1 56 2 353 1 299 1 169 1 201 1 249 1 266 1 279 1 65 1 283 1 189 1 
274 2 143 2 195 2 47 6 145 1 146 1 198 2 236 2 201 1 100 1 282 1 283 1 153 1 329 2 56 1 104 2 243 2 105 2 246 1 57 1 107 1 61 1 249 1 211 1 212 1 65 1 293 4 161 1 166 1 300 1 218 1 168 2 262 1 219 2 121 1 122 1 266 1 345 3 173 1 175 1 308 1 130 1 183 3 182 1 185 1 40 1 189 1 
231 1 191 1 205 1 19 1 177 1 142 1 208 1 180 1 298 1 165 1 259 1 270 1 245 1 170 1 101 1 249 1 266 2 65 1 189 1 
175 1 318 1 19 1 56 2 246 1 50 1 201 1 249 2 266 2 279 1 65 2 283 1 189 2 
175 1 205 1 56 1 243 2 130 1 198 1 57 1 236 2 262 1 107 1 201 1 249 1 266 1 40 1 361 1 283 1 65 1 189 1 
336 1 175 1 56 2 353 1 299 1 169 1 201 1 249 1 266 1 279 1 65 1 283 1 189 1 
198 1 160 1 29 1 63 1 103 1 
134 1 160 1 194 1 1 1 141 1 208 2 179 1 180 2 49 1 48 1 198 1 247 1 170 1 313 1 150 1 360 1 63 2 29 2 103 2 
160 1 243 1 106 1 57 1 236 1 28 1 63 1 305 1 103 1 
48 1 160 1 360 1 
229 1 36 1 91 1 303 1 216 1 187 1 347 1 68 1 
158 1 91 1 207 1 2 2 216 2 338 1 36 3 200 1 303 4 248 1 186 1 187 1 347 2 68 4 
229 1 91 1 2 1 216 1 94 1 357 1 36 1 303 2 110 1 187 1 347 1 68 2 
229 1 158 2 91 1 216 1 36 1 200 2 303 3 186 1 187 1 66 1 68 3 347 1 
36 2 115 2 84 1 268 1 
229 1 131 1 91 1 303 1 187 1 68 1 
229 1 36 1 91 1 303 2 2 1 216 1 15 1 187 1 347 1 68 2 
70 1 
229 1 36 1 91 1 303 1 216 1 187 1 347 1 68 1 
36 1 148 1 216 1 347 1 
36 1 91 1 303 1 216 1 187 1 347 1 68 1 
5 1 240 1 68 1 
229 1 158 1 91 1 10 1 216 1 36 1 200 2 303 3 186 1 187 1 68 3 347 1 
36 1 7 1 91 1 303 2 2 1 216 1 187 1 347 1 68 2 
229 1 214 1 91 1 275 1 36 1 147 1 303 1 248 1 316 1 187 1 68 1 
229 1 36 1 91 1 303 1 187 1 347 1 68 1 
229 1 91 1 303 1 216 1 187 1 347 2 68 1 
229 1 91 2 297 1 355 1 36 1 303 2 151 1 187 2 347 1 68 2 
229 1 91 1 2 2 216 1 338 1 58 1 36 2 303 3 248 1 15 1 187 1 347 1 68 3 
230 1 229 1 214 2 91 1 239 1 275 1 2 1 216 1 36 1 303 2 316 1 187 1 362 1 347 1 68 2 
229 1 91 2 138 1 2 2 216 1 338 1 36 2 7 1 303 4 248 1 187 2 347 1 68 4 
229 1 36 1 200 1 91 1 303 3 2 1 216 1 15 1 187 1 347 1 68 3 
36 1 207 1 248 1 338 1 
36 1 347 1 

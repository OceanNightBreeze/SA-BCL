#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 166 187 194 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 166 187 194 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 166 187 (53,159) (53,159) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 166 187 (53,159) (53,159) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArithmeticException 166 187 (53,159) (53,159) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArithmeticException 166 187 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 228 69 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 228 69 184 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 228 290 64 11 (252,277) 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 229 127 45 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 229 127 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 40 261 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 308 28 171 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 308 28 171 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 308 28 171 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 308 28 171 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 308 28 171 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 288 15 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 228 278 292 273 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 228 69 124 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 228 69 210 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 308 245 192 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V ERROR java.lang.NullPointerException 308 189 111 117 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V ERROR java.lang.NullPointerException 228 290 64 11 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 308 189 111 117 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 228 290 64 11 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 228 69 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 228 69 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 228 113 59 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 228 113 59 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 228 113 59 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 228 113 59 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 228 113 59 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 308 245 192 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 228 69 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 40 (74,155) 181 13 (134,190) 100 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 229 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V ERROR java.lang.NullPointerException 191 130 237 (176,240) (176,240) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 191 130 237 (176,240) (176,240) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 228 278 272 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 228 278 292 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V ERROR java.lang.NullPointerException 228 278 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V ERROR java.lang.NullPointerException 308 108 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V ERROR java.lang.NullPointerException 228 202 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 228 278 272 21 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V ERROR java.lang.NullPointerException 308 189 235 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V ERROR java.lang.NullPointerException 228 188 
com.domainlanguage.intervals.IntervalTest:testToString()V ERROR java.lang.NullPointerException 191 130 237 205 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V ERROR java.lang.NullPointerException 308 189 111 
com.domainlanguage.intervals.IntervalTest:testIncludes()V ERROR java.lang.NullPointerException 308 189 111 80 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V ERROR java.lang.NullPointerException 191 130 237 
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 228 278 272 1 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 40 (154,214) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 40 (74,155) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 191 130 237 (176,240) (176,240) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 40 (74,155) 181 13 (134,190) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 40 
com.domainlanguage.time.DurationTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource; | OPERATOR | 743 | == -> !=
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | CONDITION | 3976 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> 1
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | CONSTANT | 2875 | 0 -> -1
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V | STATEMENT | 1947 | stmt -> ;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | OPERATOR | 2548 | >= -> <=
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10137 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONDITION | 4784 | if (x) -> if (!x)
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
46 1 2 2 50 3 114 1 71 1 123 7 194 1 236 1 213 7 212 1 147 1 301 2 217 1 79 2 81 5 164 1 304 1 183 3 166 1 187 1 90 1 
46 1 2 2 50 3 114 1 71 1 123 7 194 1 236 1 213 7 212 1 147 1 301 2 217 1 79 2 81 5 164 1 304 1 183 3 166 1 187 1 90 1 
46 1 2 2 170 1 50 3 114 2 53 1 71 2 211 1 123 7 212 1 236 2 213 7 147 1 301 2 217 1 79 2 159 1 81 4 164 1 183 3 255 1 166 2 187 1 90 1 206 1 
46 1 2 2 170 1 50 3 114 2 53 1 71 2 211 1 123 7 212 1 236 2 213 7 147 1 301 2 217 1 79 2 159 1 81 4 164 1 183 3 255 1 166 2 187 1 90 1 206 1 
46 1 2 2 170 1 50 3 114 2 53 1 71 2 211 1 123 7 212 1 236 2 213 7 147 1 301 2 217 1 79 2 159 1 81 4 164 1 183 3 255 1 166 2 187 1 90 1 206 1 
46 1 2 2 170 1 50 4 53 1 211 1 213 7 212 1 147 1 217 1 183 3 255 1 187 1 114 2 71 2 122 1 123 7 236 2 301 2 159 1 79 2 81 4 164 1 166 2 90 1 309 1 206 1 
46 1 2 1 50 1 114 1 123 2 236 1 213 2 147 1 301 1 81 1 183 1 166 1 187 1 90 1 
67 1 2 1 50 1 71 1 211 1 122 1 123 2 213 2 236 1 301 1 60 1 166 1 90 1 110 1 309 1 206 1 
2 2 50 2 71 1 122 1 123 3 213 3 212 1 301 2 79 1 81 1 183 1 90 1 309 1 
102 1 
7 1 253 1 284 2 
179 2 25 2 20 2 97 2 203 2 168 1 145 2 23 1 
208 1 4 2 96 1 97 2 174 1 145 3 215 1 179 3 280 1 18 1 20 2 256 1 23 1 25 2 69 1 228 1 31 1 231 1 295 1 74 1 238 1 303 1 125 1 82 2 201 1 203 2 136 2 207 1 271 1 
179 1 25 1 198 1 51 1 20 1 97 1 54 1 203 1 145 1 23 1 
51 1 7 1 175 1 145 1 178 1 179 1 239 1 20 1 84 1 242 1 86 1 41 1 285 1 66 1 
25 1 51 1 97 1 7 1 175 1 145 1 179 1 239 2 20 1 84 1 86 2 203 1 242 1 41 1 66 1 
77 1 239 1 85 1 86 1 35 1 
77 1 239 2 7 1 86 2 41 1 204 1 35 1 250 1 
77 1 239 1 86 1 
0 1 25 1 51 1 54 1 97 1 35 1 145 1 179 1 198 1 239 1 20 1 86 1 203 1 23 1 
7 1 
77 1 239 2 38 1 7 1 86 2 41 1 204 1 35 1 
137 1 48 2 7 1 98 1 34 1 195 1 10 2 299 1 35 2 239 5 77 2 218 1 161 1 39 2 86 5 87 1 41 1 204 1 289 1 
25 1 96 1 4 1 31 1 231 1 145 2 74 1 277 1 303 1 179 2 280 1 221 1 18 1 201 1 82 1 20 1 203 1 44 1 136 1 271 1 
102 1 
25 1 97 1 145 2 179 2 158 1 20 2 203 1 168 2 258 1 
22 1 287 1 277 1 
4 1 96 1 231 1 31 1 145 1 74 1 179 1 303 1 280 1 18 1 201 1 82 1 282 1 168 1 136 1 271 1 
25 4 156 1 97 1 249 1 145 5 302 1 179 5 221 2 20 5 203 4 285 1 168 1 44 1 258 1 
179 2 25 2 198 1 51 1 294 1 20 2 203 2 145 2 
179 3 25 3 221 1 97 1 20 3 203 3 168 1 145 3 
179 1 25 1 198 1 51 1 20 1 203 1 145 1 
179 1 25 1 158 1 51 1 20 1 97 1 203 1 145 1 258 1 
96 1 51 1 4 1 97 2 175 1 145 4 215 1 179 4 280 1 221 1 18 1 20 3 184 1 256 1 66 1 258 1 23 1 25 3 69 1 228 1 31 1 231 1 74 1 238 1 303 1 239 1 125 1 201 1 82 1 305 1 84 1 203 3 242 1 86 1 44 1 271 1 207 1 136 1 
179 2 25 1 221 1 20 2 203 1 285 1 249 1 168 1 145 2 
25 3 51 1 97 1 7 1 175 1 145 3 179 3 239 1 221 2 20 3 305 1 84 1 86 1 203 3 242 1 44 1 66 1 258 1 260 1 
179 2 25 2 221 1 20 2 97 1 203 2 22 1 145 2 258 1 277 1 
4 1 96 1 231 1 31 1 145 1 74 1 179 1 303 1 280 1 201 1 82 1 18 1 168 1 136 1 271 1 
4 1 96 1 231 1 31 1 298 1 145 1 214 1 179 1 303 1 280 1 201 1 82 1 18 1 168 1 136 1 
290 1 215 1 238 1 252 1 228 1 125 1 262 1 64 1 11 1 
179 1 25 1 51 1 20 1 294 1 203 1 175 1 145 1 
246 1 180 1 
246 1 180 1 
263 1 226 1 
263 1 226 1 
263 1 226 1 
246 1 180 1 276 1 
246 2 180 2 306 1 263 1 88 1 226 1 
246 1 180 1 197 1 
246 1 180 1 197 1 
246 1 180 1 197 1 
265 1 246 1 180 1 
265 1 246 1 180 1 
265 1 246 1 180 1 
45 1 239 1 246 1 229 1 180 1 127 1 157 1 86 1 177 1 
246 1 229 1 180 1 127 1 157 1 177 1 
114 1 166 1 236 1 
67 1 166 1 236 1 
67 1 26 1 95 1 70 1 114 2 236 3 
67 1 26 1 95 1 114 1 232 1 236 2 
67 1 26 1 95 2 114 1 236 2 
48 1 7 2 142 1 10 1 16 1 62 1 253 1 283 2 284 3 64 1 111 1 189 1 289 3 290 1 230 1 296 1 297 1 35 4 266 1 77 1 239 5 80 1 126 2 161 1 200 1 39 1 86 5 87 2 204 1 41 1 269 2 91 1 
48 2 6 5 7 5 142 2 9 1 144 1 10 2 55 1 62 1 253 3 284 9 64 3 111 3 189 3 289 8 290 3 29 1 32 1 296 2 195 1 35 7 77 6 239 9 80 3 126 6 200 4 161 1 39 2 85 5 86 9 132 1 87 6 41 1 204 1 269 6 
48 1 7 3 142 1 10 1 253 2 283 1 284 4 64 1 111 1 289 3 189 1 290 1 230 1 296 1 195 1 35 2 239 3 80 1 200 1 126 2 39 1 86 3 87 2 41 1 269 2 91 1 
48 1 7 4 142 1 9 1 10 1 253 3 283 2 284 7 64 2 111 2 289 5 189 2 290 2 29 1 230 1 296 1 195 1 35 3 239 4 80 2 126 4 200 2 39 1 86 4 132 1 87 4 41 1 269 4 91 1 
102 1 
18 1 186 1 
270 1 
303 1 18 1 31 1 
76 1 18 1 
303 1 18 1 
303 1 261 1 199 1 18 1 31 1 40 1 
101 1 28 1 171 1 308 1 
101 1 28 1 171 1 308 1 
101 1 28 1 171 1 165 1 308 1 
101 1 28 1 171 1 308 1 
101 1 28 1 171 1 308 1 
2 1 50 1 4 1 141 1 213 2 150 1 280 1 257 1 67 1 291 1 70 1 114 1 231 1 120 1 71 1 122 1 123 2 236 2 301 1 264 1 78 1 81 1 82 1 268 1 243 1 166 1 90 1 244 1 309 1 136 1 
94 1 2 1 50 1 4 1 275 1 213 3 150 1 280 1 257 1 67 1 291 1 70 1 114 1 231 1 120 1 71 1 122 1 33 1 123 3 236 2 301 1 78 1 81 2 82 1 268 1 243 1 166 1 244 1 309 1 136 1 
50 1 4 1 275 1 213 2 150 1 280 1 67 1 291 1 70 1 114 1 231 1 71 1 120 1 122 1 33 1 123 2 236 2 81 2 82 1 268 1 243 1 166 1 244 1 309 1 136 1 
94 1 2 1 4 1 52 1 247 1 8 1 213 1 146 1 14 1 148 1 279 1 150 2 280 1 18 1 104 1 254 1 27 1 231 2 31 1 120 2 71 2 123 1 301 1 303 1 82 1 201 1 129 1 243 2 136 1 
2 1 4 1 213 1 150 1 280 1 257 1 67 1 291 1 70 1 114 1 231 1 120 1 71 1 33 1 123 1 236 2 301 1 264 1 78 1 82 1 268 1 243 1 166 1 90 1 244 1 136 1 
68 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
48 1 51 1 115 1 116 1 175 1 10 1 145 1 178 1 179 1 239 2 15 1 161 1 20 1 84 1 39 1 242 1 86 2 285 1 66 1 288 1 
48 1 4 2 5 1 247 1 8 1 10 1 148 1 149 1 280 1 18 1 63 1 104 1 289 1 27 1 231 2 31 1 296 1 303 1 239 2 77 2 161 1 82 2 201 2 39 1 86 2 87 1 204 1 136 2 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 3 77 1 15 1 38 1 20 1 84 1 242 1 86 3 204 1 285 1 66 1 288 1 
48 1 51 1 115 1 116 1 175 1 10 1 145 1 178 1 179 1 239 2 15 1 161 1 20 1 84 1 39 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
51 1 115 1 116 1 175 1 145 1 178 1 179 1 239 2 15 1 20 1 84 1 242 1 86 2 285 1 66 1 288 1 
215 1 238 1 102 1 125 1 262 1 
215 1 238 1 292 1 278 1 273 1 228 1 125 1 281 1 
25 1 69 1 228 1 145 1 124 1 179 1 238 1 215 1 221 1 125 1 281 1 20 1 203 1 44 1 
25 1 69 1 4 1 228 1 210 1 145 1 179 1 238 1 215 1 221 1 125 1 82 1 281 1 201 1 20 1 203 1 44 1 136 1 
215 1 238 1 245 1 4 1 125 1 192 1 82 1 201 1 185 1 308 1 136 1 
25 1 97 1 145 1 238 1 215 1 179 1 80 1 37 1 125 1 281 1 20 1 203 1 111 1 308 1 189 1 258 1 
215 1 238 1 125 1 262 1 117 1 111 1 308 1 189 1 
290 1 215 1 238 1 228 1 125 1 262 1 64 1 11 1 
215 1 238 1 80 1 125 1 262 1 111 1 308 1 189 1 
215 1 238 1 125 1 117 1 185 1 111 1 308 1 189 1 
290 1 215 1 238 1 228 1 125 1 64 1 185 1 11 1 
215 1 238 1 80 1 125 1 185 1 111 1 308 1 189 1 
215 1 238 1 80 1 125 1 111 1 308 1 189 1 
69 1 4 1 96 1 228 1 231 1 31 1 145 1 74 1 215 1 238 1 179 1 303 1 280 1 125 1 18 1 201 1 82 1 136 1 207 1 271 1 
69 1 4 1 96 1 228 1 231 1 31 1 298 1 145 1 214 1 215 1 238 1 179 1 303 1 280 1 125 1 18 1 201 1 82 1 153 1 136 1 
215 1 238 1 80 1 125 1 281 1 111 1 308 1 189 1 
4 1 96 1 231 1 31 1 141 1 145 1 74 1 215 1 238 1 179 1 303 1 80 1 280 1 125 1 18 1 82 1 111 1 308 1 189 1 92 1 136 1 207 1 271 1 
25 1 97 1 145 1 238 1 215 1 179 1 80 1 222 1 125 1 281 1 20 1 203 1 111 1 308 1 189 1 258 1 
215 1 59 1 113 1 160 1 228 1 307 1 65 1 99 1 
215 1 59 1 113 1 160 1 228 1 307 1 65 1 99 1 
215 1 59 1 113 1 160 1 228 1 307 1 65 1 99 1 
215 1 59 1 113 1 160 1 228 1 307 1 65 1 99 1 
215 1 59 1 113 1 160 1 228 1 307 1 65 1 99 1 
245 1 192 1 248 1 145 2 12 1 179 2 238 1 215 1 125 1 163 1 281 1 20 2 83 1 308 1 
67 1 93 1 291 1 70 1 49 1 114 1 4 2 231 1 141 1 33 1 236 2 150 1 280 1 82 2 166 1 257 1 244 1 136 2 259 1 
67 1 291 1 70 1 49 1 114 1 4 1 231 1 33 1 236 2 150 1 280 1 82 1 166 1 257 1 244 1 136 1 24 1 
93 1 27 1 112 1 4 1 231 2 31 1 247 1 8 1 14 1 303 1 148 1 150 1 280 1 18 1 201 1 82 1 104 1 254 1 136 1 
67 1 93 1 291 1 70 1 49 1 114 1 4 1 231 1 33 1 236 2 150 1 280 1 82 1 166 1 257 1 244 1 136 1 259 1 
140 1 
25 2 69 1 96 1 4 1 228 1 31 1 231 1 97 2 145 3 74 1 215 1 238 1 303 1 179 3 280 1 125 1 18 1 201 1 82 1 20 2 203 2 256 1 23 1 271 1 207 1 136 1 
48 1 28 1 7 4 296 1 10 1 149 1 126 2 161 1 253 2 39 1 284 4 87 2 41 2 269 2 289 1 
102 1 
48 1 161 1 39 1 87 1 167 1 10 1 289 1 56 1 
48 1 4 1 10 1 100 1 13 1 280 1 181 1 18 3 186 2 155 1 289 1 190 1 30 1 31 1 231 2 296 1 303 1 77 1 199 1 161 1 82 1 201 1 39 1 40 1 136 1 
48 2 272 1 7 5 10 2 58 1 149 1 278 1 219 2 151 1 103 1 253 3 284 6 21 1 64 2 108 1 286 1 111 2 289 8 189 2 290 2 227 1 296 1 118 1 234 1 239 1 77 1 80 2 126 5 161 2 39 2 86 1 87 5 204 1 41 2 269 5 
0 1 48 1 51 1 54 1 97 1 10 1 145 1 179 1 219 2 20 1 189 2 289 2 23 1 290 1 25 1 234 1 235 1 237 1 198 1 239 1 161 1 130 1 39 1 86 1 203 1 87 2 205 1 42 1 
137 1 48 1 7 1 10 1 299 1 161 1 39 1 87 1 41 1 289 1 
290 2 7 5 234 1 219 2 80 2 126 5 202 1 253 5 284 10 87 5 64 2 269 5 111 2 189 2 289 5 
239 1 77 1 7 1 86 1 41 1 204 1 
48 1 4 2 5 1 247 1 8 1 10 1 148 1 149 1 280 1 18 1 63 1 104 1 289 1 27 1 231 2 31 1 296 1 303 1 77 2 239 1 161 1 241 1 82 2 201 2 39 1 86 1 87 1 204 1 136 2 
229 1 177 1 
229 1 177 1 
229 1 177 1 
229 1 177 1 
229 1 177 1 
229 1 177 1 
229 1 177 1 
229 1 177 1 
246 1 180 1 
215 1 278 1 272 1 228 1 21 1 307 1 
215 2 278 1 272 1 228 1 119 1 21 1 307 1 
215 1 278 1 272 1 228 1 21 1 307 1 
215 1 278 1 272 1 228 1 21 1 307 1 
215 1 278 1 272 1 228 1 21 1 307 1 
215 1 278 1 272 1 228 1 21 1 307 1 
215 2 278 1 272 1 228 1 119 1 21 1 307 1 
215 2 278 1 272 1 228 1 293 1 21 1 307 1 
191 1 240 1 130 1 176 1 237 1 
215 2 278 1 272 1 228 1 293 1 21 1 307 1 
215 2 191 1 240 1 130 1 176 1 237 1 75 1 
102 1 
215 1 80 1 119 1 111 1 308 1 189 1 
278 1 272 1 228 1 
292 1 278 1 228 1 
278 1 228 1 
108 1 308 1 
228 1 202 1 
215 1 278 1 272 1 228 1 21 1 307 1 
235 1 308 1 189 1 
228 1 188 1 
191 1 130 1 205 1 237 1 
215 1 307 1 111 1 308 1 189 1 
215 1 80 1 307 1 111 1 308 1 189 1 
215 1 191 1 130 1 307 1 237 1 
1 1 215 3 278 1 272 1 228 1 293 1 119 1 307 1 
179 1 20 1 285 1 249 1 168 1 145 1 300 1 
173 1 193 1 249 1 145 1 300 1 179 1 267 1 20 1 106 1 133 1 285 1 168 1 
102 1 4 1 82 1 201 1 136 1 
25 1 96 1 4 1 31 1 231 1 145 2 74 1 303 1 179 2 280 1 221 1 18 1 201 1 82 1 20 1 203 1 168 1 136 1 
25 2 51 1 96 1 4 1 31 2 231 1 233 1 175 1 145 2 74 1 76 1 303 2 179 2 280 1 221 1 18 3 82 1 20 2 242 1 203 1 109 1 168 1 136 1 
4 2 96 1 51 1 175 1 145 2 214 1 179 2 280 1 221 1 18 3 20 2 109 1 25 2 231 1 31 2 233 1 303 2 76 1 82 2 203 1 242 1 168 1 169 1 136 2 
77 1 239 1 4 1 18 1 82 1 86 1 186 1 233 1 40 1 154 1 136 1 
77 1 239 1 4 1 18 1 82 1 86 1 186 1 233 1 40 1 155 1 136 1 
57 1 280 1 4 1 82 1 231 1 136 1 
208 1 27 1 4 6 139 1 31 1 231 3 141 1 274 1 143 1 33 1 57 1 303 2 199 1 280 2 201 2 82 7 18 3 19 1 104 1 89 1 136 7 
4 1 96 1 141 1 176 1 145 2 215 2 179 2 280 1 221 1 18 1 281 1 20 1 25 1 191 1 231 1 31 1 237 1 74 1 303 1 238 2 240 1 125 2 163 1 82 1 130 1 203 1 134 1 92 1 136 1 207 1 271 1 
48 1 4 1 10 1 35 1 13 1 77 1 239 1 161 1 18 1 181 1 82 1 241 1 201 1 39 1 86 1 186 1 40 1 155 1 190 1 136 1 
303 1 57 1 280 1 199 1 4 1 18 1 30 1 82 1 231 2 31 1 40 1 136 1 
27 1 4 2 231 2 31 1 247 1 141 1 8 1 303 1 148 1 280 1 18 1 201 1 82 2 104 1 136 2 
27 1 4 2 247 1 31 1 231 2 72 1 8 1 233 1 303 1 280 1 82 2 18 1 104 1 136 2 
67 1 280 1 4 1 82 1 201 1 231 1 166 1 236 1 244 1 136 1 
303 1 280 1 4 2 18 1 182 1 82 2 231 1 19 1 141 1 33 1 136 2 
27 1 4 2 31 1 247 1 231 3 141 1 8 1 143 1 303 2 148 1 280 2 201 1 82 3 18 3 19 1 104 1 89 1 136 3 
27 1 4 2 31 1 247 1 231 3 141 1 8 1 303 2 148 1 216 1 280 2 201 1 82 3 18 3 19 1 104 1 89 1 136 3 
25 1 96 1 4 1 31 1 231 1 145 2 214 1 303 1 179 2 280 1 221 1 18 1 201 1 82 1 20 1 203 1 168 1 136 1 
27 1 4 1 31 1 231 2 274 1 233 1 303 1 199 1 280 1 82 1 18 1 104 1 136 1 
3 1 51 1 209 1 121 1 248 1 145 1 12 1 179 1 83 1 20 1 168 1 135 2 
0 1 47 1 3 1 209 1 51 2 97 1 54 1 7 1 248 1 175 1 145 2 12 1 179 2 61 1 20 2 66 1 23 1 25 1 73 1 35 1 198 1 239 2 83 1 305 1 84 1 203 1 86 2 242 1 41 1 135 2 
3 1 209 1 
47 1 73 1 135 1 
2 1 50 1 81 1 164 1 122 1 123 3 213 3 90 1 309 1 206 1 301 1 
50 1 79 1 172 1 183 1 
50 1 309 1 
102 1 
2 1 50 1 122 1 123 1 213 1 309 1 301 1 
71 1 120 1 123 1 
2 1 50 1 122 1 123 3 213 3 301 1 251 1 128 1 223 1 90 1 206 2 309 1 
2 1 50 1 81 1 122 1 123 2 213 2 147 1 309 1 301 1 
46 1 2 1 50 1 114 1 183 1 166 1 123 1 236 1 213 1 90 1 301 1 
2 1 50 1 123 1 213 1 90 1 309 1 301 1 
2 1 122 1 123 1 213 1 90 1 309 2 301 1 
2 2 50 1 123 2 213 2 36 1 301 2 225 1 107 1 90 1 309 1 
2 1 50 2 122 1 123 3 213 3 301 1 217 1 79 1 81 2 164 1 183 1 90 1 309 1 
67 1 2 1 138 1 50 1 70 1 114 1 122 1 123 2 236 2 213 2 301 1 81 1 166 1 90 1 309 1 
2 2 50 2 122 1 123 4 213 4 196 1 147 1 301 2 79 1 81 2 183 1 90 1 309 1 
2 1 50 1 122 1 123 1 213 1 90 1 309 1 301 1 
2 1 50 3 172 1 122 2 123 4 213 4 301 1 79 1 81 2 128 1 223 1 183 1 206 1 309 2 
2 1 50 1 122 1 123 2 213 2 301 1 81 1 304 1 152 1 43 1 90 1 309 1 
2 1 50 1 220 1 128 1 223 2 122 1 123 3 213 3 90 1 309 1 206 2 301 1 
50 2 17 1 131 2 224 1 
2 1 105 1 123 1 213 1 90 1 301 1 
2 1 50 1 81 1 164 1 122 1 123 2 213 2 90 1 309 1 301 1 
162 1 
2 1 50 1 122 1 123 1 213 1 90 1 309 1 301 1 

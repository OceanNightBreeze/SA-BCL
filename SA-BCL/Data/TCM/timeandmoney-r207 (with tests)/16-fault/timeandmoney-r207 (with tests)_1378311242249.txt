#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 218 (48,343) (48,343) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 218 (48,343) (48,343) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 218 (48,343) (48,343) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 218 (48,343) (48,343) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 218 193 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 218 193 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (163,269) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (163,269) 200 120 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (163,269) 200 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (19,168,227) (19,168,227) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (19,168,227) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (19,168,227) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (153,250) (153,250) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (19,168,227) (19,168,227) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 246 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 863 | < -> <=
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | STATEMENT | 5326 | stmt -> ;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3641 | stmt -> ;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | CONSTANT | 3762 | 12 -> -1
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2522 | stmt -> ;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
48 1 218 1 309 2 310 1 275 1 86 2 76 1 190 1 299 1 41 1 343 1 192 1 167 4 8 1 348 1 145 1 305 1 127 1 160 1 9 1 353 2 183 4 
48 1 218 1 309 2 310 1 275 1 86 2 76 1 190 1 299 1 41 1 343 1 192 1 167 4 8 1 348 1 145 1 305 1 127 1 160 1 9 1 353 2 183 4 
48 1 218 1 309 2 310 1 275 1 86 2 76 1 190 1 299 1 41 1 343 1 192 1 167 4 8 1 348 1 145 1 305 1 127 1 160 1 9 1 353 2 183 4 
48 1 218 1 309 2 310 1 275 1 86 2 76 1 190 1 299 1 41 1 343 1 192 1 167 4 8 1 348 1 145 1 305 1 127 1 160 1 9 1 353 2 183 4 
218 1 309 1 275 1 190 1 41 1 299 3 156 1 101 1 167 4 347 2 134 1 8 3 348 1 9 1 127 2 353 1 64 1 183 4 
309 1 310 1 231 1 86 1 76 1 4 1 41 1 156 1 101 1 167 2 8 1 89 1 348 1 9 1 353 1 183 2 
309 2 275 1 86 1 41 1 299 1 156 1 101 1 167 3 8 2 160 1 127 1 353 2 183 3 
218 1 309 2 275 1 86 1 41 1 299 2 192 1 167 4 193 1 136 1 8 1 160 1 127 1 353 2 183 4 
218 1 309 2 275 1 86 1 41 1 299 2 192 1 167 4 193 1 136 1 8 1 160 1 127 1 353 2 183 4 
346 1 219 1 187 1 
178 2 187 1 155 1 
133 2 215 1 147 1 349 2 45 2 312 2 79 2 32 2 
228 1 208 2 75 1 277 1 252 1 297 1 279 1 32 3 281 1 212 1 256 1 215 1 317 1 147 1 318 1 148 1 34 1 79 2 170 1 261 1 10 2 152 1 311 1 312 2 107 2 265 1 87 1 133 2 135 1 70 1 22 2 349 2 137 1 203 2 45 3 271 1 292 1 
273 1 133 1 283 1 147 1 349 1 45 1 312 1 109 1 79 1 32 1 
273 1 219 1 323 1 274 1 187 1 220 1 121 1 32 1 216 1 45 1 71 1 79 1 95 1 181 1 
273 1 219 1 323 1 274 1 187 1 312 1 121 2 32 1 133 1 216 2 349 1 45 1 79 1 95 1 181 1 
59 1 268 1 216 1 121 1 182 1 
280 1 219 1 268 1 187 1 21 1 216 2 121 2 182 1 
268 1 216 1 121 1 
273 1 283 1 312 1 109 1 121 1 32 1 133 1 147 1 216 1 349 1 45 1 290 1 79 1 182 1 
187 1 
219 1 268 1 187 1 21 1 216 2 121 2 191 1 182 1 
184 1 96 1 171 1 219 1 29 1 187 1 121 5 98 1 108 1 66 2 42 1 112 2 268 2 21 1 216 5 272 1 93 2 206 1 182 2 
84 1 185 1 261 1 208 1 10 1 75 1 312 1 107 1 297 1 279 1 87 1 32 2 133 1 137 1 318 1 148 1 45 2 62 1 34 1 79 1 
346 1 215 1 
273 1 284 1 312 1 32 2 301 1 133 1 215 1 349 1 45 2 79 2 198 1 
235 1 328 1 62 1 
208 1 10 1 261 1 75 1 107 1 297 1 279 1 87 1 32 1 215 1 225 1 318 1 137 1 148 1 45 1 34 1 
84 1 273 1 118 1 185 2 2 1 312 4 32 4 301 1 133 4 215 1 349 1 45 4 79 4 198 1 
273 1 133 2 38 1 45 2 312 2 109 1 79 2 32 2 
185 1 133 3 215 1 349 1 45 3 312 3 79 3 32 3 
273 1 133 1 45 1 312 1 109 1 79 1 32 1 
273 1 284 1 312 1 32 1 133 1 349 1 45 1 79 1 198 1 
228 1 273 1 185 1 208 1 75 1 274 1 277 1 121 1 297 1 279 1 32 4 281 1 215 1 317 1 147 1 318 1 216 1 148 1 34 1 79 3 198 1 170 1 84 1 261 1 10 1 323 1 152 1 312 3 107 1 265 1 87 1 133 3 135 1 288 1 70 1 22 2 137 1 349 2 203 1 45 4 115 1 95 1 181 1 292 1 
133 1 185 1 215 1 220 1 45 2 312 1 79 2 128 1 32 2 
273 1 84 1 185 2 323 1 274 1 187 1 312 3 121 1 32 3 133 3 288 1 349 1 216 1 45 3 79 3 204 1 95 1 181 1 198 1 
185 1 312 2 32 2 235 1 133 2 349 1 45 2 62 1 79 2 198 1 
208 1 10 1 261 1 75 1 107 1 297 1 279 1 87 1 32 1 215 1 318 1 137 1 148 1 45 1 34 1 
208 1 10 1 261 1 264 1 107 1 297 1 279 1 87 1 32 1 215 1 137 1 257 1 148 1 45 1 34 1 
228 1 166 1 336 1 252 2 124 1 235 2 317 1 339 1 62 2 149 1 83 1 239 1 152 2 325 1 265 1 135 1 70 1 22 2 203 4 328 2 329 1 94 1 117 1 292 1 
273 1 133 1 45 1 312 1 38 1 79 1 95 1 32 1 
74 1 269 1 
74 1 269 1 
163 1 53 1 
163 1 53 1 
163 1 53 1 
74 1 269 1 
74 1 269 1 
74 1 269 1 
74 1 269 1 
74 1 269 1 
74 1 269 1 
74 1 269 1 
74 1 269 1 
74 1 200 1 269 1 216 1 120 1 121 1 300 1 
74 1 200 1 269 1 300 1 
348 1 9 1 190 1 
348 1 9 1 4 1 
296 1 24 1 39 1 9 3 190 2 4 1 
296 1 39 1 9 2 190 1 4 1 314 1 
296 2 39 1 9 2 190 1 4 1 
28 2 96 2 29 1 187 2 278 1 121 5 5 1 338 2 216 5 236 1 149 1 129 1 104 1 219 1 171 3 173 1 342 2 325 1 242 1 66 1 155 1 178 3 112 1 268 1 21 1 90 1 26 1 329 1 94 1 93 1 330 1 182 4 
96 6 29 1 187 5 98 1 278 3 121 9 59 5 338 6 216 9 236 2 258 5 259 1 149 3 321 1 129 1 104 2 219 1 171 8 342 6 325 3 66 2 155 3 178 9 224 1 223 1 268 6 112 2 90 4 21 1 352 1 329 3 94 3 93 2 205 1 182 7 
28 1 96 2 187 3 121 3 98 1 278 1 338 2 216 3 236 1 149 1 104 1 219 1 171 3 173 1 342 2 325 1 242 1 66 1 155 2 178 4 112 1 90 1 329 1 93 1 94 1 182 2 
28 2 96 4 187 4 121 4 98 1 278 2 338 4 216 4 236 1 259 1 149 2 321 1 104 1 219 1 171 5 173 1 342 4 325 2 242 1 66 1 155 3 178 7 112 1 90 2 329 2 93 1 94 2 205 1 182 3 
346 1 87 1 103 1 
87 1 320 1 
144 1 
261 1 279 1 87 1 
119 1 87 1 
261 1 87 1 
261 1 302 1 194 1 279 1 87 3 103 2 
229 2 152 3 51 1 334 1 252 4 125 1 234 1 17 1 339 3 327 1 203 7 44 1 329 1 149 1 322 1 83 2 307 1 
229 2 152 3 51 1 334 1 252 4 125 1 234 1 17 1 339 3 327 1 203 7 44 1 329 1 149 1 322 1 83 2 307 1 
229 2 152 3 51 1 334 1 221 1 252 4 125 1 234 1 17 1 339 3 327 1 203 7 44 1 329 1 149 1 322 1 83 2 307 1 
228 1 47 1 139 1 229 2 51 2 334 5 30 3 278 3 252 19 125 1 99 1 234 9 339 17 102 1 304 4 149 6 322 1 35 1 307 5 83 8 152 18 325 3 287 1 17 2 135 1 70 1 327 2 22 2 350 1 226 1 44 1 203 37 94 3 329 6 292 1 
228 2 229 2 334 1 51 1 252 5 99 1 234 1 339 4 149 1 322 1 83 3 307 1 152 4 40 1 17 1 135 2 69 1 70 2 327 1 22 4 203 9 44 1 329 1 292 2 
10 1 208 1 167 1 309 1 19 1 179 1 86 1 107 1 227 1 353 1 67 1 41 1 183 1 
10 1 208 1 49 1 167 2 309 1 68 1 19 1 179 1 86 1 107 1 233 1 353 1 299 1 183 2 
10 1 208 1 167 1 49 1 168 1 179 1 86 1 107 1 233 1 299 1 183 1 
250 1 208 1 10 1 309 1 230 1 86 2 107 1 153 1 68 1 167 1 179 2 34 1 353 1 183 1 
10 1 208 1 167 1 309 1 19 1 179 1 86 1 107 1 227 1 233 1 353 1 41 1 183 1 
254 1 
96 2 97 1 208 2 29 1 186 1 209 1 121 2 297 1 58 1 216 2 148 1 236 1 34 2 260 1 306 1 308 1 105 1 172 1 340 1 10 2 171 2 261 1 107 2 131 1 66 1 87 1 13 1 177 1 345 1 112 1 268 2 21 1 289 1 93 1 116 1 
308 1 340 1 209 1 121 2 191 1 58 1 146 1 268 2 21 1 216 2 289 1 
308 1 58 1 340 1 209 1 216 1 121 1 289 1 286 1 162 1 
308 1 340 1 209 1 121 2 286 1 56 1 191 1 58 1 146 1 268 2 21 1 216 2 289 1 162 1 
273 1 96 1 186 1 0 1 187 1 54 1 56 2 191 1 58 1 146 2 147 1 237 1 105 2 283 1 109 1 66 1 112 1 21 1 289 1 290 1 29 1 209 1 121 2 32 1 216 2 79 1 260 2 308 1 171 1 340 1 219 1 175 1 312 1 131 1 133 1 268 3 349 1 351 1 45 1 93 1 
96 1 97 1 29 1 186 1 209 1 121 1 58 1 216 1 260 1 308 1 105 1 340 1 171 1 131 1 66 1 112 1 289 1 93 1 
273 1 96 1 29 1 186 1 0 1 187 1 209 1 121 1 54 1 32 1 58 1 147 1 216 1 79 1 237 1 260 2 308 1 105 2 283 1 219 1 340 1 171 1 312 1 109 1 131 1 66 1 133 1 112 1 349 1 45 1 93 1 289 1 290 1 
273 1 96 1 29 1 186 1 0 1 187 1 209 1 121 1 54 1 32 1 58 1 147 1 216 1 79 1 237 1 260 2 308 1 105 2 283 1 219 1 340 1 171 1 312 1 109 1 131 1 66 1 133 1 112 1 349 1 45 1 93 1 289 1 290 1 
273 1 96 1 29 1 0 1 187 1 209 1 121 1 32 1 58 1 147 1 216 1 79 1 260 2 308 1 105 2 283 1 219 1 340 1 171 1 151 1 312 1 109 1 131 1 66 1 313 1 133 1 112 1 349 1 45 1 93 1 289 1 290 1 291 1 
273 1 96 1 29 1 0 1 186 1 187 1 209 1 121 1 54 1 56 1 32 1 58 1 147 1 146 1 216 1 79 1 260 2 237 1 308 1 105 2 283 1 219 1 340 1 171 1 312 1 109 1 131 1 286 1 66 1 133 1 268 1 112 1 349 1 351 1 45 1 289 1 93 1 290 1 162 1 
273 1 96 1 29 1 0 1 186 1 187 1 209 1 121 1 54 1 56 1 32 1 58 1 147 1 146 1 216 1 79 1 260 2 237 1 308 1 105 2 283 1 219 1 340 1 171 1 312 1 109 1 131 1 286 1 66 1 133 1 268 1 112 1 349 1 351 1 45 1 289 1 93 1 290 1 162 1 
96 1 97 1 29 1 209 1 121 1 58 1 216 1 260 1 308 1 105 1 340 1 171 1 131 1 66 1 112 1 289 1 93 1 291 1 
228 1 229 1 334 1 51 1 252 3 235 1 317 1 339 2 215 2 62 1 149 1 322 1 307 1 83 2 239 1 152 3 265 1 346 1 135 1 70 1 22 2 44 1 203 6 328 1 329 1 292 1 
228 2 165 1 277 1 30 3 278 2 252 8 298 1 77 1 234 1 235 4 215 1 339 2 317 1 102 1 304 3 33 1 62 11 149 2 63 1 35 1 83 1 152 6 311 1 325 1 265 2 135 2 70 2 22 4 203 14 328 11 94 2 329 1 292 2 
228 1 185 1 208 1 75 1 277 1 297 1 252 1 122 1 279 1 77 1 32 2 235 1 215 1 317 1 318 1 78 1 148 1 34 1 79 1 84 1 261 1 10 1 152 1 311 1 107 1 312 1 265 1 87 1 133 1 135 1 267 1 225 1 70 1 137 1 22 2 45 2 203 2 292 1 
228 3 185 1 229 1 51 1 1 1 277 1 188 1 278 2 233 1 279 2 234 4 235 7 317 3 318 2 148 2 62 7 149 3 322 1 10 3 152 10 107 3 325 2 16 2 70 3 22 6 203 20 328 7 329 3 27 2 292 3 208 3 295 1 75 2 334 1 297 2 252 10 77 1 32 3 215 2 339 8 34 1 79 1 307 1 83 4 84 1 170 2 261 2 85 2 174 2 311 1 312 1 265 3 87 2 133 1 135 3 137 2 44 1 45 3 94 2 
228 2 185 1 208 7 164 1 277 1 297 2 252 1 233 1 211 1 32 1 143 1 100 1 256 2 317 2 148 2 34 2 79 1 239 1 10 8 261 2 152 1 311 1 312 1 107 8 265 2 67 1 87 3 177 1 345 1 133 1 135 2 70 2 22 4 23 1 92 1 45 1 203 2 46 1 292 2 
228 1 278 1 252 1 77 1 32 1 235 1 339 1 317 1 62 1 79 1 149 1 83 1 198 1 217 1 152 2 312 1 325 1 265 1 133 1 135 1 70 1 349 1 22 2 328 1 45 1 203 3 94 1 329 1 292 1 
239 1 228 1 336 1 252 2 265 1 234 1 235 1 135 1 339 1 317 1 70 1 22 2 328 1 203 2 62 1 94 1 149 1 292 1 
239 1 228 1 152 2 325 1 265 1 124 1 235 1 135 1 339 1 317 1 70 1 22 2 328 1 203 2 62 1 329 1 83 1 292 1 
228 1 278 1 252 2 234 1 235 2 317 1 339 2 62 2 149 1 83 1 239 1 152 2 325 1 265 1 135 1 70 1 22 2 203 4 328 2 94 1 329 1 292 1 
228 1 336 1 252 2 265 1 234 1 235 1 135 1 339 1 317 1 70 1 23 1 22 2 328 1 203 2 62 1 94 1 149 1 292 1 
228 1 152 2 325 1 265 1 124 1 235 1 135 1 339 1 317 1 70 1 23 1 22 2 328 1 203 2 62 1 329 1 83 1 292 1 
228 1 278 1 252 2 234 1 235 2 317 1 339 2 62 2 149 1 83 1 152 2 325 1 265 1 135 1 70 1 22 2 23 1 203 4 328 2 94 1 329 1 292 1 
228 1 278 1 252 2 234 1 235 2 317 1 339 2 62 2 149 1 83 1 152 2 325 1 265 1 135 1 70 1 22 2 203 4 328 2 94 1 329 1 292 1 
228 1 208 1 75 1 277 1 252 1 297 1 279 1 32 1 215 1 317 1 318 1 148 1 34 1 170 1 261 1 10 1 152 1 311 1 107 1 265 1 87 1 135 1 70 1 137 1 22 2 203 2 45 1 292 1 
228 1 208 1 277 1 252 1 297 1 279 1 32 1 215 1 317 1 148 1 257 1 34 1 261 1 240 1 10 1 152 1 311 1 264 1 107 1 265 1 87 1 135 1 70 1 137 1 22 2 203 2 45 1 292 1 
228 1 278 1 252 2 77 1 234 1 235 2 317 1 339 2 62 2 149 1 83 1 152 2 325 1 265 1 135 1 70 1 22 2 203 4 328 2 94 1 329 1 292 1 
228 1 208 1 75 1 278 1 252 2 297 1 279 1 234 1 32 1 235 2 339 2 317 1 318 1 148 1 62 2 149 1 83 1 170 1 10 1 261 1 85 1 152 2 107 1 325 1 265 1 67 1 87 1 135 1 70 1 137 1 22 2 328 2 203 4 45 1 329 1 94 1 292 1 
228 1 278 1 252 2 77 1 234 1 32 1 235 1 282 1 339 1 317 1 62 1 79 1 149 1 198 1 152 1 312 1 325 1 265 1 133 1 135 1 70 1 349 1 22 2 45 1 203 3 328 1 329 1 94 1 292 1 
228 3 138 1 229 1 51 1 278 4 99 1 234 4 102 1 195 4 61 1 149 5 322 1 65 1 152 21 325 4 154 1 15 1 18 1 69 1 70 3 22 6 203 41 25 1 329 5 292 3 293 1 207 1 334 1 30 3 252 20 337 1 339 8 304 4 80 1 35 3 83 4 307 1 262 1 132 1 88 2 135 3 44 1 94 4 
207 1 293 1 138 1 228 4 229 1 51 1 334 1 30 3 278 4 252 20 337 1 99 2 234 3 339 7 195 4 102 1 304 4 61 1 80 1 149 5 322 1 35 3 307 1 83 4 65 1 262 1 152 18 325 3 132 1 154 1 15 1 88 2 135 4 18 1 69 1 70 4 22 8 44 1 203 38 25 1 94 4 329 4 292 4 
207 1 293 1 138 1 228 2 229 1 51 1 334 1 30 4 278 7 252 27 99 1 234 7 339 14 195 4 102 2 304 4 80 1 149 8 63 2 322 1 35 2 307 1 83 7 65 1 262 1 152 25 325 7 132 1 154 1 15 1 88 1 135 2 18 1 69 1 70 2 22 4 44 1 203 52 25 1 94 7 329 8 292 2 
207 1 293 1 138 1 228 2 30 1 278 3 252 9 55 1 234 3 339 6 195 2 102 1 304 2 61 1 80 2 149 3 35 1 83 3 152 10 325 3 154 1 88 1 135 2 69 1 70 2 22 4 203 19 94 3 329 3 292 2 
207 1 293 2 138 1 228 3 30 2 278 3 252 14 99 2 234 2 339 4 195 4 304 2 80 1 149 3 35 2 83 2 65 1 262 1 152 12 325 2 132 1 154 1 15 1 88 2 135 3 18 1 69 1 70 3 22 6 203 26 25 1 329 2 94 3 292 3 
228 1 140 1 208 2 232 1 277 1 297 1 252 1 77 1 32 2 143 1 256 2 317 1 148 1 79 2 261 1 10 2 150 1 152 1 106 1 311 1 107 2 265 1 87 1 111 1 135 1 70 1 22 2 45 2 203 2 46 1 292 1 
208 2 10 2 11 1 107 2 297 1 190 1 233 1 31 1 4 1 67 1 14 1 7 1 348 1 148 1 24 1 114 1 9 2 72 1 248 1 
208 1 10 1 11 1 332 1 107 1 297 1 190 1 233 1 31 1 4 1 348 1 148 1 24 1 114 1 9 2 72 1 248 1 
261 1 208 1 10 1 107 1 297 1 87 1 177 1 14 1 345 1 6 1 148 1 245 1 34 1 72 1 
208 1 10 1 11 1 107 1 297 1 190 1 233 1 31 1 4 1 14 1 7 1 348 1 148 1 24 1 114 1 9 2 72 1 248 1 
3 1 
346 1 96 1 171 1 219 1 42 1 187 1 272 1 
96 1 219 1 171 1 29 1 186 1 187 2 201 1 121 1 66 1 155 1 178 1 43 1 268 1 112 1 216 1 21 1 93 1 
96 8 50 2 187 8 278 2 279 3 316 1 194 1 236 2 148 3 319 1 149 2 197 2 320 3 103 2 238 2 199 1 10 3 323 2 107 3 325 2 66 4 67 1 155 6 326 2 16 2 112 4 21 3 329 2 208 3 294 1 29 4 119 2 121 5 297 4 213 2 338 6 255 2 216 5 34 1 306 1 219 2 171 9 261 3 342 6 87 10 344 2 266 2 178 12 42 1 268 5 180 1 272 1 93 4 94 2 
96 5 29 2 141 1 187 5 30 1 121 1 278 2 255 1 338 5 216 1 304 1 236 1 149 2 306 1 197 2 35 1 82 1 65 1 171 8 219 2 262 1 342 5 325 2 66 2 132 1 15 1 155 3 178 6 268 1 112 2 21 1 25 1 93 2 94 2 329 2 
273 1 139 1 96 2 29 1 334 1 51 1 121 1 32 1 255 1 147 1 216 1 149 2 79 1 237 1 197 2 307 1 171 2 283 1 312 1 109 1 66 1 133 1 112 1 349 1 45 1 93 1 329 1 290 1 
96 1 219 1 171 1 29 1 187 1 66 1 42 1 112 1 272 1 93 1 
96 5 171 5 187 5 342 5 278 2 325 2 155 5 178 10 16 1 255 1 338 5 94 2 329 2 149 2 197 2 
219 1 268 1 187 1 216 1 21 1 121 1 
96 2 208 4 294 2 29 1 315 1 98 1 121 3 297 3 189 1 279 1 214 1 216 3 148 2 236 2 34 2 319 1 306 2 261 2 10 4 171 2 107 4 176 1 66 2 87 2 13 1 177 1 345 1 243 1 112 2 268 4 21 2 113 1 116 1 93 2 
228 1 208 1 75 1 277 1 297 1 279 1 32 3 281 1 215 1 317 1 147 1 318 1 148 1 34 1 79 2 170 1 10 1 261 1 152 1 107 1 312 2 265 1 87 1 133 2 135 1 70 1 22 2 349 2 137 1 203 1 45 3 292 1 
96 2 171 1 219 2 229 1 29 1 187 4 342 2 66 1 155 2 178 4 338 2 112 1 236 1 93 1 306 1 
161 1 246 1 
161 1 246 1 
161 1 246 1 
161 1 246 1 
161 1 246 1 
161 1 246 1 
161 1 246 1 
161 1 246 1 
74 1 269 1 
228 1 229 1 334 1 51 1 30 1 252 4 339 2 304 1 149 1 35 1 322 1 307 1 83 2 152 4 15 1 135 1 69 1 70 1 22 2 203 8 44 1 329 1 292 1 
228 2 229 1 51 1 334 1 276 1 30 1 278 1 252 6 234 1 339 3 102 1 304 2 149 2 322 1 35 1 83 2 307 1 152 5 15 1 135 2 69 1 70 2 22 4 44 1 203 11 329 1 94 1 292 2 
228 3 229 1 51 1 334 1 276 1 30 1 278 2 252 9 99 1 234 1 339 4 304 1 149 3 322 1 35 1 307 1 83 3 65 1 262 1 152 10 325 2 132 1 15 1 135 3 69 1 70 3 22 6 44 1 203 19 25 1 94 2 329 3 292 3 
228 3 229 1 51 1 334 1 276 1 30 1 278 2 252 10 99 1 234 2 339 5 304 1 149 3 322 1 35 1 307 1 83 3 65 1 262 1 152 7 325 1 132 1 15 1 135 3 69 1 70 3 22 6 44 1 203 17 25 1 94 2 329 2 292 3 
228 1 229 1 334 1 51 1 30 1 252 4 339 2 304 1 149 1 35 1 322 1 307 1 83 2 152 4 15 1 135 1 69 1 70 1 22 2 203 8 44 1 329 1 292 1 
228 1 30 1 278 2 252 6 234 1 339 2 304 1 149 2 35 1 83 1 65 1 262 1 152 6 325 2 132 1 15 1 135 1 69 1 70 1 22 2 203 12 25 1 94 2 329 2 292 1 
228 4 229 1 51 1 334 1 276 1 30 1 278 2 252 10 99 2 234 2 339 5 304 1 149 3 322 1 35 1 307 1 83 3 65 1 262 1 152 8 325 1 132 1 15 1 135 4 69 1 70 4 22 8 44 1 203 18 25 1 94 2 329 2 292 4 
228 4 30 1 278 3 252 9 99 2 234 3 339 6 304 1 61 1 149 3 35 1 83 3 65 1 262 1 152 7 325 2 132 1 15 1 135 4 69 1 70 4 22 8 203 16 25 1 94 3 329 2 292 4 
152 4 334 3 51 1 252 3 234 3 339 6 203 7 44 1 329 1 149 1 322 2 307 3 83 3 
228 4 229 1 51 1 334 1 30 1 278 2 252 10 99 2 234 1 339 4 304 1 61 1 149 3 322 1 35 1 307 1 83 3 65 1 262 1 152 8 325 1 132 1 15 1 135 4 69 1 70 4 22 8 44 1 203 18 25 1 94 2 329 2 292 4 
228 2 229 1 152 4 51 1 334 1 252 4 99 1 234 1 135 2 339 3 70 2 22 4 203 8 44 1 329 1 149 1 322 1 83 2 292 2 307 1 
346 1 229 1 339 2 152 3 51 1 334 1 203 6 44 1 329 1 252 3 149 1 322 1 83 2 307 1 
228 1 152 2 276 1 325 1 278 1 252 2 234 1 135 1 339 2 70 1 22 2 203 4 329 1 94 1 149 1 83 1 292 1 
152 4 30 1 325 1 278 1 252 3 234 1 339 2 102 1 304 2 203 7 329 1 94 1 149 1 35 1 83 1 
228 2 229 1 333 1 51 1 334 2 30 2 278 2 252 11 298 1 99 2 234 4 339 9 102 1 304 2 149 3 63 1 322 1 307 2 83 5 152 12 325 2 135 2 70 2 22 4 44 1 203 23 94 2 329 3 292 2 
152 1 304 1 203 1 
203 1 30 1 252 1 
228 1 152 3 276 1 278 1 325 1 252 3 234 1 16 1 135 1 339 3 70 1 22 2 203 6 94 1 329 1 149 1 292 1 83 2 
228 1 30 1 278 2 252 6 234 1 339 2 304 1 149 2 35 1 83 1 65 1 262 1 152 6 325 2 132 1 15 1 135 1 69 1 70 1 22 2 203 12 25 1 94 2 329 2 292 1 
152 3 51 1 334 1 252 3 234 1 339 2 203 6 329 1 149 1 307 1 83 1 
228 1 152 2 333 1 334 1 252 1 99 1 234 1 135 1 339 2 70 1 22 2 203 3 44 1 322 1 83 1 307 1 292 1 
228 1 139 1 152 5 334 2 51 1 252 5 234 2 135 1 339 5 69 1 70 1 22 2 203 10 329 2 149 2 292 1 307 2 83 3 
228 1 252 2 234 1 135 1 339 1 69 1 70 1 22 2 203 2 94 1 149 1 292 1 
228 1 152 2 325 1 278 1 252 2 234 1 135 1 339 2 69 1 70 1 22 2 203 4 329 1 94 1 149 1 83 1 292 1 
228 3 152 2 333 1 334 1 252 1 99 1 234 1 135 3 339 2 69 1 70 3 22 6 203 3 61 1 292 3 307 1 83 1 
47 1 228 4 229 1 51 1 334 2 276 1 30 3 278 3 252 13 99 1 234 5 339 10 102 1 304 4 61 1 149 4 322 1 35 1 307 2 83 5 152 14 325 3 287 1 135 4 69 1 70 4 226 1 22 8 44 1 203 27 94 3 329 4 292 4 
215 1 220 1 45 1 52 1 79 1 32 1 128 1 
130 1 263 1 220 1 52 1 202 1 32 1 215 1 158 1 45 1 79 1 169 1 128 1 
345 1 346 1 261 1 10 1 208 1 148 1 107 1 297 1 34 1 87 1 177 1 
185 1 261 1 208 1 10 1 312 1 107 1 297 1 279 1 87 1 32 2 133 1 215 1 137 1 318 1 148 1 45 2 34 1 79 1 
273 1 185 1 261 2 208 1 10 1 294 1 119 1 312 1 107 1 297 1 279 2 87 3 32 2 326 1 133 2 215 1 137 1 318 1 148 1 45 2 79 2 95 1 181 1 
273 1 185 1 208 2 294 1 119 1 297 1 279 2 126 1 32 2 215 1 148 1 257 1 79 2 10 2 261 2 107 2 312 1 87 3 326 1 133 2 137 1 45 2 95 1 181 1 
36 1 219 1 261 1 208 3 10 3 323 1 294 1 119 1 187 1 210 1 107 3 121 2 297 1 279 1 87 4 126 1 326 1 268 1 216 2 148 1 34 1 320 1 103 1 
219 1 261 1 208 3 10 3 323 1 294 1 50 1 119 1 187 1 107 3 121 2 297 1 279 1 87 4 126 1 326 1 268 1 216 2 148 1 34 1 320 1 103 1 
10 1 208 1 164 1 148 1 107 1 297 1 
208 6 10 7 261 2 164 1 341 1 107 7 176 1 297 3 233 1 279 1 211 1 67 1 87 3 256 1 100 1 194 1 92 1 148 2 113 1 34 2 46 1 
228 2 185 1 140 1 208 1 229 1 75 1 51 1 334 1 252 3 297 1 279 1 77 1 32 2 235 1 215 2 339 2 317 2 318 1 148 1 62 1 149 1 79 1 322 1 83 2 307 1 170 1 261 1 10 1 85 1 152 3 312 1 107 1 265 2 87 1 67 1 133 1 135 2 70 2 137 1 22 4 328 1 203 6 44 1 45 2 329 1 27 1 292 2 
96 1 208 1 50 1 29 2 187 1 121 3 213 1 216 3 34 1 319 1 320 1 103 1 171 1 219 1 10 1 323 1 107 1 66 2 87 2 344 1 266 1 42 1 112 2 268 2 21 1 272 1 93 2 182 1 
208 2 10 2 261 1 164 1 107 2 297 2 279 1 67 1 87 2 194 1 180 1 148 1 103 1 
208 4 10 4 261 1 107 4 297 1 67 1 177 1 87 1 126 1 222 1 345 1 148 1 34 1 
208 2 10 2 261 1 294 1 295 1 107 2 176 1 297 2 189 1 279 1 87 1 243 1 148 1 113 1 
10 1 208 1 348 1 148 1 114 1 107 1 9 1 297 1 34 1 4 1 
208 2 10 2 261 1 107 2 232 1 297 1 233 1 67 1 87 1 148 1 46 1 
208 4 10 5 261 2 294 1 107 5 297 2 177 1 67 1 211 1 87 3 222 1 345 1 148 2 92 1 34 1 46 1 
208 4 10 5 261 2 294 1 324 1 107 5 297 2 177 1 67 1 87 3 222 1 345 1 148 2 92 1 34 1 46 1 
185 1 261 1 208 1 10 1 312 1 107 1 297 1 279 1 87 1 32 2 133 1 215 1 137 1 257 1 148 1 45 2 34 1 79 1 
208 1 10 1 261 1 294 1 341 1 107 1 176 1 297 2 279 1 87 1 194 1 148 1 113 1 
157 1 215 1 37 1 20 1 247 1 
273 1 219 1 249 1 323 1 37 1 274 1 187 1 121 2 157 2 288 1 215 1 20 2 216 2 196 1 95 1 181 1 247 2 182 1 331 1 
157 1 150 1 37 1 106 1 45 1 79 1 247 1 32 1 111 1 
249 1 37 1 331 1 
346 1 101 1 8 1 156 1 
101 1 167 1 309 1 8 1 353 1 156 1 183 1 
285 1 86 1 183 1 
309 1 76 2 110 1 41 1 156 1 167 3 101 1 8 1 81 1 73 1 353 1 183 3 
101 1 347 1 167 2 309 1 8 1 353 1 299 1 156 1 183 2 
309 1 190 1 41 1 167 1 134 1 8 1 348 1 127 1 9 1 353 1 183 1 
101 1 167 1 309 1 8 1 353 1 41 1 183 1 
101 2 167 1 309 1 353 1 41 1 156 1 183 1 
309 2 41 1 253 1 101 1 167 2 8 1 244 1 159 1 353 2 183 2 
101 1 167 1 309 1 12 1 353 1 41 1 156 1 192 1 183 1 
309 1 190 1 4 1 41 1 299 1 156 1 101 1 167 2 8 1 303 1 348 1 24 1 9 2 353 1 183 2 
309 2 275 1 41 1 299 2 156 1 101 1 167 4 347 1 8 2 127 1 353 2 64 1 183 4 
101 1 167 1 309 1 8 1 353 1 41 1 156 1 183 1 
309 1 275 1 12 1 76 1 110 1 299 2 156 2 101 2 167 4 8 3 127 1 81 1 353 1 183 4 
309 1 123 1 41 1 57 1 299 1 156 1 101 1 167 2 136 1 8 1 353 1 183 2 
309 1 335 1 76 2 110 2 41 1 156 1 167 3 101 1 8 1 81 1 353 1 183 3 
8 2 91 1 60 2 270 1 
167 1 309 1 251 1 353 1 41 1 183 1 
101 1 167 2 309 1 8 1 142 1 353 1 299 1 41 1 156 1 183 2 
241 1 
101 1 167 1 309 1 8 1 353 1 41 1 156 1 183 1 
309 1 76 1 142 1 299 1 41 1 156 1 167 3 101 1 8 1 353 1 183 3 
167 1 8 1 275 1 127 1 299 1 183 1 
101 1 8 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (91,249) (40,245) (40,245) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (91,249) (40,245) (40,245) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (91,249) (40,245) (40,245) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (91,249) (40,245) (40,245) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (91,249) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (91,249) 302 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (91,249) 302 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 146 (61,229) 107 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 146 292 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 146 (61,229) 107 84 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 146 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 64 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 181 160 97 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (50,75,285) (8,220,267) (8,220,267) (8,220,267) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (50,75,285) (8,220,267) (8,220,267) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (50,75,285) (8,220,267) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (72,321) (211,242) (211,242) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (50,75,285) (8,220,267) (8,220,267) (8,220,267) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 37 55 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 37 165 187 137 109 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 37 165 187 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 37 165 187 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 37 165 187 137 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 37 165 187 137 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (172,275) 68 176 15 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 146 292 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 106 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 146 (61,229) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 64 102 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 146 (61,229) (61,229) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 181 95 283 140 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 181 188 283 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 181 95 283 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 181 95 283 140 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 181 95 283 140 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (50,75,285) (50,75,285) (50,75,285) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (50,75,285) (50,75,285) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (72,321) (72,321) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (50,75,285) (50,75,285) (50,75,285) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 113 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 146 (61,229) 107 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 181 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 176 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 181 160 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 181 188 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 125 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | STATEMENT | 4739 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1350 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1326 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 1508 | == -> !=
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> -1
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String; | RETURN | 4381 | return null
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
296 2 163 1 245 1 119 1 266 1 248 1 249 1 40 1 18 1 252 1 234 2 91 1 214 1 237 1 258 1 173 1 
296 2 163 1 245 1 119 1 266 1 248 1 249 1 40 1 18 1 252 1 234 2 91 1 214 1 237 1 258 1 173 1 
296 2 163 1 245 1 119 1 266 1 248 1 249 1 40 1 18 1 252 1 234 2 91 1 214 1 237 1 258 1 173 1 
296 2 163 1 245 1 119 1 266 1 248 1 249 1 40 1 18 1 252 1 234 2 91 1 214 1 237 1 258 1 173 1 
240 2 296 4 115 1 297 1 163 1 53 1 119 1 303 1 39 1 252 1 19 2 234 4 256 1 214 1 44 3 258 1 173 1 313 3 
296 2 115 1 163 1 119 1 10 1 248 1 39 1 18 1 252 1 234 2 44 1 214 1 237 1 258 1 22 1 239 1 
296 1 234 1 91 1 119 1 214 1 258 1 
296 2 279 1 234 2 91 1 119 1 214 1 258 1 302 1 313 1 
296 2 279 1 234 2 91 1 119 1 214 1 258 1 302 1 313 1 
125 1 9 1 123 1 
14 2 92 1 123 1 
41 1 76 2 244 2 328 1 265 2 121 2 168 2 291 2 
204 1 76 1 244 1 265 1 121 1 168 1 61 1 146 1 107 1 232 1 87 1 328 1 127 1 129 2 291 1 
76 1 244 1 328 1 265 1 319 1 121 1 47 1 168 1 291 1 
116 1 244 1 9 1 123 1 168 1 124 1 212 1 86 1 66 1 190 1 153 1 171 1 291 1 332 1 
76 1 116 1 244 1 265 1 9 1 121 1 123 1 168 1 124 1 212 1 86 1 190 1 171 2 291 1 332 2 
198 1 74 1 320 1 171 1 332 1 
74 1 98 1 289 1 9 1 320 1 171 2 123 1 332 2 
74 1 171 1 332 1 
76 1 244 1 265 1 319 1 320 1 121 1 168 1 147 1 328 1 171 1 47 1 291 1 332 1 
123 1 
74 1 98 1 225 1 9 1 320 1 171 2 123 1 332 2 
277 1 74 2 315 1 98 1 316 1 118 2 264 1 9 1 320 2 123 1 284 1 230 1 35 2 288 1 21 2 307 1 171 5 24 1 332 5 
125 1 41 1 
76 1 244 2 265 1 121 1 168 2 41 2 271 1 291 2 197 1 
68 1 172 1 
146 1 204 1 129 1 292 1 
146 1 204 1 161 1 76 1 244 1 194 1 129 1 121 1 168 1 291 1 
27 1 161 2 76 4 5 1 244 5 265 1 121 4 168 5 66 1 41 1 194 1 312 1 291 5 197 1 
76 1 244 1 319 1 121 1 168 1 291 1 
161 1 41 1 76 3 244 3 265 1 121 3 168 3 291 3 
76 1 244 1 319 1 121 1 168 1 291 1 
116 1 76 1 271 1 244 1 265 1 121 1 168 1 291 1 197 1 
204 1 161 1 116 1 76 3 244 3 265 2 121 3 168 3 124 1 61 1 146 1 107 1 212 1 84 1 86 1 38 1 328 1 190 1 194 1 129 1 171 1 291 3 197 1 332 1 
161 1 41 1 66 1 76 1 5 1 244 2 121 1 168 2 291 2 
161 2 222 1 116 1 76 3 244 3 265 1 121 3 123 1 168 3 124 1 212 1 38 1 86 1 190 1 194 1 171 1 197 1 291 3 332 1 
3 1 161 1 76 2 244 2 265 1 121 2 168 2 172 1 197 1 291 2 
146 1 204 1 129 1 
204 1 64 1 129 1 
0 1 4 1 298 1 52 2 60 1 185 1 308 1 68 2 275 1 205 1 78 1 247 1 282 2 34 4 323 1 250 1 324 1 85 1 126 2 254 1 43 1 215 1 172 2 
86 1 116 1 76 1 244 1 121 1 168 1 291 1 23 1 
17 1 138 1 
17 1 138 1 
149 1 299 1 
149 1 299 1 
149 1 299 1 
17 1 94 1 138 1 
159 1 17 1 138 1 
17 2 149 1 246 1 154 1 299 1 138 2 
17 1 94 1 138 1 
17 1 94 1 138 1 
17 1 251 1 138 1 
17 1 251 1 138 1 
17 1 251 1 138 1 
138 1 184 1 13 1 17 1 304 1 20 1 69 1 310 1 158 1 159 1 76 2 317 1 244 2 121 2 281 1 209 1 168 2 41 1 90 1 93 1 45 1 171 1 291 2 332 1 
207 2 246 1 138 2 123 1 209 1 184 2 17 2 304 2 88 1 325 1 90 2 306 1 192 1 69 2 46 1 171 2 196 1 332 2 158 3 
163 1 252 1 173 1 
163 1 252 1 239 1 
108 1 326 1 252 3 164 1 173 2 239 1 
228 1 326 1 252 2 164 1 173 1 239 1 
326 2 252 2 164 1 173 1 239 1 
0 1 98 1 264 3 9 1 100 2 12 1 14 3 110 1 273 2 21 1 274 2 157 1 24 1 74 1 114 1 118 1 30 1 280 1 320 4 281 1 123 2 35 1 324 1 254 1 43 1 288 2 93 1 92 1 45 1 171 5 217 1 332 5 
0 2 98 1 265 1 264 6 9 1 100 4 101 4 12 1 14 6 110 2 21 2 274 4 24 1 198 4 201 1 200 1 114 2 118 2 121 1 122 1 123 4 35 2 43 2 288 4 45 4 47 1 291 1 56 1 230 1 147 1 150 1 157 2 74 5 76 1 162 1 244 1 320 6 319 1 168 1 324 2 254 2 328 1 92 2 171 8 332 8 
0 1 264 3 9 1 100 2 230 1 14 4 110 1 273 1 21 1 274 2 157 1 114 1 118 1 30 1 320 2 280 1 123 3 35 1 324 1 254 1 43 1 288 2 92 2 45 1 171 3 332 3 
0 1 264 3 265 1 9 1 100 2 14 4 110 1 273 1 21 1 274 2 201 1 114 1 118 1 30 1 280 1 121 1 123 3 35 1 288 2 43 1 45 2 47 1 291 1 230 1 147 1 150 1 157 1 76 1 162 1 244 1 319 1 320 2 168 1 324 1 254 1 328 1 92 2 171 3 332 3 
125 1 243 1 80 1 
221 1 80 1 
305 1 
145 1 80 1 70 1 
169 1 80 1 
80 1 70 1 
145 1 263 1 243 2 80 3 111 1 70 1 
294 2 261 1 133 2 78 4 52 6 247 5 33 2 32 1 167 1 282 8 34 14 301 1 183 1 143 1 254 3 43 3 329 2 71 1 
294 2 261 1 133 2 78 4 52 6 247 7 33 2 32 1 167 1 282 8 34 14 301 1 183 1 143 3 254 3 43 3 329 2 71 1 
294 2 261 1 133 2 26 1 78 4 52 6 247 5 33 2 32 1 167 1 282 8 34 14 301 1 183 1 143 1 254 3 43 3 329 2 71 1 
294 1 160 1 97 1 261 2 202 1 52 1 167 1 180 1 181 1 34 3 282 2 
294 2 261 1 133 2 4 2 52 7 179 1 183 1 143 2 269 1 308 2 71 1 278 1 205 2 78 5 247 7 32 1 33 2 167 1 34 16 282 9 126 4 254 3 43 3 215 2 329 2 
220 1 296 1 224 1 119 1 54 1 8 1 267 1 227 1 285 1 18 1 234 1 214 1 129 1 258 1 155 1 73 1 
220 1 296 2 295 1 117 1 224 1 119 1 8 1 227 1 186 1 285 1 18 1 234 2 214 1 129 1 155 1 313 1 73 1 
227 1 186 1 296 1 295 1 285 1 18 1 234 1 8 1 129 1 155 1 73 1 313 1 
204 1 296 1 242 1 117 1 119 1 227 2 211 1 18 2 234 1 214 1 191 1 129 1 155 2 72 1 73 2 
220 1 296 1 224 1 119 1 8 1 267 1 227 1 186 1 285 1 18 1 234 1 214 1 129 1 258 1 155 1 73 1 
120 1 
48 1 49 1 98 1 135 1 6 1 264 2 55 1 104 2 105 1 66 1 110 1 272 1 190 1 153 1 21 1 24 1 74 2 203 1 204 2 116 1 118 1 244 1 79 1 81 1 168 1 124 1 35 1 212 1 37 1 86 1 288 2 216 1 129 2 171 3 291 1 332 3 293 1 174 1 
49 1 98 1 225 1 104 2 66 1 270 1 272 1 190 1 153 1 74 2 203 1 116 1 244 1 168 1 124 1 212 1 86 1 171 3 291 1 174 1 293 1 332 3 
49 1 98 1 225 1 9 1 104 3 66 1 272 1 190 1 153 1 74 1 203 1 116 1 28 1 244 1 168 1 123 1 124 1 212 1 86 1 171 3 291 1 174 1 293 1 332 3 
74 1 49 1 203 1 116 1 244 1 104 2 168 1 124 1 212 1 86 1 270 1 66 1 272 1 190 1 153 1 171 2 311 1 291 1 332 2 293 1 174 1 
49 1 98 1 135 1 6 1 264 1 225 1 137 1 104 2 105 1 187 1 66 1 270 2 109 1 272 1 190 1 21 1 153 1 193 1 311 2 24 1 74 3 203 1 116 1 118 1 244 1 165 1 168 1 124 1 35 1 212 1 37 1 86 1 288 1 216 1 171 3 291 1 174 1 293 1 332 3 
49 1 135 1 6 1 264 1 104 2 105 1 66 1 272 1 190 1 153 1 21 1 24 1 203 1 116 1 118 1 244 1 168 1 124 1 35 1 212 1 37 1 86 1 288 1 216 1 171 2 291 1 174 1 293 1 332 2 
49 1 135 1 6 1 264 1 104 2 105 1 187 1 66 1 272 1 190 1 21 1 153 1 193 1 24 1 203 1 116 1 118 1 244 1 165 1 168 1 124 1 35 1 212 1 37 1 86 1 288 1 216 1 171 2 291 1 174 1 293 1 332 2 
49 1 135 1 6 1 264 1 104 2 105 1 187 1 66 1 272 1 190 1 21 1 153 1 193 1 24 1 203 1 116 1 118 1 244 1 165 1 168 1 124 1 35 1 212 1 37 1 86 1 288 1 216 1 171 2 291 1 174 1 293 1 332 2 
98 2 7 1 265 1 264 1 9 1 104 4 105 2 14 2 270 2 272 1 190 1 21 1 24 1 199 2 203 1 116 1 28 2 118 1 29 1 121 1 123 1 124 1 35 1 212 1 37 1 288 1 47 1 291 2 293 1 49 1 135 2 147 1 66 1 153 1 311 2 74 4 76 1 244 2 319 1 165 1 168 2 322 2 86 1 328 1 257 1 171 4 332 4 174 1 
49 1 135 1 6 1 264 1 137 1 104 2 105 1 187 1 66 1 270 1 272 1 190 1 21 1 153 1 193 1 311 1 24 1 74 1 203 1 116 1 118 1 244 1 165 1 168 1 124 1 35 1 212 1 37 1 86 1 288 1 216 1 171 2 291 1 174 1 293 1 332 2 
49 1 135 1 6 1 264 1 137 1 104 2 105 1 187 1 66 1 270 1 272 1 190 1 21 1 153 1 193 1 311 1 24 1 74 1 203 1 116 1 118 1 244 1 165 1 168 1 124 1 35 1 212 1 37 1 86 1 288 1 216 1 171 2 291 1 174 1 293 1 332 2 
98 2 265 1 264 1 9 1 104 3 105 2 14 2 270 2 272 1 190 1 21 1 24 1 199 2 203 1 116 1 28 1 206 1 29 1 118 1 121 1 123 1 124 1 35 1 212 1 37 1 288 1 47 1 291 2 293 1 49 1 135 2 147 1 66 1 153 1 311 2 74 4 76 1 244 2 319 1 168 2 322 2 86 1 328 1 171 4 332 4 174 1 
294 1 133 1 4 1 205 1 78 2 298 1 52 2 247 2 32 1 33 1 34 5 282 3 183 1 60 1 185 1 125 1 126 2 41 2 254 1 43 1 215 1 329 1 308 1 
176 1 202 1 4 1 205 1 52 1 180 1 282 1 34 2 60 1 185 1 15 1 126 2 151 1 215 1 68 3 308 1 172 3 
4 1 223 1 52 1 103 1 60 1 146 1 185 1 151 1 308 1 194 1 204 1 161 1 205 1 76 1 244 1 121 1 168 1 34 2 282 1 126 2 42 1 255 1 215 1 129 1 172 1 291 1 292 1 132 1 
204 1 4 1 205 1 161 1 76 1 52 1 244 1 121 1 34 1 168 1 106 1 60 1 185 1 126 2 151 1 255 1 215 1 194 1 308 1 129 1 291 1 
4 2 223 1 298 1 52 1 54 1 139 1 142 1 60 2 185 2 232 1 308 2 204 2 205 2 161 1 76 1 244 1 121 1 168 1 282 1 34 2 126 4 255 1 215 2 330 1 129 4 291 1 
0 1 4 1 52 2 265 1 11 1 60 1 185 1 151 1 68 1 308 1 197 1 205 1 114 1 78 1 76 1 244 1 247 1 121 1 168 1 282 1 34 3 126 2 324 1 254 1 43 1 215 1 172 1 291 1 
0 1 4 1 205 1 298 1 247 1 34 2 282 2 143 1 60 1 185 1 250 1 126 2 254 1 215 1 68 1 308 1 172 1 
4 1 205 1 78 1 298 1 52 2 247 1 34 2 60 1 185 1 323 1 126 2 324 1 43 1 215 1 68 1 308 1 172 1 
0 1 4 1 298 1 52 2 60 1 143 1 185 1 308 1 68 2 114 1 205 1 78 1 247 2 282 2 34 4 126 2 324 1 254 1 43 1 215 1 172 2 
0 1 4 1 205 1 247 1 139 1 34 2 282 2 143 1 60 1 185 1 250 1 126 2 254 1 215 1 68 1 308 1 172 1 
4 1 205 1 78 1 52 2 247 1 139 1 34 2 60 1 185 1 323 1 126 2 324 1 43 1 215 1 68 1 308 1 172 1 
0 1 4 1 52 2 139 1 60 1 185 1 308 1 68 2 114 1 205 1 78 1 247 1 282 2 34 4 126 2 324 1 254 1 43 1 215 1 172 2 
0 1 4 1 205 1 114 1 78 1 52 2 247 2 282 2 34 4 143 1 60 1 185 1 324 1 126 2 254 1 43 1 215 1 68 2 308 1 172 2 
61 1 146 1 204 1 129 1 
204 1 64 1 129 1 102 1 
0 1 4 1 52 2 60 1 143 1 185 1 151 1 308 1 68 2 114 1 205 1 78 1 247 2 282 2 34 4 126 2 324 1 254 1 43 1 215 1 172 2 
61 1 146 1 229 1 54 1 129 1 
0 1 4 1 52 1 265 1 226 1 60 1 143 1 185 1 151 1 308 1 68 1 197 1 205 1 114 1 76 1 244 1 247 1 121 1 168 1 282 2 34 3 324 1 126 2 254 1 43 1 215 1 172 1 291 1 
202 1 4 1 205 1 52 2 318 1 179 1 180 1 140 1 181 1 282 2 34 4 283 1 126 2 148 1 215 1 308 1 95 1 
202 2 4 1 205 1 52 4 318 1 179 1 180 2 181 2 140 1 282 4 34 8 283 2 126 2 148 2 188 1 215 1 308 1 95 2 
202 1 4 1 205 1 52 2 318 1 179 1 180 1 140 1 181 1 282 2 34 4 283 1 126 2 148 1 215 1 308 1 95 1 
202 1 4 1 205 1 52 2 318 1 179 1 180 1 140 1 181 1 282 2 34 4 283 1 126 2 148 1 215 1 308 1 95 1 
202 1 4 1 205 1 52 2 318 1 179 1 180 1 140 1 181 1 282 2 34 4 283 1 126 2 148 1 215 1 308 1 95 1 
184 1 17 1 304 1 90 1 306 1 246 1 69 1 46 1 138 1 96 1 
159 1 13 1 
184 1 17 1 304 1 253 1 90 1 208 1 69 1 276 1 138 1 
67 1 94 1 
314 1 251 1 154 1 
207 1 246 1 138 1 123 1 209 1 184 1 17 1 304 1 325 1 90 1 306 1 192 1 69 1 46 1 171 1 196 1 332 1 158 2 
207 1 246 1 138 1 123 1 209 1 184 1 17 1 304 1 325 1 90 1 306 1 192 1 69 1 46 1 171 1 196 1 332 1 158 2 
207 1 246 1 138 1 123 1 209 1 184 1 17 1 304 1 325 1 90 1 306 1 192 1 69 1 46 1 171 1 196 1 332 1 158 2 
67 1 154 1 94 1 
67 1 154 1 94 1 
314 1 251 1 
314 1 251 1 154 1 
20 1 310 1 
138 1 184 1 13 1 17 1 304 1 235 1 20 1 192 1 69 1 310 1 158 1 159 1 76 2 207 1 317 1 244 2 320 1 281 1 121 2 168 2 41 1 90 1 93 1 45 1 171 1 291 2 332 1 
25 1 4 1 205 1 223 1 52 1 244 2 177 1 34 2 282 1 168 2 144 1 60 1 185 1 232 2 126 2 152 1 151 1 255 1 215 1 330 1 308 1 129 2 291 2 
50 1 186 1 285 1 75 1 224 1 54 1 129 2 155 1 141 1 
50 1 186 1 285 1 224 1 195 1 129 1 155 1 
204 1 129 1 321 1 155 1 72 1 141 1 
50 1 186 1 285 1 75 1 224 1 129 1 155 1 141 1 
327 1 
125 1 315 1 316 1 288 1 264 1 9 1 123 1 
35 1 118 1 6 1 288 1 264 1 216 1 21 1 24 1 
35 1 204 1 113 1 118 1 21 1 129 1 24 1 
48 1 51 1 265 1 264 2 9 1 57 1 100 2 181 1 180 1 14 2 147 1 110 1 188 1 21 1 274 2 24 1 202 1 241 1 76 1 118 1 244 1 319 1 121 1 168 1 123 2 35 1 328 1 288 2 92 1 47 1 291 1 
133 1 264 2 265 1 57 2 147 1 21 1 193 1 71 1 24 1 241 1 76 1 118 1 244 1 319 1 33 1 121 1 168 1 35 1 254 2 288 2 43 1 328 1 329 1 171 1 47 1 291 1 332 1 
315 1 118 1 316 1 264 1 9 1 123 1 35 1 288 1 21 1 24 1 
0 2 241 1 114 2 264 5 57 2 100 5 123 5 14 10 324 2 254 2 288 5 43 2 92 5 112 1 274 5 
74 1 98 1 9 1 171 1 123 1 332 1 
48 2 74 4 204 2 98 2 118 2 79 1 81 1 264 2 59 1 230 1 35 2 63 2 233 1 110 2 288 2 21 2 236 1 171 3 129 4 332 3 24 1 
61 1 146 1 204 1 107 1 76 1 244 1 328 1 265 1 129 1 121 1 168 1 291 1 
294 1 48 1 118 1 264 1 9 2 100 2 123 4 14 4 35 1 110 1 288 2 92 2 21 1 274 2 24 1 
36 1 304 1 69 1 
231 1 304 1 306 1 69 1 310 1 
36 1 304 1 69 1 
36 1 304 1 69 1 
304 1 69 1 175 1 
304 1 69 1 175 1 
304 1 69 1 175 1 
304 1 69 1 
17 1 138 1 
294 1 133 2 278 1 4 2 205 2 78 4 52 8 247 7 32 1 33 2 34 17 282 9 183 1 143 3 126 4 254 3 43 3 215 2 308 2 329 2 71 1 
294 1 133 1 125 1 78 2 254 1 52 2 43 1 247 2 329 1 33 1 32 1 34 5 282 3 183 1 
0 1 4 1 205 1 114 1 78 1 52 2 247 2 282 2 34 4 143 1 83 1 324 1 126 2 254 1 43 1 215 1 308 1 
202 1 52 1 180 1 181 1 282 1 34 2 
202 1 176 1 52 1 180 1 282 1 34 2 
202 1 52 1 34 1 
180 1 34 1 282 1 
0 1 4 1 205 1 114 1 78 2 52 3 247 3 34 6 282 3 143 1 83 1 126 2 324 1 254 1 43 1 215 1 308 1 112 1 
202 1 4 1 205 1 52 1 179 1 181 1 180 1 282 1 34 2 126 2 188 1 215 1 308 1 
133 1 78 1 52 3 33 1 247 2 282 3 34 6 143 1 254 1 43 1 329 1 
278 1 4 1 205 1 78 1 52 2 247 2 33 1 32 1 282 1 34 3 183 1 143 1 126 2 89 1 215 1 329 1 308 1 
133 1 4 1 205 1 78 3 52 5 33 2 247 5 179 1 282 5 34 10 143 2 126 2 254 2 43 2 215 1 308 1 329 2 71 1 
0 1 4 1 205 1 247 1 179 1 282 2 34 2 143 1 126 2 254 1 215 1 308 1 
0 1 4 1 205 1 114 1 78 1 52 2 247 2 179 1 282 2 34 4 143 1 324 1 126 2 254 1 43 1 215 1 308 1 
278 1 4 3 205 3 78 1 52 2 33 1 247 2 179 1 34 3 282 1 143 1 126 6 89 1 128 1 215 3 308 3 329 1 
160 1 202 1 4 3 205 3 52 1 179 1 180 1 181 1 282 1 34 2 83 1 126 6 215 3 128 1 308 3 
202 1 4 1 205 1 52 1 179 1 181 1 180 1 282 1 34 2 126 2 188 1 215 1 308 1 
202 1 4 2 205 2 52 1 179 1 180 1 181 1 282 1 34 2 83 1 126 4 188 1 215 2 308 2 
294 1 133 2 4 2 52 7 179 1 180 1 181 1 183 1 143 1 188 1 308 2 71 1 202 1 205 2 78 3 32 1 33 2 247 4 34 15 282 8 83 1 126 4 254 3 43 3 215 2 329 2 
202 1 4 1 205 1 52 1 179 1 181 1 180 1 282 1 34 2 126 2 188 1 215 1 308 1 
202 1 4 1 205 1 52 1 179 1 181 1 180 1 282 1 34 2 126 2 188 1 215 1 308 1 
202 1 4 1 205 1 52 1 179 1 181 1 180 1 282 1 34 2 126 2 188 1 215 1 308 1 
202 1 4 2 205 2 52 1 179 1 180 1 181 1 282 1 34 2 83 1 126 4 188 1 215 2 308 2 
202 1 4 2 205 2 52 1 179 1 180 1 181 1 282 1 34 2 126 4 188 1 128 1 215 2 308 2 
133 1 78 3 52 4 32 2 33 3 247 6 34 7 282 3 183 1 143 3 254 1 43 1 329 3 
202 1 4 2 205 2 52 1 179 1 180 1 181 1 282 1 34 2 126 4 188 1 128 1 215 2 308 2 
41 1 66 1 286 1 244 1 5 1 168 1 291 1 
219 1 77 1 5 1 244 1 136 1 168 1 16 1 41 1 286 1 66 1 130 1 291 1 
125 1 204 1 129 1 
204 1 161 1 76 1 244 1 129 1 121 1 168 1 291 1 
63 1 161 1 76 1 244 1 129 1 121 1 168 1 291 1 
63 1 161 1 76 1 244 1 129 1 121 1 168 1 291 1 
63 1 129 1 171 1 332 1 
63 1 129 1 171 1 332 1 
129 1 300 1 
204 1 129 1 
4 1 205 1 161 1 76 1 244 1 177 1 54 1 121 1 168 1 60 1 185 1 126 2 151 1 215 1 308 1 129 1 291 1 
35 1 204 1 118 1 21 1 320 1 129 1 171 1 59 1 24 1 332 1 
129 1 300 1 
218 1 204 1 213 1 54 1 129 4 
189 1 129 1 
204 1 129 1 
186 1 54 1 129 2 
204 1 54 1 129 2 
204 1 54 1 129 2 
204 1 161 1 76 1 244 1 129 1 121 1 168 1 291 1 
63 1 129 1 
268 1 65 1 41 1 287 1 259 1 
116 1 9 1 320 1 123 1 124 1 62 1 212 1 268 1 86 1 65 2 38 1 41 1 287 2 190 1 171 2 238 1 259 2 260 1 332 2 
144 1 25 1 268 1 65 1 244 1 152 1 259 1 168 1 291 1 
268 1 238 1 260 1 
125 1 115 1 39 1 44 1 
296 1 115 1 39 1 234 1 44 1 119 1 214 1 
227 1 18 1 234 1 
296 3 115 1 119 1 99 1 248 2 39 1 234 3 44 1 214 1 258 1 331 1 131 1 
240 1 296 2 115 1 39 1 234 2 44 1 119 1 214 1 313 1 
296 1 163 1 119 1 303 1 19 1 252 1 234 1 214 1 44 1 258 1 173 1 
296 1 115 1 234 1 44 1 119 1 214 1 258 1 
296 1 115 2 39 1 234 1 119 1 214 1 258 1 
296 2 115 1 119 2 178 1 234 2 44 1 214 2 290 1 258 1 156 1 
1 1 296 3 115 1 119 1 39 1 19 1 234 3 214 1 256 1 44 2 309 1 258 1 313 2 
296 2 115 1 163 1 119 1 170 1 39 1 108 1 252 2 234 2 44 1 214 1 258 1 173 1 239 1 313 1 
240 1 296 4 115 1 119 2 53 1 39 1 19 1 234 4 214 2 256 1 44 2 258 1 313 2 
296 1 115 1 39 1 234 1 44 1 119 1 214 1 258 1 
296 4 115 2 119 1 99 1 248 1 182 1 39 2 19 1 234 4 214 1 256 1 44 3 331 1 313 2 
262 1 296 2 115 1 279 1 119 1 166 1 39 1 234 2 44 1 214 1 258 1 313 1 
296 3 115 1 119 1 99 2 248 2 210 1 39 1 234 3 44 1 214 1 331 1 258 1 
2 1 44 2 31 1 82 2 
134 1 296 1 234 1 119 1 214 1 258 1 
296 2 115 1 39 1 234 2 44 1 119 1 214 1 309 1 258 1 313 1 
58 1 
296 1 115 1 39 1 234 1 44 1 119 1 214 1 258 1 
296 3 115 1 39 1 234 3 44 1 119 1 214 1 309 1 248 1 258 1 313 1 
19 1 44 1 256 1 182 1 
115 1 44 1 

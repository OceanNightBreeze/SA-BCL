#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 319 (72,318) (72,318) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 319 (72,318) (72,318) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 319 (72,318) (72,318) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 319 (72,318) (72,318) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 319 251 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 319 251 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (98,244) 120 56 (107,192) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 275 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 225 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 173 240 
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 74 115 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 74 115 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 74 115 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 74 115 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 74 115 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.ClassCastException (110,168) 282 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.ClassCastException (110,168) 304 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.ClassCastException (110,168) 304 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.ClassCastException (110,168) 282 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 221 53 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 218 (169,308) 252 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 6 210 223 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (98,244) 120 56 (107,192) (107,192) 8 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (98,244) 120 56 (107,192) (107,192) 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 261 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 263 (2,12) (2,12) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.NullPointerException 263 (2,12) (2,12) 
com.domainlanguage.money.MoneyTest:testApplyRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | != -> ==
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | RETURN | 5626 | return null
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2006 | = null
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 1442 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 772 | 0 -> -1
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | CONDITION | 1216 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 616 | return null
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 1 2 1 203 1 68 3 206 2 279 1 207 2 259 1 94 3 239 1 263 1 128 1 12 1 24 1 
131 1 157 1 203 2 68 4 206 2 327 1 279 1 207 2 259 1 72 1 263 1 239 1 94 4 331 1 79 1 20 1 242 1 128 1 24 1 318 1 104 1 319 1 
131 1 157 1 203 2 68 4 206 2 327 1 279 1 207 2 259 1 72 1 263 1 239 1 94 4 331 1 79 1 20 1 242 1 128 1 24 1 318 1 104 1 319 1 
131 1 157 1 203 2 68 4 206 2 327 1 279 1 207 2 259 1 72 1 263 1 239 1 94 4 331 1 79 1 20 1 242 1 128 1 24 1 318 1 104 1 319 1 
131 1 157 1 203 2 68 4 206 2 327 1 279 1 207 2 259 1 72 1 263 1 239 1 94 4 331 1 79 1 20 1 242 1 128 1 24 1 318 1 104 1 319 1 
131 1 44 1 157 1 2 1 68 4 206 1 279 3 207 1 259 2 239 1 94 4 263 2 332 2 172 1 124 1 242 1 128 1 12 1 319 1 
131 1 180 1 44 1 2 1 203 1 298 1 68 2 206 1 207 1 94 2 331 1 20 1 242 1 128 1 12 1 266 1 
251 1 203 1 68 4 206 2 279 2 207 2 259 1 263 1 94 4 239 1 312 1 128 1 24 1 104 1 319 1 
251 1 203 1 68 4 206 2 279 2 207 2 259 1 263 1 94 4 239 1 312 1 128 1 24 1 104 1 319 1 
285 1 
1 1 
285 1 
268 1 285 1 215 1 21 1 186 1 176 1 116 1 
261 1 1 1 328 1 
1 1 294 2 231 1 
178 1 56 1 191 2 314 2 120 2 160 2 41 2 244 2 
61 1 64 2 28 1 297 1 67 1 160 2 69 1 32 1 71 1 10 1 37 1 76 1 314 3 120 2 265 1 214 2 316 1 130 2 41 2 175 1 220 1 178 1 179 1 273 1 322 1 135 1 136 2 228 1 227 1 233 1 56 1 191 3 99 1 144 1 244 2 60 1 105 2 
107 1 56 1 120 1 244 1 
268 1 321 1 1 1 226 1 328 1 164 1 260 1 116 1 73 1 167 1 141 1 314 1 191 1 41 1 
268 2 1 1 160 1 226 1 328 1 164 1 260 1 116 2 73 1 141 1 120 1 314 1 191 1 41 1 244 1 
285 1 
285 1 
268 1 117 1 116 1 
178 1 109 1 160 1 164 1 119 1 314 2 191 2 120 1 101 1 41 2 244 1 
155 1 85 1 35 1 
150 1 61 1 178 1 179 1 64 1 28 1 136 1 32 1 71 1 37 1 191 1 314 1 265 1 220 1 60 1 105 1 
178 1 261 1 
178 1 109 1 160 3 164 1 120 1 314 3 191 3 333 1 41 3 244 3 
63 1 191 1 314 1 160 1 41 1 244 1 164 1 
160 1 164 1 119 1 120 1 314 1 191 1 101 1 41 1 244 1 
61 1 0 1 64 1 28 1 297 1 67 1 160 3 69 1 32 1 164 1 260 1 116 1 71 1 73 1 10 1 37 1 119 1 76 1 120 2 314 4 211 1 265 1 214 1 315 1 130 2 41 3 175 1 220 1 268 1 178 1 179 1 322 1 135 1 226 1 136 1 228 1 141 1 56 1 191 4 99 1 333 1 244 3 60 1 105 1 
178 1 167 1 191 2 314 2 333 1 160 1 16 1 41 2 244 1 
268 1 1 1 160 3 226 1 164 1 116 1 260 1 73 1 307 1 141 1 119 1 120 1 314 3 191 3 211 1 333 2 315 1 41 3 244 3 
155 1 160 2 119 1 120 1 314 2 191 2 333 1 41 2 244 2 85 1 
61 1 178 1 179 1 64 1 28 1 136 1 32 1 71 1 37 1 191 1 314 1 265 1 220 1 60 1 105 1 
61 1 178 1 64 1 199 1 276 1 28 1 136 1 32 1 71 1 37 1 191 1 314 1 265 1 60 1 105 1 
155 2 291 1 297 1 67 2 69 1 30 1 114 1 301 1 35 2 9 1 10 1 213 1 214 4 130 2 175 1 85 2 320 1 14 1 228 1 234 1 99 1 334 1 144 2 247 1 
191 1 314 1 98 1 226 1 160 1 41 1 244 1 164 1 
61 1 179 1 155 1 64 1 28 1 160 1 136 1 32 1 71 1 37 1 314 2 191 2 211 1 333 1 265 1 41 1 244 1 60 1 220 1 105 1 
178 1 109 1 160 2 164 1 119 1 314 2 191 2 120 1 333 1 41 2 244 2 
63 1 191 2 314 2 98 1 160 2 41 2 244 2 164 1 
306 1 267 1 165 1 
43 1 238 1 88 1 110 1 267 2 165 2 
267 1 165 1 
267 1 165 1 
43 1 88 1 
43 1 88 1 
43 1 88 1 
209 1 267 1 165 1 
209 1 267 1 165 1 
209 1 267 1 165 1 
89 1 267 1 165 1 
89 1 267 1 165 1 
89 1 267 1 165 1 
221 1 268 1 178 1 325 1 326 1 160 2 112 1 70 1 232 1 116 1 165 1 306 1 95 1 191 2 314 2 287 1 193 1 288 1 40 1 41 2 244 2 267 1 13 1 87 1 
268 2 1 1 133 1 326 3 256 1 139 1 232 2 165 2 116 2 187 1 92 1 330 2 168 1 287 1 40 2 267 2 13 2 196 1 87 2 
157 1 242 2 298 1 113 2 106 1 
283 1 157 1 242 2 298 1 113 1 106 1 
131 1 157 1 242 1 
131 1 242 1 298 1 
157 2 242 3 298 1 113 1 4 1 106 1 
285 1 31 1 
305 1 285 2 52 1 281 1 
153 1 198 1 30 1 257 1 7 2 116 1 36 1 9 1 262 1 215 1 176 1 268 1 50 1 186 1 284 1 95 1 143 1 55 1 285 2 21 1 
153 1 198 1 30 1 257 1 7 2 116 1 262 1 36 1 9 1 215 1 176 1 268 1 275 1 50 1 186 1 284 1 95 1 143 1 55 1 285 1 21 1 
161 1 
261 1 28 1 49 1 
37 1 28 1 
37 1 28 3 132 1 313 1 265 1 49 2 
142 1 28 1 
37 1 28 1 265 1 
27 1 28 1 
289 1 249 1 108 1 323 1 67 3 111 1 138 2 208 1 234 1 237 1 9 1 190 1 39 1 213 3 214 7 129 1 144 4 320 2 
248 1 210 1 225 1 67 1 214 3 102 1 144 2 138 1 129 2 6 1 208 1 
289 1 249 1 253 1 297 1 67 4 208 1 8 1 9 2 170 1 39 1 213 3 214 9 129 1 130 2 175 1 320 2 323 1 228 1 138 1 234 2 237 1 190 1 99 1 144 5 
289 1 249 1 108 1 323 1 67 3 138 2 208 1 234 1 237 1 9 1 190 1 39 1 213 3 214 7 129 1 144 4 320 2 
289 1 249 1 108 1 323 1 67 3 138 2 208 1 234 1 237 1 9 1 190 1 39 1 213 3 214 7 129 1 144 4 320 2 
61 1 64 1 28 1 158 1 203 2 136 1 183 1 48 1 68 1 206 1 278 1 207 1 71 1 94 1 37 1 310 1 81 1 80 2 57 1 83 2 22 2 60 1 105 1 
61 1 64 1 157 1 65 1 201 1 203 1 298 1 68 1 206 1 207 1 4 1 80 1 83 1 128 1 131 1 136 1 277 1 51 1 280 1 94 1 189 1 96 1 242 2 22 1 60 1 105 1 
61 1 290 1 64 1 157 1 65 1 201 1 2 1 203 1 298 1 68 2 206 1 207 1 4 1 80 1 83 1 128 1 12 1 131 1 44 1 136 1 279 1 277 1 51 1 94 2 189 1 96 1 242 2 22 1 60 1 105 1 
61 1 64 1 157 1 65 1 201 1 2 1 203 1 298 1 68 3 206 1 4 1 207 1 80 1 83 1 217 1 12 1 131 1 44 1 136 1 278 1 279 2 277 1 51 1 280 1 94 3 96 1 242 2 22 1 60 1 105 1 
61 1 64 1 65 1 157 1 201 1 2 1 203 1 298 1 68 2 4 1 80 1 83 1 217 1 12 1 131 1 44 1 136 1 279 2 277 1 280 1 94 2 242 2 22 1 60 1 105 1 
93 1 
61 1 153 1 64 2 28 1 204 1 299 1 164 1 7 1 33 1 260 1 116 3 71 2 73 1 167 1 117 2 311 1 310 1 37 1 314 1 81 1 125 1 173 1 41 1 176 1 268 3 321 1 45 1 226 1 136 2 186 1 141 1 284 1 240 1 191 1 58 1 21 1 194 1 60 1 105 2 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 3 321 1 226 1 204 1 300 1 164 1 33 1 260 1 116 3 73 1 141 1 117 1 167 1 311 1 240 1 191 1 314 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 186 1 164 1 260 1 116 2 73 1 141 1 167 1 311 1 240 1 191 1 314 1 125 1 173 1 21 1 194 1 41 1 176 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 164 1 116 2 260 1 73 1 167 1 141 1 311 1 240 1 314 1 191 1 173 1 194 1 41 1 
268 2 321 1 226 1 204 1 186 1 164 1 260 1 116 2 73 1 141 1 167 1 311 1 240 1 191 1 314 1 125 1 173 1 21 1 194 1 41 1 176 1 
61 4 62 1 64 7 67 1 159 1 160 1 69 2 258 1 71 2 10 2 81 1 265 1 175 2 273 1 280 1 191 1 99 2 103 1 105 7 28 4 297 2 37 3 310 1 314 1 214 2 130 4 41 1 219 1 222 1 134 1 135 1 136 6 227 2 228 2 137 1 140 1 333 1 144 1 243 1 147 1 244 1 60 3 247 1 
155 1 297 1 67 2 160 1 69 1 30 1 114 1 35 1 9 1 119 1 10 1 120 1 123 1 314 1 213 1 214 3 130 2 41 1 175 1 85 1 320 1 228 1 234 1 55 1 191 1 99 1 144 1 244 1 23 1 
289 1 249 1 155 1 297 1 67 3 69 1 35 1 261 1 9 1 10 1 213 2 214 6 130 2 175 1 85 1 320 2 178 2 323 1 228 1 138 1 234 1 237 1 190 1 99 1 144 3 247 1 
248 2 154 1 155 6 109 1 297 2 67 5 69 2 30 2 163 1 114 1 6 2 164 1 35 6 9 2 10 1 213 1 214 12 130 4 175 2 85 2 320 1 178 1 273 1 135 1 324 1 228 2 230 1 234 1 55 2 99 2 144 7 23 1 146 1 
61 1 150 1 64 1 28 1 297 1 67 1 160 1 69 1 32 1 71 1 166 1 37 1 10 1 314 2 121 1 211 1 265 1 214 2 41 1 130 2 175 1 220 1 85 1 178 1 179 1 273 1 135 1 136 1 228 1 185 1 191 2 99 1 333 1 144 1 23 1 244 1 60 1 105 1 
61 2 249 1 155 7 64 3 67 10 160 1 69 3 5 1 71 1 9 3 10 3 169 2 265 2 84 2 175 3 85 7 178 2 179 2 271 1 273 1 280 1 190 1 191 3 99 3 23 1 25 1 105 3 289 1 28 2 297 3 29 2 30 2 32 2 114 2 35 7 37 2 314 3 211 1 39 4 213 8 214 20 130 6 41 1 220 2 320 4 322 2 323 1 135 1 136 3 228 3 138 1 229 2 234 3 237 1 55 2 333 1 144 10 244 1 60 2 
155 1 291 1 297 1 228 1 69 1 30 1 35 1 9 1 10 1 99 1 213 1 39 1 214 2 144 2 130 2 175 1 85 1 247 1 
155 1 297 1 67 2 228 1 69 1 114 1 301 1 35 1 234 1 10 1 99 1 213 1 214 2 130 2 175 1 85 1 247 1 320 1 
155 2 297 1 67 2 30 1 69 1 114 1 35 2 9 1 10 1 39 1 213 2 214 4 130 2 175 1 85 2 320 1 228 1 234 1 55 1 99 1 144 2 247 1 
155 1 291 1 297 1 228 1 69 1 30 1 35 1 9 1 10 1 99 1 213 1 39 1 214 2 144 2 130 2 147 1 175 1 85 1 
155 1 297 1 67 2 228 1 69 1 114 1 301 1 35 1 234 1 10 1 99 1 213 1 214 2 130 2 147 1 175 1 85 1 320 1 
155 2 297 1 67 2 30 1 69 1 114 1 35 2 9 1 10 1 39 1 213 2 214 4 130 2 175 1 85 2 320 1 228 1 234 1 55 1 99 1 144 2 147 1 
155 2 297 1 67 2 30 1 69 1 114 1 35 2 9 1 10 1 39 1 213 2 214 4 130 2 175 1 85 2 320 1 228 1 234 1 55 1 99 1 144 2 
61 1 64 1 28 1 297 1 67 1 69 1 32 1 71 1 37 1 10 1 314 1 265 1 214 2 130 2 175 1 220 1 178 1 179 1 273 1 322 1 135 1 136 1 228 1 191 1 99 1 144 1 60 1 105 1 
61 1 64 1 199 1 28 1 297 1 67 1 69 1 32 1 302 1 71 1 37 1 10 1 314 1 265 1 214 2 130 2 175 1 178 1 273 1 276 1 135 1 136 1 228 1 191 1 99 1 144 1 60 1 105 1 
155 2 297 1 67 2 30 1 69 1 114 1 35 2 9 1 10 1 39 1 213 2 214 4 130 2 175 1 85 2 320 1 228 1 234 1 55 1 99 1 144 2 23 1 
61 1 155 2 290 1 64 1 28 1 297 1 67 2 30 1 69 1 114 1 32 1 35 2 9 1 37 1 10 1 314 1 213 2 39 1 265 1 214 4 130 2 175 1 85 2 220 1 320 1 179 1 322 1 136 1 228 1 229 1 234 1 55 1 191 1 99 1 144 2 60 1 105 1 
155 1 292 1 297 1 67 1 160 1 69 1 30 1 114 1 35 1 9 1 119 1 10 1 120 1 314 1 213 1 39 1 214 3 130 2 41 1 175 1 85 1 228 1 234 1 55 1 191 1 99 1 144 2 244 1 23 1 
303 1 74 1 253 1 99 1 297 1 228 1 130 2 175 1 115 1 34 1 
303 1 74 1 253 1 99 1 297 1 228 1 130 2 175 1 115 1 34 1 
303 1 74 1 253 1 99 1 297 1 228 1 130 2 175 1 115 1 34 1 
303 1 74 1 253 1 99 1 297 1 228 1 130 2 175 1 115 1 34 1 
303 1 74 1 253 1 99 1 297 1 228 1 130 2 175 1 115 1 34 1 
168 1 133 1 241 1 40 1 139 1 13 1 267 1 87 1 232 1 165 1 
306 1 193 1 
184 1 40 1 195 1 42 1 13 1 267 1 87 1 232 1 165 1 
209 1 304 1 
282 1 110 1 89 1 
268 1 1 1 133 1 326 2 256 1 139 1 232 1 116 1 165 1 187 1 92 1 330 1 168 1 287 1 40 1 267 1 13 1 87 1 
268 1 1 1 133 1 326 2 256 1 139 1 232 1 116 1 165 1 187 1 92 1 330 1 168 1 287 1 40 1 267 1 13 1 87 1 
268 1 1 1 133 1 326 2 256 1 139 1 232 1 116 1 165 1 187 1 92 1 330 1 168 1 287 1 40 1 267 1 13 1 87 1 
209 1 304 1 110 1 
209 1 304 1 110 1 
282 1 89 1 
282 1 110 1 89 1 
325 1 288 1 
221 1 53 1 330 1 285 1 326 1 256 1 40 1 13 1 267 1 87 1 232 1 165 1 
61 1 64 2 28 1 297 1 202 1 67 1 255 1 69 1 37 1 10 1 314 2 38 1 214 2 41 2 130 2 175 1 222 1 273 1 135 1 136 2 228 1 227 2 140 1 91 1 191 2 99 1 286 1 144 1 23 1 60 1 105 2 
61 1 64 1 28 1 200 1 136 1 48 1 71 1 37 1 310 1 81 1 11 1 22 1 60 1 105 1 
131 1 61 1 64 1 157 1 65 1 200 1 46 1 136 1 298 1 277 1 4 1 280 1 77 1 96 1 242 2 22 1 60 1 105 1 
131 1 61 1 290 1 64 2 157 1 65 1 200 1 46 1 136 2 298 1 277 1 4 1 280 1 77 1 96 1 242 2 22 1 60 1 105 2 
131 1 61 1 64 1 157 1 65 1 136 1 298 1 277 1 4 1 280 1 77 1 96 1 242 2 22 1 246 1 60 1 105 1 
224 1 
1 1 125 1 21 1 328 1 186 1 176 1 7 1 17 1 
262 1 9 1 55 1 30 1 257 1 7 2 
71 1 64 1 136 1 105 1 
261 1 284 1 1 1 126 1 328 1 7 1 17 1 
284 1 274 1 295 1 125 1 21 1 186 1 176 1 7 1 
61 2 269 1 153 1 64 1 28 2 252 1 136 1 186 1 71 1 284 1 308 1 142 1 37 1 313 1 265 1 125 1 218 1 21 1 176 1 60 1 105 1 
248 1 284 1 223 1 210 1 125 1 21 1 186 1 6 1 176 1 7 1 
107 1 289 1 268 1 47 1 186 1 7 1 8 1 234 1 116 1 237 1 9 1 284 2 78 2 56 1 190 1 120 1 192 1 125 1 21 1 244 1 176 1 
45 1 284 1 153 1 125 1 21 1 186 1 176 1 7 1 
133 1 18 1 325 1 40 1 13 1 
296 1 40 1 13 1 
296 1 40 1 13 1 
296 1 40 1 13 1 
82 1 40 1 13 1 
82 1 40 1 13 1 
82 1 40 1 13 1 
40 1 13 1 
267 1 165 1 
289 1 253 1 297 1 67 5 228 1 8 1 234 2 237 2 9 2 190 2 99 1 213 5 39 2 214 10 144 5 130 2 175 1 320 3 
253 1 297 1 228 1 30 1 9 1 99 1 39 1 213 1 214 2 144 2 130 2 175 1 
253 1 297 1 67 2 228 1 30 1 114 1 234 1 9 1 55 1 99 1 213 2 39 1 214 4 144 2 130 2 175 1 320 1 
151 1 253 1 297 3 67 2 228 3 237 1 190 1 99 3 213 2 39 1 214 3 144 1 59 1 130 6 175 3 86 1 320 1 
289 1 248 1 249 1 253 1 297 3 67 6 6 1 8 1 9 2 210 1 39 2 213 4 214 12 130 6 175 3 320 2 323 1 228 3 234 2 237 1 190 1 99 3 100 1 102 1 144 6 59 1 
289 2 248 1 249 1 151 1 253 1 297 2 67 10 30 2 114 1 6 1 8 1 9 5 210 1 39 4 213 9 214 24 130 4 317 1 175 2 320 5 270 1 223 1 323 1 228 2 138 1 234 4 237 2 54 1 55 2 190 2 99 2 144 14 335 1 
289 1 248 1 249 1 151 1 253 1 297 3 67 7 30 2 114 1 6 1 9 3 210 1 39 1 213 4 214 17 130 6 317 1 175 3 320 3 270 1 223 1 323 1 228 3 138 1 234 2 237 1 54 1 55 2 190 1 99 3 100 1 144 10 335 1 
289 1 248 1 249 1 151 1 253 1 297 3 67 10 30 2 114 2 6 1 9 3 210 1 39 1 213 4 214 19 130 6 317 1 175 3 320 3 270 1 223 1 323 1 228 3 138 1 234 3 237 1 54 1 55 2 190 1 99 3 100 1 144 9 335 1 
289 1 248 1 249 1 151 1 253 1 297 3 67 7 30 2 114 1 6 1 9 3 210 1 39 2 213 5 214 17 130 6 317 1 175 3 320 3 270 1 223 1 323 1 228 3 138 1 234 2 237 1 54 1 55 2 190 1 99 3 100 1 144 10 335 1 
289 2 248 1 249 1 151 1 253 1 297 2 67 10 30 2 114 1 6 1 8 1 9 5 210 1 39 4 213 9 214 24 130 4 317 1 175 2 320 5 270 1 223 1 323 1 228 2 138 1 234 4 237 2 54 1 55 2 190 2 99 2 144 14 335 1 
248 1 253 1 297 1 67 6 30 2 114 2 6 1 9 2 210 1 39 1 213 2 214 12 130 2 317 1 175 1 320 1 270 1 223 1 228 1 234 2 54 1 55 2 99 1 144 6 335 1 
289 1 248 1 249 1 151 2 253 1 297 4 67 8 30 2 114 1 6 1 9 3 210 1 39 2 213 5 214 18 130 8 317 1 175 4 320 3 270 1 223 1 323 1 228 4 138 1 234 2 237 1 54 1 55 2 190 1 99 4 100 1 144 10 335 1 
248 1 151 2 253 1 297 4 67 7 30 3 114 2 6 1 9 3 210 1 39 3 213 6 214 16 130 8 317 1 175 4 320 3 270 1 223 1 228 4 234 2 54 1 55 3 99 4 144 9 59 1 335 1 
289 1 249 2 323 1 67 4 234 1 237 3 9 1 190 3 213 6 39 3 214 7 144 3 320 3 
289 1 248 1 249 1 151 2 253 1 297 4 67 8 30 2 114 1 6 1 9 3 210 1 39 1 213 4 214 18 130 8 317 1 175 4 320 3 270 1 223 1 323 1 228 4 138 1 234 2 237 1 54 1 55 2 190 1 99 4 144 10 59 1 335 1 
289 1 151 1 249 1 323 1 297 2 67 4 228 2 138 1 234 1 237 1 9 1 190 1 99 2 39 1 213 3 214 8 144 4 130 4 175 2 320 2 
289 1 249 1 323 1 67 3 138 1 234 1 237 1 261 1 9 1 190 1 213 2 214 6 144 3 320 2 
297 1 67 2 228 1 30 1 114 1 234 1 9 1 55 1 99 1 213 2 100 1 39 1 214 4 144 2 130 2 175 1 320 1 
248 1 210 1 67 1 214 2 144 1 6 1 
289 2 248 2 249 1 151 1 154 1 297 1 67 13 30 2 114 2 6 2 8 1 9 5 213 7 39 2 214 26 130 2 175 1 320 5 323 1 324 1 228 1 138 1 234 5 237 2 55 2 190 2 99 1 144 13 146 1 
248 1 67 1 214 1 
214 1 144 1 6 1 
297 1 29 1 67 3 228 1 30 1 114 1 234 1 9 1 55 1 99 1 100 1 39 1 213 3 214 6 144 3 130 2 175 1 320 2 
248 1 253 1 297 1 67 6 30 2 114 2 6 1 9 2 210 1 39 1 213 2 214 12 130 2 317 1 175 1 320 1 270 1 223 1 228 1 234 2 54 1 55 2 99 1 144 6 335 1 
289 1 67 3 234 1 237 1 9 1 190 1 213 2 39 1 214 6 144 3 320 1 
249 1 151 1 323 1 297 1 67 2 228 1 237 1 190 1 99 1 39 1 213 2 214 3 144 1 130 2 175 1 86 1 320 1 
178 1 152 1 182 1 254 1 15 1 16 1 236 1 167 1 171 1 314 1 191 1 41 1 
178 1 152 1 167 1 191 1 314 1 41 1 16 1 
61 1 250 1 290 1 64 4 28 1 136 4 71 1 310 1 37 1 81 1 174 1 60 1 105 4 
61 2 62 1 271 1 64 2 28 1 136 2 137 1 309 1 37 1 265 1 243 1 219 1 60 1 105 2 
131 1 61 1 71 1 64 1 65 1 242 1 136 1 298 1 60 1 105 1 
61 1 290 1 64 2 28 1 136 2 255 1 140 1 280 1 37 1 60 1 105 2 
61 2 250 1 290 1 64 5 28 3 136 4 159 1 140 1 258 1 71 1 309 1 310 1 37 2 81 1 60 2 105 5 
61 2 250 1 290 1 64 5 293 1 28 3 136 4 159 1 140 1 71 1 309 1 310 1 37 2 81 1 60 2 105 5 
61 1 71 1 261 1 37 1 310 1 64 1 28 1 81 1 136 1 60 1 105 1 
61 1 178 1 64 1 28 1 160 1 136 1 32 1 71 1 37 1 314 2 191 2 333 1 265 1 41 1 244 1 220 1 60 1 105 1 
61 1 178 1 27 1 64 1 28 3 226 1 160 2 136 1 32 1 164 1 141 1 37 2 309 1 122 1 314 2 191 2 333 1 265 2 41 2 244 1 220 1 60 1 105 1 
61 1 27 1 64 2 28 3 160 2 32 1 164 1 309 1 37 2 314 2 122 1 265 2 41 2 174 1 178 1 276 1 136 2 226 1 141 1 191 2 333 1 244 1 60 1 105 2 
61 1 268 2 27 1 1 1 156 1 64 3 28 4 136 3 328 1 49 1 116 2 71 1 73 1 188 1 117 1 37 1 309 1 142 1 122 1 265 1 174 1 60 1 105 3 
61 1 268 2 27 1 1 1 64 3 28 4 136 3 328 1 49 1 116 2 71 1 73 1 117 1 37 1 309 1 142 1 122 1 212 1 265 1 174 1 60 1 105 3 
61 1 64 1 136 1 103 1 60 1 105 1 
61 3 64 6 28 3 159 1 258 1 71 2 37 2 313 1 265 1 216 1 134 1 136 5 227 1 137 1 140 1 280 1 243 1 103 1 60 2 105 6 
61 1 249 1 155 1 64 1 67 3 160 1 69 2 9 1 10 2 169 1 265 1 175 2 85 1 179 1 178 2 190 1 191 2 99 2 23 1 105 1 289 1 290 1 28 1 297 2 32 1 35 1 37 1 314 2 38 1 213 2 214 6 130 4 41 1 220 1 320 2 322 1 323 1 136 1 228 2 229 1 138 1 234 1 237 1 333 1 144 3 244 1 60 1 
285 1 
61 1 178 1 64 1 28 1 276 1 160 1 136 1 32 1 71 1 37 1 314 2 191 2 333 1 265 1 41 1 244 1 60 1 105 1 
61 2 64 1 28 1 136 1 137 1 309 1 37 1 313 1 265 1 216 1 243 1 60 1 105 1 
61 2 269 1 290 1 64 2 28 2 136 2 49 1 37 1 313 1 265 1 103 1 60 1 105 2 
191 1 314 1 19 1 66 1 202 1 286 1 41 1 145 1 91 1 
118 1 66 1 90 1 
178 1 19 1 66 1 127 1 145 1 
107 1 66 1 3 1 164 1 260 1 116 1 73 1 118 1 120 1 315 1 127 1 268 1 226 1 90 1 141 1 56 1 19 1 192 1 285 1 145 1 244 1 
44 1 2 1 68 1 206 1 207 1 94 1 128 1 12 1 
44 2 2 1 68 3 206 1 279 2 207 1 259 1 94 3 239 1 263 1 12 1 
44 1 2 1 68 2 206 1 279 1 207 1 235 1 94 2 312 1 264 1 128 1 12 1 
197 1 44 1 2 1 68 2 206 1 207 1 94 2 75 1 20 1 128 1 12 1 
26 1 263 2 245 1 177 2 
94 1 97 1 128 1 68 1 206 1 207 1 
44 1 2 1 68 2 206 1 279 1 207 1 329 1 94 2 128 1 12 1 
205 1 
44 1 2 1 68 1 206 1 207 1 94 1 128 1 12 1 
261 1 2 1 12 1 
44 1 94 1 2 1 68 1 12 1 206 1 207 1 
80 1 203 1 68 1 
197 1 44 1 181 1 2 1 68 2 206 1 207 1 94 2 20 1 128 1 12 1 
44 1 2 1 68 2 206 1 279 1 207 1 94 2 332 1 12 1 
131 1 157 1 68 1 206 1 207 1 259 1 94 1 263 1 172 1 242 1 128 1 
94 1 128 1 68 1 12 1 206 1 207 1 
263 1 94 1 2 1 128 1 68 1 12 1 206 1 207 1 
272 1 162 1 68 2 206 2 207 2 94 2 128 1 12 1 148 1 
263 1 94 1 2 1 128 1 68 1 12 1 206 1 104 1 207 1 
131 1 44 1 157 1 2 1 298 1 68 2 206 1 279 1 207 1 4 1 94 2 242 2 128 1 12 1 149 1 
44 1 2 1 68 3 206 1 279 2 207 1 259 1 94 3 239 1 263 1 332 1 124 1 128 1 12 1 
44 1 2 1 68 2 206 1 207 1 94 2 20 1 128 1 12 1 
44 1 263 1 239 1 259 1 
12 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 (287,349) (287,349) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 355 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 30 355 
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 158 
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 212 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 21 42 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V FAILED junit.framework.AssertionFailedError 98 
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException (5,84,110,214) (5,84,110,214) 177 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | RETURN | 1328 | return null
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONDITION | 1130 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> !=
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration; | RETURN | 1684 | return null
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | ASSIGN | 955 | = null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | ASSIGN | 1088 | = null
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | STATEMENT | 12316 | stmt -> ;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money; | ASSIGN | 6447 | = null
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I | OPERATOR | 1094 | + -> -
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2319 | stmt -> ;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
151 1 349 1 1 1 352 3 20 1 287 1 64 2 354 1 171 4 43 1 5 6 291 1 76 9 46 2 365 2 234 2 342 2 233 1 259 1 30 1 84 9 214 2 110 2 188 1 59 1 37 4 
151 1 349 1 1 1 352 3 20 1 287 1 64 2 354 1 171 4 43 1 5 6 291 1 76 9 46 2 365 2 234 2 342 2 233 1 259 1 30 1 84 9 214 2 110 2 188 1 59 1 37 4 
151 1 349 1 1 1 352 3 20 1 287 1 64 2 354 1 171 4 43 1 5 6 291 1 76 9 46 2 365 2 234 2 342 2 233 1 259 1 30 1 84 9 214 2 110 2 188 1 59 1 37 4 
151 1 349 1 46 2 1 1 352 2 365 1 233 1 342 2 234 2 259 1 64 2 287 1 20 1 30 1 171 3 43 1 84 7 5 4 110 2 214 2 291 1 188 1 59 1 76 7 37 3 
151 1 352 1 365 2 342 1 234 1 259 1 64 1 354 1 30 1 171 2 84 4 5 3 110 1 214 1 76 4 37 2 
271 1 46 1 40 1 342 1 259 1 286 1 64 1 43 1 84 2 333 1 196 1 32 1 110 1 214 1 188 1 76 2 37 1 
32 1 46 1 214 2 110 2 352 1 259 1 286 1 171 1 59 1 76 3 84 3 5 1 37 2 
151 1 46 1 1 1 352 3 365 2 342 1 234 1 233 1 259 1 64 1 354 1 30 1 171 4 355 1 84 9 5 7 110 2 214 2 363 1 76 9 59 1 37 4 
151 1 46 1 1 1 352 3 365 2 342 1 234 1 233 1 259 1 64 1 354 1 30 1 171 4 355 1 84 9 5 7 110 2 214 2 363 1 76 9 59 1 37 4 
98 1 
351 1 187 1 55 2 
182 2 200 1 347 2 91 2 205 1 309 2 275 2 323 2 
283 1 327 1 328 1 19 2 97 1 65 1 172 1 67 1 197 1 307 1 101 2 229 1 200 1 72 1 205 1 339 1 362 1 309 2 275 2 78 1 364 1 209 2 182 3 366 1 211 1 237 1 9 1 215 1 372 1 90 2 347 3 91 2 216 1 93 1 116 1 323 2 169 2 
182 1 200 1 284 1 347 1 91 1 309 1 268 1 275 1 323 1 227 1 
191 1 182 1 284 1 83 1 213 1 371 1 10 1 337 1 91 1 347 1 265 1 187 1 149 1 180 1 
191 1 182 1 284 1 83 1 371 1 337 2 10 2 91 1 347 1 187 1 149 1 309 1 275 1 180 1 323 1 
69 1 218 1 337 1 10 1 344 1 
69 1 337 2 10 2 18 1 187 1 149 1 344 1 248 1 
337 1 10 1 344 1 
39 1 182 1 284 1 227 1 69 1 10 1 337 1 200 1 91 1 347 1 309 1 268 1 275 1 323 1 
187 1 
69 1 337 2 10 2 238 1 18 1 187 1 149 1 344 1 
2 1 193 2 278 1 18 1 344 2 128 1 173 1 66 1 69 2 335 2 10 5 337 5 292 1 187 1 230 1 149 1 14 1 118 2 168 1 
78 1 209 1 182 2 327 1 258 1 328 1 247 1 65 1 197 1 9 1 101 1 229 1 91 1 347 2 339 1 11 1 362 1 309 1 275 1 169 1 
98 1 
182 2 257 1 367 1 91 2 347 2 205 2 309 1 275 1 323 1 
48 1 247 1 134 1 
78 1 209 1 182 1 328 1 327 1 65 1 142 1 9 1 197 1 101 1 229 1 347 1 205 1 339 1 362 1 169 1 
182 3 347 3 91 3 205 1 11 1 309 3 275 3 323 1 
182 1 284 1 347 1 91 1 309 1 268 1 275 1 
182 1 257 1 284 1 347 1 91 1 367 1 309 1 275 1 323 1 
219 1 283 1 191 1 327 1 284 1 328 1 19 2 65 1 172 1 67 1 197 1 101 1 229 1 337 1 200 1 72 1 205 1 339 1 362 1 309 3 275 3 180 1 78 1 364 1 209 1 182 4 366 1 257 1 258 1 368 1 83 1 211 1 9 1 215 1 371 1 372 1 10 1 90 1 347 4 91 3 11 1 93 1 323 2 169 1 
213 1 334 1 182 2 347 2 91 2 205 1 11 1 309 1 275 1 
191 1 182 3 257 1 284 1 258 1 368 1 83 1 371 1 44 1 337 1 10 1 91 3 347 3 187 1 11 2 309 3 275 3 180 1 323 1 
182 2 257 1 347 2 91 2 11 1 247 1 309 2 275 2 323 1 134 1 
78 1 209 1 182 1 328 1 327 1 65 1 9 1 197 1 101 1 229 1 347 1 205 1 339 1 362 1 169 1 
78 1 209 1 182 1 328 1 327 1 65 1 226 1 197 1 101 1 229 1 347 1 240 1 205 1 362 1 169 1 
301 1 283 1 155 1 19 2 247 2 172 1 251 1 202 1 72 2 134 2 104 1 364 1 82 1 294 1 366 1 48 2 88 1 215 1 90 4 299 1 348 1 216 2 93 1 269 1 
191 1 182 1 284 1 347 1 91 1 332 1 309 1 275 1 
182 5 257 1 258 1 85 1 213 1 334 1 91 5 347 5 71 1 205 1 11 2 309 4 275 4 323 1 
182 2 284 1 347 2 91 2 332 1 309 2 268 1 275 2 
100 1 331 1 
100 1 331 1 
129 1 228 1 
129 1 228 1 
129 1 228 1 
100 1 24 1 331 1 
100 1 24 1 331 1 
100 1 331 1 260 1 
109 1 100 2 331 2 179 1 129 1 228 1 
100 1 24 1 331 1 
100 1 253 1 331 1 
100 1 253 1 331 1 
100 1 253 1 331 1 
331 2 47 2 139 1 273 3 87 2 109 1 289 2 100 2 316 1 10 2 337 2 184 1 204 2 73 1 266 1 187 1 57 2 282 1 119 1 
331 1 246 1 126 1 273 1 100 1 337 1 204 1 205 1 309 2 275 2 182 2 47 1 260 1 141 1 236 1 87 1 10 1 91 2 347 2 318 1 92 1 57 1 267 1 119 1 
342 1 234 1 64 1 
40 1 342 1 64 1 
264 1 40 1 132 1 234 2 342 3 167 1 
264 1 40 1 132 1 234 1 342 2 322 1 
264 2 40 1 234 1 132 1 342 2 
351 1 193 1 170 1 18 1 246 1 126 1 128 2 4 1 69 4 335 1 337 5 292 3 338 2 230 1 104 1 27 1 341 1 82 1 49 2 344 1 141 1 140 1 55 3 88 1 10 5 374 2 146 1 187 2 149 1 269 1 118 1 300 1 
217 3 218 3 351 1 193 2 18 1 126 2 128 2 173 1 306 1 69 5 198 1 158 1 335 2 337 7 292 3 338 2 230 1 77 1 104 1 27 1 341 1 82 1 49 2 344 4 140 1 55 3 88 1 10 7 187 3 149 1 269 1 118 2 300 1 
351 2 193 1 126 1 4 1 128 2 173 1 69 2 335 1 337 3 292 3 338 2 341 1 104 1 82 1 49 2 140 1 55 4 88 1 10 3 374 1 146 1 187 3 149 1 118 1 269 1 300 1 
193 1 4 1 173 1 335 1 158 1 10 1 337 1 146 1 118 1 
98 1 
78 1 25 1 
99 1 
78 1 229 1 
78 3 244 1 229 1 327 1 74 1 262 2 
78 1 229 1 327 1 
78 1 252 1 
163 1 105 1 82 1 183 1 137 1 157 1 53 1 314 1 251 2 199 1 90 7 72 3 144 2 348 3 216 4 255 1 269 1 
163 1 105 1 82 1 183 1 137 1 157 1 53 1 314 1 251 2 199 1 90 7 72 3 144 2 348 3 216 4 255 1 269 1 
163 1 105 1 82 1 183 1 137 1 157 1 53 1 314 1 251 2 199 1 90 7 72 3 144 2 241 1 348 3 216 4 255 1 269 1 
283 1 19 2 172 1 157 7 288 1 199 1 251 6 23 1 72 17 159 1 178 1 255 2 340 3 104 3 163 1 364 1 105 1 82 5 135 1 366 1 183 2 137 1 311 4 53 3 314 3 166 1 88 3 112 1 90 34 144 1 186 1 348 13 216 17 269 5 300 3 
350 1 364 2 105 1 283 2 82 1 366 2 183 1 137 1 19 4 172 2 53 1 157 1 107 1 314 1 166 1 199 1 251 3 90 9 72 4 144 2 348 4 216 5 255 1 269 1 
63 1 192 1 40 1 330 1 223 1 286 1 64 1 5 1 22 1 197 1 101 1 358 1 362 1 231 1 76 2 46 1 209 1 234 1 342 2 259 1 343 1 84 2 32 1 214 1 110 1 280 1 167 1 321 1 37 1 169 1 
63 1 153 1 221 1 192 1 124 1 40 1 223 1 286 1 64 1 5 2 22 1 197 1 101 1 358 1 362 1 76 3 46 1 209 1 234 1 342 2 343 1 84 3 32 1 214 1 110 1 280 1 167 1 321 1 37 1 169 1 
63 1 153 1 221 1 192 1 40 1 223 1 286 1 64 1 5 2 22 1 197 1 101 1 358 1 362 1 76 2 46 1 209 1 342 2 234 1 84 2 32 1 280 1 167 1 37 1 169 1 
78 1 46 2 63 2 209 1 276 1 304 1 124 1 328 1 329 1 125 1 84 1 197 1 110 1 214 1 101 1 229 1 280 2 358 2 362 1 76 1 16 1 206 1 169 1 
63 1 153 1 192 1 40 1 330 1 223 1 64 1 22 1 197 1 101 1 358 1 362 1 76 1 46 1 209 1 234 1 342 2 259 1 343 1 84 1 214 1 110 1 280 1 167 1 321 1 169 1 
359 1 
191 1 193 1 328 2 284 1 197 1 290 2 250 1 101 2 335 1 337 3 292 2 162 1 206 1 341 1 209 2 344 2 213 1 10 3 347 1 265 1 58 1 15 1 118 1 169 2 220 1 18 1 125 1 128 2 274 1 176 1 229 1 230 1 362 1 180 1 78 1 79 1 182 1 138 1 83 1 371 1 373 1 239 1 91 1 190 1 242 1 243 1 
191 1 284 1 222 1 18 1 290 2 176 1 337 3 180 1 182 1 83 1 344 2 213 1 371 1 373 1 10 3 347 1 91 1 239 1 238 1 265 1 58 1 242 1 
191 1 284 1 18 1 290 3 176 1 337 3 180 1 182 1 83 1 344 1 50 1 213 1 371 1 373 1 10 3 347 1 91 1 239 1 238 1 265 1 187 1 149 1 58 1 242 1 
191 1 284 1 222 1 18 1 290 3 176 1 70 1 337 3 180 1 182 1 83 1 344 2 50 1 213 1 371 1 373 1 10 3 238 1 347 1 91 1 239 1 265 1 187 1 149 1 58 1 242 1 
191 1 39 1 96 1 193 1 284 2 41 1 290 2 335 1 337 3 200 1 292 1 344 3 298 1 213 1 10 3 347 2 265 1 58 1 268 1 118 1 220 1 222 2 18 1 128 1 227 1 176 1 70 2 230 1 309 1 275 1 180 1 182 2 83 1 371 1 373 1 238 1 239 1 91 2 187 1 189 1 149 1 242 1 323 1 
220 1 191 1 193 1 284 1 128 1 274 1 290 2 176 1 335 1 337 2 292 1 230 1 180 1 79 1 182 1 138 1 83 1 213 1 371 1 373 1 10 2 239 1 91 1 347 1 265 1 58 1 242 1 118 1 243 1 
220 1 39 1 191 1 193 1 96 1 284 2 41 1 128 1 227 1 290 2 176 1 335 1 200 1 337 2 292 1 230 1 309 1 275 1 180 1 182 2 83 1 213 1 371 1 373 1 10 2 347 2 91 2 239 1 265 1 187 1 149 1 58 1 268 1 323 1 242 1 118 1 
220 1 39 1 191 1 193 1 96 1 284 2 41 1 128 1 227 1 290 2 176 1 335 1 200 1 337 2 292 1 230 1 309 1 275 1 180 1 182 2 83 1 213 1 371 1 373 1 10 2 347 2 91 2 239 1 265 1 187 1 149 1 58 1 268 1 323 1 242 1 118 1 
191 1 39 1 193 1 284 2 290 2 335 1 337 2 200 1 292 1 103 1 213 1 10 2 347 2 265 1 58 1 60 1 268 1 118 1 128 1 274 1 227 1 176 1 230 1 309 1 180 1 275 1 232 1 79 2 182 2 138 2 83 1 371 1 373 1 239 1 91 2 187 1 149 1 36 1 242 1 323 1 
191 1 39 1 96 1 193 1 284 2 41 1 290 3 335 1 337 2 200 1 292 1 344 1 50 1 213 1 10 2 347 2 265 1 58 1 268 1 118 1 220 1 222 1 128 1 227 1 176 1 70 1 230 1 309 1 180 1 275 1 182 2 83 1 371 1 373 1 239 1 91 2 187 1 189 1 149 1 242 1 323 1 
191 1 39 1 96 1 193 1 284 2 41 1 290 3 335 1 337 2 200 1 292 1 344 1 50 1 213 1 10 2 347 2 265 1 58 1 268 1 118 1 220 1 222 1 128 1 227 1 176 1 70 1 230 1 309 1 180 1 275 1 182 2 83 1 371 1 373 1 239 1 91 2 187 1 189 1 149 1 242 1 323 1 
191 1 193 1 284 1 128 1 274 1 290 2 176 1 335 1 337 2 292 1 230 1 180 1 79 1 182 1 138 1 83 1 213 1 371 1 373 1 10 2 239 1 91 1 347 1 265 1 58 1 36 1 242 1 118 1 243 1 
364 1 283 1 215 1 366 1 155 1 19 2 93 1 98 1 172 1 
17 1 283 2 19 4 247 11 172 2 157 1 288 1 251 1 72 6 205 1 161 1 340 3 134 4 104 2 364 2 82 1 135 1 366 2 48 11 311 3 312 1 237 1 88 1 34 1 215 2 372 1 90 14 185 1 348 2 93 1 216 8 269 2 300 2 
38 1 17 1 283 1 327 1 328 1 19 2 65 1 172 1 197 1 101 1 229 1 72 1 205 1 339 1 362 1 309 1 275 1 134 1 78 1 209 1 364 1 182 2 366 1 258 1 29 1 142 1 237 1 9 1 215 1 372 1 90 2 347 2 91 1 11 1 93 1 216 1 169 1 324 1 
153 1 154 2 283 3 245 2 328 1 327 2 247 7 157 4 197 2 101 3 199 1 251 4 205 2 339 2 45 1 256 1 104 2 209 3 105 1 258 1 48 7 53 1 297 2 9 2 215 3 347 3 11 1 348 8 216 10 269 3 169 3 300 2 17 1 19 6 65 2 172 3 67 2 229 2 72 10 75 2 362 2 309 1 275 1 134 7 78 2 364 3 82 3 182 3 366 3 137 1 314 1 237 1 88 2 372 1 90 20 144 1 317 1 91 1 93 3 
153 1 283 2 326 1 155 1 328 2 19 4 97 2 125 1 21 1 172 2 197 2 101 7 229 2 72 1 362 2 309 1 231 1 275 1 206 1 78 3 207 1 209 8 364 2 182 1 366 2 106 1 54 1 237 1 215 2 372 1 90 2 347 1 91 1 147 1 375 1 11 1 93 2 216 1 169 8 
17 1 283 1 19 2 247 1 172 1 251 1 72 2 309 1 275 1 134 1 104 1 364 1 182 1 82 1 257 1 366 1 48 1 313 1 88 1 215 1 90 3 91 1 347 1 348 1 93 1 216 1 323 1 269 1 300 1 
301 1 104 1 364 1 283 1 366 1 155 1 48 1 19 2 247 1 172 1 157 1 215 1 90 2 348 1 93 1 216 2 269 1 134 1 
364 1 283 1 82 1 366 1 155 1 48 1 19 2 247 1 172 1 88 1 251 1 215 1 90 2 72 2 348 1 299 1 93 1 134 1 
283 1 155 1 19 2 247 2 172 1 157 1 251 1 72 2 134 2 104 1 364 1 82 1 366 1 48 2 88 1 215 1 90 4 348 2 216 2 93 1 269 1 300 1 
301 1 104 1 364 1 283 1 366 1 48 1 19 2 247 1 106 1 172 1 157 1 215 1 90 2 348 1 93 1 216 2 269 1 134 1 
364 1 283 1 82 1 366 1 48 1 19 2 247 1 106 1 172 1 88 1 251 1 215 1 90 2 72 2 348 1 299 1 93 1 134 1 
283 1 19 2 247 2 172 1 157 1 251 1 72 2 134 2 104 1 364 1 82 1 366 1 48 2 106 1 88 1 215 1 90 4 348 2 216 2 93 1 269 1 300 1 
104 1 364 1 283 1 82 1 366 1 48 2 19 2 247 2 172 1 157 1 88 1 251 1 215 1 90 4 72 2 348 2 93 1 216 2 269 1 134 2 300 1 
283 1 327 1 328 1 19 2 65 1 172 1 67 1 197 1 101 1 229 1 72 1 205 1 339 1 362 1 78 1 209 1 364 1 182 1 366 1 237 1 9 1 215 1 372 1 90 2 347 1 216 1 93 1 169 1 
283 1 327 1 353 1 328 1 19 2 65 1 226 1 172 1 197 1 101 1 229 1 72 1 205 1 362 1 78 1 209 1 364 1 182 1 366 1 237 1 215 1 372 1 90 2 240 1 347 1 216 1 93 1 169 1 
17 1 283 1 19 2 247 2 172 1 157 1 251 1 72 2 134 2 104 1 364 1 82 1 366 1 48 2 88 1 215 1 90 4 348 2 216 2 93 1 269 1 300 1 
283 1 327 1 19 2 247 2 65 1 172 1 157 1 67 1 197 1 101 1 251 1 229 1 72 2 339 1 75 1 362 1 231 1 134 2 78 1 104 1 209 1 364 1 82 1 182 1 366 1 48 2 9 1 88 1 215 1 90 4 347 1 348 2 216 2 93 1 269 1 169 1 300 1 
17 1 283 1 19 2 247 1 172 1 157 1 72 1 309 1 254 1 275 1 134 1 104 1 364 1 82 1 182 1 257 1 366 1 48 1 88 1 215 1 90 3 91 1 347 1 348 1 93 1 216 2 323 1 269 1 300 1 
121 1 150 1 302 4 283 3 19 6 305 1 172 3 157 4 174 1 288 1 199 1 251 4 203 1 131 1 72 21 360 1 340 3 8 1 104 4 364 3 105 1 82 5 135 3 366 3 136 1 137 1 210 1 311 4 53 1 107 1 314 1 86 1 166 1 315 1 88 4 346 2 90 41 144 1 320 1 348 8 216 20 269 5 300 4 
121 1 150 1 302 4 283 4 19 8 305 1 172 4 157 3 174 1 288 1 199 1 251 4 203 1 131 1 72 18 360 1 340 3 8 1 104 4 364 4 105 1 82 4 135 3 366 4 136 1 137 1 210 1 311 4 53 1 107 1 314 1 86 1 166 2 315 1 88 3 346 2 90 38 144 1 320 1 348 7 216 20 269 5 300 4 
121 1 302 4 283 2 19 4 305 1 172 2 157 7 174 1 288 2 199 1 251 7 203 1 72 25 360 1 161 2 340 4 8 1 104 7 364 2 105 1 82 8 135 2 366 2 136 1 137 1 210 1 311 4 53 1 107 1 314 1 86 1 166 1 315 1 88 7 346 1 90 52 144 1 320 1 348 14 216 27 269 8 300 7 
121 2 150 1 302 2 283 2 19 4 305 1 172 2 157 3 288 1 336 1 251 3 72 10 340 1 8 1 104 3 364 2 82 3 135 1 366 2 311 2 107 1 86 1 315 1 88 3 346 1 90 19 348 6 216 9 269 3 300 3 
121 1 302 4 283 3 19 6 305 1 172 3 157 2 174 1 251 2 203 1 72 12 360 1 340 2 8 1 104 3 364 3 82 2 366 3 135 2 136 1 210 1 311 2 107 1 86 2 166 2 315 1 88 2 346 2 90 26 320 1 348 4 216 14 269 3 300 3 
109 1 100 1 316 1 295 1 204 1 47 1 331 1 57 1 282 1 87 1 
260 1 236 1 
100 1 175 1 303 1 204 1 47 1 331 1 57 1 7 1 87 1 
331 1 47 1 139 1 273 2 87 1 109 1 289 1 100 1 316 1 10 1 337 1 184 1 204 1 73 1 187 1 57 1 282 1 119 1 
331 1 47 1 139 1 273 2 87 1 109 1 289 1 100 1 316 1 10 1 337 1 184 1 204 1 73 1 187 1 57 1 282 1 119 1 
331 1 47 1 139 1 273 2 87 1 109 1 289 1 100 1 316 1 10 1 337 1 184 1 204 1 73 1 187 1 57 1 282 1 119 1 
24 1 179 1 281 1 
24 1 179 1 281 1 
253 1 114 1 
253 1 114 1 179 1 
318 1 92 1 
331 1 246 1 126 1 273 1 289 1 69 1 100 1 337 1 204 1 205 1 73 1 309 2 275 2 182 2 47 1 260 1 141 1 236 1 87 1 10 1 347 2 91 2 318 1 35 1 92 1 57 1 267 1 
24 1 281 1 
253 1 114 1 179 1 
62 1 17 1 283 1 19 2 97 2 21 1 172 1 197 1 101 2 229 1 72 1 362 1 78 1 208 1 209 2 364 1 182 2 366 1 52 1 51 1 54 1 237 1 345 1 215 1 372 1 90 2 347 2 91 2 93 1 216 1 169 2 
153 1 209 2 192 1 40 1 296 1 234 1 342 2 64 1 22 1 197 1 249 1 263 1 101 2 280 1 167 1 362 1 321 1 231 1 169 2 
153 1 209 1 192 1 40 1 234 1 342 2 64 1 370 1 22 1 249 1 197 1 101 1 280 1 167 1 321 1 362 1 169 1 
78 1 181 1 209 1 328 1 125 1 197 1 263 1 101 1 229 1 280 1 362 1 16 1 169 1 206 1 
153 1 209 1 192 1 40 1 296 1 234 1 342 2 64 1 22 1 197 1 249 1 263 1 101 1 280 1 167 1 321 1 362 1 169 1 
235 1 
98 1 
220 1 351 1 193 1 18 1 194 1 128 1 335 1 337 1 292 1 230 1 277 1 344 1 55 1 10 1 187 2 149 1 118 1 
95 1 245 2 193 4 327 1 328 1 3 2 197 2 101 2 335 4 201 2 337 5 292 9 338 6 6 2 160 2 341 2 104 2 209 2 165 1 49 6 344 5 262 2 212 1 108 2 55 12 10 5 12 2 14 1 118 4 269 2 169 2 300 2 351 6 18 3 128 8 66 1 229 1 25 3 230 4 74 1 362 1 231 1 78 6 82 2 31 1 143 2 88 2 33 1 371 2 187 8 149 2 190 1 
123 1 351 8 193 2 18 1 128 8 174 1 288 1 335 2 337 1 292 13 203 1 338 8 230 2 161 1 340 2 341 1 104 4 82 4 164 1 135 1 136 1 210 1 49 8 344 1 311 2 55 13 143 5 88 4 10 1 12 1 187 7 320 1 190 1 149 2 118 2 269 4 300 4 
39 1 193 1 284 1 41 1 128 2 227 1 335 1 337 1 200 1 292 2 230 1 309 1 275 1 182 1 82 1 137 1 53 1 143 2 314 1 10 1 347 1 91 1 186 1 12 1 268 1 118 1 269 2 323 1 
335 1 292 1 193 1 187 1 230 1 149 1 14 1 128 1 118 1 66 1 
104 2 245 1 351 5 82 2 49 5 128 5 55 10 143 2 88 2 292 5 12 1 338 5 187 5 269 2 300 2 
337 1 10 1 18 1 187 1 149 1 344 1 
193 2 328 2 18 2 125 1 128 2 173 1 197 1 250 1 101 2 229 1 335 2 337 3 292 2 230 1 362 1 162 1 206 1 78 1 341 2 209 2 344 4 31 1 33 2 10 3 113 1 115 1 190 2 118 2 169 2 
283 1 328 1 327 1 19 2 65 1 172 1 67 1 197 1 101 1 229 1 200 1 72 1 205 1 339 1 362 1 309 2 275 2 78 1 364 1 209 1 182 3 366 1 211 1 9 1 215 1 372 1 90 1 347 3 91 2 93 1 323 2 169 1 
341 1 351 2 193 1 49 2 128 2 55 4 335 1 292 1 144 1 338 2 230 1 187 4 149 2 190 1 118 1 
204 1 47 1 225 1 
204 1 47 1 225 1 
122 1 204 1 318 1 47 1 282 1 
204 1 47 1 225 1 
204 1 47 1 279 1 
204 1 47 1 279 1 
204 1 47 1 279 1 
204 1 47 1 
100 1 331 1 
283 1 19 2 172 1 199 1 251 2 203 1 72 4 340 1 364 1 105 1 82 1 135 1 366 1 137 1 311 1 53 1 107 1 314 1 90 8 144 1 348 2 216 4 269 1 
283 2 19 4 172 2 157 1 288 1 251 2 199 1 203 1 72 5 133 1 340 1 104 1 364 2 105 1 82 1 135 1 366 2 137 1 311 2 53 1 107 1 314 1 90 11 144 1 348 3 216 6 269 2 300 1 
283 3 19 6 172 3 157 1 174 1 199 1 251 3 203 1 72 10 133 1 340 1 104 2 364 3 105 1 82 3 135 1 366 3 136 1 137 1 210 1 311 1 53 1 107 1 314 1 166 1 88 2 90 19 144 1 320 1 348 4 216 9 269 3 300 2 
283 3 19 6 172 3 157 2 174 1 199 1 251 3 203 1 72 7 133 1 340 1 104 2 364 3 105 1 82 2 135 1 366 3 136 1 137 1 210 1 311 1 53 1 107 1 314 1 166 1 88 1 90 17 144 1 320 1 348 5 216 10 269 3 300 2 
283 1 19 2 172 1 199 1 251 2 203 1 72 4 340 1 364 1 105 1 82 1 135 1 366 1 137 1 311 1 53 1 107 1 314 1 90 8 144 1 348 2 216 4 269 1 
283 1 19 2 172 1 157 1 174 1 251 1 203 1 72 6 340 1 104 2 364 1 82 2 135 1 366 1 136 1 210 1 311 1 107 1 88 2 90 12 320 1 348 2 216 6 269 2 300 2 
283 4 19 8 172 4 157 2 174 1 199 1 251 3 203 1 72 8 133 1 340 1 104 2 364 4 105 1 82 2 135 1 366 4 136 1 137 1 210 1 311 1 53 1 107 1 314 1 166 2 88 1 90 18 144 1 320 1 348 5 216 10 269 3 300 2 
150 1 283 4 19 8 172 4 157 3 174 1 251 3 203 1 72 7 340 1 104 3 364 4 82 2 135 1 366 4 136 1 210 1 311 1 107 1 166 2 88 2 90 16 320 1 348 6 216 9 269 3 300 3 
105 2 82 1 137 1 53 3 157 3 314 3 199 1 251 3 90 7 72 4 348 6 216 3 269 1 
150 1 283 4 19 8 172 4 157 1 174 1 199 1 251 3 203 1 72 8 340 1 104 2 364 4 105 1 82 2 135 1 366 4 136 1 137 1 210 1 311 1 53 1 107 1 314 1 166 2 88 1 90 18 144 1 320 1 348 4 216 10 269 3 300 2 
364 2 283 2 105 1 82 1 366 2 137 1 19 4 172 2 157 1 53 1 314 1 166 1 251 2 199 1 90 8 144 1 72 4 348 3 216 4 269 1 
98 1 
104 1 364 1 283 1 82 1 366 1 19 2 172 1 157 1 88 1 251 1 90 4 72 2 348 2 216 2 133 1 269 1 300 1 
104 1 82 1 135 1 311 2 157 1 288 1 88 1 251 1 90 7 72 4 348 2 216 3 340 1 269 1 300 1 
283 2 156 1 19 4 172 2 157 4 288 1 199 1 251 5 72 12 161 1 340 2 104 2 364 2 105 1 82 3 366 2 137 1 311 2 53 2 312 1 314 2 166 2 88 2 90 23 144 1 348 9 216 11 269 3 300 2 
90 1 72 1 311 1 
90 1 216 1 340 1 
104 1 364 1 283 1 245 1 82 1 366 1 19 2 172 1 157 1 88 1 251 2 90 6 72 3 348 3 216 3 133 1 269 1 300 1 
283 1 19 2 172 1 157 1 174 1 251 1 203 1 72 6 340 1 104 2 364 1 82 2 135 1 366 1 136 1 210 1 311 1 107 1 88 2 90 12 320 1 348 2 216 6 269 2 300 2 
82 1 137 1 53 1 157 1 314 1 251 1 90 6 72 3 348 2 216 3 269 1 
364 1 105 1 283 1 366 1 156 1 19 2 172 1 157 1 53 1 314 1 166 1 251 1 199 1 90 3 72 2 348 2 216 1 
364 1 283 1 82 2 366 1 137 1 19 2 172 1 53 2 157 2 107 1 314 2 251 3 90 10 72 5 186 1 348 5 216 5 269 2 
104 1 364 1 283 1 366 1 19 2 172 1 157 1 107 1 90 2 348 1 216 2 269 1 
104 1 364 1 283 1 82 1 366 1 19 2 172 1 157 1 107 1 88 1 251 1 90 4 72 2 348 2 216 2 269 1 300 1 
150 1 364 3 283 3 366 3 156 1 19 6 172 3 53 1 157 1 107 1 314 1 166 1 251 1 90 3 72 2 348 2 216 1 
150 1 283 5 156 1 19 10 172 5 157 5 288 1 199 1 251 7 159 1 72 18 178 1 133 1 340 3 104 3 364 5 105 1 82 5 135 1 366 5 137 2 311 4 53 3 107 1 314 3 166 2 88 3 112 1 90 34 144 1 348 12 216 16 269 5 300 3 
213 1 334 1 182 1 347 1 91 1 205 1 117 1 
272 1 81 1 28 1 284 1 89 1 205 1 13 1 308 1 
209 1 101 1 328 1 98 1 169 1 
78 1 209 1 182 2 327 1 328 1 65 1 197 1 101 1 229 1 91 1 347 2 205 1 11 1 339 1 362 1 309 1 275 1 169 1 
33 1 182 1 347 1 91 1 11 1 309 1 275 1 
33 1 182 1 347 1 91 1 11 1 309 1 275 1 
33 1 337 1 10 1 
33 1 337 1 10 1 
197 1 209 1 101 1 375 1 362 1 169 1 
78 3 153 1 207 1 209 7 326 1 328 2 327 1 97 1 21 1 195 1 197 3 101 6 229 2 56 1 147 1 375 1 74 1 362 2 231 1 270 1 169 7 
17 1 283 2 327 1 19 4 247 1 65 1 172 2 67 1 197 1 101 1 251 2 199 1 229 1 72 3 205 2 75 1 339 1 362 1 309 1 231 1 275 1 134 1 78 1 208 1 364 2 209 1 105 1 82 1 182 2 366 2 137 1 48 1 53 1 297 1 314 1 9 1 215 2 90 6 144 1 347 2 91 1 11 1 348 2 216 3 93 2 269 1 169 1 
193 2 328 1 18 1 128 1 66 1 69 1 101 1 335 2 337 3 201 1 292 1 25 1 230 2 6 1 160 1 78 2 209 1 344 2 262 1 108 1 31 1 371 1 10 3 187 1 149 1 14 1 118 2 169 1 
78 2 209 2 327 1 165 1 262 1 197 2 101 2 229 1 375 1 74 1 362 1 231 1 169 2 
78 1 209 4 328 1 125 1 197 1 101 4 229 1 145 1 362 1 310 1 231 1 169 4 206 1 
78 1 209 1 327 1 224 1 195 1 197 2 101 1 33 1 229 1 361 1 362 1 45 1 270 1 169 1 
197 1 209 1 101 1 40 1 328 1 342 1 64 1 362 1 22 1 169 1 
197 1 78 1 153 1 209 2 101 2 229 1 345 1 362 1 21 1 231 1 169 2 
78 3 207 1 209 4 326 1 328 1 125 1 21 1 197 2 101 3 33 1 229 2 362 2 310 1 231 1 206 1 169 4 
78 3 209 4 326 1 328 1 125 1 21 1 42 1 197 2 101 3 33 1 229 2 362 2 310 1 231 1 206 1 169 4 
78 1 209 1 182 2 327 1 328 1 65 1 226 1 197 1 101 1 229 1 91 1 347 2 205 1 11 1 362 1 309 1 275 1 169 1 
33 1 
325 1 205 1 148 1 369 1 94 1 
120 1 325 2 191 1 284 1 368 1 83 1 127 1 369 2 69 1 130 1 371 1 10 2 337 2 205 1 187 1 148 1 149 1 180 1 94 2 
62 1 182 1 347 1 91 1 148 1 369 1 52 1 51 1 94 1 
120 1 130 1 148 1 
98 1 
32 1 214 1 110 1 286 1 76 1 84 1 37 1 
46 1 63 1 76 1 
32 1 214 1 110 1 357 1 319 1 259 1 286 1 76 3 43 2 84 3 37 1 68 1 
32 1 214 1 110 1 365 1 286 1 76 2 84 2 37 1 5 1 
151 1 214 1 110 1 342 1 234 1 259 1 64 1 171 1 76 1 84 1 37 1 
214 1 110 1 259 1 286 1 76 1 84 1 37 1 
32 1 214 1 110 1 259 1 286 2 76 1 84 1 
293 1 259 1 286 1 84 2 110 2 214 2 76 2 61 1 37 1 102 1 
32 1 214 1 110 1 1 1 352 1 233 1 259 1 286 1 171 1 76 3 84 3 37 2 5 2 
214 1 110 1 177 1 40 1 342 1 259 1 76 1 84 2 5 1 
32 1 214 2 110 2 352 1 365 1 259 1 286 1 171 1 354 1 76 4 84 4 37 2 5 2 
32 1 214 1 110 1 259 1 286 1 76 1 84 1 37 1 
352 1 286 2 171 1 43 1 84 4 333 1 5 2 32 2 110 1 214 1 357 1 319 1 76 4 37 3 
0 1 259 1 286 1 84 2 5 1 32 1 110 1 214 1 111 1 363 1 76 2 37 1 
285 1 259 1 286 1 84 3 43 2 32 1 110 1 214 1 357 2 319 1 76 3 37 1 
152 1 26 1 261 2 37 2 
214 1 110 1 356 1 259 1 76 1 84 1 
32 1 214 1 110 1 233 1 259 1 286 1 76 2 84 2 37 1 5 1 
80 1 
32 1 214 1 110 1 259 1 286 1 76 1 84 1 37 1 
233 1 259 1 286 1 84 3 43 1 5 1 32 1 110 1 214 1 76 3 37 1 
352 1 171 1 333 1 37 1 
286 1 37 1 
